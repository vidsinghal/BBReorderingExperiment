; ModuleID = 'samples/775.bc'
source_filename = "xmlsave.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._xmlNs = type { ptr, i32, ptr, ptr, ptr, ptr }
%struct._xmlSaveCtxt = type { ptr, i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, [61 x i8], i32, i32, ptr, ptr }
%struct._xmlOutputBuffer = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32 }
%struct._xmlDoc = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, i32, i32 }
%struct._xmlDtd = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct._xmlNode = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16 }
%struct._xmlAttr = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr }

@.str = private unnamed_addr constant [33 x i8] c"-//W3C//DTD XHTML 1.0 Strict//EN\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [35 x i8] c"-//W3C//DTD XHTML 1.0 Frameset//EN\00", align 1, !dbg !8
@.str.2 = private unnamed_addr constant [39 x i8] c"-//W3C//DTD XHTML 1.0 Transitional//EN\00", align 1, !dbg !13
@.str.3 = private unnamed_addr constant [50 x i8] c"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\00", align 1, !dbg !18
@.str.4 = private unnamed_addr constant [52 x i8] c"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\00", align 1, !dbg !23
@.str.5 = private unnamed_addr constant [56 x i8] c"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\00", align 1, !dbg !28
@xmlFree = external global ptr, align 8
@.str.6 = private unnamed_addr constant [6 x i8] c"&#10;\00", align 1, !dbg !33
@.str.7 = private unnamed_addr constant [6 x i8] c"&#13;\00", align 1, !dbg !38
@.str.8 = private unnamed_addr constant [5 x i8] c"&#9;\00", align 1, !dbg !40
@.str.9 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1, !dbg !45
@.str.10 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1, !dbg !50
@.str.11 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1, !dbg !52
@.str.12 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1, !dbg !54
@xmlMalloc = external global ptr, align 8
@.str.13 = private unnamed_addr constant [16 x i8] c"creating buffer\00", align 1, !dbg !56
@.str.14 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1, !dbg !61
@.str.15 = private unnamed_addr constant [16 x i8] c"creating output\00", align 1, !dbg !63
@.str.16 = private unnamed_addr constant [4 x i8] c"xml\00", align 1, !dbg !65
@.str.17 = private unnamed_addr constant [2 x i8] c" \00", align 1, !dbg !70
@.str.18 = private unnamed_addr constant [7 x i8] c"xmlns:\00", align 1, !dbg !75
@.str.19 = private unnamed_addr constant [6 x i8] c"xmlns\00", align 1, !dbg !77
@.str.20 = private unnamed_addr constant [2 x i8] c"=\00", align 1, !dbg !79
@.str.21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1, !dbg !81
@.str.22 = private unnamed_addr constant [24 x i8] c"creating saving context\00", align 1, !dbg !83
@.str.23 = private unnamed_addr constant [5 x i8] c"HTML\00", align 1, !dbg !88
@.str.24 = private unnamed_addr constant [15 x i8] c"<?xml version=\00", align 1, !dbg !90
@.str.25 = private unnamed_addr constant [6 x i8] c"\221.0\22\00", align 1, !dbg !95
@.str.26 = private unnamed_addr constant [11 x i8] c" encoding=\00", align 1, !dbg !97
@.str.27 = private unnamed_addr constant [17 x i8] c" standalone=\22no\22\00", align 1, !dbg !102
@.str.28 = private unnamed_addr constant [18 x i8] c" standalone=\22yes\22\00", align 1, !dbg !107
@.str.29 = private unnamed_addr constant [4 x i8] c"?>\0A\00", align 1, !dbg !112
@.str.30 = private unnamed_addr constant [25 x i8] c"creating encoding buffer\00", align 1, !dbg !114
@.str.31 = private unnamed_addr constant [39 x i8] c"xmlEscapeEntities : char out of range\0A\00", align 1, !dbg !119
@xmlStringTextNoenc = external constant [0 x i8], align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"<?\00", align 1, !dbg !121
@.str.33 = private unnamed_addr constant [3 x i8] c"?>\00", align 1, !dbg !126
@.str.34 = private unnamed_addr constant [5 x i8] c"<!--\00", align 1, !dbg !128
@.str.35 = private unnamed_addr constant [4 x i8] c"-->\00", align 1, !dbg !130
@.str.36 = private unnamed_addr constant [2 x i8] c"&\00", align 1, !dbg !132
@.str.37 = private unnamed_addr constant [2 x i8] c";\00", align 1, !dbg !134
@.str.38 = private unnamed_addr constant [13 x i8] c"<![CDATA[]]>\00", align 1, !dbg !136
@.str.39 = private unnamed_addr constant [10 x i8] c"<![CDATA[\00", align 1, !dbg !141
@.str.40 = private unnamed_addr constant [4 x i8] c"]]>\00", align 1, !dbg !146
@.str.41 = private unnamed_addr constant [2 x i8] c"<\00", align 1, !dbg !148
@.str.42 = private unnamed_addr constant [2 x i8] c":\00", align 1, !dbg !150
@.str.43 = private unnamed_addr constant [3 x i8] c"/>\00", align 1, !dbg !152
@.str.44 = private unnamed_addr constant [2 x i8] c">\00", align 1, !dbg !154
@.str.45 = private unnamed_addr constant [3 x i8] c"</\00", align 1, !dbg !156
@.str.46 = private unnamed_addr constant [11 x i8] c"<!DOCTYPE \00", align 1, !dbg !158
@.str.47 = private unnamed_addr constant [9 x i8] c" PUBLIC \00", align 1, !dbg !160
@.str.48 = private unnamed_addr constant [9 x i8] c" SYSTEM \00", align 1, !dbg !165
@.str.49 = private unnamed_addr constant [4 x i8] c" [\0A\00", align 1, !dbg !167
@.str.50 = private unnamed_addr constant [3 x i8] c"]>\00", align 1, !dbg !169
@.str.51 = private unnamed_addr constant [3 x i8] c"=\22\00", align 1, !dbg !171
@.str.52 = private unnamed_addr constant [2 x i8] c"\22\00", align 1, !dbg !173
@.str.53 = private unnamed_addr constant [24 x i8] c"string is not in UTF-8\0A\00", align 1, !dbg !175
@.str.54 = private unnamed_addr constant [25 x i8] c"invalid character value\0A\00", align 1, !dbg !177
@.str.55 = private unnamed_addr constant [21 x i8] c"unknown encoding %s\0A\00", align 1, !dbg !179
@.str.56 = private unnamed_addr constant [25 x i8] c"document has no DOCTYPE\0A\00", align 1, !dbg !184
@.str.57 = private unnamed_addr constant [25 x i8] c"unexpected error number\0A\00", align 1, !dbg !186
@xmlStringText = external constant [0 x i8], align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"html\00", align 1, !dbg !188
@.str.59 = private unnamed_addr constant [38 x i8] c" xmlns=\22http://www.w3.org/1999/xhtml\22\00", align 1, !dbg !190
@.str.60 = private unnamed_addr constant [5 x i8] c"head\00", align 1, !dbg !195
@.str.61 = private unnamed_addr constant [5 x i8] c"meta\00", align 1, !dbg !197
@.str.62 = private unnamed_addr constant [11 x i8] c"http-equiv\00", align 1, !dbg !199
@.str.63 = private unnamed_addr constant [13 x i8] c"Content-Type\00", align 1, !dbg !201
@.str.64 = private unnamed_addr constant [4 x i8] c" />\00", align 1, !dbg !203
@.str.65 = private unnamed_addr constant [61 x i8] c"<meta http-equiv=\22Content-Type\22 content=\22text/html; charset=\00", align 1, !dbg !205
@.str.66 = private unnamed_addr constant [5 x i8] c"\22 />\00", align 1, !dbg !210
@.str.67 = private unnamed_addr constant [3 x i8] c"id\00", align 1, !dbg !212
@.str.68 = private unnamed_addr constant [5 x i8] c"name\00", align 1, !dbg !214
@.str.69 = private unnamed_addr constant [5 x i8] c"lang\00", align 1, !dbg !216
@.str.70 = private unnamed_addr constant [2 x i8] c"a\00", align 1, !dbg !218
@.str.71 = private unnamed_addr constant [2 x i8] c"p\00", align 1, !dbg !220
@.str.72 = private unnamed_addr constant [4 x i8] c"div\00", align 1, !dbg !222
@.str.73 = private unnamed_addr constant [4 x i8] c"img\00", align 1, !dbg !224
@.str.74 = private unnamed_addr constant [4 x i8] c"map\00", align 1, !dbg !226
@.str.75 = private unnamed_addr constant [7 x i8] c"applet\00", align 1, !dbg !228
@.str.76 = private unnamed_addr constant [5 x i8] c"form\00", align 1, !dbg !230
@.str.77 = private unnamed_addr constant [6 x i8] c"frame\00", align 1, !dbg !232
@.str.78 = private unnamed_addr constant [7 x i8] c"iframe\00", align 1, !dbg !234
@.str.79 = private unnamed_addr constant [6 x i8] c" id=\22\00", align 1, !dbg !236
@.str.80 = private unnamed_addr constant [12 x i8] c" xml:lang=\22\00", align 1, !dbg !238
@.str.81 = private unnamed_addr constant [8 x i8] c" lang=\22\00", align 1, !dbg !243
@.str.82 = private unnamed_addr constant [29 x i8] c"http://www.w3.org/1999/xhtml\00", align 1, !dbg !248
@.str.83 = private unnamed_addr constant [5 x i8] c"area\00", align 1, !dbg !253
@.str.84 = private unnamed_addr constant [3 x i8] c"br\00", align 1, !dbg !255
@.str.85 = private unnamed_addr constant [5 x i8] c"base\00", align 1, !dbg !257
@.str.86 = private unnamed_addr constant [9 x i8] c"basefont\00", align 1, !dbg !259
@.str.87 = private unnamed_addr constant [4 x i8] c"col\00", align 1, !dbg !261
@.str.88 = private unnamed_addr constant [3 x i8] c"hr\00", align 1, !dbg !263
@.str.89 = private unnamed_addr constant [6 x i8] c"input\00", align 1, !dbg !265
@.str.90 = private unnamed_addr constant [8 x i8] c"isindex\00", align 1, !dbg !267
@.str.91 = private unnamed_addr constant [5 x i8] c"link\00", align 1, !dbg !269
@.str.92 = private unnamed_addr constant [6 x i8] c"param\00", align 1, !dbg !271

@xmlAttrSerializeTxtContent = alias void (ptr, ptr, ptr, ptr), ptr @xmlAttrSerializeTxtContent__internal_alias
@xmlBufNodeDump = alias i64 (ptr, ptr, ptr, i32, i32), ptr @xmlBufNodeDump__internal_alias
@xmlDocDump = alias i32 (ptr, ptr), ptr @xmlDocDump__internal_alias
@xmlDocDumpFormatMemory = alias void (ptr, ptr, ptr, i32), ptr @xmlDocDumpFormatMemory__internal_alias
@xmlDocDumpFormatMemoryEnc = alias void (ptr, ptr, ptr, ptr, i32), ptr @xmlDocDumpFormatMemoryEnc__internal_alias
@xmlDocDumpMemory = alias void (ptr, ptr, ptr), ptr @xmlDocDumpMemory__internal_alias
@xmlDocDumpMemoryEnc = alias void (ptr, ptr, ptr, ptr), ptr @xmlDocDumpMemoryEnc__internal_alias
@xmlDocFormatDump = alias i32 (ptr, ptr, i32), ptr @xmlDocFormatDump__internal_alias
@xmlElemDump = alias void (ptr, ptr, ptr), ptr @xmlElemDump__internal_alias
@xmlIsXHTML = alias i32 (ptr, ptr), ptr @xmlIsXHTML__internal_alias
@xmlNodeDump = alias i32 (ptr, ptr, ptr, i32, i32), ptr @xmlNodeDump__internal_alias
@xmlNodeDumpOutput = alias void (ptr, ptr, ptr, i32, i32, ptr), ptr @xmlNodeDumpOutput__internal_alias
@xmlSaveClose = alias i32 (ptr), ptr @xmlSaveClose__internal_alias
@xmlSaveDoc = alias i64 (ptr, ptr), ptr @xmlSaveDoc__internal_alias
@xmlSaveFile = alias i32 (ptr, ptr), ptr @xmlSaveFile__internal_alias
@xmlSaveFileEnc = alias i32 (ptr, ptr, ptr), ptr @xmlSaveFileEnc__internal_alias
@xmlSaveFileTo = alias i32 (ptr, ptr, ptr), ptr @xmlSaveFileTo__internal_alias
@xmlSaveFlush = alias i32 (ptr), ptr @xmlSaveFlush__internal_alias
@xmlSaveFormatFile = alias i32 (ptr, ptr, i32), ptr @xmlSaveFormatFile__internal_alias
@xmlSaveFormatFileEnc = alias i32 (ptr, ptr, ptr, i32), ptr @xmlSaveFormatFileEnc__internal_alias
@xmlSaveFormatFileTo = alias i32 (ptr, ptr, ptr, i32), ptr @xmlSaveFormatFileTo__internal_alias
@xmlSaveSetAttrEscape = alias i32 (ptr, ptr), ptr @xmlSaveSetAttrEscape__internal_alias
@xmlSaveSetEscape = alias i32 (ptr, ptr), ptr @xmlSaveSetEscape__internal_alias
@xmlSaveToBuffer = alias ptr (ptr, ptr, i32), ptr @xmlSaveToBuffer__internal_alias
@xmlSaveToFd = alias ptr (i32, ptr, i32), ptr @xmlSaveToFd__internal_alias
@xmlSaveToFilename = alias ptr (ptr, ptr, i32), ptr @xmlSaveToFilename__internal_alias
@xmlSaveToIO = alias ptr (ptr, ptr, ptr, ptr, i32), ptr @xmlSaveToIO__internal_alias
@xmlSaveTree = alias i64 (ptr, ptr), ptr @xmlSaveTree__internal_alias

; Function Attrs: nounwind uwtable
define hidden i32 @xmlIsXHTML__internal_alias(ptr noundef %systemID, ptr noundef %publicID) #0 !dbg !1465 {
entry:
  %retval = alloca i32, align 4
  %systemID.addr = alloca ptr, align 8
  %publicID.addr = alloca ptr, align 8
  store ptr %systemID, ptr %systemID.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %systemID.addr, metadata !1469, metadata !DIExpression()), !dbg !1475
  store ptr %publicID, ptr %publicID.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %publicID.addr, metadata !1470, metadata !DIExpression()), !dbg !1476
  %0 = load ptr, ptr %systemID.addr, align 8, !dbg !1477, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !1479
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1480

land.lhs.true:                                    ; preds = %entry
  %1 = load ptr, ptr %publicID.addr, align 8, !dbg !1481, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !1482
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1483

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, ptr %retval, align 4, !dbg !1484
  br label %return, !dbg !1484

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load ptr, ptr %publicID.addr, align 8, !dbg !1485, !tbaa !1471
  %cmp2 = icmp ne ptr %2, null, !dbg !1487
  br i1 %cmp2, label %if.then3, label %if.end14, !dbg !1488

if.then3:                                         ; preds = %if.end
  %3 = load ptr, ptr %publicID.addr, align 8, !dbg !1489, !tbaa !1471
  %call = call i32 @xmlStrEqual__internal_alias(ptr noundef %3, ptr noundef @.str), !dbg !1492
  %tobool = icmp ne i32 %call, 0, !dbg !1492
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !1493

if.then4:                                         ; preds = %if.then3
  store i32 1, ptr %retval, align 4, !dbg !1494
  br label %return, !dbg !1494

if.end5:                                          ; preds = %if.then3
  %4 = load ptr, ptr %publicID.addr, align 8, !dbg !1495, !tbaa !1471
  %call6 = call i32 @xmlStrEqual__internal_alias(ptr noundef %4, ptr noundef @.str.1), !dbg !1497
  %tobool7 = icmp ne i32 %call6, 0, !dbg !1497
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !1498

if.then8:                                         ; preds = %if.end5
  store i32 1, ptr %retval, align 4, !dbg !1499
  br label %return, !dbg !1499

if.end9:                                          ; preds = %if.end5
  %5 = load ptr, ptr %publicID.addr, align 8, !dbg !1500, !tbaa !1471
  %call10 = call i32 @xmlStrEqual__internal_alias(ptr noundef %5, ptr noundef @.str.2), !dbg !1502
  %tobool11 = icmp ne i32 %call10, 0, !dbg !1502
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !1503

if.then12:                                        ; preds = %if.end9
  store i32 1, ptr %retval, align 4, !dbg !1504
  br label %return, !dbg !1504

if.end13:                                         ; preds = %if.end9
  br label %if.end14, !dbg !1505

if.end14:                                         ; preds = %if.end13, %if.end
  %6 = load ptr, ptr %systemID.addr, align 8, !dbg !1506, !tbaa !1471
  %cmp15 = icmp ne ptr %6, null, !dbg !1508
  br i1 %cmp15, label %if.then16, label %if.end29, !dbg !1509

if.then16:                                        ; preds = %if.end14
  %7 = load ptr, ptr %systemID.addr, align 8, !dbg !1510, !tbaa !1471
  %call17 = call i32 @xmlStrEqual__internal_alias(ptr noundef %7, ptr noundef @.str.3), !dbg !1513
  %tobool18 = icmp ne i32 %call17, 0, !dbg !1513
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !1514

if.then19:                                        ; preds = %if.then16
  store i32 1, ptr %retval, align 4, !dbg !1515
  br label %return, !dbg !1515

if.end20:                                         ; preds = %if.then16
  %8 = load ptr, ptr %systemID.addr, align 8, !dbg !1516, !tbaa !1471
  %call21 = call i32 @xmlStrEqual__internal_alias(ptr noundef %8, ptr noundef @.str.4), !dbg !1518
  %tobool22 = icmp ne i32 %call21, 0, !dbg !1518
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !1519

if.then23:                                        ; preds = %if.end20
  store i32 1, ptr %retval, align 4, !dbg !1520
  br label %return, !dbg !1520

if.end24:                                         ; preds = %if.end20
  %9 = load ptr, ptr %systemID.addr, align 8, !dbg !1521, !tbaa !1471
  %call25 = call i32 @xmlStrEqual__internal_alias(ptr noundef %9, ptr noundef @.str.5), !dbg !1523
  %tobool26 = icmp ne i32 %call25, 0, !dbg !1523
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !1524

if.then27:                                        ; preds = %if.end24
  store i32 1, ptr %retval, align 4, !dbg !1525
  br label %return, !dbg !1525

if.end28:                                         ; preds = %if.end24
  br label %if.end29, !dbg !1526

if.end29:                                         ; preds = %if.end28, %if.end14
  store i32 0, ptr %retval, align 4, !dbg !1527
  br label %return, !dbg !1527

return:                                           ; preds = %if.end29, %if.then27, %if.then23, %if.then19, %if.then12, %if.then8, %if.then4, %if.then
  %10 = load i32, ptr %retval, align 4, !dbg !1528
  ret i32 %10, !dbg !1528
}

declare !dbg !1529 hidden i32 @xmlStrEqual__internal_alias(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define void @xmlBufDumpNotationTable(ptr noundef %buf, ptr noundef %table) #0 !dbg !1531 {
entry:
  %buf.addr = alloca ptr, align 8
  %table.addr = alloca ptr, align 8
  %buffer = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !1535, metadata !DIExpression()), !dbg !1549
  store ptr %table, ptr %table.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %table.addr, metadata !1536, metadata !DIExpression()), !dbg !1550
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #6, !dbg !1551
  tail call void @llvm.dbg.declare(metadata ptr %buffer, metadata !1537, metadata !DIExpression()), !dbg !1552
  %call = call ptr @xmlBufferCreate__internal_alias(), !dbg !1553
  store ptr %call, ptr %buffer, align 8, !dbg !1554, !tbaa !1471
  %0 = load ptr, ptr %buffer, align 8, !dbg !1555, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !1557
  br i1 %cmp, label %if.then, label %if.end, !dbg !1558

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1559

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %buffer, align 8, !dbg !1561, !tbaa !1471
  %2 = load ptr, ptr %table.addr, align 8, !dbg !1562, !tbaa !1471
  call void @xmlDumpNotationTable__internal_alias(ptr noundef %1, ptr noundef %2), !dbg !1563
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !1564, !tbaa !1471
  %4 = load ptr, ptr %buffer, align 8, !dbg !1565, !tbaa !1471
  %call1 = call i32 @xmlBufMergeBuffer(ptr noundef %3, ptr noundef %4), !dbg !1566
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1567
  br label %cleanup, !dbg !1567

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6, !dbg !1567
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !1567

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

declare !dbg !1568 hidden ptr @xmlBufferCreate__internal_alias() #1

declare !dbg !1571 hidden void @xmlDumpNotationTable__internal_alias(ptr noundef, ptr noundef) #1

declare !dbg !1574 i32 @xmlBufMergeBuffer(ptr noundef, ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind uwtable
define void @xmlBufDumpElementDecl(ptr noundef %buf, ptr noundef %elem) #0 !dbg !1578 {
entry:
  %buf.addr = alloca ptr, align 8
  %elem.addr = alloca ptr, align 8
  %buffer = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !1582, metadata !DIExpression()), !dbg !1585
  store ptr %elem, ptr %elem.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %elem.addr, metadata !1583, metadata !DIExpression()), !dbg !1586
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #6, !dbg !1587
  tail call void @llvm.dbg.declare(metadata ptr %buffer, metadata !1584, metadata !DIExpression()), !dbg !1588
  %call = call ptr @xmlBufferCreate__internal_alias(), !dbg !1589
  store ptr %call, ptr %buffer, align 8, !dbg !1590, !tbaa !1471
  %0 = load ptr, ptr %buffer, align 8, !dbg !1591, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !1593
  br i1 %cmp, label %if.then, label %if.end, !dbg !1594

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1595

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %buffer, align 8, !dbg !1597, !tbaa !1471
  %2 = load ptr, ptr %elem.addr, align 8, !dbg !1598, !tbaa !1471
  call void @xmlDumpElementDecl__internal_alias(ptr noundef %1, ptr noundef %2), !dbg !1599
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !1600, !tbaa !1471
  %4 = load ptr, ptr %buffer, align 8, !dbg !1601, !tbaa !1471
  %call1 = call i32 @xmlBufMergeBuffer(ptr noundef %3, ptr noundef %4), !dbg !1602
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1603
  br label %cleanup, !dbg !1603

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6, !dbg !1603
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !1603

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !1604 hidden void @xmlDumpElementDecl__internal_alias(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define void @xmlBufDumpAttributeDecl(ptr noundef %buf, ptr noundef %attr) #0 !dbg !1607 {
entry:
  %buf.addr = alloca ptr, align 8
  %attr.addr = alloca ptr, align 8
  %buffer = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !1611, metadata !DIExpression()), !dbg !1614
  store ptr %attr, ptr %attr.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %attr.addr, metadata !1612, metadata !DIExpression()), !dbg !1615
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #6, !dbg !1616
  tail call void @llvm.dbg.declare(metadata ptr %buffer, metadata !1613, metadata !DIExpression()), !dbg !1617
  %call = call ptr @xmlBufferCreate__internal_alias(), !dbg !1618
  store ptr %call, ptr %buffer, align 8, !dbg !1619, !tbaa !1471
  %0 = load ptr, ptr %buffer, align 8, !dbg !1620, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !1622
  br i1 %cmp, label %if.then, label %if.end, !dbg !1623

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1624

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %buffer, align 8, !dbg !1626, !tbaa !1471
  %2 = load ptr, ptr %attr.addr, align 8, !dbg !1627, !tbaa !1471
  call void @xmlDumpAttributeDecl__internal_alias(ptr noundef %1, ptr noundef %2), !dbg !1628
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !1629, !tbaa !1471
  %4 = load ptr, ptr %buffer, align 8, !dbg !1630, !tbaa !1471
  %call1 = call i32 @xmlBufMergeBuffer(ptr noundef %3, ptr noundef %4), !dbg !1631
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1632
  br label %cleanup, !dbg !1632

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6, !dbg !1632
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !1632

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !1633 hidden void @xmlDumpAttributeDecl__internal_alias(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define void @xmlBufDumpEntityDecl(ptr noundef %buf, ptr noundef %ent) #0 !dbg !1636 {
entry:
  %buf.addr = alloca ptr, align 8
  %ent.addr = alloca ptr, align 8
  %buffer = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !1640, metadata !DIExpression()), !dbg !1643
  store ptr %ent, ptr %ent.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ent.addr, metadata !1641, metadata !DIExpression()), !dbg !1644
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #6, !dbg !1645
  tail call void @llvm.dbg.declare(metadata ptr %buffer, metadata !1642, metadata !DIExpression()), !dbg !1646
  %call = call ptr @xmlBufferCreate__internal_alias(), !dbg !1647
  store ptr %call, ptr %buffer, align 8, !dbg !1648, !tbaa !1471
  %0 = load ptr, ptr %buffer, align 8, !dbg !1649, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !1651
  br i1 %cmp, label %if.then, label %if.end, !dbg !1652

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1653

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %buffer, align 8, !dbg !1655, !tbaa !1471
  %2 = load ptr, ptr %ent.addr, align 8, !dbg !1656, !tbaa !1471
  call void @xmlDumpEntityDecl__internal_alias(ptr noundef %1, ptr noundef %2), !dbg !1657
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !1658, !tbaa !1471
  %4 = load ptr, ptr %buffer, align 8, !dbg !1659, !tbaa !1471
  %call1 = call i32 @xmlBufMergeBuffer(ptr noundef %3, ptr noundef %4), !dbg !1660
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1661
  br label %cleanup, !dbg !1661

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6, !dbg !1661
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !1661

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !1662 hidden void @xmlDumpEntityDecl__internal_alias(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define void @xmlNsListDumpOutput(ptr noundef %buf, ptr noundef %cur) #0 !dbg !1665 {
entry:
  %buf.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !1669, metadata !DIExpression()), !dbg !1671
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !1670, metadata !DIExpression()), !dbg !1672
  br label %while.cond, !dbg !1673

while.cond:                                       ; preds = %while.body, %entry
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !1674, !tbaa !1471
  %cmp = icmp ne ptr %0, null, !dbg !1675
  br i1 %cmp, label %while.body, label %while.end, !dbg !1673

while.body:                                       ; preds = %while.cond
  %1 = load ptr, ptr %buf.addr, align 8, !dbg !1676, !tbaa !1471
  %2 = load ptr, ptr %cur.addr, align 8, !dbg !1678, !tbaa !1471
  call void @xmlNsDumpOutput(ptr noundef %1, ptr noundef %2, ptr noundef null), !dbg !1679
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !1680, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNs, ptr %3, i32 0, i32 0, !dbg !1681
  %4 = load ptr, ptr %next, align 8, !dbg !1681, !tbaa !1682
  store ptr %4, ptr %cur.addr, align 8, !dbg !1684, !tbaa !1471
  br label %while.cond, !dbg !1673, !llvm.loop !1685

while.end:                                        ; preds = %while.cond
  ret void, !dbg !1688
}

; Function Attrs: nounwind uwtable
define internal void @xmlNsDumpOutput(ptr noundef %buf, ptr noundef %cur, ptr noundef %ctxt) #0 !dbg !1689 {
entry:
  %buf.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %ctxt.addr = alloca ptr, align 8
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !1693, metadata !DIExpression()), !dbg !1696
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !1694, metadata !DIExpression()), !dbg !1697
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !1695, metadata !DIExpression()), !dbg !1698
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !1699, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !1701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1702

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %buf.addr, align 8, !dbg !1703, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !1704
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1705

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end25, !dbg !1706

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %cur.addr, align 8, !dbg !1707, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlNs, ptr %2, i32 0, i32 1, !dbg !1709
  %3 = load i32, ptr %type, align 8, !dbg !1709, !tbaa !1710
  %cmp2 = icmp eq i32 %3, 18, !dbg !1711
  br i1 %cmp2, label %land.lhs.true, label %if.end25, !dbg !1712

land.lhs.true:                                    ; preds = %if.end
  %4 = load ptr, ptr %cur.addr, align 8, !dbg !1713, !tbaa !1471
  %href = getelementptr inbounds %struct._xmlNs, ptr %4, i32 0, i32 2, !dbg !1714
  %5 = load ptr, ptr %href, align 8, !dbg !1714, !tbaa !1715
  %cmp3 = icmp ne ptr %5, null, !dbg !1716
  br i1 %cmp3, label %if.then4, label %if.end25, !dbg !1717

if.then4:                                         ; preds = %land.lhs.true
  %6 = load ptr, ptr %cur.addr, align 8, !dbg !1718, !tbaa !1471
  %prefix = getelementptr inbounds %struct._xmlNs, ptr %6, i32 0, i32 3, !dbg !1721
  %7 = load ptr, ptr %prefix, align 8, !dbg !1721, !tbaa !1722
  %call = call i32 @xmlStrEqual__internal_alias(ptr noundef %7, ptr noundef @.str.16), !dbg !1723
  %tobool = icmp ne i32 %call, 0, !dbg !1723
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !1724

if.then5:                                         ; preds = %if.then4
  br label %if.end25, !dbg !1725

if.end6:                                          ; preds = %if.then4
  %8 = load ptr, ptr %ctxt.addr, align 8, !dbg !1726, !tbaa !1471
  %cmp7 = icmp ne ptr %8, null, !dbg !1728
  br i1 %cmp7, label %land.lhs.true8, label %if.else, !dbg !1729

land.lhs.true8:                                   ; preds = %if.end6
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !1730, !tbaa !1471
  %format = getelementptr inbounds %struct._xmlSaveCtxt, ptr %9, i32 0, i32 9, !dbg !1731
  %10 = load i32, ptr %format, align 8, !dbg !1731, !tbaa !1732
  %cmp9 = icmp eq i32 %10, 2, !dbg !1735
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !1736

if.then10:                                        ; preds = %land.lhs.true8
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !1737, !tbaa !1471
  call void @xmlOutputBufferWriteWSNonSig(ptr noundef %11, i32 noundef 2), !dbg !1738
  br label %if.end12, !dbg !1738

if.else:                                          ; preds = %land.lhs.true8, %if.end6
  %12 = load ptr, ptr %buf.addr, align 8, !dbg !1739, !tbaa !1471
  %call11 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %12, i32 noundef 1, ptr noundef @.str.17), !dbg !1740
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then10
  %13 = load ptr, ptr %cur.addr, align 8, !dbg !1741, !tbaa !1471
  %prefix13 = getelementptr inbounds %struct._xmlNs, ptr %13, i32 0, i32 3, !dbg !1743
  %14 = load ptr, ptr %prefix13, align 8, !dbg !1743, !tbaa !1722
  %cmp14 = icmp ne ptr %14, null, !dbg !1744
  br i1 %cmp14, label %if.then15, label %if.else19, !dbg !1745

if.then15:                                        ; preds = %if.end12
  %15 = load ptr, ptr %buf.addr, align 8, !dbg !1746, !tbaa !1471
  %call16 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %15, i32 noundef 6, ptr noundef @.str.18), !dbg !1748
  %16 = load ptr, ptr %buf.addr, align 8, !dbg !1749, !tbaa !1471
  %17 = load ptr, ptr %cur.addr, align 8, !dbg !1750, !tbaa !1471
  %prefix17 = getelementptr inbounds %struct._xmlNs, ptr %17, i32 0, i32 3, !dbg !1751
  %18 = load ptr, ptr %prefix17, align 8, !dbg !1751, !tbaa !1722
  %call18 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %16, ptr noundef %18), !dbg !1752
  br label %if.end21, !dbg !1753

if.else19:                                        ; preds = %if.end12
  %19 = load ptr, ptr %buf.addr, align 8, !dbg !1754, !tbaa !1471
  %call20 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %19, i32 noundef 5, ptr noundef @.str.19), !dbg !1755
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.then15
  %20 = load ptr, ptr %buf.addr, align 8, !dbg !1756, !tbaa !1471
  %call22 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %20, i32 noundef 1, ptr noundef @.str.20), !dbg !1757
  %21 = load ptr, ptr %buf.addr, align 8, !dbg !1758, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %21, i32 0, i32 4, !dbg !1759
  %22 = load ptr, ptr %buffer, align 8, !dbg !1759, !tbaa !1760
  %23 = load ptr, ptr %cur.addr, align 8, !dbg !1762, !tbaa !1471
  %href23 = getelementptr inbounds %struct._xmlNs, ptr %23, i32 0, i32 2, !dbg !1763
  %24 = load ptr, ptr %href23, align 8, !dbg !1763, !tbaa !1715
  %call24 = call i32 @xmlBufWriteQuotedString(ptr noundef %22, ptr noundef %24), !dbg !1764
  br label %if.end25, !dbg !1765

if.end25:                                         ; preds = %if.then, %if.then5, %if.end21, %land.lhs.true, %if.end
  ret void, !dbg !1766
}

; Function Attrs: nounwind uwtable
define hidden ptr @xmlSaveToFd__internal_alias(i32 noundef %fd, ptr noundef %encoding, i32 noundef %options) #0 !dbg !1767 {
entry:
  %retval = alloca ptr, align 8
  %fd.addr = alloca i32, align 4
  %encoding.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %fd, ptr %fd.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %fd.addr, metadata !1771, metadata !DIExpression()), !dbg !1776
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !1772, metadata !DIExpression()), !dbg !1777
  store i32 %options, ptr %options.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !1773, metadata !DIExpression()), !dbg !1778
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #6, !dbg !1779
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1774, metadata !DIExpression()), !dbg !1780
  %0 = load ptr, ptr %encoding.addr, align 8, !dbg !1781, !tbaa !1471
  %1 = load i32, ptr %options.addr, align 4, !dbg !1782, !tbaa !1775
  %call = call ptr @xmlNewSaveCtxt(ptr noundef %0, i32 noundef %1), !dbg !1783
  store ptr %call, ptr %ret, align 8, !dbg !1784, !tbaa !1471
  %2 = load ptr, ptr %ret, align 8, !dbg !1785, !tbaa !1471
  %cmp = icmp eq ptr %2, null, !dbg !1787
  br i1 %cmp, label %if.then, label %if.end, !dbg !1788

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !1789
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1789

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %fd.addr, align 4, !dbg !1790, !tbaa !1775
  %4 = load ptr, ptr %ret, align 8, !dbg !1791, !tbaa !1471
  %handler = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 5, !dbg !1792
  %5 = load ptr, ptr %handler, align 8, !dbg !1792, !tbaa !1793
  %call1 = call ptr @xmlOutputBufferCreateFd__internal_alias(i32 noundef %3, ptr noundef %5), !dbg !1794
  %6 = load ptr, ptr %ret, align 8, !dbg !1795, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %6, i32 0, i32 6, !dbg !1796
  store ptr %call1, ptr %buf, align 8, !dbg !1797, !tbaa !1798
  %7 = load ptr, ptr %ret, align 8, !dbg !1799, !tbaa !1471
  %buf2 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %7, i32 0, i32 6, !dbg !1801
  %8 = load ptr, ptr %buf2, align 8, !dbg !1801, !tbaa !1798
  %cmp3 = icmp eq ptr %8, null, !dbg !1802
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1803

if.then4:                                         ; preds = %if.end
  %9 = load ptr, ptr %ret, align 8, !dbg !1804, !tbaa !1471
  call void @xmlFreeSaveCtxt(ptr noundef %9), !dbg !1806
  store ptr null, ptr %retval, align 8, !dbg !1807
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1807

if.end5:                                          ; preds = %if.end
  %10 = load ptr, ptr %ret, align 8, !dbg !1808, !tbaa !1471
  store ptr %10, ptr %retval, align 8, !dbg !1809
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1809

cleanup:                                          ; preds = %if.end5, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #6, !dbg !1810
  %11 = load ptr, ptr %retval, align 8, !dbg !1810
  ret ptr %11, !dbg !1810
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlNewSaveCtxt(ptr noundef %encoding, i32 noundef %options) #0 !dbg !1811 {
entry:
  %retval = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !1815, metadata !DIExpression()), !dbg !1818
  store i32 %options, ptr %options.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !1816, metadata !DIExpression()), !dbg !1819
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #6, !dbg !1820
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1817, metadata !DIExpression()), !dbg !1821
  %0 = load ptr, ptr @xmlMalloc, align 8, !dbg !1822, !tbaa !1471
  %call = call ptr %0(i64 noundef 152), !dbg !1822
  store ptr %call, ptr %ret, align 8, !dbg !1823, !tbaa !1471
  %1 = load ptr, ptr %ret, align 8, !dbg !1824, !tbaa !1471
  %cmp = icmp eq ptr %1, null, !dbg !1826
  br i1 %cmp, label %if.then, label %if.end, !dbg !1827

if.then:                                          ; preds = %entry
  call void @xmlSaveErrMemory(ptr noundef @.str.22), !dbg !1828
  store ptr null, ptr %retval, align 8, !dbg !1830
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1830

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %ret, align 8, !dbg !1831, !tbaa !1471
  call void @llvm.memset.p0.i64(ptr align 8 %2, i8 0, i64 152, i1 false), !dbg !1832
  %3 = load ptr, ptr %encoding.addr, align 8, !dbg !1833, !tbaa !1471
  %cmp1 = icmp ne ptr %3, null, !dbg !1835
  br i1 %cmp1, label %if.then2, label %if.end10, !dbg !1836

if.then2:                                         ; preds = %if.end
  %4 = load ptr, ptr %encoding.addr, align 8, !dbg !1837, !tbaa !1471
  %call3 = call ptr @xmlFindCharEncodingHandler__internal_alias(ptr noundef %4), !dbg !1839
  %5 = load ptr, ptr %ret, align 8, !dbg !1840, !tbaa !1471
  %handler = getelementptr inbounds %struct._xmlSaveCtxt, ptr %5, i32 0, i32 5, !dbg !1841
  store ptr %call3, ptr %handler, align 8, !dbg !1842, !tbaa !1793
  %6 = load ptr, ptr %ret, align 8, !dbg !1843, !tbaa !1471
  %handler4 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %6, i32 0, i32 5, !dbg !1845
  %7 = load ptr, ptr %handler4, align 8, !dbg !1845, !tbaa !1793
  %cmp5 = icmp eq ptr %7, null, !dbg !1846
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !1847

if.then6:                                         ; preds = %if.then2
  %8 = load ptr, ptr %encoding.addr, align 8, !dbg !1848, !tbaa !1471
  call void @xmlSaveErr(i32 noundef 1403, ptr noundef null, ptr noundef %8), !dbg !1850
  %9 = load ptr, ptr %ret, align 8, !dbg !1851, !tbaa !1471
  call void @xmlFreeSaveCtxt(ptr noundef %9), !dbg !1852
  store ptr null, ptr %retval, align 8, !dbg !1853
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1853

if.end7:                                          ; preds = %if.then2
  %10 = load ptr, ptr %encoding.addr, align 8, !dbg !1854, !tbaa !1471
  %call8 = call ptr @xmlStrdup__internal_alias(ptr noundef %10), !dbg !1855
  %11 = load ptr, ptr %ret, align 8, !dbg !1856, !tbaa !1471
  %encoding9 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %11, i32 0, i32 4, !dbg !1857
  store ptr %call8, ptr %encoding9, align 8, !dbg !1858, !tbaa !1859
  %12 = load ptr, ptr %ret, align 8, !dbg !1860, !tbaa !1471
  %escape = getelementptr inbounds %struct._xmlSaveCtxt, ptr %12, i32 0, i32 13, !dbg !1861
  store ptr null, ptr %escape, align 8, !dbg !1862, !tbaa !1863
  br label %if.end10, !dbg !1864

if.end10:                                         ; preds = %if.end7, %if.end
  %13 = load ptr, ptr %ret, align 8, !dbg !1865, !tbaa !1471
  call void @xmlSaveCtxtInit(ptr noundef %13), !dbg !1866
  %14 = load ptr, ptr %ret, align 8, !dbg !1867, !tbaa !1471
  %options11 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %14, i32 0, i32 7, !dbg !1869
  %15 = load i32, ptr %options11, align 8, !dbg !1869, !tbaa !1870
  %and = and i32 %15, 4, !dbg !1871
  %tobool = icmp ne i32 %and, 0, !dbg !1871
  br i1 %tobool, label %land.lhs.true, label %if.end15, !dbg !1872

land.lhs.true:                                    ; preds = %if.end10
  %16 = load i32, ptr %options.addr, align 4, !dbg !1873, !tbaa !1775
  %and12 = and i32 %16, 4, !dbg !1874
  %tobool13 = icmp ne i32 %and12, 0, !dbg !1874
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !1875

if.then14:                                        ; preds = %land.lhs.true
  %17 = load i32, ptr %options.addr, align 4, !dbg !1876, !tbaa !1775
  %or = or i32 %17, 4, !dbg !1876
  store i32 %or, ptr %options.addr, align 4, !dbg !1876, !tbaa !1775
  br label %if.end15, !dbg !1878

if.end15:                                         ; preds = %if.then14, %land.lhs.true, %if.end10
  %18 = load i32, ptr %options.addr, align 4, !dbg !1879, !tbaa !1775
  %19 = load ptr, ptr %ret, align 8, !dbg !1880, !tbaa !1471
  %options16 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %19, i32 0, i32 7, !dbg !1881
  store i32 %18, ptr %options16, align 8, !dbg !1882, !tbaa !1870
  %20 = load i32, ptr %options.addr, align 4, !dbg !1883, !tbaa !1775
  %and17 = and i32 %20, 1, !dbg !1885
  %tobool18 = icmp ne i32 %and17, 0, !dbg !1885
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !1886

if.then19:                                        ; preds = %if.end15
  %21 = load ptr, ptr %ret, align 8, !dbg !1887, !tbaa !1471
  %format = getelementptr inbounds %struct._xmlSaveCtxt, ptr %21, i32 0, i32 9, !dbg !1888
  store i32 1, ptr %format, align 8, !dbg !1889, !tbaa !1732
  br label %if.end25, !dbg !1887

if.else:                                          ; preds = %if.end15
  %22 = load i32, ptr %options.addr, align 4, !dbg !1890, !tbaa !1775
  %and20 = and i32 %22, 128, !dbg !1892
  %tobool21 = icmp ne i32 %and20, 0, !dbg !1892
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !1893

if.then22:                                        ; preds = %if.else
  %23 = load ptr, ptr %ret, align 8, !dbg !1894, !tbaa !1471
  %format23 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %23, i32 0, i32 9, !dbg !1895
  store i32 2, ptr %format23, align 8, !dbg !1896, !tbaa !1732
  br label %if.end24, !dbg !1894

if.end24:                                         ; preds = %if.then22, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then19
  %24 = load ptr, ptr %ret, align 8, !dbg !1897, !tbaa !1471
  store ptr %24, ptr %retval, align 8, !dbg !1898
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1898

cleanup:                                          ; preds = %if.end25, %if.then6, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #6, !dbg !1899
  %25 = load ptr, ptr %retval, align 8, !dbg !1899
  ret ptr %25, !dbg !1899
}

declare !dbg !1900 hidden ptr @xmlOutputBufferCreateFd__internal_alias(i32 noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @xmlFreeSaveCtxt(ptr noundef %ctxt) #0 !dbg !1903 {
entry:
  %ctxt.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !1907, metadata !DIExpression()), !dbg !1908
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !1909, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !1911
  br i1 %cmp, label %if.then, label %if.end, !dbg !1912

if.then:                                          ; preds = %entry
  br label %return, !dbg !1913

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !1914, !tbaa !1471
  %encoding = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 4, !dbg !1916
  %2 = load ptr, ptr %encoding, align 8, !dbg !1916, !tbaa !1859
  %cmp1 = icmp ne ptr %2, null, !dbg !1917
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !1918

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr @xmlFree, align 8, !dbg !1919, !tbaa !1471
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !1920, !tbaa !1471
  %encoding3 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 4, !dbg !1921
  %5 = load ptr, ptr %encoding3, align 8, !dbg !1921, !tbaa !1859
  call void %3(ptr noundef %5), !dbg !1919
  br label %if.end4, !dbg !1919

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !1922, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %6, i32 0, i32 6, !dbg !1924
  %7 = load ptr, ptr %buf, align 8, !dbg !1924, !tbaa !1798
  %cmp5 = icmp ne ptr %7, null, !dbg !1925
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !1926

if.then6:                                         ; preds = %if.end4
  %8 = load ptr, ptr %ctxt.addr, align 8, !dbg !1927, !tbaa !1471
  %buf7 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %8, i32 0, i32 6, !dbg !1928
  %9 = load ptr, ptr %buf7, align 8, !dbg !1928, !tbaa !1798
  %call = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %9), !dbg !1929
  br label %if.end8, !dbg !1929

if.end8:                                          ; preds = %if.then6, %if.end4
  %10 = load ptr, ptr @xmlFree, align 8, !dbg !1930, !tbaa !1471
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !1931, !tbaa !1471
  call void %10(ptr noundef %11), !dbg !1930
  br label %return, !dbg !1932

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !1932
}

; Function Attrs: nounwind uwtable
define hidden ptr @xmlSaveToFilename__internal_alias(ptr noundef %filename, ptr noundef %encoding, i32 noundef %options) #0 !dbg !1933 {
entry:
  %retval = alloca ptr, align 8
  %filename.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %compression = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !1937, metadata !DIExpression()), !dbg !1942
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !1938, metadata !DIExpression()), !dbg !1943
  store i32 %options, ptr %options.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !1939, metadata !DIExpression()), !dbg !1944
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #6, !dbg !1945
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1940, metadata !DIExpression()), !dbg !1946
  call void @llvm.lifetime.start.p0(i64 4, ptr %compression) #6, !dbg !1947
  tail call void @llvm.dbg.declare(metadata ptr %compression, metadata !1941, metadata !DIExpression()), !dbg !1948
  store i32 0, ptr %compression, align 4, !dbg !1948, !tbaa !1775
  %0 = load ptr, ptr %encoding.addr, align 8, !dbg !1949, !tbaa !1471
  %1 = load i32, ptr %options.addr, align 4, !dbg !1950, !tbaa !1775
  %call = call ptr @xmlNewSaveCtxt(ptr noundef %0, i32 noundef %1), !dbg !1951
  store ptr %call, ptr %ret, align 8, !dbg !1952, !tbaa !1471
  %2 = load ptr, ptr %ret, align 8, !dbg !1953, !tbaa !1471
  %cmp = icmp eq ptr %2, null, !dbg !1955
  br i1 %cmp, label %if.then, label %if.end, !dbg !1956

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !1957
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1957

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %filename.addr, align 8, !dbg !1958, !tbaa !1471
  %4 = load ptr, ptr %ret, align 8, !dbg !1959, !tbaa !1471
  %handler = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 5, !dbg !1960
  %5 = load ptr, ptr %handler, align 8, !dbg !1960, !tbaa !1793
  %6 = load i32, ptr %compression, align 4, !dbg !1961, !tbaa !1775
  %call1 = call ptr @xmlOutputBufferCreateFilename__internal_alias(ptr noundef %3, ptr noundef %5, i32 noundef %6), !dbg !1962
  %7 = load ptr, ptr %ret, align 8, !dbg !1963, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %7, i32 0, i32 6, !dbg !1964
  store ptr %call1, ptr %buf, align 8, !dbg !1965, !tbaa !1798
  %8 = load ptr, ptr %ret, align 8, !dbg !1966, !tbaa !1471
  %buf2 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %8, i32 0, i32 6, !dbg !1968
  %9 = load ptr, ptr %buf2, align 8, !dbg !1968, !tbaa !1798
  %cmp3 = icmp eq ptr %9, null, !dbg !1969
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1970

if.then4:                                         ; preds = %if.end
  %10 = load ptr, ptr %ret, align 8, !dbg !1971, !tbaa !1471
  call void @xmlFreeSaveCtxt(ptr noundef %10), !dbg !1973
  store ptr null, ptr %retval, align 8, !dbg !1974
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1974

if.end5:                                          ; preds = %if.end
  %11 = load ptr, ptr %ret, align 8, !dbg !1975, !tbaa !1471
  store ptr %11, ptr %retval, align 8, !dbg !1976
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1976

cleanup:                                          ; preds = %if.end5, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %compression) #6, !dbg !1977
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #6, !dbg !1977
  %12 = load ptr, ptr %retval, align 8, !dbg !1977
  ret ptr %12, !dbg !1977
}

declare !dbg !1978 hidden ptr @xmlOutputBufferCreateFilename__internal_alias(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define hidden ptr @xmlSaveToBuffer__internal_alias(ptr noundef %buffer, ptr noundef %encoding, i32 noundef %options) #0 !dbg !1981 {
entry:
  %retval = alloca ptr, align 8
  %buffer.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %out_buff = alloca ptr, align 8
  %handler = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buffer, ptr %buffer.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buffer.addr, metadata !1985, metadata !DIExpression()), !dbg !1991
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !1986, metadata !DIExpression()), !dbg !1992
  store i32 %options, ptr %options.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !1987, metadata !DIExpression()), !dbg !1993
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #6, !dbg !1994
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1988, metadata !DIExpression()), !dbg !1995
  call void @llvm.lifetime.start.p0(i64 8, ptr %out_buff) #6, !dbg !1996
  tail call void @llvm.dbg.declare(metadata ptr %out_buff, metadata !1989, metadata !DIExpression()), !dbg !1997
  call void @llvm.lifetime.start.p0(i64 8, ptr %handler) #6, !dbg !1998
  tail call void @llvm.dbg.declare(metadata ptr %handler, metadata !1990, metadata !DIExpression()), !dbg !1999
  %0 = load ptr, ptr %encoding.addr, align 8, !dbg !2000, !tbaa !1471
  %1 = load i32, ptr %options.addr, align 4, !dbg !2001, !tbaa !1775
  %call = call ptr @xmlNewSaveCtxt(ptr noundef %0, i32 noundef %1), !dbg !2002
  store ptr %call, ptr %ret, align 8, !dbg !2003, !tbaa !1471
  %2 = load ptr, ptr %ret, align 8, !dbg !2004, !tbaa !1471
  %cmp = icmp eq ptr %2, null, !dbg !2006
  br i1 %cmp, label %if.then, label %if.end, !dbg !2007

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !2008
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2008

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %encoding.addr, align 8, !dbg !2009, !tbaa !1471
  %cmp1 = icmp ne ptr %3, null, !dbg !2011
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !2012

if.then2:                                         ; preds = %if.end
  %4 = load ptr, ptr %encoding.addr, align 8, !dbg !2013, !tbaa !1471
  %call3 = call ptr @xmlFindCharEncodingHandler__internal_alias(ptr noundef %4), !dbg !2015
  store ptr %call3, ptr %handler, align 8, !dbg !2016, !tbaa !1471
  %5 = load ptr, ptr %handler, align 8, !dbg !2017, !tbaa !1471
  %cmp4 = icmp eq ptr %5, null, !dbg !2019
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2020

if.then5:                                         ; preds = %if.then2
  %6 = load ptr, ptr @xmlFree, align 8, !dbg !2021, !tbaa !1471
  %7 = load ptr, ptr %ret, align 8, !dbg !2023, !tbaa !1471
  call void %6(ptr noundef %7), !dbg !2021
  store ptr null, ptr %retval, align 8, !dbg !2024
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2024

if.end6:                                          ; preds = %if.then2
  br label %if.end7, !dbg !2025

if.else:                                          ; preds = %if.end
  store ptr null, ptr %handler, align 8, !dbg !2026, !tbaa !1471
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end6
  %8 = load ptr, ptr %buffer.addr, align 8, !dbg !2027, !tbaa !1471
  %9 = load ptr, ptr %handler, align 8, !dbg !2028, !tbaa !1471
  %call8 = call ptr @xmlOutputBufferCreateBuffer__internal_alias(ptr noundef %8, ptr noundef %9), !dbg !2029
  store ptr %call8, ptr %out_buff, align 8, !dbg !2030, !tbaa !1471
  %10 = load ptr, ptr %out_buff, align 8, !dbg !2031, !tbaa !1471
  %cmp9 = icmp eq ptr %10, null, !dbg !2033
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2034

if.then10:                                        ; preds = %if.end7
  %11 = load ptr, ptr @xmlFree, align 8, !dbg !2035, !tbaa !1471
  %12 = load ptr, ptr %ret, align 8, !dbg !2037, !tbaa !1471
  call void %11(ptr noundef %12), !dbg !2035
  %13 = load ptr, ptr %handler, align 8, !dbg !2038, !tbaa !1471
  %tobool = icmp ne ptr %13, null, !dbg !2038
  br i1 %tobool, label %if.then11, label %if.end13, !dbg !2040

if.then11:                                        ; preds = %if.then10
  %14 = load ptr, ptr %handler, align 8, !dbg !2041, !tbaa !1471
  %call12 = call i32 @xmlCharEncCloseFunc__internal_alias(ptr noundef %14), !dbg !2042
  br label %if.end13, !dbg !2042

if.end13:                                         ; preds = %if.then11, %if.then10
  store ptr null, ptr %retval, align 8, !dbg !2043
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2043

if.end14:                                         ; preds = %if.end7
  %15 = load ptr, ptr %out_buff, align 8, !dbg !2044, !tbaa !1471
  %16 = load ptr, ptr %ret, align 8, !dbg !2045, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %16, i32 0, i32 6, !dbg !2046
  store ptr %15, ptr %buf, align 8, !dbg !2047, !tbaa !1798
  %17 = load ptr, ptr %ret, align 8, !dbg !2048, !tbaa !1471
  store ptr %17, ptr %retval, align 8, !dbg !2049
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2049

cleanup:                                          ; preds = %if.end14, %if.end13, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %handler) #6, !dbg !2050
  call void @llvm.lifetime.end.p0(i64 8, ptr %out_buff) #6, !dbg !2050
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #6, !dbg !2050
  %18 = load ptr, ptr %retval, align 8, !dbg !2050
  ret ptr %18, !dbg !2050
}

declare !dbg !2051 hidden ptr @xmlFindCharEncodingHandler__internal_alias(ptr noundef) #1

declare !dbg !2054 hidden ptr @xmlOutputBufferCreateBuffer__internal_alias(ptr noundef, ptr noundef) #1

declare !dbg !2057 hidden i32 @xmlCharEncCloseFunc__internal_alias(ptr noundef) #1

; Function Attrs: nounwind uwtable
define hidden ptr @xmlSaveToIO__internal_alias(ptr noundef %iowrite, ptr noundef %ioclose, ptr noundef %ioctx, ptr noundef %encoding, i32 noundef %options) #0 !dbg !2060 {
entry:
  %retval = alloca ptr, align 8
  %iowrite.addr = alloca ptr, align 8
  %ioclose.addr = alloca ptr, align 8
  %ioctx.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iowrite, ptr %iowrite.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %iowrite.addr, metadata !2064, metadata !DIExpression()), !dbg !2070
  store ptr %ioclose, ptr %ioclose.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ioclose.addr, metadata !2065, metadata !DIExpression()), !dbg !2071
  store ptr %ioctx, ptr %ioctx.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ioctx.addr, metadata !2066, metadata !DIExpression()), !dbg !2072
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !2067, metadata !DIExpression()), !dbg !2073
  store i32 %options, ptr %options.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !2068, metadata !DIExpression()), !dbg !2074
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #6, !dbg !2075
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !2069, metadata !DIExpression()), !dbg !2076
  %0 = load ptr, ptr %encoding.addr, align 8, !dbg !2077, !tbaa !1471
  %1 = load i32, ptr %options.addr, align 4, !dbg !2078, !tbaa !1775
  %call = call ptr @xmlNewSaveCtxt(ptr noundef %0, i32 noundef %1), !dbg !2079
  store ptr %call, ptr %ret, align 8, !dbg !2080, !tbaa !1471
  %2 = load ptr, ptr %ret, align 8, !dbg !2081, !tbaa !1471
  %cmp = icmp eq ptr %2, null, !dbg !2083
  br i1 %cmp, label %if.then, label %if.end, !dbg !2084

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !2085
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2085

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %iowrite.addr, align 8, !dbg !2086, !tbaa !1471
  %4 = load ptr, ptr %ioclose.addr, align 8, !dbg !2087, !tbaa !1471
  %5 = load ptr, ptr %ioctx.addr, align 8, !dbg !2088, !tbaa !1471
  %6 = load ptr, ptr %ret, align 8, !dbg !2089, !tbaa !1471
  %handler = getelementptr inbounds %struct._xmlSaveCtxt, ptr %6, i32 0, i32 5, !dbg !2090
  %7 = load ptr, ptr %handler, align 8, !dbg !2090, !tbaa !1793
  %call1 = call ptr @xmlOutputBufferCreateIO__internal_alias(ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %7), !dbg !2091
  %8 = load ptr, ptr %ret, align 8, !dbg !2092, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %8, i32 0, i32 6, !dbg !2093
  store ptr %call1, ptr %buf, align 8, !dbg !2094, !tbaa !1798
  %9 = load ptr, ptr %ret, align 8, !dbg !2095, !tbaa !1471
  %buf2 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %9, i32 0, i32 6, !dbg !2097
  %10 = load ptr, ptr %buf2, align 8, !dbg !2097, !tbaa !1798
  %cmp3 = icmp eq ptr %10, null, !dbg !2098
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2099

if.then4:                                         ; preds = %if.end
  %11 = load ptr, ptr %ret, align 8, !dbg !2100, !tbaa !1471
  call void @xmlFreeSaveCtxt(ptr noundef %11), !dbg !2102
  store ptr null, ptr %retval, align 8, !dbg !2103
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2103

if.end5:                                          ; preds = %if.end
  %12 = load ptr, ptr %ret, align 8, !dbg !2104, !tbaa !1471
  store ptr %12, ptr %retval, align 8, !dbg !2105
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2105

cleanup:                                          ; preds = %if.end5, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #6, !dbg !2106
  %13 = load ptr, ptr %retval, align 8, !dbg !2106
  ret ptr %13, !dbg !2106
}

declare !dbg !2107 hidden ptr @xmlOutputBufferCreateIO__internal_alias(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define hidden i64 @xmlSaveDoc__internal_alias(ptr noundef %ctxt, ptr noundef %doc) #0 !dbg !2110 {
entry:
  %retval = alloca i64, align 8
  %ctxt.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %ret = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !2115, metadata !DIExpression()), !dbg !2118
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !2116, metadata !DIExpression()), !dbg !2119
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #6, !dbg !2120
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !2117, metadata !DIExpression()), !dbg !2121
  store i64 0, ptr %ret, align 8, !dbg !2121, !tbaa !2122
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !2124, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !2126
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2127

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %doc.addr, align 8, !dbg !2128, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !2129
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2130

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 -1, ptr %retval, align 8, !dbg !2131
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2131

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !2132, !tbaa !1471
  %3 = load ptr, ptr %doc.addr, align 8, !dbg !2134, !tbaa !1471
  %call = call i32 @xmlDocContentDumpOutput(ptr noundef %2, ptr noundef %3), !dbg !2135
  %cmp2 = icmp slt i32 %call, 0, !dbg !2136
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2137

if.then3:                                         ; preds = %if.end
  store i64 -1, ptr %retval, align 8, !dbg !2138
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2138

if.end4:                                          ; preds = %if.end
  %4 = load i64, ptr %ret, align 8, !dbg !2139, !tbaa !2122
  store i64 %4, ptr %retval, align 8, !dbg !2140
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2140

cleanup:                                          ; preds = %if.end4, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #6, !dbg !2141
  %5 = load i64, ptr %retval, align 8, !dbg !2141
  ret i64 %5, !dbg !2141
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlDocContentDumpOutput(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !2142 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %dtd = alloca ptr, align 8
  %is_xhtml = alloca i32, align 4
  %oldenc = alloca ptr, align 8
  %oldctxtenc = alloca ptr, align 8
  %encoding2 = alloca ptr, align 8
  %oldescape = alloca ptr, align 8
  %oldescapeAttr = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %enc = alloca i32, align 4
  %switched_encoding = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %child = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !2146, metadata !DIExpression()), !dbg !2165
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !2147, metadata !DIExpression()), !dbg !2166
  call void @llvm.lifetime.start.p0(i64 8, ptr %dtd) #6, !dbg !2167
  tail call void @llvm.dbg.declare(metadata ptr %dtd, metadata !2148, metadata !DIExpression()), !dbg !2168
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_xhtml) #6, !dbg !2169
  tail call void @llvm.dbg.declare(metadata ptr %is_xhtml, metadata !2149, metadata !DIExpression()), !dbg !2170
  store i32 0, ptr %is_xhtml, align 4, !dbg !2170, !tbaa !1775
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldenc) #6, !dbg !2171
  tail call void @llvm.dbg.declare(metadata ptr %oldenc, metadata !2150, metadata !DIExpression()), !dbg !2172
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !2173, !tbaa !1471
  %encoding = getelementptr inbounds %struct._xmlDoc, ptr %0, i32 0, i32 15, !dbg !2174
  %1 = load ptr, ptr %encoding, align 8, !dbg !2174, !tbaa !2175
  store ptr %1, ptr %oldenc, align 8, !dbg !2172, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldctxtenc) #6, !dbg !2177
  tail call void @llvm.dbg.declare(metadata ptr %oldctxtenc, metadata !2151, metadata !DIExpression()), !dbg !2178
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !2179, !tbaa !1471
  %encoding1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %2, i32 0, i32 4, !dbg !2180
  %3 = load ptr, ptr %encoding1, align 8, !dbg !2180, !tbaa !1859
  store ptr %3, ptr %oldctxtenc, align 8, !dbg !2178, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %encoding2) #6, !dbg !2181
  tail call void @llvm.dbg.declare(metadata ptr %encoding2, metadata !2152, metadata !DIExpression()), !dbg !2182
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !2183, !tbaa !1471
  %encoding3 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 4, !dbg !2184
  %5 = load ptr, ptr %encoding3, align 8, !dbg !2184, !tbaa !1859
  store ptr %5, ptr %encoding2, align 8, !dbg !2182, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldescape) #6, !dbg !2185
  tail call void @llvm.dbg.declare(metadata ptr %oldescape, metadata !2153, metadata !DIExpression()), !dbg !2186
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !2187, !tbaa !1471
  %escape = getelementptr inbounds %struct._xmlSaveCtxt, ptr %6, i32 0, i32 13, !dbg !2188
  %7 = load ptr, ptr %escape, align 8, !dbg !2188, !tbaa !1863
  store ptr %7, ptr %oldescape, align 8, !dbg !2186, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldescapeAttr) #6, !dbg !2189
  tail call void @llvm.dbg.declare(metadata ptr %oldescapeAttr, metadata !2154, metadata !DIExpression()), !dbg !2190
  %8 = load ptr, ptr %ctxt.addr, align 8, !dbg !2191, !tbaa !1471
  %escapeAttr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %8, i32 0, i32 14, !dbg !2192
  %9 = load ptr, ptr %escapeAttr, align 8, !dbg !2192, !tbaa !2193
  store ptr %9, ptr %oldescapeAttr, align 8, !dbg !2190, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !2194
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !2155, metadata !DIExpression()), !dbg !2195
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !2196, !tbaa !1471
  %buf4 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %10, i32 0, i32 6, !dbg !2197
  %11 = load ptr, ptr %buf4, align 8, !dbg !2197, !tbaa !1798
  store ptr %11, ptr %buf, align 8, !dbg !2195, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 4, ptr %enc) #6, !dbg !2198
  tail call void @llvm.dbg.declare(metadata ptr %enc, metadata !2156, metadata !DIExpression()), !dbg !2199
  call void @llvm.lifetime.start.p0(i64 4, ptr %switched_encoding) #6, !dbg !2200
  tail call void @llvm.dbg.declare(metadata ptr %switched_encoding, metadata !2158, metadata !DIExpression()), !dbg !2201
  store i32 0, ptr %switched_encoding, align 4, !dbg !2201, !tbaa !1775
  call void @xmlInitParser__internal_alias(), !dbg !2202
  %12 = load ptr, ptr %cur.addr, align 8, !dbg !2203, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlDoc, ptr %12, i32 0, i32 1, !dbg !2205
  %13 = load i32, ptr %type, align 8, !dbg !2205, !tbaa !2206
  %cmp = icmp ne i32 %13, 13, !dbg !2207
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2208

land.lhs.true:                                    ; preds = %entry
  %14 = load ptr, ptr %cur.addr, align 8, !dbg !2209, !tbaa !1471
  %type5 = getelementptr inbounds %struct._xmlDoc, ptr %14, i32 0, i32 1, !dbg !2210
  %15 = load i32, ptr %type5, align 8, !dbg !2210, !tbaa !2206
  %cmp6 = icmp ne i32 %15, 9, !dbg !2211
  br i1 %cmp6, label %if.then, label %if.end, !dbg !2212

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, ptr %retval, align 4, !dbg !2213
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2213

if.end:                                           ; preds = %land.lhs.true, %entry
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !2214, !tbaa !1471
  %encoding7 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %16, i32 0, i32 4, !dbg !2216
  %17 = load ptr, ptr %encoding7, align 8, !dbg !2216, !tbaa !1859
  %cmp8 = icmp ne ptr %17, null, !dbg !2217
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !2218

if.then9:                                         ; preds = %if.end
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !2219, !tbaa !1471
  %encoding10 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %18, i32 0, i32 4, !dbg !2221
  %19 = load ptr, ptr %encoding10, align 8, !dbg !2221, !tbaa !1859
  %20 = load ptr, ptr %cur.addr, align 8, !dbg !2222, !tbaa !1471
  %encoding11 = getelementptr inbounds %struct._xmlDoc, ptr %20, i32 0, i32 15, !dbg !2223
  store ptr %19, ptr %encoding11, align 8, !dbg !2224, !tbaa !2175
  br label %if.end17, !dbg !2225

if.else:                                          ; preds = %if.end
  %21 = load ptr, ptr %cur.addr, align 8, !dbg !2226, !tbaa !1471
  %encoding12 = getelementptr inbounds %struct._xmlDoc, ptr %21, i32 0, i32 15, !dbg !2228
  %22 = load ptr, ptr %encoding12, align 8, !dbg !2228, !tbaa !2175
  %cmp13 = icmp ne ptr %22, null, !dbg !2229
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !2230

if.then14:                                        ; preds = %if.else
  %23 = load ptr, ptr %cur.addr, align 8, !dbg !2231, !tbaa !1471
  %encoding15 = getelementptr inbounds %struct._xmlDoc, ptr %23, i32 0, i32 15, !dbg !2233
  %24 = load ptr, ptr %encoding15, align 8, !dbg !2233, !tbaa !2175
  store ptr %24, ptr %encoding2, align 8, !dbg !2234, !tbaa !1471
  br label %if.end16, !dbg !2235

if.end16:                                         ; preds = %if.then14, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then9
  %25 = load ptr, ptr %cur.addr, align 8, !dbg !2236, !tbaa !1471
  %type18 = getelementptr inbounds %struct._xmlDoc, ptr %25, i32 0, i32 1, !dbg !2237
  %26 = load i32, ptr %type18, align 8, !dbg !2237, !tbaa !2206
  %cmp19 = icmp eq i32 %26, 13, !dbg !2238
  br i1 %cmp19, label %land.lhs.true20, label %lor.lhs.false, !dbg !2239

land.lhs.true20:                                  ; preds = %if.end17
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !2240, !tbaa !1471
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %27, i32 0, i32 7, !dbg !2241
  %28 = load i32, ptr %options, align 8, !dbg !2241, !tbaa !1870
  %and = and i32 %28, 32, !dbg !2242
  %cmp21 = icmp eq i32 %and, 0, !dbg !2243
  br i1 %cmp21, label %land.lhs.true22, label %lor.lhs.false, !dbg !2244

land.lhs.true22:                                  ; preds = %land.lhs.true20
  %29 = load ptr, ptr %ctxt.addr, align 8, !dbg !2245, !tbaa !1471
  %options23 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %29, i32 0, i32 7, !dbg !2246
  %30 = load i32, ptr %options23, align 8, !dbg !2246, !tbaa !1870
  %and24 = and i32 %30, 16, !dbg !2247
  %cmp25 = icmp eq i32 %and24, 0, !dbg !2248
  br i1 %cmp25, label %if.then28, label %lor.lhs.false, !dbg !2249

lor.lhs.false:                                    ; preds = %land.lhs.true22, %land.lhs.true20, %if.end17
  %31 = load ptr, ptr %ctxt.addr, align 8, !dbg !2250, !tbaa !1471
  %options26 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %31, i32 0, i32 7, !dbg !2251
  %32 = load i32, ptr %options26, align 8, !dbg !2251, !tbaa !1870
  %and27 = and i32 %32, 64, !dbg !2252
  %tobool = icmp ne i32 %and27, 0, !dbg !2252
  br i1 %tobool, label %if.then28, label %if.else67, !dbg !2253

if.then28:                                        ; preds = %lor.lhs.false, %land.lhs.true22
  %33 = load ptr, ptr %encoding2, align 8, !dbg !2254, !tbaa !1471
  %cmp29 = icmp ne ptr %33, null, !dbg !2257
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2258

if.then30:                                        ; preds = %if.then28
  %34 = load ptr, ptr %cur.addr, align 8, !dbg !2259, !tbaa !1471
  %35 = load ptr, ptr %encoding2, align 8, !dbg !2260, !tbaa !1471
  %call = call i32 @htmlSetMetaEncoding__internal_alias(ptr noundef %34, ptr noundef %35), !dbg !2261
  br label %if.end31, !dbg !2261

if.end31:                                         ; preds = %if.then30, %if.then28
  %36 = load ptr, ptr %encoding2, align 8, !dbg !2262, !tbaa !1471
  %cmp32 = icmp eq ptr %36, null, !dbg !2264
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !2265

if.then33:                                        ; preds = %if.end31
  %37 = load ptr, ptr %cur.addr, align 8, !dbg !2266, !tbaa !1471
  %call34 = call ptr @htmlGetMetaEncoding__internal_alias(ptr noundef %37), !dbg !2267
  store ptr %call34, ptr %encoding2, align 8, !dbg !2268, !tbaa !1471
  br label %if.end35, !dbg !2269

if.end35:                                         ; preds = %if.then33, %if.end31
  %38 = load ptr, ptr %encoding2, align 8, !dbg !2270, !tbaa !1471
  %cmp36 = icmp eq ptr %38, null, !dbg !2272
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !2273

if.then37:                                        ; preds = %if.end35
  store ptr @.str.23, ptr %encoding2, align 8, !dbg !2274, !tbaa !1471
  br label %if.end38, !dbg !2275

if.end38:                                         ; preds = %if.then37, %if.end35
  %39 = load ptr, ptr %encoding2, align 8, !dbg !2276, !tbaa !1471
  %cmp39 = icmp ne ptr %39, null, !dbg !2278
  br i1 %cmp39, label %land.lhs.true40, label %if.end54, !dbg !2279

land.lhs.true40:                                  ; preds = %if.end38
  %40 = load ptr, ptr %oldctxtenc, align 8, !dbg !2280, !tbaa !1471
  %cmp41 = icmp eq ptr %40, null, !dbg !2281
  br i1 %cmp41, label %land.lhs.true42, label %if.end54, !dbg !2282

land.lhs.true42:                                  ; preds = %land.lhs.true40
  %41 = load ptr, ptr %buf, align 8, !dbg !2283, !tbaa !1471
  %encoder = getelementptr inbounds %struct._xmlOutputBuffer, ptr %41, i32 0, i32 3, !dbg !2284
  %42 = load ptr, ptr %encoder, align 8, !dbg !2284, !tbaa !2285
  %cmp43 = icmp eq ptr %42, null, !dbg !2286
  br i1 %cmp43, label %land.lhs.true44, label %if.end54, !dbg !2287

land.lhs.true44:                                  ; preds = %land.lhs.true42
  %43 = load ptr, ptr %buf, align 8, !dbg !2288, !tbaa !1471
  %conv = getelementptr inbounds %struct._xmlOutputBuffer, ptr %43, i32 0, i32 5, !dbg !2289
  %44 = load ptr, ptr %conv, align 8, !dbg !2289, !tbaa !2290
  %cmp45 = icmp eq ptr %44, null, !dbg !2291
  br i1 %cmp45, label %if.then47, label %if.end54, !dbg !2292

if.then47:                                        ; preds = %land.lhs.true44
  %45 = load ptr, ptr %ctxt.addr, align 8, !dbg !2293, !tbaa !1471
  %46 = load ptr, ptr %encoding2, align 8, !dbg !2296, !tbaa !1471
  %call48 = call i32 @xmlSaveSwitchEncoding(ptr noundef %45, ptr noundef %46), !dbg !2297
  %cmp49 = icmp slt i32 %call48, 0, !dbg !2298
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !2299

if.then51:                                        ; preds = %if.then47
  %47 = load ptr, ptr %oldenc, align 8, !dbg !2300, !tbaa !1471
  %48 = load ptr, ptr %cur.addr, align 8, !dbg !2302, !tbaa !1471
  %encoding52 = getelementptr inbounds %struct._xmlDoc, ptr %48, i32 0, i32 15, !dbg !2303
  store ptr %47, ptr %encoding52, align 8, !dbg !2304, !tbaa !2175
  store i32 -1, ptr %retval, align 4, !dbg !2305
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2305

if.end53:                                         ; preds = %if.then47
  br label %if.end54, !dbg !2306

if.end54:                                         ; preds = %if.end53, %land.lhs.true44, %land.lhs.true42, %land.lhs.true40, %if.end38
  %49 = load ptr, ptr %ctxt.addr, align 8, !dbg !2307, !tbaa !1471
  %options55 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %49, i32 0, i32 7, !dbg !2309
  %50 = load i32, ptr %options55, align 8, !dbg !2309, !tbaa !1870
  %and56 = and i32 %50, 1, !dbg !2310
  %tobool57 = icmp ne i32 %and56, 0, !dbg !2310
  br i1 %tobool57, label %if.then58, label %if.else59, !dbg !2311

if.then58:                                        ; preds = %if.end54
  %51 = load ptr, ptr %buf, align 8, !dbg !2312, !tbaa !1471
  %52 = load ptr, ptr %cur.addr, align 8, !dbg !2313, !tbaa !1471
  %53 = load ptr, ptr %encoding2, align 8, !dbg !2314, !tbaa !1471
  call void @htmlDocContentDumpFormatOutput__internal_alias(ptr noundef %51, ptr noundef %52, ptr noundef %53, i32 noundef 1), !dbg !2315
  br label %if.end60, !dbg !2315

if.else59:                                        ; preds = %if.end54
  %54 = load ptr, ptr %buf, align 8, !dbg !2316, !tbaa !1471
  %55 = load ptr, ptr %cur.addr, align 8, !dbg !2317, !tbaa !1471
  %56 = load ptr, ptr %encoding2, align 8, !dbg !2318, !tbaa !1471
  call void @htmlDocContentDumpFormatOutput__internal_alias(ptr noundef %54, ptr noundef %55, ptr noundef %56, i32 noundef 0), !dbg !2319
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then58
  %57 = load ptr, ptr %ctxt.addr, align 8, !dbg !2320, !tbaa !1471
  %encoding61 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %57, i32 0, i32 4, !dbg !2322
  %58 = load ptr, ptr %encoding61, align 8, !dbg !2322, !tbaa !1859
  %cmp62 = icmp ne ptr %58, null, !dbg !2323
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !2324

if.then64:                                        ; preds = %if.end60
  %59 = load ptr, ptr %oldenc, align 8, !dbg !2325, !tbaa !1471
  %60 = load ptr, ptr %cur.addr, align 8, !dbg !2326, !tbaa !1471
  %encoding65 = getelementptr inbounds %struct._xmlDoc, ptr %60, i32 0, i32 15, !dbg !2327
  store ptr %59, ptr %encoding65, align 8, !dbg !2328, !tbaa !2175
  br label %if.end66, !dbg !2326

if.end66:                                         ; preds = %if.then64, %if.end60
  store i32 0, ptr %retval, align 4, !dbg !2329
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2329

if.else67:                                        ; preds = %lor.lhs.false
  %61 = load ptr, ptr %cur.addr, align 8, !dbg !2330, !tbaa !1471
  %type68 = getelementptr inbounds %struct._xmlDoc, ptr %61, i32 0, i32 1, !dbg !2331
  %62 = load i32, ptr %type68, align 8, !dbg !2331, !tbaa !2206
  %cmp69 = icmp eq i32 %62, 9, !dbg !2332
  br i1 %cmp69, label %if.then79, label %lor.lhs.false71, !dbg !2333

lor.lhs.false71:                                  ; preds = %if.else67
  %63 = load ptr, ptr %ctxt.addr, align 8, !dbg !2334, !tbaa !1471
  %options72 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %63, i32 0, i32 7, !dbg !2335
  %64 = load i32, ptr %options72, align 8, !dbg !2335, !tbaa !1870
  %and73 = and i32 %64, 32, !dbg !2336
  %tobool74 = icmp ne i32 %and73, 0, !dbg !2336
  br i1 %tobool74, label %if.then79, label %lor.lhs.false75, !dbg !2337

lor.lhs.false75:                                  ; preds = %lor.lhs.false71
  %65 = load ptr, ptr %ctxt.addr, align 8, !dbg !2338, !tbaa !1471
  %options76 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %65, i32 0, i32 7, !dbg !2339
  %66 = load i32, ptr %options76, align 8, !dbg !2339, !tbaa !1870
  %and77 = and i32 %66, 16, !dbg !2340
  %tobool78 = icmp ne i32 %and77, 0, !dbg !2340
  br i1 %tobool78, label %if.then79, label %if.end188, !dbg !2341

if.then79:                                        ; preds = %lor.lhs.false75, %lor.lhs.false71, %if.else67
  %67 = load ptr, ptr %encoding2, align 8, !dbg !2342, !tbaa !1471
  %call80 = call i32 @xmlParseCharEncoding__internal_alias(ptr noundef %67), !dbg !2343
  store i32 %call80, ptr %enc, align 4, !dbg !2344, !tbaa !2345
  %68 = load ptr, ptr %encoding2, align 8, !dbg !2346, !tbaa !1471
  %cmp81 = icmp ne ptr %68, null, !dbg !2348
  br i1 %cmp81, label %land.lhs.true83, label %if.end128, !dbg !2349

land.lhs.true83:                                  ; preds = %if.then79
  %69 = load ptr, ptr %oldctxtenc, align 8, !dbg !2350, !tbaa !1471
  %cmp84 = icmp eq ptr %69, null, !dbg !2351
  br i1 %cmp84, label %land.lhs.true86, label %if.end128, !dbg !2352

land.lhs.true86:                                  ; preds = %land.lhs.true83
  %70 = load ptr, ptr %buf, align 8, !dbg !2353, !tbaa !1471
  %encoder87 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %70, i32 0, i32 3, !dbg !2354
  %71 = load ptr, ptr %encoder87, align 8, !dbg !2354, !tbaa !2285
  %cmp88 = icmp eq ptr %71, null, !dbg !2355
  br i1 %cmp88, label %land.lhs.true90, label %if.end128, !dbg !2356

land.lhs.true90:                                  ; preds = %land.lhs.true86
  %72 = load ptr, ptr %buf, align 8, !dbg !2357, !tbaa !1471
  %conv91 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %72, i32 0, i32 5, !dbg !2358
  %73 = load ptr, ptr %conv91, align 8, !dbg !2358, !tbaa !2290
  %cmp92 = icmp eq ptr %73, null, !dbg !2359
  br i1 %cmp92, label %land.lhs.true94, label %if.end128, !dbg !2360

land.lhs.true94:                                  ; preds = %land.lhs.true90
  %74 = load ptr, ptr %ctxt.addr, align 8, !dbg !2361, !tbaa !1471
  %options95 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %74, i32 0, i32 7, !dbg !2362
  %75 = load i32, ptr %options95, align 8, !dbg !2362, !tbaa !1870
  %and96 = and i32 %75, 2, !dbg !2363
  %cmp97 = icmp eq i32 %and96, 0, !dbg !2364
  br i1 %cmp97, label %if.then99, label %if.end128, !dbg !2365

if.then99:                                        ; preds = %land.lhs.true94
  %76 = load i32, ptr %enc, align 4, !dbg !2366, !tbaa !2345
  %cmp100 = icmp ne i32 %76, 1, !dbg !2369
  br i1 %cmp100, label %land.lhs.true102, label %if.end115, !dbg !2370

land.lhs.true102:                                 ; preds = %if.then99
  %77 = load i32, ptr %enc, align 4, !dbg !2371, !tbaa !2345
  %cmp103 = icmp ne i32 %77, 0, !dbg !2372
  br i1 %cmp103, label %land.lhs.true105, label %if.end115, !dbg !2373

land.lhs.true105:                                 ; preds = %land.lhs.true102
  %78 = load i32, ptr %enc, align 4, !dbg !2374, !tbaa !2345
  %cmp106 = icmp ne i32 %78, 22, !dbg !2375
  br i1 %cmp106, label %if.then108, label %if.end115, !dbg !2376

if.then108:                                       ; preds = %land.lhs.true105
  %79 = load ptr, ptr %ctxt.addr, align 8, !dbg !2377, !tbaa !1471
  %80 = load ptr, ptr %encoding2, align 8, !dbg !2380, !tbaa !1471
  %call109 = call i32 @xmlSaveSwitchEncoding(ptr noundef %79, ptr noundef %80), !dbg !2381
  %cmp110 = icmp slt i32 %call109, 0, !dbg !2382
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !2383

if.then112:                                       ; preds = %if.then108
  %81 = load ptr, ptr %oldenc, align 8, !dbg !2384, !tbaa !1471
  %82 = load ptr, ptr %cur.addr, align 8, !dbg !2386, !tbaa !1471
  %encoding113 = getelementptr inbounds %struct._xmlDoc, ptr %82, i32 0, i32 15, !dbg !2387
  store ptr %81, ptr %encoding113, align 8, !dbg !2388, !tbaa !2175
  store i32 -1, ptr %retval, align 4, !dbg !2389
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2389

if.end114:                                        ; preds = %if.then108
  store i32 1, ptr %switched_encoding, align 4, !dbg !2390, !tbaa !1775
  br label %if.end115, !dbg !2391

if.end115:                                        ; preds = %if.end114, %land.lhs.true105, %land.lhs.true102, %if.then99
  %83 = load ptr, ptr %ctxt.addr, align 8, !dbg !2392, !tbaa !1471
  %escape116 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %83, i32 0, i32 13, !dbg !2394
  %84 = load ptr, ptr %escape116, align 8, !dbg !2394, !tbaa !1863
  %cmp117 = icmp eq ptr %84, @xmlEscapeEntities, !dbg !2395
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !2396

if.then119:                                       ; preds = %if.end115
  %85 = load ptr, ptr %ctxt.addr, align 8, !dbg !2397, !tbaa !1471
  %escape120 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %85, i32 0, i32 13, !dbg !2398
  store ptr null, ptr %escape120, align 8, !dbg !2399, !tbaa !1863
  br label %if.end121, !dbg !2397

if.end121:                                        ; preds = %if.then119, %if.end115
  %86 = load ptr, ptr %ctxt.addr, align 8, !dbg !2400, !tbaa !1471
  %escapeAttr122 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %86, i32 0, i32 14, !dbg !2402
  %87 = load ptr, ptr %escapeAttr122, align 8, !dbg !2402, !tbaa !2193
  %cmp123 = icmp eq ptr %87, @xmlEscapeEntities, !dbg !2403
  br i1 %cmp123, label %if.then125, label %if.end127, !dbg !2404

if.then125:                                       ; preds = %if.end121
  %88 = load ptr, ptr %ctxt.addr, align 8, !dbg !2405, !tbaa !1471
  %escapeAttr126 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %88, i32 0, i32 14, !dbg !2406
  store ptr null, ptr %escapeAttr126, align 8, !dbg !2407, !tbaa !2193
  br label %if.end127, !dbg !2405

if.end127:                                        ; preds = %if.then125, %if.end121
  br label %if.end128, !dbg !2408

if.end128:                                        ; preds = %if.end127, %land.lhs.true94, %land.lhs.true90, %land.lhs.true86, %land.lhs.true83, %if.then79
  %89 = load ptr, ptr %ctxt.addr, align 8, !dbg !2409, !tbaa !1471
  %options129 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %89, i32 0, i32 7, !dbg !2411
  %90 = load i32, ptr %options129, align 8, !dbg !2411, !tbaa !1870
  %and130 = and i32 %90, 2, !dbg !2412
  %cmp131 = icmp eq i32 %and130, 0, !dbg !2413
  br i1 %cmp131, label %if.then133, label %if.end154, !dbg !2414

if.then133:                                       ; preds = %if.end128
  %91 = load ptr, ptr %buf, align 8, !dbg !2415, !tbaa !1471
  %call134 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %91, i32 noundef 14, ptr noundef @.str.24), !dbg !2417
  %92 = load ptr, ptr %cur.addr, align 8, !dbg !2418, !tbaa !1471
  %version = getelementptr inbounds %struct._xmlDoc, ptr %92, i32 0, i32 14, !dbg !2420
  %93 = load ptr, ptr %version, align 8, !dbg !2420, !tbaa !2421
  %cmp135 = icmp ne ptr %93, null, !dbg !2422
  br i1 %cmp135, label %if.then137, label %if.else140, !dbg !2423

if.then137:                                       ; preds = %if.then133
  %94 = load ptr, ptr %buf, align 8, !dbg !2424, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %94, i32 0, i32 4, !dbg !2425
  %95 = load ptr, ptr %buffer, align 8, !dbg !2425, !tbaa !1760
  %96 = load ptr, ptr %cur.addr, align 8, !dbg !2426, !tbaa !1471
  %version138 = getelementptr inbounds %struct._xmlDoc, ptr %96, i32 0, i32 14, !dbg !2427
  %97 = load ptr, ptr %version138, align 8, !dbg !2427, !tbaa !2421
  %call139 = call i32 @xmlBufWriteQuotedString(ptr noundef %95, ptr noundef %97), !dbg !2428
  br label %if.end142, !dbg !2428

if.else140:                                       ; preds = %if.then133
  %98 = load ptr, ptr %buf, align 8, !dbg !2429, !tbaa !1471
  %call141 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %98, i32 noundef 5, ptr noundef @.str.25), !dbg !2430
  br label %if.end142

if.end142:                                        ; preds = %if.else140, %if.then137
  %99 = load ptr, ptr %encoding2, align 8, !dbg !2431, !tbaa !1471
  %cmp143 = icmp ne ptr %99, null, !dbg !2433
  br i1 %cmp143, label %if.then145, label %if.end149, !dbg !2434

if.then145:                                       ; preds = %if.end142
  %100 = load ptr, ptr %buf, align 8, !dbg !2435, !tbaa !1471
  %call146 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %100, i32 noundef 10, ptr noundef @.str.26), !dbg !2437
  %101 = load ptr, ptr %buf, align 8, !dbg !2438, !tbaa !1471
  %buffer147 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %101, i32 0, i32 4, !dbg !2439
  %102 = load ptr, ptr %buffer147, align 8, !dbg !2439, !tbaa !1760
  %103 = load ptr, ptr %encoding2, align 8, !dbg !2440, !tbaa !1471
  %call148 = call i32 @xmlBufWriteQuotedString(ptr noundef %102, ptr noundef %103), !dbg !2441
  br label %if.end149, !dbg !2442

if.end149:                                        ; preds = %if.then145, %if.end142
  %104 = load ptr, ptr %cur.addr, align 8, !dbg !2443, !tbaa !1471
  %standalone = getelementptr inbounds %struct._xmlDoc, ptr %104, i32 0, i32 10, !dbg !2444
  %105 = load i32, ptr %standalone, align 4, !dbg !2444, !tbaa !2445
  switch i32 %105, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb151
  ], !dbg !2446

sw.bb:                                            ; preds = %if.end149
  %106 = load ptr, ptr %buf, align 8, !dbg !2447, !tbaa !1471
  %call150 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %106, i32 noundef 16, ptr noundef @.str.27), !dbg !2449
  br label %sw.epilog, !dbg !2450

sw.bb151:                                         ; preds = %if.end149
  %107 = load ptr, ptr %buf, align 8, !dbg !2451, !tbaa !1471
  %call152 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %107, i32 noundef 17, ptr noundef @.str.28), !dbg !2452
  br label %sw.epilog, !dbg !2453

sw.epilog:                                        ; preds = %if.end149, %sw.bb151, %sw.bb
  %108 = load ptr, ptr %buf, align 8, !dbg !2454, !tbaa !1471
  %call153 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %108, i32 noundef 3, ptr noundef @.str.29), !dbg !2455
  br label %if.end154, !dbg !2456

if.end154:                                        ; preds = %sw.epilog, %if.end128
  %109 = load ptr, ptr %ctxt.addr, align 8, !dbg !2457, !tbaa !1471
  %options155 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %109, i32 0, i32 7, !dbg !2459
  %110 = load i32, ptr %options155, align 8, !dbg !2459, !tbaa !1870
  %and156 = and i32 %110, 16, !dbg !2460
  %tobool157 = icmp ne i32 %and156, 0, !dbg !2460
  br i1 %tobool157, label %if.then158, label %if.end159, !dbg !2461

if.then158:                                       ; preds = %if.end154
  store i32 1, ptr %is_xhtml, align 4, !dbg !2462, !tbaa !1775
  br label %if.end159, !dbg !2463

if.end159:                                        ; preds = %if.then158, %if.end154
  %111 = load ptr, ptr %ctxt.addr, align 8, !dbg !2464, !tbaa !1471
  %options160 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %111, i32 0, i32 7, !dbg !2466
  %112 = load i32, ptr %options160, align 8, !dbg !2466, !tbaa !1870
  %and161 = and i32 %112, 8, !dbg !2467
  %cmp162 = icmp eq i32 %and161, 0, !dbg !2468
  br i1 %cmp162, label %if.then164, label %if.end175, !dbg !2469

if.then164:                                       ; preds = %if.end159
  %113 = load ptr, ptr %cur.addr, align 8, !dbg !2470, !tbaa !1471
  %call165 = call ptr @xmlGetIntSubset__internal_alias(ptr noundef %113), !dbg !2472
  store ptr %call165, ptr %dtd, align 8, !dbg !2473, !tbaa !1471
  %114 = load ptr, ptr %dtd, align 8, !dbg !2474, !tbaa !1471
  %cmp166 = icmp ne ptr %114, null, !dbg !2476
  br i1 %cmp166, label %if.then168, label %if.end174, !dbg !2477

if.then168:                                       ; preds = %if.then164
  %115 = load ptr, ptr %dtd, align 8, !dbg !2478, !tbaa !1471
  %SystemID = getelementptr inbounds %struct._xmlDtd, ptr %115, i32 0, i32 14, !dbg !2480
  %116 = load ptr, ptr %SystemID, align 8, !dbg !2480, !tbaa !2481
  %117 = load ptr, ptr %dtd, align 8, !dbg !2483, !tbaa !1471
  %ExternalID = getelementptr inbounds %struct._xmlDtd, ptr %117, i32 0, i32 13, !dbg !2484
  %118 = load ptr, ptr %ExternalID, align 8, !dbg !2484, !tbaa !2485
  %call169 = call i32 @xmlIsXHTML__internal_alias(ptr noundef %116, ptr noundef %118), !dbg !2486
  store i32 %call169, ptr %is_xhtml, align 4, !dbg !2487, !tbaa !1775
  %119 = load i32, ptr %is_xhtml, align 4, !dbg !2488, !tbaa !1775
  %cmp170 = icmp slt i32 %119, 0, !dbg !2490
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !2491

if.then172:                                       ; preds = %if.then168
  store i32 0, ptr %is_xhtml, align 4, !dbg !2492, !tbaa !1775
  br label %if.end173, !dbg !2493

if.end173:                                        ; preds = %if.then172, %if.then168
  br label %if.end174, !dbg !2494

if.end174:                                        ; preds = %if.end173, %if.then164
  br label %if.end175, !dbg !2495

if.end175:                                        ; preds = %if.end174, %if.end159
  %120 = load ptr, ptr %cur.addr, align 8, !dbg !2496, !tbaa !1471
  %children = getelementptr inbounds %struct._xmlDoc, ptr %120, i32 0, i32 3, !dbg !2497
  %121 = load ptr, ptr %children, align 8, !dbg !2497, !tbaa !2498
  %cmp176 = icmp ne ptr %121, null, !dbg !2499
  br i1 %cmp176, label %if.then178, label %if.end187, !dbg !2500

if.then178:                                       ; preds = %if.end175
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #6, !dbg !2501
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !2159, metadata !DIExpression()), !dbg !2502
  %122 = load ptr, ptr %cur.addr, align 8, !dbg !2503, !tbaa !1471
  %children179 = getelementptr inbounds %struct._xmlDoc, ptr %122, i32 0, i32 3, !dbg !2504
  %123 = load ptr, ptr %children179, align 8, !dbg !2504, !tbaa !2498
  store ptr %123, ptr %child, align 8, !dbg !2502, !tbaa !1471
  br label %while.cond, !dbg !2505

while.cond:                                       ; preds = %if.end185, %if.then178
  %124 = load ptr, ptr %child, align 8, !dbg !2506, !tbaa !1471
  %cmp180 = icmp ne ptr %124, null, !dbg !2507
  br i1 %cmp180, label %while.body, label %while.end, !dbg !2505

while.body:                                       ; preds = %while.cond
  %125 = load ptr, ptr %ctxt.addr, align 8, !dbg !2508, !tbaa !1471
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %125, i32 0, i32 8, !dbg !2510
  store i32 0, ptr %level, align 4, !dbg !2511, !tbaa !2512
  %126 = load i32, ptr %is_xhtml, align 4, !dbg !2513, !tbaa !1775
  %tobool182 = icmp ne i32 %126, 0, !dbg !2513
  br i1 %tobool182, label %if.then183, label %if.else184, !dbg !2515

if.then183:                                       ; preds = %while.body
  %127 = load ptr, ptr %ctxt.addr, align 8, !dbg !2516, !tbaa !1471
  %128 = load ptr, ptr %child, align 8, !dbg !2517, !tbaa !1471
  call void @xhtmlNodeDumpOutput(ptr noundef %127, ptr noundef %128), !dbg !2518
  br label %if.end185, !dbg !2518

if.else184:                                       ; preds = %while.body
  %129 = load ptr, ptr %ctxt.addr, align 8, !dbg !2519, !tbaa !1471
  %130 = load ptr, ptr %child, align 8, !dbg !2520, !tbaa !1471
  call void @xmlNodeDumpOutputInternal(ptr noundef %129, ptr noundef %130), !dbg !2521
  br label %if.end185

if.end185:                                        ; preds = %if.else184, %if.then183
  %131 = load ptr, ptr %buf, align 8, !dbg !2522, !tbaa !1471
  %call186 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %131, i32 noundef 1, ptr noundef @.str.21), !dbg !2523
  %132 = load ptr, ptr %child, align 8, !dbg !2524, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNode, ptr %132, i32 0, i32 6, !dbg !2525
  %133 = load ptr, ptr %next, align 8, !dbg !2525, !tbaa !2526
  store ptr %133, ptr %child, align 8, !dbg !2529, !tbaa !1471
  br label %while.cond, !dbg !2505, !llvm.loop !2530

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #6, !dbg !2532
  br label %if.end187, !dbg !2533

if.end187:                                        ; preds = %while.end, %if.end175
  br label %if.end188, !dbg !2534

if.end188:                                        ; preds = %if.end187, %lor.lhs.false75
  br label %if.end189

if.end189:                                        ; preds = %if.end188
  %134 = load i32, ptr %switched_encoding, align 4, !dbg !2535, !tbaa !1775
  %tobool190 = icmp ne i32 %134, 0, !dbg !2537
  br i1 %tobool190, label %land.lhs.true191, label %if.end198, !dbg !2538

land.lhs.true191:                                 ; preds = %if.end189
  %135 = load ptr, ptr %oldctxtenc, align 8, !dbg !2539, !tbaa !1471
  %cmp192 = icmp eq ptr %135, null, !dbg !2540
  br i1 %cmp192, label %if.then194, label %if.end198, !dbg !2541

if.then194:                                       ; preds = %land.lhs.true191
  %136 = load ptr, ptr %ctxt.addr, align 8, !dbg !2542, !tbaa !1471
  %call195 = call i32 @xmlSaveClearEncoding(ptr noundef %136), !dbg !2544
  %137 = load ptr, ptr %oldescape, align 8, !dbg !2545, !tbaa !1471
  %138 = load ptr, ptr %ctxt.addr, align 8, !dbg !2546, !tbaa !1471
  %escape196 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %138, i32 0, i32 13, !dbg !2547
  store ptr %137, ptr %escape196, align 8, !dbg !2548, !tbaa !1863
  %139 = load ptr, ptr %oldescapeAttr, align 8, !dbg !2549, !tbaa !1471
  %140 = load ptr, ptr %ctxt.addr, align 8, !dbg !2550, !tbaa !1471
  %escapeAttr197 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %140, i32 0, i32 14, !dbg !2551
  store ptr %139, ptr %escapeAttr197, align 8, !dbg !2552, !tbaa !2193
  br label %if.end198, !dbg !2553

if.end198:                                        ; preds = %if.then194, %land.lhs.true191, %if.end189
  %141 = load ptr, ptr %oldenc, align 8, !dbg !2554, !tbaa !1471
  %142 = load ptr, ptr %cur.addr, align 8, !dbg !2555, !tbaa !1471
  %encoding199 = getelementptr inbounds %struct._xmlDoc, ptr %142, i32 0, i32 15, !dbg !2556
  store ptr %141, ptr %encoding199, align 8, !dbg !2557, !tbaa !2175
  store i32 0, ptr %retval, align 4, !dbg !2558
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2558

cleanup:                                          ; preds = %if.end198, %if.then112, %if.end66, %if.then51, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %switched_encoding) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 4, ptr %enc) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldescapeAttr) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldescape) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 8, ptr %encoding2) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldctxtenc) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldenc) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_xhtml) #6, !dbg !2559
  call void @llvm.lifetime.end.p0(i64 8, ptr %dtd) #6, !dbg !2559
  %143 = load i32, ptr %retval, align 4, !dbg !2559
  ret i32 %143, !dbg !2559
}

; Function Attrs: nounwind uwtable
define hidden i64 @xmlSaveTree__internal_alias(ptr noundef %ctxt, ptr noundef %node) #0 !dbg !2560 {
entry:
  %retval = alloca i64, align 8
  %ctxt.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %ret = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !2564, metadata !DIExpression()), !dbg !2567
  store ptr %node, ptr %node.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !2565, metadata !DIExpression()), !dbg !2568
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #6, !dbg !2569
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !2566, metadata !DIExpression()), !dbg !2570
  store i64 0, ptr %ret, align 8, !dbg !2570, !tbaa !2122
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !2571, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !2573
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2574

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %node.addr, align 8, !dbg !2575, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !2576
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2577

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 -1, ptr %retval, align 8, !dbg !2578
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2578

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !2579, !tbaa !1471
  %3 = load ptr, ptr %node.addr, align 8, !dbg !2580, !tbaa !1471
  call void @xmlNodeDumpOutputInternal(ptr noundef %2, ptr noundef %3), !dbg !2581
  %4 = load i64, ptr %ret, align 8, !dbg !2582, !tbaa !2122
  store i64 %4, ptr %retval, align 8, !dbg !2583
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2583

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #6, !dbg !2584
  %5 = load i64, ptr %retval, align 8, !dbg !2584
  ret i64 %5, !dbg !2584
}

; Function Attrs: nounwind uwtable
define internal void @xmlNodeDumpOutputInternal(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !2585 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %format = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %start = alloca ptr, align 8
  %end = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !2589, metadata !DIExpression()), !dbg !2596
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !2590, metadata !DIExpression()), !dbg !2597
  call void @llvm.lifetime.start.p0(i64 4, ptr %format) #6, !dbg !2598
  tail call void @llvm.dbg.declare(metadata ptr %format, metadata !2591, metadata !DIExpression()), !dbg !2599
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #6, !dbg !2600
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2592, metadata !DIExpression()), !dbg !2601
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6, !dbg !2602
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !2593, metadata !DIExpression()), !dbg !2603
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #6, !dbg !2602
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !2594, metadata !DIExpression()), !dbg !2604
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !2605
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !2595, metadata !DIExpression()), !dbg !2606
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !2607, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !2609
  br i1 %cmp, label %if.then, label %if.end, !dbg !2610

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2611

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !2612, !tbaa !1471
  %buf1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !2613
  %2 = load ptr, ptr %buf1, align 8, !dbg !2613, !tbaa !1798
  store ptr %2, ptr %buf, align 8, !dbg !2614, !tbaa !1471
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !2615, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlNode, ptr %3, i32 0, i32 1, !dbg !2617
  %4 = load i32, ptr %type, align 8, !dbg !2617, !tbaa !2618
  %cmp2 = icmp eq i32 %4, 19, !dbg !2619
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2620

if.then3:                                         ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2621

if.end4:                                          ; preds = %if.end
  %5 = load ptr, ptr %cur.addr, align 8, !dbg !2622, !tbaa !1471
  %type5 = getelementptr inbounds %struct._xmlNode, ptr %5, i32 0, i32 1, !dbg !2624
  %6 = load i32, ptr %type5, align 8, !dbg !2624, !tbaa !2618
  %cmp6 = icmp eq i32 %6, 20, !dbg !2625
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2626

if.then7:                                         ; preds = %if.end4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2627

if.end8:                                          ; preds = %if.end4
  %7 = load ptr, ptr %cur.addr, align 8, !dbg !2628, !tbaa !1471
  %type9 = getelementptr inbounds %struct._xmlNode, ptr %7, i32 0, i32 1, !dbg !2630
  %8 = load i32, ptr %type9, align 8, !dbg !2630, !tbaa !2618
  %cmp10 = icmp eq i32 %8, 9, !dbg !2631
  br i1 %cmp10, label %if.then13, label %lor.lhs.false, !dbg !2632

lor.lhs.false:                                    ; preds = %if.end8
  %9 = load ptr, ptr %cur.addr, align 8, !dbg !2633, !tbaa !1471
  %type11 = getelementptr inbounds %struct._xmlNode, ptr %9, i32 0, i32 1, !dbg !2634
  %10 = load i32, ptr %type11, align 8, !dbg !2634, !tbaa !2618
  %cmp12 = icmp eq i32 %10, 13, !dbg !2635
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2636

if.then13:                                        ; preds = %lor.lhs.false, %if.end8
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !2637, !tbaa !1471
  %12 = load ptr, ptr %cur.addr, align 8, !dbg !2639, !tbaa !1471
  %call = call i32 @xmlDocContentDumpOutput(ptr noundef %11, ptr noundef %12), !dbg !2640
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2641

if.end14:                                         ; preds = %lor.lhs.false
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !2642, !tbaa !1471
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %13, i32 0, i32 7, !dbg !2644
  %14 = load i32, ptr %options, align 8, !dbg !2644, !tbaa !1870
  %and = and i32 %14, 16, !dbg !2645
  %tobool = icmp ne i32 %and, 0, !dbg !2645
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !2646

if.then15:                                        ; preds = %if.end14
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !2647, !tbaa !1471
  %16 = load ptr, ptr %cur.addr, align 8, !dbg !2649, !tbaa !1471
  call void @xhtmlNodeDumpOutput(ptr noundef %15, ptr noundef %16), !dbg !2650
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2651

if.end16:                                         ; preds = %if.end14
  %17 = load ptr, ptr %cur.addr, align 8, !dbg !2652, !tbaa !1471
  %type17 = getelementptr inbounds %struct._xmlNode, ptr %17, i32 0, i32 1, !dbg !2654
  %18 = load i32, ptr %type17, align 8, !dbg !2654, !tbaa !2618
  %cmp18 = icmp ne i32 %18, 18, !dbg !2655
  br i1 %cmp18, label %land.lhs.true, label %lor.lhs.false28, !dbg !2656

land.lhs.true:                                    ; preds = %if.end16
  %19 = load ptr, ptr %cur.addr, align 8, !dbg !2657, !tbaa !1471
  %doc = getelementptr inbounds %struct._xmlNode, ptr %19, i32 0, i32 8, !dbg !2658
  %20 = load ptr, ptr %doc, align 8, !dbg !2658, !tbaa !2659
  %cmp19 = icmp ne ptr %20, null, !dbg !2660
  br i1 %cmp19, label %land.lhs.true20, label %lor.lhs.false28, !dbg !2661

land.lhs.true20:                                  ; preds = %land.lhs.true
  %21 = load ptr, ptr %cur.addr, align 8, !dbg !2662, !tbaa !1471
  %doc21 = getelementptr inbounds %struct._xmlNode, ptr %21, i32 0, i32 8, !dbg !2663
  %22 = load ptr, ptr %doc21, align 8, !dbg !2663, !tbaa !2659
  %type22 = getelementptr inbounds %struct._xmlDoc, ptr %22, i32 0, i32 1, !dbg !2664
  %23 = load i32, ptr %type22, align 8, !dbg !2664, !tbaa !2206
  %cmp23 = icmp eq i32 %23, 13, !dbg !2665
  br i1 %cmp23, label %land.lhs.true24, label %lor.lhs.false28, !dbg !2666

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !2667, !tbaa !1471
  %options25 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %24, i32 0, i32 7, !dbg !2668
  %25 = load i32, ptr %options25, align 8, !dbg !2668, !tbaa !1870
  %and26 = and i32 %25, 32, !dbg !2669
  %cmp27 = icmp eq i32 %and26, 0, !dbg !2670
  br i1 %cmp27, label %if.then32, label %lor.lhs.false28, !dbg !2671

lor.lhs.false28:                                  ; preds = %land.lhs.true24, %land.lhs.true20, %land.lhs.true, %if.end16
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !2672, !tbaa !1471
  %options29 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %26, i32 0, i32 7, !dbg !2673
  %27 = load i32, ptr %options29, align 8, !dbg !2673, !tbaa !1870
  %and30 = and i32 %27, 64, !dbg !2674
  %tobool31 = icmp ne i32 %and30, 0, !dbg !2674
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !2675

if.then32:                                        ; preds = %lor.lhs.false28, %land.lhs.true24
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !2676, !tbaa !1471
  %29 = load ptr, ptr %cur.addr, align 8, !dbg !2678, !tbaa !1471
  %call33 = call i32 @htmlNodeDumpOutputInternal(ptr noundef %28, ptr noundef %29), !dbg !2679
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2680

if.end34:                                         ; preds = %lor.lhs.false28
  %30 = load ptr, ptr %cur.addr, align 8, !dbg !2681, !tbaa !1471
  %type35 = getelementptr inbounds %struct._xmlNode, ptr %30, i32 0, i32 1, !dbg !2683
  %31 = load i32, ptr %type35, align 8, !dbg !2683, !tbaa !2618
  %cmp36 = icmp eq i32 %31, 14, !dbg !2684
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !2685

if.then37:                                        ; preds = %if.end34
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !2686, !tbaa !1471
  %33 = load ptr, ptr %cur.addr, align 8, !dbg !2688, !tbaa !1471
  call void @xmlDtdDumpOutput(ptr noundef %32, ptr noundef %33), !dbg !2689
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2690

if.end38:                                         ; preds = %if.end34
  %34 = load ptr, ptr %cur.addr, align 8, !dbg !2691, !tbaa !1471
  %type39 = getelementptr inbounds %struct._xmlNode, ptr %34, i32 0, i32 1, !dbg !2693
  %35 = load i32, ptr %type39, align 8, !dbg !2693, !tbaa !2618
  %cmp40 = icmp eq i32 %35, 11, !dbg !2694
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !2695

if.then41:                                        ; preds = %if.end38
  %36 = load ptr, ptr %ctxt.addr, align 8, !dbg !2696, !tbaa !1471
  %37 = load ptr, ptr %cur.addr, align 8, !dbg !2698, !tbaa !1471
  %children = getelementptr inbounds %struct._xmlNode, ptr %37, i32 0, i32 3, !dbg !2699
  %38 = load ptr, ptr %children, align 8, !dbg !2699, !tbaa !2700
  call void @xmlNodeListDumpOutput(ptr noundef %36, ptr noundef %38), !dbg !2701
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2702

if.end42:                                         ; preds = %if.end38
  %39 = load ptr, ptr %cur.addr, align 8, !dbg !2703, !tbaa !1471
  %type43 = getelementptr inbounds %struct._xmlNode, ptr %39, i32 0, i32 1, !dbg !2705
  %40 = load i32, ptr %type43, align 8, !dbg !2705, !tbaa !2618
  %cmp44 = icmp eq i32 %40, 15, !dbg !2706
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !2707

if.then45:                                        ; preds = %if.end42
  %41 = load ptr, ptr %buf, align 8, !dbg !2708, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %41, i32 0, i32 4, !dbg !2710
  %42 = load ptr, ptr %buffer, align 8, !dbg !2710, !tbaa !1760
  %43 = load ptr, ptr %cur.addr, align 8, !dbg !2711, !tbaa !1471
  call void @xmlBufDumpElementDecl(ptr noundef %42, ptr noundef %43), !dbg !2712
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2713

if.end46:                                         ; preds = %if.end42
  %44 = load ptr, ptr %cur.addr, align 8, !dbg !2714, !tbaa !1471
  %type47 = getelementptr inbounds %struct._xmlNode, ptr %44, i32 0, i32 1, !dbg !2716
  %45 = load i32, ptr %type47, align 8, !dbg !2716, !tbaa !2618
  %cmp48 = icmp eq i32 %45, 16, !dbg !2717
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !2718

if.then49:                                        ; preds = %if.end46
  %46 = load ptr, ptr %buf, align 8, !dbg !2719, !tbaa !1471
  %buffer50 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %46, i32 0, i32 4, !dbg !2721
  %47 = load ptr, ptr %buffer50, align 8, !dbg !2721, !tbaa !1760
  %48 = load ptr, ptr %cur.addr, align 8, !dbg !2722, !tbaa !1471
  call void @xmlBufDumpAttributeDecl(ptr noundef %47, ptr noundef %48), !dbg !2723
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2724

if.end51:                                         ; preds = %if.end46
  %49 = load ptr, ptr %cur.addr, align 8, !dbg !2725, !tbaa !1471
  %type52 = getelementptr inbounds %struct._xmlNode, ptr %49, i32 0, i32 1, !dbg !2727
  %50 = load i32, ptr %type52, align 8, !dbg !2727, !tbaa !2618
  %cmp53 = icmp eq i32 %50, 17, !dbg !2728
  br i1 %cmp53, label %if.then54, label %if.end56, !dbg !2729

if.then54:                                        ; preds = %if.end51
  %51 = load ptr, ptr %buf, align 8, !dbg !2730, !tbaa !1471
  %buffer55 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %51, i32 0, i32 4, !dbg !2732
  %52 = load ptr, ptr %buffer55, align 8, !dbg !2732, !tbaa !1760
  %53 = load ptr, ptr %cur.addr, align 8, !dbg !2733, !tbaa !1471
  call void @xmlBufDumpEntityDecl(ptr noundef %52, ptr noundef %53), !dbg !2734
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2735

if.end56:                                         ; preds = %if.end51
  %54 = load ptr, ptr %cur.addr, align 8, !dbg !2736, !tbaa !1471
  %type57 = getelementptr inbounds %struct._xmlNode, ptr %54, i32 0, i32 1, !dbg !2738
  %55 = load i32, ptr %type57, align 8, !dbg !2738, !tbaa !2618
  %cmp58 = icmp eq i32 %55, 3, !dbg !2739
  br i1 %cmp58, label %if.then59, label %if.end70, !dbg !2740

if.then59:                                        ; preds = %if.end56
  %56 = load ptr, ptr %cur.addr, align 8, !dbg !2741, !tbaa !1471
  %content = getelementptr inbounds %struct._xmlNode, ptr %56, i32 0, i32 10, !dbg !2744
  %57 = load ptr, ptr %content, align 8, !dbg !2744, !tbaa !2745
  %cmp60 = icmp ne ptr %57, null, !dbg !2746
  br i1 %cmp60, label %if.then61, label %if.end69, !dbg !2747

if.then61:                                        ; preds = %if.then59
  %58 = load ptr, ptr %cur.addr, align 8, !dbg !2748, !tbaa !1471
  %name = getelementptr inbounds %struct._xmlNode, ptr %58, i32 0, i32 2, !dbg !2751
  %59 = load ptr, ptr %name, align 8, !dbg !2751, !tbaa !2752
  %cmp62 = icmp ne ptr %59, @xmlStringTextNoenc, !dbg !2753
  br i1 %cmp62, label %if.then63, label %if.else, !dbg !2754

if.then63:                                        ; preds = %if.then61
  %60 = load ptr, ptr %buf, align 8, !dbg !2755, !tbaa !1471
  %61 = load ptr, ptr %cur.addr, align 8, !dbg !2757, !tbaa !1471
  %content64 = getelementptr inbounds %struct._xmlNode, ptr %61, i32 0, i32 10, !dbg !2758
  %62 = load ptr, ptr %content64, align 8, !dbg !2758, !tbaa !2745
  %63 = load ptr, ptr %ctxt.addr, align 8, !dbg !2759, !tbaa !1471
  %escape = getelementptr inbounds %struct._xmlSaveCtxt, ptr %63, i32 0, i32 13, !dbg !2760
  %64 = load ptr, ptr %escape, align 8, !dbg !2760, !tbaa !1863
  %call65 = call i32 @xmlOutputBufferWriteEscape__internal_alias(ptr noundef %60, ptr noundef %62, ptr noundef %64), !dbg !2761
  br label %if.end68, !dbg !2762

if.else:                                          ; preds = %if.then61
  %65 = load ptr, ptr %buf, align 8, !dbg !2763, !tbaa !1471
  %66 = load ptr, ptr %cur.addr, align 8, !dbg !2765, !tbaa !1471
  %content66 = getelementptr inbounds %struct._xmlNode, ptr %66, i32 0, i32 10, !dbg !2766
  %67 = load ptr, ptr %content66, align 8, !dbg !2766, !tbaa !2745
  %call67 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %65, ptr noundef %67), !dbg !2767
  br label %if.end68

if.end68:                                         ; preds = %if.else, %if.then63
  br label %if.end69, !dbg !2768

if.end69:                                         ; preds = %if.end68, %if.then59
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2769

if.end70:                                         ; preds = %if.end56
  %68 = load ptr, ptr %cur.addr, align 8, !dbg !2770, !tbaa !1471
  %type71 = getelementptr inbounds %struct._xmlNode, ptr %68, i32 0, i32 1, !dbg !2772
  %69 = load i32, ptr %type71, align 8, !dbg !2772, !tbaa !2618
  %cmp72 = icmp eq i32 %69, 7, !dbg !2773
  br i1 %cmp72, label %if.then73, label %if.end103, !dbg !2774

if.then73:                                        ; preds = %if.end70
  %70 = load ptr, ptr %cur.addr, align 8, !dbg !2775, !tbaa !1471
  %content74 = getelementptr inbounds %struct._xmlNode, ptr %70, i32 0, i32 10, !dbg !2778
  %71 = load ptr, ptr %content74, align 8, !dbg !2778, !tbaa !2745
  %cmp75 = icmp ne ptr %71, null, !dbg !2779
  br i1 %cmp75, label %if.then76, label %if.else93, !dbg !2780

if.then76:                                        ; preds = %if.then73
  %72 = load ptr, ptr %buf, align 8, !dbg !2781, !tbaa !1471
  %call77 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %72, i32 noundef 2, ptr noundef @.str.32), !dbg !2783
  %73 = load ptr, ptr %buf, align 8, !dbg !2784, !tbaa !1471
  %74 = load ptr, ptr %cur.addr, align 8, !dbg !2785, !tbaa !1471
  %name78 = getelementptr inbounds %struct._xmlNode, ptr %74, i32 0, i32 2, !dbg !2786
  %75 = load ptr, ptr %name78, align 8, !dbg !2786, !tbaa !2752
  %call79 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %73, ptr noundef %75), !dbg !2787
  %76 = load ptr, ptr %cur.addr, align 8, !dbg !2788, !tbaa !1471
  %content80 = getelementptr inbounds %struct._xmlNode, ptr %76, i32 0, i32 10, !dbg !2790
  %77 = load ptr, ptr %content80, align 8, !dbg !2790, !tbaa !2745
  %cmp81 = icmp ne ptr %77, null, !dbg !2791
  br i1 %cmp81, label %if.then82, label %if.end91, !dbg !2792

if.then82:                                        ; preds = %if.then76
  %78 = load ptr, ptr %ctxt.addr, align 8, !dbg !2793, !tbaa !1471
  %format83 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %78, i32 0, i32 9, !dbg !2796
  %79 = load i32, ptr %format83, align 8, !dbg !2796, !tbaa !1732
  %cmp84 = icmp eq i32 %79, 2, !dbg !2797
  br i1 %cmp84, label %if.then85, label %if.else86, !dbg !2798

if.then85:                                        ; preds = %if.then82
  %80 = load ptr, ptr %ctxt.addr, align 8, !dbg !2799, !tbaa !1471
  call void @xmlOutputBufferWriteWSNonSig(ptr noundef %80, i32 noundef 0), !dbg !2800
  br label %if.end88, !dbg !2800

if.else86:                                        ; preds = %if.then82
  %81 = load ptr, ptr %buf, align 8, !dbg !2801, !tbaa !1471
  %call87 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %81, i32 noundef 1, ptr noundef @.str.17), !dbg !2802
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.then85
  %82 = load ptr, ptr %buf, align 8, !dbg !2803, !tbaa !1471
  %83 = load ptr, ptr %cur.addr, align 8, !dbg !2804, !tbaa !1471
  %content89 = getelementptr inbounds %struct._xmlNode, ptr %83, i32 0, i32 10, !dbg !2805
  %84 = load ptr, ptr %content89, align 8, !dbg !2805, !tbaa !2745
  %call90 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %82, ptr noundef %84), !dbg !2806
  br label %if.end91, !dbg !2807

if.end91:                                         ; preds = %if.end88, %if.then76
  %85 = load ptr, ptr %buf, align 8, !dbg !2808, !tbaa !1471
  %call92 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %85, i32 noundef 2, ptr noundef @.str.33), !dbg !2809
  br label %if.end102, !dbg !2810

if.else93:                                        ; preds = %if.then73
  %86 = load ptr, ptr %buf, align 8, !dbg !2811, !tbaa !1471
  %call94 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %86, i32 noundef 2, ptr noundef @.str.32), !dbg !2813
  %87 = load ptr, ptr %buf, align 8, !dbg !2814, !tbaa !1471
  %88 = load ptr, ptr %cur.addr, align 8, !dbg !2815, !tbaa !1471
  %name95 = getelementptr inbounds %struct._xmlNode, ptr %88, i32 0, i32 2, !dbg !2816
  %89 = load ptr, ptr %name95, align 8, !dbg !2816, !tbaa !2752
  %call96 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %87, ptr noundef %89), !dbg !2817
  %90 = load ptr, ptr %ctxt.addr, align 8, !dbg !2818, !tbaa !1471
  %format97 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %90, i32 0, i32 9, !dbg !2820
  %91 = load i32, ptr %format97, align 8, !dbg !2820, !tbaa !1732
  %cmp98 = icmp eq i32 %91, 2, !dbg !2821
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !2822

if.then99:                                        ; preds = %if.else93
  %92 = load ptr, ptr %ctxt.addr, align 8, !dbg !2823, !tbaa !1471
  call void @xmlOutputBufferWriteWSNonSig(ptr noundef %92, i32 noundef 0), !dbg !2824
  br label %if.end100, !dbg !2824

if.end100:                                        ; preds = %if.then99, %if.else93
  %93 = load ptr, ptr %buf, align 8, !dbg !2825, !tbaa !1471
  %call101 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %93, i32 noundef 2, ptr noundef @.str.33), !dbg !2826
  br label %if.end102

if.end102:                                        ; preds = %if.end100, %if.end91
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2827

if.end103:                                        ; preds = %if.end70
  %94 = load ptr, ptr %cur.addr, align 8, !dbg !2828, !tbaa !1471
  %type104 = getelementptr inbounds %struct._xmlNode, ptr %94, i32 0, i32 1, !dbg !2830
  %95 = load i32, ptr %type104, align 8, !dbg !2830, !tbaa !2618
  %cmp105 = icmp eq i32 %95, 8, !dbg !2831
  br i1 %cmp105, label %if.then106, label %if.end115, !dbg !2832

if.then106:                                       ; preds = %if.end103
  %96 = load ptr, ptr %cur.addr, align 8, !dbg !2833, !tbaa !1471
  %content107 = getelementptr inbounds %struct._xmlNode, ptr %96, i32 0, i32 10, !dbg !2836
  %97 = load ptr, ptr %content107, align 8, !dbg !2836, !tbaa !2745
  %cmp108 = icmp ne ptr %97, null, !dbg !2837
  br i1 %cmp108, label %if.then109, label %if.end114, !dbg !2838

if.then109:                                       ; preds = %if.then106
  %98 = load ptr, ptr %buf, align 8, !dbg !2839, !tbaa !1471
  %call110 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %98, i32 noundef 4, ptr noundef @.str.34), !dbg !2841
  %99 = load ptr, ptr %buf, align 8, !dbg !2842, !tbaa !1471
  %100 = load ptr, ptr %cur.addr, align 8, !dbg !2843, !tbaa !1471
  %content111 = getelementptr inbounds %struct._xmlNode, ptr %100, i32 0, i32 10, !dbg !2844
  %101 = load ptr, ptr %content111, align 8, !dbg !2844, !tbaa !2745
  %call112 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %99, ptr noundef %101), !dbg !2845
  %102 = load ptr, ptr %buf, align 8, !dbg !2846, !tbaa !1471
  %call113 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %102, i32 noundef 3, ptr noundef @.str.35), !dbg !2847
  br label %if.end114, !dbg !2848

if.end114:                                        ; preds = %if.then109, %if.then106
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2849

if.end115:                                        ; preds = %if.end103
  %103 = load ptr, ptr %cur.addr, align 8, !dbg !2850, !tbaa !1471
  %type116 = getelementptr inbounds %struct._xmlNode, ptr %103, i32 0, i32 1, !dbg !2852
  %104 = load i32, ptr %type116, align 8, !dbg !2852, !tbaa !2618
  %cmp117 = icmp eq i32 %104, 5, !dbg !2853
  br i1 %cmp117, label %if.then118, label %if.end123, !dbg !2854

if.then118:                                       ; preds = %if.end115
  %105 = load ptr, ptr %buf, align 8, !dbg !2855, !tbaa !1471
  %call119 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %105, i32 noundef 1, ptr noundef @.str.36), !dbg !2857
  %106 = load ptr, ptr %buf, align 8, !dbg !2858, !tbaa !1471
  %107 = load ptr, ptr %cur.addr, align 8, !dbg !2859, !tbaa !1471
  %name120 = getelementptr inbounds %struct._xmlNode, ptr %107, i32 0, i32 2, !dbg !2860
  %108 = load ptr, ptr %name120, align 8, !dbg !2860, !tbaa !2752
  %call121 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %106, ptr noundef %108), !dbg !2861
  %109 = load ptr, ptr %buf, align 8, !dbg !2862, !tbaa !1471
  %call122 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %109, i32 noundef 1, ptr noundef @.str.37), !dbg !2863
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2864

if.end123:                                        ; preds = %if.end115
  %110 = load ptr, ptr %cur.addr, align 8, !dbg !2865, !tbaa !1471
  %type124 = getelementptr inbounds %struct._xmlNode, ptr %110, i32 0, i32 1, !dbg !2867
  %111 = load i32, ptr %type124, align 8, !dbg !2867, !tbaa !2618
  %cmp125 = icmp eq i32 %111, 4, !dbg !2868
  br i1 %cmp125, label %if.then126, label %if.end167, !dbg !2869

if.then126:                                       ; preds = %if.end123
  %112 = load ptr, ptr %cur.addr, align 8, !dbg !2870, !tbaa !1471
  %content127 = getelementptr inbounds %struct._xmlNode, ptr %112, i32 0, i32 10, !dbg !2873
  %113 = load ptr, ptr %content127, align 8, !dbg !2873, !tbaa !2745
  %cmp128 = icmp eq ptr %113, null, !dbg !2874
  br i1 %cmp128, label %if.then133, label %lor.lhs.false129, !dbg !2875

lor.lhs.false129:                                 ; preds = %if.then126
  %114 = load ptr, ptr %cur.addr, align 8, !dbg !2876, !tbaa !1471
  %content130 = getelementptr inbounds %struct._xmlNode, ptr %114, i32 0, i32 10, !dbg !2877
  %115 = load ptr, ptr %content130, align 8, !dbg !2877, !tbaa !2745
  %116 = load i8, ptr %115, align 1, !dbg !2878, !tbaa !2345
  %conv = zext i8 %116 to i32, !dbg !2878
  %cmp131 = icmp eq i32 %conv, 0, !dbg !2879
  br i1 %cmp131, label %if.then133, label %if.else135, !dbg !2880

if.then133:                                       ; preds = %lor.lhs.false129, %if.then126
  %117 = load ptr, ptr %buf, align 8, !dbg !2881, !tbaa !1471
  %call134 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %117, i32 noundef 12, ptr noundef @.str.38), !dbg !2883
  br label %if.end166, !dbg !2884

if.else135:                                       ; preds = %lor.lhs.false129
  %118 = load ptr, ptr %cur.addr, align 8, !dbg !2885, !tbaa !1471
  %content136 = getelementptr inbounds %struct._xmlNode, ptr %118, i32 0, i32 10, !dbg !2887
  %119 = load ptr, ptr %content136, align 8, !dbg !2887, !tbaa !2745
  store ptr %119, ptr %end, align 8, !dbg !2888, !tbaa !1471
  store ptr %119, ptr %start, align 8, !dbg !2889, !tbaa !1471
  br label %while.cond, !dbg !2890

while.cond:                                       ; preds = %if.end158, %if.else135
  %120 = load ptr, ptr %end, align 8, !dbg !2891, !tbaa !1471
  %121 = load i8, ptr %120, align 1, !dbg !2892, !tbaa !2345
  %conv137 = zext i8 %121 to i32, !dbg !2892
  %cmp138 = icmp ne i32 %conv137, 0, !dbg !2893
  br i1 %cmp138, label %while.body, label %while.end, !dbg !2890

while.body:                                       ; preds = %while.cond
  %122 = load ptr, ptr %end, align 8, !dbg !2894, !tbaa !1471
  %123 = load i8, ptr %122, align 1, !dbg !2897, !tbaa !2345
  %conv140 = zext i8 %123 to i32, !dbg !2897
  %cmp141 = icmp eq i32 %conv140, 93, !dbg !2898
  br i1 %cmp141, label %land.lhs.true143, label %if.end158, !dbg !2899

land.lhs.true143:                                 ; preds = %while.body
  %124 = load ptr, ptr %end, align 8, !dbg !2900, !tbaa !1471
  %add.ptr = getelementptr inbounds i8, ptr %124, i64 1, !dbg !2901
  %125 = load i8, ptr %add.ptr, align 1, !dbg !2902, !tbaa !2345
  %conv144 = zext i8 %125 to i32, !dbg !2902
  %cmp145 = icmp eq i32 %conv144, 93, !dbg !2903
  br i1 %cmp145, label %land.lhs.true147, label %if.end158, !dbg !2904

land.lhs.true147:                                 ; preds = %land.lhs.true143
  %126 = load ptr, ptr %end, align 8, !dbg !2905, !tbaa !1471
  %add.ptr148 = getelementptr inbounds i8, ptr %126, i64 2, !dbg !2906
  %127 = load i8, ptr %add.ptr148, align 1, !dbg !2907, !tbaa !2345
  %conv149 = zext i8 %127 to i32, !dbg !2907
  %cmp150 = icmp eq i32 %conv149, 62, !dbg !2908
  br i1 %cmp150, label %if.then152, label %if.end158, !dbg !2909

if.then152:                                       ; preds = %land.lhs.true147
  %128 = load ptr, ptr %end, align 8, !dbg !2910, !tbaa !1471
  %add.ptr153 = getelementptr inbounds i8, ptr %128, i64 2, !dbg !2912
  store ptr %add.ptr153, ptr %end, align 8, !dbg !2913, !tbaa !1471
  %129 = load ptr, ptr %buf, align 8, !dbg !2914, !tbaa !1471
  %call154 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %129, i32 noundef 9, ptr noundef @.str.39), !dbg !2915
  %130 = load ptr, ptr %buf, align 8, !dbg !2916, !tbaa !1471
  %131 = load ptr, ptr %end, align 8, !dbg !2917, !tbaa !1471
  %132 = load ptr, ptr %start, align 8, !dbg !2918, !tbaa !1471
  %sub.ptr.lhs.cast = ptrtoint ptr %131 to i64, !dbg !2919
  %sub.ptr.rhs.cast = ptrtoint ptr %132 to i64, !dbg !2919
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2919
  %conv155 = trunc i64 %sub.ptr.sub to i32, !dbg !2917
  %133 = load ptr, ptr %start, align 8, !dbg !2920, !tbaa !1471
  %call156 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %130, i32 noundef %conv155, ptr noundef %133), !dbg !2921
  %134 = load ptr, ptr %buf, align 8, !dbg !2922, !tbaa !1471
  %call157 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %134, i32 noundef 3, ptr noundef @.str.40), !dbg !2923
  %135 = load ptr, ptr %end, align 8, !dbg !2924, !tbaa !1471
  store ptr %135, ptr %start, align 8, !dbg !2925, !tbaa !1471
  br label %if.end158, !dbg !2926

if.end158:                                        ; preds = %if.then152, %land.lhs.true147, %land.lhs.true143, %while.body
  %136 = load ptr, ptr %end, align 8, !dbg !2927, !tbaa !1471
  %incdec.ptr = getelementptr inbounds i8, ptr %136, i32 1, !dbg !2927
  store ptr %incdec.ptr, ptr %end, align 8, !dbg !2927, !tbaa !1471
  br label %while.cond, !dbg !2890, !llvm.loop !2928

while.end:                                        ; preds = %while.cond
  %137 = load ptr, ptr %start, align 8, !dbg !2930, !tbaa !1471
  %138 = load ptr, ptr %end, align 8, !dbg !2932, !tbaa !1471
  %cmp159 = icmp ne ptr %137, %138, !dbg !2933
  br i1 %cmp159, label %if.then161, label %if.end165, !dbg !2934

if.then161:                                       ; preds = %while.end
  %139 = load ptr, ptr %buf, align 8, !dbg !2935, !tbaa !1471
  %call162 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %139, i32 noundef 9, ptr noundef @.str.39), !dbg !2937
  %140 = load ptr, ptr %buf, align 8, !dbg !2938, !tbaa !1471
  %141 = load ptr, ptr %start, align 8, !dbg !2939, !tbaa !1471
  %call163 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %140, ptr noundef %141), !dbg !2940
  %142 = load ptr, ptr %buf, align 8, !dbg !2941, !tbaa !1471
  %call164 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %142, i32 noundef 3, ptr noundef @.str.40), !dbg !2942
  br label %if.end165, !dbg !2943

if.end165:                                        ; preds = %if.then161, %while.end
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.then133
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2944

if.end167:                                        ; preds = %if.end123
  %143 = load ptr, ptr %cur.addr, align 8, !dbg !2945, !tbaa !1471
  %type168 = getelementptr inbounds %struct._xmlNode, ptr %143, i32 0, i32 1, !dbg !2947
  %144 = load i32, ptr %type168, align 8, !dbg !2947, !tbaa !2618
  %cmp169 = icmp eq i32 %144, 2, !dbg !2948
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !2949

if.then171:                                       ; preds = %if.end167
  %145 = load ptr, ptr %ctxt.addr, align 8, !dbg !2950, !tbaa !1471
  %146 = load ptr, ptr %cur.addr, align 8, !dbg !2952, !tbaa !1471
  call void @xmlAttrDumpOutput(ptr noundef %145, ptr noundef %146), !dbg !2953
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2954

if.end172:                                        ; preds = %if.end167
  %147 = load ptr, ptr %cur.addr, align 8, !dbg !2955, !tbaa !1471
  %type173 = getelementptr inbounds %struct._xmlNode, ptr %147, i32 0, i32 1, !dbg !2957
  %148 = load i32, ptr %type173, align 8, !dbg !2957, !tbaa !2618
  %cmp174 = icmp eq i32 %148, 18, !dbg !2958
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !2959

if.then176:                                       ; preds = %if.end172
  %149 = load ptr, ptr %ctxt.addr, align 8, !dbg !2960, !tbaa !1471
  %150 = load ptr, ptr %cur.addr, align 8, !dbg !2962, !tbaa !1471
  call void @xmlNsDumpOutputCtxt(ptr noundef %149, ptr noundef %150), !dbg !2963
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2964

if.end177:                                        ; preds = %if.end172
  %151 = load ptr, ptr %ctxt.addr, align 8, !dbg !2965, !tbaa !1471
  %format178 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %151, i32 0, i32 9, !dbg !2966
  %152 = load i32, ptr %format178, align 8, !dbg !2966, !tbaa !1732
  store i32 %152, ptr %format, align 4, !dbg !2967, !tbaa !1775
  %153 = load i32, ptr %format, align 4, !dbg !2968, !tbaa !1775
  %cmp179 = icmp eq i32 %153, 1, !dbg !2970
  br i1 %cmp179, label %if.then181, label %if.end202, !dbg !2971

if.then181:                                       ; preds = %if.end177
  %154 = load ptr, ptr %cur.addr, align 8, !dbg !2972, !tbaa !1471
  %children182 = getelementptr inbounds %struct._xmlNode, ptr %154, i32 0, i32 3, !dbg !2974
  %155 = load ptr, ptr %children182, align 8, !dbg !2974, !tbaa !2700
  store ptr %155, ptr %tmp, align 8, !dbg !2975, !tbaa !1471
  br label %while.cond183, !dbg !2976

while.cond183:                                    ; preds = %if.end200, %if.then181
  %156 = load ptr, ptr %tmp, align 8, !dbg !2977, !tbaa !1471
  %cmp184 = icmp ne ptr %156, null, !dbg !2978
  br i1 %cmp184, label %while.body186, label %while.end201, !dbg !2976

while.body186:                                    ; preds = %while.cond183
  %157 = load ptr, ptr %tmp, align 8, !dbg !2979, !tbaa !1471
  %type187 = getelementptr inbounds %struct._xmlNode, ptr %157, i32 0, i32 1, !dbg !2982
  %158 = load i32, ptr %type187, align 8, !dbg !2982, !tbaa !2618
  %cmp188 = icmp eq i32 %158, 3, !dbg !2983
  br i1 %cmp188, label %if.then198, label %lor.lhs.false190, !dbg !2984

lor.lhs.false190:                                 ; preds = %while.body186
  %159 = load ptr, ptr %tmp, align 8, !dbg !2985, !tbaa !1471
  %type191 = getelementptr inbounds %struct._xmlNode, ptr %159, i32 0, i32 1, !dbg !2986
  %160 = load i32, ptr %type191, align 8, !dbg !2986, !tbaa !2618
  %cmp192 = icmp eq i32 %160, 4, !dbg !2987
  br i1 %cmp192, label %if.then198, label %lor.lhs.false194, !dbg !2988

lor.lhs.false194:                                 ; preds = %lor.lhs.false190
  %161 = load ptr, ptr %tmp, align 8, !dbg !2989, !tbaa !1471
  %type195 = getelementptr inbounds %struct._xmlNode, ptr %161, i32 0, i32 1, !dbg !2990
  %162 = load i32, ptr %type195, align 8, !dbg !2990, !tbaa !2618
  %cmp196 = icmp eq i32 %162, 5, !dbg !2991
  br i1 %cmp196, label %if.then198, label %if.end200, !dbg !2992

if.then198:                                       ; preds = %lor.lhs.false194, %lor.lhs.false190, %while.body186
  %163 = load ptr, ptr %ctxt.addr, align 8, !dbg !2993, !tbaa !1471
  %format199 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %163, i32 0, i32 9, !dbg !2995
  store i32 0, ptr %format199, align 8, !dbg !2996, !tbaa !1732
  br label %while.end201, !dbg !2997

if.end200:                                        ; preds = %lor.lhs.false194
  %164 = load ptr, ptr %tmp, align 8, !dbg !2998, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNode, ptr %164, i32 0, i32 6, !dbg !2999
  %165 = load ptr, ptr %next, align 8, !dbg !2999, !tbaa !2526
  store ptr %165, ptr %tmp, align 8, !dbg !3000, !tbaa !1471
  br label %while.cond183, !dbg !2976, !llvm.loop !3001

while.end201:                                     ; preds = %if.then198, %while.cond183
  br label %if.end202, !dbg !3003

if.end202:                                        ; preds = %while.end201, %if.end177
  %166 = load ptr, ptr %buf, align 8, !dbg !3004, !tbaa !1471
  %call203 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %166, i32 noundef 1, ptr noundef @.str.41), !dbg !3005
  %167 = load ptr, ptr %cur.addr, align 8, !dbg !3006, !tbaa !1471
  %ns = getelementptr inbounds %struct._xmlNode, ptr %167, i32 0, i32 9, !dbg !3008
  %168 = load ptr, ptr %ns, align 8, !dbg !3008, !tbaa !3009
  %cmp204 = icmp ne ptr %168, null, !dbg !3010
  br i1 %cmp204, label %land.lhs.true206, label %if.end215, !dbg !3011

land.lhs.true206:                                 ; preds = %if.end202
  %169 = load ptr, ptr %cur.addr, align 8, !dbg !3012, !tbaa !1471
  %ns207 = getelementptr inbounds %struct._xmlNode, ptr %169, i32 0, i32 9, !dbg !3013
  %170 = load ptr, ptr %ns207, align 8, !dbg !3013, !tbaa !3009
  %prefix = getelementptr inbounds %struct._xmlNs, ptr %170, i32 0, i32 3, !dbg !3014
  %171 = load ptr, ptr %prefix, align 8, !dbg !3014, !tbaa !1722
  %cmp208 = icmp ne ptr %171, null, !dbg !3015
  br i1 %cmp208, label %if.then210, label %if.end215, !dbg !3016

if.then210:                                       ; preds = %land.lhs.true206
  %172 = load ptr, ptr %buf, align 8, !dbg !3017, !tbaa !1471
  %173 = load ptr, ptr %cur.addr, align 8, !dbg !3019, !tbaa !1471
  %ns211 = getelementptr inbounds %struct._xmlNode, ptr %173, i32 0, i32 9, !dbg !3020
  %174 = load ptr, ptr %ns211, align 8, !dbg !3020, !tbaa !3009
  %prefix212 = getelementptr inbounds %struct._xmlNs, ptr %174, i32 0, i32 3, !dbg !3021
  %175 = load ptr, ptr %prefix212, align 8, !dbg !3021, !tbaa !1722
  %call213 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %172, ptr noundef %175), !dbg !3022
  %176 = load ptr, ptr %buf, align 8, !dbg !3023, !tbaa !1471
  %call214 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %176, i32 noundef 1, ptr noundef @.str.42), !dbg !3024
  br label %if.end215, !dbg !3025

if.end215:                                        ; preds = %if.then210, %land.lhs.true206, %if.end202
  %177 = load ptr, ptr %buf, align 8, !dbg !3026, !tbaa !1471
  %178 = load ptr, ptr %cur.addr, align 8, !dbg !3027, !tbaa !1471
  %name216 = getelementptr inbounds %struct._xmlNode, ptr %178, i32 0, i32 2, !dbg !3028
  %179 = load ptr, ptr %name216, align 8, !dbg !3028, !tbaa !2752
  %call217 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %177, ptr noundef %179), !dbg !3029
  %180 = load ptr, ptr %cur.addr, align 8, !dbg !3030, !tbaa !1471
  %nsDef = getelementptr inbounds %struct._xmlNode, ptr %180, i32 0, i32 12, !dbg !3032
  %181 = load ptr, ptr %nsDef, align 8, !dbg !3032, !tbaa !3033
  %tobool218 = icmp ne ptr %181, null, !dbg !3030
  br i1 %tobool218, label %if.then219, label %if.end221, !dbg !3034

if.then219:                                       ; preds = %if.end215
  %182 = load ptr, ptr %ctxt.addr, align 8, !dbg !3035, !tbaa !1471
  %183 = load ptr, ptr %cur.addr, align 8, !dbg !3036, !tbaa !1471
  %nsDef220 = getelementptr inbounds %struct._xmlNode, ptr %183, i32 0, i32 12, !dbg !3037
  %184 = load ptr, ptr %nsDef220, align 8, !dbg !3037, !tbaa !3033
  call void @xmlNsListDumpOutputCtxt(ptr noundef %182, ptr noundef %184), !dbg !3038
  br label %if.end221, !dbg !3038

if.end221:                                        ; preds = %if.then219, %if.end215
  %185 = load ptr, ptr %cur.addr, align 8, !dbg !3039, !tbaa !1471
  %properties = getelementptr inbounds %struct._xmlNode, ptr %185, i32 0, i32 11, !dbg !3041
  %186 = load ptr, ptr %properties, align 8, !dbg !3041, !tbaa !3042
  %cmp222 = icmp ne ptr %186, null, !dbg !3043
  br i1 %cmp222, label %if.then224, label %if.end226, !dbg !3044

if.then224:                                       ; preds = %if.end221
  %187 = load ptr, ptr %ctxt.addr, align 8, !dbg !3045, !tbaa !1471
  %188 = load ptr, ptr %cur.addr, align 8, !dbg !3046, !tbaa !1471
  %properties225 = getelementptr inbounds %struct._xmlNode, ptr %188, i32 0, i32 11, !dbg !3047
  %189 = load ptr, ptr %properties225, align 8, !dbg !3047, !tbaa !3042
  call void @xmlAttrListDumpOutput(ptr noundef %187, ptr noundef %189), !dbg !3048
  br label %if.end226, !dbg !3048

if.end226:                                        ; preds = %if.then224, %if.end221
  %190 = load ptr, ptr %cur.addr, align 8, !dbg !3049, !tbaa !1471
  %type227 = getelementptr inbounds %struct._xmlNode, ptr %190, i32 0, i32 1, !dbg !3051
  %191 = load i32, ptr %type227, align 8, !dbg !3051, !tbaa !2618
  %cmp228 = icmp eq i32 %191, 1, !dbg !3052
  br i1 %cmp228, label %land.lhs.true234, label %lor.lhs.false230, !dbg !3053

lor.lhs.false230:                                 ; preds = %if.end226
  %192 = load ptr, ptr %cur.addr, align 8, !dbg !3054, !tbaa !1471
  %content231 = getelementptr inbounds %struct._xmlNode, ptr %192, i32 0, i32 10, !dbg !3055
  %193 = load ptr, ptr %content231, align 8, !dbg !3055, !tbaa !2745
  %cmp232 = icmp eq ptr %193, null, !dbg !3056
  br i1 %cmp232, label %land.lhs.true234, label %if.end251, !dbg !3057

land.lhs.true234:                                 ; preds = %lor.lhs.false230, %if.end226
  %194 = load ptr, ptr %cur.addr, align 8, !dbg !3058, !tbaa !1471
  %children235 = getelementptr inbounds %struct._xmlNode, ptr %194, i32 0, i32 3, !dbg !3059
  %195 = load ptr, ptr %children235, align 8, !dbg !3059, !tbaa !2700
  %cmp236 = icmp eq ptr %195, null, !dbg !3060
  br i1 %cmp236, label %land.lhs.true238, label %if.end251, !dbg !3061

land.lhs.true238:                                 ; preds = %land.lhs.true234
  %196 = load ptr, ptr %ctxt.addr, align 8, !dbg !3062, !tbaa !1471
  %options239 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %196, i32 0, i32 7, !dbg !3063
  %197 = load i32, ptr %options239, align 8, !dbg !3063, !tbaa !1870
  %and240 = and i32 %197, 4, !dbg !3064
  %cmp241 = icmp eq i32 %and240, 0, !dbg !3065
  br i1 %cmp241, label %if.then243, label %if.end251, !dbg !3066

if.then243:                                       ; preds = %land.lhs.true238
  %198 = load ptr, ptr %ctxt.addr, align 8, !dbg !3067, !tbaa !1471
  %format244 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %198, i32 0, i32 9, !dbg !3070
  %199 = load i32, ptr %format244, align 8, !dbg !3070, !tbaa !1732
  %cmp245 = icmp eq i32 %199, 2, !dbg !3071
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !3072

if.then247:                                       ; preds = %if.then243
  %200 = load ptr, ptr %ctxt.addr, align 8, !dbg !3073, !tbaa !1471
  call void @xmlOutputBufferWriteWSNonSig(ptr noundef %200, i32 noundef 0), !dbg !3074
  br label %if.end248, !dbg !3074

if.end248:                                        ; preds = %if.then247, %if.then243
  %201 = load ptr, ptr %buf, align 8, !dbg !3075, !tbaa !1471
  %call249 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %201, i32 noundef 2, ptr noundef @.str.43), !dbg !3076
  %202 = load i32, ptr %format, align 4, !dbg !3077, !tbaa !1775
  %203 = load ptr, ptr %ctxt.addr, align 8, !dbg !3078, !tbaa !1471
  %format250 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %203, i32 0, i32 9, !dbg !3079
  store i32 %202, ptr %format250, align 8, !dbg !3080, !tbaa !1732
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3081

if.end251:                                        ; preds = %land.lhs.true238, %land.lhs.true234, %lor.lhs.false230
  %204 = load ptr, ptr %ctxt.addr, align 8, !dbg !3082, !tbaa !1471
  %format252 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %204, i32 0, i32 9, !dbg !3084
  %205 = load i32, ptr %format252, align 8, !dbg !3084, !tbaa !1732
  %cmp253 = icmp eq i32 %205, 2, !dbg !3085
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !3086

if.then255:                                       ; preds = %if.end251
  %206 = load ptr, ptr %ctxt.addr, align 8, !dbg !3087, !tbaa !1471
  call void @xmlOutputBufferWriteWSNonSig(ptr noundef %206, i32 noundef 1), !dbg !3088
  br label %if.end256, !dbg !3088

if.end256:                                        ; preds = %if.then255, %if.end251
  %207 = load ptr, ptr %buf, align 8, !dbg !3089, !tbaa !1471
  %call257 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %207, i32 noundef 1, ptr noundef @.str.44), !dbg !3090
  %208 = load ptr, ptr %cur.addr, align 8, !dbg !3091, !tbaa !1471
  %type258 = getelementptr inbounds %struct._xmlNode, ptr %208, i32 0, i32 1, !dbg !3093
  %209 = load i32, ptr %type258, align 8, !dbg !3093, !tbaa !2618
  %cmp259 = icmp ne i32 %209, 1, !dbg !3094
  br i1 %cmp259, label %land.lhs.true261, label %if.end269, !dbg !3095

land.lhs.true261:                                 ; preds = %if.end256
  %210 = load ptr, ptr %cur.addr, align 8, !dbg !3096, !tbaa !1471
  %content262 = getelementptr inbounds %struct._xmlNode, ptr %210, i32 0, i32 10, !dbg !3097
  %211 = load ptr, ptr %content262, align 8, !dbg !3097, !tbaa !2745
  %cmp263 = icmp ne ptr %211, null, !dbg !3098
  br i1 %cmp263, label %if.then265, label %if.end269, !dbg !3099

if.then265:                                       ; preds = %land.lhs.true261
  %212 = load ptr, ptr %buf, align 8, !dbg !3100, !tbaa !1471
  %213 = load ptr, ptr %cur.addr, align 8, !dbg !3102, !tbaa !1471
  %content266 = getelementptr inbounds %struct._xmlNode, ptr %213, i32 0, i32 10, !dbg !3103
  %214 = load ptr, ptr %content266, align 8, !dbg !3103, !tbaa !2745
  %215 = load ptr, ptr %ctxt.addr, align 8, !dbg !3104, !tbaa !1471
  %escape267 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %215, i32 0, i32 13, !dbg !3105
  %216 = load ptr, ptr %escape267, align 8, !dbg !3105, !tbaa !1863
  %call268 = call i32 @xmlOutputBufferWriteEscape__internal_alias(ptr noundef %212, ptr noundef %214, ptr noundef %216), !dbg !3106
  br label %if.end269, !dbg !3107

if.end269:                                        ; preds = %if.then265, %land.lhs.true261, %if.end256
  %217 = load ptr, ptr %cur.addr, align 8, !dbg !3108, !tbaa !1471
  %children270 = getelementptr inbounds %struct._xmlNode, ptr %217, i32 0, i32 3, !dbg !3110
  %218 = load ptr, ptr %children270, align 8, !dbg !3110, !tbaa !2700
  %cmp271 = icmp ne ptr %218, null, !dbg !3111
  br i1 %cmp271, label %if.then273, label %if.end306, !dbg !3112

if.then273:                                       ; preds = %if.end269
  %219 = load ptr, ptr %ctxt.addr, align 8, !dbg !3113, !tbaa !1471
  %format274 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %219, i32 0, i32 9, !dbg !3116
  %220 = load i32, ptr %format274, align 8, !dbg !3116, !tbaa !1732
  %cmp275 = icmp eq i32 %220, 1, !dbg !3117
  br i1 %cmp275, label %if.then277, label %if.end279, !dbg !3118

if.then277:                                       ; preds = %if.then273
  %221 = load ptr, ptr %buf, align 8, !dbg !3119, !tbaa !1471
  %call278 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %221, i32 noundef 1, ptr noundef @.str.21), !dbg !3120
  br label %if.end279, !dbg !3120

if.end279:                                        ; preds = %if.then277, %if.then273
  %222 = load ptr, ptr %ctxt.addr, align 8, !dbg !3121, !tbaa !1471
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %222, i32 0, i32 8, !dbg !3123
  %223 = load i32, ptr %level, align 4, !dbg !3123, !tbaa !2512
  %cmp280 = icmp sge i32 %223, 0, !dbg !3124
  br i1 %cmp280, label %if.then282, label %if.end284, !dbg !3125

if.then282:                                       ; preds = %if.end279
  %224 = load ptr, ptr %ctxt.addr, align 8, !dbg !3126, !tbaa !1471
  %level283 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %224, i32 0, i32 8, !dbg !3127
  %225 = load i32, ptr %level283, align 4, !dbg !3128, !tbaa !2512
  %inc = add nsw i32 %225, 1, !dbg !3128
  store i32 %inc, ptr %level283, align 4, !dbg !3128, !tbaa !2512
  br label %if.end284, !dbg !3126

if.end284:                                        ; preds = %if.then282, %if.end279
  %226 = load ptr, ptr %ctxt.addr, align 8, !dbg !3129, !tbaa !1471
  %227 = load ptr, ptr %cur.addr, align 8, !dbg !3130, !tbaa !1471
  %children285 = getelementptr inbounds %struct._xmlNode, ptr %227, i32 0, i32 3, !dbg !3131
  %228 = load ptr, ptr %children285, align 8, !dbg !3131, !tbaa !2700
  call void @xmlNodeListDumpOutput(ptr noundef %226, ptr noundef %228), !dbg !3132
  %229 = load ptr, ptr %ctxt.addr, align 8, !dbg !3133, !tbaa !1471
  %level286 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %229, i32 0, i32 8, !dbg !3135
  %230 = load i32, ptr %level286, align 4, !dbg !3135, !tbaa !2512
  %cmp287 = icmp sgt i32 %230, 0, !dbg !3136
  br i1 %cmp287, label %if.then289, label %if.end291, !dbg !3137

if.then289:                                       ; preds = %if.end284
  %231 = load ptr, ptr %ctxt.addr, align 8, !dbg !3138, !tbaa !1471
  %level290 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %231, i32 0, i32 8, !dbg !3139
  %232 = load i32, ptr %level290, align 4, !dbg !3140, !tbaa !2512
  %dec = add nsw i32 %232, -1, !dbg !3140
  store i32 %dec, ptr %level290, align 4, !dbg !3140, !tbaa !2512
  br label %if.end291, !dbg !3138

if.end291:                                        ; preds = %if.then289, %if.end284
  %call292 = call ptr @__xmlIndentTreeOutput(), !dbg !3141
  %233 = load i32, ptr %call292, align 4, !dbg !3141, !tbaa !1775
  %tobool293 = icmp ne i32 %233, 0, !dbg !3143
  br i1 %tobool293, label %land.lhs.true294, label %if.end305, !dbg !3144

land.lhs.true294:                                 ; preds = %if.end291
  %234 = load ptr, ptr %ctxt.addr, align 8, !dbg !3145, !tbaa !1471
  %format295 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %234, i32 0, i32 9, !dbg !3146
  %235 = load i32, ptr %format295, align 8, !dbg !3146, !tbaa !1732
  %cmp296 = icmp eq i32 %235, 1, !dbg !3147
  br i1 %cmp296, label %if.then298, label %if.end305, !dbg !3148

if.then298:                                       ; preds = %land.lhs.true294
  %236 = load ptr, ptr %buf, align 8, !dbg !3149, !tbaa !1471
  %237 = load ptr, ptr %ctxt.addr, align 8, !dbg !3150, !tbaa !1471
  %indent_size = getelementptr inbounds %struct._xmlSaveCtxt, ptr %237, i32 0, i32 12, !dbg !3151
  %238 = load i32, ptr %indent_size, align 8, !dbg !3151, !tbaa !3152
  %239 = load ptr, ptr %ctxt.addr, align 8, !dbg !3153, !tbaa !1471
  %level299 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %239, i32 0, i32 8, !dbg !3154
  %240 = load i32, ptr %level299, align 4, !dbg !3154, !tbaa !2512
  %241 = load ptr, ptr %ctxt.addr, align 8, !dbg !3155, !tbaa !1471
  %indent_nr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %241, i32 0, i32 11, !dbg !3156
  %242 = load i32, ptr %indent_nr, align 4, !dbg !3156, !tbaa !3157
  %cmp300 = icmp sgt i32 %240, %242, !dbg !3158
  br i1 %cmp300, label %cond.true, label %cond.false, !dbg !3153

cond.true:                                        ; preds = %if.then298
  %243 = load ptr, ptr %ctxt.addr, align 8, !dbg !3159, !tbaa !1471
  %indent_nr302 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %243, i32 0, i32 11, !dbg !3160
  %244 = load i32, ptr %indent_nr302, align 4, !dbg !3160, !tbaa !3157
  br label %cond.end, !dbg !3153

cond.false:                                       ; preds = %if.then298
  %245 = load ptr, ptr %ctxt.addr, align 8, !dbg !3161, !tbaa !1471
  %level303 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %245, i32 0, i32 8, !dbg !3162
  %246 = load i32, ptr %level303, align 4, !dbg !3162, !tbaa !2512
  br label %cond.end, !dbg !3153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %244, %cond.true ], [ %246, %cond.false ], !dbg !3153
  %mul = mul nsw i32 %238, %cond, !dbg !3163
  %247 = load ptr, ptr %ctxt.addr, align 8, !dbg !3164, !tbaa !1471
  %indent = getelementptr inbounds %struct._xmlSaveCtxt, ptr %247, i32 0, i32 10, !dbg !3165
  %arraydecay = getelementptr inbounds [61 x i8], ptr %indent, i64 0, i64 0, !dbg !3164
  %call304 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %236, i32 noundef %mul, ptr noundef %arraydecay), !dbg !3166
  br label %if.end305, !dbg !3166

if.end305:                                        ; preds = %cond.end, %land.lhs.true294, %if.end291
  br label %if.end306, !dbg !3167

if.end306:                                        ; preds = %if.end305, %if.end269
  %248 = load ptr, ptr %buf, align 8, !dbg !3168, !tbaa !1471
  %call307 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %248, i32 noundef 2, ptr noundef @.str.45), !dbg !3169
  %249 = load ptr, ptr %cur.addr, align 8, !dbg !3170, !tbaa !1471
  %ns308 = getelementptr inbounds %struct._xmlNode, ptr %249, i32 0, i32 9, !dbg !3172
  %250 = load ptr, ptr %ns308, align 8, !dbg !3172, !tbaa !3009
  %cmp309 = icmp ne ptr %250, null, !dbg !3173
  br i1 %cmp309, label %land.lhs.true311, label %if.end321, !dbg !3174

land.lhs.true311:                                 ; preds = %if.end306
  %251 = load ptr, ptr %cur.addr, align 8, !dbg !3175, !tbaa !1471
  %ns312 = getelementptr inbounds %struct._xmlNode, ptr %251, i32 0, i32 9, !dbg !3176
  %252 = load ptr, ptr %ns312, align 8, !dbg !3176, !tbaa !3009
  %prefix313 = getelementptr inbounds %struct._xmlNs, ptr %252, i32 0, i32 3, !dbg !3177
  %253 = load ptr, ptr %prefix313, align 8, !dbg !3177, !tbaa !1722
  %cmp314 = icmp ne ptr %253, null, !dbg !3178
  br i1 %cmp314, label %if.then316, label %if.end321, !dbg !3179

if.then316:                                       ; preds = %land.lhs.true311
  %254 = load ptr, ptr %buf, align 8, !dbg !3180, !tbaa !1471
  %255 = load ptr, ptr %cur.addr, align 8, !dbg !3182, !tbaa !1471
  %ns317 = getelementptr inbounds %struct._xmlNode, ptr %255, i32 0, i32 9, !dbg !3183
  %256 = load ptr, ptr %ns317, align 8, !dbg !3183, !tbaa !3009
  %prefix318 = getelementptr inbounds %struct._xmlNs, ptr %256, i32 0, i32 3, !dbg !3184
  %257 = load ptr, ptr %prefix318, align 8, !dbg !3184, !tbaa !1722
  %call319 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %254, ptr noundef %257), !dbg !3185
  %258 = load ptr, ptr %buf, align 8, !dbg !3186, !tbaa !1471
  %call320 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %258, i32 noundef 1, ptr noundef @.str.42), !dbg !3187
  br label %if.end321, !dbg !3188

if.end321:                                        ; preds = %if.then316, %land.lhs.true311, %if.end306
  %259 = load ptr, ptr %buf, align 8, !dbg !3189, !tbaa !1471
  %260 = load ptr, ptr %cur.addr, align 8, !dbg !3190, !tbaa !1471
  %name322 = getelementptr inbounds %struct._xmlNode, ptr %260, i32 0, i32 2, !dbg !3191
  %261 = load ptr, ptr %name322, align 8, !dbg !3191, !tbaa !2752
  %call323 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %259, ptr noundef %261), !dbg !3192
  %262 = load ptr, ptr %ctxt.addr, align 8, !dbg !3193, !tbaa !1471
  %format324 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %262, i32 0, i32 9, !dbg !3195
  %263 = load i32, ptr %format324, align 8, !dbg !3195, !tbaa !1732
  %cmp325 = icmp eq i32 %263, 2, !dbg !3196
  br i1 %cmp325, label %if.then327, label %if.end328, !dbg !3197

if.then327:                                       ; preds = %if.end321
  %264 = load ptr, ptr %ctxt.addr, align 8, !dbg !3198, !tbaa !1471
  call void @xmlOutputBufferWriteWSNonSig(ptr noundef %264, i32 noundef 0), !dbg !3199
  br label %if.end328, !dbg !3199

if.end328:                                        ; preds = %if.then327, %if.end321
  %265 = load ptr, ptr %buf, align 8, !dbg !3200, !tbaa !1471
  %call329 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %265, i32 noundef 1, ptr noundef @.str.44), !dbg !3201
  %266 = load i32, ptr %format, align 4, !dbg !3202, !tbaa !1775
  %267 = load ptr, ptr %ctxt.addr, align 8, !dbg !3203, !tbaa !1471
  %format330 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %267, i32 0, i32 9, !dbg !3204
  store i32 %266, ptr %format330, align 8, !dbg !3205, !tbaa !1732
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3206
  br label %cleanup, !dbg !3206

cleanup:                                          ; preds = %if.end328, %if.end248, %if.then176, %if.then171, %if.end166, %if.then118, %if.end114, %if.end102, %if.end69, %if.then54, %if.then49, %if.then45, %if.then41, %if.then37, %if.then32, %if.then15, %if.then13, %if.then7, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !3206
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #6, !dbg !3206
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6, !dbg !3206
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #6, !dbg !3206
  call void @llvm.lifetime.end.p0(i64 4, ptr %format) #6, !dbg !3206
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !3206

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveFlush__internal_alias(ptr noundef %ctxt) #0 !dbg !3207 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !3211, metadata !DIExpression()), !dbg !3212
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !3213, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3215
  br i1 %cmp, label %if.then, label %if.end, !dbg !3216

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !3217
  br label %return, !dbg !3217

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !3218, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !3220
  %2 = load ptr, ptr %buf, align 8, !dbg !3220, !tbaa !1798
  %cmp1 = icmp eq ptr %2, null, !dbg !3221
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3222

if.then2:                                         ; preds = %if.end
  store i32 -1, ptr %retval, align 4, !dbg !3223
  br label %return, !dbg !3223

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !3224, !tbaa !1471
  %buf4 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %3, i32 0, i32 6, !dbg !3225
  %4 = load ptr, ptr %buf4, align 8, !dbg !3225, !tbaa !1798
  %call = call i32 @xmlOutputBufferFlush__internal_alias(ptr noundef %4), !dbg !3226
  store i32 %call, ptr %retval, align 4, !dbg !3227
  br label %return, !dbg !3227

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %5 = load i32, ptr %retval, align 4, !dbg !3228
  ret i32 %5, !dbg !3228
}

declare !dbg !3229 hidden i32 @xmlOutputBufferFlush__internal_alias(ptr noundef) #1

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveClose__internal_alias(ptr noundef %ctxt) #0 !dbg !3232 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !3234, metadata !DIExpression()), !dbg !3236
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #6, !dbg !3237
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !3235, metadata !DIExpression()), !dbg !3238
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !3239, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3241
  br i1 %cmp, label %if.then, label %if.end, !dbg !3242

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !3243
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3243

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !3244, !tbaa !1471
  %call = call i32 @xmlSaveFlush__internal_alias(ptr noundef %1), !dbg !3245
  store i32 %call, ptr %ret, align 4, !dbg !3246, !tbaa !1775
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !3247, !tbaa !1471
  call void @xmlFreeSaveCtxt(ptr noundef %2), !dbg !3248
  %3 = load i32, ptr %ret, align 4, !dbg !3249, !tbaa !1775
  store i32 %3, ptr %retval, align 4, !dbg !3250
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3250

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #6, !dbg !3251
  %4 = load i32, ptr %retval, align 4, !dbg !3251
  ret i32 %4, !dbg !3251
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveSetEscape__internal_alias(ptr noundef %ctxt, ptr noundef %escape) #0 !dbg !3252 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %escape.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !3256, metadata !DIExpression()), !dbg !3258
  store ptr %escape, ptr %escape.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %escape.addr, metadata !3257, metadata !DIExpression()), !dbg !3259
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !3260, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3262
  br i1 %cmp, label %if.then, label %if.end, !dbg !3263

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !3264
  br label %return, !dbg !3264

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %escape.addr, align 8, !dbg !3265, !tbaa !1471
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !3266, !tbaa !1471
  %escape1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %2, i32 0, i32 13, !dbg !3267
  store ptr %1, ptr %escape1, align 8, !dbg !3268, !tbaa !1863
  store i32 0, ptr %retval, align 4, !dbg !3269
  br label %return, !dbg !3269

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !3270
  ret i32 %3, !dbg !3270
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveSetAttrEscape__internal_alias(ptr noundef %ctxt, ptr noundef %escape) #0 !dbg !3271 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %escape.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !3273, metadata !DIExpression()), !dbg !3275
  store ptr %escape, ptr %escape.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %escape.addr, metadata !3274, metadata !DIExpression()), !dbg !3276
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !3277, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3279
  br i1 %cmp, label %if.then, label %if.end, !dbg !3280

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !3281
  br label %return, !dbg !3281

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %escape.addr, align 8, !dbg !3282, !tbaa !1471
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !3283, !tbaa !1471
  %escapeAttr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %2, i32 0, i32 14, !dbg !3284
  store ptr %1, ptr %escapeAttr, align 8, !dbg !3285, !tbaa !2193
  store i32 0, ptr %retval, align 4, !dbg !3286
  br label %return, !dbg !3286

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !3287
  ret i32 %3, !dbg !3287
}

; Function Attrs: nounwind uwtable
define void @xmlBufAttrSerializeTxtContent(ptr noundef %buf, ptr noundef %doc, ptr noundef %attr, ptr noundef %string) #0 !dbg !3288 {
entry:
  %buf.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %attr.addr = alloca ptr, align 8
  %string.addr = alloca ptr, align 8
  %base = alloca ptr, align 8
  %cur = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca [12 x i8], align 1
  %val = alloca i32, align 4
  %l = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !3292, metadata !DIExpression()), !dbg !3312
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !3293, metadata !DIExpression()), !dbg !3313
  store ptr %attr, ptr %attr.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %attr.addr, metadata !3294, metadata !DIExpression()), !dbg !3314
  store ptr %string, ptr %string.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %string.addr, metadata !3295, metadata !DIExpression()), !dbg !3315
  call void @llvm.lifetime.start.p0(i64 8, ptr %base) #6, !dbg !3316
  tail call void @llvm.dbg.declare(metadata ptr %base, metadata !3296, metadata !DIExpression()), !dbg !3317
  call void @llvm.lifetime.start.p0(i64 8, ptr %cur) #6, !dbg !3316
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !3297, metadata !DIExpression()), !dbg !3318
  %0 = load ptr, ptr %string.addr, align 8, !dbg !3319, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3321
  br i1 %cmp, label %if.then, label %if.end, !dbg !3322

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup275, !dbg !3323

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %string.addr, align 8, !dbg !3324, !tbaa !1471
  store ptr %1, ptr %cur, align 8, !dbg !3325, !tbaa !1471
  store ptr %1, ptr %base, align 8, !dbg !3326, !tbaa !1471
  br label %while.cond, !dbg !3327

while.cond:                                       ; preds = %if.end265, %cleanup, %if.end
  %2 = load ptr, ptr %cur, align 8, !dbg !3328, !tbaa !1471
  %3 = load i8, ptr %2, align 1, !dbg !3329, !tbaa !2345
  %conv = zext i8 %3 to i32, !dbg !3329
  %cmp1 = icmp ne i32 %conv, 0, !dbg !3330
  br i1 %cmp1, label %while.body, label %while.end, !dbg !3327

while.body:                                       ; preds = %while.cond
  %4 = load ptr, ptr %cur, align 8, !dbg !3331, !tbaa !1471
  %5 = load i8, ptr %4, align 1, !dbg !3332, !tbaa !2345
  %conv3 = zext i8 %5 to i32, !dbg !3332
  %cmp4 = icmp eq i32 %conv3, 10, !dbg !3333
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !3334

if.then6:                                         ; preds = %while.body
  %6 = load ptr, ptr %base, align 8, !dbg !3335, !tbaa !1471
  %7 = load ptr, ptr %cur, align 8, !dbg !3338, !tbaa !1471
  %cmp7 = icmp ne ptr %6, %7, !dbg !3339
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !3340

if.then9:                                         ; preds = %if.then6
  %8 = load ptr, ptr %buf.addr, align 8, !dbg !3341, !tbaa !1471
  %9 = load ptr, ptr %base, align 8, !dbg !3342, !tbaa !1471
  %10 = load ptr, ptr %cur, align 8, !dbg !3343, !tbaa !1471
  %11 = load ptr, ptr %base, align 8, !dbg !3344, !tbaa !1471
  %sub.ptr.lhs.cast = ptrtoint ptr %10 to i64, !dbg !3345
  %sub.ptr.rhs.cast = ptrtoint ptr %11 to i64, !dbg !3345
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3345
  %conv10 = trunc i64 %sub.ptr.sub to i32, !dbg !3343
  %call = call i32 @xmlBufAdd(ptr noundef %8, ptr noundef %9, i32 noundef %conv10), !dbg !3346
  br label %if.end11, !dbg !3346

if.end11:                                         ; preds = %if.then9, %if.then6
  %12 = load ptr, ptr %buf.addr, align 8, !dbg !3347, !tbaa !1471
  %call12 = call i32 @xmlBufAdd(ptr noundef %12, ptr noundef @.str.6, i32 noundef 5), !dbg !3348
  %13 = load ptr, ptr %cur, align 8, !dbg !3349, !tbaa !1471
  %incdec.ptr = getelementptr inbounds i8, ptr %13, i32 1, !dbg !3349
  store ptr %incdec.ptr, ptr %cur, align 8, !dbg !3349, !tbaa !1471
  %14 = load ptr, ptr %cur, align 8, !dbg !3350, !tbaa !1471
  store ptr %14, ptr %base, align 8, !dbg !3351, !tbaa !1471
  br label %if.end265, !dbg !3352

if.else:                                          ; preds = %while.body
  %15 = load ptr, ptr %cur, align 8, !dbg !3353, !tbaa !1471
  %16 = load i8, ptr %15, align 1, !dbg !3354, !tbaa !2345
  %conv13 = zext i8 %16 to i32, !dbg !3354
  %cmp14 = icmp eq i32 %conv13, 13, !dbg !3355
  br i1 %cmp14, label %if.then16, label %if.else28, !dbg !3356

if.then16:                                        ; preds = %if.else
  %17 = load ptr, ptr %base, align 8, !dbg !3357, !tbaa !1471
  %18 = load ptr, ptr %cur, align 8, !dbg !3360, !tbaa !1471
  %cmp17 = icmp ne ptr %17, %18, !dbg !3361
  br i1 %cmp17, label %if.then19, label %if.end25, !dbg !3362

if.then19:                                        ; preds = %if.then16
  %19 = load ptr, ptr %buf.addr, align 8, !dbg !3363, !tbaa !1471
  %20 = load ptr, ptr %base, align 8, !dbg !3364, !tbaa !1471
  %21 = load ptr, ptr %cur, align 8, !dbg !3365, !tbaa !1471
  %22 = load ptr, ptr %base, align 8, !dbg !3366, !tbaa !1471
  %sub.ptr.lhs.cast20 = ptrtoint ptr %21 to i64, !dbg !3367
  %sub.ptr.rhs.cast21 = ptrtoint ptr %22 to i64, !dbg !3367
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !3367
  %conv23 = trunc i64 %sub.ptr.sub22 to i32, !dbg !3365
  %call24 = call i32 @xmlBufAdd(ptr noundef %19, ptr noundef %20, i32 noundef %conv23), !dbg !3368
  br label %if.end25, !dbg !3368

if.end25:                                         ; preds = %if.then19, %if.then16
  %23 = load ptr, ptr %buf.addr, align 8, !dbg !3369, !tbaa !1471
  %call26 = call i32 @xmlBufAdd(ptr noundef %23, ptr noundef @.str.7, i32 noundef 5), !dbg !3370
  %24 = load ptr, ptr %cur, align 8, !dbg !3371, !tbaa !1471
  %incdec.ptr27 = getelementptr inbounds i8, ptr %24, i32 1, !dbg !3371
  store ptr %incdec.ptr27, ptr %cur, align 8, !dbg !3371, !tbaa !1471
  %25 = load ptr, ptr %cur, align 8, !dbg !3372, !tbaa !1471
  store ptr %25, ptr %base, align 8, !dbg !3373, !tbaa !1471
  br label %if.end264, !dbg !3374

if.else28:                                        ; preds = %if.else
  %26 = load ptr, ptr %cur, align 8, !dbg !3375, !tbaa !1471
  %27 = load i8, ptr %26, align 1, !dbg !3376, !tbaa !2345
  %conv29 = zext i8 %27 to i32, !dbg !3376
  %cmp30 = icmp eq i32 %conv29, 9, !dbg !3377
  br i1 %cmp30, label %if.then32, label %if.else44, !dbg !3378

if.then32:                                        ; preds = %if.else28
  %28 = load ptr, ptr %base, align 8, !dbg !3379, !tbaa !1471
  %29 = load ptr, ptr %cur, align 8, !dbg !3382, !tbaa !1471
  %cmp33 = icmp ne ptr %28, %29, !dbg !3383
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !3384

if.then35:                                        ; preds = %if.then32
  %30 = load ptr, ptr %buf.addr, align 8, !dbg !3385, !tbaa !1471
  %31 = load ptr, ptr %base, align 8, !dbg !3386, !tbaa !1471
  %32 = load ptr, ptr %cur, align 8, !dbg !3387, !tbaa !1471
  %33 = load ptr, ptr %base, align 8, !dbg !3388, !tbaa !1471
  %sub.ptr.lhs.cast36 = ptrtoint ptr %32 to i64, !dbg !3389
  %sub.ptr.rhs.cast37 = ptrtoint ptr %33 to i64, !dbg !3389
  %sub.ptr.sub38 = sub i64 %sub.ptr.lhs.cast36, %sub.ptr.rhs.cast37, !dbg !3389
  %conv39 = trunc i64 %sub.ptr.sub38 to i32, !dbg !3387
  %call40 = call i32 @xmlBufAdd(ptr noundef %30, ptr noundef %31, i32 noundef %conv39), !dbg !3390
  br label %if.end41, !dbg !3390

if.end41:                                         ; preds = %if.then35, %if.then32
  %34 = load ptr, ptr %buf.addr, align 8, !dbg !3391, !tbaa !1471
  %call42 = call i32 @xmlBufAdd(ptr noundef %34, ptr noundef @.str.8, i32 noundef 4), !dbg !3392
  %35 = load ptr, ptr %cur, align 8, !dbg !3393, !tbaa !1471
  %incdec.ptr43 = getelementptr inbounds i8, ptr %35, i32 1, !dbg !3393
  store ptr %incdec.ptr43, ptr %cur, align 8, !dbg !3393, !tbaa !1471
  %36 = load ptr, ptr %cur, align 8, !dbg !3394, !tbaa !1471
  store ptr %36, ptr %base, align 8, !dbg !3395, !tbaa !1471
  br label %if.end263, !dbg !3396

if.else44:                                        ; preds = %if.else28
  %37 = load ptr, ptr %cur, align 8, !dbg !3397, !tbaa !1471
  %38 = load i8, ptr %37, align 1, !dbg !3398, !tbaa !2345
  %conv45 = zext i8 %38 to i32, !dbg !3398
  %cmp46 = icmp eq i32 %conv45, 34, !dbg !3399
  br i1 %cmp46, label %if.then48, label %if.else60, !dbg !3400

if.then48:                                        ; preds = %if.else44
  %39 = load ptr, ptr %base, align 8, !dbg !3401, !tbaa !1471
  %40 = load ptr, ptr %cur, align 8, !dbg !3404, !tbaa !1471
  %cmp49 = icmp ne ptr %39, %40, !dbg !3405
  br i1 %cmp49, label %if.then51, label %if.end57, !dbg !3406

if.then51:                                        ; preds = %if.then48
  %41 = load ptr, ptr %buf.addr, align 8, !dbg !3407, !tbaa !1471
  %42 = load ptr, ptr %base, align 8, !dbg !3408, !tbaa !1471
  %43 = load ptr, ptr %cur, align 8, !dbg !3409, !tbaa !1471
  %44 = load ptr, ptr %base, align 8, !dbg !3410, !tbaa !1471
  %sub.ptr.lhs.cast52 = ptrtoint ptr %43 to i64, !dbg !3411
  %sub.ptr.rhs.cast53 = ptrtoint ptr %44 to i64, !dbg !3411
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53, !dbg !3411
  %conv55 = trunc i64 %sub.ptr.sub54 to i32, !dbg !3409
  %call56 = call i32 @xmlBufAdd(ptr noundef %41, ptr noundef %42, i32 noundef %conv55), !dbg !3412
  br label %if.end57, !dbg !3412

if.end57:                                         ; preds = %if.then51, %if.then48
  %45 = load ptr, ptr %buf.addr, align 8, !dbg !3413, !tbaa !1471
  %call58 = call i32 @xmlBufAdd(ptr noundef %45, ptr noundef @.str.9, i32 noundef 6), !dbg !3414
  %46 = load ptr, ptr %cur, align 8, !dbg !3415, !tbaa !1471
  %incdec.ptr59 = getelementptr inbounds i8, ptr %46, i32 1, !dbg !3415
  store ptr %incdec.ptr59, ptr %cur, align 8, !dbg !3415, !tbaa !1471
  %47 = load ptr, ptr %cur, align 8, !dbg !3416, !tbaa !1471
  store ptr %47, ptr %base, align 8, !dbg !3417, !tbaa !1471
  br label %if.end262, !dbg !3418

if.else60:                                        ; preds = %if.else44
  %48 = load ptr, ptr %cur, align 8, !dbg !3419, !tbaa !1471
  %49 = load i8, ptr %48, align 1, !dbg !3420, !tbaa !2345
  %conv61 = zext i8 %49 to i32, !dbg !3420
  %cmp62 = icmp eq i32 %conv61, 60, !dbg !3421
  br i1 %cmp62, label %if.then64, label %if.else76, !dbg !3422

if.then64:                                        ; preds = %if.else60
  %50 = load ptr, ptr %base, align 8, !dbg !3423, !tbaa !1471
  %51 = load ptr, ptr %cur, align 8, !dbg !3426, !tbaa !1471
  %cmp65 = icmp ne ptr %50, %51, !dbg !3427
  br i1 %cmp65, label %if.then67, label %if.end73, !dbg !3428

if.then67:                                        ; preds = %if.then64
  %52 = load ptr, ptr %buf.addr, align 8, !dbg !3429, !tbaa !1471
  %53 = load ptr, ptr %base, align 8, !dbg !3430, !tbaa !1471
  %54 = load ptr, ptr %cur, align 8, !dbg !3431, !tbaa !1471
  %55 = load ptr, ptr %base, align 8, !dbg !3432, !tbaa !1471
  %sub.ptr.lhs.cast68 = ptrtoint ptr %54 to i64, !dbg !3433
  %sub.ptr.rhs.cast69 = ptrtoint ptr %55 to i64, !dbg !3433
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69, !dbg !3433
  %conv71 = trunc i64 %sub.ptr.sub70 to i32, !dbg !3431
  %call72 = call i32 @xmlBufAdd(ptr noundef %52, ptr noundef %53, i32 noundef %conv71), !dbg !3434
  br label %if.end73, !dbg !3434

if.end73:                                         ; preds = %if.then67, %if.then64
  %56 = load ptr, ptr %buf.addr, align 8, !dbg !3435, !tbaa !1471
  %call74 = call i32 @xmlBufAdd(ptr noundef %56, ptr noundef @.str.10, i32 noundef 4), !dbg !3436
  %57 = load ptr, ptr %cur, align 8, !dbg !3437, !tbaa !1471
  %incdec.ptr75 = getelementptr inbounds i8, ptr %57, i32 1, !dbg !3437
  store ptr %incdec.ptr75, ptr %cur, align 8, !dbg !3437, !tbaa !1471
  %58 = load ptr, ptr %cur, align 8, !dbg !3438, !tbaa !1471
  store ptr %58, ptr %base, align 8, !dbg !3439, !tbaa !1471
  br label %if.end261, !dbg !3440

if.else76:                                        ; preds = %if.else60
  %59 = load ptr, ptr %cur, align 8, !dbg !3441, !tbaa !1471
  %60 = load i8, ptr %59, align 1, !dbg !3442, !tbaa !2345
  %conv77 = zext i8 %60 to i32, !dbg !3442
  %cmp78 = icmp eq i32 %conv77, 62, !dbg !3443
  br i1 %cmp78, label %if.then80, label %if.else92, !dbg !3444

if.then80:                                        ; preds = %if.else76
  %61 = load ptr, ptr %base, align 8, !dbg !3445, !tbaa !1471
  %62 = load ptr, ptr %cur, align 8, !dbg !3448, !tbaa !1471
  %cmp81 = icmp ne ptr %61, %62, !dbg !3449
  br i1 %cmp81, label %if.then83, label %if.end89, !dbg !3450

if.then83:                                        ; preds = %if.then80
  %63 = load ptr, ptr %buf.addr, align 8, !dbg !3451, !tbaa !1471
  %64 = load ptr, ptr %base, align 8, !dbg !3452, !tbaa !1471
  %65 = load ptr, ptr %cur, align 8, !dbg !3453, !tbaa !1471
  %66 = load ptr, ptr %base, align 8, !dbg !3454, !tbaa !1471
  %sub.ptr.lhs.cast84 = ptrtoint ptr %65 to i64, !dbg !3455
  %sub.ptr.rhs.cast85 = ptrtoint ptr %66 to i64, !dbg !3455
  %sub.ptr.sub86 = sub i64 %sub.ptr.lhs.cast84, %sub.ptr.rhs.cast85, !dbg !3455
  %conv87 = trunc i64 %sub.ptr.sub86 to i32, !dbg !3453
  %call88 = call i32 @xmlBufAdd(ptr noundef %63, ptr noundef %64, i32 noundef %conv87), !dbg !3456
  br label %if.end89, !dbg !3456

if.end89:                                         ; preds = %if.then83, %if.then80
  %67 = load ptr, ptr %buf.addr, align 8, !dbg !3457, !tbaa !1471
  %call90 = call i32 @xmlBufAdd(ptr noundef %67, ptr noundef @.str.11, i32 noundef 4), !dbg !3458
  %68 = load ptr, ptr %cur, align 8, !dbg !3459, !tbaa !1471
  %incdec.ptr91 = getelementptr inbounds i8, ptr %68, i32 1, !dbg !3459
  store ptr %incdec.ptr91, ptr %cur, align 8, !dbg !3459, !tbaa !1471
  %69 = load ptr, ptr %cur, align 8, !dbg !3460, !tbaa !1471
  store ptr %69, ptr %base, align 8, !dbg !3461, !tbaa !1471
  br label %if.end260, !dbg !3462

if.else92:                                        ; preds = %if.else76
  %70 = load ptr, ptr %cur, align 8, !dbg !3463, !tbaa !1471
  %71 = load i8, ptr %70, align 1, !dbg !3464, !tbaa !2345
  %conv93 = zext i8 %71 to i32, !dbg !3464
  %cmp94 = icmp eq i32 %conv93, 38, !dbg !3465
  br i1 %cmp94, label %if.then96, label %if.else108, !dbg !3466

if.then96:                                        ; preds = %if.else92
  %72 = load ptr, ptr %base, align 8, !dbg !3467, !tbaa !1471
  %73 = load ptr, ptr %cur, align 8, !dbg !3470, !tbaa !1471
  %cmp97 = icmp ne ptr %72, %73, !dbg !3471
  br i1 %cmp97, label %if.then99, label %if.end105, !dbg !3472

if.then99:                                        ; preds = %if.then96
  %74 = load ptr, ptr %buf.addr, align 8, !dbg !3473, !tbaa !1471
  %75 = load ptr, ptr %base, align 8, !dbg !3474, !tbaa !1471
  %76 = load ptr, ptr %cur, align 8, !dbg !3475, !tbaa !1471
  %77 = load ptr, ptr %base, align 8, !dbg !3476, !tbaa !1471
  %sub.ptr.lhs.cast100 = ptrtoint ptr %76 to i64, !dbg !3477
  %sub.ptr.rhs.cast101 = ptrtoint ptr %77 to i64, !dbg !3477
  %sub.ptr.sub102 = sub i64 %sub.ptr.lhs.cast100, %sub.ptr.rhs.cast101, !dbg !3477
  %conv103 = trunc i64 %sub.ptr.sub102 to i32, !dbg !3475
  %call104 = call i32 @xmlBufAdd(ptr noundef %74, ptr noundef %75, i32 noundef %conv103), !dbg !3478
  br label %if.end105, !dbg !3478

if.end105:                                        ; preds = %if.then99, %if.then96
  %78 = load ptr, ptr %buf.addr, align 8, !dbg !3479, !tbaa !1471
  %call106 = call i32 @xmlBufAdd(ptr noundef %78, ptr noundef @.str.12, i32 noundef 5), !dbg !3480
  %79 = load ptr, ptr %cur, align 8, !dbg !3481, !tbaa !1471
  %incdec.ptr107 = getelementptr inbounds i8, ptr %79, i32 1, !dbg !3481
  store ptr %incdec.ptr107, ptr %cur, align 8, !dbg !3481, !tbaa !1471
  %80 = load ptr, ptr %cur, align 8, !dbg !3482, !tbaa !1471
  store ptr %80, ptr %base, align 8, !dbg !3483, !tbaa !1471
  br label %if.end259, !dbg !3484

if.else108:                                       ; preds = %if.else92
  %81 = load ptr, ptr %cur, align 8, !dbg !3485, !tbaa !1471
  %82 = load i8, ptr %81, align 1, !dbg !3486, !tbaa !2345
  %conv109 = zext i8 %82 to i32, !dbg !3486
  %cmp110 = icmp sge i32 %conv109, 128, !dbg !3487
  br i1 %cmp110, label %land.lhs.true, label %if.else256, !dbg !3488

land.lhs.true:                                    ; preds = %if.else108
  %83 = load ptr, ptr %cur, align 8, !dbg !3489, !tbaa !1471
  %arrayidx = getelementptr inbounds i8, ptr %83, i64 1, !dbg !3489
  %84 = load i8, ptr %arrayidx, align 1, !dbg !3489, !tbaa !2345
  %conv112 = zext i8 %84 to i32, !dbg !3489
  %cmp113 = icmp ne i32 %conv112, 0, !dbg !3490
  br i1 %cmp113, label %land.lhs.true115, label %if.else256, !dbg !3491

land.lhs.true115:                                 ; preds = %land.lhs.true
  %85 = load ptr, ptr %doc.addr, align 8, !dbg !3492, !tbaa !1471
  %cmp116 = icmp eq ptr %85, null, !dbg !3493
  br i1 %cmp116, label %if.then120, label %lor.lhs.false, !dbg !3494

lor.lhs.false:                                    ; preds = %land.lhs.true115
  %86 = load ptr, ptr %doc.addr, align 8, !dbg !3495, !tbaa !1471
  %encoding = getelementptr inbounds %struct._xmlDoc, ptr %86, i32 0, i32 15, !dbg !3496
  %87 = load ptr, ptr %encoding, align 8, !dbg !3496, !tbaa !2175
  %cmp118 = icmp eq ptr %87, null, !dbg !3497
  br i1 %cmp118, label %if.then120, label %if.else256, !dbg !3498

if.then120:                                       ; preds = %lor.lhs.false, %land.lhs.true115
  call void @llvm.lifetime.start.p0(i64 12, ptr %tmp) #6, !dbg !3499
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3298, metadata !DIExpression()), !dbg !3500
  call void @llvm.lifetime.start.p0(i64 4, ptr %val) #6, !dbg !3501
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !3310, metadata !DIExpression()), !dbg !3502
  store i32 0, ptr %val, align 4, !dbg !3502, !tbaa !1775
  call void @llvm.lifetime.start.p0(i64 4, ptr %l) #6, !dbg !3501
  tail call void @llvm.dbg.declare(metadata ptr %l, metadata !3311, metadata !DIExpression()), !dbg !3503
  store i32 1, ptr %l, align 4, !dbg !3503, !tbaa !1775
  %88 = load ptr, ptr %base, align 8, !dbg !3504, !tbaa !1471
  %89 = load ptr, ptr %cur, align 8, !dbg !3506, !tbaa !1471
  %cmp121 = icmp ne ptr %88, %89, !dbg !3507
  br i1 %cmp121, label %if.then123, label %if.end129, !dbg !3508

if.then123:                                       ; preds = %if.then120
  %90 = load ptr, ptr %buf.addr, align 8, !dbg !3509, !tbaa !1471
  %91 = load ptr, ptr %base, align 8, !dbg !3510, !tbaa !1471
  %92 = load ptr, ptr %cur, align 8, !dbg !3511, !tbaa !1471
  %93 = load ptr, ptr %base, align 8, !dbg !3512, !tbaa !1471
  %sub.ptr.lhs.cast124 = ptrtoint ptr %92 to i64, !dbg !3513
  %sub.ptr.rhs.cast125 = ptrtoint ptr %93 to i64, !dbg !3513
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !3513
  %conv127 = trunc i64 %sub.ptr.sub126 to i32, !dbg !3511
  %call128 = call i32 @xmlBufAdd(ptr noundef %90, ptr noundef %91, i32 noundef %conv127), !dbg !3514
  br label %if.end129, !dbg !3514

if.end129:                                        ; preds = %if.then123, %if.then120
  %94 = load ptr, ptr %cur, align 8, !dbg !3515, !tbaa !1471
  %95 = load i8, ptr %94, align 1, !dbg !3517, !tbaa !2345
  %conv130 = zext i8 %95 to i32, !dbg !3517
  %cmp131 = icmp slt i32 %conv130, 192, !dbg !3518
  br i1 %cmp131, label %if.then133, label %if.else139, !dbg !3519

if.then133:                                       ; preds = %if.end129
  %96 = load ptr, ptr %attr.addr, align 8, !dbg !3520, !tbaa !1471
  call void @xmlSaveErr(i32 noundef 1400, ptr noundef %96, ptr noundef null), !dbg !3522
  %arraydecay = getelementptr inbounds [12 x i8], ptr %tmp, i64 0, i64 0, !dbg !3523
  %97 = load ptr, ptr %cur, align 8, !dbg !3524, !tbaa !1471
  %98 = load i8, ptr %97, align 1, !dbg !3525, !tbaa !2345
  %conv134 = zext i8 %98 to i32, !dbg !3525
  %call135 = call ptr @xmlSerializeHexCharRef(ptr noundef %arraydecay, i32 noundef %conv134), !dbg !3526
  %99 = load ptr, ptr %buf.addr, align 8, !dbg !3527, !tbaa !1471
  %arraydecay136 = getelementptr inbounds [12 x i8], ptr %tmp, i64 0, i64 0, !dbg !3528
  %call137 = call i32 @xmlBufAdd(ptr noundef %99, ptr noundef %arraydecay136, i32 noundef -1), !dbg !3529
  %100 = load ptr, ptr %cur, align 8, !dbg !3530, !tbaa !1471
  %incdec.ptr138 = getelementptr inbounds i8, ptr %100, i32 1, !dbg !3530
  store ptr %incdec.ptr138, ptr %cur, align 8, !dbg !3530, !tbaa !1471
  %101 = load ptr, ptr %cur, align 8, !dbg !3531, !tbaa !1471
  store ptr %101, ptr %base, align 8, !dbg !3532, !tbaa !1471
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3533, !llvm.loop !3534

if.else139:                                       ; preds = %if.end129
  %102 = load ptr, ptr %cur, align 8, !dbg !3536, !tbaa !1471
  %103 = load i8, ptr %102, align 1, !dbg !3538, !tbaa !2345
  %conv140 = zext i8 %103 to i32, !dbg !3538
  %cmp141 = icmp slt i32 %conv140, 224, !dbg !3539
  br i1 %cmp141, label %if.then143, label %if.else149, !dbg !3540

if.then143:                                       ; preds = %if.else139
  %104 = load ptr, ptr %cur, align 8, !dbg !3541, !tbaa !1471
  %arrayidx144 = getelementptr inbounds i8, ptr %104, i64 0, !dbg !3541
  %105 = load i8, ptr %arrayidx144, align 1, !dbg !3541, !tbaa !2345
  %conv145 = zext i8 %105 to i32, !dbg !3543
  %and = and i32 %conv145, 31, !dbg !3544
  store i32 %and, ptr %val, align 4, !dbg !3545, !tbaa !1775
  %106 = load i32, ptr %val, align 4, !dbg !3546, !tbaa !1775
  %shl = shl i32 %106, 6, !dbg !3546
  store i32 %shl, ptr %val, align 4, !dbg !3546, !tbaa !1775
  %107 = load ptr, ptr %cur, align 8, !dbg !3547, !tbaa !1471
  %arrayidx146 = getelementptr inbounds i8, ptr %107, i64 1, !dbg !3547
  %108 = load i8, ptr %arrayidx146, align 1, !dbg !3547, !tbaa !2345
  %conv147 = zext i8 %108 to i32, !dbg !3548
  %and148 = and i32 %conv147, 63, !dbg !3549
  %109 = load i32, ptr %val, align 4, !dbg !3550, !tbaa !1775
  %or = or i32 %109, %and148, !dbg !3550
  store i32 %or, ptr %val, align 4, !dbg !3550, !tbaa !1775
  store i32 2, ptr %l, align 4, !dbg !3551, !tbaa !1775
  br label %if.end207, !dbg !3552

if.else149:                                       ; preds = %if.else139
  %110 = load ptr, ptr %cur, align 8, !dbg !3553, !tbaa !1471
  %111 = load i8, ptr %110, align 1, !dbg !3555, !tbaa !2345
  %conv150 = zext i8 %111 to i32, !dbg !3555
  %cmp151 = icmp slt i32 %conv150, 240, !dbg !3556
  br i1 %cmp151, label %land.lhs.true153, label %if.else172, !dbg !3557

land.lhs.true153:                                 ; preds = %if.else149
  %112 = load ptr, ptr %cur, align 8, !dbg !3558, !tbaa !1471
  %arrayidx154 = getelementptr inbounds i8, ptr %112, i64 2, !dbg !3558
  %113 = load i8, ptr %arrayidx154, align 1, !dbg !3558, !tbaa !2345
  %conv155 = zext i8 %113 to i32, !dbg !3558
  %cmp156 = icmp ne i32 %conv155, 0, !dbg !3559
  br i1 %cmp156, label %if.then158, label %if.else172, !dbg !3560

if.then158:                                       ; preds = %land.lhs.true153
  %114 = load ptr, ptr %cur, align 8, !dbg !3561, !tbaa !1471
  %arrayidx159 = getelementptr inbounds i8, ptr %114, i64 0, !dbg !3561
  %115 = load i8, ptr %arrayidx159, align 1, !dbg !3561, !tbaa !2345
  %conv160 = zext i8 %115 to i32, !dbg !3563
  %and161 = and i32 %conv160, 15, !dbg !3564
  store i32 %and161, ptr %val, align 4, !dbg !3565, !tbaa !1775
  %116 = load i32, ptr %val, align 4, !dbg !3566, !tbaa !1775
  %shl162 = shl i32 %116, 6, !dbg !3566
  store i32 %shl162, ptr %val, align 4, !dbg !3566, !tbaa !1775
  %117 = load ptr, ptr %cur, align 8, !dbg !3567, !tbaa !1471
  %arrayidx163 = getelementptr inbounds i8, ptr %117, i64 1, !dbg !3567
  %118 = load i8, ptr %arrayidx163, align 1, !dbg !3567, !tbaa !2345
  %conv164 = zext i8 %118 to i32, !dbg !3568
  %and165 = and i32 %conv164, 63, !dbg !3569
  %119 = load i32, ptr %val, align 4, !dbg !3570, !tbaa !1775
  %or166 = or i32 %119, %and165, !dbg !3570
  store i32 %or166, ptr %val, align 4, !dbg !3570, !tbaa !1775
  %120 = load i32, ptr %val, align 4, !dbg !3571, !tbaa !1775
  %shl167 = shl i32 %120, 6, !dbg !3571
  store i32 %shl167, ptr %val, align 4, !dbg !3571, !tbaa !1775
  %121 = load ptr, ptr %cur, align 8, !dbg !3572, !tbaa !1471
  %arrayidx168 = getelementptr inbounds i8, ptr %121, i64 2, !dbg !3572
  %122 = load i8, ptr %arrayidx168, align 1, !dbg !3572, !tbaa !2345
  %conv169 = zext i8 %122 to i32, !dbg !3573
  %and170 = and i32 %conv169, 63, !dbg !3574
  %123 = load i32, ptr %val, align 4, !dbg !3575, !tbaa !1775
  %or171 = or i32 %123, %and170, !dbg !3575
  store i32 %or171, ptr %val, align 4, !dbg !3575, !tbaa !1775
  store i32 3, ptr %l, align 4, !dbg !3576, !tbaa !1775
  br label %if.end206, !dbg !3577

if.else172:                                       ; preds = %land.lhs.true153, %if.else149
  %124 = load ptr, ptr %cur, align 8, !dbg !3578, !tbaa !1471
  %125 = load i8, ptr %124, align 1, !dbg !3580, !tbaa !2345
  %conv173 = zext i8 %125 to i32, !dbg !3580
  %cmp174 = icmp slt i32 %conv173, 248, !dbg !3581
  br i1 %cmp174, label %land.lhs.true176, label %if.end205, !dbg !3582

land.lhs.true176:                                 ; preds = %if.else172
  %126 = load ptr, ptr %cur, align 8, !dbg !3583, !tbaa !1471
  %arrayidx177 = getelementptr inbounds i8, ptr %126, i64 2, !dbg !3583
  %127 = load i8, ptr %arrayidx177, align 1, !dbg !3583, !tbaa !2345
  %conv178 = zext i8 %127 to i32, !dbg !3583
  %cmp179 = icmp ne i32 %conv178, 0, !dbg !3584
  br i1 %cmp179, label %land.lhs.true181, label %if.end205, !dbg !3585

land.lhs.true181:                                 ; preds = %land.lhs.true176
  %128 = load ptr, ptr %cur, align 8, !dbg !3586, !tbaa !1471
  %arrayidx182 = getelementptr inbounds i8, ptr %128, i64 3, !dbg !3586
  %129 = load i8, ptr %arrayidx182, align 1, !dbg !3586, !tbaa !2345
  %conv183 = zext i8 %129 to i32, !dbg !3586
  %cmp184 = icmp ne i32 %conv183, 0, !dbg !3587
  br i1 %cmp184, label %if.then186, label %if.end205, !dbg !3588

if.then186:                                       ; preds = %land.lhs.true181
  %130 = load ptr, ptr %cur, align 8, !dbg !3589, !tbaa !1471
  %arrayidx187 = getelementptr inbounds i8, ptr %130, i64 0, !dbg !3589
  %131 = load i8, ptr %arrayidx187, align 1, !dbg !3589, !tbaa !2345
  %conv188 = zext i8 %131 to i32, !dbg !3591
  %and189 = and i32 %conv188, 7, !dbg !3592
  store i32 %and189, ptr %val, align 4, !dbg !3593, !tbaa !1775
  %132 = load i32, ptr %val, align 4, !dbg !3594, !tbaa !1775
  %shl190 = shl i32 %132, 6, !dbg !3594
  store i32 %shl190, ptr %val, align 4, !dbg !3594, !tbaa !1775
  %133 = load ptr, ptr %cur, align 8, !dbg !3595, !tbaa !1471
  %arrayidx191 = getelementptr inbounds i8, ptr %133, i64 1, !dbg !3595
  %134 = load i8, ptr %arrayidx191, align 1, !dbg !3595, !tbaa !2345
  %conv192 = zext i8 %134 to i32, !dbg !3596
  %and193 = and i32 %conv192, 63, !dbg !3597
  %135 = load i32, ptr %val, align 4, !dbg !3598, !tbaa !1775
  %or194 = or i32 %135, %and193, !dbg !3598
  store i32 %or194, ptr %val, align 4, !dbg !3598, !tbaa !1775
  %136 = load i32, ptr %val, align 4, !dbg !3599, !tbaa !1775
  %shl195 = shl i32 %136, 6, !dbg !3599
  store i32 %shl195, ptr %val, align 4, !dbg !3599, !tbaa !1775
  %137 = load ptr, ptr %cur, align 8, !dbg !3600, !tbaa !1471
  %arrayidx196 = getelementptr inbounds i8, ptr %137, i64 2, !dbg !3600
  %138 = load i8, ptr %arrayidx196, align 1, !dbg !3600, !tbaa !2345
  %conv197 = zext i8 %138 to i32, !dbg !3601
  %and198 = and i32 %conv197, 63, !dbg !3602
  %139 = load i32, ptr %val, align 4, !dbg !3603, !tbaa !1775
  %or199 = or i32 %139, %and198, !dbg !3603
  store i32 %or199, ptr %val, align 4, !dbg !3603, !tbaa !1775
  %140 = load i32, ptr %val, align 4, !dbg !3604, !tbaa !1775
  %shl200 = shl i32 %140, 6, !dbg !3604
  store i32 %shl200, ptr %val, align 4, !dbg !3604, !tbaa !1775
  %141 = load ptr, ptr %cur, align 8, !dbg !3605, !tbaa !1471
  %arrayidx201 = getelementptr inbounds i8, ptr %141, i64 3, !dbg !3605
  %142 = load i8, ptr %arrayidx201, align 1, !dbg !3605, !tbaa !2345
  %conv202 = zext i8 %142 to i32, !dbg !3606
  %and203 = and i32 %conv202, 63, !dbg !3607
  %143 = load i32, ptr %val, align 4, !dbg !3608, !tbaa !1775
  %or204 = or i32 %143, %and203, !dbg !3608
  store i32 %or204, ptr %val, align 4, !dbg !3608, !tbaa !1775
  store i32 4, ptr %l, align 4, !dbg !3609, !tbaa !1775
  br label %if.end205, !dbg !3610

if.end205:                                        ; preds = %if.then186, %land.lhs.true181, %land.lhs.true176, %if.else172
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.then158
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.then143
  br label %if.end208

if.end208:                                        ; preds = %if.end207
  %144 = load i32, ptr %l, align 4, !dbg !3611, !tbaa !1775
  %cmp209 = icmp eq i32 %144, 1, !dbg !3613
  br i1 %cmp209, label %if.then242, label %lor.lhs.false211, !dbg !3614

lor.lhs.false211:                                 ; preds = %if.end208
  %145 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp212 = icmp slt i32 %145, 256, !dbg !3615
  br i1 %cmp212, label %cond.true, label %cond.false, !dbg !3616

cond.true:                                        ; preds = %lor.lhs.false211
  %146 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp214 = icmp sle i32 9, %146, !dbg !3615
  br i1 %cmp214, label %land.lhs.true216, label %lor.lhs.false219, !dbg !3615

land.lhs.true216:                                 ; preds = %cond.true
  %147 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp217 = icmp sle i32 %147, 10, !dbg !3615
  br i1 %cmp217, label %if.end249, label %lor.lhs.false219, !dbg !3615

lor.lhs.false219:                                 ; preds = %land.lhs.true216, %cond.true
  %148 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp220 = icmp eq i32 %148, 13, !dbg !3615
  br i1 %cmp220, label %if.end249, label %lor.lhs.false222, !dbg !3615

lor.lhs.false222:                                 ; preds = %lor.lhs.false219
  %149 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp223 = icmp sle i32 32, %149, !dbg !3615
  br i1 %cmp223, label %if.end249, label %if.then242, !dbg !3615

cond.false:                                       ; preds = %lor.lhs.false211
  %150 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp225 = icmp sle i32 256, %150, !dbg !3615
  br i1 %cmp225, label %land.lhs.true227, label %lor.lhs.false230, !dbg !3615

land.lhs.true227:                                 ; preds = %cond.false
  %151 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp228 = icmp sle i32 %151, 55295, !dbg !3615
  br i1 %cmp228, label %if.end249, label %lor.lhs.false230, !dbg !3615

lor.lhs.false230:                                 ; preds = %land.lhs.true227, %cond.false
  %152 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp231 = icmp sle i32 57344, %152, !dbg !3615
  br i1 %cmp231, label %land.lhs.true233, label %lor.lhs.false236, !dbg !3615

land.lhs.true233:                                 ; preds = %lor.lhs.false230
  %153 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp234 = icmp sle i32 %153, 65533, !dbg !3615
  br i1 %cmp234, label %if.end249, label %lor.lhs.false236, !dbg !3615

lor.lhs.false236:                                 ; preds = %land.lhs.true233, %lor.lhs.false230
  %154 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp237 = icmp sle i32 65536, %154, !dbg !3615
  br i1 %cmp237, label %land.lhs.true239, label %if.then242, !dbg !3615

land.lhs.true239:                                 ; preds = %lor.lhs.false236
  %155 = load i32, ptr %val, align 4, !dbg !3615, !tbaa !1775
  %cmp240 = icmp sle i32 %155, 1114111, !dbg !3615
  br i1 %cmp240, label %if.end249, label %if.then242, !dbg !3616

if.then242:                                       ; preds = %land.lhs.true239, %lor.lhs.false236, %lor.lhs.false222, %if.end208
  %156 = load ptr, ptr %attr.addr, align 8, !dbg !3617, !tbaa !1471
  call void @xmlSaveErr(i32 noundef 1401, ptr noundef %156, ptr noundef null), !dbg !3619
  %arraydecay243 = getelementptr inbounds [12 x i8], ptr %tmp, i64 0, i64 0, !dbg !3620
  %157 = load ptr, ptr %cur, align 8, !dbg !3621, !tbaa !1471
  %158 = load i8, ptr %157, align 1, !dbg !3622, !tbaa !2345
  %conv244 = zext i8 %158 to i32, !dbg !3622
  %call245 = call ptr @xmlSerializeHexCharRef(ptr noundef %arraydecay243, i32 noundef %conv244), !dbg !3623
  %159 = load ptr, ptr %buf.addr, align 8, !dbg !3624, !tbaa !1471
  %arraydecay246 = getelementptr inbounds [12 x i8], ptr %tmp, i64 0, i64 0, !dbg !3625
  %call247 = call i32 @xmlBufAdd(ptr noundef %159, ptr noundef %arraydecay246, i32 noundef -1), !dbg !3626
  %160 = load ptr, ptr %cur, align 8, !dbg !3627, !tbaa !1471
  %incdec.ptr248 = getelementptr inbounds i8, ptr %160, i32 1, !dbg !3627
  store ptr %incdec.ptr248, ptr %cur, align 8, !dbg !3627, !tbaa !1471
  %161 = load ptr, ptr %cur, align 8, !dbg !3628, !tbaa !1471
  store ptr %161, ptr %base, align 8, !dbg !3629, !tbaa !1471
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3630, !llvm.loop !3534

if.end249:                                        ; preds = %land.lhs.true239, %land.lhs.true233, %land.lhs.true227, %lor.lhs.false222, %lor.lhs.false219, %land.lhs.true216
  %arraydecay250 = getelementptr inbounds [12 x i8], ptr %tmp, i64 0, i64 0, !dbg !3631
  %162 = load i32, ptr %val, align 4, !dbg !3632, !tbaa !1775
  %call251 = call ptr @xmlSerializeHexCharRef(ptr noundef %arraydecay250, i32 noundef %162), !dbg !3633
  %163 = load ptr, ptr %buf.addr, align 8, !dbg !3634, !tbaa !1471
  %arraydecay252 = getelementptr inbounds [12 x i8], ptr %tmp, i64 0, i64 0, !dbg !3635
  %call253 = call i32 @xmlBufAdd(ptr noundef %163, ptr noundef %arraydecay252, i32 noundef -1), !dbg !3636
  %164 = load i32, ptr %l, align 4, !dbg !3637, !tbaa !1775
  %165 = load ptr, ptr %cur, align 8, !dbg !3638, !tbaa !1471
  %idx.ext = sext i32 %164 to i64, !dbg !3638
  %add.ptr = getelementptr inbounds i8, ptr %165, i64 %idx.ext, !dbg !3638
  store ptr %add.ptr, ptr %cur, align 8, !dbg !3638, !tbaa !1471
  %166 = load ptr, ptr %cur, align 8, !dbg !3639, !tbaa !1471
  store ptr %166, ptr %base, align 8, !dbg !3640, !tbaa !1471
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3641
  br label %cleanup, !dbg !3641

cleanup:                                          ; preds = %if.end249, %if.then242, %if.then133
  call void @llvm.lifetime.end.p0(i64 4, ptr %l) #6, !dbg !3641
  call void @llvm.lifetime.end.p0(i64 4, ptr %val) #6, !dbg !3641
  call void @llvm.lifetime.end.p0(i64 12, ptr %tmp) #6, !dbg !3641
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %while.cond
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end258, !dbg !3642

if.else256:                                       ; preds = %lor.lhs.false, %land.lhs.true, %if.else108
  %167 = load ptr, ptr %cur, align 8, !dbg !3643, !tbaa !1471
  %incdec.ptr257 = getelementptr inbounds i8, ptr %167, i32 1, !dbg !3643
  store ptr %incdec.ptr257, ptr %cur, align 8, !dbg !3643, !tbaa !1471
  br label %if.end258

if.end258:                                        ; preds = %if.else256, %cleanup.cont
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.end105
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %if.end89
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %if.end73
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.end57
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.end41
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.end25
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.end11
  br label %while.cond, !dbg !3327, !llvm.loop !3534

while.end:                                        ; preds = %while.cond
  %168 = load ptr, ptr %base, align 8, !dbg !3645, !tbaa !1471
  %169 = load ptr, ptr %cur, align 8, !dbg !3647, !tbaa !1471
  %cmp266 = icmp ne ptr %168, %169, !dbg !3648
  br i1 %cmp266, label %if.then268, label %if.end274, !dbg !3649

if.then268:                                       ; preds = %while.end
  %170 = load ptr, ptr %buf.addr, align 8, !dbg !3650, !tbaa !1471
  %171 = load ptr, ptr %base, align 8, !dbg !3651, !tbaa !1471
  %172 = load ptr, ptr %cur, align 8, !dbg !3652, !tbaa !1471
  %173 = load ptr, ptr %base, align 8, !dbg !3653, !tbaa !1471
  %sub.ptr.lhs.cast269 = ptrtoint ptr %172 to i64, !dbg !3654
  %sub.ptr.rhs.cast270 = ptrtoint ptr %173 to i64, !dbg !3654
  %sub.ptr.sub271 = sub i64 %sub.ptr.lhs.cast269, %sub.ptr.rhs.cast270, !dbg !3654
  %conv272 = trunc i64 %sub.ptr.sub271 to i32, !dbg !3652
  %call273 = call i32 @xmlBufAdd(ptr noundef %170, ptr noundef %171, i32 noundef %conv272), !dbg !3655
  br label %if.end274, !dbg !3655

if.end274:                                        ; preds = %if.then268, %while.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3656
  br label %cleanup275, !dbg !3656

cleanup275:                                       ; preds = %if.end274, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cur) #6, !dbg !3656
  call void @llvm.lifetime.end.p0(i64 8, ptr %base) #6, !dbg !3656
  %cleanup.dest277 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest277, label %unreachable [
    i32 0, label %cleanup.cont278
    i32 1, label %cleanup.cont278
  ]

cleanup.cont278:                                  ; preds = %cleanup275, %cleanup275
  ret void, !dbg !3656

unreachable:                                      ; preds = %cleanup275, %cleanup
  unreachable
}

declare !dbg !3657 i32 @xmlBufAdd(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal void @xmlSaveErr(i32 noundef %code, ptr noundef %node, ptr noundef %extra) #0 !dbg !3660 {
entry:
  %code.addr = alloca i32, align 4
  %node.addr = alloca ptr, align 8
  %extra.addr = alloca ptr, align 8
  %msg = alloca ptr, align 8
  store i32 %code, ptr %code.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %code.addr, metadata !3664, metadata !DIExpression()), !dbg !3668
  store ptr %node, ptr %node.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !3665, metadata !DIExpression()), !dbg !3669
  store ptr %extra, ptr %extra.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !3666, metadata !DIExpression()), !dbg !3670
  call void @llvm.lifetime.start.p0(i64 8, ptr %msg) #6, !dbg !3671
  tail call void @llvm.dbg.declare(metadata ptr %msg, metadata !3667, metadata !DIExpression()), !dbg !3672
  store ptr null, ptr %msg, align 8, !dbg !3672, !tbaa !1471
  %0 = load i32, ptr %code.addr, align 4, !dbg !3673, !tbaa !1775
  switch i32 %0, label %sw.default [
    i32 1400, label %sw.bb
    i32 1401, label %sw.bb1
    i32 1403, label %sw.bb2
    i32 1402, label %sw.bb3
  ], !dbg !3674

sw.bb:                                            ; preds = %entry
  store ptr @.str.53, ptr %msg, align 8, !dbg !3675, !tbaa !1471
  br label %sw.epilog, !dbg !3677

sw.bb1:                                           ; preds = %entry
  store ptr @.str.54, ptr %msg, align 8, !dbg !3678, !tbaa !1471
  br label %sw.epilog, !dbg !3679

sw.bb2:                                           ; preds = %entry
  store ptr @.str.55, ptr %msg, align 8, !dbg !3680, !tbaa !1471
  br label %sw.epilog, !dbg !3681

sw.bb3:                                           ; preds = %entry
  store ptr @.str.56, ptr %msg, align 8, !dbg !3682, !tbaa !1471
  br label %sw.epilog, !dbg !3683

sw.default:                                       ; preds = %entry
  store ptr @.str.57, ptr %msg, align 8, !dbg !3684, !tbaa !1471
  br label %sw.epilog, !dbg !3685

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, ptr %code.addr, align 4, !dbg !3686, !tbaa !1775
  %2 = load ptr, ptr %node.addr, align 8, !dbg !3687, !tbaa !1471
  %3 = load ptr, ptr %msg, align 8, !dbg !3688, !tbaa !1471
  %4 = load ptr, ptr %extra.addr, align 8, !dbg !3689, !tbaa !1471
  call void @__xmlSimpleError(i32 noundef 7, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4), !dbg !3690
  call void @llvm.lifetime.end.p0(i64 8, ptr %msg) #6, !dbg !3691
  ret void, !dbg !3691
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlSerializeHexCharRef(ptr noundef %out, i32 noundef %val) #0 !dbg !3692 {
entry:
  %out.addr = alloca ptr, align 8
  %val.addr = alloca i32, align 4
  %ptr = alloca ptr, align 8
  store ptr %out, ptr %out.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %out.addr, metadata !3696, metadata !DIExpression()), !dbg !3699
  store i32 %val, ptr %val.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !3697, metadata !DIExpression()), !dbg !3700
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #6, !dbg !3701
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !3698, metadata !DIExpression()), !dbg !3702
  %0 = load ptr, ptr %out.addr, align 8, !dbg !3703, !tbaa !1471
  %incdec.ptr = getelementptr inbounds i8, ptr %0, i32 1, !dbg !3703
  store ptr %incdec.ptr, ptr %out.addr, align 8, !dbg !3703, !tbaa !1471
  store i8 38, ptr %0, align 1, !dbg !3704, !tbaa !2345
  %1 = load ptr, ptr %out.addr, align 8, !dbg !3705, !tbaa !1471
  %incdec.ptr1 = getelementptr inbounds i8, ptr %1, i32 1, !dbg !3705
  store ptr %incdec.ptr1, ptr %out.addr, align 8, !dbg !3705, !tbaa !1471
  store i8 35, ptr %1, align 1, !dbg !3706, !tbaa !2345
  %2 = load ptr, ptr %out.addr, align 8, !dbg !3707, !tbaa !1471
  %incdec.ptr2 = getelementptr inbounds i8, ptr %2, i32 1, !dbg !3707
  store ptr %incdec.ptr2, ptr %out.addr, align 8, !dbg !3707, !tbaa !1471
  store i8 120, ptr %2, align 1, !dbg !3708, !tbaa !2345
  %3 = load i32, ptr %val.addr, align 4, !dbg !3709, !tbaa !1775
  %cmp = icmp slt i32 %3, 16, !dbg !3711
  br i1 %cmp, label %if.then, label %if.else, !dbg !3712

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %out.addr, align 8, !dbg !3713, !tbaa !1471
  store ptr %4, ptr %ptr, align 8, !dbg !3714, !tbaa !1471
  br label %if.end22, !dbg !3715

if.else:                                          ; preds = %entry
  %5 = load i32, ptr %val.addr, align 4, !dbg !3716, !tbaa !1775
  %cmp3 = icmp slt i32 %5, 256, !dbg !3718
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !3719

if.then4:                                         ; preds = %if.else
  %6 = load ptr, ptr %out.addr, align 8, !dbg !3720, !tbaa !1471
  %add.ptr = getelementptr inbounds i8, ptr %6, i64 1, !dbg !3721
  store ptr %add.ptr, ptr %ptr, align 8, !dbg !3722, !tbaa !1471
  br label %if.end21, !dbg !3723

if.else5:                                         ; preds = %if.else
  %7 = load i32, ptr %val.addr, align 4, !dbg !3724, !tbaa !1775
  %cmp6 = icmp slt i32 %7, 4096, !dbg !3726
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !3727

if.then7:                                         ; preds = %if.else5
  %8 = load ptr, ptr %out.addr, align 8, !dbg !3728, !tbaa !1471
  %add.ptr8 = getelementptr inbounds i8, ptr %8, i64 2, !dbg !3729
  store ptr %add.ptr8, ptr %ptr, align 8, !dbg !3730, !tbaa !1471
  br label %if.end20, !dbg !3731

if.else9:                                         ; preds = %if.else5
  %9 = load i32, ptr %val.addr, align 4, !dbg !3732, !tbaa !1775
  %cmp10 = icmp slt i32 %9, 65536, !dbg !3734
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !3735

if.then11:                                        ; preds = %if.else9
  %10 = load ptr, ptr %out.addr, align 8, !dbg !3736, !tbaa !1471
  %add.ptr12 = getelementptr inbounds i8, ptr %10, i64 3, !dbg !3737
  store ptr %add.ptr12, ptr %ptr, align 8, !dbg !3738, !tbaa !1471
  br label %if.end19, !dbg !3739

if.else13:                                        ; preds = %if.else9
  %11 = load i32, ptr %val.addr, align 4, !dbg !3740, !tbaa !1775
  %cmp14 = icmp slt i32 %11, 1048576, !dbg !3742
  br i1 %cmp14, label %if.then15, label %if.else17, !dbg !3743

if.then15:                                        ; preds = %if.else13
  %12 = load ptr, ptr %out.addr, align 8, !dbg !3744, !tbaa !1471
  %add.ptr16 = getelementptr inbounds i8, ptr %12, i64 4, !dbg !3745
  store ptr %add.ptr16, ptr %ptr, align 8, !dbg !3746, !tbaa !1471
  br label %if.end, !dbg !3747

if.else17:                                        ; preds = %if.else13
  %13 = load ptr, ptr %out.addr, align 8, !dbg !3748, !tbaa !1471
  %add.ptr18 = getelementptr inbounds i8, ptr %13, i64 5, !dbg !3749
  store ptr %add.ptr18, ptr %ptr, align 8, !dbg !3750, !tbaa !1471
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then15
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then11
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then7
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then4
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %14 = load ptr, ptr %ptr, align 8, !dbg !3751, !tbaa !1471
  %add.ptr23 = getelementptr inbounds i8, ptr %14, i64 1, !dbg !3752
  store ptr %add.ptr23, ptr %out.addr, align 8, !dbg !3753, !tbaa !1471
  br label %while.cond, !dbg !3754

while.cond:                                       ; preds = %sw.epilog, %if.end22
  %15 = load i32, ptr %val.addr, align 4, !dbg !3755, !tbaa !1775
  %cmp24 = icmp sgt i32 %15, 0, !dbg !3756
  br i1 %cmp24, label %while.body, label %while.end, !dbg !3754

while.body:                                       ; preds = %while.cond
  %16 = load i32, ptr %val.addr, align 4, !dbg !3757, !tbaa !1775
  %and = and i32 %16, 15, !dbg !3759
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb26
    i32 2, label %sw.bb28
    i32 3, label %sw.bb30
    i32 4, label %sw.bb32
    i32 5, label %sw.bb34
    i32 6, label %sw.bb36
    i32 7, label %sw.bb38
    i32 8, label %sw.bb40
    i32 9, label %sw.bb42
    i32 10, label %sw.bb44
    i32 11, label %sw.bb46
    i32 12, label %sw.bb48
    i32 13, label %sw.bb50
    i32 14, label %sw.bb52
    i32 15, label %sw.bb54
  ], !dbg !3760

sw.bb:                                            ; preds = %while.body
  %17 = load ptr, ptr %ptr, align 8, !dbg !3761, !tbaa !1471
  %incdec.ptr25 = getelementptr inbounds i8, ptr %17, i32 -1, !dbg !3761
  store ptr %incdec.ptr25, ptr %ptr, align 8, !dbg !3761, !tbaa !1471
  store i8 48, ptr %17, align 1, !dbg !3763, !tbaa !2345
  br label %sw.epilog, !dbg !3764

sw.bb26:                                          ; preds = %while.body
  %18 = load ptr, ptr %ptr, align 8, !dbg !3765, !tbaa !1471
  %incdec.ptr27 = getelementptr inbounds i8, ptr %18, i32 -1, !dbg !3765
  store ptr %incdec.ptr27, ptr %ptr, align 8, !dbg !3765, !tbaa !1471
  store i8 49, ptr %18, align 1, !dbg !3766, !tbaa !2345
  br label %sw.epilog, !dbg !3767

sw.bb28:                                          ; preds = %while.body
  %19 = load ptr, ptr %ptr, align 8, !dbg !3768, !tbaa !1471
  %incdec.ptr29 = getelementptr inbounds i8, ptr %19, i32 -1, !dbg !3768
  store ptr %incdec.ptr29, ptr %ptr, align 8, !dbg !3768, !tbaa !1471
  store i8 50, ptr %19, align 1, !dbg !3769, !tbaa !2345
  br label %sw.epilog, !dbg !3770

sw.bb30:                                          ; preds = %while.body
  %20 = load ptr, ptr %ptr, align 8, !dbg !3771, !tbaa !1471
  %incdec.ptr31 = getelementptr inbounds i8, ptr %20, i32 -1, !dbg !3771
  store ptr %incdec.ptr31, ptr %ptr, align 8, !dbg !3771, !tbaa !1471
  store i8 51, ptr %20, align 1, !dbg !3772, !tbaa !2345
  br label %sw.epilog, !dbg !3773

sw.bb32:                                          ; preds = %while.body
  %21 = load ptr, ptr %ptr, align 8, !dbg !3774, !tbaa !1471
  %incdec.ptr33 = getelementptr inbounds i8, ptr %21, i32 -1, !dbg !3774
  store ptr %incdec.ptr33, ptr %ptr, align 8, !dbg !3774, !tbaa !1471
  store i8 52, ptr %21, align 1, !dbg !3775, !tbaa !2345
  br label %sw.epilog, !dbg !3776

sw.bb34:                                          ; preds = %while.body
  %22 = load ptr, ptr %ptr, align 8, !dbg !3777, !tbaa !1471
  %incdec.ptr35 = getelementptr inbounds i8, ptr %22, i32 -1, !dbg !3777
  store ptr %incdec.ptr35, ptr %ptr, align 8, !dbg !3777, !tbaa !1471
  store i8 53, ptr %22, align 1, !dbg !3778, !tbaa !2345
  br label %sw.epilog, !dbg !3779

sw.bb36:                                          ; preds = %while.body
  %23 = load ptr, ptr %ptr, align 8, !dbg !3780, !tbaa !1471
  %incdec.ptr37 = getelementptr inbounds i8, ptr %23, i32 -1, !dbg !3780
  store ptr %incdec.ptr37, ptr %ptr, align 8, !dbg !3780, !tbaa !1471
  store i8 54, ptr %23, align 1, !dbg !3781, !tbaa !2345
  br label %sw.epilog, !dbg !3782

sw.bb38:                                          ; preds = %while.body
  %24 = load ptr, ptr %ptr, align 8, !dbg !3783, !tbaa !1471
  %incdec.ptr39 = getelementptr inbounds i8, ptr %24, i32 -1, !dbg !3783
  store ptr %incdec.ptr39, ptr %ptr, align 8, !dbg !3783, !tbaa !1471
  store i8 55, ptr %24, align 1, !dbg !3784, !tbaa !2345
  br label %sw.epilog, !dbg !3785

sw.bb40:                                          ; preds = %while.body
  %25 = load ptr, ptr %ptr, align 8, !dbg !3786, !tbaa !1471
  %incdec.ptr41 = getelementptr inbounds i8, ptr %25, i32 -1, !dbg !3786
  store ptr %incdec.ptr41, ptr %ptr, align 8, !dbg !3786, !tbaa !1471
  store i8 56, ptr %25, align 1, !dbg !3787, !tbaa !2345
  br label %sw.epilog, !dbg !3788

sw.bb42:                                          ; preds = %while.body
  %26 = load ptr, ptr %ptr, align 8, !dbg !3789, !tbaa !1471
  %incdec.ptr43 = getelementptr inbounds i8, ptr %26, i32 -1, !dbg !3789
  store ptr %incdec.ptr43, ptr %ptr, align 8, !dbg !3789, !tbaa !1471
  store i8 57, ptr %26, align 1, !dbg !3790, !tbaa !2345
  br label %sw.epilog, !dbg !3791

sw.bb44:                                          ; preds = %while.body
  %27 = load ptr, ptr %ptr, align 8, !dbg !3792, !tbaa !1471
  %incdec.ptr45 = getelementptr inbounds i8, ptr %27, i32 -1, !dbg !3792
  store ptr %incdec.ptr45, ptr %ptr, align 8, !dbg !3792, !tbaa !1471
  store i8 65, ptr %27, align 1, !dbg !3793, !tbaa !2345
  br label %sw.epilog, !dbg !3794

sw.bb46:                                          ; preds = %while.body
  %28 = load ptr, ptr %ptr, align 8, !dbg !3795, !tbaa !1471
  %incdec.ptr47 = getelementptr inbounds i8, ptr %28, i32 -1, !dbg !3795
  store ptr %incdec.ptr47, ptr %ptr, align 8, !dbg !3795, !tbaa !1471
  store i8 66, ptr %28, align 1, !dbg !3796, !tbaa !2345
  br label %sw.epilog, !dbg !3797

sw.bb48:                                          ; preds = %while.body
  %29 = load ptr, ptr %ptr, align 8, !dbg !3798, !tbaa !1471
  %incdec.ptr49 = getelementptr inbounds i8, ptr %29, i32 -1, !dbg !3798
  store ptr %incdec.ptr49, ptr %ptr, align 8, !dbg !3798, !tbaa !1471
  store i8 67, ptr %29, align 1, !dbg !3799, !tbaa !2345
  br label %sw.epilog, !dbg !3800

sw.bb50:                                          ; preds = %while.body
  %30 = load ptr, ptr %ptr, align 8, !dbg !3801, !tbaa !1471
  %incdec.ptr51 = getelementptr inbounds i8, ptr %30, i32 -1, !dbg !3801
  store ptr %incdec.ptr51, ptr %ptr, align 8, !dbg !3801, !tbaa !1471
  store i8 68, ptr %30, align 1, !dbg !3802, !tbaa !2345
  br label %sw.epilog, !dbg !3803

sw.bb52:                                          ; preds = %while.body
  %31 = load ptr, ptr %ptr, align 8, !dbg !3804, !tbaa !1471
  %incdec.ptr53 = getelementptr inbounds i8, ptr %31, i32 -1, !dbg !3804
  store ptr %incdec.ptr53, ptr %ptr, align 8, !dbg !3804, !tbaa !1471
  store i8 69, ptr %31, align 1, !dbg !3805, !tbaa !2345
  br label %sw.epilog, !dbg !3806

sw.bb54:                                          ; preds = %while.body
  %32 = load ptr, ptr %ptr, align 8, !dbg !3807, !tbaa !1471
  %incdec.ptr55 = getelementptr inbounds i8, ptr %32, i32 -1, !dbg !3807
  store ptr %incdec.ptr55, ptr %ptr, align 8, !dbg !3807, !tbaa !1471
  store i8 70, ptr %32, align 1, !dbg !3808, !tbaa !2345
  br label %sw.epilog, !dbg !3809

sw.default:                                       ; preds = %while.body
  %33 = load ptr, ptr %ptr, align 8, !dbg !3810, !tbaa !1471
  %incdec.ptr56 = getelementptr inbounds i8, ptr %33, i32 -1, !dbg !3810
  store ptr %incdec.ptr56, ptr %ptr, align 8, !dbg !3810, !tbaa !1471
  store i8 48, ptr %33, align 1, !dbg !3811, !tbaa !2345
  br label %sw.epilog, !dbg !3812

sw.epilog:                                        ; preds = %sw.default, %sw.bb54, %sw.bb52, %sw.bb50, %sw.bb48, %sw.bb46, %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb38, %sw.bb36, %sw.bb34, %sw.bb32, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb
  %34 = load i32, ptr %val.addr, align 4, !dbg !3813, !tbaa !1775
  %shr = ashr i32 %34, 4, !dbg !3813
  store i32 %shr, ptr %val.addr, align 4, !dbg !3813, !tbaa !1775
  br label %while.cond, !dbg !3754, !llvm.loop !3814

while.end:                                        ; preds = %while.cond
  %35 = load ptr, ptr %out.addr, align 8, !dbg !3816, !tbaa !1471
  %incdec.ptr57 = getelementptr inbounds i8, ptr %35, i32 1, !dbg !3816
  store ptr %incdec.ptr57, ptr %out.addr, align 8, !dbg !3816, !tbaa !1471
  store i8 59, ptr %35, align 1, !dbg !3817, !tbaa !2345
  %36 = load ptr, ptr %out.addr, align 8, !dbg !3818, !tbaa !1471
  store i8 0, ptr %36, align 1, !dbg !3819, !tbaa !2345
  %37 = load ptr, ptr %out.addr, align 8, !dbg !3820, !tbaa !1471
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #6, !dbg !3821
  ret ptr %37, !dbg !3822
}

; Function Attrs: nounwind uwtable
define hidden void @xmlAttrSerializeTxtContent__internal_alias(ptr noundef %buf, ptr noundef %doc, ptr noundef %attr, ptr noundef %string) #0 !dbg !3823 {
entry:
  %buf.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %attr.addr = alloca ptr, align 8
  %string.addr = alloca ptr, align 8
  %buffer = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !3827, metadata !DIExpression()), !dbg !3832
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !3828, metadata !DIExpression()), !dbg !3833
  store ptr %attr, ptr %attr.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %attr.addr, metadata !3829, metadata !DIExpression()), !dbg !3834
  store ptr %string, ptr %string.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %string.addr, metadata !3830, metadata !DIExpression()), !dbg !3835
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #6, !dbg !3836
  tail call void @llvm.dbg.declare(metadata ptr %buffer, metadata !3831, metadata !DIExpression()), !dbg !3837
  %0 = load ptr, ptr %buf.addr, align 8, !dbg !3838, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3840
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3841

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %string.addr, align 8, !dbg !3842, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !3843
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3844

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3845

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %buf.addr, align 8, !dbg !3846, !tbaa !1471
  %call = call ptr @xmlBufFromBuffer(ptr noundef %2), !dbg !3847
  store ptr %call, ptr %buffer, align 8, !dbg !3848, !tbaa !1471
  %3 = load ptr, ptr %buffer, align 8, !dbg !3849, !tbaa !1471
  %cmp2 = icmp eq ptr %3, null, !dbg !3851
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3852

if.then3:                                         ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3853

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %buffer, align 8, !dbg !3854, !tbaa !1471
  %5 = load ptr, ptr %doc.addr, align 8, !dbg !3855, !tbaa !1471
  %6 = load ptr, ptr %attr.addr, align 8, !dbg !3856, !tbaa !1471
  %7 = load ptr, ptr %string.addr, align 8, !dbg !3857, !tbaa !1471
  call void @xmlBufAttrSerializeTxtContent(ptr noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %7), !dbg !3858
  %8 = load ptr, ptr %buffer, align 8, !dbg !3859, !tbaa !1471
  %call5 = call ptr @xmlBufBackToBuffer(ptr noundef %8), !dbg !3860
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3861
  br label %cleanup, !dbg !3861

cleanup:                                          ; preds = %if.end4, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6, !dbg !3861
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !3861

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !3862 ptr @xmlBufFromBuffer(ptr noundef) #1

declare !dbg !3865 ptr @xmlBufBackToBuffer(ptr noundef) #1

; Function Attrs: nounwind uwtable
define hidden i32 @xmlNodeDump__internal_alias(ptr noundef %buf, ptr noundef %doc, ptr noundef %cur, i32 noundef %level, i32 noundef %format) #0 !dbg !3868 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %format.addr = alloca i32, align 4
  %buffer = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !3872, metadata !DIExpression()), !dbg !3879
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !3873, metadata !DIExpression()), !dbg !3880
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !3874, metadata !DIExpression()), !dbg !3881
  store i32 %level, ptr %level.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !3875, metadata !DIExpression()), !dbg !3882
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !3876, metadata !DIExpression()), !dbg !3883
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #6, !dbg !3884
  tail call void @llvm.dbg.declare(metadata ptr %buffer, metadata !3877, metadata !DIExpression()), !dbg !3885
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #6, !dbg !3886
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !3878, metadata !DIExpression()), !dbg !3887
  %0 = load ptr, ptr %buf.addr, align 8, !dbg !3888, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3890
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3891

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !3892, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !3893
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3894

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !3895
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3895

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %buf.addr, align 8, !dbg !3896, !tbaa !1471
  %call = call ptr @xmlBufFromBuffer(ptr noundef %2), !dbg !3897
  store ptr %call, ptr %buffer, align 8, !dbg !3898, !tbaa !1471
  %3 = load ptr, ptr %buffer, align 8, !dbg !3899, !tbaa !1471
  %cmp2 = icmp eq ptr %3, null, !dbg !3901
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3902

if.then3:                                         ; preds = %if.end
  store i32 -1, ptr %retval, align 4, !dbg !3903
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3903

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %buffer, align 8, !dbg !3904, !tbaa !1471
  %5 = load ptr, ptr %doc.addr, align 8, !dbg !3905, !tbaa !1471
  %6 = load ptr, ptr %cur.addr, align 8, !dbg !3906, !tbaa !1471
  %7 = load i32, ptr %level.addr, align 4, !dbg !3907, !tbaa !1775
  %8 = load i32, ptr %format.addr, align 4, !dbg !3908, !tbaa !1775
  %call5 = call i64 @xmlBufNodeDump__internal_alias(ptr noundef %4, ptr noundef %5, ptr noundef %6, i32 noundef %7, i32 noundef %8), !dbg !3909
  %conv = trunc i64 %call5 to i32, !dbg !3909
  store i32 %conv, ptr %ret, align 4, !dbg !3910, !tbaa !1775
  %9 = load ptr, ptr %buffer, align 8, !dbg !3911, !tbaa !1471
  %call6 = call ptr @xmlBufBackToBuffer(ptr noundef %9), !dbg !3912
  %10 = load i32, ptr %ret, align 4, !dbg !3913, !tbaa !1775
  %cmp7 = icmp sgt i32 %10, 2147483647, !dbg !3915
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !3916

if.then9:                                         ; preds = %if.end4
  store i32 -1, ptr %retval, align 4, !dbg !3917
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3917

if.end10:                                         ; preds = %if.end4
  %11 = load i32, ptr %ret, align 4, !dbg !3918, !tbaa !1775
  store i32 %11, ptr %retval, align 4, !dbg !3919
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3919

cleanup:                                          ; preds = %if.end10, %if.then9, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #6, !dbg !3920
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #6, !dbg !3920
  %12 = load i32, ptr %retval, align 4, !dbg !3920
  ret i32 %12, !dbg !3920
}

; Function Attrs: nounwind uwtable
define hidden i64 @xmlBufNodeDump__internal_alias(ptr noundef %buf, ptr noundef %doc, ptr noundef %cur, i32 noundef %level, i32 noundef %format) #0 !dbg !3921 {
entry:
  %retval = alloca i64, align 8
  %buf.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %format.addr = alloca i32, align 4
  %use = alloca i64, align 8
  %ret = alloca i32, align 4
  %outbuf = alloca ptr, align 8
  %oldalloc = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !3925, metadata !DIExpression()), !dbg !3934
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !3926, metadata !DIExpression()), !dbg !3935
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !3927, metadata !DIExpression()), !dbg !3936
  store i32 %level, ptr %level.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !3928, metadata !DIExpression()), !dbg !3937
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !3929, metadata !DIExpression()), !dbg !3938
  call void @llvm.lifetime.start.p0(i64 8, ptr %use) #6, !dbg !3939
  tail call void @llvm.dbg.declare(metadata ptr %use, metadata !3930, metadata !DIExpression()), !dbg !3940
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #6, !dbg !3941
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !3931, metadata !DIExpression()), !dbg !3942
  call void @llvm.lifetime.start.p0(i64 8, ptr %outbuf) #6, !dbg !3943
  tail call void @llvm.dbg.declare(metadata ptr %outbuf, metadata !3932, metadata !DIExpression()), !dbg !3944
  call void @llvm.lifetime.start.p0(i64 4, ptr %oldalloc) #6, !dbg !3945
  tail call void @llvm.dbg.declare(metadata ptr %oldalloc, metadata !3933, metadata !DIExpression()), !dbg !3946
  call void @xmlInitParser__internal_alias(), !dbg !3947
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !3948, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !3950
  br i1 %cmp, label %if.then, label %if.end, !dbg !3951

if.then:                                          ; preds = %entry
  store i64 -1, ptr %retval, align 8, !dbg !3952
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3952

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %buf.addr, align 8, !dbg !3954, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !3956
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3957

if.then2:                                         ; preds = %if.end
  store i64 -1, ptr %retval, align 8, !dbg !3958
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3958

if.end3:                                          ; preds = %if.end
  %2 = load ptr, ptr @xmlMalloc, align 8, !dbg !3960, !tbaa !1471
  %call = call ptr %2(i64 noundef 56), !dbg !3960
  store ptr %call, ptr %outbuf, align 8, !dbg !3961, !tbaa !1471
  %3 = load ptr, ptr %outbuf, align 8, !dbg !3962, !tbaa !1471
  %cmp4 = icmp eq ptr %3, null, !dbg !3964
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3965

if.then5:                                         ; preds = %if.end3
  call void @xmlSaveErrMemory(ptr noundef @.str.13), !dbg !3966
  store i64 -1, ptr %retval, align 8, !dbg !3968
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3968

if.end6:                                          ; preds = %if.end3
  %4 = load ptr, ptr %outbuf, align 8, !dbg !3969, !tbaa !1471
  call void @llvm.memset.p0.i64(ptr align 8 %4, i8 0, i64 56, i1 false), !dbg !3970
  %5 = load ptr, ptr %buf.addr, align 8, !dbg !3971, !tbaa !1471
  %6 = load ptr, ptr %outbuf, align 8, !dbg !3972, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %6, i32 0, i32 4, !dbg !3973
  store ptr %5, ptr %buffer, align 8, !dbg !3974, !tbaa !1760
  %7 = load ptr, ptr %outbuf, align 8, !dbg !3975, !tbaa !1471
  %encoder = getelementptr inbounds %struct._xmlOutputBuffer, ptr %7, i32 0, i32 3, !dbg !3976
  store ptr null, ptr %encoder, align 8, !dbg !3977, !tbaa !2285
  %8 = load ptr, ptr %outbuf, align 8, !dbg !3978, !tbaa !1471
  %writecallback = getelementptr inbounds %struct._xmlOutputBuffer, ptr %8, i32 0, i32 1, !dbg !3979
  store ptr null, ptr %writecallback, align 8, !dbg !3980, !tbaa !3981
  %9 = load ptr, ptr %outbuf, align 8, !dbg !3982, !tbaa !1471
  %closecallback = getelementptr inbounds %struct._xmlOutputBuffer, ptr %9, i32 0, i32 2, !dbg !3983
  store ptr null, ptr %closecallback, align 8, !dbg !3984, !tbaa !3985
  %10 = load ptr, ptr %outbuf, align 8, !dbg !3986, !tbaa !1471
  %context = getelementptr inbounds %struct._xmlOutputBuffer, ptr %10, i32 0, i32 0, !dbg !3987
  store ptr null, ptr %context, align 8, !dbg !3988, !tbaa !3989
  %11 = load ptr, ptr %outbuf, align 8, !dbg !3990, !tbaa !1471
  %written = getelementptr inbounds %struct._xmlOutputBuffer, ptr %11, i32 0, i32 6, !dbg !3991
  store i32 0, ptr %written, align 8, !dbg !3992, !tbaa !3993
  %12 = load ptr, ptr %buf.addr, align 8, !dbg !3994, !tbaa !1471
  %call7 = call i64 @xmlBufUse__internal_alias(ptr noundef %12), !dbg !3995
  store i64 %call7, ptr %use, align 8, !dbg !3996, !tbaa !2122
  %13 = load ptr, ptr %buf.addr, align 8, !dbg !3997, !tbaa !1471
  %call8 = call i32 @xmlBufGetAllocationScheme(ptr noundef %13), !dbg !3998
  store i32 %call8, ptr %oldalloc, align 4, !dbg !3999, !tbaa !1775
  %14 = load ptr, ptr %buf.addr, align 8, !dbg !4000, !tbaa !1471
  %call9 = call i32 @xmlBufSetAllocationScheme(ptr noundef %14, i32 noundef 0), !dbg !4001
  %15 = load ptr, ptr %outbuf, align 8, !dbg !4002, !tbaa !1471
  %16 = load ptr, ptr %doc.addr, align 8, !dbg !4003, !tbaa !1471
  %17 = load ptr, ptr %cur.addr, align 8, !dbg !4004, !tbaa !1471
  %18 = load i32, ptr %level.addr, align 4, !dbg !4005, !tbaa !1775
  %19 = load i32, ptr %format.addr, align 4, !dbg !4006, !tbaa !1775
  call void @xmlNodeDumpOutput__internal_alias(ptr noundef %15, ptr noundef %16, ptr noundef %17, i32 noundef %18, i32 noundef %19, ptr noundef null), !dbg !4007
  %20 = load ptr, ptr %buf.addr, align 8, !dbg !4008, !tbaa !1471
  %21 = load i32, ptr %oldalloc, align 4, !dbg !4009, !tbaa !1775
  %call10 = call i32 @xmlBufSetAllocationScheme(ptr noundef %20, i32 noundef %21), !dbg !4010
  %22 = load ptr, ptr @xmlFree, align 8, !dbg !4011, !tbaa !1471
  %23 = load ptr, ptr %outbuf, align 8, !dbg !4012, !tbaa !1471
  call void %22(ptr noundef %23), !dbg !4011
  %24 = load ptr, ptr %buf.addr, align 8, !dbg !4013, !tbaa !1471
  %call11 = call i64 @xmlBufUse__internal_alias(ptr noundef %24), !dbg !4014
  %25 = load i64, ptr %use, align 8, !dbg !4015, !tbaa !2122
  %sub = sub i64 %call11, %25, !dbg !4016
  %conv = trunc i64 %sub to i32, !dbg !4014
  store i32 %conv, ptr %ret, align 4, !dbg !4017, !tbaa !1775
  %26 = load i32, ptr %ret, align 4, !dbg !4018, !tbaa !1775
  %conv12 = sext i32 %26 to i64, !dbg !4019
  store i64 %conv12, ptr %retval, align 8, !dbg !4020
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4020

cleanup:                                          ; preds = %if.end6, %if.then5, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %oldalloc) #6, !dbg !4021
  call void @llvm.lifetime.end.p0(i64 8, ptr %outbuf) #6, !dbg !4021
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #6, !dbg !4021
  call void @llvm.lifetime.end.p0(i64 8, ptr %use) #6, !dbg !4021
  %27 = load i64, ptr %retval, align 8, !dbg !4021
  ret i64 %27, !dbg !4021
}

declare !dbg !4022 hidden void @xmlInitParser__internal_alias() #1

; Function Attrs: nounwind uwtable
define internal void @xmlSaveErrMemory(ptr noundef %extra) #0 !dbg !4025 {
entry:
  %extra.addr = alloca ptr, align 8
  store ptr %extra, ptr %extra.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !4029, metadata !DIExpression()), !dbg !4030
  %0 = load ptr, ptr %extra.addr, align 8, !dbg !4031, !tbaa !1471
  call void @__xmlSimpleError(i32 noundef 7, i32 noundef 2, ptr noundef null, ptr noundef null, ptr noundef %0), !dbg !4032
  ret void, !dbg !4033
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

declare !dbg !4034 hidden i64 @xmlBufUse__internal_alias(ptr noundef) #1

declare !dbg !4038 i32 @xmlBufGetAllocationScheme(ptr noundef) #1

declare !dbg !4041 i32 @xmlBufSetAllocationScheme(ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define hidden void @xmlNodeDumpOutput__internal_alias(ptr noundef %buf, ptr noundef %doc, ptr noundef %cur, i32 noundef %level, i32 noundef %format, ptr noundef %encoding) #0 !dbg !4044 {
entry:
  %buf.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %format.addr = alloca i32, align 4
  %encoding.addr = alloca ptr, align 8
  %ctxt = alloca %struct._xmlSaveCtxt, align 8
  %dtd = alloca ptr, align 8
  %is_xhtml = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !4048, metadata !DIExpression()), !dbg !4057
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !4049, metadata !DIExpression()), !dbg !4058
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !4050, metadata !DIExpression()), !dbg !4059
  store i32 %level, ptr %level.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !4051, metadata !DIExpression()), !dbg !4060
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !4052, metadata !DIExpression()), !dbg !4061
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !4053, metadata !DIExpression()), !dbg !4062
  call void @llvm.lifetime.start.p0(i64 152, ptr %ctxt) #6, !dbg !4063
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !4054, metadata !DIExpression()), !dbg !4064
  call void @llvm.lifetime.start.p0(i64 8, ptr %dtd) #6, !dbg !4065
  tail call void @llvm.dbg.declare(metadata ptr %dtd, metadata !4055, metadata !DIExpression()), !dbg !4066
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_xhtml) #6, !dbg !4067
  tail call void @llvm.dbg.declare(metadata ptr %is_xhtml, metadata !4056, metadata !DIExpression()), !dbg !4068
  store i32 0, ptr %is_xhtml, align 4, !dbg !4068, !tbaa !1775
  call void @xmlInitParser__internal_alias(), !dbg !4069
  %0 = load ptr, ptr %buf.addr, align 8, !dbg !4070, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !4072
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4073

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !4074, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !4075
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4076

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4077

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %encoding.addr, align 8, !dbg !4078, !tbaa !1471
  %cmp2 = icmp eq ptr %2, null, !dbg !4080
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4081

if.then3:                                         ; preds = %if.end
  store ptr @.str.14, ptr %encoding.addr, align 8, !dbg !4082, !tbaa !1471
  br label %if.end4, !dbg !4083

if.end4:                                          ; preds = %if.then3, %if.end
  call void @llvm.memset.p0.i64(ptr align 8 %ctxt, i8 0, i64 152, i1 false), !dbg !4084
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !4085, !tbaa !1471
  %buf5 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 6, !dbg !4086
  store ptr %3, ptr %buf5, align 8, !dbg !4087, !tbaa !1798
  %4 = load i32, ptr %level.addr, align 4, !dbg !4088, !tbaa !1775
  %level6 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 8, !dbg !4089
  store i32 %4, ptr %level6, align 4, !dbg !4090, !tbaa !2512
  %5 = load i32, ptr %format.addr, align 4, !dbg !4091, !tbaa !1775
  %tobool = icmp ne i32 %5, 0, !dbg !4091
  %6 = zext i1 %tobool to i64, !dbg !4091
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !4091
  %format7 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 9, !dbg !4092
  store i32 %cond, ptr %format7, align 8, !dbg !4093, !tbaa !1732
  %7 = load ptr, ptr %encoding.addr, align 8, !dbg !4094, !tbaa !1471
  %encoding8 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 4, !dbg !4095
  store ptr %7, ptr %encoding8, align 8, !dbg !4096, !tbaa !1859
  call void @xmlSaveCtxtInit(ptr noundef %ctxt), !dbg !4097
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 7, !dbg !4098
  %8 = load i32, ptr %options, align 8, !dbg !4099, !tbaa !1870
  %or = or i32 %8, 32, !dbg !4099
  store i32 %or, ptr %options, align 8, !dbg !4099, !tbaa !1870
  %9 = load ptr, ptr %doc.addr, align 8, !dbg !4100, !tbaa !1471
  %call = call ptr @xmlGetIntSubset__internal_alias(ptr noundef %9), !dbg !4101
  store ptr %call, ptr %dtd, align 8, !dbg !4102, !tbaa !1471
  %10 = load ptr, ptr %dtd, align 8, !dbg !4103, !tbaa !1471
  %cmp9 = icmp ne ptr %10, null, !dbg !4105
  br i1 %cmp9, label %if.then10, label %if.end15, !dbg !4106

if.then10:                                        ; preds = %if.end4
  %11 = load ptr, ptr %dtd, align 8, !dbg !4107, !tbaa !1471
  %SystemID = getelementptr inbounds %struct._xmlDtd, ptr %11, i32 0, i32 14, !dbg !4109
  %12 = load ptr, ptr %SystemID, align 8, !dbg !4109, !tbaa !2481
  %13 = load ptr, ptr %dtd, align 8, !dbg !4110, !tbaa !1471
  %ExternalID = getelementptr inbounds %struct._xmlDtd, ptr %13, i32 0, i32 13, !dbg !4111
  %14 = load ptr, ptr %ExternalID, align 8, !dbg !4111, !tbaa !2485
  %call11 = call i32 @xmlIsXHTML__internal_alias(ptr noundef %12, ptr noundef %14), !dbg !4112
  store i32 %call11, ptr %is_xhtml, align 4, !dbg !4113, !tbaa !1775
  %15 = load i32, ptr %is_xhtml, align 4, !dbg !4114, !tbaa !1775
  %cmp12 = icmp slt i32 %15, 0, !dbg !4116
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !4117

if.then13:                                        ; preds = %if.then10
  store i32 0, ptr %is_xhtml, align 4, !dbg !4118, !tbaa !1775
  br label %if.end14, !dbg !4119

if.end14:                                         ; preds = %if.then13, %if.then10
  br label %if.end15, !dbg !4120

if.end15:                                         ; preds = %if.end14, %if.end4
  %16 = load i32, ptr %is_xhtml, align 4, !dbg !4121, !tbaa !1775
  %tobool16 = icmp ne i32 %16, 0, !dbg !4121
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !4123

if.then17:                                        ; preds = %if.end15
  %17 = load ptr, ptr %cur.addr, align 8, !dbg !4124, !tbaa !1471
  call void @xhtmlNodeDumpOutput(ptr noundef %ctxt, ptr noundef %17), !dbg !4125
  br label %if.end18, !dbg !4125

if.else:                                          ; preds = %if.end15
  %18 = load ptr, ptr %cur.addr, align 8, !dbg !4126, !tbaa !1471
  call void @xmlNodeDumpOutputInternal(ptr noundef %ctxt, ptr noundef %18), !dbg !4127
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4128
  br label %cleanup, !dbg !4128

cleanup:                                          ; preds = %if.end18, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_xhtml) #6, !dbg !4128
  call void @llvm.lifetime.end.p0(i64 8, ptr %dtd) #6, !dbg !4128
  call void @llvm.lifetime.end.p0(i64 152, ptr %ctxt) #6, !dbg !4128
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4128

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @xmlElemDump__internal_alias(ptr noundef %f, ptr noundef %doc, ptr noundef %cur) #0 !dbg !4129 {
entry:
  %f.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %outbuf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %f, ptr %f.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !4187, metadata !DIExpression()), !dbg !4191
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !4188, metadata !DIExpression()), !dbg !4192
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !4189, metadata !DIExpression()), !dbg !4193
  call void @llvm.lifetime.start.p0(i64 8, ptr %outbuf) #6, !dbg !4194
  tail call void @llvm.dbg.declare(metadata ptr %outbuf, metadata !4190, metadata !DIExpression()), !dbg !4195
  call void @xmlInitParser__internal_alias(), !dbg !4196
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !4197, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !4199
  br i1 %cmp, label %if.then, label %if.end, !dbg !4200

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4201

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %f.addr, align 8, !dbg !4203, !tbaa !1471
  %call = call ptr @xmlOutputBufferCreateFile__internal_alias(ptr noundef %1, ptr noundef null), !dbg !4204
  store ptr %call, ptr %outbuf, align 8, !dbg !4205, !tbaa !1471
  %2 = load ptr, ptr %outbuf, align 8, !dbg !4206, !tbaa !1471
  %cmp1 = icmp eq ptr %2, null, !dbg !4208
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4209

if.then2:                                         ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4210

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %doc.addr, align 8, !dbg !4211, !tbaa !1471
  %cmp4 = icmp ne ptr %3, null, !dbg !4213
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !4214

land.lhs.true:                                    ; preds = %if.end3
  %4 = load ptr, ptr %doc.addr, align 8, !dbg !4215, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlDoc, ptr %4, i32 0, i32 1, !dbg !4216
  %5 = load i32, ptr %type, align 8, !dbg !4216, !tbaa !2206
  %cmp5 = icmp eq i32 %5, 13, !dbg !4217
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !4218

if.then6:                                         ; preds = %land.lhs.true
  %6 = load ptr, ptr %outbuf, align 8, !dbg !4219, !tbaa !1471
  %7 = load ptr, ptr %doc.addr, align 8, !dbg !4221, !tbaa !1471
  %8 = load ptr, ptr %cur.addr, align 8, !dbg !4222, !tbaa !1471
  call void @htmlNodeDumpOutput__internal_alias(ptr noundef %6, ptr noundef %7, ptr noundef %8, ptr noundef null), !dbg !4223
  br label %if.end7, !dbg !4224

if.else:                                          ; preds = %land.lhs.true, %if.end3
  %9 = load ptr, ptr %outbuf, align 8, !dbg !4225, !tbaa !1471
  %10 = load ptr, ptr %doc.addr, align 8, !dbg !4226, !tbaa !1471
  %11 = load ptr, ptr %cur.addr, align 8, !dbg !4227, !tbaa !1471
  call void @xmlNodeDumpOutput__internal_alias(ptr noundef %9, ptr noundef %10, ptr noundef %11, i32 noundef 0, i32 noundef 1, ptr noundef null), !dbg !4228
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %12 = load ptr, ptr %outbuf, align 8, !dbg !4229, !tbaa !1471
  %call8 = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %12), !dbg !4230
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4231
  br label %cleanup, !dbg !4231

cleanup:                                          ; preds = %if.end7, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %outbuf) #6, !dbg !4231
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4231

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !4232 hidden ptr @xmlOutputBufferCreateFile__internal_alias(ptr noundef, ptr noundef) #1

declare !dbg !4235 hidden void @htmlNodeDumpOutput__internal_alias(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !4238 hidden i32 @xmlOutputBufferClose__internal_alias(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @xmlSaveCtxtInit(ptr noundef %ctxt) #0 !dbg !4239 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4241, metadata !DIExpression()), !dbg !4244
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6, !dbg !4245
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4242, metadata !DIExpression()), !dbg !4246
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #6, !dbg !4247
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !4243, metadata !DIExpression()), !dbg !4248
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !4249, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !4251
  br i1 %cmp, label %if.then, label %if.end, !dbg !4252

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4253

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !4254, !tbaa !1471
  %encoding = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 4, !dbg !4256
  %2 = load ptr, ptr %encoding, align 8, !dbg !4256, !tbaa !1859
  %cmp1 = icmp eq ptr %2, null, !dbg !4257
  br i1 %cmp1, label %land.lhs.true, label %if.end5, !dbg !4258

land.lhs.true:                                    ; preds = %if.end
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !4259, !tbaa !1471
  %escape = getelementptr inbounds %struct._xmlSaveCtxt, ptr %3, i32 0, i32 13, !dbg !4260
  %4 = load ptr, ptr %escape, align 8, !dbg !4260, !tbaa !1863
  %cmp2 = icmp eq ptr %4, null, !dbg !4261
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4262

if.then3:                                         ; preds = %land.lhs.true
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !4263, !tbaa !1471
  %escape4 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %5, i32 0, i32 13, !dbg !4264
  store ptr @xmlEscapeEntities, ptr %escape4, align 8, !dbg !4265, !tbaa !1863
  br label %if.end5, !dbg !4263

if.end5:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %call = call ptr @__xmlTreeIndentString(), !dbg !4266
  %6 = load ptr, ptr %call, align 8, !dbg !4266, !tbaa !1471
  %call6 = call i32 @xmlStrlen__internal_alias(ptr noundef %6), !dbg !4267
  store i32 %call6, ptr %len, align 4, !dbg !4268, !tbaa !1775
  %call7 = call ptr @__xmlTreeIndentString(), !dbg !4269
  %7 = load ptr, ptr %call7, align 8, !dbg !4269, !tbaa !1471
  %cmp8 = icmp eq ptr %7, null, !dbg !4271
  br i1 %cmp8, label %if.then10, label %lor.lhs.false, !dbg !4272

lor.lhs.false:                                    ; preds = %if.end5
  %8 = load i32, ptr %len, align 4, !dbg !4273, !tbaa !1775
  %cmp9 = icmp eq i32 %8, 0, !dbg !4274
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !4275

if.then10:                                        ; preds = %lor.lhs.false, %if.end5
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !4276, !tbaa !1471
  %indent = getelementptr inbounds %struct._xmlSaveCtxt, ptr %9, i32 0, i32 10, !dbg !4278
  %arrayidx = getelementptr inbounds [61 x i8], ptr %indent, i64 0, i64 0, !dbg !4276
  call void @llvm.memset.p0.i64(ptr align 4 %arrayidx, i8 0, i64 61, i1 false), !dbg !4279
  br label %if.end25, !dbg !4280

if.else:                                          ; preds = %lor.lhs.false
  %10 = load i32, ptr %len, align 4, !dbg !4281, !tbaa !1775
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !4283, !tbaa !1471
  %indent_size = getelementptr inbounds %struct._xmlSaveCtxt, ptr %11, i32 0, i32 12, !dbg !4284
  store i32 %10, ptr %indent_size, align 8, !dbg !4285, !tbaa !3152
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !4286, !tbaa !1471
  %indent_size11 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %12, i32 0, i32 12, !dbg !4287
  %13 = load i32, ptr %indent_size11, align 8, !dbg !4287, !tbaa !3152
  %div = sdiv i32 60, %13, !dbg !4288
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !4289, !tbaa !1471
  %indent_nr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %14, i32 0, i32 11, !dbg !4290
  store i32 %div, ptr %indent_nr, align 4, !dbg !4291, !tbaa !3157
  store i32 0, ptr %i, align 4, !dbg !4292, !tbaa !1775
  br label %for.cond, !dbg !4294

for.cond:                                         ; preds = %for.inc, %if.else
  %15 = load i32, ptr %i, align 4, !dbg !4295, !tbaa !1775
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !4297, !tbaa !1471
  %indent_nr12 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %16, i32 0, i32 11, !dbg !4298
  %17 = load i32, ptr %indent_nr12, align 4, !dbg !4298, !tbaa !3157
  %cmp13 = icmp slt i32 %15, %17, !dbg !4299
  br i1 %cmp13, label %for.body, label %for.end, !dbg !4300

for.body:                                         ; preds = %for.cond
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !4301, !tbaa !1471
  %indent14 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %18, i32 0, i32 10, !dbg !4302
  %19 = load i32, ptr %i, align 4, !dbg !4303, !tbaa !1775
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !4304, !tbaa !1471
  %indent_size15 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %20, i32 0, i32 12, !dbg !4305
  %21 = load i32, ptr %indent_size15, align 8, !dbg !4305, !tbaa !3152
  %mul = mul nsw i32 %19, %21, !dbg !4306
  %idxprom = sext i32 %mul to i64, !dbg !4301
  %arrayidx16 = getelementptr inbounds [61 x i8], ptr %indent14, i64 0, i64 %idxprom, !dbg !4301
  %call17 = call ptr @__xmlTreeIndentString(), !dbg !4307
  %22 = load ptr, ptr %call17, align 8, !dbg !4307, !tbaa !1471
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !4308, !tbaa !1471
  %indent_size18 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %23, i32 0, i32 12, !dbg !4309
  %24 = load i32, ptr %indent_size18, align 8, !dbg !4309, !tbaa !3152
  %conv = sext i32 %24 to i64, !dbg !4308
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx16, ptr align 1 %22, i64 %conv, i1 false), !dbg !4310
  br label %for.inc, !dbg !4310

for.inc:                                          ; preds = %for.body
  %25 = load i32, ptr %i, align 4, !dbg !4311, !tbaa !1775
  %inc = add nsw i32 %25, 1, !dbg !4311
  store i32 %inc, ptr %i, align 4, !dbg !4311, !tbaa !1775
  br label %for.cond, !dbg !4312, !llvm.loop !4313

for.end:                                          ; preds = %for.cond
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !4315, !tbaa !1471
  %indent19 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %26, i32 0, i32 10, !dbg !4316
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !4317, !tbaa !1471
  %indent_nr20 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %27, i32 0, i32 11, !dbg !4318
  %28 = load i32, ptr %indent_nr20, align 4, !dbg !4318, !tbaa !3157
  %29 = load ptr, ptr %ctxt.addr, align 8, !dbg !4319, !tbaa !1471
  %indent_size21 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %29, i32 0, i32 12, !dbg !4320
  %30 = load i32, ptr %indent_size21, align 8, !dbg !4320, !tbaa !3152
  %mul22 = mul nsw i32 %28, %30, !dbg !4321
  %idxprom23 = sext i32 %mul22 to i64, !dbg !4315
  %arrayidx24 = getelementptr inbounds [61 x i8], ptr %indent19, i64 0, i64 %idxprom23, !dbg !4315
  store i8 0, ptr %arrayidx24, align 1, !dbg !4322, !tbaa !2345
  br label %if.end25

if.end25:                                         ; preds = %for.end, %if.then10
  %call26 = call ptr @__xmlSaveNoEmptyTags(), !dbg !4323
  %31 = load i32, ptr %call26, align 4, !dbg !4323, !tbaa !1775
  %tobool = icmp ne i32 %31, 0, !dbg !4323
  br i1 %tobool, label %if.then27, label %if.end28, !dbg !4325

if.then27:                                        ; preds = %if.end25
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !4326, !tbaa !1471
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %32, i32 0, i32 7, !dbg !4328
  %33 = load i32, ptr %options, align 8, !dbg !4329, !tbaa !1870
  %or = or i32 %33, 4, !dbg !4329
  store i32 %or, ptr %options, align 8, !dbg !4329, !tbaa !1870
  br label %if.end28, !dbg !4330

if.end28:                                         ; preds = %if.then27, %if.end25
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4331
  br label %cleanup, !dbg !4331

cleanup:                                          ; preds = %if.end28, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #6, !dbg !4331
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6, !dbg !4331
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4331

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !4332 hidden ptr @xmlGetIntSubset__internal_alias(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @xhtmlNodeDumpOutput(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !4337 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %format = alloca i32, align 4
  %addmeta = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %start = alloca ptr, align 8
  %end = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %httpequiv = alloca ptr, align 8
  %indent397 = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4339, metadata !DIExpression()), !dbg !4356
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !4340, metadata !DIExpression()), !dbg !4357
  call void @llvm.lifetime.start.p0(i64 4, ptr %format) #6, !dbg !4358
  tail call void @llvm.dbg.declare(metadata ptr %format, metadata !4341, metadata !DIExpression()), !dbg !4359
  call void @llvm.lifetime.start.p0(i64 4, ptr %addmeta) #6, !dbg !4358
  tail call void @llvm.dbg.declare(metadata ptr %addmeta, metadata !4342, metadata !DIExpression()), !dbg !4360
  store i32 0, ptr %addmeta, align 4, !dbg !4360, !tbaa !1775
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #6, !dbg !4361
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !4343, metadata !DIExpression()), !dbg !4362
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #6, !dbg !4363
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !4344, metadata !DIExpression()), !dbg !4364
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #6, !dbg !4363
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !4345, metadata !DIExpression()), !dbg !4365
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !4366
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !4346, metadata !DIExpression()), !dbg !4367
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !4368, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !4370
  br i1 %cmp, label %if.then, label %if.end, !dbg !4371

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4372

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !4373, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlNode, ptr %1, i32 0, i32 1, !dbg !4375
  %2 = load i32, ptr %type, align 8, !dbg !4375, !tbaa !2618
  %cmp1 = icmp eq i32 %2, 9, !dbg !4376
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !4377

lor.lhs.false:                                    ; preds = %if.end
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !4378, !tbaa !1471
  %type2 = getelementptr inbounds %struct._xmlNode, ptr %3, i32 0, i32 1, !dbg !4379
  %4 = load i32, ptr %type2, align 8, !dbg !4379, !tbaa !2618
  %cmp3 = icmp eq i32 %4, 13, !dbg !4380
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4381

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !4382, !tbaa !1471
  %6 = load ptr, ptr %cur.addr, align 8, !dbg !4384, !tbaa !1471
  %call = call i32 @xmlDocContentDumpOutput(ptr noundef %5, ptr noundef %6), !dbg !4385
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4386

if.end5:                                          ; preds = %lor.lhs.false
  %7 = load ptr, ptr %cur.addr, align 8, !dbg !4387, !tbaa !1471
  %type6 = getelementptr inbounds %struct._xmlNode, ptr %7, i32 0, i32 1, !dbg !4389
  %8 = load i32, ptr %type6, align 8, !dbg !4389, !tbaa !2618
  %cmp7 = icmp eq i32 %8, 19, !dbg !4390
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4391

if.then8:                                         ; preds = %if.end5
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4392

if.end9:                                          ; preds = %if.end5
  %9 = load ptr, ptr %cur.addr, align 8, !dbg !4393, !tbaa !1471
  %type10 = getelementptr inbounds %struct._xmlNode, ptr %9, i32 0, i32 1, !dbg !4395
  %10 = load i32, ptr %type10, align 8, !dbg !4395, !tbaa !2618
  %cmp11 = icmp eq i32 %10, 20, !dbg !4396
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4397

if.then12:                                        ; preds = %if.end9
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4398

if.end13:                                         ; preds = %if.end9
  %11 = load ptr, ptr %cur.addr, align 8, !dbg !4399, !tbaa !1471
  %type14 = getelementptr inbounds %struct._xmlNode, ptr %11, i32 0, i32 1, !dbg !4401
  %12 = load i32, ptr %type14, align 8, !dbg !4401, !tbaa !2618
  %cmp15 = icmp eq i32 %12, 18, !dbg !4402
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !4403

if.then16:                                        ; preds = %if.end13
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !4404, !tbaa !1471
  %14 = load ptr, ptr %cur.addr, align 8, !dbg !4406, !tbaa !1471
  call void @xmlNsDumpOutputCtxt(ptr noundef %13, ptr noundef %14), !dbg !4407
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4408

if.end17:                                         ; preds = %if.end13
  %15 = load ptr, ptr %cur.addr, align 8, !dbg !4409, !tbaa !1471
  %type18 = getelementptr inbounds %struct._xmlNode, ptr %15, i32 0, i32 1, !dbg !4411
  %16 = load i32, ptr %type18, align 8, !dbg !4411, !tbaa !2618
  %cmp19 = icmp eq i32 %16, 14, !dbg !4412
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !4413

if.then20:                                        ; preds = %if.end17
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !4414, !tbaa !1471
  %18 = load ptr, ptr %cur.addr, align 8, !dbg !4416, !tbaa !1471
  call void @xmlDtdDumpOutput(ptr noundef %17, ptr noundef %18), !dbg !4417
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4418

if.end21:                                         ; preds = %if.end17
  %19 = load ptr, ptr %cur.addr, align 8, !dbg !4419, !tbaa !1471
  %type22 = getelementptr inbounds %struct._xmlNode, ptr %19, i32 0, i32 1, !dbg !4421
  %20 = load i32, ptr %type22, align 8, !dbg !4421, !tbaa !2618
  %cmp23 = icmp eq i32 %20, 11, !dbg !4422
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !4423

if.then24:                                        ; preds = %if.end21
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !4424, !tbaa !1471
  %22 = load ptr, ptr %cur.addr, align 8, !dbg !4426, !tbaa !1471
  %children = getelementptr inbounds %struct._xmlNode, ptr %22, i32 0, i32 3, !dbg !4427
  %23 = load ptr, ptr %children, align 8, !dbg !4427, !tbaa !2700
  call void @xhtmlNodeListDumpOutput(ptr noundef %21, ptr noundef %23), !dbg !4428
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4429

if.end25:                                         ; preds = %if.end21
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !4430, !tbaa !1471
  %buf26 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %24, i32 0, i32 6, !dbg !4431
  %25 = load ptr, ptr %buf26, align 8, !dbg !4431, !tbaa !1798
  store ptr %25, ptr %buf, align 8, !dbg !4432, !tbaa !1471
  %26 = load ptr, ptr %cur.addr, align 8, !dbg !4433, !tbaa !1471
  %type27 = getelementptr inbounds %struct._xmlNode, ptr %26, i32 0, i32 1, !dbg !4435
  %27 = load i32, ptr %type27, align 8, !dbg !4435, !tbaa !2618
  %cmp28 = icmp eq i32 %27, 15, !dbg !4436
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !4437

if.then29:                                        ; preds = %if.end25
  %28 = load ptr, ptr %buf, align 8, !dbg !4438, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %28, i32 0, i32 4, !dbg !4440
  %29 = load ptr, ptr %buffer, align 8, !dbg !4440, !tbaa !1760
  %30 = load ptr, ptr %cur.addr, align 8, !dbg !4441, !tbaa !1471
  call void @xmlBufDumpElementDecl(ptr noundef %29, ptr noundef %30), !dbg !4442
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4443

if.end30:                                         ; preds = %if.end25
  %31 = load ptr, ptr %cur.addr, align 8, !dbg !4444, !tbaa !1471
  %type31 = getelementptr inbounds %struct._xmlNode, ptr %31, i32 0, i32 1, !dbg !4446
  %32 = load i32, ptr %type31, align 8, !dbg !4446, !tbaa !2618
  %cmp32 = icmp eq i32 %32, 16, !dbg !4447
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !4448

if.then33:                                        ; preds = %if.end30
  %33 = load ptr, ptr %buf, align 8, !dbg !4449, !tbaa !1471
  %buffer34 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %33, i32 0, i32 4, !dbg !4451
  %34 = load ptr, ptr %buffer34, align 8, !dbg !4451, !tbaa !1760
  %35 = load ptr, ptr %cur.addr, align 8, !dbg !4452, !tbaa !1471
  call void @xmlBufDumpAttributeDecl(ptr noundef %34, ptr noundef %35), !dbg !4453
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4454

if.end35:                                         ; preds = %if.end30
  %36 = load ptr, ptr %cur.addr, align 8, !dbg !4455, !tbaa !1471
  %type36 = getelementptr inbounds %struct._xmlNode, ptr %36, i32 0, i32 1, !dbg !4457
  %37 = load i32, ptr %type36, align 8, !dbg !4457, !tbaa !2618
  %cmp37 = icmp eq i32 %37, 17, !dbg !4458
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !4459

if.then38:                                        ; preds = %if.end35
  %38 = load ptr, ptr %buf, align 8, !dbg !4460, !tbaa !1471
  %buffer39 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %38, i32 0, i32 4, !dbg !4462
  %39 = load ptr, ptr %buffer39, align 8, !dbg !4462, !tbaa !1760
  %40 = load ptr, ptr %cur.addr, align 8, !dbg !4463, !tbaa !1471
  call void @xmlBufDumpEntityDecl(ptr noundef %39, ptr noundef %40), !dbg !4464
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4465

if.end40:                                         ; preds = %if.end35
  %41 = load ptr, ptr %cur.addr, align 8, !dbg !4466, !tbaa !1471
  %type41 = getelementptr inbounds %struct._xmlNode, ptr %41, i32 0, i32 1, !dbg !4468
  %42 = load i32, ptr %type41, align 8, !dbg !4468, !tbaa !2618
  %cmp42 = icmp eq i32 %42, 3, !dbg !4469
  br i1 %cmp42, label %if.then43, label %if.end57, !dbg !4470

if.then43:                                        ; preds = %if.end40
  %43 = load ptr, ptr %cur.addr, align 8, !dbg !4471, !tbaa !1471
  %content = getelementptr inbounds %struct._xmlNode, ptr %43, i32 0, i32 10, !dbg !4474
  %44 = load ptr, ptr %content, align 8, !dbg !4474, !tbaa !2745
  %cmp44 = icmp ne ptr %44, null, !dbg !4475
  br i1 %cmp44, label %if.then45, label %if.end56, !dbg !4476

if.then45:                                        ; preds = %if.then43
  %45 = load ptr, ptr %cur.addr, align 8, !dbg !4477, !tbaa !1471
  %name = getelementptr inbounds %struct._xmlNode, ptr %45, i32 0, i32 2, !dbg !4480
  %46 = load ptr, ptr %name, align 8, !dbg !4480, !tbaa !2752
  %cmp46 = icmp eq ptr %46, @xmlStringText, !dbg !4481
  br i1 %cmp46, label %if.then50, label %lor.lhs.false47, !dbg !4482

lor.lhs.false47:                                  ; preds = %if.then45
  %47 = load ptr, ptr %cur.addr, align 8, !dbg !4483, !tbaa !1471
  %name48 = getelementptr inbounds %struct._xmlNode, ptr %47, i32 0, i32 2, !dbg !4484
  %48 = load ptr, ptr %name48, align 8, !dbg !4484, !tbaa !2752
  %cmp49 = icmp ne ptr %48, @xmlStringTextNoenc, !dbg !4485
  br i1 %cmp49, label %if.then50, label %if.else, !dbg !4486

if.then50:                                        ; preds = %lor.lhs.false47, %if.then45
  %49 = load ptr, ptr %buf, align 8, !dbg !4487, !tbaa !1471
  %50 = load ptr, ptr %cur.addr, align 8, !dbg !4489, !tbaa !1471
  %content51 = getelementptr inbounds %struct._xmlNode, ptr %50, i32 0, i32 10, !dbg !4490
  %51 = load ptr, ptr %content51, align 8, !dbg !4490, !tbaa !2745
  %52 = load ptr, ptr %ctxt.addr, align 8, !dbg !4491, !tbaa !1471
  %escape = getelementptr inbounds %struct._xmlSaveCtxt, ptr %52, i32 0, i32 13, !dbg !4492
  %53 = load ptr, ptr %escape, align 8, !dbg !4492, !tbaa !1863
  %call52 = call i32 @xmlOutputBufferWriteEscape__internal_alias(ptr noundef %49, ptr noundef %51, ptr noundef %53), !dbg !4493
  br label %if.end55, !dbg !4494

if.else:                                          ; preds = %lor.lhs.false47
  %54 = load ptr, ptr %buf, align 8, !dbg !4495, !tbaa !1471
  %55 = load ptr, ptr %cur.addr, align 8, !dbg !4497, !tbaa !1471
  %content53 = getelementptr inbounds %struct._xmlNode, ptr %55, i32 0, i32 10, !dbg !4498
  %56 = load ptr, ptr %content53, align 8, !dbg !4498, !tbaa !2745
  %call54 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %54, ptr noundef %56), !dbg !4499
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then50
  br label %if.end56, !dbg !4500

if.end56:                                         ; preds = %if.end55, %if.then43
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4501

if.end57:                                         ; preds = %if.end40
  %57 = load ptr, ptr %cur.addr, align 8, !dbg !4502, !tbaa !1471
  %type58 = getelementptr inbounds %struct._xmlNode, ptr %57, i32 0, i32 1, !dbg !4504
  %58 = load i32, ptr %type58, align 8, !dbg !4504, !tbaa !2618
  %cmp59 = icmp eq i32 %58, 7, !dbg !4505
  br i1 %cmp59, label %if.then60, label %if.end81, !dbg !4506

if.then60:                                        ; preds = %if.end57
  %59 = load ptr, ptr %cur.addr, align 8, !dbg !4507, !tbaa !1471
  %content61 = getelementptr inbounds %struct._xmlNode, ptr %59, i32 0, i32 10, !dbg !4510
  %60 = load ptr, ptr %content61, align 8, !dbg !4510, !tbaa !2745
  %cmp62 = icmp ne ptr %60, null, !dbg !4511
  br i1 %cmp62, label %if.then63, label %if.else75, !dbg !4512

if.then63:                                        ; preds = %if.then60
  %61 = load ptr, ptr %buf, align 8, !dbg !4513, !tbaa !1471
  %call64 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %61, i32 noundef 2, ptr noundef @.str.32), !dbg !4515
  %62 = load ptr, ptr %buf, align 8, !dbg !4516, !tbaa !1471
  %63 = load ptr, ptr %cur.addr, align 8, !dbg !4517, !tbaa !1471
  %name65 = getelementptr inbounds %struct._xmlNode, ptr %63, i32 0, i32 2, !dbg !4518
  %64 = load ptr, ptr %name65, align 8, !dbg !4518, !tbaa !2752
  %call66 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %62, ptr noundef %64), !dbg !4519
  %65 = load ptr, ptr %cur.addr, align 8, !dbg !4520, !tbaa !1471
  %content67 = getelementptr inbounds %struct._xmlNode, ptr %65, i32 0, i32 10, !dbg !4522
  %66 = load ptr, ptr %content67, align 8, !dbg !4522, !tbaa !2745
  %cmp68 = icmp ne ptr %66, null, !dbg !4523
  br i1 %cmp68, label %if.then69, label %if.end73, !dbg !4524

if.then69:                                        ; preds = %if.then63
  %67 = load ptr, ptr %buf, align 8, !dbg !4525, !tbaa !1471
  %call70 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %67, i32 noundef 1, ptr noundef @.str.17), !dbg !4527
  %68 = load ptr, ptr %buf, align 8, !dbg !4528, !tbaa !1471
  %69 = load ptr, ptr %cur.addr, align 8, !dbg !4529, !tbaa !1471
  %content71 = getelementptr inbounds %struct._xmlNode, ptr %69, i32 0, i32 10, !dbg !4530
  %70 = load ptr, ptr %content71, align 8, !dbg !4530, !tbaa !2745
  %call72 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %68, ptr noundef %70), !dbg !4531
  br label %if.end73, !dbg !4532

if.end73:                                         ; preds = %if.then69, %if.then63
  %71 = load ptr, ptr %buf, align 8, !dbg !4533, !tbaa !1471
  %call74 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %71, i32 noundef 2, ptr noundef @.str.33), !dbg !4534
  br label %if.end80, !dbg !4535

if.else75:                                        ; preds = %if.then60
  %72 = load ptr, ptr %buf, align 8, !dbg !4536, !tbaa !1471
  %call76 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %72, i32 noundef 2, ptr noundef @.str.32), !dbg !4538
  %73 = load ptr, ptr %buf, align 8, !dbg !4539, !tbaa !1471
  %74 = load ptr, ptr %cur.addr, align 8, !dbg !4540, !tbaa !1471
  %name77 = getelementptr inbounds %struct._xmlNode, ptr %74, i32 0, i32 2, !dbg !4541
  %75 = load ptr, ptr %name77, align 8, !dbg !4541, !tbaa !2752
  %call78 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %73, ptr noundef %75), !dbg !4542
  %76 = load ptr, ptr %buf, align 8, !dbg !4543, !tbaa !1471
  %call79 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %76, i32 noundef 2, ptr noundef @.str.33), !dbg !4544
  br label %if.end80

if.end80:                                         ; preds = %if.else75, %if.end73
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4545

if.end81:                                         ; preds = %if.end57
  %77 = load ptr, ptr %cur.addr, align 8, !dbg !4546, !tbaa !1471
  %type82 = getelementptr inbounds %struct._xmlNode, ptr %77, i32 0, i32 1, !dbg !4548
  %78 = load i32, ptr %type82, align 8, !dbg !4548, !tbaa !2618
  %cmp83 = icmp eq i32 %78, 8, !dbg !4549
  br i1 %cmp83, label %if.then84, label %if.end93, !dbg !4550

if.then84:                                        ; preds = %if.end81
  %79 = load ptr, ptr %cur.addr, align 8, !dbg !4551, !tbaa !1471
  %content85 = getelementptr inbounds %struct._xmlNode, ptr %79, i32 0, i32 10, !dbg !4554
  %80 = load ptr, ptr %content85, align 8, !dbg !4554, !tbaa !2745
  %cmp86 = icmp ne ptr %80, null, !dbg !4555
  br i1 %cmp86, label %if.then87, label %if.end92, !dbg !4556

if.then87:                                        ; preds = %if.then84
  %81 = load ptr, ptr %buf, align 8, !dbg !4557, !tbaa !1471
  %call88 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %81, i32 noundef 4, ptr noundef @.str.34), !dbg !4559
  %82 = load ptr, ptr %buf, align 8, !dbg !4560, !tbaa !1471
  %83 = load ptr, ptr %cur.addr, align 8, !dbg !4561, !tbaa !1471
  %content89 = getelementptr inbounds %struct._xmlNode, ptr %83, i32 0, i32 10, !dbg !4562
  %84 = load ptr, ptr %content89, align 8, !dbg !4562, !tbaa !2745
  %call90 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %82, ptr noundef %84), !dbg !4563
  %85 = load ptr, ptr %buf, align 8, !dbg !4564, !tbaa !1471
  %call91 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %85, i32 noundef 3, ptr noundef @.str.35), !dbg !4565
  br label %if.end92, !dbg !4566

if.end92:                                         ; preds = %if.then87, %if.then84
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4567

if.end93:                                         ; preds = %if.end81
  %86 = load ptr, ptr %cur.addr, align 8, !dbg !4568, !tbaa !1471
  %type94 = getelementptr inbounds %struct._xmlNode, ptr %86, i32 0, i32 1, !dbg !4570
  %87 = load i32, ptr %type94, align 8, !dbg !4570, !tbaa !2618
  %cmp95 = icmp eq i32 %87, 5, !dbg !4571
  br i1 %cmp95, label %if.then96, label %if.end101, !dbg !4572

if.then96:                                        ; preds = %if.end93
  %88 = load ptr, ptr %buf, align 8, !dbg !4573, !tbaa !1471
  %call97 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %88, i32 noundef 1, ptr noundef @.str.36), !dbg !4575
  %89 = load ptr, ptr %buf, align 8, !dbg !4576, !tbaa !1471
  %90 = load ptr, ptr %cur.addr, align 8, !dbg !4577, !tbaa !1471
  %name98 = getelementptr inbounds %struct._xmlNode, ptr %90, i32 0, i32 2, !dbg !4578
  %91 = load ptr, ptr %name98, align 8, !dbg !4578, !tbaa !2752
  %call99 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %89, ptr noundef %91), !dbg !4579
  %92 = load ptr, ptr %buf, align 8, !dbg !4580, !tbaa !1471
  %call100 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %92, i32 noundef 1, ptr noundef @.str.37), !dbg !4581
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4582

if.end101:                                        ; preds = %if.end93
  %93 = load ptr, ptr %cur.addr, align 8, !dbg !4583, !tbaa !1471
  %type102 = getelementptr inbounds %struct._xmlNode, ptr %93, i32 0, i32 1, !dbg !4585
  %94 = load i32, ptr %type102, align 8, !dbg !4585, !tbaa !2618
  %cmp103 = icmp eq i32 %94, 4, !dbg !4586
  br i1 %cmp103, label %if.then104, label %if.end144, !dbg !4587

if.then104:                                       ; preds = %if.end101
  %95 = load ptr, ptr %cur.addr, align 8, !dbg !4588, !tbaa !1471
  %content105 = getelementptr inbounds %struct._xmlNode, ptr %95, i32 0, i32 10, !dbg !4591
  %96 = load ptr, ptr %content105, align 8, !dbg !4591, !tbaa !2745
  %cmp106 = icmp eq ptr %96, null, !dbg !4592
  br i1 %cmp106, label %if.then111, label %lor.lhs.false107, !dbg !4593

lor.lhs.false107:                                 ; preds = %if.then104
  %97 = load ptr, ptr %cur.addr, align 8, !dbg !4594, !tbaa !1471
  %content108 = getelementptr inbounds %struct._xmlNode, ptr %97, i32 0, i32 10, !dbg !4595
  %98 = load ptr, ptr %content108, align 8, !dbg !4595, !tbaa !2745
  %99 = load i8, ptr %98, align 1, !dbg !4596, !tbaa !2345
  %conv = zext i8 %99 to i32, !dbg !4596
  %cmp109 = icmp eq i32 %conv, 0, !dbg !4597
  br i1 %cmp109, label %if.then111, label %if.else113, !dbg !4598

if.then111:                                       ; preds = %lor.lhs.false107, %if.then104
  %100 = load ptr, ptr %buf, align 8, !dbg !4599, !tbaa !1471
  %call112 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %100, i32 noundef 12, ptr noundef @.str.38), !dbg !4601
  br label %if.end143, !dbg !4602

if.else113:                                       ; preds = %lor.lhs.false107
  %101 = load ptr, ptr %cur.addr, align 8, !dbg !4603, !tbaa !1471
  %content114 = getelementptr inbounds %struct._xmlNode, ptr %101, i32 0, i32 10, !dbg !4605
  %102 = load ptr, ptr %content114, align 8, !dbg !4605, !tbaa !2745
  store ptr %102, ptr %end, align 8, !dbg !4606, !tbaa !1471
  store ptr %102, ptr %start, align 8, !dbg !4607, !tbaa !1471
  br label %while.cond, !dbg !4608

while.cond:                                       ; preds = %if.end135, %if.else113
  %103 = load ptr, ptr %end, align 8, !dbg !4609, !tbaa !1471
  %104 = load i8, ptr %103, align 1, !dbg !4610, !tbaa !2345
  %conv115 = zext i8 %104 to i32, !dbg !4610
  %cmp116 = icmp ne i32 %conv115, 0, !dbg !4611
  br i1 %cmp116, label %while.body, label %while.end, !dbg !4608

while.body:                                       ; preds = %while.cond
  %105 = load ptr, ptr %end, align 8, !dbg !4612, !tbaa !1471
  %106 = load i8, ptr %105, align 1, !dbg !4615, !tbaa !2345
  %conv118 = zext i8 %106 to i32, !dbg !4615
  %cmp119 = icmp eq i32 %conv118, 93, !dbg !4616
  br i1 %cmp119, label %land.lhs.true, label %if.end135, !dbg !4617

land.lhs.true:                                    ; preds = %while.body
  %107 = load ptr, ptr %end, align 8, !dbg !4618, !tbaa !1471
  %add.ptr = getelementptr inbounds i8, ptr %107, i64 1, !dbg !4619
  %108 = load i8, ptr %add.ptr, align 1, !dbg !4620, !tbaa !2345
  %conv121 = zext i8 %108 to i32, !dbg !4620
  %cmp122 = icmp eq i32 %conv121, 93, !dbg !4621
  br i1 %cmp122, label %land.lhs.true124, label %if.end135, !dbg !4622

land.lhs.true124:                                 ; preds = %land.lhs.true
  %109 = load ptr, ptr %end, align 8, !dbg !4623, !tbaa !1471
  %add.ptr125 = getelementptr inbounds i8, ptr %109, i64 2, !dbg !4624
  %110 = load i8, ptr %add.ptr125, align 1, !dbg !4625, !tbaa !2345
  %conv126 = zext i8 %110 to i32, !dbg !4625
  %cmp127 = icmp eq i32 %conv126, 62, !dbg !4626
  br i1 %cmp127, label %if.then129, label %if.end135, !dbg !4627

if.then129:                                       ; preds = %land.lhs.true124
  %111 = load ptr, ptr %end, align 8, !dbg !4628, !tbaa !1471
  %add.ptr130 = getelementptr inbounds i8, ptr %111, i64 2, !dbg !4630
  store ptr %add.ptr130, ptr %end, align 8, !dbg !4631, !tbaa !1471
  %112 = load ptr, ptr %buf, align 8, !dbg !4632, !tbaa !1471
  %call131 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %112, i32 noundef 9, ptr noundef @.str.39), !dbg !4633
  %113 = load ptr, ptr %buf, align 8, !dbg !4634, !tbaa !1471
  %114 = load ptr, ptr %end, align 8, !dbg !4635, !tbaa !1471
  %115 = load ptr, ptr %start, align 8, !dbg !4636, !tbaa !1471
  %sub.ptr.lhs.cast = ptrtoint ptr %114 to i64, !dbg !4637
  %sub.ptr.rhs.cast = ptrtoint ptr %115 to i64, !dbg !4637
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4637
  %conv132 = trunc i64 %sub.ptr.sub to i32, !dbg !4635
  %116 = load ptr, ptr %start, align 8, !dbg !4638, !tbaa !1471
  %call133 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %113, i32 noundef %conv132, ptr noundef %116), !dbg !4639
  %117 = load ptr, ptr %buf, align 8, !dbg !4640, !tbaa !1471
  %call134 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %117, i32 noundef 3, ptr noundef @.str.40), !dbg !4641
  %118 = load ptr, ptr %end, align 8, !dbg !4642, !tbaa !1471
  store ptr %118, ptr %start, align 8, !dbg !4643, !tbaa !1471
  br label %if.end135, !dbg !4644

if.end135:                                        ; preds = %if.then129, %land.lhs.true124, %land.lhs.true, %while.body
  %119 = load ptr, ptr %end, align 8, !dbg !4645, !tbaa !1471
  %incdec.ptr = getelementptr inbounds i8, ptr %119, i32 1, !dbg !4645
  store ptr %incdec.ptr, ptr %end, align 8, !dbg !4645, !tbaa !1471
  br label %while.cond, !dbg !4608, !llvm.loop !4646

while.end:                                        ; preds = %while.cond
  %120 = load ptr, ptr %start, align 8, !dbg !4648, !tbaa !1471
  %121 = load ptr, ptr %end, align 8, !dbg !4650, !tbaa !1471
  %cmp136 = icmp ne ptr %120, %121, !dbg !4651
  br i1 %cmp136, label %if.then138, label %if.end142, !dbg !4652

if.then138:                                       ; preds = %while.end
  %122 = load ptr, ptr %buf, align 8, !dbg !4653, !tbaa !1471
  %call139 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %122, i32 noundef 9, ptr noundef @.str.39), !dbg !4655
  %123 = load ptr, ptr %buf, align 8, !dbg !4656, !tbaa !1471
  %124 = load ptr, ptr %start, align 8, !dbg !4657, !tbaa !1471
  %call140 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %123, ptr noundef %124), !dbg !4658
  %125 = load ptr, ptr %buf, align 8, !dbg !4659, !tbaa !1471
  %call141 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %125, i32 noundef 3, ptr noundef @.str.40), !dbg !4660
  br label %if.end142, !dbg !4661

if.end142:                                        ; preds = %if.then138, %while.end
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then111
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4662

if.end144:                                        ; preds = %if.end101
  %126 = load ptr, ptr %cur.addr, align 8, !dbg !4663, !tbaa !1471
  %type145 = getelementptr inbounds %struct._xmlNode, ptr %126, i32 0, i32 1, !dbg !4665
  %127 = load i32, ptr %type145, align 8, !dbg !4665, !tbaa !2618
  %cmp146 = icmp eq i32 %127, 2, !dbg !4666
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !4667

if.then148:                                       ; preds = %if.end144
  %128 = load ptr, ptr %ctxt.addr, align 8, !dbg !4668, !tbaa !1471
  %129 = load ptr, ptr %cur.addr, align 8, !dbg !4670, !tbaa !1471
  call void @xmlAttrDumpOutput(ptr noundef %128, ptr noundef %129), !dbg !4671
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4672

if.end149:                                        ; preds = %if.end144
  %130 = load ptr, ptr %ctxt.addr, align 8, !dbg !4673, !tbaa !1471
  %format150 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %130, i32 0, i32 9, !dbg !4674
  %131 = load i32, ptr %format150, align 8, !dbg !4674, !tbaa !1732
  store i32 %131, ptr %format, align 4, !dbg !4675, !tbaa !1775
  %132 = load i32, ptr %format, align 4, !dbg !4676, !tbaa !1775
  %cmp151 = icmp eq i32 %132, 1, !dbg !4678
  br i1 %cmp151, label %if.then153, label %if.end169, !dbg !4679

if.then153:                                       ; preds = %if.end149
  %133 = load ptr, ptr %cur.addr, align 8, !dbg !4680, !tbaa !1471
  %children154 = getelementptr inbounds %struct._xmlNode, ptr %133, i32 0, i32 3, !dbg !4682
  %134 = load ptr, ptr %children154, align 8, !dbg !4682, !tbaa !2700
  store ptr %134, ptr %tmp, align 8, !dbg !4683, !tbaa !1471
  br label %while.cond155, !dbg !4684

while.cond155:                                    ; preds = %if.end167, %if.then153
  %135 = load ptr, ptr %tmp, align 8, !dbg !4685, !tbaa !1471
  %cmp156 = icmp ne ptr %135, null, !dbg !4686
  br i1 %cmp156, label %while.body158, label %while.end168, !dbg !4684

while.body158:                                    ; preds = %while.cond155
  %136 = load ptr, ptr %tmp, align 8, !dbg !4687, !tbaa !1471
  %type159 = getelementptr inbounds %struct._xmlNode, ptr %136, i32 0, i32 1, !dbg !4690
  %137 = load i32, ptr %type159, align 8, !dbg !4690, !tbaa !2618
  %cmp160 = icmp eq i32 %137, 3, !dbg !4691
  br i1 %cmp160, label %if.then166, label %lor.lhs.false162, !dbg !4692

lor.lhs.false162:                                 ; preds = %while.body158
  %138 = load ptr, ptr %tmp, align 8, !dbg !4693, !tbaa !1471
  %type163 = getelementptr inbounds %struct._xmlNode, ptr %138, i32 0, i32 1, !dbg !4694
  %139 = load i32, ptr %type163, align 8, !dbg !4694, !tbaa !2618
  %cmp164 = icmp eq i32 %139, 5, !dbg !4695
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !4696

if.then166:                                       ; preds = %lor.lhs.false162, %while.body158
  store i32 0, ptr %format, align 4, !dbg !4697, !tbaa !1775
  br label %while.end168, !dbg !4699

if.end167:                                        ; preds = %lor.lhs.false162
  %140 = load ptr, ptr %tmp, align 8, !dbg !4700, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNode, ptr %140, i32 0, i32 6, !dbg !4701
  %141 = load ptr, ptr %next, align 8, !dbg !4701, !tbaa !2526
  store ptr %141, ptr %tmp, align 8, !dbg !4702, !tbaa !1471
  br label %while.cond155, !dbg !4684, !llvm.loop !4703

while.end168:                                     ; preds = %if.then166, %while.cond155
  br label %if.end169, !dbg !4705

if.end169:                                        ; preds = %while.end168, %if.end149
  %142 = load ptr, ptr %buf, align 8, !dbg !4706, !tbaa !1471
  %call170 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %142, i32 noundef 1, ptr noundef @.str.41), !dbg !4707
  %143 = load ptr, ptr %cur.addr, align 8, !dbg !4708, !tbaa !1471
  %ns = getelementptr inbounds %struct._xmlNode, ptr %143, i32 0, i32 9, !dbg !4710
  %144 = load ptr, ptr %ns, align 8, !dbg !4710, !tbaa !3009
  %cmp171 = icmp ne ptr %144, null, !dbg !4711
  br i1 %cmp171, label %land.lhs.true173, label %if.end182, !dbg !4712

land.lhs.true173:                                 ; preds = %if.end169
  %145 = load ptr, ptr %cur.addr, align 8, !dbg !4713, !tbaa !1471
  %ns174 = getelementptr inbounds %struct._xmlNode, ptr %145, i32 0, i32 9, !dbg !4714
  %146 = load ptr, ptr %ns174, align 8, !dbg !4714, !tbaa !3009
  %prefix = getelementptr inbounds %struct._xmlNs, ptr %146, i32 0, i32 3, !dbg !4715
  %147 = load ptr, ptr %prefix, align 8, !dbg !4715, !tbaa !1722
  %cmp175 = icmp ne ptr %147, null, !dbg !4716
  br i1 %cmp175, label %if.then177, label %if.end182, !dbg !4717

if.then177:                                       ; preds = %land.lhs.true173
  %148 = load ptr, ptr %buf, align 8, !dbg !4718, !tbaa !1471
  %149 = load ptr, ptr %cur.addr, align 8, !dbg !4720, !tbaa !1471
  %ns178 = getelementptr inbounds %struct._xmlNode, ptr %149, i32 0, i32 9, !dbg !4721
  %150 = load ptr, ptr %ns178, align 8, !dbg !4721, !tbaa !3009
  %prefix179 = getelementptr inbounds %struct._xmlNs, ptr %150, i32 0, i32 3, !dbg !4722
  %151 = load ptr, ptr %prefix179, align 8, !dbg !4722, !tbaa !1722
  %call180 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %148, ptr noundef %151), !dbg !4723
  %152 = load ptr, ptr %buf, align 8, !dbg !4724, !tbaa !1471
  %call181 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %152, i32 noundef 1, ptr noundef @.str.42), !dbg !4725
  br label %if.end182, !dbg !4726

if.end182:                                        ; preds = %if.then177, %land.lhs.true173, %if.end169
  %153 = load ptr, ptr %buf, align 8, !dbg !4727, !tbaa !1471
  %154 = load ptr, ptr %cur.addr, align 8, !dbg !4728, !tbaa !1471
  %name183 = getelementptr inbounds %struct._xmlNode, ptr %154, i32 0, i32 2, !dbg !4729
  %155 = load ptr, ptr %name183, align 8, !dbg !4729, !tbaa !2752
  %call184 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %153, ptr noundef %155), !dbg !4730
  %156 = load ptr, ptr %cur.addr, align 8, !dbg !4731, !tbaa !1471
  %nsDef = getelementptr inbounds %struct._xmlNode, ptr %156, i32 0, i32 12, !dbg !4733
  %157 = load ptr, ptr %nsDef, align 8, !dbg !4733, !tbaa !3033
  %tobool = icmp ne ptr %157, null, !dbg !4731
  br i1 %tobool, label %if.then185, label %if.end187, !dbg !4734

if.then185:                                       ; preds = %if.end182
  %158 = load ptr, ptr %ctxt.addr, align 8, !dbg !4735, !tbaa !1471
  %159 = load ptr, ptr %cur.addr, align 8, !dbg !4736, !tbaa !1471
  %nsDef186 = getelementptr inbounds %struct._xmlNode, ptr %159, i32 0, i32 12, !dbg !4737
  %160 = load ptr, ptr %nsDef186, align 8, !dbg !4737, !tbaa !3033
  call void @xmlNsListDumpOutputCtxt(ptr noundef %158, ptr noundef %160), !dbg !4738
  br label %if.end187, !dbg !4738

if.end187:                                        ; preds = %if.then185, %if.end182
  %161 = load ptr, ptr %cur.addr, align 8, !dbg !4739, !tbaa !1471
  %name188 = getelementptr inbounds %struct._xmlNode, ptr %161, i32 0, i32 2, !dbg !4741
  %162 = load ptr, ptr %name188, align 8, !dbg !4741, !tbaa !2752
  %call189 = call i32 @xmlStrEqual__internal_alias(ptr noundef %162, ptr noundef @.str.58), !dbg !4742
  %tobool190 = icmp ne i32 %call189, 0, !dbg !4742
  br i1 %tobool190, label %land.lhs.true191, label %if.end201, !dbg !4743

land.lhs.true191:                                 ; preds = %if.end187
  %163 = load ptr, ptr %cur.addr, align 8, !dbg !4744, !tbaa !1471
  %ns192 = getelementptr inbounds %struct._xmlNode, ptr %163, i32 0, i32 9, !dbg !4745
  %164 = load ptr, ptr %ns192, align 8, !dbg !4745, !tbaa !3009
  %cmp193 = icmp eq ptr %164, null, !dbg !4746
  br i1 %cmp193, label %land.lhs.true195, label %if.end201, !dbg !4747

land.lhs.true195:                                 ; preds = %land.lhs.true191
  %165 = load ptr, ptr %cur.addr, align 8, !dbg !4748, !tbaa !1471
  %nsDef196 = getelementptr inbounds %struct._xmlNode, ptr %165, i32 0, i32 12, !dbg !4749
  %166 = load ptr, ptr %nsDef196, align 8, !dbg !4749, !tbaa !3033
  %cmp197 = icmp eq ptr %166, null, !dbg !4750
  br i1 %cmp197, label %if.then199, label %if.end201, !dbg !4751

if.then199:                                       ; preds = %land.lhs.true195
  %167 = load ptr, ptr %buf, align 8, !dbg !4752, !tbaa !1471
  %call200 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %167, ptr noundef @.str.59), !dbg !4754
  br label %if.end201, !dbg !4755

if.end201:                                        ; preds = %if.then199, %land.lhs.true195, %land.lhs.true191, %if.end187
  %168 = load ptr, ptr %cur.addr, align 8, !dbg !4756, !tbaa !1471
  %properties = getelementptr inbounds %struct._xmlNode, ptr %168, i32 0, i32 11, !dbg !4758
  %169 = load ptr, ptr %properties, align 8, !dbg !4758, !tbaa !3042
  %cmp202 = icmp ne ptr %169, null, !dbg !4759
  br i1 %cmp202, label %if.then204, label %if.end206, !dbg !4760

if.then204:                                       ; preds = %if.end201
  %170 = load ptr, ptr %ctxt.addr, align 8, !dbg !4761, !tbaa !1471
  %171 = load ptr, ptr %cur.addr, align 8, !dbg !4762, !tbaa !1471
  %properties205 = getelementptr inbounds %struct._xmlNode, ptr %171, i32 0, i32 11, !dbg !4763
  %172 = load ptr, ptr %properties205, align 8, !dbg !4763, !tbaa !3042
  call void @xhtmlAttrListDumpOutput(ptr noundef %170, ptr noundef %172), !dbg !4764
  br label %if.end206, !dbg !4764

if.end206:                                        ; preds = %if.then204, %if.end201
  %173 = load ptr, ptr %cur.addr, align 8, !dbg !4765, !tbaa !1471
  %type207 = getelementptr inbounds %struct._xmlNode, ptr %173, i32 0, i32 1, !dbg !4766
  %174 = load i32, ptr %type207, align 8, !dbg !4766, !tbaa !2618
  %cmp208 = icmp eq i32 %174, 1, !dbg !4767
  br i1 %cmp208, label %land.lhs.true210, label %if.end254, !dbg !4768

land.lhs.true210:                                 ; preds = %if.end206
  %175 = load ptr, ptr %cur.addr, align 8, !dbg !4769, !tbaa !1471
  %parent = getelementptr inbounds %struct._xmlNode, ptr %175, i32 0, i32 5, !dbg !4770
  %176 = load ptr, ptr %parent, align 8, !dbg !4770, !tbaa !4771
  %cmp211 = icmp ne ptr %176, null, !dbg !4772
  br i1 %cmp211, label %land.lhs.true213, label %if.end254, !dbg !4773

land.lhs.true213:                                 ; preds = %land.lhs.true210
  %177 = load ptr, ptr %cur.addr, align 8, !dbg !4774, !tbaa !1471
  %parent214 = getelementptr inbounds %struct._xmlNode, ptr %177, i32 0, i32 5, !dbg !4775
  %178 = load ptr, ptr %parent214, align 8, !dbg !4775, !tbaa !4771
  %parent215 = getelementptr inbounds %struct._xmlNode, ptr %178, i32 0, i32 5, !dbg !4776
  %179 = load ptr, ptr %parent215, align 8, !dbg !4776, !tbaa !4771
  %180 = load ptr, ptr %cur.addr, align 8, !dbg !4777, !tbaa !1471
  %doc = getelementptr inbounds %struct._xmlNode, ptr %180, i32 0, i32 8, !dbg !4778
  %181 = load ptr, ptr %doc, align 8, !dbg !4778, !tbaa !2659
  %cmp216 = icmp eq ptr %179, %181, !dbg !4779
  br i1 %cmp216, label %land.lhs.true218, label %if.end254, !dbg !4780

land.lhs.true218:                                 ; preds = %land.lhs.true213
  %182 = load ptr, ptr %cur.addr, align 8, !dbg !4781, !tbaa !1471
  %name219 = getelementptr inbounds %struct._xmlNode, ptr %182, i32 0, i32 2, !dbg !4782
  %183 = load ptr, ptr %name219, align 8, !dbg !4782, !tbaa !2752
  %call220 = call i32 @xmlStrEqual__internal_alias(ptr noundef %183, ptr noundef @.str.60), !dbg !4783
  %tobool221 = icmp ne i32 %call220, 0, !dbg !4783
  br i1 %tobool221, label %land.lhs.true222, label %if.end254, !dbg !4784

land.lhs.true222:                                 ; preds = %land.lhs.true218
  %184 = load ptr, ptr %cur.addr, align 8, !dbg !4785, !tbaa !1471
  %parent223 = getelementptr inbounds %struct._xmlNode, ptr %184, i32 0, i32 5, !dbg !4786
  %185 = load ptr, ptr %parent223, align 8, !dbg !4786, !tbaa !4771
  %name224 = getelementptr inbounds %struct._xmlNode, ptr %185, i32 0, i32 2, !dbg !4787
  %186 = load ptr, ptr %name224, align 8, !dbg !4787, !tbaa !2752
  %call225 = call i32 @xmlStrEqual__internal_alias(ptr noundef %186, ptr noundef @.str.58), !dbg !4788
  %tobool226 = icmp ne i32 %call225, 0, !dbg !4788
  br i1 %tobool226, label %if.then227, label %if.end254, !dbg !4789

if.then227:                                       ; preds = %land.lhs.true222
  %187 = load ptr, ptr %cur.addr, align 8, !dbg !4790, !tbaa !1471
  %children228 = getelementptr inbounds %struct._xmlNode, ptr %187, i32 0, i32 3, !dbg !4791
  %188 = load ptr, ptr %children228, align 8, !dbg !4791, !tbaa !2700
  store ptr %188, ptr %tmp, align 8, !dbg !4792, !tbaa !1471
  br label %while.cond229, !dbg !4793

while.cond229:                                    ; preds = %if.end247, %if.then227
  %189 = load ptr, ptr %tmp, align 8, !dbg !4794, !tbaa !1471
  %cmp230 = icmp ne ptr %189, null, !dbg !4795
  br i1 %cmp230, label %while.body232, label %while.end249, !dbg !4793

while.body232:                                    ; preds = %while.cond229
  %190 = load ptr, ptr %tmp, align 8, !dbg !4796, !tbaa !1471
  %name233 = getelementptr inbounds %struct._xmlNode, ptr %190, i32 0, i32 2, !dbg !4797
  %191 = load ptr, ptr %name233, align 8, !dbg !4797, !tbaa !2752
  %call234 = call i32 @xmlStrEqual__internal_alias(ptr noundef %191, ptr noundef @.str.61), !dbg !4798
  %tobool235 = icmp ne i32 %call234, 0, !dbg !4798
  br i1 %tobool235, label %if.then236, label %if.end247, !dbg !4799

if.then236:                                       ; preds = %while.body232
  call void @llvm.lifetime.start.p0(i64 8, ptr %httpequiv) #6, !dbg !4800
  tail call void @llvm.dbg.declare(metadata ptr %httpequiv, metadata !4347, metadata !DIExpression()), !dbg !4801
  %192 = load ptr, ptr %tmp, align 8, !dbg !4802, !tbaa !1471
  %call237 = call ptr @xmlGetProp__internal_alias(ptr noundef %192, ptr noundef @.str.62), !dbg !4803
  store ptr %call237, ptr %httpequiv, align 8, !dbg !4804, !tbaa !1471
  %193 = load ptr, ptr %httpequiv, align 8, !dbg !4805, !tbaa !1471
  %cmp238 = icmp ne ptr %193, null, !dbg !4807
  br i1 %cmp238, label %if.then240, label %if.end246, !dbg !4808

if.then240:                                       ; preds = %if.then236
  %194 = load ptr, ptr %httpequiv, align 8, !dbg !4809, !tbaa !1471
  %call241 = call i32 @xmlStrcasecmp__internal_alias(ptr noundef %194, ptr noundef @.str.63), !dbg !4812
  %cmp242 = icmp eq i32 %call241, 0, !dbg !4813
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !4814

if.then244:                                       ; preds = %if.then240
  %195 = load ptr, ptr @xmlFree, align 8, !dbg !4815, !tbaa !1471
  %196 = load ptr, ptr %httpequiv, align 8, !dbg !4817, !tbaa !1471
  call void %195(ptr noundef %196), !dbg !4815
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4818

if.end245:                                        ; preds = %if.then240
  %197 = load ptr, ptr @xmlFree, align 8, !dbg !4819, !tbaa !1471
  %198 = load ptr, ptr %httpequiv, align 8, !dbg !4820, !tbaa !1471
  call void %197(ptr noundef %198), !dbg !4819
  br label %if.end246, !dbg !4821

if.end246:                                        ; preds = %if.end245, %if.then236
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4822
  br label %cleanup, !dbg !4822

cleanup:                                          ; preds = %if.end246, %if.then244
  call void @llvm.lifetime.end.p0(i64 8, ptr %httpequiv) #6, !dbg !4822
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 7, label %while.end249
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end247, !dbg !4823

if.end247:                                        ; preds = %cleanup.cont, %while.body232
  %199 = load ptr, ptr %tmp, align 8, !dbg !4824, !tbaa !1471
  %next248 = getelementptr inbounds %struct._xmlNode, ptr %199, i32 0, i32 6, !dbg !4825
  %200 = load ptr, ptr %next248, align 8, !dbg !4825, !tbaa !2526
  store ptr %200, ptr %tmp, align 8, !dbg !4826, !tbaa !1471
  br label %while.cond229, !dbg !4793, !llvm.loop !4827

while.end249:                                     ; preds = %cleanup, %while.cond229
  %201 = load ptr, ptr %tmp, align 8, !dbg !4829, !tbaa !1471
  %cmp250 = icmp eq ptr %201, null, !dbg !4831
  br i1 %cmp250, label %if.then252, label %if.end253, !dbg !4832

if.then252:                                       ; preds = %while.end249
  store i32 1, ptr %addmeta, align 4, !dbg !4833, !tbaa !1775
  br label %if.end253, !dbg !4834

if.end253:                                        ; preds = %if.then252, %while.end249
  br label %if.end254, !dbg !4835

if.end254:                                        ; preds = %if.end253, %land.lhs.true222, %land.lhs.true218, %land.lhs.true213, %land.lhs.true210, %if.end206
  %202 = load ptr, ptr %cur.addr, align 8, !dbg !4836, !tbaa !1471
  %type255 = getelementptr inbounds %struct._xmlNode, ptr %202, i32 0, i32 1, !dbg !4838
  %203 = load i32, ptr %type255, align 8, !dbg !4838, !tbaa !2618
  %cmp256 = icmp eq i32 %203, 1, !dbg !4839
  br i1 %cmp256, label %land.lhs.true258, label %if.end338, !dbg !4840

land.lhs.true258:                                 ; preds = %if.end254
  %204 = load ptr, ptr %cur.addr, align 8, !dbg !4841, !tbaa !1471
  %children259 = getelementptr inbounds %struct._xmlNode, ptr %204, i32 0, i32 3, !dbg !4842
  %205 = load ptr, ptr %children259, align 8, !dbg !4842, !tbaa !2700
  %cmp260 = icmp eq ptr %205, null, !dbg !4843
  br i1 %cmp260, label %if.then262, label %if.end338, !dbg !4844

if.then262:                                       ; preds = %land.lhs.true258
  %206 = load ptr, ptr %cur.addr, align 8, !dbg !4845, !tbaa !1471
  %ns263 = getelementptr inbounds %struct._xmlNode, ptr %206, i32 0, i32 9, !dbg !4848
  %207 = load ptr, ptr %ns263, align 8, !dbg !4848, !tbaa !3009
  %cmp264 = icmp eq ptr %207, null, !dbg !4849
  br i1 %cmp264, label %land.lhs.true271, label %lor.lhs.false266, !dbg !4850

lor.lhs.false266:                                 ; preds = %if.then262
  %208 = load ptr, ptr %cur.addr, align 8, !dbg !4851, !tbaa !1471
  %ns267 = getelementptr inbounds %struct._xmlNode, ptr %208, i32 0, i32 9, !dbg !4852
  %209 = load ptr, ptr %ns267, align 8, !dbg !4852, !tbaa !3009
  %prefix268 = getelementptr inbounds %struct._xmlNs, ptr %209, i32 0, i32 3, !dbg !4853
  %210 = load ptr, ptr %prefix268, align 8, !dbg !4853, !tbaa !1722
  %cmp269 = icmp eq ptr %210, null, !dbg !4854
  br i1 %cmp269, label %land.lhs.true271, label %if.else280, !dbg !4855

land.lhs.true271:                                 ; preds = %lor.lhs.false266, %if.then262
  %211 = load ptr, ptr %cur.addr, align 8, !dbg !4856, !tbaa !1471
  %call272 = call i32 @xhtmlIsEmpty(ptr noundef %211), !dbg !4857
  %cmp273 = icmp eq i32 %call272, 1, !dbg !4858
  br i1 %cmp273, label %land.lhs.true275, label %if.else280, !dbg !4859

land.lhs.true275:                                 ; preds = %land.lhs.true271
  %212 = load i32, ptr %addmeta, align 4, !dbg !4860, !tbaa !1775
  %cmp276 = icmp eq i32 %212, 0, !dbg !4861
  br i1 %cmp276, label %if.then278, label %if.else280, !dbg !4862

if.then278:                                       ; preds = %land.lhs.true275
  %213 = load ptr, ptr %buf, align 8, !dbg !4863, !tbaa !1471
  %call279 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %213, i32 noundef 3, ptr noundef @.str.64), !dbg !4865
  br label %if.end337, !dbg !4866

if.else280:                                       ; preds = %land.lhs.true275, %land.lhs.true271, %lor.lhs.false266
  %214 = load i32, ptr %addmeta, align 4, !dbg !4867, !tbaa !1775
  %cmp281 = icmp eq i32 %214, 1, !dbg !4870
  br i1 %cmp281, label %if.then283, label %if.else316, !dbg !4871

if.then283:                                       ; preds = %if.else280
  %215 = load ptr, ptr %buf, align 8, !dbg !4872, !tbaa !1471
  %call284 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %215, i32 noundef 1, ptr noundef @.str.44), !dbg !4874
  %216 = load ptr, ptr %ctxt.addr, align 8, !dbg !4875, !tbaa !1471
  %format285 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %216, i32 0, i32 9, !dbg !4877
  %217 = load i32, ptr %format285, align 8, !dbg !4877, !tbaa !1732
  %cmp286 = icmp eq i32 %217, 1, !dbg !4878
  br i1 %cmp286, label %if.then288, label %if.end300, !dbg !4879

if.then288:                                       ; preds = %if.then283
  %218 = load ptr, ptr %buf, align 8, !dbg !4880, !tbaa !1471
  %call289 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %218, i32 noundef 1, ptr noundef @.str.21), !dbg !4882
  %call290 = call ptr @__xmlIndentTreeOutput(), !dbg !4883
  %219 = load i32, ptr %call290, align 4, !dbg !4883, !tbaa !1775
  %tobool291 = icmp ne i32 %219, 0, !dbg !4883
  br i1 %tobool291, label %if.then292, label %if.end299, !dbg !4885

if.then292:                                       ; preds = %if.then288
  %220 = load ptr, ptr %buf, align 8, !dbg !4886, !tbaa !1471
  %221 = load ptr, ptr %ctxt.addr, align 8, !dbg !4887, !tbaa !1471
  %indent_size = getelementptr inbounds %struct._xmlSaveCtxt, ptr %221, i32 0, i32 12, !dbg !4888
  %222 = load i32, ptr %indent_size, align 8, !dbg !4888, !tbaa !3152
  %223 = load ptr, ptr %ctxt.addr, align 8, !dbg !4889, !tbaa !1471
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %223, i32 0, i32 8, !dbg !4890
  %224 = load i32, ptr %level, align 4, !dbg !4890, !tbaa !2512
  %add = add nsw i32 %224, 1, !dbg !4891
  %225 = load ptr, ptr %ctxt.addr, align 8, !dbg !4892, !tbaa !1471
  %indent_nr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %225, i32 0, i32 11, !dbg !4893
  %226 = load i32, ptr %indent_nr, align 4, !dbg !4893, !tbaa !3157
  %cmp293 = icmp sgt i32 %add, %226, !dbg !4894
  br i1 %cmp293, label %cond.true, label %cond.false, !dbg !4889

cond.true:                                        ; preds = %if.then292
  %227 = load ptr, ptr %ctxt.addr, align 8, !dbg !4895, !tbaa !1471
  %indent_nr295 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %227, i32 0, i32 11, !dbg !4896
  %228 = load i32, ptr %indent_nr295, align 4, !dbg !4896, !tbaa !3157
  br label %cond.end, !dbg !4889

cond.false:                                       ; preds = %if.then292
  %229 = load ptr, ptr %ctxt.addr, align 8, !dbg !4897, !tbaa !1471
  %level296 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %229, i32 0, i32 8, !dbg !4898
  %230 = load i32, ptr %level296, align 4, !dbg !4898, !tbaa !2512
  %add297 = add nsw i32 %230, 1, !dbg !4899
  br label %cond.end, !dbg !4889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %228, %cond.true ], [ %add297, %cond.false ], !dbg !4889
  %mul = mul nsw i32 %222, %cond, !dbg !4900
  %231 = load ptr, ptr %ctxt.addr, align 8, !dbg !4901, !tbaa !1471
  %indent = getelementptr inbounds %struct._xmlSaveCtxt, ptr %231, i32 0, i32 10, !dbg !4902
  %arraydecay = getelementptr inbounds [61 x i8], ptr %indent, i64 0, i64 0, !dbg !4901
  %call298 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %220, i32 noundef %mul, ptr noundef %arraydecay), !dbg !4903
  br label %if.end299, !dbg !4903

if.end299:                                        ; preds = %cond.end, %if.then288
  br label %if.end300, !dbg !4904

if.end300:                                        ; preds = %if.end299, %if.then283
  %232 = load ptr, ptr %buf, align 8, !dbg !4905, !tbaa !1471
  %call301 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %232, ptr noundef @.str.65), !dbg !4906
  %233 = load ptr, ptr %ctxt.addr, align 8, !dbg !4907, !tbaa !1471
  %encoding = getelementptr inbounds %struct._xmlSaveCtxt, ptr %233, i32 0, i32 4, !dbg !4909
  %234 = load ptr, ptr %encoding, align 8, !dbg !4909, !tbaa !1859
  %tobool302 = icmp ne ptr %234, null, !dbg !4907
  br i1 %tobool302, label %if.then303, label %if.else306, !dbg !4910

if.then303:                                       ; preds = %if.end300
  %235 = load ptr, ptr %buf, align 8, !dbg !4911, !tbaa !1471
  %236 = load ptr, ptr %ctxt.addr, align 8, !dbg !4913, !tbaa !1471
  %encoding304 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %236, i32 0, i32 4, !dbg !4914
  %237 = load ptr, ptr %encoding304, align 8, !dbg !4914, !tbaa !1859
  %call305 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %235, ptr noundef %237), !dbg !4915
  br label %if.end308, !dbg !4916

if.else306:                                       ; preds = %if.end300
  %238 = load ptr, ptr %buf, align 8, !dbg !4917, !tbaa !1471
  %call307 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %238, i32 noundef 5, ptr noundef @.str.14), !dbg !4919
  br label %if.end308

if.end308:                                        ; preds = %if.else306, %if.then303
  %239 = load ptr, ptr %buf, align 8, !dbg !4920, !tbaa !1471
  %call309 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %239, i32 noundef 4, ptr noundef @.str.66), !dbg !4921
  %240 = load ptr, ptr %ctxt.addr, align 8, !dbg !4922, !tbaa !1471
  %format310 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %240, i32 0, i32 9, !dbg !4924
  %241 = load i32, ptr %format310, align 8, !dbg !4924, !tbaa !1732
  %cmp311 = icmp eq i32 %241, 1, !dbg !4925
  br i1 %cmp311, label %if.then313, label %if.end315, !dbg !4926

if.then313:                                       ; preds = %if.end308
  %242 = load ptr, ptr %buf, align 8, !dbg !4927, !tbaa !1471
  %call314 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %242, i32 noundef 1, ptr noundef @.str.21), !dbg !4928
  br label %if.end315, !dbg !4928

if.end315:                                        ; preds = %if.then313, %if.end308
  br label %if.end318, !dbg !4929

if.else316:                                       ; preds = %if.else280
  %243 = load ptr, ptr %buf, align 8, !dbg !4930, !tbaa !1471
  %call317 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %243, i32 noundef 1, ptr noundef @.str.44), !dbg !4932
  br label %if.end318

if.end318:                                        ; preds = %if.else316, %if.end315
  %244 = load ptr, ptr %buf, align 8, !dbg !4933, !tbaa !1471
  %call319 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %244, i32 noundef 2, ptr noundef @.str.45), !dbg !4934
  %245 = load ptr, ptr %cur.addr, align 8, !dbg !4935, !tbaa !1471
  %ns320 = getelementptr inbounds %struct._xmlNode, ptr %245, i32 0, i32 9, !dbg !4937
  %246 = load ptr, ptr %ns320, align 8, !dbg !4937, !tbaa !3009
  %cmp321 = icmp ne ptr %246, null, !dbg !4938
  br i1 %cmp321, label %land.lhs.true323, label %if.end333, !dbg !4939

land.lhs.true323:                                 ; preds = %if.end318
  %247 = load ptr, ptr %cur.addr, align 8, !dbg !4940, !tbaa !1471
  %ns324 = getelementptr inbounds %struct._xmlNode, ptr %247, i32 0, i32 9, !dbg !4941
  %248 = load ptr, ptr %ns324, align 8, !dbg !4941, !tbaa !3009
  %prefix325 = getelementptr inbounds %struct._xmlNs, ptr %248, i32 0, i32 3, !dbg !4942
  %249 = load ptr, ptr %prefix325, align 8, !dbg !4942, !tbaa !1722
  %cmp326 = icmp ne ptr %249, null, !dbg !4943
  br i1 %cmp326, label %if.then328, label %if.end333, !dbg !4944

if.then328:                                       ; preds = %land.lhs.true323
  %250 = load ptr, ptr %buf, align 8, !dbg !4945, !tbaa !1471
  %251 = load ptr, ptr %cur.addr, align 8, !dbg !4947, !tbaa !1471
  %ns329 = getelementptr inbounds %struct._xmlNode, ptr %251, i32 0, i32 9, !dbg !4948
  %252 = load ptr, ptr %ns329, align 8, !dbg !4948, !tbaa !3009
  %prefix330 = getelementptr inbounds %struct._xmlNs, ptr %252, i32 0, i32 3, !dbg !4949
  %253 = load ptr, ptr %prefix330, align 8, !dbg !4949, !tbaa !1722
  %call331 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %250, ptr noundef %253), !dbg !4950
  %254 = load ptr, ptr %buf, align 8, !dbg !4951, !tbaa !1471
  %call332 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %254, i32 noundef 1, ptr noundef @.str.42), !dbg !4952
  br label %if.end333, !dbg !4953

if.end333:                                        ; preds = %if.then328, %land.lhs.true323, %if.end318
  %255 = load ptr, ptr %buf, align 8, !dbg !4954, !tbaa !1471
  %256 = load ptr, ptr %cur.addr, align 8, !dbg !4955, !tbaa !1471
  %name334 = getelementptr inbounds %struct._xmlNode, ptr %256, i32 0, i32 2, !dbg !4956
  %257 = load ptr, ptr %name334, align 8, !dbg !4956, !tbaa !2752
  %call335 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %255, ptr noundef %257), !dbg !4957
  %258 = load ptr, ptr %buf, align 8, !dbg !4958, !tbaa !1471
  %call336 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %258, i32 noundef 1, ptr noundef @.str.44), !dbg !4959
  br label %if.end337

if.end337:                                        ; preds = %if.end333, %if.then278
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup460, !dbg !4960

if.end338:                                        ; preds = %land.lhs.true258, %if.end254
  %259 = load ptr, ptr %buf, align 8, !dbg !4961, !tbaa !1471
  %call339 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %259, i32 noundef 1, ptr noundef @.str.44), !dbg !4962
  %260 = load i32, ptr %addmeta, align 4, !dbg !4963, !tbaa !1775
  %cmp340 = icmp eq i32 %260, 1, !dbg !4965
  br i1 %cmp340, label %if.then342, label %if.end380, !dbg !4966

if.then342:                                       ; preds = %if.end338
  %261 = load ptr, ptr %ctxt.addr, align 8, !dbg !4967, !tbaa !1471
  %format343 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %261, i32 0, i32 9, !dbg !4970
  %262 = load i32, ptr %format343, align 8, !dbg !4970, !tbaa !1732
  %cmp344 = icmp eq i32 %262, 1, !dbg !4971
  br i1 %cmp344, label %if.then346, label %if.end369, !dbg !4972

if.then346:                                       ; preds = %if.then342
  %263 = load ptr, ptr %buf, align 8, !dbg !4973, !tbaa !1471
  %call347 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %263, i32 noundef 1, ptr noundef @.str.21), !dbg !4975
  %call348 = call ptr @__xmlIndentTreeOutput(), !dbg !4976
  %264 = load i32, ptr %call348, align 4, !dbg !4976, !tbaa !1775
  %tobool349 = icmp ne i32 %264, 0, !dbg !4976
  br i1 %tobool349, label %if.then350, label %if.end368, !dbg !4978

if.then350:                                       ; preds = %if.then346
  %265 = load ptr, ptr %buf, align 8, !dbg !4979, !tbaa !1471
  %266 = load ptr, ptr %ctxt.addr, align 8, !dbg !4980, !tbaa !1471
  %indent_size351 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %266, i32 0, i32 12, !dbg !4981
  %267 = load i32, ptr %indent_size351, align 8, !dbg !4981, !tbaa !3152
  %268 = load ptr, ptr %ctxt.addr, align 8, !dbg !4982, !tbaa !1471
  %level352 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %268, i32 0, i32 8, !dbg !4983
  %269 = load i32, ptr %level352, align 4, !dbg !4983, !tbaa !2512
  %add353 = add nsw i32 %269, 1, !dbg !4984
  %270 = load ptr, ptr %ctxt.addr, align 8, !dbg !4985, !tbaa !1471
  %indent_nr354 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %270, i32 0, i32 11, !dbg !4986
  %271 = load i32, ptr %indent_nr354, align 4, !dbg !4986, !tbaa !3157
  %cmp355 = icmp sgt i32 %add353, %271, !dbg !4987
  br i1 %cmp355, label %cond.true357, label %cond.false359, !dbg !4982

cond.true357:                                     ; preds = %if.then350
  %272 = load ptr, ptr %ctxt.addr, align 8, !dbg !4988, !tbaa !1471
  %indent_nr358 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %272, i32 0, i32 11, !dbg !4989
  %273 = load i32, ptr %indent_nr358, align 4, !dbg !4989, !tbaa !3157
  br label %cond.end362, !dbg !4982

cond.false359:                                    ; preds = %if.then350
  %274 = load ptr, ptr %ctxt.addr, align 8, !dbg !4990, !tbaa !1471
  %level360 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %274, i32 0, i32 8, !dbg !4991
  %275 = load i32, ptr %level360, align 4, !dbg !4991, !tbaa !2512
  %add361 = add nsw i32 %275, 1, !dbg !4992
  br label %cond.end362, !dbg !4982

cond.end362:                                      ; preds = %cond.false359, %cond.true357
  %cond363 = phi i32 [ %273, %cond.true357 ], [ %add361, %cond.false359 ], !dbg !4982
  %mul364 = mul nsw i32 %267, %cond363, !dbg !4993
  %276 = load ptr, ptr %ctxt.addr, align 8, !dbg !4994, !tbaa !1471
  %indent365 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %276, i32 0, i32 10, !dbg !4995
  %arraydecay366 = getelementptr inbounds [61 x i8], ptr %indent365, i64 0, i64 0, !dbg !4994
  %call367 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %265, i32 noundef %mul364, ptr noundef %arraydecay366), !dbg !4996
  br label %if.end368, !dbg !4996

if.end368:                                        ; preds = %cond.end362, %if.then346
  br label %if.end369, !dbg !4997

if.end369:                                        ; preds = %if.end368, %if.then342
  %277 = load ptr, ptr %buf, align 8, !dbg !4998, !tbaa !1471
  %call370 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %277, ptr noundef @.str.65), !dbg !4999
  %278 = load ptr, ptr %ctxt.addr, align 8, !dbg !5000, !tbaa !1471
  %encoding371 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %278, i32 0, i32 4, !dbg !5002
  %279 = load ptr, ptr %encoding371, align 8, !dbg !5002, !tbaa !1859
  %tobool372 = icmp ne ptr %279, null, !dbg !5000
  br i1 %tobool372, label %if.then373, label %if.else376, !dbg !5003

if.then373:                                       ; preds = %if.end369
  %280 = load ptr, ptr %buf, align 8, !dbg !5004, !tbaa !1471
  %281 = load ptr, ptr %ctxt.addr, align 8, !dbg !5006, !tbaa !1471
  %encoding374 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %281, i32 0, i32 4, !dbg !5007
  %282 = load ptr, ptr %encoding374, align 8, !dbg !5007, !tbaa !1859
  %call375 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %280, ptr noundef %282), !dbg !5008
  br label %if.end378, !dbg !5009

if.else376:                                       ; preds = %if.end369
  %283 = load ptr, ptr %buf, align 8, !dbg !5010, !tbaa !1471
  %call377 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %283, i32 noundef 5, ptr noundef @.str.14), !dbg !5012
  br label %if.end378

if.end378:                                        ; preds = %if.else376, %if.then373
  %284 = load ptr, ptr %buf, align 8, !dbg !5013, !tbaa !1471
  %call379 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %284, i32 noundef 4, ptr noundef @.str.66), !dbg !5014
  br label %if.end380, !dbg !5015

if.end380:                                        ; preds = %if.end378, %if.end338
  %285 = load ptr, ptr %cur.addr, align 8, !dbg !5016, !tbaa !1471
  %type381 = getelementptr inbounds %struct._xmlNode, ptr %285, i32 0, i32 1, !dbg !5018
  %286 = load i32, ptr %type381, align 8, !dbg !5018, !tbaa !2618
  %cmp382 = icmp ne i32 %286, 1, !dbg !5019
  br i1 %cmp382, label %land.lhs.true384, label %if.end392, !dbg !5020

land.lhs.true384:                                 ; preds = %if.end380
  %287 = load ptr, ptr %cur.addr, align 8, !dbg !5021, !tbaa !1471
  %content385 = getelementptr inbounds %struct._xmlNode, ptr %287, i32 0, i32 10, !dbg !5022
  %288 = load ptr, ptr %content385, align 8, !dbg !5022, !tbaa !2745
  %cmp386 = icmp ne ptr %288, null, !dbg !5023
  br i1 %cmp386, label %if.then388, label %if.end392, !dbg !5024

if.then388:                                       ; preds = %land.lhs.true384
  %289 = load ptr, ptr %buf, align 8, !dbg !5025, !tbaa !1471
  %290 = load ptr, ptr %cur.addr, align 8, !dbg !5027, !tbaa !1471
  %content389 = getelementptr inbounds %struct._xmlNode, ptr %290, i32 0, i32 10, !dbg !5028
  %291 = load ptr, ptr %content389, align 8, !dbg !5028, !tbaa !2745
  %292 = load ptr, ptr %ctxt.addr, align 8, !dbg !5029, !tbaa !1471
  %escape390 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %292, i32 0, i32 13, !dbg !5030
  %293 = load ptr, ptr %escape390, align 8, !dbg !5030, !tbaa !1863
  %call391 = call i32 @xmlOutputBufferWriteEscape__internal_alias(ptr noundef %289, ptr noundef %291, ptr noundef %293), !dbg !5031
  br label %if.end392, !dbg !5032

if.end392:                                        ; preds = %if.then388, %land.lhs.true384, %if.end380
  %294 = load ptr, ptr %cur.addr, align 8, !dbg !5033, !tbaa !1471
  %children393 = getelementptr inbounds %struct._xmlNode, ptr %294, i32 0, i32 3, !dbg !5034
  %295 = load ptr, ptr %children393, align 8, !dbg !5034, !tbaa !2700
  %cmp394 = icmp ne ptr %295, null, !dbg !5035
  br i1 %cmp394, label %if.then396, label %if.end441, !dbg !5036

if.then396:                                       ; preds = %if.end392
  call void @llvm.lifetime.start.p0(i64 4, ptr %indent397) #6, !dbg !5037
  tail call void @llvm.dbg.declare(metadata ptr %indent397, metadata !4353, metadata !DIExpression()), !dbg !5038
  %296 = load ptr, ptr %ctxt.addr, align 8, !dbg !5039, !tbaa !1471
  %format398 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %296, i32 0, i32 9, !dbg !5040
  %297 = load i32, ptr %format398, align 8, !dbg !5040, !tbaa !1732
  store i32 %297, ptr %indent397, align 4, !dbg !5038, !tbaa !1775
  %298 = load i32, ptr %format, align 4, !dbg !5041, !tbaa !1775
  %cmp399 = icmp eq i32 %298, 1, !dbg !5043
  br i1 %cmp399, label %if.then401, label %if.end403, !dbg !5044

if.then401:                                       ; preds = %if.then396
  %299 = load ptr, ptr %buf, align 8, !dbg !5045, !tbaa !1471
  %call402 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %299, i32 noundef 1, ptr noundef @.str.21), !dbg !5046
  br label %if.end403, !dbg !5046

if.end403:                                        ; preds = %if.then401, %if.then396
  %300 = load ptr, ptr %ctxt.addr, align 8, !dbg !5047, !tbaa !1471
  %level404 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %300, i32 0, i32 8, !dbg !5049
  %301 = load i32, ptr %level404, align 4, !dbg !5049, !tbaa !2512
  %cmp405 = icmp sge i32 %301, 0, !dbg !5050
  br i1 %cmp405, label %if.then407, label %if.end409, !dbg !5051

if.then407:                                       ; preds = %if.end403
  %302 = load ptr, ptr %ctxt.addr, align 8, !dbg !5052, !tbaa !1471
  %level408 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %302, i32 0, i32 8, !dbg !5053
  %303 = load i32, ptr %level408, align 4, !dbg !5054, !tbaa !2512
  %inc = add nsw i32 %303, 1, !dbg !5054
  store i32 %inc, ptr %level408, align 4, !dbg !5054, !tbaa !2512
  br label %if.end409, !dbg !5052

if.end409:                                        ; preds = %if.then407, %if.end403
  %304 = load i32, ptr %format, align 4, !dbg !5055, !tbaa !1775
  %305 = load ptr, ptr %ctxt.addr, align 8, !dbg !5056, !tbaa !1471
  %format410 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %305, i32 0, i32 9, !dbg !5057
  store i32 %304, ptr %format410, align 8, !dbg !5058, !tbaa !1732
  %306 = load ptr, ptr %ctxt.addr, align 8, !dbg !5059, !tbaa !1471
  %307 = load ptr, ptr %cur.addr, align 8, !dbg !5060, !tbaa !1471
  %children411 = getelementptr inbounds %struct._xmlNode, ptr %307, i32 0, i32 3, !dbg !5061
  %308 = load ptr, ptr %children411, align 8, !dbg !5061, !tbaa !2700
  call void @xhtmlNodeListDumpOutput(ptr noundef %306, ptr noundef %308), !dbg !5062
  %309 = load ptr, ptr %ctxt.addr, align 8, !dbg !5063, !tbaa !1471
  %level412 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %309, i32 0, i32 8, !dbg !5065
  %310 = load i32, ptr %level412, align 4, !dbg !5065, !tbaa !2512
  %cmp413 = icmp sgt i32 %310, 0, !dbg !5066
  br i1 %cmp413, label %if.then415, label %if.end417, !dbg !5067

if.then415:                                       ; preds = %if.end409
  %311 = load ptr, ptr %ctxt.addr, align 8, !dbg !5068, !tbaa !1471
  %level416 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %311, i32 0, i32 8, !dbg !5069
  %312 = load i32, ptr %level416, align 4, !dbg !5070, !tbaa !2512
  %dec = add nsw i32 %312, -1, !dbg !5070
  store i32 %dec, ptr %level416, align 4, !dbg !5070, !tbaa !2512
  br label %if.end417, !dbg !5068

if.end417:                                        ; preds = %if.then415, %if.end409
  %313 = load i32, ptr %indent397, align 4, !dbg !5071, !tbaa !1775
  %314 = load ptr, ptr %ctxt.addr, align 8, !dbg !5072, !tbaa !1471
  %format418 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %314, i32 0, i32 9, !dbg !5073
  store i32 %313, ptr %format418, align 8, !dbg !5074, !tbaa !1732
  %call419 = call ptr @__xmlIndentTreeOutput(), !dbg !5075
  %315 = load i32, ptr %call419, align 4, !dbg !5075, !tbaa !1775
  %tobool420 = icmp ne i32 %315, 0, !dbg !5077
  br i1 %tobool420, label %land.lhs.true421, label %if.end440, !dbg !5078

land.lhs.true421:                                 ; preds = %if.end417
  %316 = load i32, ptr %format, align 4, !dbg !5079, !tbaa !1775
  %cmp422 = icmp eq i32 %316, 1, !dbg !5080
  br i1 %cmp422, label %if.then424, label %if.end440, !dbg !5081

if.then424:                                       ; preds = %land.lhs.true421
  %317 = load ptr, ptr %buf, align 8, !dbg !5082, !tbaa !1471
  %318 = load ptr, ptr %ctxt.addr, align 8, !dbg !5083, !tbaa !1471
  %indent_size425 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %318, i32 0, i32 12, !dbg !5084
  %319 = load i32, ptr %indent_size425, align 8, !dbg !5084, !tbaa !3152
  %320 = load ptr, ptr %ctxt.addr, align 8, !dbg !5085, !tbaa !1471
  %level426 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %320, i32 0, i32 8, !dbg !5086
  %321 = load i32, ptr %level426, align 4, !dbg !5086, !tbaa !2512
  %322 = load ptr, ptr %ctxt.addr, align 8, !dbg !5087, !tbaa !1471
  %indent_nr427 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %322, i32 0, i32 11, !dbg !5088
  %323 = load i32, ptr %indent_nr427, align 4, !dbg !5088, !tbaa !3157
  %cmp428 = icmp sgt i32 %321, %323, !dbg !5089
  br i1 %cmp428, label %cond.true430, label %cond.false432, !dbg !5085

cond.true430:                                     ; preds = %if.then424
  %324 = load ptr, ptr %ctxt.addr, align 8, !dbg !5090, !tbaa !1471
  %indent_nr431 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %324, i32 0, i32 11, !dbg !5091
  %325 = load i32, ptr %indent_nr431, align 4, !dbg !5091, !tbaa !3157
  br label %cond.end434, !dbg !5085

cond.false432:                                    ; preds = %if.then424
  %326 = load ptr, ptr %ctxt.addr, align 8, !dbg !5092, !tbaa !1471
  %level433 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %326, i32 0, i32 8, !dbg !5093
  %327 = load i32, ptr %level433, align 4, !dbg !5093, !tbaa !2512
  br label %cond.end434, !dbg !5085

cond.end434:                                      ; preds = %cond.false432, %cond.true430
  %cond435 = phi i32 [ %325, %cond.true430 ], [ %327, %cond.false432 ], !dbg !5085
  %mul436 = mul nsw i32 %319, %cond435, !dbg !5094
  %328 = load ptr, ptr %ctxt.addr, align 8, !dbg !5095, !tbaa !1471
  %indent437 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %328, i32 0, i32 10, !dbg !5096
  %arraydecay438 = getelementptr inbounds [61 x i8], ptr %indent437, i64 0, i64 0, !dbg !5095
  %call439 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %317, i32 noundef %mul436, ptr noundef %arraydecay438), !dbg !5097
  br label %if.end440, !dbg !5097

if.end440:                                        ; preds = %cond.end434, %land.lhs.true421, %if.end417
  call void @llvm.lifetime.end.p0(i64 4, ptr %indent397) #6, !dbg !5098
  br label %if.end441, !dbg !5099

if.end441:                                        ; preds = %if.end440, %if.end392
  %329 = load ptr, ptr %buf, align 8, !dbg !5100, !tbaa !1471
  %call442 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %329, i32 noundef 2, ptr noundef @.str.45), !dbg !5101
  %330 = load ptr, ptr %cur.addr, align 8, !dbg !5102, !tbaa !1471
  %ns443 = getelementptr inbounds %struct._xmlNode, ptr %330, i32 0, i32 9, !dbg !5104
  %331 = load ptr, ptr %ns443, align 8, !dbg !5104, !tbaa !3009
  %cmp444 = icmp ne ptr %331, null, !dbg !5105
  br i1 %cmp444, label %land.lhs.true446, label %if.end456, !dbg !5106

land.lhs.true446:                                 ; preds = %if.end441
  %332 = load ptr, ptr %cur.addr, align 8, !dbg !5107, !tbaa !1471
  %ns447 = getelementptr inbounds %struct._xmlNode, ptr %332, i32 0, i32 9, !dbg !5108
  %333 = load ptr, ptr %ns447, align 8, !dbg !5108, !tbaa !3009
  %prefix448 = getelementptr inbounds %struct._xmlNs, ptr %333, i32 0, i32 3, !dbg !5109
  %334 = load ptr, ptr %prefix448, align 8, !dbg !5109, !tbaa !1722
  %cmp449 = icmp ne ptr %334, null, !dbg !5110
  br i1 %cmp449, label %if.then451, label %if.end456, !dbg !5111

if.then451:                                       ; preds = %land.lhs.true446
  %335 = load ptr, ptr %buf, align 8, !dbg !5112, !tbaa !1471
  %336 = load ptr, ptr %cur.addr, align 8, !dbg !5114, !tbaa !1471
  %ns452 = getelementptr inbounds %struct._xmlNode, ptr %336, i32 0, i32 9, !dbg !5115
  %337 = load ptr, ptr %ns452, align 8, !dbg !5115, !tbaa !3009
  %prefix453 = getelementptr inbounds %struct._xmlNs, ptr %337, i32 0, i32 3, !dbg !5116
  %338 = load ptr, ptr %prefix453, align 8, !dbg !5116, !tbaa !1722
  %call454 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %335, ptr noundef %338), !dbg !5117
  %339 = load ptr, ptr %buf, align 8, !dbg !5118, !tbaa !1471
  %call455 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %339, i32 noundef 1, ptr noundef @.str.42), !dbg !5119
  br label %if.end456, !dbg !5120

if.end456:                                        ; preds = %if.then451, %land.lhs.true446, %if.end441
  %340 = load ptr, ptr %buf, align 8, !dbg !5121, !tbaa !1471
  %341 = load ptr, ptr %cur.addr, align 8, !dbg !5122, !tbaa !1471
  %name457 = getelementptr inbounds %struct._xmlNode, ptr %341, i32 0, i32 2, !dbg !5123
  %342 = load ptr, ptr %name457, align 8, !dbg !5123, !tbaa !2752
  %call458 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %340, ptr noundef %342), !dbg !5124
  %343 = load ptr, ptr %buf, align 8, !dbg !5125, !tbaa !1471
  %call459 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %343, i32 noundef 1, ptr noundef @.str.44), !dbg !5126
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5127
  br label %cleanup460, !dbg !5127

cleanup460:                                       ; preds = %if.end456, %if.end337, %if.then148, %if.end143, %if.then96, %if.end92, %if.end80, %if.end56, %if.then38, %if.then33, %if.then29, %if.then24, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !5127
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #6, !dbg !5127
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #6, !dbg !5127
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #6, !dbg !5127
  call void @llvm.lifetime.end.p0(i64 4, ptr %addmeta) #6, !dbg !5127
  call void @llvm.lifetime.end.p0(i64 4, ptr %format) #6, !dbg !5127
  %cleanup.dest466 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest466, label %unreachable [
    i32 0, label %cleanup.cont467
    i32 1, label %cleanup.cont467
  ]

cleanup.cont467:                                  ; preds = %cleanup460, %cleanup460
  ret void, !dbg !5127

unreachable:                                      ; preds = %cleanup460, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @xmlDocDumpFormatMemoryEnc__internal_alias(ptr noundef %out_doc, ptr noundef %doc_txt_ptr, ptr noundef %doc_txt_len, ptr noundef %txt_encoding, i32 noundef %format) #0 !dbg !5128 {
entry:
  %out_doc.addr = alloca ptr, align 8
  %doc_txt_ptr.addr = alloca ptr, align 8
  %doc_txt_len.addr = alloca ptr, align 8
  %txt_encoding.addr = alloca ptr, align 8
  %format.addr = alloca i32, align 4
  %ctxt = alloca %struct._xmlSaveCtxt, align 8
  %dummy = alloca i32, align 4
  %out_buff = alloca ptr, align 8
  %conv_hdlr = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %out_doc, ptr %out_doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %out_doc.addr, metadata !5133, metadata !DIExpression()), !dbg !5142
  store ptr %doc_txt_ptr, ptr %doc_txt_ptr.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc_txt_ptr.addr, metadata !5134, metadata !DIExpression()), !dbg !5143
  store ptr %doc_txt_len, ptr %doc_txt_len.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc_txt_len.addr, metadata !5135, metadata !DIExpression()), !dbg !5144
  store ptr %txt_encoding, ptr %txt_encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %txt_encoding.addr, metadata !5136, metadata !DIExpression()), !dbg !5145
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !5137, metadata !DIExpression()), !dbg !5146
  call void @llvm.lifetime.start.p0(i64 152, ptr %ctxt) #6, !dbg !5147
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !5138, metadata !DIExpression()), !dbg !5148
  call void @llvm.lifetime.start.p0(i64 4, ptr %dummy) #6, !dbg !5149
  tail call void @llvm.dbg.declare(metadata ptr %dummy, metadata !5139, metadata !DIExpression()), !dbg !5150
  store i32 0, ptr %dummy, align 4, !dbg !5150, !tbaa !1775
  call void @llvm.lifetime.start.p0(i64 8, ptr %out_buff) #6, !dbg !5151
  tail call void @llvm.dbg.declare(metadata ptr %out_buff, metadata !5140, metadata !DIExpression()), !dbg !5152
  store ptr null, ptr %out_buff, align 8, !dbg !5152, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %conv_hdlr) #6, !dbg !5153
  tail call void @llvm.dbg.declare(metadata ptr %conv_hdlr, metadata !5141, metadata !DIExpression()), !dbg !5154
  store ptr null, ptr %conv_hdlr, align 8, !dbg !5154, !tbaa !1471
  %0 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5155, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !5157
  br i1 %cmp, label %if.then, label %if.end, !dbg !5158

if.then:                                          ; preds = %entry
  store ptr %dummy, ptr %doc_txt_len.addr, align 8, !dbg !5159, !tbaa !1471
  br label %if.end, !dbg !5161

if.end:                                           ; preds = %if.then, %entry
  %1 = load ptr, ptr %doc_txt_ptr.addr, align 8, !dbg !5162, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !5164
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5165

if.then2:                                         ; preds = %if.end
  %2 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5166, !tbaa !1471
  store i32 0, ptr %2, align 4, !dbg !5168, !tbaa !1775
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5169

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %doc_txt_ptr.addr, align 8, !dbg !5170, !tbaa !1471
  store ptr null, ptr %3, align 8, !dbg !5171, !tbaa !1471
  %4 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5172, !tbaa !1471
  store i32 0, ptr %4, align 4, !dbg !5173, !tbaa !1775
  %5 = load ptr, ptr %out_doc.addr, align 8, !dbg !5174, !tbaa !1471
  %cmp4 = icmp eq ptr %5, null, !dbg !5176
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5177

if.then5:                                         ; preds = %if.end3
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5178

if.end6:                                          ; preds = %if.end3
  %6 = load ptr, ptr %txt_encoding.addr, align 8, !dbg !5180, !tbaa !1471
  %cmp7 = icmp eq ptr %6, null, !dbg !5182
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5183

if.then8:                                         ; preds = %if.end6
  %7 = load ptr, ptr %out_doc.addr, align 8, !dbg !5184, !tbaa !1471
  %encoding = getelementptr inbounds %struct._xmlDoc, ptr %7, i32 0, i32 15, !dbg !5185
  %8 = load ptr, ptr %encoding, align 8, !dbg !5185, !tbaa !2175
  store ptr %8, ptr %txt_encoding.addr, align 8, !dbg !5186, !tbaa !1471
  br label %if.end9, !dbg !5187

if.end9:                                          ; preds = %if.then8, %if.end6
  %9 = load ptr, ptr %txt_encoding.addr, align 8, !dbg !5188, !tbaa !1471
  %cmp10 = icmp ne ptr %9, null, !dbg !5190
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !5191

if.then11:                                        ; preds = %if.end9
  %10 = load ptr, ptr %txt_encoding.addr, align 8, !dbg !5192, !tbaa !1471
  %call = call ptr @xmlFindCharEncodingHandler__internal_alias(ptr noundef %10), !dbg !5194
  store ptr %call, ptr %conv_hdlr, align 8, !dbg !5195, !tbaa !1471
  %11 = load ptr, ptr %conv_hdlr, align 8, !dbg !5196, !tbaa !1471
  %cmp12 = icmp eq ptr %11, null, !dbg !5198
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !5199

if.then13:                                        ; preds = %if.then11
  %12 = load ptr, ptr %out_doc.addr, align 8, !dbg !5200, !tbaa !1471
  %13 = load ptr, ptr %txt_encoding.addr, align 8, !dbg !5202, !tbaa !1471
  call void @xmlSaveErr(i32 noundef 1403, ptr noundef %12, ptr noundef %13), !dbg !5203
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5204

if.end14:                                         ; preds = %if.then11
  br label %if.end15, !dbg !5205

if.end15:                                         ; preds = %if.end14, %if.end9
  %14 = load ptr, ptr %conv_hdlr, align 8, !dbg !5206, !tbaa !1471
  %call16 = call ptr @xmlAllocOutputBuffer__internal_alias(ptr noundef %14), !dbg !5208
  store ptr %call16, ptr %out_buff, align 8, !dbg !5209, !tbaa !1471
  %cmp17 = icmp eq ptr %call16, null, !dbg !5210
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5211

if.then18:                                        ; preds = %if.end15
  call void @xmlSaveErrMemory(ptr noundef @.str.13), !dbg !5212
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5214

if.end19:                                         ; preds = %if.end15
  call void @llvm.memset.p0.i64(ptr align 8 %ctxt, i8 0, i64 152, i1 false), !dbg !5215
  %15 = load ptr, ptr %out_buff, align 8, !dbg !5216, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 6, !dbg !5217
  store ptr %15, ptr %buf, align 8, !dbg !5218, !tbaa !1798
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 8, !dbg !5219
  store i32 0, ptr %level, align 4, !dbg !5220, !tbaa !2512
  %16 = load i32, ptr %format.addr, align 4, !dbg !5221, !tbaa !1775
  %tobool = icmp ne i32 %16, 0, !dbg !5221
  %17 = zext i1 %tobool to i64, !dbg !5221
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !5221
  %format20 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 9, !dbg !5222
  store i32 %cond, ptr %format20, align 8, !dbg !5223, !tbaa !1732
  %18 = load ptr, ptr %txt_encoding.addr, align 8, !dbg !5224, !tbaa !1471
  %encoding21 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 4, !dbg !5225
  store ptr %18, ptr %encoding21, align 8, !dbg !5226, !tbaa !1859
  call void @xmlSaveCtxtInit(ptr noundef %ctxt), !dbg !5227
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 7, !dbg !5228
  %19 = load i32, ptr %options, align 8, !dbg !5229, !tbaa !1870
  %or = or i32 %19, 32, !dbg !5229
  store i32 %or, ptr %options, align 8, !dbg !5229, !tbaa !1870
  %20 = load ptr, ptr %out_doc.addr, align 8, !dbg !5230, !tbaa !1471
  %call22 = call i32 @xmlDocContentDumpOutput(ptr noundef %ctxt, ptr noundef %20), !dbg !5231
  %21 = load ptr, ptr %out_buff, align 8, !dbg !5232, !tbaa !1471
  %call23 = call i32 @xmlOutputBufferFlush__internal_alias(ptr noundef %21), !dbg !5233
  %22 = load ptr, ptr %out_buff, align 8, !dbg !5234, !tbaa !1471
  %conv = getelementptr inbounds %struct._xmlOutputBuffer, ptr %22, i32 0, i32 5, !dbg !5236
  %23 = load ptr, ptr %conv, align 8, !dbg !5236, !tbaa !2290
  %cmp24 = icmp ne ptr %23, null, !dbg !5237
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !5238

if.then26:                                        ; preds = %if.end19
  %24 = load ptr, ptr %out_buff, align 8, !dbg !5239, !tbaa !1471
  %conv27 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %24, i32 0, i32 5, !dbg !5241
  %25 = load ptr, ptr %conv27, align 8, !dbg !5241, !tbaa !2290
  %call28 = call i64 @xmlBufUse__internal_alias(ptr noundef %25), !dbg !5242
  %conv29 = trunc i64 %call28 to i32, !dbg !5242
  %26 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5243, !tbaa !1471
  store i32 %conv29, ptr %26, align 4, !dbg !5244, !tbaa !1775
  %27 = load ptr, ptr %out_buff, align 8, !dbg !5245, !tbaa !1471
  %conv30 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %27, i32 0, i32 5, !dbg !5246
  %28 = load ptr, ptr %conv30, align 8, !dbg !5246, !tbaa !2290
  %call31 = call ptr @xmlBufContent__internal_alias(ptr noundef %28), !dbg !5247
  %29 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5248, !tbaa !1471
  %30 = load i32, ptr %29, align 4, !dbg !5249, !tbaa !1775
  %call32 = call ptr @xmlStrndup__internal_alias(ptr noundef %call31, i32 noundef %30), !dbg !5250
  %31 = load ptr, ptr %doc_txt_ptr.addr, align 8, !dbg !5251, !tbaa !1471
  store ptr %call32, ptr %31, align 8, !dbg !5252, !tbaa !1471
  br label %if.end38, !dbg !5253

if.else:                                          ; preds = %if.end19
  %32 = load ptr, ptr %out_buff, align 8, !dbg !5254, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %32, i32 0, i32 4, !dbg !5256
  %33 = load ptr, ptr %buffer, align 8, !dbg !5256, !tbaa !1760
  %call33 = call i64 @xmlBufUse__internal_alias(ptr noundef %33), !dbg !5257
  %conv34 = trunc i64 %call33 to i32, !dbg !5257
  %34 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5258, !tbaa !1471
  store i32 %conv34, ptr %34, align 4, !dbg !5259, !tbaa !1775
  %35 = load ptr, ptr %out_buff, align 8, !dbg !5260, !tbaa !1471
  %buffer35 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %35, i32 0, i32 4, !dbg !5261
  %36 = load ptr, ptr %buffer35, align 8, !dbg !5261, !tbaa !1760
  %call36 = call ptr @xmlBufContent__internal_alias(ptr noundef %36), !dbg !5262
  %37 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5263, !tbaa !1471
  %38 = load i32, ptr %37, align 4, !dbg !5264, !tbaa !1775
  %call37 = call ptr @xmlStrndup__internal_alias(ptr noundef %call36, i32 noundef %38), !dbg !5265
  %39 = load ptr, ptr %doc_txt_ptr.addr, align 8, !dbg !5266, !tbaa !1471
  store ptr %call37, ptr %39, align 8, !dbg !5267, !tbaa !1471
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then26
  %40 = load ptr, ptr %out_buff, align 8, !dbg !5268, !tbaa !1471
  %call39 = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %40), !dbg !5269
  %41 = load ptr, ptr %doc_txt_ptr.addr, align 8, !dbg !5270, !tbaa !1471
  %42 = load ptr, ptr %41, align 8, !dbg !5272, !tbaa !1471
  %cmp40 = icmp eq ptr %42, null, !dbg !5273
  br i1 %cmp40, label %land.lhs.true, label %if.end45, !dbg !5274

land.lhs.true:                                    ; preds = %if.end38
  %43 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5275, !tbaa !1471
  %44 = load i32, ptr %43, align 4, !dbg !5276, !tbaa !1775
  %cmp42 = icmp sgt i32 %44, 0, !dbg !5277
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !5278

if.then44:                                        ; preds = %land.lhs.true
  %45 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5279, !tbaa !1471
  store i32 0, ptr %45, align 4, !dbg !5281, !tbaa !1775
  call void @xmlSaveErrMemory(ptr noundef @.str.15), !dbg !5282
  br label %if.end45, !dbg !5283

if.end45:                                         ; preds = %if.then44, %land.lhs.true, %if.end38
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5284

cleanup:                                          ; preds = %if.end45, %if.then18, %if.then13, %if.then5, %if.then2
  call void @llvm.lifetime.end.p0(i64 8, ptr %conv_hdlr) #6, !dbg !5285
  call void @llvm.lifetime.end.p0(i64 8, ptr %out_buff) #6, !dbg !5285
  call void @llvm.lifetime.end.p0(i64 4, ptr %dummy) #6, !dbg !5285
  call void @llvm.lifetime.end.p0(i64 152, ptr %ctxt) #6, !dbg !5285
  ret void, !dbg !5285
}

declare !dbg !5286 hidden ptr @xmlAllocOutputBuffer__internal_alias(ptr noundef) #1

declare !dbg !5289 hidden ptr @xmlStrndup__internal_alias(ptr noundef, i32 noundef) #1

declare !dbg !5292 hidden ptr @xmlBufContent__internal_alias(ptr noundef) #1

; Function Attrs: nounwind uwtable
define hidden void @xmlDocDumpMemory__internal_alias(ptr noundef %cur, ptr noundef %mem, ptr noundef %size) #0 !dbg !5297 {
entry:
  %cur.addr = alloca ptr, align 8
  %mem.addr = alloca ptr, align 8
  %size.addr = alloca ptr, align 8
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5301, metadata !DIExpression()), !dbg !5304
  store ptr %mem, ptr %mem.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %mem.addr, metadata !5302, metadata !DIExpression()), !dbg !5305
  store ptr %size, ptr %size.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !5303, metadata !DIExpression()), !dbg !5306
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !5307, !tbaa !1471
  %1 = load ptr, ptr %mem.addr, align 8, !dbg !5308, !tbaa !1471
  %2 = load ptr, ptr %size.addr, align 8, !dbg !5309, !tbaa !1471
  call void @xmlDocDumpFormatMemoryEnc__internal_alias(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef null, i32 noundef 0), !dbg !5310
  ret void, !dbg !5311
}

; Function Attrs: nounwind uwtable
define hidden void @xmlDocDumpFormatMemory__internal_alias(ptr noundef %cur, ptr noundef %mem, ptr noundef %size, i32 noundef %format) #0 !dbg !5312 {
entry:
  %cur.addr = alloca ptr, align 8
  %mem.addr = alloca ptr, align 8
  %size.addr = alloca ptr, align 8
  %format.addr = alloca i32, align 4
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5316, metadata !DIExpression()), !dbg !5320
  store ptr %mem, ptr %mem.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %mem.addr, metadata !5317, metadata !DIExpression()), !dbg !5321
  store ptr %size, ptr %size.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !5318, metadata !DIExpression()), !dbg !5322
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !5319, metadata !DIExpression()), !dbg !5323
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !5324, !tbaa !1471
  %1 = load ptr, ptr %mem.addr, align 8, !dbg !5325, !tbaa !1471
  %2 = load ptr, ptr %size.addr, align 8, !dbg !5326, !tbaa !1471
  %3 = load i32, ptr %format.addr, align 4, !dbg !5327, !tbaa !1775
  call void @xmlDocDumpFormatMemoryEnc__internal_alias(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef null, i32 noundef %3), !dbg !5328
  ret void, !dbg !5329
}

; Function Attrs: nounwind uwtable
define hidden void @xmlDocDumpMemoryEnc__internal_alias(ptr noundef %out_doc, ptr noundef %doc_txt_ptr, ptr noundef %doc_txt_len, ptr noundef %txt_encoding) #0 !dbg !5330 {
entry:
  %out_doc.addr = alloca ptr, align 8
  %doc_txt_ptr.addr = alloca ptr, align 8
  %doc_txt_len.addr = alloca ptr, align 8
  %txt_encoding.addr = alloca ptr, align 8
  store ptr %out_doc, ptr %out_doc.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %out_doc.addr, metadata !5334, metadata !DIExpression()), !dbg !5338
  store ptr %doc_txt_ptr, ptr %doc_txt_ptr.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc_txt_ptr.addr, metadata !5335, metadata !DIExpression()), !dbg !5339
  store ptr %doc_txt_len, ptr %doc_txt_len.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %doc_txt_len.addr, metadata !5336, metadata !DIExpression()), !dbg !5340
  store ptr %txt_encoding, ptr %txt_encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %txt_encoding.addr, metadata !5337, metadata !DIExpression()), !dbg !5341
  %0 = load ptr, ptr %out_doc.addr, align 8, !dbg !5342, !tbaa !1471
  %1 = load ptr, ptr %doc_txt_ptr.addr, align 8, !dbg !5343, !tbaa !1471
  %2 = load ptr, ptr %doc_txt_len.addr, align 8, !dbg !5344, !tbaa !1471
  %3 = load ptr, ptr %txt_encoding.addr, align 8, !dbg !5345, !tbaa !1471
  call void @xmlDocDumpFormatMemoryEnc__internal_alias(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef 0), !dbg !5346
  ret void, !dbg !5347
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlDocFormatDump__internal_alias(ptr noundef %f, ptr noundef %cur, i32 noundef %format) #0 !dbg !5348 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %format.addr = alloca i32, align 4
  %ctxt = alloca %struct._xmlSaveCtxt, align 8
  %buf = alloca ptr, align 8
  %encoding = alloca ptr, align 8
  %handler = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %f, ptr %f.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !5352, metadata !DIExpression()), !dbg !5360
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5353, metadata !DIExpression()), !dbg !5361
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !5354, metadata !DIExpression()), !dbg !5362
  call void @llvm.lifetime.start.p0(i64 152, ptr %ctxt) #6, !dbg !5363
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !5355, metadata !DIExpression()), !dbg !5364
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !5365
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !5356, metadata !DIExpression()), !dbg !5366
  call void @llvm.lifetime.start.p0(i64 8, ptr %encoding) #6, !dbg !5367
  tail call void @llvm.dbg.declare(metadata ptr %encoding, metadata !5357, metadata !DIExpression()), !dbg !5368
  call void @llvm.lifetime.start.p0(i64 8, ptr %handler) #6, !dbg !5369
  tail call void @llvm.dbg.declare(metadata ptr %handler, metadata !5358, metadata !DIExpression()), !dbg !5370
  store ptr null, ptr %handler, align 8, !dbg !5370, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #6, !dbg !5371
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !5359, metadata !DIExpression()), !dbg !5372
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !5373, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !5375
  br i1 %cmp, label %if.then, label %if.end, !dbg !5376

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !5377
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5377

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !5379, !tbaa !1471
  %encoding1 = getelementptr inbounds %struct._xmlDoc, ptr %1, i32 0, i32 15, !dbg !5380
  %2 = load ptr, ptr %encoding1, align 8, !dbg !5380, !tbaa !2175
  store ptr %2, ptr %encoding, align 8, !dbg !5381, !tbaa !1471
  %3 = load ptr, ptr %encoding, align 8, !dbg !5382, !tbaa !1471
  %cmp2 = icmp ne ptr %3, null, !dbg !5384
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !5385

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr %encoding, align 8, !dbg !5386, !tbaa !1471
  %call = call ptr @xmlFindCharEncodingHandler__internal_alias(ptr noundef %4), !dbg !5388
  store ptr %call, ptr %handler, align 8, !dbg !5389, !tbaa !1471
  %5 = load ptr, ptr %handler, align 8, !dbg !5390, !tbaa !1471
  %cmp4 = icmp eq ptr %5, null, !dbg !5392
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !5393

if.then5:                                         ; preds = %if.then3
  %6 = load ptr, ptr @xmlFree, align 8, !dbg !5394, !tbaa !1471
  %7 = load ptr, ptr %cur.addr, align 8, !dbg !5396, !tbaa !1471
  %encoding6 = getelementptr inbounds %struct._xmlDoc, ptr %7, i32 0, i32 15, !dbg !5397
  %8 = load ptr, ptr %encoding6, align 8, !dbg !5397, !tbaa !2175
  call void %6(ptr noundef %8), !dbg !5394
  %9 = load ptr, ptr %cur.addr, align 8, !dbg !5398, !tbaa !1471
  %encoding7 = getelementptr inbounds %struct._xmlDoc, ptr %9, i32 0, i32 15, !dbg !5399
  store ptr null, ptr %encoding7, align 8, !dbg !5400, !tbaa !2175
  store ptr null, ptr %encoding, align 8, !dbg !5401, !tbaa !1471
  br label %if.end8, !dbg !5402

if.end8:                                          ; preds = %if.then5, %if.then3
  br label %if.end9, !dbg !5403

if.end9:                                          ; preds = %if.end8, %if.end
  %10 = load ptr, ptr %f.addr, align 8, !dbg !5404, !tbaa !1471
  %11 = load ptr, ptr %handler, align 8, !dbg !5405, !tbaa !1471
  %call10 = call ptr @xmlOutputBufferCreateFile__internal_alias(ptr noundef %10, ptr noundef %11), !dbg !5406
  store ptr %call10, ptr %buf, align 8, !dbg !5407, !tbaa !1471
  %12 = load ptr, ptr %buf, align 8, !dbg !5408, !tbaa !1471
  %cmp11 = icmp eq ptr %12, null, !dbg !5410
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !5411

if.then12:                                        ; preds = %if.end9
  store i32 -1, ptr %retval, align 4, !dbg !5412
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5412

if.end13:                                         ; preds = %if.end9
  call void @llvm.memset.p0.i64(ptr align 8 %ctxt, i8 0, i64 152, i1 false), !dbg !5413
  %13 = load ptr, ptr %buf, align 8, !dbg !5414, !tbaa !1471
  %buf14 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 6, !dbg !5415
  store ptr %13, ptr %buf14, align 8, !dbg !5416, !tbaa !1798
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 8, !dbg !5417
  store i32 0, ptr %level, align 4, !dbg !5418, !tbaa !2512
  %14 = load i32, ptr %format.addr, align 4, !dbg !5419, !tbaa !1775
  %tobool = icmp ne i32 %14, 0, !dbg !5419
  %15 = zext i1 %tobool to i64, !dbg !5419
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !5419
  %format15 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 9, !dbg !5420
  store i32 %cond, ptr %format15, align 8, !dbg !5421, !tbaa !1732
  %16 = load ptr, ptr %encoding, align 8, !dbg !5422, !tbaa !1471
  %encoding16 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 4, !dbg !5423
  store ptr %16, ptr %encoding16, align 8, !dbg !5424, !tbaa !1859
  call void @xmlSaveCtxtInit(ptr noundef %ctxt), !dbg !5425
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 7, !dbg !5426
  %17 = load i32, ptr %options, align 8, !dbg !5427, !tbaa !1870
  %or = or i32 %17, 32, !dbg !5427
  store i32 %or, ptr %options, align 8, !dbg !5427, !tbaa !1870
  %18 = load ptr, ptr %cur.addr, align 8, !dbg !5428, !tbaa !1471
  %call17 = call i32 @xmlDocContentDumpOutput(ptr noundef %ctxt, ptr noundef %18), !dbg !5429
  %19 = load ptr, ptr %buf, align 8, !dbg !5430, !tbaa !1471
  %call18 = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %19), !dbg !5431
  store i32 %call18, ptr %ret, align 4, !dbg !5432, !tbaa !1775
  %20 = load i32, ptr %ret, align 4, !dbg !5433, !tbaa !1775
  store i32 %20, ptr %retval, align 4, !dbg !5434
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5434

cleanup:                                          ; preds = %if.end13, %if.then12, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #6, !dbg !5435
  call void @llvm.lifetime.end.p0(i64 8, ptr %handler) #6, !dbg !5435
  call void @llvm.lifetime.end.p0(i64 8, ptr %encoding) #6, !dbg !5435
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !5435
  call void @llvm.lifetime.end.p0(i64 152, ptr %ctxt) #6, !dbg !5435
  %21 = load i32, ptr %retval, align 4, !dbg !5435
  ret i32 %21, !dbg !5435
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlDocDump__internal_alias(ptr noundef %f, ptr noundef %cur) #0 !dbg !5436 {
entry:
  %f.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  store ptr %f, ptr %f.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !5440, metadata !DIExpression()), !dbg !5442
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5441, metadata !DIExpression()), !dbg !5443
  %0 = load ptr, ptr %f.addr, align 8, !dbg !5444, !tbaa !1471
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !5445, !tbaa !1471
  %call = call i32 @xmlDocFormatDump__internal_alias(ptr noundef %0, ptr noundef %1, i32 noundef 0), !dbg !5446
  ret i32 %call, !dbg !5447
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveFileTo__internal_alias(ptr noundef %buf, ptr noundef %cur, ptr noundef %encoding) #0 !dbg !5448 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %ctxt = alloca %struct._xmlSaveCtxt, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !5452, metadata !DIExpression()), !dbg !5457
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5453, metadata !DIExpression()), !dbg !5458
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !5454, metadata !DIExpression()), !dbg !5459
  call void @llvm.lifetime.start.p0(i64 152, ptr %ctxt) #6, !dbg !5460
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !5455, metadata !DIExpression()), !dbg !5461
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #6, !dbg !5462
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !5456, metadata !DIExpression()), !dbg !5463
  %0 = load ptr, ptr %buf.addr, align 8, !dbg !5464, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !5466
  br i1 %cmp, label %if.then, label %if.end, !dbg !5467

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !5468
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5468

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !5469, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !5471
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5472

if.then2:                                         ; preds = %if.end
  %2 = load ptr, ptr %buf.addr, align 8, !dbg !5473, !tbaa !1471
  %call = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %2), !dbg !5475
  store i32 -1, ptr %retval, align 4, !dbg !5476
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5476

if.end3:                                          ; preds = %if.end
  call void @llvm.memset.p0.i64(ptr align 8 %ctxt, i8 0, i64 152, i1 false), !dbg !5477
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !5478, !tbaa !1471
  %buf4 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 6, !dbg !5479
  store ptr %3, ptr %buf4, align 8, !dbg !5480, !tbaa !1798
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 8, !dbg !5481
  store i32 0, ptr %level, align 4, !dbg !5482, !tbaa !2512
  %format = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 9, !dbg !5483
  store i32 0, ptr %format, align 8, !dbg !5484, !tbaa !1732
  %4 = load ptr, ptr %encoding.addr, align 8, !dbg !5485, !tbaa !1471
  %encoding5 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 4, !dbg !5486
  store ptr %4, ptr %encoding5, align 8, !dbg !5487, !tbaa !1859
  call void @xmlSaveCtxtInit(ptr noundef %ctxt), !dbg !5488
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 7, !dbg !5489
  %5 = load i32, ptr %options, align 8, !dbg !5490, !tbaa !1870
  %or = or i32 %5, 32, !dbg !5490
  store i32 %or, ptr %options, align 8, !dbg !5490, !tbaa !1870
  %6 = load ptr, ptr %cur.addr, align 8, !dbg !5491, !tbaa !1471
  %call6 = call i32 @xmlDocContentDumpOutput(ptr noundef %ctxt, ptr noundef %6), !dbg !5492
  %7 = load ptr, ptr %buf.addr, align 8, !dbg !5493, !tbaa !1471
  %call7 = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %7), !dbg !5494
  store i32 %call7, ptr %ret, align 4, !dbg !5495, !tbaa !1775
  %8 = load i32, ptr %ret, align 4, !dbg !5496, !tbaa !1775
  store i32 %8, ptr %retval, align 4, !dbg !5497
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5497

cleanup:                                          ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #6, !dbg !5498
  call void @llvm.lifetime.end.p0(i64 152, ptr %ctxt) #6, !dbg !5498
  %9 = load i32, ptr %retval, align 4, !dbg !5498
  ret i32 %9, !dbg !5498
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveFormatFileTo__internal_alias(ptr noundef %buf, ptr noundef %cur, ptr noundef %encoding, i32 noundef %format) #0 !dbg !5499 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %format.addr = alloca i32, align 4
  %ctxt = alloca %struct._xmlSaveCtxt, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !5503, metadata !DIExpression()), !dbg !5509
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5504, metadata !DIExpression()), !dbg !5510
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !5505, metadata !DIExpression()), !dbg !5511
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !5506, metadata !DIExpression()), !dbg !5512
  call void @llvm.lifetime.start.p0(i64 152, ptr %ctxt) #6, !dbg !5513
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !5507, metadata !DIExpression()), !dbg !5514
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #6, !dbg !5515
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !5508, metadata !DIExpression()), !dbg !5516
  %0 = load ptr, ptr %buf.addr, align 8, !dbg !5517, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !5519
  br i1 %cmp, label %if.then, label %if.end, !dbg !5520

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !5521
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5521

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !5522, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !5524
  br i1 %cmp1, label %if.then5, label %lor.lhs.false, !dbg !5525

lor.lhs.false:                                    ; preds = %if.end
  %2 = load ptr, ptr %cur.addr, align 8, !dbg !5526, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlDoc, ptr %2, i32 0, i32 1, !dbg !5527
  %3 = load i32, ptr %type, align 8, !dbg !5527, !tbaa !2206
  %cmp2 = icmp ne i32 %3, 9, !dbg !5528
  br i1 %cmp2, label %land.lhs.true, label %if.end6, !dbg !5529

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load ptr, ptr %cur.addr, align 8, !dbg !5530, !tbaa !1471
  %type3 = getelementptr inbounds %struct._xmlDoc, ptr %4, i32 0, i32 1, !dbg !5531
  %5 = load i32, ptr %type3, align 8, !dbg !5531, !tbaa !2206
  %cmp4 = icmp ne i32 %5, 13, !dbg !5532
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5533

if.then5:                                         ; preds = %land.lhs.true, %if.end
  %6 = load ptr, ptr %buf.addr, align 8, !dbg !5534, !tbaa !1471
  %call = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %6), !dbg !5536
  store i32 -1, ptr %retval, align 4, !dbg !5537
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5537

if.end6:                                          ; preds = %land.lhs.true, %lor.lhs.false
  call void @llvm.memset.p0.i64(ptr align 8 %ctxt, i8 0, i64 152, i1 false), !dbg !5538
  %7 = load ptr, ptr %buf.addr, align 8, !dbg !5539, !tbaa !1471
  %buf7 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 6, !dbg !5540
  store ptr %7, ptr %buf7, align 8, !dbg !5541, !tbaa !1798
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 8, !dbg !5542
  store i32 0, ptr %level, align 4, !dbg !5543, !tbaa !2512
  %8 = load i32, ptr %format.addr, align 4, !dbg !5544, !tbaa !1775
  %tobool = icmp ne i32 %8, 0, !dbg !5544
  %9 = zext i1 %tobool to i64, !dbg !5544
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !5544
  %format8 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 9, !dbg !5545
  store i32 %cond, ptr %format8, align 8, !dbg !5546, !tbaa !1732
  %10 = load ptr, ptr %encoding.addr, align 8, !dbg !5547, !tbaa !1471
  %encoding9 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 4, !dbg !5548
  store ptr %10, ptr %encoding9, align 8, !dbg !5549, !tbaa !1859
  call void @xmlSaveCtxtInit(ptr noundef %ctxt), !dbg !5550
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 7, !dbg !5551
  %11 = load i32, ptr %options, align 8, !dbg !5552, !tbaa !1870
  %or = or i32 %11, 32, !dbg !5552
  store i32 %or, ptr %options, align 8, !dbg !5552, !tbaa !1870
  %12 = load ptr, ptr %cur.addr, align 8, !dbg !5553, !tbaa !1471
  %call10 = call i32 @xmlDocContentDumpOutput(ptr noundef %ctxt, ptr noundef %12), !dbg !5554
  %13 = load ptr, ptr %buf.addr, align 8, !dbg !5555, !tbaa !1471
  %call11 = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %13), !dbg !5556
  store i32 %call11, ptr %ret, align 4, !dbg !5557, !tbaa !1775
  %14 = load i32, ptr %ret, align 4, !dbg !5558, !tbaa !1775
  store i32 %14, ptr %retval, align 4, !dbg !5559
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5559

cleanup:                                          ; preds = %if.end6, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #6, !dbg !5560
  call void @llvm.lifetime.end.p0(i64 152, ptr %ctxt) #6, !dbg !5560
  %15 = load i32, ptr %retval, align 4, !dbg !5560
  ret i32 %15, !dbg !5560
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveFormatFileEnc__internal_alias(ptr noundef %filename, ptr noundef %cur, ptr noundef %encoding, i32 noundef %format) #0 !dbg !5561 {
entry:
  %retval = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %format.addr = alloca i32, align 4
  %ctxt = alloca %struct._xmlSaveCtxt, align 8
  %buf = alloca ptr, align 8
  %handler = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !5565, metadata !DIExpression()), !dbg !5573
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5566, metadata !DIExpression()), !dbg !5574
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !5567, metadata !DIExpression()), !dbg !5575
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !5568, metadata !DIExpression()), !dbg !5576
  call void @llvm.lifetime.start.p0(i64 152, ptr %ctxt) #6, !dbg !5577
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !5569, metadata !DIExpression()), !dbg !5578
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !5579
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !5570, metadata !DIExpression()), !dbg !5580
  call void @llvm.lifetime.start.p0(i64 8, ptr %handler) #6, !dbg !5581
  tail call void @llvm.dbg.declare(metadata ptr %handler, metadata !5571, metadata !DIExpression()), !dbg !5582
  store ptr null, ptr %handler, align 8, !dbg !5582, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #6, !dbg !5583
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !5572, metadata !DIExpression()), !dbg !5584
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !5585, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !5587
  br i1 %cmp, label %if.then, label %if.end, !dbg !5588

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !5589
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5589

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %encoding.addr, align 8, !dbg !5590, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !5592
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !5593

if.then2:                                         ; preds = %if.end
  %2 = load ptr, ptr %cur.addr, align 8, !dbg !5594, !tbaa !1471
  %encoding3 = getelementptr inbounds %struct._xmlDoc, ptr %2, i32 0, i32 15, !dbg !5595
  %3 = load ptr, ptr %encoding3, align 8, !dbg !5595, !tbaa !2175
  store ptr %3, ptr %encoding.addr, align 8, !dbg !5596, !tbaa !1471
  br label %if.end4, !dbg !5597

if.end4:                                          ; preds = %if.then2, %if.end
  %4 = load ptr, ptr %encoding.addr, align 8, !dbg !5598, !tbaa !1471
  %cmp5 = icmp ne ptr %4, null, !dbg !5600
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !5601

if.then6:                                         ; preds = %if.end4
  %5 = load ptr, ptr %encoding.addr, align 8, !dbg !5602, !tbaa !1471
  %call = call ptr @xmlFindCharEncodingHandler__internal_alias(ptr noundef %5), !dbg !5604
  store ptr %call, ptr %handler, align 8, !dbg !5605, !tbaa !1471
  %6 = load ptr, ptr %handler, align 8, !dbg !5606, !tbaa !1471
  %cmp7 = icmp eq ptr %6, null, !dbg !5608
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5609

if.then8:                                         ; preds = %if.then6
  store i32 -1, ptr %retval, align 4, !dbg !5610
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5610

if.end9:                                          ; preds = %if.then6
  br label %if.end10, !dbg !5611

if.end10:                                         ; preds = %if.end9, %if.end4
  %7 = load ptr, ptr %cur.addr, align 8, !dbg !5612, !tbaa !1471
  %compression = getelementptr inbounds %struct._xmlDoc, ptr %7, i32 0, i32 9, !dbg !5614
  %8 = load i32, ptr %compression, align 8, !dbg !5614, !tbaa !5615
  %cmp11 = icmp slt i32 %8, 0, !dbg !5616
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !5617

if.then12:                                        ; preds = %if.end10
  %call13 = call i32 @xmlGetCompressMode__internal_alias(), !dbg !5618
  %9 = load ptr, ptr %cur.addr, align 8, !dbg !5619, !tbaa !1471
  %compression14 = getelementptr inbounds %struct._xmlDoc, ptr %9, i32 0, i32 9, !dbg !5620
  store i32 %call13, ptr %compression14, align 8, !dbg !5621, !tbaa !5615
  br label %if.end15, !dbg !5619

if.end15:                                         ; preds = %if.then12, %if.end10
  %10 = load ptr, ptr %filename.addr, align 8, !dbg !5622, !tbaa !1471
  %11 = load ptr, ptr %handler, align 8, !dbg !5623, !tbaa !1471
  %12 = load ptr, ptr %cur.addr, align 8, !dbg !5624, !tbaa !1471
  %compression16 = getelementptr inbounds %struct._xmlDoc, ptr %12, i32 0, i32 9, !dbg !5625
  %13 = load i32, ptr %compression16, align 8, !dbg !5625, !tbaa !5615
  %call17 = call ptr @xmlOutputBufferCreateFilename__internal_alias(ptr noundef %10, ptr noundef %11, i32 noundef %13), !dbg !5626
  store ptr %call17, ptr %buf, align 8, !dbg !5627, !tbaa !1471
  %14 = load ptr, ptr %buf, align 8, !dbg !5628, !tbaa !1471
  %cmp18 = icmp eq ptr %14, null, !dbg !5630
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5631

if.then19:                                        ; preds = %if.end15
  store i32 -1, ptr %retval, align 4, !dbg !5632
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5632

if.end20:                                         ; preds = %if.end15
  call void @llvm.memset.p0.i64(ptr align 8 %ctxt, i8 0, i64 152, i1 false), !dbg !5633
  %15 = load ptr, ptr %buf, align 8, !dbg !5634, !tbaa !1471
  %buf21 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 6, !dbg !5635
  store ptr %15, ptr %buf21, align 8, !dbg !5636, !tbaa !1798
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 8, !dbg !5637
  store i32 0, ptr %level, align 4, !dbg !5638, !tbaa !2512
  %16 = load i32, ptr %format.addr, align 4, !dbg !5639, !tbaa !1775
  %tobool = icmp ne i32 %16, 0, !dbg !5639
  %17 = zext i1 %tobool to i64, !dbg !5639
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !5639
  %format22 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 9, !dbg !5640
  store i32 %cond, ptr %format22, align 8, !dbg !5641, !tbaa !1732
  %18 = load ptr, ptr %encoding.addr, align 8, !dbg !5642, !tbaa !1471
  %encoding23 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 4, !dbg !5643
  store ptr %18, ptr %encoding23, align 8, !dbg !5644, !tbaa !1859
  call void @xmlSaveCtxtInit(ptr noundef %ctxt), !dbg !5645
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %ctxt, i32 0, i32 7, !dbg !5646
  %19 = load i32, ptr %options, align 8, !dbg !5647, !tbaa !1870
  %or = or i32 %19, 32, !dbg !5647
  store i32 %or, ptr %options, align 8, !dbg !5647, !tbaa !1870
  %20 = load ptr, ptr %cur.addr, align 8, !dbg !5648, !tbaa !1471
  %call24 = call i32 @xmlDocContentDumpOutput(ptr noundef %ctxt, ptr noundef %20), !dbg !5649
  %21 = load ptr, ptr %buf, align 8, !dbg !5650, !tbaa !1471
  %call25 = call i32 @xmlOutputBufferClose__internal_alias(ptr noundef %21), !dbg !5651
  store i32 %call25, ptr %ret, align 4, !dbg !5652, !tbaa !1775
  %22 = load i32, ptr %ret, align 4, !dbg !5653, !tbaa !1775
  store i32 %22, ptr %retval, align 4, !dbg !5654
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5654

cleanup:                                          ; preds = %if.end20, %if.then19, %if.then8, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #6, !dbg !5655
  call void @llvm.lifetime.end.p0(i64 8, ptr %handler) #6, !dbg !5655
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !5655
  call void @llvm.lifetime.end.p0(i64 152, ptr %ctxt) #6, !dbg !5655
  %23 = load i32, ptr %retval, align 4, !dbg !5655
  ret i32 %23, !dbg !5655
}

declare !dbg !5656 hidden i32 @xmlGetCompressMode__internal_alias() #1

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveFileEnc__internal_alias(ptr noundef %filename, ptr noundef %cur, ptr noundef %encoding) #0 !dbg !5659 {
entry:
  %filename.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !5663, metadata !DIExpression()), !dbg !5666
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5664, metadata !DIExpression()), !dbg !5667
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !5665, metadata !DIExpression()), !dbg !5668
  %0 = load ptr, ptr %filename.addr, align 8, !dbg !5669, !tbaa !1471
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !5670, !tbaa !1471
  %2 = load ptr, ptr %encoding.addr, align 8, !dbg !5671, !tbaa !1471
  %call = call i32 @xmlSaveFormatFileEnc__internal_alias(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef 0), !dbg !5672
  ret i32 %call, !dbg !5673
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveFormatFile__internal_alias(ptr noundef %filename, ptr noundef %cur, i32 noundef %format) #0 !dbg !5674 {
entry:
  %filename.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %format.addr = alloca i32, align 4
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !5678, metadata !DIExpression()), !dbg !5681
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5679, metadata !DIExpression()), !dbg !5682
  store i32 %format, ptr %format.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %format.addr, metadata !5680, metadata !DIExpression()), !dbg !5683
  %0 = load ptr, ptr %filename.addr, align 8, !dbg !5684, !tbaa !1471
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !5685, !tbaa !1471
  %2 = load i32, ptr %format.addr, align 4, !dbg !5686, !tbaa !1775
  %call = call i32 @xmlSaveFormatFileEnc__internal_alias(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %2), !dbg !5687
  ret i32 %call, !dbg !5688
}

; Function Attrs: nounwind uwtable
define hidden i32 @xmlSaveFile__internal_alias(ptr noundef %filename, ptr noundef %cur) #0 !dbg !5689 {
entry:
  %filename.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !5693, metadata !DIExpression()), !dbg !5695
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !5694, metadata !DIExpression()), !dbg !5696
  %0 = load ptr, ptr %filename.addr, align 8, !dbg !5697, !tbaa !1471
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !5698, !tbaa !1471
  %call = call i32 @xmlSaveFormatFileEnc__internal_alias(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef 0), !dbg !5699
  ret i32 %call, !dbg !5700
}

; Function Attrs: nounwind uwtable
define internal void @xmlOutputBufferWriteWSNonSig(ptr noundef %ctxt, i32 noundef %extra) #0 !dbg !5701 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %extra.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !5705, metadata !DIExpression()), !dbg !5708
  store i32 %extra, ptr %extra.addr, align 4, !tbaa !1775
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !5706, metadata !DIExpression()), !dbg !5709
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6, !dbg !5710
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5707, metadata !DIExpression()), !dbg !5711
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !5712, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !5714
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5715

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !5716, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !5717
  %2 = load ptr, ptr %buf, align 8, !dbg !5717, !tbaa !1798
  %cmp1 = icmp eq ptr %2, null, !dbg !5718
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5719

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5720

if.end:                                           ; preds = %lor.lhs.false
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !5721, !tbaa !1471
  %buf2 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %3, i32 0, i32 6, !dbg !5722
  %4 = load ptr, ptr %buf2, align 8, !dbg !5722, !tbaa !1798
  %call = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %4, i32 noundef 1, ptr noundef @.str.21), !dbg !5723
  store i32 0, ptr %i, align 4, !dbg !5724, !tbaa !1775
  br label %for.cond, !dbg !5726

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, ptr %i, align 4, !dbg !5727, !tbaa !1775
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !5729, !tbaa !1471
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %6, i32 0, i32 8, !dbg !5730
  %7 = load i32, ptr %level, align 4, !dbg !5730, !tbaa !2512
  %8 = load i32, ptr %extra.addr, align 4, !dbg !5731, !tbaa !1775
  %add = add nsw i32 %7, %8, !dbg !5732
  %cmp3 = icmp slt i32 %5, %add, !dbg !5733
  br i1 %cmp3, label %for.body, label %for.end, !dbg !5734

for.body:                                         ; preds = %for.cond
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !5735, !tbaa !1471
  %buf4 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %9, i32 0, i32 6, !dbg !5737
  %10 = load ptr, ptr %buf4, align 8, !dbg !5737, !tbaa !1798
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !5738, !tbaa !1471
  %indent_size = getelementptr inbounds %struct._xmlSaveCtxt, ptr %11, i32 0, i32 12, !dbg !5739
  %12 = load i32, ptr %indent_size, align 8, !dbg !5739, !tbaa !3152
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !5740, !tbaa !1471
  %level5 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %13, i32 0, i32 8, !dbg !5741
  %14 = load i32, ptr %level5, align 4, !dbg !5741, !tbaa !2512
  %15 = load i32, ptr %extra.addr, align 4, !dbg !5742, !tbaa !1775
  %add6 = add nsw i32 %14, %15, !dbg !5743
  %16 = load i32, ptr %i, align 4, !dbg !5744, !tbaa !1775
  %sub = sub nsw i32 %add6, %16, !dbg !5745
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !5746, !tbaa !1471
  %indent_nr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %17, i32 0, i32 11, !dbg !5747
  %18 = load i32, ptr %indent_nr, align 4, !dbg !5747, !tbaa !3157
  %cmp7 = icmp sgt i32 %sub, %18, !dbg !5748
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5749

cond.true:                                        ; preds = %for.body
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !5750, !tbaa !1471
  %indent_nr8 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %19, i32 0, i32 11, !dbg !5751
  %20 = load i32, ptr %indent_nr8, align 4, !dbg !5751, !tbaa !3157
  br label %cond.end, !dbg !5749

cond.false:                                       ; preds = %for.body
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !5752, !tbaa !1471
  %level9 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %21, i32 0, i32 8, !dbg !5753
  %22 = load i32, ptr %level9, align 4, !dbg !5753, !tbaa !2512
  %23 = load i32, ptr %extra.addr, align 4, !dbg !5754, !tbaa !1775
  %add10 = add nsw i32 %22, %23, !dbg !5755
  %24 = load i32, ptr %i, align 4, !dbg !5756, !tbaa !1775
  %sub11 = sub nsw i32 %add10, %24, !dbg !5757
  br label %cond.end, !dbg !5749

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %20, %cond.true ], [ %sub11, %cond.false ], !dbg !5749
  %mul = mul nsw i32 %12, %cond, !dbg !5758
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !5759, !tbaa !1471
  %indent = getelementptr inbounds %struct._xmlSaveCtxt, ptr %25, i32 0, i32 10, !dbg !5760
  %arraydecay = getelementptr inbounds [61 x i8], ptr %indent, i64 0, i64 0, !dbg !5759
  %call12 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %10, i32 noundef %mul, ptr noundef %arraydecay), !dbg !5761
  br label %for.inc, !dbg !5762

for.inc:                                          ; preds = %cond.end
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !5763, !tbaa !1471
  %indent_nr13 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %26, i32 0, i32 11, !dbg !5764
  %27 = load i32, ptr %indent_nr13, align 4, !dbg !5764, !tbaa !3157
  %28 = load i32, ptr %i, align 4, !dbg !5765, !tbaa !1775
  %add14 = add nsw i32 %28, %27, !dbg !5765
  store i32 %add14, ptr %i, align 4, !dbg !5765, !tbaa !1775
  br label %for.cond, !dbg !5766, !llvm.loop !5767

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5769
  br label %cleanup, !dbg !5769

cleanup:                                          ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6, !dbg !5769
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !5769

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !5770 hidden i32 @xmlOutputBufferWrite__internal_alias(ptr noundef, i32 noundef, ptr noundef) #1

declare !dbg !5773 hidden i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef, ptr noundef) #1

declare !dbg !5776 i32 @xmlBufWriteQuotedString(ptr noundef, ptr noundef) #1

declare !dbg !5779 hidden ptr @xmlStrdup__internal_alias(ptr noundef) #1

declare !dbg !5782 hidden i32 @htmlSetMetaEncoding__internal_alias(ptr noundef, ptr noundef) #1

declare !dbg !5787 hidden ptr @htmlGetMetaEncoding__internal_alias(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @xmlSaveSwitchEncoding(ptr noundef %ctxt, ptr noundef %encoding) #0 !dbg !5790 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %encoding.addr = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !5794, metadata !DIExpression()), !dbg !5797
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %encoding.addr, metadata !5795, metadata !DIExpression()), !dbg !5798
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !5799
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !5796, metadata !DIExpression()), !dbg !5800
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !5801, !tbaa !1471
  %buf1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %0, i32 0, i32 6, !dbg !5802
  %1 = load ptr, ptr %buf1, align 8, !dbg !5802, !tbaa !1798
  store ptr %1, ptr %buf, align 8, !dbg !5800, !tbaa !1471
  %2 = load ptr, ptr %encoding.addr, align 8, !dbg !5803, !tbaa !1471
  %cmp = icmp ne ptr %2, null, !dbg !5805
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !5806

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr %buf, align 8, !dbg !5807, !tbaa !1471
  %encoder = getelementptr inbounds %struct._xmlOutputBuffer, ptr %3, i32 0, i32 3, !dbg !5808
  %4 = load ptr, ptr %encoder, align 8, !dbg !5808, !tbaa !2285
  %cmp2 = icmp eq ptr %4, null, !dbg !5809
  br i1 %cmp2, label %land.lhs.true3, label %if.end21, !dbg !5810

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load ptr, ptr %buf, align 8, !dbg !5811, !tbaa !1471
  %conv = getelementptr inbounds %struct._xmlOutputBuffer, ptr %5, i32 0, i32 5, !dbg !5812
  %6 = load ptr, ptr %conv, align 8, !dbg !5812, !tbaa !2290
  %cmp4 = icmp eq ptr %6, null, !dbg !5813
  br i1 %cmp4, label %if.then, label %if.end21, !dbg !5814

if.then:                                          ; preds = %land.lhs.true3
  %7 = load ptr, ptr %encoding.addr, align 8, !dbg !5815, !tbaa !1471
  %call = call ptr @xmlFindCharEncodingHandler__internal_alias(ptr noundef %7), !dbg !5817
  %8 = load ptr, ptr %buf, align 8, !dbg !5818, !tbaa !1471
  %encoder6 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %8, i32 0, i32 3, !dbg !5819
  store ptr %call, ptr %encoder6, align 8, !dbg !5820, !tbaa !2285
  %9 = load ptr, ptr %buf, align 8, !dbg !5821, !tbaa !1471
  %encoder7 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %9, i32 0, i32 3, !dbg !5823
  %10 = load ptr, ptr %encoder7, align 8, !dbg !5823, !tbaa !2285
  %cmp8 = icmp eq ptr %10, null, !dbg !5824
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !5825

if.then10:                                        ; preds = %if.then
  %11 = load ptr, ptr %encoding.addr, align 8, !dbg !5826, !tbaa !1471
  call void @xmlSaveErr(i32 noundef 1403, ptr noundef null, ptr noundef %11), !dbg !5828
  store i32 -1, ptr %retval, align 4, !dbg !5829
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5829

if.end:                                           ; preds = %if.then
  %call11 = call ptr @xmlBufCreate(), !dbg !5830
  %12 = load ptr, ptr %buf, align 8, !dbg !5831, !tbaa !1471
  %conv12 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %12, i32 0, i32 5, !dbg !5832
  store ptr %call11, ptr %conv12, align 8, !dbg !5833, !tbaa !2290
  %13 = load ptr, ptr %buf, align 8, !dbg !5834, !tbaa !1471
  %conv13 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %13, i32 0, i32 5, !dbg !5836
  %14 = load ptr, ptr %conv13, align 8, !dbg !5836, !tbaa !2290
  %cmp14 = icmp eq ptr %14, null, !dbg !5837
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !5838

if.then16:                                        ; preds = %if.end
  %15 = load ptr, ptr %buf, align 8, !dbg !5839, !tbaa !1471
  %encoder17 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %15, i32 0, i32 3, !dbg !5841
  %16 = load ptr, ptr %encoder17, align 8, !dbg !5841, !tbaa !2285
  %call18 = call i32 @xmlCharEncCloseFunc__internal_alias(ptr noundef %16), !dbg !5842
  call void @xmlSaveErrMemory(ptr noundef @.str.30), !dbg !5843
  store i32 -1, ptr %retval, align 4, !dbg !5844
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5844

if.end19:                                         ; preds = %if.end
  %17 = load ptr, ptr %buf, align 8, !dbg !5845, !tbaa !1471
  %call20 = call i32 @xmlCharEncOutput(ptr noundef %17, i32 noundef 1), !dbg !5846
  br label %if.end21, !dbg !5847

if.end21:                                         ; preds = %if.end19, %land.lhs.true3, %land.lhs.true, %entry
  store i32 0, ptr %retval, align 4, !dbg !5848
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5848

cleanup:                                          ; preds = %if.end21, %if.then16, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !5849
  %18 = load i32, ptr %retval, align 4, !dbg !5849
  ret i32 %18, !dbg !5849
}

declare !dbg !5850 hidden void @htmlDocContentDumpFormatOutput__internal_alias(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

declare !dbg !5853 hidden i32 @xmlParseCharEncoding__internal_alias(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @xmlEscapeEntities(ptr noundef %out, ptr noundef %outlen, ptr noundef %in, ptr noundef %inlen) #0 !dbg !5856 {
entry:
  %retval = alloca i32, align 4
  %out.addr = alloca ptr, align 8
  %outlen.addr = alloca ptr, align 8
  %in.addr = alloca ptr, align 8
  %inlen.addr = alloca ptr, align 8
  %outstart = alloca ptr, align 8
  %base = alloca ptr, align 8
  %outend = alloca ptr, align 8
  %inend = alloca ptr, align 8
  %val = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %out, ptr %out.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %out.addr, metadata !5860, metadata !DIExpression()), !dbg !5870
  store ptr %outlen, ptr %outlen.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %outlen.addr, metadata !5861, metadata !DIExpression()), !dbg !5871
  store ptr %in, ptr %in.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %in.addr, metadata !5862, metadata !DIExpression()), !dbg !5872
  store ptr %inlen, ptr %inlen.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %inlen.addr, metadata !5863, metadata !DIExpression()), !dbg !5873
  call void @llvm.lifetime.start.p0(i64 8, ptr %outstart) #6, !dbg !5874
  tail call void @llvm.dbg.declare(metadata ptr %outstart, metadata !5864, metadata !DIExpression()), !dbg !5875
  %0 = load ptr, ptr %out.addr, align 8, !dbg !5876, !tbaa !1471
  store ptr %0, ptr %outstart, align 8, !dbg !5875, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %base) #6, !dbg !5877
  tail call void @llvm.dbg.declare(metadata ptr %base, metadata !5865, metadata !DIExpression()), !dbg !5878
  %1 = load ptr, ptr %in.addr, align 8, !dbg !5879, !tbaa !1471
  store ptr %1, ptr %base, align 8, !dbg !5878, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %outend) #6, !dbg !5880
  tail call void @llvm.dbg.declare(metadata ptr %outend, metadata !5866, metadata !DIExpression()), !dbg !5881
  %2 = load ptr, ptr %out.addr, align 8, !dbg !5882, !tbaa !1471
  %3 = load ptr, ptr %outlen.addr, align 8, !dbg !5883, !tbaa !1471
  %4 = load i32, ptr %3, align 4, !dbg !5884, !tbaa !1775
  %idx.ext = sext i32 %4 to i64, !dbg !5885
  %add.ptr = getelementptr inbounds i8, ptr %2, i64 %idx.ext, !dbg !5885
  store ptr %add.ptr, ptr %outend, align 8, !dbg !5881, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %inend) #6, !dbg !5886
  tail call void @llvm.dbg.declare(metadata ptr %inend, metadata !5867, metadata !DIExpression()), !dbg !5887
  call void @llvm.lifetime.start.p0(i64 4, ptr %val) #6, !dbg !5888
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !5868, metadata !DIExpression()), !dbg !5889
  %5 = load ptr, ptr %in.addr, align 8, !dbg !5890, !tbaa !1471
  %6 = load ptr, ptr %inlen.addr, align 8, !dbg !5891, !tbaa !1471
  %7 = load i32, ptr %6, align 4, !dbg !5892, !tbaa !1775
  %idx.ext1 = sext i32 %7 to i64, !dbg !5893
  %add.ptr2 = getelementptr inbounds i8, ptr %5, i64 %idx.ext1, !dbg !5893
  store ptr %add.ptr2, ptr %inend, align 8, !dbg !5894, !tbaa !1471
  br label %while.cond, !dbg !5895

while.cond:                                       ; preds = %if.end230, %if.then61, %if.end40, %if.end23, %if.end, %entry
  %8 = load ptr, ptr %in.addr, align 8, !dbg !5896, !tbaa !1471
  %9 = load ptr, ptr %inend, align 8, !dbg !5897, !tbaa !1471
  %cmp = icmp ult ptr %8, %9, !dbg !5898
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5899

land.rhs:                                         ; preds = %while.cond
  %10 = load ptr, ptr %out.addr, align 8, !dbg !5900, !tbaa !1471
  %11 = load ptr, ptr %outend, align 8, !dbg !5901, !tbaa !1471
  %cmp3 = icmp ult ptr %10, %11, !dbg !5902
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !5903
  br i1 %12, label %while.body, label %while.end, !dbg !5895

while.body:                                       ; preds = %land.end
  %13 = load ptr, ptr %in.addr, align 8, !dbg !5904, !tbaa !1471
  %14 = load i8, ptr %13, align 1, !dbg !5907, !tbaa !2345
  %conv = zext i8 %14 to i32, !dbg !5907
  %cmp4 = icmp eq i32 %conv, 60, !dbg !5908
  br i1 %cmp4, label %if.then, label %if.else, !dbg !5909

if.then:                                          ; preds = %while.body
  %15 = load ptr, ptr %outend, align 8, !dbg !5910, !tbaa !1471
  %16 = load ptr, ptr %out.addr, align 8, !dbg !5913, !tbaa !1471
  %sub.ptr.lhs.cast = ptrtoint ptr %15 to i64, !dbg !5914
  %sub.ptr.rhs.cast = ptrtoint ptr %16 to i64, !dbg !5914
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5914
  %cmp6 = icmp slt i64 %sub.ptr.sub, 4, !dbg !5915
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !5916

if.then8:                                         ; preds = %if.then
  br label %while.end, !dbg !5917

if.end:                                           ; preds = %if.then
  %17 = load ptr, ptr %out.addr, align 8, !dbg !5918, !tbaa !1471
  %incdec.ptr = getelementptr inbounds i8, ptr %17, i32 1, !dbg !5918
  store ptr %incdec.ptr, ptr %out.addr, align 8, !dbg !5918, !tbaa !1471
  store i8 38, ptr %17, align 1, !dbg !5919, !tbaa !2345
  %18 = load ptr, ptr %out.addr, align 8, !dbg !5920, !tbaa !1471
  %incdec.ptr9 = getelementptr inbounds i8, ptr %18, i32 1, !dbg !5920
  store ptr %incdec.ptr9, ptr %out.addr, align 8, !dbg !5920, !tbaa !1471
  store i8 108, ptr %18, align 1, !dbg !5921, !tbaa !2345
  %19 = load ptr, ptr %out.addr, align 8, !dbg !5922, !tbaa !1471
  %incdec.ptr10 = getelementptr inbounds i8, ptr %19, i32 1, !dbg !5922
  store ptr %incdec.ptr10, ptr %out.addr, align 8, !dbg !5922, !tbaa !1471
  store i8 116, ptr %19, align 1, !dbg !5923, !tbaa !2345
  %20 = load ptr, ptr %out.addr, align 8, !dbg !5924, !tbaa !1471
  %incdec.ptr11 = getelementptr inbounds i8, ptr %20, i32 1, !dbg !5924
  store ptr %incdec.ptr11, ptr %out.addr, align 8, !dbg !5924, !tbaa !1471
  store i8 59, ptr %20, align 1, !dbg !5925, !tbaa !2345
  %21 = load ptr, ptr %in.addr, align 8, !dbg !5926, !tbaa !1471
  %incdec.ptr12 = getelementptr inbounds i8, ptr %21, i32 1, !dbg !5926
  store ptr %incdec.ptr12, ptr %in.addr, align 8, !dbg !5926, !tbaa !1471
  br label %while.cond, !dbg !5927, !llvm.loop !5928

if.else:                                          ; preds = %while.body
  %22 = load ptr, ptr %in.addr, align 8, !dbg !5930, !tbaa !1471
  %23 = load i8, ptr %22, align 1, !dbg !5932, !tbaa !2345
  %conv13 = zext i8 %23 to i32, !dbg !5932
  %cmp14 = icmp eq i32 %conv13, 62, !dbg !5933
  br i1 %cmp14, label %if.then16, label %if.else29, !dbg !5934

if.then16:                                        ; preds = %if.else
  %24 = load ptr, ptr %outend, align 8, !dbg !5935, !tbaa !1471
  %25 = load ptr, ptr %out.addr, align 8, !dbg !5938, !tbaa !1471
  %sub.ptr.lhs.cast17 = ptrtoint ptr %24 to i64, !dbg !5939
  %sub.ptr.rhs.cast18 = ptrtoint ptr %25 to i64, !dbg !5939
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !5939
  %cmp20 = icmp slt i64 %sub.ptr.sub19, 4, !dbg !5940
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5941

if.then22:                                        ; preds = %if.then16
  br label %while.end, !dbg !5942

if.end23:                                         ; preds = %if.then16
  %26 = load ptr, ptr %out.addr, align 8, !dbg !5943, !tbaa !1471
  %incdec.ptr24 = getelementptr inbounds i8, ptr %26, i32 1, !dbg !5943
  store ptr %incdec.ptr24, ptr %out.addr, align 8, !dbg !5943, !tbaa !1471
  store i8 38, ptr %26, align 1, !dbg !5944, !tbaa !2345
  %27 = load ptr, ptr %out.addr, align 8, !dbg !5945, !tbaa !1471
  %incdec.ptr25 = getelementptr inbounds i8, ptr %27, i32 1, !dbg !5945
  store ptr %incdec.ptr25, ptr %out.addr, align 8, !dbg !5945, !tbaa !1471
  store i8 103, ptr %27, align 1, !dbg !5946, !tbaa !2345
  %28 = load ptr, ptr %out.addr, align 8, !dbg !5947, !tbaa !1471
  %incdec.ptr26 = getelementptr inbounds i8, ptr %28, i32 1, !dbg !5947
  store ptr %incdec.ptr26, ptr %out.addr, align 8, !dbg !5947, !tbaa !1471
  store i8 116, ptr %28, align 1, !dbg !5948, !tbaa !2345
  %29 = load ptr, ptr %out.addr, align 8, !dbg !5949, !tbaa !1471
  %incdec.ptr27 = getelementptr inbounds i8, ptr %29, i32 1, !dbg !5949
  store ptr %incdec.ptr27, ptr %out.addr, align 8, !dbg !5949, !tbaa !1471
  store i8 59, ptr %29, align 1, !dbg !5950, !tbaa !2345
  %30 = load ptr, ptr %in.addr, align 8, !dbg !5951, !tbaa !1471
  %incdec.ptr28 = getelementptr inbounds i8, ptr %30, i32 1, !dbg !5951
  store ptr %incdec.ptr28, ptr %in.addr, align 8, !dbg !5951, !tbaa !1471
  br label %while.cond, !dbg !5952, !llvm.loop !5928

if.else29:                                        ; preds = %if.else
  %31 = load ptr, ptr %in.addr, align 8, !dbg !5953, !tbaa !1471
  %32 = load i8, ptr %31, align 1, !dbg !5955, !tbaa !2345
  %conv30 = zext i8 %32 to i32, !dbg !5955
  %cmp31 = icmp eq i32 %conv30, 38, !dbg !5956
  br i1 %cmp31, label %if.then33, label %if.else47, !dbg !5957

if.then33:                                        ; preds = %if.else29
  %33 = load ptr, ptr %outend, align 8, !dbg !5958, !tbaa !1471
  %34 = load ptr, ptr %out.addr, align 8, !dbg !5961, !tbaa !1471
  %sub.ptr.lhs.cast34 = ptrtoint ptr %33 to i64, !dbg !5962
  %sub.ptr.rhs.cast35 = ptrtoint ptr %34 to i64, !dbg !5962
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35, !dbg !5962
  %cmp37 = icmp slt i64 %sub.ptr.sub36, 5, !dbg !5963
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !5964

if.then39:                                        ; preds = %if.then33
  br label %while.end, !dbg !5965

if.end40:                                         ; preds = %if.then33
  %35 = load ptr, ptr %out.addr, align 8, !dbg !5966, !tbaa !1471
  %incdec.ptr41 = getelementptr inbounds i8, ptr %35, i32 1, !dbg !5966
  store ptr %incdec.ptr41, ptr %out.addr, align 8, !dbg !5966, !tbaa !1471
  store i8 38, ptr %35, align 1, !dbg !5967, !tbaa !2345
  %36 = load ptr, ptr %out.addr, align 8, !dbg !5968, !tbaa !1471
  %incdec.ptr42 = getelementptr inbounds i8, ptr %36, i32 1, !dbg !5968
  store ptr %incdec.ptr42, ptr %out.addr, align 8, !dbg !5968, !tbaa !1471
  store i8 97, ptr %36, align 1, !dbg !5969, !tbaa !2345
  %37 = load ptr, ptr %out.addr, align 8, !dbg !5970, !tbaa !1471
  %incdec.ptr43 = getelementptr inbounds i8, ptr %37, i32 1, !dbg !5970
  store ptr %incdec.ptr43, ptr %out.addr, align 8, !dbg !5970, !tbaa !1471
  store i8 109, ptr %37, align 1, !dbg !5971, !tbaa !2345
  %38 = load ptr, ptr %out.addr, align 8, !dbg !5972, !tbaa !1471
  %incdec.ptr44 = getelementptr inbounds i8, ptr %38, i32 1, !dbg !5972
  store ptr %incdec.ptr44, ptr %out.addr, align 8, !dbg !5972, !tbaa !1471
  store i8 112, ptr %38, align 1, !dbg !5973, !tbaa !2345
  %39 = load ptr, ptr %out.addr, align 8, !dbg !5974, !tbaa !1471
  %incdec.ptr45 = getelementptr inbounds i8, ptr %39, i32 1, !dbg !5974
  store ptr %incdec.ptr45, ptr %out.addr, align 8, !dbg !5974, !tbaa !1471
  store i8 59, ptr %39, align 1, !dbg !5975, !tbaa !2345
  %40 = load ptr, ptr %in.addr, align 8, !dbg !5976, !tbaa !1471
  %incdec.ptr46 = getelementptr inbounds i8, ptr %40, i32 1, !dbg !5976
  store ptr %incdec.ptr46, ptr %in.addr, align 8, !dbg !5976, !tbaa !1471
  br label %while.cond, !dbg !5977, !llvm.loop !5928

if.else47:                                        ; preds = %if.else29
  %41 = load ptr, ptr %in.addr, align 8, !dbg !5978, !tbaa !1471
  %42 = load i8, ptr %41, align 1, !dbg !5980, !tbaa !2345
  %conv48 = zext i8 %42 to i32, !dbg !5980
  %cmp49 = icmp sge i32 %conv48, 32, !dbg !5981
  br i1 %cmp49, label %land.lhs.true, label %lor.lhs.false, !dbg !5982

land.lhs.true:                                    ; preds = %if.else47
  %43 = load ptr, ptr %in.addr, align 8, !dbg !5983, !tbaa !1471
  %44 = load i8, ptr %43, align 1, !dbg !5984, !tbaa !2345
  %conv51 = zext i8 %44 to i32, !dbg !5984
  %cmp52 = icmp slt i32 %conv51, 128, !dbg !5985
  br i1 %cmp52, label %if.then61, label %lor.lhs.false, !dbg !5986

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.else47
  %45 = load ptr, ptr %in.addr, align 8, !dbg !5987, !tbaa !1471
  %46 = load i8, ptr %45, align 1, !dbg !5988, !tbaa !2345
  %conv54 = zext i8 %46 to i32, !dbg !5988
  %cmp55 = icmp eq i32 %conv54, 10, !dbg !5989
  br i1 %cmp55, label %if.then61, label %lor.lhs.false57, !dbg !5990

lor.lhs.false57:                                  ; preds = %lor.lhs.false
  %47 = load ptr, ptr %in.addr, align 8, !dbg !5991, !tbaa !1471
  %48 = load i8, ptr %47, align 1, !dbg !5992, !tbaa !2345
  %conv58 = zext i8 %48 to i32, !dbg !5992
  %cmp59 = icmp eq i32 %conv58, 9, !dbg !5993
  br i1 %cmp59, label %if.then61, label %if.else64, !dbg !5994

if.then61:                                        ; preds = %lor.lhs.false57, %lor.lhs.false, %land.lhs.true
  %49 = load ptr, ptr %in.addr, align 8, !dbg !5995, !tbaa !1471
  %incdec.ptr62 = getelementptr inbounds i8, ptr %49, i32 1, !dbg !5995
  store ptr %incdec.ptr62, ptr %in.addr, align 8, !dbg !5995, !tbaa !1471
  %50 = load i8, ptr %49, align 1, !dbg !5997, !tbaa !2345
  %51 = load ptr, ptr %out.addr, align 8, !dbg !5998, !tbaa !1471
  %incdec.ptr63 = getelementptr inbounds i8, ptr %51, i32 1, !dbg !5998
  store ptr %incdec.ptr63, ptr %out.addr, align 8, !dbg !5998, !tbaa !1471
  store i8 %50, ptr %51, align 1, !dbg !5999, !tbaa !2345
  br label %while.cond, !dbg !6000, !llvm.loop !5928

if.else64:                                        ; preds = %lor.lhs.false57
  %52 = load ptr, ptr %in.addr, align 8, !dbg !6001, !tbaa !1471
  %53 = load i8, ptr %52, align 1, !dbg !6003, !tbaa !2345
  %conv65 = zext i8 %53 to i32, !dbg !6003
  %cmp66 = icmp sge i32 %conv65, 128, !dbg !6004
  br i1 %cmp66, label %if.then68, label %if.else194, !dbg !6005

if.then68:                                        ; preds = %if.else64
  %54 = load ptr, ptr %outend, align 8, !dbg !6006, !tbaa !1471
  %55 = load ptr, ptr %out.addr, align 8, !dbg !6009, !tbaa !1471
  %sub.ptr.lhs.cast69 = ptrtoint ptr %54 to i64, !dbg !6010
  %sub.ptr.rhs.cast70 = ptrtoint ptr %55 to i64, !dbg !6010
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !6010
  %cmp72 = icmp slt i64 %sub.ptr.sub71, 11, !dbg !6011
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !6012

if.then74:                                        ; preds = %if.then68
  br label %while.end, !dbg !6013

if.end75:                                         ; preds = %if.then68
  %56 = load ptr, ptr %in.addr, align 8, !dbg !6014, !tbaa !1471
  %57 = load i8, ptr %56, align 1, !dbg !6016, !tbaa !2345
  %conv76 = zext i8 %57 to i32, !dbg !6016
  %cmp77 = icmp slt i32 %conv76, 192, !dbg !6017
  br i1 %cmp77, label %if.then79, label %if.else81, !dbg !6018

if.then79:                                        ; preds = %if.end75
  call void @xmlSaveErr(i32 noundef 1400, ptr noundef null, ptr noundef null), !dbg !6019
  %58 = load ptr, ptr %in.addr, align 8, !dbg !6021, !tbaa !1471
  %incdec.ptr80 = getelementptr inbounds i8, ptr %58, i32 1, !dbg !6021
  store ptr %incdec.ptr80, ptr %in.addr, align 8, !dbg !6021, !tbaa !1471
  br label %error, !dbg !6022

if.else81:                                        ; preds = %if.end75
  %59 = load ptr, ptr %in.addr, align 8, !dbg !6023, !tbaa !1471
  %60 = load i8, ptr %59, align 1, !dbg !6025, !tbaa !2345
  %conv82 = zext i8 %60 to i32, !dbg !6025
  %cmp83 = icmp slt i32 %conv82, 224, !dbg !6026
  br i1 %cmp83, label %if.then85, label %if.else98, !dbg !6027

if.then85:                                        ; preds = %if.else81
  %61 = load ptr, ptr %inend, align 8, !dbg !6028, !tbaa !1471
  %62 = load ptr, ptr %in.addr, align 8, !dbg !6031, !tbaa !1471
  %sub.ptr.lhs.cast86 = ptrtoint ptr %61 to i64, !dbg !6032
  %sub.ptr.rhs.cast87 = ptrtoint ptr %62 to i64, !dbg !6032
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87, !dbg !6032
  %cmp89 = icmp slt i64 %sub.ptr.sub88, 2, !dbg !6033
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !6034

if.then91:                                        ; preds = %if.then85
  br label %while.end, !dbg !6035

if.end92:                                         ; preds = %if.then85
  %63 = load ptr, ptr %in.addr, align 8, !dbg !6036, !tbaa !1471
  %arrayidx = getelementptr inbounds i8, ptr %63, i64 0, !dbg !6036
  %64 = load i8, ptr %arrayidx, align 1, !dbg !6036, !tbaa !2345
  %conv93 = zext i8 %64 to i32, !dbg !6037
  %and = and i32 %conv93, 31, !dbg !6038
  store i32 %and, ptr %val, align 4, !dbg !6039, !tbaa !1775
  %65 = load i32, ptr %val, align 4, !dbg !6040, !tbaa !1775
  %shl = shl i32 %65, 6, !dbg !6040
  store i32 %shl, ptr %val, align 4, !dbg !6040, !tbaa !1775
  %66 = load ptr, ptr %in.addr, align 8, !dbg !6041, !tbaa !1471
  %arrayidx94 = getelementptr inbounds i8, ptr %66, i64 1, !dbg !6041
  %67 = load i8, ptr %arrayidx94, align 1, !dbg !6041, !tbaa !2345
  %conv95 = zext i8 %67 to i32, !dbg !6042
  %and96 = and i32 %conv95, 63, !dbg !6043
  %68 = load i32, ptr %val, align 4, !dbg !6044, !tbaa !1775
  %or = or i32 %68, %and96, !dbg !6044
  store i32 %or, ptr %val, align 4, !dbg !6044, !tbaa !1775
  %69 = load ptr, ptr %in.addr, align 8, !dbg !6045, !tbaa !1471
  %add.ptr97 = getelementptr inbounds i8, ptr %69, i64 2, !dbg !6045
  store ptr %add.ptr97, ptr %in.addr, align 8, !dbg !6045, !tbaa !1471
  br label %if.end159, !dbg !6046

if.else98:                                        ; preds = %if.else81
  %70 = load ptr, ptr %in.addr, align 8, !dbg !6047, !tbaa !1471
  %71 = load i8, ptr %70, align 1, !dbg !6049, !tbaa !2345
  %conv99 = zext i8 %71 to i32, !dbg !6049
  %cmp100 = icmp slt i32 %conv99, 240, !dbg !6050
  br i1 %cmp100, label %if.then102, label %if.else124, !dbg !6051

if.then102:                                       ; preds = %if.else98
  %72 = load ptr, ptr %inend, align 8, !dbg !6052, !tbaa !1471
  %73 = load ptr, ptr %in.addr, align 8, !dbg !6055, !tbaa !1471
  %sub.ptr.lhs.cast103 = ptrtoint ptr %72 to i64, !dbg !6056
  %sub.ptr.rhs.cast104 = ptrtoint ptr %73 to i64, !dbg !6056
  %sub.ptr.sub105 = sub i64 %sub.ptr.lhs.cast103, %sub.ptr.rhs.cast104, !dbg !6056
  %cmp106 = icmp slt i64 %sub.ptr.sub105, 3, !dbg !6057
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !6058

if.then108:                                       ; preds = %if.then102
  br label %while.end, !dbg !6059

if.end109:                                        ; preds = %if.then102
  %74 = load ptr, ptr %in.addr, align 8, !dbg !6060, !tbaa !1471
  %arrayidx110 = getelementptr inbounds i8, ptr %74, i64 0, !dbg !6060
  %75 = load i8, ptr %arrayidx110, align 1, !dbg !6060, !tbaa !2345
  %conv111 = zext i8 %75 to i32, !dbg !6061
  %and112 = and i32 %conv111, 15, !dbg !6062
  store i32 %and112, ptr %val, align 4, !dbg !6063, !tbaa !1775
  %76 = load i32, ptr %val, align 4, !dbg !6064, !tbaa !1775
  %shl113 = shl i32 %76, 6, !dbg !6064
  store i32 %shl113, ptr %val, align 4, !dbg !6064, !tbaa !1775
  %77 = load ptr, ptr %in.addr, align 8, !dbg !6065, !tbaa !1471
  %arrayidx114 = getelementptr inbounds i8, ptr %77, i64 1, !dbg !6065
  %78 = load i8, ptr %arrayidx114, align 1, !dbg !6065, !tbaa !2345
  %conv115 = zext i8 %78 to i32, !dbg !6066
  %and116 = and i32 %conv115, 63, !dbg !6067
  %79 = load i32, ptr %val, align 4, !dbg !6068, !tbaa !1775
  %or117 = or i32 %79, %and116, !dbg !6068
  store i32 %or117, ptr %val, align 4, !dbg !6068, !tbaa !1775
  %80 = load i32, ptr %val, align 4, !dbg !6069, !tbaa !1775
  %shl118 = shl i32 %80, 6, !dbg !6069
  store i32 %shl118, ptr %val, align 4, !dbg !6069, !tbaa !1775
  %81 = load ptr, ptr %in.addr, align 8, !dbg !6070, !tbaa !1471
  %arrayidx119 = getelementptr inbounds i8, ptr %81, i64 2, !dbg !6070
  %82 = load i8, ptr %arrayidx119, align 1, !dbg !6070, !tbaa !2345
  %conv120 = zext i8 %82 to i32, !dbg !6071
  %and121 = and i32 %conv120, 63, !dbg !6072
  %83 = load i32, ptr %val, align 4, !dbg !6073, !tbaa !1775
  %or122 = or i32 %83, %and121, !dbg !6073
  store i32 %or122, ptr %val, align 4, !dbg !6073, !tbaa !1775
  %84 = load ptr, ptr %in.addr, align 8, !dbg !6074, !tbaa !1471
  %add.ptr123 = getelementptr inbounds i8, ptr %84, i64 3, !dbg !6074
  store ptr %add.ptr123, ptr %in.addr, align 8, !dbg !6074, !tbaa !1471
  br label %if.end158, !dbg !6075

if.else124:                                       ; preds = %if.else98
  %85 = load ptr, ptr %in.addr, align 8, !dbg !6076, !tbaa !1471
  %86 = load i8, ptr %85, align 1, !dbg !6078, !tbaa !2345
  %conv125 = zext i8 %86 to i32, !dbg !6078
  %cmp126 = icmp slt i32 %conv125, 248, !dbg !6079
  br i1 %cmp126, label %if.then128, label %if.else155, !dbg !6080

if.then128:                                       ; preds = %if.else124
  %87 = load ptr, ptr %inend, align 8, !dbg !6081, !tbaa !1471
  %88 = load ptr, ptr %in.addr, align 8, !dbg !6084, !tbaa !1471
  %sub.ptr.lhs.cast129 = ptrtoint ptr %87 to i64, !dbg !6085
  %sub.ptr.rhs.cast130 = ptrtoint ptr %88 to i64, !dbg !6085
  %sub.ptr.sub131 = sub i64 %sub.ptr.lhs.cast129, %sub.ptr.rhs.cast130, !dbg !6085
  %cmp132 = icmp slt i64 %sub.ptr.sub131, 4, !dbg !6086
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !6087

if.then134:                                       ; preds = %if.then128
  br label %while.end, !dbg !6088

if.end135:                                        ; preds = %if.then128
  %89 = load ptr, ptr %in.addr, align 8, !dbg !6089, !tbaa !1471
  %arrayidx136 = getelementptr inbounds i8, ptr %89, i64 0, !dbg !6089
  %90 = load i8, ptr %arrayidx136, align 1, !dbg !6089, !tbaa !2345
  %conv137 = zext i8 %90 to i32, !dbg !6090
  %and138 = and i32 %conv137, 7, !dbg !6091
  store i32 %and138, ptr %val, align 4, !dbg !6092, !tbaa !1775
  %91 = load i32, ptr %val, align 4, !dbg !6093, !tbaa !1775
  %shl139 = shl i32 %91, 6, !dbg !6093
  store i32 %shl139, ptr %val, align 4, !dbg !6093, !tbaa !1775
  %92 = load ptr, ptr %in.addr, align 8, !dbg !6094, !tbaa !1471
  %arrayidx140 = getelementptr inbounds i8, ptr %92, i64 1, !dbg !6094
  %93 = load i8, ptr %arrayidx140, align 1, !dbg !6094, !tbaa !2345
  %conv141 = zext i8 %93 to i32, !dbg !6095
  %and142 = and i32 %conv141, 63, !dbg !6096
  %94 = load i32, ptr %val, align 4, !dbg !6097, !tbaa !1775
  %or143 = or i32 %94, %and142, !dbg !6097
  store i32 %or143, ptr %val, align 4, !dbg !6097, !tbaa !1775
  %95 = load i32, ptr %val, align 4, !dbg !6098, !tbaa !1775
  %shl144 = shl i32 %95, 6, !dbg !6098
  store i32 %shl144, ptr %val, align 4, !dbg !6098, !tbaa !1775
  %96 = load ptr, ptr %in.addr, align 8, !dbg !6099, !tbaa !1471
  %arrayidx145 = getelementptr inbounds i8, ptr %96, i64 2, !dbg !6099
  %97 = load i8, ptr %arrayidx145, align 1, !dbg !6099, !tbaa !2345
  %conv146 = zext i8 %97 to i32, !dbg !6100
  %and147 = and i32 %conv146, 63, !dbg !6101
  %98 = load i32, ptr %val, align 4, !dbg !6102, !tbaa !1775
  %or148 = or i32 %98, %and147, !dbg !6102
  store i32 %or148, ptr %val, align 4, !dbg !6102, !tbaa !1775
  %99 = load i32, ptr %val, align 4, !dbg !6103, !tbaa !1775
  %shl149 = shl i32 %99, 6, !dbg !6103
  store i32 %shl149, ptr %val, align 4, !dbg !6103, !tbaa !1775
  %100 = load ptr, ptr %in.addr, align 8, !dbg !6104, !tbaa !1471
  %arrayidx150 = getelementptr inbounds i8, ptr %100, i64 3, !dbg !6104
  %101 = load i8, ptr %arrayidx150, align 1, !dbg !6104, !tbaa !2345
  %conv151 = zext i8 %101 to i32, !dbg !6105
  %and152 = and i32 %conv151, 63, !dbg !6106
  %102 = load i32, ptr %val, align 4, !dbg !6107, !tbaa !1775
  %or153 = or i32 %102, %and152, !dbg !6107
  store i32 %or153, ptr %val, align 4, !dbg !6107, !tbaa !1775
  %103 = load ptr, ptr %in.addr, align 8, !dbg !6108, !tbaa !1471
  %add.ptr154 = getelementptr inbounds i8, ptr %103, i64 4, !dbg !6108
  store ptr %add.ptr154, ptr %in.addr, align 8, !dbg !6108, !tbaa !1471
  br label %if.end157, !dbg !6109

if.else155:                                       ; preds = %if.else124
  call void @xmlSaveErr(i32 noundef 1401, ptr noundef null, ptr noundef null), !dbg !6110
  %104 = load ptr, ptr %in.addr, align 8, !dbg !6112, !tbaa !1471
  %incdec.ptr156 = getelementptr inbounds i8, ptr %104, i32 1, !dbg !6112
  store ptr %incdec.ptr156, ptr %in.addr, align 8, !dbg !6112, !tbaa !1471
  br label %error, !dbg !6113

if.end157:                                        ; preds = %if.end135
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end109
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.end92
  br label %if.end160

if.end160:                                        ; preds = %if.end159
  %105 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp161 = icmp slt i32 %105, 256, !dbg !6114
  br i1 %cmp161, label %cond.true, label %cond.false, !dbg !6116

cond.true:                                        ; preds = %if.end160
  %106 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp163 = icmp sle i32 9, %106, !dbg !6114
  br i1 %cmp163, label %land.lhs.true165, label %lor.lhs.false168, !dbg !6114

land.lhs.true165:                                 ; preds = %cond.true
  %107 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp166 = icmp sle i32 %107, 10, !dbg !6114
  br i1 %cmp166, label %if.end193, label %lor.lhs.false168, !dbg !6114

lor.lhs.false168:                                 ; preds = %land.lhs.true165, %cond.true
  %108 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp169 = icmp eq i32 %108, 13, !dbg !6114
  br i1 %cmp169, label %if.end193, label %lor.lhs.false171, !dbg !6114

lor.lhs.false171:                                 ; preds = %lor.lhs.false168
  %109 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp172 = icmp sle i32 32, %109, !dbg !6114
  br i1 %cmp172, label %if.end193, label %if.then191, !dbg !6114

cond.false:                                       ; preds = %if.end160
  %110 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp174 = icmp sle i32 256, %110, !dbg !6114
  br i1 %cmp174, label %land.lhs.true176, label %lor.lhs.false179, !dbg !6114

land.lhs.true176:                                 ; preds = %cond.false
  %111 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp177 = icmp sle i32 %111, 55295, !dbg !6114
  br i1 %cmp177, label %if.end193, label %lor.lhs.false179, !dbg !6114

lor.lhs.false179:                                 ; preds = %land.lhs.true176, %cond.false
  %112 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp180 = icmp sle i32 57344, %112, !dbg !6114
  br i1 %cmp180, label %land.lhs.true182, label %lor.lhs.false185, !dbg !6114

land.lhs.true182:                                 ; preds = %lor.lhs.false179
  %113 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp183 = icmp sle i32 %113, 65533, !dbg !6114
  br i1 %cmp183, label %if.end193, label %lor.lhs.false185, !dbg !6114

lor.lhs.false185:                                 ; preds = %land.lhs.true182, %lor.lhs.false179
  %114 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp186 = icmp sle i32 65536, %114, !dbg !6114
  br i1 %cmp186, label %land.lhs.true188, label %if.then191, !dbg !6114

land.lhs.true188:                                 ; preds = %lor.lhs.false185
  %115 = load i32, ptr %val, align 4, !dbg !6114, !tbaa !1775
  %cmp189 = icmp sle i32 %115, 1114111, !dbg !6114
  br i1 %cmp189, label %if.end193, label %if.then191, !dbg !6116

if.then191:                                       ; preds = %land.lhs.true188, %lor.lhs.false185, %lor.lhs.false171
  call void @xmlSaveErr(i32 noundef 1401, ptr noundef null, ptr noundef null), !dbg !6117
  %116 = load ptr, ptr %in.addr, align 8, !dbg !6119, !tbaa !1471
  %incdec.ptr192 = getelementptr inbounds i8, ptr %116, i32 1, !dbg !6119
  store ptr %incdec.ptr192, ptr %in.addr, align 8, !dbg !6119, !tbaa !1471
  br label %error, !dbg !6120

if.end193:                                        ; preds = %land.lhs.true188, %land.lhs.true182, %land.lhs.true176, %lor.lhs.false171, %lor.lhs.false168, %land.lhs.true165
  %117 = load ptr, ptr %out.addr, align 8, !dbg !6121, !tbaa !1471
  %118 = load i32, ptr %val, align 4, !dbg !6122, !tbaa !1775
  %call = call ptr @xmlSerializeHexCharRef(ptr noundef %117, i32 noundef %118), !dbg !6123
  store ptr %call, ptr %out.addr, align 8, !dbg !6124, !tbaa !1471
  br label %if.end226, !dbg !6125

if.else194:                                       ; preds = %if.else64
  %119 = load ptr, ptr %in.addr, align 8, !dbg !6126, !tbaa !1471
  %120 = load i8, ptr %119, align 1, !dbg !6126, !tbaa !2345
  %conv195 = zext i8 %120 to i32, !dbg !6126
  %cmp196 = icmp sle i32 9, %conv195, !dbg !6126
  br i1 %cmp196, label %land.lhs.true198, label %lor.lhs.false202, !dbg !6126

land.lhs.true198:                                 ; preds = %if.else194
  %121 = load ptr, ptr %in.addr, align 8, !dbg !6126, !tbaa !1471
  %122 = load i8, ptr %121, align 1, !dbg !6126, !tbaa !2345
  %conv199 = zext i8 %122 to i32, !dbg !6126
  %cmp200 = icmp sle i32 %conv199, 10, !dbg !6126
  br i1 %cmp200, label %if.then210, label %lor.lhs.false202, !dbg !6126

lor.lhs.false202:                                 ; preds = %land.lhs.true198, %if.else194
  %123 = load ptr, ptr %in.addr, align 8, !dbg !6126, !tbaa !1471
  %124 = load i8, ptr %123, align 1, !dbg !6126, !tbaa !2345
  %conv203 = zext i8 %124 to i32, !dbg !6126
  %cmp204 = icmp eq i32 %conv203, 13, !dbg !6126
  br i1 %cmp204, label %if.then210, label %lor.lhs.false206, !dbg !6126

lor.lhs.false206:                                 ; preds = %lor.lhs.false202
  %125 = load ptr, ptr %in.addr, align 8, !dbg !6126, !tbaa !1471
  %126 = load i8, ptr %125, align 1, !dbg !6126, !tbaa !2345
  %conv207 = zext i8 %126 to i32, !dbg !6126
  %cmp208 = icmp sle i32 32, %conv207, !dbg !6126
  br i1 %cmp208, label %if.then210, label %if.else221, !dbg !6128

if.then210:                                       ; preds = %lor.lhs.false206, %lor.lhs.false202, %land.lhs.true198
  %127 = load ptr, ptr %outend, align 8, !dbg !6129, !tbaa !1471
  %128 = load ptr, ptr %out.addr, align 8, !dbg !6132, !tbaa !1471
  %sub.ptr.lhs.cast211 = ptrtoint ptr %127 to i64, !dbg !6133
  %sub.ptr.rhs.cast212 = ptrtoint ptr %128 to i64, !dbg !6133
  %sub.ptr.sub213 = sub i64 %sub.ptr.lhs.cast211, %sub.ptr.rhs.cast212, !dbg !6133
  %cmp214 = icmp slt i64 %sub.ptr.sub213, 6, !dbg !6134
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !6135

if.then216:                                       ; preds = %if.then210
  br label %while.end, !dbg !6136

if.end217:                                        ; preds = %if.then210
  %129 = load ptr, ptr %out.addr, align 8, !dbg !6137, !tbaa !1471
  %130 = load ptr, ptr %in.addr, align 8, !dbg !6138, !tbaa !1471
  %incdec.ptr218 = getelementptr inbounds i8, ptr %130, i32 1, !dbg !6138
  store ptr %incdec.ptr218, ptr %in.addr, align 8, !dbg !6138, !tbaa !1471
  %131 = load i8, ptr %130, align 1, !dbg !6139, !tbaa !2345
  %conv219 = zext i8 %131 to i32, !dbg !6139
  %call220 = call ptr @xmlSerializeHexCharRef(ptr noundef %129, i32 noundef %conv219), !dbg !6140
  store ptr %call220, ptr %out.addr, align 8, !dbg !6141, !tbaa !1471
  br label %if.end225, !dbg !6142

if.else221:                                       ; preds = %lor.lhs.false206
  %call222 = call ptr @__xmlGenericError__internal_alias(), !dbg !6143
  %132 = load ptr, ptr %call222, align 8, !dbg !6143, !tbaa !1471
  %call223 = call ptr @__xmlGenericErrorContext__internal_alias(), !dbg !6145
  %133 = load ptr, ptr %call223, align 8, !dbg !6145, !tbaa !1471
  call void (ptr, ptr, ...) %132(ptr noundef %133, ptr noundef @.str.31), !dbg !6143
  %134 = load ptr, ptr %in.addr, align 8, !dbg !6146, !tbaa !1471
  %incdec.ptr224 = getelementptr inbounds i8, ptr %134, i32 1, !dbg !6146
  store ptr %incdec.ptr224, ptr %in.addr, align 8, !dbg !6146, !tbaa !1471
  br label %error, !dbg !6147

if.end225:                                        ; preds = %if.end217
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.end193
  br label %if.end227

if.end227:                                        ; preds = %if.end226
  br label %if.end228

if.end228:                                        ; preds = %if.end227
  br label %if.end229

if.end229:                                        ; preds = %if.end228
  br label %if.end230

if.end230:                                        ; preds = %if.end229
  br label %while.cond, !dbg !5895, !llvm.loop !5928

while.end:                                        ; preds = %if.then216, %if.then134, %if.then108, %if.then91, %if.then74, %if.then39, %if.then22, %if.then8, %land.end
  %135 = load ptr, ptr %out.addr, align 8, !dbg !6148, !tbaa !1471
  %136 = load ptr, ptr %outstart, align 8, !dbg !6149, !tbaa !1471
  %sub.ptr.lhs.cast231 = ptrtoint ptr %135 to i64, !dbg !6150
  %sub.ptr.rhs.cast232 = ptrtoint ptr %136 to i64, !dbg !6150
  %sub.ptr.sub233 = sub i64 %sub.ptr.lhs.cast231, %sub.ptr.rhs.cast232, !dbg !6150
  %conv234 = trunc i64 %sub.ptr.sub233 to i32, !dbg !6148
  %137 = load ptr, ptr %outlen.addr, align 8, !dbg !6151, !tbaa !1471
  store i32 %conv234, ptr %137, align 4, !dbg !6152, !tbaa !1775
  %138 = load ptr, ptr %in.addr, align 8, !dbg !6153, !tbaa !1471
  %139 = load ptr, ptr %base, align 8, !dbg !6154, !tbaa !1471
  %sub.ptr.lhs.cast235 = ptrtoint ptr %138 to i64, !dbg !6155
  %sub.ptr.rhs.cast236 = ptrtoint ptr %139 to i64, !dbg !6155
  %sub.ptr.sub237 = sub i64 %sub.ptr.lhs.cast235, %sub.ptr.rhs.cast236, !dbg !6155
  %conv238 = trunc i64 %sub.ptr.sub237 to i32, !dbg !6153
  %140 = load ptr, ptr %inlen.addr, align 8, !dbg !6156, !tbaa !1471
  store i32 %conv238, ptr %140, align 4, !dbg !6157, !tbaa !1775
  store i32 0, ptr %retval, align 4, !dbg !6158
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6158

error:                                            ; preds = %if.else221, %if.then191, %if.else155, %if.then79
  tail call void @llvm.dbg.label(metadata !5869), !dbg !6159
  %141 = load ptr, ptr %out.addr, align 8, !dbg !6160, !tbaa !1471
  %142 = load ptr, ptr %outstart, align 8, !dbg !6161, !tbaa !1471
  %sub.ptr.lhs.cast239 = ptrtoint ptr %141 to i64, !dbg !6162
  %sub.ptr.rhs.cast240 = ptrtoint ptr %142 to i64, !dbg !6162
  %sub.ptr.sub241 = sub i64 %sub.ptr.lhs.cast239, %sub.ptr.rhs.cast240, !dbg !6162
  %conv242 = trunc i64 %sub.ptr.sub241 to i32, !dbg !6160
  %143 = load ptr, ptr %outlen.addr, align 8, !dbg !6163, !tbaa !1471
  store i32 %conv242, ptr %143, align 4, !dbg !6164, !tbaa !1775
  %144 = load ptr, ptr %in.addr, align 8, !dbg !6165, !tbaa !1471
  %145 = load ptr, ptr %base, align 8, !dbg !6166, !tbaa !1471
  %sub.ptr.lhs.cast243 = ptrtoint ptr %144 to i64, !dbg !6167
  %sub.ptr.rhs.cast244 = ptrtoint ptr %145 to i64, !dbg !6167
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244, !dbg !6167
  %conv246 = trunc i64 %sub.ptr.sub245 to i32, !dbg !6165
  %146 = load ptr, ptr %inlen.addr, align 8, !dbg !6168, !tbaa !1471
  store i32 %conv246, ptr %146, align 4, !dbg !6169, !tbaa !1775
  store i32 -1, ptr %retval, align 4, !dbg !6170
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6170

cleanup:                                          ; preds = %error, %while.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %val) #6, !dbg !6171
  call void @llvm.lifetime.end.p0(i64 8, ptr %inend) #6, !dbg !6171
  call void @llvm.lifetime.end.p0(i64 8, ptr %outend) #6, !dbg !6171
  call void @llvm.lifetime.end.p0(i64 8, ptr %base) #6, !dbg !6171
  call void @llvm.lifetime.end.p0(i64 8, ptr %outstart) #6, !dbg !6171
  %147 = load i32, ptr %retval, align 4, !dbg !6171
  ret i32 %147, !dbg !6171
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlSaveClearEncoding(ptr noundef %ctxt) #0 !dbg !6172 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %buf = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6174, metadata !DIExpression()), !dbg !6176
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !6177
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !6175, metadata !DIExpression()), !dbg !6178
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !6179, !tbaa !1471
  %buf1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %0, i32 0, i32 6, !dbg !6180
  %1 = load ptr, ptr %buf1, align 8, !dbg !6180, !tbaa !1798
  store ptr %1, ptr %buf, align 8, !dbg !6178, !tbaa !1471
  %2 = load ptr, ptr %buf, align 8, !dbg !6181, !tbaa !1471
  %call = call i32 @xmlOutputBufferFlush__internal_alias(ptr noundef %2), !dbg !6182
  %3 = load ptr, ptr %buf, align 8, !dbg !6183, !tbaa !1471
  %encoder = getelementptr inbounds %struct._xmlOutputBuffer, ptr %3, i32 0, i32 3, !dbg !6184
  %4 = load ptr, ptr %encoder, align 8, !dbg !6184, !tbaa !2285
  %call2 = call i32 @xmlCharEncCloseFunc__internal_alias(ptr noundef %4), !dbg !6185
  %5 = load ptr, ptr %buf, align 8, !dbg !6186, !tbaa !1471
  %conv = getelementptr inbounds %struct._xmlOutputBuffer, ptr %5, i32 0, i32 5, !dbg !6187
  %6 = load ptr, ptr %conv, align 8, !dbg !6187, !tbaa !2290
  call void @xmlBufFree(ptr noundef %6), !dbg !6188
  %7 = load ptr, ptr %buf, align 8, !dbg !6189, !tbaa !1471
  %encoder3 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %7, i32 0, i32 3, !dbg !6190
  store ptr null, ptr %encoder3, align 8, !dbg !6191, !tbaa !2285
  %8 = load ptr, ptr %buf, align 8, !dbg !6192, !tbaa !1471
  %conv4 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %8, i32 0, i32 5, !dbg !6193
  store ptr null, ptr %conv4, align 8, !dbg !6194, !tbaa !2290
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !6195
  ret i32 0, !dbg !6196
}

declare !dbg !6197 ptr @xmlBufCreate() #1

declare !dbg !6200 i32 @xmlCharEncOutput(ptr noundef, i32 noundef) #1

declare !dbg !6204 hidden ptr @__xmlGenericError__internal_alias() #1

declare !dbg !6212 hidden ptr @__xmlGenericErrorContext__internal_alias() #1

declare !dbg !6216 void @xmlBufFree(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @htmlNodeDumpOutputInternal(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6219 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %oldenc = alloca ptr, align 8
  %oldctxtenc = alloca ptr, align 8
  %encoding1 = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %switched_encoding = alloca i32, align 4
  %doc = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6223, metadata !DIExpression()), !dbg !6231
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6224, metadata !DIExpression()), !dbg !6232
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldenc) #6, !dbg !6233
  tail call void @llvm.dbg.declare(metadata ptr %oldenc, metadata !6225, metadata !DIExpression()), !dbg !6234
  store ptr null, ptr %oldenc, align 8, !dbg !6234, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldctxtenc) #6, !dbg !6235
  tail call void @llvm.dbg.declare(metadata ptr %oldctxtenc, metadata !6226, metadata !DIExpression()), !dbg !6236
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !6237, !tbaa !1471
  %encoding = getelementptr inbounds %struct._xmlSaveCtxt, ptr %0, i32 0, i32 4, !dbg !6238
  %1 = load ptr, ptr %encoding, align 8, !dbg !6238, !tbaa !1859
  store ptr %1, ptr %oldctxtenc, align 8, !dbg !6236, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %encoding1) #6, !dbg !6239
  tail call void @llvm.dbg.declare(metadata ptr %encoding1, metadata !6227, metadata !DIExpression()), !dbg !6240
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !6241, !tbaa !1471
  %encoding2 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %2, i32 0, i32 4, !dbg !6242
  %3 = load ptr, ptr %encoding2, align 8, !dbg !6242, !tbaa !1859
  store ptr %3, ptr %encoding1, align 8, !dbg !6240, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !6243
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !6228, metadata !DIExpression()), !dbg !6244
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !6245, !tbaa !1471
  %buf3 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 6, !dbg !6246
  %5 = load ptr, ptr %buf3, align 8, !dbg !6246, !tbaa !1798
  store ptr %5, ptr %buf, align 8, !dbg !6244, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 4, ptr %switched_encoding) #6, !dbg !6247
  tail call void @llvm.dbg.declare(metadata ptr %switched_encoding, metadata !6229, metadata !DIExpression()), !dbg !6248
  store i32 0, ptr %switched_encoding, align 4, !dbg !6248, !tbaa !1775
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #6, !dbg !6249
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !6230, metadata !DIExpression()), !dbg !6250
  call void @xmlInitParser__internal_alias(), !dbg !6251
  %6 = load ptr, ptr %cur.addr, align 8, !dbg !6252, !tbaa !1471
  %doc4 = getelementptr inbounds %struct._xmlNode, ptr %6, i32 0, i32 8, !dbg !6253
  %7 = load ptr, ptr %doc4, align 8, !dbg !6253, !tbaa !2659
  store ptr %7, ptr %doc, align 8, !dbg !6254, !tbaa !1471
  %8 = load ptr, ptr %doc, align 8, !dbg !6255, !tbaa !1471
  %cmp = icmp ne ptr %8, null, !dbg !6257
  br i1 %cmp, label %if.then, label %if.end16, !dbg !6258

if.then:                                          ; preds = %entry
  %9 = load ptr, ptr %doc, align 8, !dbg !6259, !tbaa !1471
  %encoding5 = getelementptr inbounds %struct._xmlDoc, ptr %9, i32 0, i32 15, !dbg !6261
  %10 = load ptr, ptr %encoding5, align 8, !dbg !6261, !tbaa !2175
  store ptr %10, ptr %oldenc, align 8, !dbg !6262, !tbaa !1471
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !6263, !tbaa !1471
  %encoding6 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %11, i32 0, i32 4, !dbg !6265
  %12 = load ptr, ptr %encoding6, align 8, !dbg !6265, !tbaa !1859
  %cmp7 = icmp ne ptr %12, null, !dbg !6266
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !6267

if.then8:                                         ; preds = %if.then
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !6268, !tbaa !1471
  %encoding9 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %13, i32 0, i32 4, !dbg !6270
  %14 = load ptr, ptr %encoding9, align 8, !dbg !6270, !tbaa !1859
  %15 = load ptr, ptr %doc, align 8, !dbg !6271, !tbaa !1471
  %encoding10 = getelementptr inbounds %struct._xmlDoc, ptr %15, i32 0, i32 15, !dbg !6272
  store ptr %14, ptr %encoding10, align 8, !dbg !6273, !tbaa !2175
  br label %if.end15, !dbg !6274

if.else:                                          ; preds = %if.then
  %16 = load ptr, ptr %doc, align 8, !dbg !6275, !tbaa !1471
  %encoding11 = getelementptr inbounds %struct._xmlDoc, ptr %16, i32 0, i32 15, !dbg !6277
  %17 = load ptr, ptr %encoding11, align 8, !dbg !6277, !tbaa !2175
  %cmp12 = icmp ne ptr %17, null, !dbg !6278
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !6279

if.then13:                                        ; preds = %if.else
  %18 = load ptr, ptr %doc, align 8, !dbg !6280, !tbaa !1471
  %encoding14 = getelementptr inbounds %struct._xmlDoc, ptr %18, i32 0, i32 15, !dbg !6282
  %19 = load ptr, ptr %encoding14, align 8, !dbg !6282, !tbaa !2175
  store ptr %19, ptr %encoding1, align 8, !dbg !6283, !tbaa !1471
  br label %if.end, !dbg !6284

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then8
  br label %if.end16, !dbg !6285

if.end16:                                         ; preds = %if.end15, %entry
  %20 = load ptr, ptr %encoding1, align 8, !dbg !6286, !tbaa !1471
  %cmp17 = icmp ne ptr %20, null, !dbg !6288
  br i1 %cmp17, label %land.lhs.true, label %if.end20, !dbg !6289

land.lhs.true:                                    ; preds = %if.end16
  %21 = load ptr, ptr %doc, align 8, !dbg !6290, !tbaa !1471
  %cmp18 = icmp ne ptr %21, null, !dbg !6291
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6292

if.then19:                                        ; preds = %land.lhs.true
  %22 = load ptr, ptr %doc, align 8, !dbg !6293, !tbaa !1471
  %23 = load ptr, ptr %encoding1, align 8, !dbg !6294, !tbaa !1471
  %call = call i32 @htmlSetMetaEncoding__internal_alias(ptr noundef %22, ptr noundef %23), !dbg !6295
  br label %if.end20, !dbg !6295

if.end20:                                         ; preds = %if.then19, %land.lhs.true, %if.end16
  %24 = load ptr, ptr %encoding1, align 8, !dbg !6296, !tbaa !1471
  %cmp21 = icmp eq ptr %24, null, !dbg !6298
  br i1 %cmp21, label %land.lhs.true22, label %if.end26, !dbg !6299

land.lhs.true22:                                  ; preds = %if.end20
  %25 = load ptr, ptr %doc, align 8, !dbg !6300, !tbaa !1471
  %cmp23 = icmp ne ptr %25, null, !dbg !6301
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !6302

if.then24:                                        ; preds = %land.lhs.true22
  %26 = load ptr, ptr %doc, align 8, !dbg !6303, !tbaa !1471
  %call25 = call ptr @htmlGetMetaEncoding__internal_alias(ptr noundef %26), !dbg !6304
  store ptr %call25, ptr %encoding1, align 8, !dbg !6305, !tbaa !1471
  br label %if.end26, !dbg !6306

if.end26:                                         ; preds = %if.then24, %land.lhs.true22, %if.end20
  %27 = load ptr, ptr %encoding1, align 8, !dbg !6307, !tbaa !1471
  %cmp27 = icmp eq ptr %27, null, !dbg !6309
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !6310

if.then28:                                        ; preds = %if.end26
  store ptr @.str.23, ptr %encoding1, align 8, !dbg !6311, !tbaa !1471
  br label %if.end29, !dbg !6312

if.end29:                                         ; preds = %if.then28, %if.end26
  %28 = load ptr, ptr %encoding1, align 8, !dbg !6313, !tbaa !1471
  %cmp30 = icmp ne ptr %28, null, !dbg !6315
  br i1 %cmp30, label %land.lhs.true31, label %if.end45, !dbg !6316

land.lhs.true31:                                  ; preds = %if.end29
  %29 = load ptr, ptr %oldctxtenc, align 8, !dbg !6317, !tbaa !1471
  %cmp32 = icmp eq ptr %29, null, !dbg !6318
  br i1 %cmp32, label %land.lhs.true33, label %if.end45, !dbg !6319

land.lhs.true33:                                  ; preds = %land.lhs.true31
  %30 = load ptr, ptr %buf, align 8, !dbg !6320, !tbaa !1471
  %encoder = getelementptr inbounds %struct._xmlOutputBuffer, ptr %30, i32 0, i32 3, !dbg !6321
  %31 = load ptr, ptr %encoder, align 8, !dbg !6321, !tbaa !2285
  %cmp34 = icmp eq ptr %31, null, !dbg !6322
  br i1 %cmp34, label %land.lhs.true35, label %if.end45, !dbg !6323

land.lhs.true35:                                  ; preds = %land.lhs.true33
  %32 = load ptr, ptr %buf, align 8, !dbg !6324, !tbaa !1471
  %conv = getelementptr inbounds %struct._xmlOutputBuffer, ptr %32, i32 0, i32 5, !dbg !6325
  %33 = load ptr, ptr %conv, align 8, !dbg !6325, !tbaa !2290
  %cmp36 = icmp eq ptr %33, null, !dbg !6326
  br i1 %cmp36, label %if.then38, label %if.end45, !dbg !6327

if.then38:                                        ; preds = %land.lhs.true35
  %34 = load ptr, ptr %ctxt.addr, align 8, !dbg !6328, !tbaa !1471
  %35 = load ptr, ptr %encoding1, align 8, !dbg !6331, !tbaa !1471
  %call39 = call i32 @xmlSaveSwitchEncoding(ptr noundef %34, ptr noundef %35), !dbg !6332
  %cmp40 = icmp slt i32 %call39, 0, !dbg !6333
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !6334

if.then42:                                        ; preds = %if.then38
  %36 = load ptr, ptr %oldenc, align 8, !dbg !6335, !tbaa !1471
  %37 = load ptr, ptr %doc, align 8, !dbg !6337, !tbaa !1471
  %encoding43 = getelementptr inbounds %struct._xmlDoc, ptr %37, i32 0, i32 15, !dbg !6338
  store ptr %36, ptr %encoding43, align 8, !dbg !6339, !tbaa !2175
  store i32 -1, ptr %retval, align 4, !dbg !6340
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6340

if.end44:                                         ; preds = %if.then38
  store i32 1, ptr %switched_encoding, align 4, !dbg !6341, !tbaa !1775
  br label %if.end45, !dbg !6342

if.end45:                                         ; preds = %if.end44, %land.lhs.true35, %land.lhs.true33, %land.lhs.true31, %if.end29
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !6343, !tbaa !1471
  %options = getelementptr inbounds %struct._xmlSaveCtxt, ptr %38, i32 0, i32 7, !dbg !6345
  %39 = load i32, ptr %options, align 8, !dbg !6345, !tbaa !1870
  %and = and i32 %39, 1, !dbg !6346
  %tobool = icmp ne i32 %and, 0, !dbg !6346
  br i1 %tobool, label %if.then46, label %if.else47, !dbg !6347

if.then46:                                        ; preds = %if.end45
  %40 = load ptr, ptr %buf, align 8, !dbg !6348, !tbaa !1471
  %41 = load ptr, ptr %doc, align 8, !dbg !6349, !tbaa !1471
  %42 = load ptr, ptr %cur.addr, align 8, !dbg !6350, !tbaa !1471
  %43 = load ptr, ptr %encoding1, align 8, !dbg !6351, !tbaa !1471
  call void @htmlNodeDumpFormatOutput__internal_alias(ptr noundef %40, ptr noundef %41, ptr noundef %42, ptr noundef %43, i32 noundef 1), !dbg !6352
  br label %if.end48, !dbg !6352

if.else47:                                        ; preds = %if.end45
  %44 = load ptr, ptr %buf, align 8, !dbg !6353, !tbaa !1471
  %45 = load ptr, ptr %doc, align 8, !dbg !6354, !tbaa !1471
  %46 = load ptr, ptr %cur.addr, align 8, !dbg !6355, !tbaa !1471
  %47 = load ptr, ptr %encoding1, align 8, !dbg !6356, !tbaa !1471
  call void @htmlNodeDumpFormatOutput__internal_alias(ptr noundef %44, ptr noundef %45, ptr noundef %46, ptr noundef %47, i32 noundef 0), !dbg !6357
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %if.then46
  %48 = load i32, ptr %switched_encoding, align 4, !dbg !6358, !tbaa !1775
  %tobool49 = icmp ne i32 %48, 0, !dbg !6360
  br i1 %tobool49, label %land.lhs.true50, label %if.end55, !dbg !6361

land.lhs.true50:                                  ; preds = %if.end48
  %49 = load ptr, ptr %oldctxtenc, align 8, !dbg !6362, !tbaa !1471
  %cmp51 = icmp eq ptr %49, null, !dbg !6363
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !6364

if.then53:                                        ; preds = %land.lhs.true50
  %50 = load ptr, ptr %ctxt.addr, align 8, !dbg !6365, !tbaa !1471
  %call54 = call i32 @xmlSaveClearEncoding(ptr noundef %50), !dbg !6367
  br label %if.end55, !dbg !6368

if.end55:                                         ; preds = %if.then53, %land.lhs.true50, %if.end48
  %51 = load ptr, ptr %doc, align 8, !dbg !6369, !tbaa !1471
  %cmp56 = icmp ne ptr %51, null, !dbg !6371
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !6372

if.then58:                                        ; preds = %if.end55
  %52 = load ptr, ptr %oldenc, align 8, !dbg !6373, !tbaa !1471
  %53 = load ptr, ptr %doc, align 8, !dbg !6374, !tbaa !1471
  %encoding59 = getelementptr inbounds %struct._xmlDoc, ptr %53, i32 0, i32 15, !dbg !6375
  store ptr %52, ptr %encoding59, align 8, !dbg !6376, !tbaa !2175
  br label %if.end60, !dbg !6374

if.end60:                                         ; preds = %if.then58, %if.end55
  store i32 0, ptr %retval, align 4, !dbg !6377
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6377

cleanup:                                          ; preds = %if.end60, %if.then42
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #6, !dbg !6378
  call void @llvm.lifetime.end.p0(i64 4, ptr %switched_encoding) #6, !dbg !6378
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !6378
  call void @llvm.lifetime.end.p0(i64 8, ptr %encoding1) #6, !dbg !6378
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldctxtenc) #6, !dbg !6378
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldenc) #6, !dbg !6378
  %54 = load i32, ptr %retval, align 4, !dbg !6378
  ret i32 %54, !dbg !6378
}

; Function Attrs: nounwind uwtable
define internal void @xmlDtdDumpOutput(ptr noundef %ctxt, ptr noundef %dtd) #0 !dbg !6379 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %dtd.addr = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %format = alloca i32, align 4
  %level = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6383, metadata !DIExpression()), !dbg !6388
  store ptr %dtd, ptr %dtd.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %dtd.addr, metadata !6384, metadata !DIExpression()), !dbg !6389
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !6390
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !6385, metadata !DIExpression()), !dbg !6391
  call void @llvm.lifetime.start.p0(i64 4, ptr %format) #6, !dbg !6392
  tail call void @llvm.dbg.declare(metadata ptr %format, metadata !6386, metadata !DIExpression()), !dbg !6393
  call void @llvm.lifetime.start.p0(i64 4, ptr %level) #6, !dbg !6392
  tail call void @llvm.dbg.declare(metadata ptr %level, metadata !6387, metadata !DIExpression()), !dbg !6394
  %0 = load ptr, ptr %dtd.addr, align 8, !dbg !6395, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !6397
  br i1 %cmp, label %if.then, label %if.end, !dbg !6398

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6399

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !6400, !tbaa !1471
  %cmp1 = icmp eq ptr %1, null, !dbg !6402
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6403

lor.lhs.false:                                    ; preds = %if.end
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !6404, !tbaa !1471
  %buf2 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %2, i32 0, i32 6, !dbg !6405
  %3 = load ptr, ptr %buf2, align 8, !dbg !6405, !tbaa !1798
  %cmp3 = icmp eq ptr %3, null, !dbg !6406
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6407

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6408

if.end5:                                          ; preds = %lor.lhs.false
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !6409, !tbaa !1471
  %buf6 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 6, !dbg !6410
  %5 = load ptr, ptr %buf6, align 8, !dbg !6410, !tbaa !1798
  store ptr %5, ptr %buf, align 8, !dbg !6411, !tbaa !1471
  %6 = load ptr, ptr %buf, align 8, !dbg !6412, !tbaa !1471
  %call = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %6, i32 noundef 10, ptr noundef @.str.46), !dbg !6413
  %7 = load ptr, ptr %buf, align 8, !dbg !6414, !tbaa !1471
  %8 = load ptr, ptr %dtd.addr, align 8, !dbg !6415, !tbaa !1471
  %name = getelementptr inbounds %struct._xmlDtd, ptr %8, i32 0, i32 2, !dbg !6416
  %9 = load ptr, ptr %name, align 8, !dbg !6416, !tbaa !6417
  %call7 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %7, ptr noundef %9), !dbg !6418
  %10 = load ptr, ptr %dtd.addr, align 8, !dbg !6419, !tbaa !1471
  %ExternalID = getelementptr inbounds %struct._xmlDtd, ptr %10, i32 0, i32 13, !dbg !6421
  %11 = load ptr, ptr %ExternalID, align 8, !dbg !6421, !tbaa !2485
  %cmp8 = icmp ne ptr %11, null, !dbg !6422
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !6423

if.then9:                                         ; preds = %if.end5
  %12 = load ptr, ptr %buf, align 8, !dbg !6424, !tbaa !1471
  %call10 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %12, i32 noundef 8, ptr noundef @.str.47), !dbg !6426
  %13 = load ptr, ptr %buf, align 8, !dbg !6427, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %13, i32 0, i32 4, !dbg !6428
  %14 = load ptr, ptr %buffer, align 8, !dbg !6428, !tbaa !1760
  %15 = load ptr, ptr %dtd.addr, align 8, !dbg !6429, !tbaa !1471
  %ExternalID11 = getelementptr inbounds %struct._xmlDtd, ptr %15, i32 0, i32 13, !dbg !6430
  %16 = load ptr, ptr %ExternalID11, align 8, !dbg !6430, !tbaa !2485
  %call12 = call i32 @xmlBufWriteQuotedString(ptr noundef %14, ptr noundef %16), !dbg !6431
  %17 = load ptr, ptr %buf, align 8, !dbg !6432, !tbaa !1471
  %call13 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %17, i32 noundef 1, ptr noundef @.str.17), !dbg !6433
  %18 = load ptr, ptr %buf, align 8, !dbg !6434, !tbaa !1471
  %buffer14 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %18, i32 0, i32 4, !dbg !6435
  %19 = load ptr, ptr %buffer14, align 8, !dbg !6435, !tbaa !1760
  %20 = load ptr, ptr %dtd.addr, align 8, !dbg !6436, !tbaa !1471
  %SystemID = getelementptr inbounds %struct._xmlDtd, ptr %20, i32 0, i32 14, !dbg !6437
  %21 = load ptr, ptr %SystemID, align 8, !dbg !6437, !tbaa !2481
  %call15 = call i32 @xmlBufWriteQuotedString(ptr noundef %19, ptr noundef %21), !dbg !6438
  br label %if.end24, !dbg !6439

if.else:                                          ; preds = %if.end5
  %22 = load ptr, ptr %dtd.addr, align 8, !dbg !6440, !tbaa !1471
  %SystemID16 = getelementptr inbounds %struct._xmlDtd, ptr %22, i32 0, i32 14, !dbg !6442
  %23 = load ptr, ptr %SystemID16, align 8, !dbg !6442, !tbaa !2481
  %cmp17 = icmp ne ptr %23, null, !dbg !6443
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !6444

if.then18:                                        ; preds = %if.else
  %24 = load ptr, ptr %buf, align 8, !dbg !6445, !tbaa !1471
  %call19 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %24, i32 noundef 8, ptr noundef @.str.48), !dbg !6447
  %25 = load ptr, ptr %buf, align 8, !dbg !6448, !tbaa !1471
  %buffer20 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %25, i32 0, i32 4, !dbg !6449
  %26 = load ptr, ptr %buffer20, align 8, !dbg !6449, !tbaa !1760
  %27 = load ptr, ptr %dtd.addr, align 8, !dbg !6450, !tbaa !1471
  %SystemID21 = getelementptr inbounds %struct._xmlDtd, ptr %27, i32 0, i32 14, !dbg !6451
  %28 = load ptr, ptr %SystemID21, align 8, !dbg !6451, !tbaa !2481
  %call22 = call i32 @xmlBufWriteQuotedString(ptr noundef %26, ptr noundef %28), !dbg !6452
  br label %if.end23, !dbg !6453

if.end23:                                         ; preds = %if.then18, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then9
  %29 = load ptr, ptr %dtd.addr, align 8, !dbg !6454, !tbaa !1471
  %entities = getelementptr inbounds %struct._xmlDtd, ptr %29, i32 0, i32 12, !dbg !6456
  %30 = load ptr, ptr %entities, align 8, !dbg !6456, !tbaa !6457
  %cmp25 = icmp eq ptr %30, null, !dbg !6458
  br i1 %cmp25, label %land.lhs.true, label %if.end35, !dbg !6459

land.lhs.true:                                    ; preds = %if.end24
  %31 = load ptr, ptr %dtd.addr, align 8, !dbg !6460, !tbaa !1471
  %elements = getelementptr inbounds %struct._xmlDtd, ptr %31, i32 0, i32 10, !dbg !6461
  %32 = load ptr, ptr %elements, align 8, !dbg !6461, !tbaa !6462
  %cmp26 = icmp eq ptr %32, null, !dbg !6463
  br i1 %cmp26, label %land.lhs.true27, label %if.end35, !dbg !6464

land.lhs.true27:                                  ; preds = %land.lhs.true
  %33 = load ptr, ptr %dtd.addr, align 8, !dbg !6465, !tbaa !1471
  %attributes = getelementptr inbounds %struct._xmlDtd, ptr %33, i32 0, i32 11, !dbg !6466
  %34 = load ptr, ptr %attributes, align 8, !dbg !6466, !tbaa !6467
  %cmp28 = icmp eq ptr %34, null, !dbg !6468
  br i1 %cmp28, label %land.lhs.true29, label %if.end35, !dbg !6469

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %35 = load ptr, ptr %dtd.addr, align 8, !dbg !6470, !tbaa !1471
  %notations = getelementptr inbounds %struct._xmlDtd, ptr %35, i32 0, i32 9, !dbg !6471
  %36 = load ptr, ptr %notations, align 8, !dbg !6471, !tbaa !6472
  %cmp30 = icmp eq ptr %36, null, !dbg !6473
  br i1 %cmp30, label %land.lhs.true31, label %if.end35, !dbg !6474

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %37 = load ptr, ptr %dtd.addr, align 8, !dbg !6475, !tbaa !1471
  %pentities = getelementptr inbounds %struct._xmlDtd, ptr %37, i32 0, i32 15, !dbg !6476
  %38 = load ptr, ptr %pentities, align 8, !dbg !6476, !tbaa !6477
  %cmp32 = icmp eq ptr %38, null, !dbg !6478
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !6479

if.then33:                                        ; preds = %land.lhs.true31
  %39 = load ptr, ptr %buf, align 8, !dbg !6480, !tbaa !1471
  %call34 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %39, i32 noundef 1, ptr noundef @.str.44), !dbg !6482
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6483

if.end35:                                         ; preds = %land.lhs.true31, %land.lhs.true29, %land.lhs.true27, %land.lhs.true, %if.end24
  %40 = load ptr, ptr %buf, align 8, !dbg !6484, !tbaa !1471
  %call36 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %40, i32 noundef 3, ptr noundef @.str.49), !dbg !6485
  %41 = load ptr, ptr %dtd.addr, align 8, !dbg !6486, !tbaa !1471
  %notations37 = getelementptr inbounds %struct._xmlDtd, ptr %41, i32 0, i32 9, !dbg !6488
  %42 = load ptr, ptr %notations37, align 8, !dbg !6488, !tbaa !6472
  %cmp38 = icmp ne ptr %42, null, !dbg !6489
  br i1 %cmp38, label %land.lhs.true39, label %if.end47, !dbg !6490

land.lhs.true39:                                  ; preds = %if.end35
  %43 = load ptr, ptr %dtd.addr, align 8, !dbg !6491, !tbaa !1471
  %doc = getelementptr inbounds %struct._xmlDtd, ptr %43, i32 0, i32 8, !dbg !6492
  %44 = load ptr, ptr %doc, align 8, !dbg !6492, !tbaa !6493
  %cmp40 = icmp eq ptr %44, null, !dbg !6494
  br i1 %cmp40, label %if.then44, label %lor.lhs.false41, !dbg !6495

lor.lhs.false41:                                  ; preds = %land.lhs.true39
  %45 = load ptr, ptr %dtd.addr, align 8, !dbg !6496, !tbaa !1471
  %doc42 = getelementptr inbounds %struct._xmlDtd, ptr %45, i32 0, i32 8, !dbg !6497
  %46 = load ptr, ptr %doc42, align 8, !dbg !6497, !tbaa !6493
  %intSubset = getelementptr inbounds %struct._xmlDoc, ptr %46, i32 0, i32 11, !dbg !6498
  %47 = load ptr, ptr %intSubset, align 8, !dbg !6498, !tbaa !6499
  %48 = load ptr, ptr %dtd.addr, align 8, !dbg !6500, !tbaa !1471
  %cmp43 = icmp eq ptr %47, %48, !dbg !6501
  br i1 %cmp43, label %if.then44, label %if.end47, !dbg !6502

if.then44:                                        ; preds = %lor.lhs.false41, %land.lhs.true39
  %49 = load ptr, ptr %buf, align 8, !dbg !6503, !tbaa !1471
  %buffer45 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %49, i32 0, i32 4, !dbg !6505
  %50 = load ptr, ptr %buffer45, align 8, !dbg !6505, !tbaa !1760
  %51 = load ptr, ptr %dtd.addr, align 8, !dbg !6506, !tbaa !1471
  %notations46 = getelementptr inbounds %struct._xmlDtd, ptr %51, i32 0, i32 9, !dbg !6507
  %52 = load ptr, ptr %notations46, align 8, !dbg !6507, !tbaa !6472
  call void @xmlBufDumpNotationTable(ptr noundef %50, ptr noundef %52), !dbg !6508
  br label %if.end47, !dbg !6509

if.end47:                                         ; preds = %if.then44, %lor.lhs.false41, %if.end35
  %53 = load ptr, ptr %ctxt.addr, align 8, !dbg !6510, !tbaa !1471
  %format48 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %53, i32 0, i32 9, !dbg !6511
  %54 = load i32, ptr %format48, align 8, !dbg !6511, !tbaa !1732
  store i32 %54, ptr %format, align 4, !dbg !6512, !tbaa !1775
  %55 = load ptr, ptr %ctxt.addr, align 8, !dbg !6513, !tbaa !1471
  %level49 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %55, i32 0, i32 8, !dbg !6514
  %56 = load i32, ptr %level49, align 4, !dbg !6514, !tbaa !2512
  store i32 %56, ptr %level, align 4, !dbg !6515, !tbaa !1775
  %57 = load ptr, ptr %ctxt.addr, align 8, !dbg !6516, !tbaa !1471
  %format50 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %57, i32 0, i32 9, !dbg !6517
  store i32 0, ptr %format50, align 8, !dbg !6518, !tbaa !1732
  %58 = load ptr, ptr %ctxt.addr, align 8, !dbg !6519, !tbaa !1471
  %level51 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %58, i32 0, i32 8, !dbg !6520
  store i32 -1, ptr %level51, align 4, !dbg !6521, !tbaa !2512
  %59 = load ptr, ptr %ctxt.addr, align 8, !dbg !6522, !tbaa !1471
  %60 = load ptr, ptr %dtd.addr, align 8, !dbg !6523, !tbaa !1471
  %children = getelementptr inbounds %struct._xmlDtd, ptr %60, i32 0, i32 3, !dbg !6524
  %61 = load ptr, ptr %children, align 8, !dbg !6524, !tbaa !6525
  call void @xmlNodeListDumpOutput(ptr noundef %59, ptr noundef %61), !dbg !6526
  %62 = load i32, ptr %format, align 4, !dbg !6527, !tbaa !1775
  %63 = load ptr, ptr %ctxt.addr, align 8, !dbg !6528, !tbaa !1471
  %format52 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %63, i32 0, i32 9, !dbg !6529
  store i32 %62, ptr %format52, align 8, !dbg !6530, !tbaa !1732
  %64 = load i32, ptr %level, align 4, !dbg !6531, !tbaa !1775
  %65 = load ptr, ptr %ctxt.addr, align 8, !dbg !6532, !tbaa !1471
  %level53 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %65, i32 0, i32 8, !dbg !6533
  store i32 %64, ptr %level53, align 4, !dbg !6534, !tbaa !2512
  %66 = load ptr, ptr %buf, align 8, !dbg !6535, !tbaa !1471
  %call54 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %66, i32 noundef 2, ptr noundef @.str.50), !dbg !6536
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6537
  br label %cleanup, !dbg !6537

cleanup:                                          ; preds = %if.end47, %if.then33, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %level) #6, !dbg !6537
  call void @llvm.lifetime.end.p0(i64 4, ptr %format) #6, !dbg !6537
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !6537
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !6537

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlNodeListDumpOutput(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6538 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6540, metadata !DIExpression()), !dbg !6543
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6541, metadata !DIExpression()), !dbg !6544
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !6545
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !6542, metadata !DIExpression()), !dbg !6546
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !6547, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !6549
  br i1 %cmp, label %if.then, label %if.end, !dbg !6550

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6551

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !6552, !tbaa !1471
  %buf1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !6553
  %2 = load ptr, ptr %buf1, align 8, !dbg !6553, !tbaa !1798
  store ptr %2, ptr %buf, align 8, !dbg !6554, !tbaa !1471
  br label %while.cond, !dbg !6555

while.cond:                                       ; preds = %if.end21, %if.end
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !6556, !tbaa !1471
  %cmp2 = icmp ne ptr %3, null, !dbg !6557
  br i1 %cmp2, label %while.body, label %while.end, !dbg !6555

while.body:                                       ; preds = %while.cond
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !6558, !tbaa !1471
  %format = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 9, !dbg !6561
  %5 = load i32, ptr %format, align 8, !dbg !6561, !tbaa !1732
  %cmp3 = icmp eq i32 %5, 1, !dbg !6562
  br i1 %cmp3, label %land.lhs.true, label %if.end16, !dbg !6563

land.lhs.true:                                    ; preds = %while.body
  %call = call ptr @__xmlIndentTreeOutput(), !dbg !6564
  %6 = load i32, ptr %call, align 4, !dbg !6564, !tbaa !1775
  %tobool = icmp ne i32 %6, 0, !dbg !6565
  br i1 %tobool, label %land.lhs.true4, label %if.end16, !dbg !6566

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load ptr, ptr %cur.addr, align 8, !dbg !6567, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlNode, ptr %7, i32 0, i32 1, !dbg !6568
  %8 = load i32, ptr %type, align 8, !dbg !6568, !tbaa !2618
  %cmp5 = icmp eq i32 %8, 1, !dbg !6569
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !6570

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %9 = load ptr, ptr %cur.addr, align 8, !dbg !6571, !tbaa !1471
  %type6 = getelementptr inbounds %struct._xmlNode, ptr %9, i32 0, i32 1, !dbg !6572
  %10 = load i32, ptr %type6, align 8, !dbg !6572, !tbaa !2618
  %cmp7 = icmp eq i32 %10, 8, !dbg !6573
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !6574

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %11 = load ptr, ptr %cur.addr, align 8, !dbg !6575, !tbaa !1471
  %type9 = getelementptr inbounds %struct._xmlNode, ptr %11, i32 0, i32 1, !dbg !6576
  %12 = load i32, ptr %type9, align 8, !dbg !6576, !tbaa !2618
  %cmp10 = icmp eq i32 %12, 7, !dbg !6577
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !6578

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %land.lhs.true4
  %13 = load ptr, ptr %buf, align 8, !dbg !6579, !tbaa !1471
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !6580, !tbaa !1471
  %indent_size = getelementptr inbounds %struct._xmlSaveCtxt, ptr %14, i32 0, i32 12, !dbg !6581
  %15 = load i32, ptr %indent_size, align 8, !dbg !6581, !tbaa !3152
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !6582, !tbaa !1471
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %16, i32 0, i32 8, !dbg !6583
  %17 = load i32, ptr %level, align 4, !dbg !6583, !tbaa !2512
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !6584, !tbaa !1471
  %indent_nr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %18, i32 0, i32 11, !dbg !6585
  %19 = load i32, ptr %indent_nr, align 4, !dbg !6585, !tbaa !3157
  %cmp12 = icmp sgt i32 %17, %19, !dbg !6586
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !6582

cond.true:                                        ; preds = %if.then11
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !6587, !tbaa !1471
  %indent_nr13 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %20, i32 0, i32 11, !dbg !6588
  %21 = load i32, ptr %indent_nr13, align 4, !dbg !6588, !tbaa !3157
  br label %cond.end, !dbg !6582

cond.false:                                       ; preds = %if.then11
  %22 = load ptr, ptr %ctxt.addr, align 8, !dbg !6589, !tbaa !1471
  %level14 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %22, i32 0, i32 8, !dbg !6590
  %23 = load i32, ptr %level14, align 4, !dbg !6590, !tbaa !2512
  br label %cond.end, !dbg !6582

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %23, %cond.false ], !dbg !6582
  %mul = mul nsw i32 %15, %cond, !dbg !6591
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !6592, !tbaa !1471
  %indent = getelementptr inbounds %struct._xmlSaveCtxt, ptr %24, i32 0, i32 10, !dbg !6593
  %arraydecay = getelementptr inbounds [61 x i8], ptr %indent, i64 0, i64 0, !dbg !6592
  %call15 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %13, i32 noundef %mul, ptr noundef %arraydecay), !dbg !6594
  br label %if.end16, !dbg !6594

if.end16:                                         ; preds = %cond.end, %lor.lhs.false8, %land.lhs.true, %while.body
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !6595, !tbaa !1471
  %26 = load ptr, ptr %cur.addr, align 8, !dbg !6596, !tbaa !1471
  call void @xmlNodeDumpOutputInternal(ptr noundef %25, ptr noundef %26), !dbg !6597
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !6598, !tbaa !1471
  %format17 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %27, i32 0, i32 9, !dbg !6600
  %28 = load i32, ptr %format17, align 8, !dbg !6600, !tbaa !1732
  %cmp18 = icmp eq i32 %28, 1, !dbg !6601
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !6602

if.then19:                                        ; preds = %if.end16
  %29 = load ptr, ptr %buf, align 8, !dbg !6603, !tbaa !1471
  %call20 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %29, i32 noundef 1, ptr noundef @.str.21), !dbg !6605
  br label %if.end21, !dbg !6606

if.end21:                                         ; preds = %if.then19, %if.end16
  %30 = load ptr, ptr %cur.addr, align 8, !dbg !6607, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNode, ptr %30, i32 0, i32 6, !dbg !6608
  %31 = load ptr, ptr %next, align 8, !dbg !6608, !tbaa !2526
  store ptr %31, ptr %cur.addr, align 8, !dbg !6609, !tbaa !1471
  br label %while.cond, !dbg !6555, !llvm.loop !6610

while.end:                                        ; preds = %while.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6612
  br label %cleanup, !dbg !6612

cleanup:                                          ; preds = %while.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !6612
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !6612

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !6613 hidden i32 @xmlOutputBufferWriteEscape__internal_alias(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @xmlAttrDumpOutput(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6616 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6620, metadata !DIExpression()), !dbg !6623
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6621, metadata !DIExpression()), !dbg !6624
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !6625
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !6622, metadata !DIExpression()), !dbg !6626
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !6627, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !6629
  br i1 %cmp, label %if.then, label %if.end, !dbg !6630

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6631

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !6632, !tbaa !1471
  %buf1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !6633
  %2 = load ptr, ptr %buf1, align 8, !dbg !6633, !tbaa !1798
  store ptr %2, ptr %buf, align 8, !dbg !6634, !tbaa !1471
  %3 = load ptr, ptr %buf, align 8, !dbg !6635, !tbaa !1471
  %cmp2 = icmp eq ptr %3, null, !dbg !6637
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6638

if.then3:                                         ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6639

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !6640, !tbaa !1471
  %format = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 9, !dbg !6642
  %5 = load i32, ptr %format, align 8, !dbg !6642, !tbaa !1732
  %cmp5 = icmp eq i32 %5, 2, !dbg !6643
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6644

if.then6:                                         ; preds = %if.end4
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !6645, !tbaa !1471
  call void @xmlOutputBufferWriteWSNonSig(ptr noundef %6, i32 noundef 2), !dbg !6646
  br label %if.end7, !dbg !6646

if.else:                                          ; preds = %if.end4
  %7 = load ptr, ptr %buf, align 8, !dbg !6647, !tbaa !1471
  %call = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %7, i32 noundef 1, ptr noundef @.str.17), !dbg !6648
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %8 = load ptr, ptr %cur.addr, align 8, !dbg !6649, !tbaa !1471
  %ns = getelementptr inbounds %struct._xmlAttr, ptr %8, i32 0, i32 9, !dbg !6651
  %9 = load ptr, ptr %ns, align 8, !dbg !6651, !tbaa !6652
  %cmp8 = icmp ne ptr %9, null, !dbg !6654
  br i1 %cmp8, label %land.lhs.true, label %if.end16, !dbg !6655

land.lhs.true:                                    ; preds = %if.end7
  %10 = load ptr, ptr %cur.addr, align 8, !dbg !6656, !tbaa !1471
  %ns9 = getelementptr inbounds %struct._xmlAttr, ptr %10, i32 0, i32 9, !dbg !6657
  %11 = load ptr, ptr %ns9, align 8, !dbg !6657, !tbaa !6652
  %prefix = getelementptr inbounds %struct._xmlNs, ptr %11, i32 0, i32 3, !dbg !6658
  %12 = load ptr, ptr %prefix, align 8, !dbg !6658, !tbaa !1722
  %cmp10 = icmp ne ptr %12, null, !dbg !6659
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !6660

if.then11:                                        ; preds = %land.lhs.true
  %13 = load ptr, ptr %buf, align 8, !dbg !6661, !tbaa !1471
  %14 = load ptr, ptr %cur.addr, align 8, !dbg !6663, !tbaa !1471
  %ns12 = getelementptr inbounds %struct._xmlAttr, ptr %14, i32 0, i32 9, !dbg !6664
  %15 = load ptr, ptr %ns12, align 8, !dbg !6664, !tbaa !6652
  %prefix13 = getelementptr inbounds %struct._xmlNs, ptr %15, i32 0, i32 3, !dbg !6665
  %16 = load ptr, ptr %prefix13, align 8, !dbg !6665, !tbaa !1722
  %call14 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %13, ptr noundef %16), !dbg !6666
  %17 = load ptr, ptr %buf, align 8, !dbg !6667, !tbaa !1471
  %call15 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %17, i32 noundef 1, ptr noundef @.str.42), !dbg !6668
  br label %if.end16, !dbg !6669

if.end16:                                         ; preds = %if.then11, %land.lhs.true, %if.end7
  %18 = load ptr, ptr %buf, align 8, !dbg !6670, !tbaa !1471
  %19 = load ptr, ptr %cur.addr, align 8, !dbg !6671, !tbaa !1471
  %name = getelementptr inbounds %struct._xmlAttr, ptr %19, i32 0, i32 2, !dbg !6672
  %20 = load ptr, ptr %name, align 8, !dbg !6672, !tbaa !6673
  %call17 = call i32 @xmlOutputBufferWriteString__internal_alias(ptr noundef %18, ptr noundef %20), !dbg !6674
  %21 = load ptr, ptr %buf, align 8, !dbg !6675, !tbaa !1471
  %call18 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %21, i32 noundef 2, ptr noundef @.str.51), !dbg !6676
  %22 = load ptr, ptr %buf, align 8, !dbg !6677, !tbaa !1471
  %23 = load ptr, ptr %cur.addr, align 8, !dbg !6678, !tbaa !1471
  call void @xmlAttrSerializeContent(ptr noundef %22, ptr noundef %23), !dbg !6679
  %24 = load ptr, ptr %buf, align 8, !dbg !6680, !tbaa !1471
  %call19 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %24, i32 noundef 1, ptr noundef @.str.52), !dbg !6681
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6682
  br label %cleanup, !dbg !6682

cleanup:                                          ; preds = %if.end16, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !6682
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !6682

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlNsDumpOutputCtxt(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6683 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6687, metadata !DIExpression()), !dbg !6689
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6688, metadata !DIExpression()), !dbg !6690
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !6691, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %0, i32 0, i32 6, !dbg !6692
  %1 = load ptr, ptr %buf, align 8, !dbg !6692, !tbaa !1798
  %2 = load ptr, ptr %cur.addr, align 8, !dbg !6693, !tbaa !1471
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !6694, !tbaa !1471
  call void @xmlNsDumpOutput(ptr noundef %1, ptr noundef %2, ptr noundef %3), !dbg !6695
  ret void, !dbg !6696
}

; Function Attrs: nounwind uwtable
define internal void @xmlNsListDumpOutputCtxt(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6697 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6699, metadata !DIExpression()), !dbg !6701
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6700, metadata !DIExpression()), !dbg !6702
  br label %while.cond, !dbg !6703

while.cond:                                       ; preds = %while.body, %entry
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !6704, !tbaa !1471
  %cmp = icmp ne ptr %0, null, !dbg !6705
  br i1 %cmp, label %while.body, label %while.end, !dbg !6703

while.body:                                       ; preds = %while.cond
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !6706, !tbaa !1471
  %buf = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !6708
  %2 = load ptr, ptr %buf, align 8, !dbg !6708, !tbaa !1798
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !6709, !tbaa !1471
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !6710, !tbaa !1471
  call void @xmlNsDumpOutput(ptr noundef %2, ptr noundef %3, ptr noundef %4), !dbg !6711
  %5 = load ptr, ptr %cur.addr, align 8, !dbg !6712, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNs, ptr %5, i32 0, i32 0, !dbg !6713
  %6 = load ptr, ptr %next, align 8, !dbg !6713, !tbaa !1682
  store ptr %6, ptr %cur.addr, align 8, !dbg !6714, !tbaa !1471
  br label %while.cond, !dbg !6703, !llvm.loop !6715

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6717
}

; Function Attrs: nounwind uwtable
define internal void @xmlAttrListDumpOutput(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6718 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6720, metadata !DIExpression()), !dbg !6722
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6721, metadata !DIExpression()), !dbg !6723
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !6724, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !6726
  br i1 %cmp, label %if.then, label %if.end, !dbg !6727

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !6728

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !6729

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load ptr, ptr %cur.addr, align 8, !dbg !6730, !tbaa !1471
  %cmp1 = icmp ne ptr %1, null, !dbg !6731
  br i1 %cmp1, label %while.body, label %while.end, !dbg !6729

while.body:                                       ; preds = %while.cond
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !6732, !tbaa !1471
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !6734, !tbaa !1471
  call void @xmlAttrDumpOutput(ptr noundef %2, ptr noundef %3), !dbg !6735
  %4 = load ptr, ptr %cur.addr, align 8, !dbg !6736, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlAttr, ptr %4, i32 0, i32 6, !dbg !6737
  %5 = load ptr, ptr %next, align 8, !dbg !6737, !tbaa !6738
  store ptr %5, ptr %cur.addr, align 8, !dbg !6739, !tbaa !1471
  br label %while.cond, !dbg !6729, !llvm.loop !6740

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !6742
}

declare !dbg !6743 ptr @__xmlIndentTreeOutput() #1

declare !dbg !6747 hidden void @htmlNodeDumpFormatOutput__internal_alias(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal void @xmlAttrSerializeContent(ptr noundef %buf, ptr noundef %attr) #0 !dbg !6750 {
entry:
  %buf.addr = alloca ptr, align 8
  %attr.addr = alloca ptr, align 8
  %children = alloca ptr, align 8
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !6754, metadata !DIExpression()), !dbg !6757
  store ptr %attr, ptr %attr.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %attr.addr, metadata !6755, metadata !DIExpression()), !dbg !6758
  call void @llvm.lifetime.start.p0(i64 8, ptr %children) #6, !dbg !6759
  tail call void @llvm.dbg.declare(metadata ptr %children, metadata !6756, metadata !DIExpression()), !dbg !6760
  %0 = load ptr, ptr %attr.addr, align 8, !dbg !6761, !tbaa !1471
  %children1 = getelementptr inbounds %struct._xmlAttr, ptr %0, i32 0, i32 3, !dbg !6762
  %1 = load ptr, ptr %children1, align 8, !dbg !6762, !tbaa !6763
  store ptr %1, ptr %children, align 8, !dbg !6764, !tbaa !1471
  br label %while.cond, !dbg !6765

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load ptr, ptr %children, align 8, !dbg !6766, !tbaa !1471
  %cmp = icmp ne ptr %2, null, !dbg !6767
  br i1 %cmp, label %while.body, label %while.end, !dbg !6765

while.body:                                       ; preds = %while.cond
  %3 = load ptr, ptr %children, align 8, !dbg !6768, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlNode, ptr %3, i32 0, i32 1, !dbg !6770
  %4 = load i32, ptr %type, align 8, !dbg !6770, !tbaa !2618
  switch i32 %4, label %sw.default [
    i32 3, label %sw.bb
    i32 5, label %sw.bb2
  ], !dbg !6771

sw.bb:                                            ; preds = %while.body
  %5 = load ptr, ptr %buf.addr, align 8, !dbg !6772, !tbaa !1471
  %buffer = getelementptr inbounds %struct._xmlOutputBuffer, ptr %5, i32 0, i32 4, !dbg !6774
  %6 = load ptr, ptr %buffer, align 8, !dbg !6774, !tbaa !1760
  %7 = load ptr, ptr %attr.addr, align 8, !dbg !6775, !tbaa !1471
  %doc = getelementptr inbounds %struct._xmlAttr, ptr %7, i32 0, i32 8, !dbg !6776
  %8 = load ptr, ptr %doc, align 8, !dbg !6776, !tbaa !6777
  %9 = load ptr, ptr %attr.addr, align 8, !dbg !6778, !tbaa !1471
  %10 = load ptr, ptr %children, align 8, !dbg !6779, !tbaa !1471
  %content = getelementptr inbounds %struct._xmlNode, ptr %10, i32 0, i32 10, !dbg !6780
  %11 = load ptr, ptr %content, align 8, !dbg !6780, !tbaa !2745
  call void @xmlBufAttrSerializeTxtContent(ptr noundef %6, ptr noundef %8, ptr noundef %9, ptr noundef %11), !dbg !6781
  br label %sw.epilog, !dbg !6782

sw.bb2:                                           ; preds = %while.body
  %12 = load ptr, ptr %buf.addr, align 8, !dbg !6783, !tbaa !1471
  %buffer3 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %12, i32 0, i32 4, !dbg !6784
  %13 = load ptr, ptr %buffer3, align 8, !dbg !6784, !tbaa !1760
  %call = call i32 @xmlBufAdd(ptr noundef %13, ptr noundef @.str.36, i32 noundef 1), !dbg !6785
  %14 = load ptr, ptr %buf.addr, align 8, !dbg !6786, !tbaa !1471
  %buffer4 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %14, i32 0, i32 4, !dbg !6787
  %15 = load ptr, ptr %buffer4, align 8, !dbg !6787, !tbaa !1760
  %16 = load ptr, ptr %children, align 8, !dbg !6788, !tbaa !1471
  %name = getelementptr inbounds %struct._xmlNode, ptr %16, i32 0, i32 2, !dbg !6789
  %17 = load ptr, ptr %name, align 8, !dbg !6789, !tbaa !2752
  %18 = load ptr, ptr %children, align 8, !dbg !6790, !tbaa !1471
  %name5 = getelementptr inbounds %struct._xmlNode, ptr %18, i32 0, i32 2, !dbg !6791
  %19 = load ptr, ptr %name5, align 8, !dbg !6791, !tbaa !2752
  %call6 = call i32 @xmlStrlen__internal_alias(ptr noundef %19), !dbg !6792
  %call7 = call i32 @xmlBufAdd(ptr noundef %15, ptr noundef %17, i32 noundef %call6), !dbg !6793
  %20 = load ptr, ptr %buf.addr, align 8, !dbg !6794, !tbaa !1471
  %buffer8 = getelementptr inbounds %struct._xmlOutputBuffer, ptr %20, i32 0, i32 4, !dbg !6795
  %21 = load ptr, ptr %buffer8, align 8, !dbg !6795, !tbaa !1760
  %call9 = call i32 @xmlBufAdd(ptr noundef %21, ptr noundef @.str.37, i32 noundef 1), !dbg !6796
  br label %sw.epilog, !dbg !6797

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !6798

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %22 = load ptr, ptr %children, align 8, !dbg !6799, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNode, ptr %22, i32 0, i32 6, !dbg !6800
  %23 = load ptr, ptr %next, align 8, !dbg !6800, !tbaa !2526
  store ptr %23, ptr %children, align 8, !dbg !6801, !tbaa !1471
  br label %while.cond, !dbg !6765, !llvm.loop !6802

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %children) #6, !dbg !6804
  ret void, !dbg !6804
}

declare !dbg !6805 hidden i32 @xmlStrlen__internal_alias(ptr noundef) #1

declare !dbg !6808 void @__xmlSimpleError(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !6811 ptr @__xmlTreeIndentString() #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

declare !dbg !6815 ptr @__xmlSaveNoEmptyTags() #1

; Function Attrs: nounwind uwtable
define internal void @xhtmlNodeListDumpOutput(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6816 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6818, metadata !DIExpression()), !dbg !6821
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6819, metadata !DIExpression()), !dbg !6822
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !6823
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !6820, metadata !DIExpression()), !dbg !6824
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !6825, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !6827
  br i1 %cmp, label %if.then, label %if.end, !dbg !6828

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6829

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !6830, !tbaa !1471
  %buf1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !6831
  %2 = load ptr, ptr %buf1, align 8, !dbg !6831, !tbaa !1798
  store ptr %2, ptr %buf, align 8, !dbg !6832, !tbaa !1471
  br label %while.cond, !dbg !6833

while.cond:                                       ; preds = %if.end16, %if.end
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !6834, !tbaa !1471
  %cmp2 = icmp ne ptr %3, null, !dbg !6835
  br i1 %cmp2, label %while.body, label %while.end, !dbg !6833

while.body:                                       ; preds = %while.cond
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !6836, !tbaa !1471
  %format = getelementptr inbounds %struct._xmlSaveCtxt, ptr %4, i32 0, i32 9, !dbg !6839
  %5 = load i32, ptr %format, align 8, !dbg !6839, !tbaa !1732
  %cmp3 = icmp eq i32 %5, 1, !dbg !6840
  br i1 %cmp3, label %land.lhs.true, label %if.end11, !dbg !6841

land.lhs.true:                                    ; preds = %while.body
  %call = call ptr @__xmlIndentTreeOutput(), !dbg !6842
  %6 = load i32, ptr %call, align 4, !dbg !6842, !tbaa !1775
  %tobool = icmp ne i32 %6, 0, !dbg !6843
  br i1 %tobool, label %land.lhs.true4, label %if.end11, !dbg !6844

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load ptr, ptr %cur.addr, align 8, !dbg !6845, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlNode, ptr %7, i32 0, i32 1, !dbg !6846
  %8 = load i32, ptr %type, align 8, !dbg !6846, !tbaa !2618
  %cmp5 = icmp eq i32 %8, 1, !dbg !6847
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !6848

if.then6:                                         ; preds = %land.lhs.true4
  %9 = load ptr, ptr %buf, align 8, !dbg !6849, !tbaa !1471
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !6850, !tbaa !1471
  %indent_size = getelementptr inbounds %struct._xmlSaveCtxt, ptr %10, i32 0, i32 12, !dbg !6851
  %11 = load i32, ptr %indent_size, align 8, !dbg !6851, !tbaa !3152
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !6852, !tbaa !1471
  %level = getelementptr inbounds %struct._xmlSaveCtxt, ptr %12, i32 0, i32 8, !dbg !6853
  %13 = load i32, ptr %level, align 4, !dbg !6853, !tbaa !2512
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !6854, !tbaa !1471
  %indent_nr = getelementptr inbounds %struct._xmlSaveCtxt, ptr %14, i32 0, i32 11, !dbg !6855
  %15 = load i32, ptr %indent_nr, align 4, !dbg !6855, !tbaa !3157
  %cmp7 = icmp sgt i32 %13, %15, !dbg !6856
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !6852

cond.true:                                        ; preds = %if.then6
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !6857, !tbaa !1471
  %indent_nr8 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %16, i32 0, i32 11, !dbg !6858
  %17 = load i32, ptr %indent_nr8, align 4, !dbg !6858, !tbaa !3157
  br label %cond.end, !dbg !6852

cond.false:                                       ; preds = %if.then6
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !6859, !tbaa !1471
  %level9 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %18, i32 0, i32 8, !dbg !6860
  %19 = load i32, ptr %level9, align 4, !dbg !6860, !tbaa !2512
  br label %cond.end, !dbg !6852

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %19, %cond.false ], !dbg !6852
  %mul = mul nsw i32 %11, %cond, !dbg !6861
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !6862, !tbaa !1471
  %indent = getelementptr inbounds %struct._xmlSaveCtxt, ptr %20, i32 0, i32 10, !dbg !6863
  %arraydecay = getelementptr inbounds [61 x i8], ptr %indent, i64 0, i64 0, !dbg !6862
  %call10 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %9, i32 noundef %mul, ptr noundef %arraydecay), !dbg !6864
  br label %if.end11, !dbg !6864

if.end11:                                         ; preds = %cond.end, %land.lhs.true4, %land.lhs.true, %while.body
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !6865, !tbaa !1471
  %22 = load ptr, ptr %cur.addr, align 8, !dbg !6866, !tbaa !1471
  call void @xhtmlNodeDumpOutput(ptr noundef %21, ptr noundef %22), !dbg !6867
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !6868, !tbaa !1471
  %format12 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %23, i32 0, i32 9, !dbg !6870
  %24 = load i32, ptr %format12, align 8, !dbg !6870, !tbaa !1732
  %cmp13 = icmp eq i32 %24, 1, !dbg !6871
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !6872

if.then14:                                        ; preds = %if.end11
  %25 = load ptr, ptr %buf, align 8, !dbg !6873, !tbaa !1471
  %call15 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %25, i32 noundef 1, ptr noundef @.str.21), !dbg !6875
  br label %if.end16, !dbg !6876

if.end16:                                         ; preds = %if.then14, %if.end11
  %26 = load ptr, ptr %cur.addr, align 8, !dbg !6877, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlNode, ptr %26, i32 0, i32 6, !dbg !6878
  %27 = load ptr, ptr %next, align 8, !dbg !6878, !tbaa !2526
  store ptr %27, ptr %cur.addr, align 8, !dbg !6879, !tbaa !1471
  br label %while.cond, !dbg !6833, !llvm.loop !6880

while.end:                                        ; preds = %while.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6882
  br label %cleanup, !dbg !6882

cleanup:                                          ; preds = %while.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !6882
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !6882

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xhtmlAttrListDumpOutput(ptr noundef %ctxt, ptr noundef %cur) #0 !dbg !6883 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur.addr = alloca ptr, align 8
  %xml_lang = alloca ptr, align 8
  %lang = alloca ptr, align 8
  %name = alloca ptr, align 8
  %id = alloca ptr, align 8
  %parent = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6885, metadata !DIExpression()), !dbg !6893
  store ptr %cur, ptr %cur.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %cur.addr, metadata !6886, metadata !DIExpression()), !dbg !6894
  call void @llvm.lifetime.start.p0(i64 8, ptr %xml_lang) #6, !dbg !6895
  tail call void @llvm.dbg.declare(metadata ptr %xml_lang, metadata !6887, metadata !DIExpression()), !dbg !6896
  store ptr null, ptr %xml_lang, align 8, !dbg !6896, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %lang) #6, !dbg !6897
  tail call void @llvm.dbg.declare(metadata ptr %lang, metadata !6888, metadata !DIExpression()), !dbg !6898
  store ptr null, ptr %lang, align 8, !dbg !6898, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #6, !dbg !6899
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !6889, metadata !DIExpression()), !dbg !6900
  store ptr null, ptr %name, align 8, !dbg !6900, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %id) #6, !dbg !6901
  tail call void @llvm.dbg.declare(metadata ptr %id, metadata !6890, metadata !DIExpression()), !dbg !6902
  store ptr null, ptr %id, align 8, !dbg !6902, !tbaa !1471
  call void @llvm.lifetime.start.p0(i64 8, ptr %parent) #6, !dbg !6903
  tail call void @llvm.dbg.declare(metadata ptr %parent, metadata !6891, metadata !DIExpression()), !dbg !6904
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #6, !dbg !6905
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !6892, metadata !DIExpression()), !dbg !6906
  %0 = load ptr, ptr %cur.addr, align 8, !dbg !6907, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !6909
  br i1 %cmp, label %if.then, label %if.end, !dbg !6910

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6911

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !6912, !tbaa !1471
  %buf1 = getelementptr inbounds %struct._xmlSaveCtxt, ptr %1, i32 0, i32 6, !dbg !6913
  %2 = load ptr, ptr %buf1, align 8, !dbg !6913, !tbaa !1798
  store ptr %2, ptr %buf, align 8, !dbg !6914, !tbaa !1471
  %3 = load ptr, ptr %cur.addr, align 8, !dbg !6915, !tbaa !1471
  %parent2 = getelementptr inbounds %struct._xmlAttr, ptr %3, i32 0, i32 5, !dbg !6916
  %4 = load ptr, ptr %parent2, align 8, !dbg !6916, !tbaa !6917
  store ptr %4, ptr %parent, align 8, !dbg !6918, !tbaa !1471
  br label %while.cond, !dbg !6919

while.cond:                                       ; preds = %if.end71, %if.end
  %5 = load ptr, ptr %cur.addr, align 8, !dbg !6920, !tbaa !1471
  %cmp3 = icmp ne ptr %5, null, !dbg !6921
  br i1 %cmp3, label %while.body, label %while.end, !dbg !6919

while.body:                                       ; preds = %while.cond
  %6 = load ptr, ptr %cur.addr, align 8, !dbg !6922, !tbaa !1471
  %ns = getelementptr inbounds %struct._xmlAttr, ptr %6, i32 0, i32 9, !dbg !6925
  %7 = load ptr, ptr %ns, align 8, !dbg !6925, !tbaa !6652
  %cmp4 = icmp eq ptr %7, null, !dbg !6926
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !6927

land.lhs.true:                                    ; preds = %while.body
  %8 = load ptr, ptr %cur.addr, align 8, !dbg !6928, !tbaa !1471
  %name5 = getelementptr inbounds %struct._xmlAttr, ptr %8, i32 0, i32 2, !dbg !6929
  %9 = load ptr, ptr %name5, align 8, !dbg !6929, !tbaa !6673
  %call = call i32 @xmlStrEqual__internal_alias(ptr noundef %9, ptr noundef @.str.67), !dbg !6930
  %tobool = icmp ne i32 %call, 0, !dbg !6930
  br i1 %tobool, label %if.then6, label %if.else, !dbg !6931

if.then6:                                         ; preds = %land.lhs.true
  %10 = load ptr, ptr %cur.addr, align 8, !dbg !6932, !tbaa !1471
  store ptr %10, ptr %id, align 8, !dbg !6933, !tbaa !1471
  br label %if.end71, !dbg !6934

if.else:                                          ; preds = %land.lhs.true, %while.body
  %11 = load ptr, ptr %cur.addr, align 8, !dbg !6935, !tbaa !1471
  %ns7 = getelementptr inbounds %struct._xmlAttr, ptr %11, i32 0, i32 9, !dbg !6937
  %12 = load ptr, ptr %ns7, align 8, !dbg !6937, !tbaa !6652
  %cmp8 = icmp eq ptr %12, null, !dbg !6938
  br i1 %cmp8, label %land.lhs.true9, label %if.else14, !dbg !6939

land.lhs.true9:                                   ; preds = %if.else
  %13 = load ptr, ptr %cur.addr, align 8, !dbg !6940, !tbaa !1471
  %name10 = getelementptr inbounds %struct._xmlAttr, ptr %13, i32 0, i32 2, !dbg !6941
  %14 = load ptr, ptr %name10, align 8, !dbg !6941, !tbaa !6673
  %call11 = call i32 @xmlStrEqual__internal_alias(ptr noundef %14, ptr noundef @.str.68), !dbg !6942
  %tobool12 = icmp ne i32 %call11, 0, !dbg !6942
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !6943

if.then13:                                        ; preds = %land.lhs.true9
  %15 = load ptr, ptr %cur.addr, align 8, !dbg !6944, !tbaa !1471
  store ptr %15, ptr %name, align 8, !dbg !6945, !tbaa !1471
  br label %if.end70, !dbg !6946

if.else14:                                        ; preds = %land.lhs.true9, %if.else
  %16 = load ptr, ptr %cur.addr, align 8, !dbg !6947, !tbaa !1471
  %ns15 = getelementptr inbounds %struct._xmlAttr, ptr %16, i32 0, i32 9, !dbg !6949
  %17 = load ptr, ptr %ns15, align 8, !dbg !6949, !tbaa !6652
  %cmp16 = icmp eq ptr %17, null, !dbg !6950
  br i1 %cmp16, label %land.lhs.true17, label %if.else22, !dbg !6951

land.lhs.true17:                                  ; preds = %if.else14
  %18 = load ptr, ptr %cur.addr, align 8, !dbg !6952, !tbaa !1471
  %name18 = getelementptr inbounds %struct._xmlAttr, ptr %18, i32 0, i32 2, !dbg !6953
  %19 = load ptr, ptr %name18, align 8, !dbg !6953, !tbaa !6673
  %call19 = call i32 @xmlStrEqual__internal_alias(ptr noundef %19, ptr noundef @.str.69), !dbg !6954
  %tobool20 = icmp ne i32 %call19, 0, !dbg !6954
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !6955

if.then21:                                        ; preds = %land.lhs.true17
  %20 = load ptr, ptr %cur.addr, align 8, !dbg !6956, !tbaa !1471
  store ptr %20, ptr %lang, align 8, !dbg !6957, !tbaa !1471
  br label %if.end69, !dbg !6958

if.else22:                                        ; preds = %land.lhs.true17, %if.else14
  %21 = load ptr, ptr %cur.addr, align 8, !dbg !6959, !tbaa !1471
  %ns23 = getelementptr inbounds %struct._xmlAttr, ptr %21, i32 0, i32 9, !dbg !6961
  %22 = load ptr, ptr %ns23, align 8, !dbg !6961, !tbaa !6652
  %cmp24 = icmp ne ptr %22, null, !dbg !6962
  br i1 %cmp24, label %land.lhs.true25, label %if.else34, !dbg !6963

land.lhs.true25:                                  ; preds = %if.else22
  %23 = load ptr, ptr %cur.addr, align 8, !dbg !6964, !tbaa !1471
  %name26 = getelementptr inbounds %struct._xmlAttr, ptr %23, i32 0, i32 2, !dbg !6965
  %24 = load ptr, ptr %name26, align 8, !dbg !6965, !tbaa !6673
  %call27 = call i32 @xmlStrEqual__internal_alias(ptr noundef %24, ptr noundef @.str.69), !dbg !6966
  %tobool28 = icmp ne i32 %call27, 0, !dbg !6966
  br i1 %tobool28, label %land.lhs.true29, label %if.else34, !dbg !6967

land.lhs.true29:                                  ; preds = %land.lhs.true25
  %25 = load ptr, ptr %cur.addr, align 8, !dbg !6968, !tbaa !1471
  %ns30 = getelementptr inbounds %struct._xmlAttr, ptr %25, i32 0, i32 9, !dbg !6969
  %26 = load ptr, ptr %ns30, align 8, !dbg !6969, !tbaa !6652
  %prefix = getelementptr inbounds %struct._xmlNs, ptr %26, i32 0, i32 3, !dbg !6970
  %27 = load ptr, ptr %prefix, align 8, !dbg !6970, !tbaa !1722
  %call31 = call i32 @xmlStrEqual__internal_alias(ptr noundef %27, ptr noundef @.str.16), !dbg !6971
  %tobool32 = icmp ne i32 %call31, 0, !dbg !6971
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !6972

if.then33:                                        ; preds = %land.lhs.true29
  %28 = load ptr, ptr %cur.addr, align 8, !dbg !6973, !tbaa !1471
  store ptr %28, ptr %xml_lang, align 8, !dbg !6974, !tbaa !1471
  br label %if.end68, !dbg !6975

if.else34:                                        ; preds = %land.lhs.true29, %land.lhs.true25, %if.else22
  %29 = load ptr, ptr %cur.addr, align 8, !dbg !6976, !tbaa !1471
  %ns35 = getelementptr inbounds %struct._xmlAttr, ptr %29, i32 0, i32 9, !dbg !6978
  %30 = load ptr, ptr %ns35, align 8, !dbg !6978, !tbaa !6652
  %cmp36 = icmp eq ptr %30, null, !dbg !6979
  br i1 %cmp36, label %land.lhs.true37, label %if.end67, !dbg !6980

land.lhs.true37:                                  ; preds = %if.else34
  %31 = load ptr, ptr %cur.addr, align 8, !dbg !6981, !tbaa !1471
  %children = getelementptr inbounds %struct._xmlAttr, ptr %31, i32 0, i32 3, !dbg !6982
  %32 = load ptr, ptr %children, align 8, !dbg !6982, !tbaa !6763
  %cmp38 = icmp eq ptr %32, null, !dbg !6983
  br i1 %cmp38, label %land.lhs.true46, label %lor.lhs.false, !dbg !6984

lor.lhs.false:                                    ; preds = %land.lhs.true37
  %33 = load ptr, ptr %cur.addr, align 8, !dbg !6985, !tbaa !1471
  %children39 = getelementptr inbounds %struct._xmlAttr, ptr %33, i32 0, i32 3, !dbg !6986
  %34 = load ptr, ptr %children39, align 8, !dbg !6986, !tbaa !6763
  %content = getelementptr inbounds %struct._xmlNode, ptr %34, i32 0, i32 10, !dbg !6987
  %35 = load ptr, ptr %content, align 8, !dbg !6987, !tbaa !2745
  %cmp40 = icmp eq ptr %35, null, !dbg !6988
  br i1 %cmp40, label %land.lhs.true46, label %lor.lhs.false41, !dbg !6989

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %36 = load ptr, ptr %cur.addr, align 8, !dbg !6990, !tbaa !1471
  %children42 = getelementptr inbounds %struct._xmlAttr, ptr %36, i32 0, i32 3, !dbg !6991
  %37 = load ptr, ptr %children42, align 8, !dbg !6991, !tbaa !6763
  %content43 = getelementptr inbounds %struct._xmlNode, ptr %37, i32 0, i32 10, !dbg !6992
  %38 = load ptr, ptr %content43, align 8, !dbg !6992, !tbaa !2745
  %arrayidx = getelementptr inbounds i8, ptr %38, i64 0, !dbg !6990
  %39 = load i8, ptr %arrayidx, align 1, !dbg !6990, !tbaa !2345
  %conv = zext i8 %39 to i32, !dbg !6990
  %cmp44 = icmp eq i32 %conv, 0, !dbg !6993
  br i1 %cmp44, label %land.lhs.true46, label %if.end67, !dbg !6994

land.lhs.true46:                                  ; preds = %lor.lhs.false41, %lor.lhs.false, %land.lhs.true37
  %40 = load ptr, ptr %cur.addr, align 8, !dbg !6995, !tbaa !1471
  %name47 = getelementptr inbounds %struct._xmlAttr, ptr %40, i32 0, i32 2, !dbg !6996
  %41 = load ptr, ptr %name47, align 8, !dbg !6996, !tbaa !6673
  %call48 = call i32 @htmlIsBooleanAttr__internal_alias(ptr noundef %41), !dbg !6997
  %tobool49 = icmp ne i32 %call48, 0, !dbg !6997
  br i1 %tobool49, label %if.then50, label %if.end67, !dbg !6998

if.then50:                                        ; preds = %land.lhs.true46
  %42 = load ptr, ptr %cur.addr, align 8, !dbg !6999, !tbaa !1471
  %children51 = getelementptr inbounds %struct._xmlAttr, ptr %42, i32 0, i32 3, !dbg !7002
  %43 = load ptr, ptr %children51, align 8, !dbg !7002, !tbaa !6763
  %cmp52 = icmp ne ptr %43, null, !dbg !7003
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !7004

if.then54:                                        ; preds = %if.then50
  %44 = load ptr, ptr %cur.addr, align 8, !dbg !7005, !tbaa !1471
  %children55 = getelementptr inbounds %struct._xmlAttr, ptr %44, i32 0, i32 3, !dbg !7006
  %45 = load ptr, ptr %children55, align 8, !dbg !7006, !tbaa !6763
  call void @xmlFreeNode__internal_alias(ptr noundef %45), !dbg !7007
  br label %if.end56, !dbg !7007

if.end56:                                         ; preds = %if.then54, %if.then50
  %46 = load ptr, ptr %cur.addr, align 8, !dbg !7008, !tbaa !1471
  %name57 = getelementptr inbounds %struct._xmlAttr, ptr %46, i32 0, i32 2, !dbg !7009
  %47 = load ptr, ptr %name57, align 8, !dbg !7009, !tbaa !6673
  %call58 = call ptr @xmlNewText__internal_alias(ptr noundef %47), !dbg !7010
  %48 = load ptr, ptr %cur.addr, align 8, !dbg !7011, !tbaa !1471
  %children59 = getelementptr inbounds %struct._xmlAttr, ptr %48, i32 0, i32 3, !dbg !7012
  store ptr %call58, ptr %children59, align 8, !dbg !7013, !tbaa !6763
  %49 = load ptr, ptr %cur.addr, align 8, !dbg !7014, !tbaa !1471
  %children60 = getelementptr inbounds %struct._xmlAttr, ptr %49, i32 0, i32 3, !dbg !7016
  %50 = load ptr, ptr %children60, align 8, !dbg !7016, !tbaa !6763
  %cmp61 = icmp ne ptr %50, null, !dbg !7017
  br i1 %cmp61, label %if.then63, label %if.end66, !dbg !7018

if.then63:                                        ; preds = %if.end56
  %51 = load ptr, ptr %cur.addr, align 8, !dbg !7019, !tbaa !1471
  %52 = load ptr, ptr %cur.addr, align 8, !dbg !7020, !tbaa !1471
  %children64 = getelementptr inbounds %struct._xmlAttr, ptr %52, i32 0, i32 3, !dbg !7021
  %53 = load ptr, ptr %children64, align 8, !dbg !7021, !tbaa !6763
  %parent65 = getelementptr inbounds %struct._xmlNode, ptr %53, i32 0, i32 5, !dbg !7022
  store ptr %51, ptr %parent65, align 8, !dbg !7023, !tbaa !4771
  br label %if.end66, !dbg !7020

if.end66:                                         ; preds = %if.then63, %if.end56
  br label %if.end67, !dbg !7024

if.end67:                                         ; preds = %if.end66, %land.lhs.true46, %lor.lhs.false41, %if.else34
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then33
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then21
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then13
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then6
  %54 = load ptr, ptr %ctxt.addr, align 8, !dbg !7025, !tbaa !1471
  %55 = load ptr, ptr %cur.addr, align 8, !dbg !7026, !tbaa !1471
  call void @xmlAttrDumpOutput(ptr noundef %54, ptr noundef %55), !dbg !7027
  %56 = load ptr, ptr %cur.addr, align 8, !dbg !7028, !tbaa !1471
  %next = getelementptr inbounds %struct._xmlAttr, ptr %56, i32 0, i32 6, !dbg !7029
  %57 = load ptr, ptr %next, align 8, !dbg !7029, !tbaa !6738
  store ptr %57, ptr %cur.addr, align 8, !dbg !7030, !tbaa !1471
  br label %while.cond, !dbg !6919, !llvm.loop !7031

while.end:                                        ; preds = %while.cond
  %58 = load ptr, ptr %name, align 8, !dbg !7033, !tbaa !1471
  %cmp72 = icmp ne ptr %58, null, !dbg !7035
  br i1 %cmp72, label %land.lhs.true74, label %if.end124, !dbg !7036

land.lhs.true74:                                  ; preds = %while.end
  %59 = load ptr, ptr %id, align 8, !dbg !7037, !tbaa !1471
  %cmp75 = icmp eq ptr %59, null, !dbg !7038
  br i1 %cmp75, label %if.then77, label %if.end124, !dbg !7039

if.then77:                                        ; preds = %land.lhs.true74
  %60 = load ptr, ptr %parent, align 8, !dbg !7040, !tbaa !1471
  %cmp78 = icmp ne ptr %60, null, !dbg !7043
  br i1 %cmp78, label %land.lhs.true80, label %if.end123, !dbg !7044

land.lhs.true80:                                  ; preds = %if.then77
  %61 = load ptr, ptr %parent, align 8, !dbg !7045, !tbaa !1471
  %name81 = getelementptr inbounds %struct._xmlNode, ptr %61, i32 0, i32 2, !dbg !7046
  %62 = load ptr, ptr %name81, align 8, !dbg !7046, !tbaa !2752
  %cmp82 = icmp ne ptr %62, null, !dbg !7047
  br i1 %cmp82, label %land.lhs.true84, label %if.end123, !dbg !7048

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %63 = load ptr, ptr %parent, align 8, !dbg !7049, !tbaa !1471
  %name85 = getelementptr inbounds %struct._xmlNode, ptr %63, i32 0, i32 2, !dbg !7050
  %64 = load ptr, ptr %name85, align 8, !dbg !7050, !tbaa !2752
  %call86 = call i32 @xmlStrEqual__internal_alias(ptr noundef %64, ptr noundef @.str.70), !dbg !7051
  %tobool87 = icmp ne i32 %call86, 0, !dbg !7051
  br i1 %tobool87, label %if.then120, label %lor.lhs.false88, !dbg !7052

lor.lhs.false88:                                  ; preds = %land.lhs.true84
  %65 = load ptr, ptr %parent, align 8, !dbg !7053, !tbaa !1471
  %name89 = getelementptr inbounds %struct._xmlNode, ptr %65, i32 0, i32 2, !dbg !7054
  %66 = load ptr, ptr %name89, align 8, !dbg !7054, !tbaa !2752
  %call90 = call i32 @xmlStrEqual__internal_alias(ptr noundef %66, ptr noundef @.str.71), !dbg !7055
  %tobool91 = icmp ne i32 %call90, 0, !dbg !7055
  br i1 %tobool91, label %if.then120, label %lor.lhs.false92, !dbg !7056

lor.lhs.false92:                                  ; preds = %lor.lhs.false88
  %67 = load ptr, ptr %parent, align 8, !dbg !7057, !tbaa !1471
  %name93 = getelementptr inbounds %struct._xmlNode, ptr %67, i32 0, i32 2, !dbg !7058
  %68 = load ptr, ptr %name93, align 8, !dbg !7058, !tbaa !2752
  %call94 = call i32 @xmlStrEqual__internal_alias(ptr noundef %68, ptr noundef @.str.72), !dbg !7059
  %tobool95 = icmp ne i32 %call94, 0, !dbg !7059
  br i1 %tobool95, label %if.then120, label %lor.lhs.false96, !dbg !7060

lor.lhs.false96:                                  ; preds = %lor.lhs.false92
  %69 = load ptr, ptr %parent, align 8, !dbg !7061, !tbaa !1471
  %name97 = getelementptr inbounds %struct._xmlNode, ptr %69, i32 0, i32 2, !dbg !7062
  %70 = load ptr, ptr %name97, align 8, !dbg !7062, !tbaa !2752
  %call98 = call i32 @xmlStrEqual__internal_alias(ptr noundef %70, ptr noundef @.str.73), !dbg !7063
  %tobool99 = icmp ne i32 %call98, 0, !dbg !7063
  br i1 %tobool99, label %if.then120, label %lor.lhs.false100, !dbg !7064

lor.lhs.false100:                                 ; preds = %lor.lhs.false96
  %71 = load ptr, ptr %parent, align 8, !dbg !7065, !tbaa !1471
  %name101 = getelementptr inbounds %struct._xmlNode, ptr %71, i32 0, i32 2, !dbg !7066
  %72 = load ptr, ptr %name101, align 8, !dbg !7066, !tbaa !2752
  %call102 = call i32 @xmlStrEqual__internal_alias(ptr noundef %72, ptr noundef @.str.74), !dbg !7067
  %tobool103 = icmp ne i32 %call102, 0, !dbg !7067
  br i1 %tobool103, label %if.then120, label %lor.lhs.false104, !dbg !7068

lor.lhs.false104:                                 ; preds = %lor.lhs.false100
  %73 = load ptr, ptr %parent, align 8, !dbg !7069, !tbaa !1471
  %name105 = getelementptr inbounds %struct._xmlNode, ptr %73, i32 0, i32 2, !dbg !7070
  %74 = load ptr, ptr %name105, align 8, !dbg !7070, !tbaa !2752
  %call106 = call i32 @xmlStrEqual__internal_alias(ptr noundef %74, ptr noundef @.str.75), !dbg !7071
  %tobool107 = icmp ne i32 %call106, 0, !dbg !7071
  br i1 %tobool107, label %if.then120, label %lor.lhs.false108, !dbg !7072

lor.lhs.false108:                                 ; preds = %lor.lhs.false104
  %75 = load ptr, ptr %parent, align 8, !dbg !7073, !tbaa !1471
  %name109 = getelementptr inbounds %struct._xmlNode, ptr %75, i32 0, i32 2, !dbg !7074
  %76 = load ptr, ptr %name109, align 8, !dbg !7074, !tbaa !2752
  %call110 = call i32 @xmlStrEqual__internal_alias(ptr noundef %76, ptr noundef @.str.76), !dbg !7075
  %tobool111 = icmp ne i32 %call110, 0, !dbg !7075
  br i1 %tobool111, label %if.then120, label %lor.lhs.false112, !dbg !7076

lor.lhs.false112:                                 ; preds = %lor.lhs.false108
  %77 = load ptr, ptr %parent, align 8, !dbg !7077, !tbaa !1471
  %name113 = getelementptr inbounds %struct._xmlNode, ptr %77, i32 0, i32 2, !dbg !7078
  %78 = load ptr, ptr %name113, align 8, !dbg !7078, !tbaa !2752
  %call114 = call i32 @xmlStrEqual__internal_alias(ptr noundef %78, ptr noundef @.str.77), !dbg !7079
  %tobool115 = icmp ne i32 %call114, 0, !dbg !7079
  br i1 %tobool115, label %if.then120, label %lor.lhs.false116, !dbg !7080

lor.lhs.false116:                                 ; preds = %lor.lhs.false112
  %79 = load ptr, ptr %parent, align 8, !dbg !7081, !tbaa !1471
  %name117 = getelementptr inbounds %struct._xmlNode, ptr %79, i32 0, i32 2, !dbg !7082
  %80 = load ptr, ptr %name117, align 8, !dbg !7082, !tbaa !2752
  %call118 = call i32 @xmlStrEqual__internal_alias(ptr noundef %80, ptr noundef @.str.78), !dbg !7083
  %tobool119 = icmp ne i32 %call118, 0, !dbg !7083
  br i1 %tobool119, label %if.then120, label %if.end123, !dbg !7084

if.then120:                                       ; preds = %lor.lhs.false116, %lor.lhs.false112, %lor.lhs.false108, %lor.lhs.false104, %lor.lhs.false100, %lor.lhs.false96, %lor.lhs.false92, %lor.lhs.false88, %land.lhs.true84
  %81 = load ptr, ptr %buf, align 8, !dbg !7085, !tbaa !1471
  %call121 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %81, i32 noundef 5, ptr noundef @.str.79), !dbg !7087
  %82 = load ptr, ptr %buf, align 8, !dbg !7088, !tbaa !1471
  %83 = load ptr, ptr %name, align 8, !dbg !7089, !tbaa !1471
  call void @xmlAttrSerializeContent(ptr noundef %82, ptr noundef %83), !dbg !7090
  %84 = load ptr, ptr %buf, align 8, !dbg !7091, !tbaa !1471
  %call122 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %84, i32 noundef 1, ptr noundef @.str.52), !dbg !7092
  br label %if.end123, !dbg !7093

if.end123:                                        ; preds = %if.then120, %lor.lhs.false116, %land.lhs.true80, %if.then77
  br label %if.end124, !dbg !7094

if.end124:                                        ; preds = %if.end123, %land.lhs.true74, %while.end
  %85 = load ptr, ptr %lang, align 8, !dbg !7095, !tbaa !1471
  %cmp125 = icmp ne ptr %85, null, !dbg !7097
  br i1 %cmp125, label %land.lhs.true127, label %if.else133, !dbg !7098

land.lhs.true127:                                 ; preds = %if.end124
  %86 = load ptr, ptr %xml_lang, align 8, !dbg !7099, !tbaa !1471
  %cmp128 = icmp eq ptr %86, null, !dbg !7100
  br i1 %cmp128, label %if.then130, label %if.else133, !dbg !7101

if.then130:                                       ; preds = %land.lhs.true127
  %87 = load ptr, ptr %buf, align 8, !dbg !7102, !tbaa !1471
  %call131 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %87, i32 noundef 11, ptr noundef @.str.80), !dbg !7104
  %88 = load ptr, ptr %buf, align 8, !dbg !7105, !tbaa !1471
  %89 = load ptr, ptr %lang, align 8, !dbg !7106, !tbaa !1471
  call void @xmlAttrSerializeContent(ptr noundef %88, ptr noundef %89), !dbg !7107
  %90 = load ptr, ptr %buf, align 8, !dbg !7108, !tbaa !1471
  %call132 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %90, i32 noundef 1, ptr noundef @.str.52), !dbg !7109
  br label %if.end143, !dbg !7110

if.else133:                                       ; preds = %land.lhs.true127, %if.end124
  %91 = load ptr, ptr %xml_lang, align 8, !dbg !7111, !tbaa !1471
  %cmp134 = icmp ne ptr %91, null, !dbg !7113
  br i1 %cmp134, label %land.lhs.true136, label %if.end142, !dbg !7114

land.lhs.true136:                                 ; preds = %if.else133
  %92 = load ptr, ptr %lang, align 8, !dbg !7115, !tbaa !1471
  %cmp137 = icmp eq ptr %92, null, !dbg !7116
  br i1 %cmp137, label %if.then139, label %if.end142, !dbg !7117

if.then139:                                       ; preds = %land.lhs.true136
  %93 = load ptr, ptr %buf, align 8, !dbg !7118, !tbaa !1471
  %call140 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %93, i32 noundef 7, ptr noundef @.str.81), !dbg !7120
  %94 = load ptr, ptr %buf, align 8, !dbg !7121, !tbaa !1471
  %95 = load ptr, ptr %xml_lang, align 8, !dbg !7122, !tbaa !1471
  call void @xmlAttrSerializeContent(ptr noundef %94, ptr noundef %95), !dbg !7123
  %96 = load ptr, ptr %buf, align 8, !dbg !7124, !tbaa !1471
  %call141 = call i32 @xmlOutputBufferWrite__internal_alias(ptr noundef %96, i32 noundef 1, ptr noundef @.str.52), !dbg !7125
  br label %if.end142, !dbg !7126

if.end142:                                        ; preds = %if.then139, %land.lhs.true136, %if.else133
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then130
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7127
  br label %cleanup, !dbg !7127

cleanup:                                          ; preds = %if.end143, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #6, !dbg !7127
  call void @llvm.lifetime.end.p0(i64 8, ptr %parent) #6, !dbg !7127
  call void @llvm.lifetime.end.p0(i64 8, ptr %id) #6, !dbg !7127
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #6, !dbg !7127
  call void @llvm.lifetime.end.p0(i64 8, ptr %lang) #6, !dbg !7127
  call void @llvm.lifetime.end.p0(i64 8, ptr %xml_lang) #6, !dbg !7127
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !7127

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !7128 hidden ptr @xmlGetProp__internal_alias(ptr noundef, ptr noundef) #1

declare !dbg !7133 hidden i32 @xmlStrcasecmp__internal_alias(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @xhtmlIsEmpty(ptr noundef %node) #0 !dbg !7134 {
entry:
  %retval = alloca i32, align 4
  %node.addr = alloca ptr, align 8
  store ptr %node, ptr %node.addr, align 8, !tbaa !1471
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !7138, metadata !DIExpression()), !dbg !7139
  %0 = load ptr, ptr %node.addr, align 8, !dbg !7140, !tbaa !1471
  %cmp = icmp eq ptr %0, null, !dbg !7142
  br i1 %cmp, label %if.then, label %if.end, !dbg !7143

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !7144
  br label %return, !dbg !7144

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %node.addr, align 8, !dbg !7145, !tbaa !1471
  %type = getelementptr inbounds %struct._xmlNode, ptr %1, i32 0, i32 1, !dbg !7147
  %2 = load i32, ptr %type, align 8, !dbg !7147, !tbaa !2618
  %cmp1 = icmp ne i32 %2, 1, !dbg !7148
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7149

if.then2:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !7150
  br label %return, !dbg !7150

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %node.addr, align 8, !dbg !7151, !tbaa !1471
  %ns = getelementptr inbounds %struct._xmlNode, ptr %3, i32 0, i32 9, !dbg !7153
  %4 = load ptr, ptr %ns, align 8, !dbg !7153, !tbaa !3009
  %cmp4 = icmp ne ptr %4, null, !dbg !7154
  br i1 %cmp4, label %land.lhs.true, label %if.end7, !dbg !7155

land.lhs.true:                                    ; preds = %if.end3
  %5 = load ptr, ptr %node.addr, align 8, !dbg !7156, !tbaa !1471
  %ns5 = getelementptr inbounds %struct._xmlNode, ptr %5, i32 0, i32 9, !dbg !7157
  %6 = load ptr, ptr %ns5, align 8, !dbg !7157, !tbaa !3009
  %href = getelementptr inbounds %struct._xmlNs, ptr %6, i32 0, i32 2, !dbg !7158
  %7 = load ptr, ptr %href, align 8, !dbg !7158, !tbaa !1715
  %call = call i32 @xmlStrEqual__internal_alias(ptr noundef %7, ptr noundef @.str.82), !dbg !7159
  %tobool = icmp ne i32 %call, 0, !dbg !7159
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !7160

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, ptr %retval, align 4, !dbg !7161
  br label %return, !dbg !7161

if.end7:                                          ; preds = %land.lhs.true, %if.end3
  %8 = load ptr, ptr %node.addr, align 8, !dbg !7162, !tbaa !1471
  %children = getelementptr inbounds %struct._xmlNode, ptr %8, i32 0, i32 3, !dbg !7164
  %9 = load ptr, ptr %children, align 8, !dbg !7164, !tbaa !2700
  %cmp8 = icmp ne ptr %9, null, !dbg !7165
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !7166

if.then9:                                         ; preds = %if.end7
  store i32 0, ptr %retval, align 4, !dbg !7167
  br label %return, !dbg !7167

if.end10:                                         ; preds = %if.end7
  %10 = load ptr, ptr %node.addr, align 8, !dbg !7168, !tbaa !1471
  %name = getelementptr inbounds %struct._xmlNode, ptr %10, i32 0, i32 2, !dbg !7169
  %11 = load ptr, ptr %name, align 8, !dbg !7169, !tbaa !2752
  %arrayidx = getelementptr inbounds i8, ptr %11, i64 0, !dbg !7168
  %12 = load i8, ptr %arrayidx, align 1, !dbg !7168, !tbaa !2345
  %conv = zext i8 %12 to i32, !dbg !7168
  switch i32 %conv, label %sw.epilog [
    i32 97, label %sw.bb
    i32 98, label %sw.bb16
    i32 99, label %sw.bb32
    i32 102, label %sw.bb38
    i32 104, label %sw.bb44
    i32 105, label %sw.bb50
    i32 108, label %sw.bb66
    i32 109, label %sw.bb72
    i32 112, label %sw.bb78
  ], !dbg !7170

sw.bb:                                            ; preds = %if.end10
  %13 = load ptr, ptr %node.addr, align 8, !dbg !7171, !tbaa !1471
  %name11 = getelementptr inbounds %struct._xmlNode, ptr %13, i32 0, i32 2, !dbg !7174
  %14 = load ptr, ptr %name11, align 8, !dbg !7174, !tbaa !2752
  %call12 = call i32 @xmlStrEqual__internal_alias(ptr noundef %14, ptr noundef @.str.83), !dbg !7175
  %tobool13 = icmp ne i32 %call12, 0, !dbg !7175
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7176

if.then14:                                        ; preds = %sw.bb
  store i32 1, ptr %retval, align 4, !dbg !7177
  br label %return, !dbg !7177

if.end15:                                         ; preds = %sw.bb
  store i32 0, ptr %retval, align 4, !dbg !7178
  br label %return, !dbg !7178

sw.bb16:                                          ; preds = %if.end10
  %15 = load ptr, ptr %node.addr, align 8, !dbg !7179, !tbaa !1471
  %name17 = getelementptr inbounds %struct._xmlNode, ptr %15, i32 0, i32 2, !dbg !7181
  %16 = load ptr, ptr %name17, align 8, !dbg !7181, !tbaa !2752
  %call18 = call i32 @xmlStrEqual__internal_alias(ptr noundef %16, ptr noundef @.str.84), !dbg !7182
  %tobool19 = icmp ne i32 %call18, 0, !dbg !7182
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7183

if.then20:                                        ; preds = %sw.bb16
  store i32 1, ptr %retval, align 4, !dbg !7184
  br label %return, !dbg !7184

if.end21:                                         ; preds = %sw.bb16
  %17 = load ptr, ptr %node.addr, align 8, !dbg !7185, !tbaa !1471
  %name22 = getelementptr inbounds %struct._xmlNode, ptr %17, i32 0, i32 2, !dbg !7187
  %18 = load ptr, ptr %name22, align 8, !dbg !7187, !tbaa !2752
  %call23 = call i32 @xmlStrEqual__internal_alias(ptr noundef %18, ptr noundef @.str.85), !dbg !7188
  %tobool24 = icmp ne i32 %call23, 0, !dbg !7188
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !7189

if.then25:                                        ; preds = %if.end21
  store i32 1, ptr %retval, align 4, !dbg !7190
  br label %return, !dbg !7190

if.end26:                                         ; preds = %if.end21
  %19 = load ptr, ptr %node.addr, align 8, !dbg !7191, !tbaa !1471
  %name27 = getelementptr inbounds %struct._xmlNode, ptr %19, i32 0, i32 2, !dbg !7193
  %20 = load ptr, ptr %name27, align 8, !dbg !7193, !tbaa !2752
  %call28 = call i32 @xmlStrEqual__internal_alias(ptr noundef %20, ptr noundef @.str.86), !dbg !7194
  %tobool29 = icmp ne i32 %call28, 0, !dbg !7194
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !7195

if.then30:                                        ; preds = %if.end26
  store i32 1, ptr %retval, align 4, !dbg !7196
  br label %return, !dbg !7196

if.end31:                                         ; preds = %if.end26
  store i32 0, ptr %retval, align 4, !dbg !7197
  br label %return, !dbg !7197

sw.bb32:                                          ; preds = %if.end10
  %21 = load ptr, ptr %node.addr, align 8, !dbg !7198, !tbaa !1471
  %name33 = getelementptr inbounds %struct._xmlNode, ptr %21, i32 0, i32 2, !dbg !7200
  %22 = load ptr, ptr %name33, align 8, !dbg !7200, !tbaa !2752
  %call34 = call i32 @xmlStrEqual__internal_alias(ptr noundef %22, ptr noundef @.str.87), !dbg !7201
  %tobool35 = icmp ne i32 %call34, 0, !dbg !7201
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !7202

if.then36:                                        ; preds = %sw.bb32
  store i32 1, ptr %retval, align 4, !dbg !7203
  br label %return, !dbg !7203

if.end37:                                         ; preds = %sw.bb32
  store i32 0, ptr %retval, align 4, !dbg !7204
  br label %return, !dbg !7204

sw.bb38:                                          ; preds = %if.end10
  %23 = load ptr, ptr %node.addr, align 8, !dbg !7205, !tbaa !1471
  %name39 = getelementptr inbounds %struct._xmlNode, ptr %23, i32 0, i32 2, !dbg !7207
  %24 = load ptr, ptr %name39, align 8, !dbg !7207, !tbaa !2752
  %call40 = call i32 @xmlStrEqual__internal_alias(ptr noundef %24, ptr noundef @.str.77), !dbg !7208
  %tobool41 = icmp ne i32 %call40, 0, !dbg !7208
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !7209

if.then42:                                        ; preds = %sw.bb38
  store i32 1, ptr %retval, align 4, !dbg !7210
  br label %return, !dbg !7210

if.end43:                                         ; preds = %sw.bb38
  store i32 0, ptr %retval, align 4, !dbg !7211
  br label %return, !dbg !7211

sw.bb44:                                          ; preds = %if.end10
  %25 = load ptr, ptr %node.addr, align 8, !dbg !7212, !tbaa !1471
  %name45 = getelementptr inbounds %struct._xmlNode, ptr %25, i32 0, i32 2, !dbg !7214
  %26 = load ptr, ptr %name45, align 8, !dbg !7214, !tbaa !2752
  %call46 = call i32 @xmlStrEqual__internal_alias(ptr noundef %26, ptr noundef @.str.88), !dbg !7215
  %tobool47 = icmp ne i32 %call46, 0, !dbg !7215
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !7216

if.then48:                                        ; preds = %sw.bb44
  store i32 1, ptr %retval, align 4, !dbg !7217
  br label %return, !dbg !7217

if.end49:                                         ; preds = %sw.bb44
  store i32 0, ptr %retval, align 4, !dbg !7218
  br label %return, !dbg !7218

sw.bb50:                                          ; preds = %if.end10
  %27 = load ptr, ptr %node.addr, align 8, !dbg !7219, !tbaa !1471
  %name51 = getelementptr inbounds %struct._xmlNode, ptr %27, i32 0, i32 2, !dbg !7221
  %28 = load ptr, ptr %name51, align 8, !dbg !7221, !tbaa !2752
  %call52 = call i32 @xmlStrEqual__internal_alias(ptr noundef %28, ptr noundef @.str.73), !dbg !7222
  %tobool53 = icmp ne i32 %call52, 0, !dbg !7222
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !7223

if.then54:                                        ; preds = %sw.bb50
  store i32 1, ptr %retval, align 4, !dbg !7224
  br label %return, !dbg !7224

if.end55:                                         ; preds = %sw.bb50
  %29 = load ptr, ptr %node.addr, align 8, !dbg !7225, !tbaa !1471
  %name56 = getelementptr inbounds %struct._xmlNode, ptr %29, i32 0, i32 2, !dbg !7227
  %30 = load ptr, ptr %name56, align 8, !dbg !7227, !tbaa !2752
  %call57 = call i32 @xmlStrEqual__internal_alias(ptr noundef %30, ptr noundef @.str.89), !dbg !7228
  %tobool58 = icmp ne i32 %call57, 0, !dbg !7228
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !7229

if.then59:                                        ; preds = %if.end55
  store i32 1, ptr %retval, align 4, !dbg !7230
  br label %return, !dbg !7230

if.end60:                                         ; preds = %if.end55
  %31 = load ptr, ptr %node.addr, align 8, !dbg !7231, !tbaa !1471
  %name61 = getelementptr inbounds %struct._xmlNode, ptr %31, i32 0, i32 2, !dbg !7233
  %32 = load ptr, ptr %name61, align 8, !dbg !7233, !tbaa !2752
  %call62 = call i32 @xmlStrEqual__internal_alias(ptr noundef %32, ptr noundef @.str.90), !dbg !7234
  %tobool63 = icmp ne i32 %call62, 0, !dbg !7234
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !7235

if.then64:                                        ; preds = %if.end60
  store i32 1, ptr %retval, align 4, !dbg !7236
  br label %return, !dbg !7236

if.end65:                                         ; preds = %if.end60
  store i32 0, ptr %retval, align 4, !dbg !7237
  br label %return, !dbg !7237

sw.bb66:                                          ; preds = %if.end10
  %33 = load ptr, ptr %node.addr, align 8, !dbg !7238, !tbaa !1471
  %name67 = getelementptr inbounds %struct._xmlNode, ptr %33, i32 0, i32 2, !dbg !7240
  %34 = load ptr, ptr %name67, align 8, !dbg !7240, !tbaa !2752
  %call68 = call i32 @xmlStrEqual__internal_alias(ptr noundef %34, ptr noundef @.str.91), !dbg !7241
  %tobool69 = icmp ne i32 %call68, 0, !dbg !7241
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !7242

if.then70:                                        ; preds = %sw.bb66
  store i32 1, ptr %retval, align 4, !dbg !7243
  br label %return, !dbg !7243

if.end71:                                         ; preds = %sw.bb66
  store i32 0, ptr %retval, align 4, !dbg !7244
  br label %return, !dbg !7244

sw.bb72:                                          ; preds = %if.end10
  %35 = load ptr, ptr %node.addr, align 8, !dbg !7245, !tbaa !1471
  %name73 = getelementptr inbounds %struct._xmlNode, ptr %35, i32 0, i32 2, !dbg !7247
  %36 = load ptr, ptr %name73, align 8, !dbg !7247, !tbaa !2752
  %call74 = call i32 @xmlStrEqual__internal_alias(ptr noundef %36, ptr noundef @.str.61), !dbg !7248
  %tobool75 = icmp ne i32 %call74, 0, !dbg !7248
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !7249

if.then76:                                        ; preds = %sw.bb72
  store i32 1, ptr %retval, align 4, !dbg !7250
  br label %return, !dbg !7250

if.end77:                                         ; preds = %sw.bb72
  store i32 0, ptr %retval, align 4, !dbg !7251
  br label %return, !dbg !7251

sw.bb78:                                          ; preds = %if.end10
  %37 = load ptr, ptr %node.addr, align 8, !dbg !7252, !tbaa !1471
  %name79 = getelementptr inbounds %struct._xmlNode, ptr %37, i32 0, i32 2, !dbg !7254
  %38 = load ptr, ptr %name79, align 8, !dbg !7254, !tbaa !2752
  %call80 = call i32 @xmlStrEqual__internal_alias(ptr noundef %38, ptr noundef @.str.92), !dbg !7255
  %tobool81 = icmp ne i32 %call80, 0, !dbg !7255
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !7256

if.then82:                                        ; preds = %sw.bb78
  store i32 1, ptr %retval, align 4, !dbg !7257
  br label %return, !dbg !7257

if.end83:                                         ; preds = %sw.bb78
  store i32 0, ptr %retval, align 4, !dbg !7258
  br label %return, !dbg !7258

sw.epilog:                                        ; preds = %if.end10
  store i32 0, ptr %retval, align 4, !dbg !7259
  br label %return, !dbg !7259

return:                                           ; preds = %sw.epilog, %if.end83, %if.then82, %if.end77, %if.then76, %if.end71, %if.then70, %if.end65, %if.then64, %if.then59, %if.then54, %if.end49, %if.then48, %if.end43, %if.then42, %if.end37, %if.then36, %if.end31, %if.then30, %if.then25, %if.then20, %if.end15, %if.then14, %if.then9, %if.then6, %if.then2, %if.then
  %39 = load i32, ptr %retval, align 4, !dbg !7260
  ret i32 %39, !dbg !7260
}

declare !dbg !7261 hidden i32 @htmlIsBooleanAttr__internal_alias(ptr noundef) #1

declare !dbg !7262 hidden void @xmlFreeNode__internal_alias(ptr noundef) #1

declare !dbg !7265 hidden ptr @xmlNewText__internal_alias(ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #5

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!273}
!llvm.module.flags = !{!1459, !1460, !1461, !1462, !1463}
!llvm.ident = !{!1464}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 59, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "xmlsave.c", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "0b19900ba772e651e9e3f9fe27c5730e")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 264, elements: !6)
!4 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!5 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!6 = !{!7}
!7 = !DISubrange(count: 33)
!8 = !DIGlobalVariableExpression(var: !9, expr: !DIExpression())
!9 = distinct !DIGlobalVariable(scope: null, file: !2, line: 60, type: !10, isLocal: true, isDefinition: true)
!10 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 280, elements: !11)
!11 = !{!12}
!12 = !DISubrange(count: 35)
!13 = !DIGlobalVariableExpression(var: !14, expr: !DIExpression())
!14 = distinct !DIGlobalVariable(scope: null, file: !2, line: 61, type: !15, isLocal: true, isDefinition: true)
!15 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 312, elements: !16)
!16 = !{!17}
!17 = !DISubrange(count: 39)
!18 = !DIGlobalVariableExpression(var: !19, expr: !DIExpression())
!19 = distinct !DIGlobalVariable(scope: null, file: !2, line: 64, type: !20, isLocal: true, isDefinition: true)
!20 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 400, elements: !21)
!21 = !{!22}
!22 = !DISubrange(count: 50)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(scope: null, file: !2, line: 65, type: !25, isLocal: true, isDefinition: true)
!25 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 416, elements: !26)
!26 = !{!27}
!27 = !DISubrange(count: 52)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(scope: null, file: !2, line: 66, type: !30, isLocal: true, isDefinition: true)
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 448, elements: !31)
!31 = !{!32}
!32 = !DISubrange(count: 56)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2053, type: !35, isLocal: true, isDefinition: true)
!35 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 48, elements: !36)
!36 = !{!37}
!37 = !DISubrange(count: 6)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2059, type: !35, isLocal: true, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2065, type: !42, isLocal: true, isDefinition: true)
!42 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 40, elements: !43)
!43 = !{!44}
!44 = !DISubrange(count: 5)
!45 = !DIGlobalVariableExpression(var: !46, expr: !DIExpression())
!46 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2071, type: !47, isLocal: true, isDefinition: true)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 56, elements: !48)
!48 = !{!49}
!49 = !DISubrange(count: 7)
!50 = !DIGlobalVariableExpression(var: !51, expr: !DIExpression())
!51 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2077, type: !42, isLocal: true, isDefinition: true)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2083, type: !42, isLocal: true, isDefinition: true)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2089, type: !35, isLocal: true, isDefinition: true)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2257, type: !58, isLocal: true, isDefinition: true)
!58 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !59)
!59 = !{!60}
!60 = !DISubrange(count: 16)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2355, type: !35, isLocal: true, isDefinition: true)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2462, type: !58, isLocal: true, isDefinition: true)
!65 = !DIGlobalVariableExpression(var: !66, expr: !DIExpression())
!66 = distinct !DIGlobalVariable(scope: null, file: !2, line: 634, type: !67, isLocal: true, isDefinition: true)
!67 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !68)
!68 = !{!69}
!69 = !DISubrange(count: 4)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(scope: null, file: !2, line: 640, type: !72, isLocal: true, isDefinition: true)
!72 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !73)
!73 = !{!74}
!74 = !DISubrange(count: 2)
!75 = !DIGlobalVariableExpression(var: !76, expr: !DIExpression())
!76 = distinct !DIGlobalVariable(scope: null, file: !2, line: 644, type: !47, isLocal: true, isDefinition: true)
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(scope: null, file: !2, line: 647, type: !35, isLocal: true, isDefinition: true)
!79 = !DIGlobalVariableExpression(var: !80, expr: !DIExpression())
!80 = distinct !DIGlobalVariable(scope: null, file: !2, line: 648, type: !72, isLocal: true, isDefinition: true)
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(scope: null, file: !2, line: 611, type: !72, isLocal: true, isDefinition: true)
!83 = !DIGlobalVariableExpression(var: !84, expr: !DIExpression())
!84 = distinct !DIGlobalVariable(scope: null, file: !2, line: 385, type: !85, isLocal: true, isDefinition: true)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, elements: !86)
!86 = !{!87}
!87 = !DISubrange(count: 24)
!88 = !DIGlobalVariableExpression(var: !89, expr: !DIExpression())
!89 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1133, type: !42, isLocal: true, isDefinition: true)
!90 = !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!91 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1185, type: !92, isLocal: true, isDefinition: true)
!92 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !93)
!93 = !{!94}
!94 = !DISubrange(count: 15)
!95 = !DIGlobalVariableExpression(var: !96, expr: !DIExpression())
!96 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1189, type: !35, isLocal: true, isDefinition: true)
!97 = !DIGlobalVariableExpression(var: !98, expr: !DIExpression())
!98 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1191, type: !99, isLocal: true, isDefinition: true)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 88, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 11)
!102 = !DIGlobalVariableExpression(var: !103, expr: !DIExpression())
!103 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1196, type: !104, isLocal: true, isDefinition: true)
!104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !105)
!105 = !{!106}
!106 = !DISubrange(count: 17)
!107 = !DIGlobalVariableExpression(var: !108, expr: !DIExpression())
!108 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1199, type: !109, isLocal: true, isDefinition: true)
!109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !110)
!110 = !{!111}
!111 = !DISubrange(count: 18)
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1202, type: !67, isLocal: true, isDefinition: true)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(scope: null, file: !2, line: 568, type: !116, isLocal: true, isDefinition: true)
!116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 200, elements: !117)
!117 = !{!118}
!118 = !DISubrange(count: 25)
!119 = !DIGlobalVariableExpression(var: !120, expr: !DIExpression())
!120 = distinct !DIGlobalVariable(scope: null, file: !2, line: 304, type: !15, isLocal: true, isDefinition: true)
!121 = !DIGlobalVariableExpression(var: !122, expr: !DIExpression())
!122 = distinct !DIGlobalVariable(scope: null, file: !2, line: 961, type: !123, isLocal: true, isDefinition: true)
!123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !124)
!124 = !{!125}
!125 = !DISubrange(count: 3)
!126 = !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!127 = distinct !DIGlobalVariable(scope: null, file: !2, line: 970, type: !123, isLocal: true, isDefinition: true)
!128 = !DIGlobalVariableExpression(var: !129, expr: !DIExpression())
!129 = distinct !DIGlobalVariable(scope: null, file: !2, line: 982, type: !42, isLocal: true, isDefinition: true)
!130 = !DIGlobalVariableExpression(var: !131, expr: !DIExpression())
!131 = distinct !DIGlobalVariable(scope: null, file: !2, line: 984, type: !67, isLocal: true, isDefinition: true)
!132 = !DIGlobalVariableExpression(var: !133, expr: !DIExpression())
!133 = distinct !DIGlobalVariable(scope: null, file: !2, line: 989, type: !72, isLocal: true, isDefinition: true)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(scope: null, file: !2, line: 991, type: !72, isLocal: true, isDefinition: true)
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(scope: null, file: !2, line: 996, type: !138, isLocal: true, isDefinition: true)
!138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 104, elements: !139)
!139 = !{!140}
!140 = !DISubrange(count: 13)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1003, type: !143, isLocal: true, isDefinition: true)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 80, elements: !144)
!144 = !{!145}
!145 = !DISubrange(count: 10)
!146 = !DIGlobalVariableExpression(var: !147, expr: !DIExpression())
!147 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1005, type: !67, isLocal: true, isDefinition: true)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1040, type: !72, isLocal: true, isDefinition: true)
!150 = !DIGlobalVariableExpression(var: !151, expr: !DIExpression())
!151 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1043, type: !72, isLocal: true, isDefinition: true)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1056, type: !123, isLocal: true, isDefinition: true)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1062, type: !72, isLocal: true, isDefinition: true)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1077, type: !123, isLocal: true, isDefinition: true)
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(scope: null, file: !2, line: 714, type: !99, isLocal: true, isDefinition: true)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(scope: null, file: !2, line: 717, type: !162, isLocal: true, isDefinition: true)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 72, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 9)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(scope: null, file: !2, line: 722, type: !162, isLocal: true, isDefinition: true)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(scope: null, file: !2, line: 731, type: !67, isLocal: true, isDefinition: true)
!169 = !DIGlobalVariableExpression(var: !170, expr: !DIExpression())
!170 = distinct !DIGlobalVariable(scope: null, file: !2, line: 748, type: !123, isLocal: true, isDefinition: true)
!171 = !DIGlobalVariableExpression(var: !172, expr: !DIExpression())
!172 = distinct !DIGlobalVariable(scope: null, file: !2, line: 774, type: !123, isLocal: true, isDefinition: true)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(scope: null, file: !2, line: 776, type: !72, isLocal: true, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(scope: null, file: !2, line: 128, type: !85, isLocal: true, isDefinition: true)
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(scope: null, file: !2, line: 131, type: !116, isLocal: true, isDefinition: true)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(scope: null, file: !2, line: 134, type: !181, isLocal: true, isDefinition: true)
!181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 168, elements: !182)
!182 = !{!183}
!183 = !DISubrange(count: 21)
!184 = !DIGlobalVariableExpression(var: !185, expr: !DIExpression())
!185 = distinct !DIGlobalVariable(scope: null, file: !2, line: 137, type: !116, isLocal: true, isDefinition: true)
!186 = !DIGlobalVariableExpression(var: !187, expr: !DIExpression())
!187 = distinct !DIGlobalVariable(scope: null, file: !2, line: 140, type: !116, isLocal: true, isDefinition: true)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1579, type: !42, isLocal: true, isDefinition: true)
!190 = !DIGlobalVariableExpression(var: !191, expr: !DIExpression())
!191 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1585, type: !192, isLocal: true, isDefinition: true)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 304, elements: !193)
!193 = !{!194}
!194 = !DISubrange(count: 38)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1593, type: !42, isLocal: true, isDefinition: true)
!197 = !DIGlobalVariableExpression(var: !198, expr: !DIExpression())
!198 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1598, type: !42, isLocal: true, isDefinition: true)
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1601, type: !99, isLocal: true, isDefinition: true)
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1603, type: !138, isLocal: true, isDefinition: true)
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1622, type: !67, isLocal: true, isDefinition: true)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1634, type: !207, isLocal: true, isDefinition: true)
!207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 488, elements: !208)
!208 = !{!209}
!209 = !DISubrange(count: 61)
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1640, type: !42, isLocal: true, isDefinition: true)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1338, type: !123, isLocal: true, isDefinition: true)
!214 = !DIGlobalVariableExpression(var: !215, expr: !DIExpression())
!215 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1341, type: !42, isLocal: true, isDefinition: true)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1344, type: !42, isLocal: true, isDefinition: true)
!218 = !DIGlobalVariableExpression(var: !219, expr: !DIExpression())
!219 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1369, type: !72, isLocal: true, isDefinition: true)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1370, type: !72, isLocal: true, isDefinition: true)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1371, type: !67, isLocal: true, isDefinition: true)
!224 = !DIGlobalVariableExpression(var: !225, expr: !DIExpression())
!225 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1372, type: !67, isLocal: true, isDefinition: true)
!226 = !DIGlobalVariableExpression(var: !227, expr: !DIExpression())
!227 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1373, type: !67, isLocal: true, isDefinition: true)
!228 = !DIGlobalVariableExpression(var: !229, expr: !DIExpression())
!229 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1374, type: !47, isLocal: true, isDefinition: true)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1375, type: !42, isLocal: true, isDefinition: true)
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1376, type: !35, isLocal: true, isDefinition: true)
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1377, type: !47, isLocal: true, isDefinition: true)
!236 = !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!237 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1378, type: !35, isLocal: true, isDefinition: true)
!238 = !DIGlobalVariableExpression(var: !239, expr: !DIExpression())
!239 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1387, type: !240, isLocal: true, isDefinition: true)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !241)
!241 = !{!242}
!242 = !DISubrange(count: 12)
!243 = !DIGlobalVariableExpression(var: !244, expr: !DIExpression())
!244 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1392, type: !245, isLocal: true, isDefinition: true)
!245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, elements: !246)
!246 = !{!247}
!247 = !DISubrange(count: 8)
!248 = !DIGlobalVariableExpression(var: !249, expr: !DIExpression())
!249 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1266, type: !250, isLocal: true, isDefinition: true)
!250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 232, elements: !251)
!251 = !{!252}
!252 = !DISubrange(count: 29)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1272, type: !42, isLocal: true, isDefinition: true)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1276, type: !123, isLocal: true, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1278, type: !42, isLocal: true, isDefinition: true)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1280, type: !162, isLocal: true, isDefinition: true)
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1284, type: !67, isLocal: true, isDefinition: true)
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1292, type: !123, isLocal: true, isDefinition: true)
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1298, type: !35, isLocal: true, isDefinition: true)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1300, type: !245, isLocal: true, isDefinition: true)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1304, type: !42, isLocal: true, isDefinition: true)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1312, type: !35, isLocal: true, isDefinition: true)
!273 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !274, retainedTypes: !1163, globals: !1458, splitDebugInlining: false, nameTableKind: None)
!274 = !{!275, !285, !308, !320, !327, !333, !339, !345, !354, !1091, !1102, !1130}
!275 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !276, line: 74, baseType: !277, size: 32, elements: !278)
!276 = !DIFile(filename: "./include/libxml/tree.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "406fe7a05a1503755da736b98b1ab781")
!277 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!278 = !{!279, !280, !281, !282, !283, !284}
!279 = !DIEnumerator(name: "XML_BUFFER_ALLOC_DOUBLEIT", value: 0)
!280 = !DIEnumerator(name: "XML_BUFFER_ALLOC_EXACT", value: 1)
!281 = !DIEnumerator(name: "XML_BUFFER_ALLOC_IMMUTABLE", value: 2)
!282 = !DIEnumerator(name: "XML_BUFFER_ALLOC_IO", value: 3)
!283 = !DIEnumerator(name: "XML_BUFFER_ALLOC_HYBRID", value: 4)
!284 = !DIEnumerator(name: "XML_BUFFER_ALLOC_BOUNDED", value: 5)
!285 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !276, line: 159, baseType: !277, size: 32, elements: !286)
!286 = !{!287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307}
!287 = !DIEnumerator(name: "XML_ELEMENT_NODE", value: 1)
!288 = !DIEnumerator(name: "XML_ATTRIBUTE_NODE", value: 2)
!289 = !DIEnumerator(name: "XML_TEXT_NODE", value: 3)
!290 = !DIEnumerator(name: "XML_CDATA_SECTION_NODE", value: 4)
!291 = !DIEnumerator(name: "XML_ENTITY_REF_NODE", value: 5)
!292 = !DIEnumerator(name: "XML_ENTITY_NODE", value: 6)
!293 = !DIEnumerator(name: "XML_PI_NODE", value: 7)
!294 = !DIEnumerator(name: "XML_COMMENT_NODE", value: 8)
!295 = !DIEnumerator(name: "XML_DOCUMENT_NODE", value: 9)
!296 = !DIEnumerator(name: "XML_DOCUMENT_TYPE_NODE", value: 10)
!297 = !DIEnumerator(name: "XML_DOCUMENT_FRAG_NODE", value: 11)
!298 = !DIEnumerator(name: "XML_NOTATION_NODE", value: 12)
!299 = !DIEnumerator(name: "XML_HTML_DOCUMENT_NODE", value: 13)
!300 = !DIEnumerator(name: "XML_DTD_NODE", value: 14)
!301 = !DIEnumerator(name: "XML_ELEMENT_DECL", value: 15)
!302 = !DIEnumerator(name: "XML_ATTRIBUTE_DECL", value: 16)
!303 = !DIEnumerator(name: "XML_ENTITY_DECL", value: 17)
!304 = !DIEnumerator(name: "XML_NAMESPACE_DECL", value: 18)
!305 = !DIEnumerator(name: "XML_XINCLUDE_START", value: 19)
!306 = !DIEnumerator(name: "XML_XINCLUDE_END", value: 20)
!307 = !DIEnumerator(name: "XML_DOCB_DOCUMENT_NODE", value: 21)
!308 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !276, line: 206, baseType: !277, size: 32, elements: !309)
!309 = !{!310, !311, !312, !313, !314, !315, !316, !317, !318, !319}
!310 = !DIEnumerator(name: "XML_ATTRIBUTE_CDATA", value: 1)
!311 = !DIEnumerator(name: "XML_ATTRIBUTE_ID", value: 2)
!312 = !DIEnumerator(name: "XML_ATTRIBUTE_IDREF", value: 3)
!313 = !DIEnumerator(name: "XML_ATTRIBUTE_IDREFS", value: 4)
!314 = !DIEnumerator(name: "XML_ATTRIBUTE_ENTITY", value: 5)
!315 = !DIEnumerator(name: "XML_ATTRIBUTE_ENTITIES", value: 6)
!316 = !DIEnumerator(name: "XML_ATTRIBUTE_NMTOKEN", value: 7)
!317 = !DIEnumerator(name: "XML_ATTRIBUTE_NMTOKENS", value: 8)
!318 = !DIEnumerator(name: "XML_ATTRIBUTE_ENUMERATION", value: 9)
!319 = !DIEnumerator(name: "XML_ATTRIBUTE_NOTATION", value: 10)
!320 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !276, line: 322, baseType: !277, size: 32, elements: !321)
!321 = !{!322, !323, !324, !325, !326}
!322 = !DIEnumerator(name: "XML_ELEMENT_TYPE_UNDEFINED", value: 0)
!323 = !DIEnumerator(name: "XML_ELEMENT_TYPE_EMPTY", value: 1)
!324 = !DIEnumerator(name: "XML_ELEMENT_TYPE_ANY", value: 2)
!325 = !DIEnumerator(name: "XML_ELEMENT_TYPE_MIXED", value: 3)
!326 = !DIEnumerator(name: "XML_ELEMENT_TYPE_ELEMENT", value: 4)
!327 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !276, line: 278, baseType: !277, size: 32, elements: !328)
!328 = !{!329, !330, !331, !332}
!329 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_PCDATA", value: 1)
!330 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_ELEMENT", value: 2)
!331 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_SEQ", value: 3)
!332 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_OR", value: 4)
!333 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !276, line: 290, baseType: !277, size: 32, elements: !334)
!334 = !{!335, !336, !337, !338}
!335 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_ONCE", value: 1)
!336 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_OPT", value: 2)
!337 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_MULT", value: 3)
!338 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_PLUS", value: 4)
!339 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !276, line: 225, baseType: !277, size: 32, elements: !340)
!340 = !{!341, !342, !343, !344}
!341 = !DIEnumerator(name: "XML_ATTRIBUTE_NONE", value: 1)
!342 = !DIEnumerator(name: "XML_ATTRIBUTE_REQUIRED", value: 2)
!343 = !DIEnumerator(name: "XML_ATTRIBUTE_IMPLIED", value: 3)
!344 = !DIEnumerator(name: "XML_ATTRIBUTE_FIXED", value: 4)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !346, line: 24, baseType: !277, size: 32, elements: !347)
!346 = !DIFile(filename: "./include/libxml/entities.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "16467595fdaff28420d1657b1658f267")
!347 = !{!348, !349, !350, !351, !352, !353}
!348 = !DIEnumerator(name: "XML_INTERNAL_GENERAL_ENTITY", value: 1)
!349 = !DIEnumerator(name: "XML_EXTERNAL_GENERAL_PARSED_ENTITY", value: 2)
!350 = !DIEnumerator(name: "XML_EXTERNAL_GENERAL_UNPARSED_ENTITY", value: 3)
!351 = !DIEnumerator(name: "XML_INTERNAL_PARAMETER_ENTITY", value: 4)
!352 = !DIEnumerator(name: "XML_EXTERNAL_PARAMETER_ENTITY", value: 5)
!353 = !DIEnumerator(name: "XML_INTERNAL_PREDEFINED_ENTITY", value: 6)
!354 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !355, line: 99, baseType: !277, size: 32, elements: !356)
!355 = !DIFile(filename: "./include/libxml/xmlerror.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "28cd85987165565f9306b9b66a2b4e88")
!356 = !{!357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090}
!357 = !DIEnumerator(name: "XML_ERR_OK", value: 0)
!358 = !DIEnumerator(name: "XML_ERR_INTERNAL_ERROR", value: 1)
!359 = !DIEnumerator(name: "XML_ERR_NO_MEMORY", value: 2)
!360 = !DIEnumerator(name: "XML_ERR_DOCUMENT_START", value: 3)
!361 = !DIEnumerator(name: "XML_ERR_DOCUMENT_EMPTY", value: 4)
!362 = !DIEnumerator(name: "XML_ERR_DOCUMENT_END", value: 5)
!363 = !DIEnumerator(name: "XML_ERR_INVALID_HEX_CHARREF", value: 6)
!364 = !DIEnumerator(name: "XML_ERR_INVALID_DEC_CHARREF", value: 7)
!365 = !DIEnumerator(name: "XML_ERR_INVALID_CHARREF", value: 8)
!366 = !DIEnumerator(name: "XML_ERR_INVALID_CHAR", value: 9)
!367 = !DIEnumerator(name: "XML_ERR_CHARREF_AT_EOF", value: 10)
!368 = !DIEnumerator(name: "XML_ERR_CHARREF_IN_PROLOG", value: 11)
!369 = !DIEnumerator(name: "XML_ERR_CHARREF_IN_EPILOG", value: 12)
!370 = !DIEnumerator(name: "XML_ERR_CHARREF_IN_DTD", value: 13)
!371 = !DIEnumerator(name: "XML_ERR_ENTITYREF_AT_EOF", value: 14)
!372 = !DIEnumerator(name: "XML_ERR_ENTITYREF_IN_PROLOG", value: 15)
!373 = !DIEnumerator(name: "XML_ERR_ENTITYREF_IN_EPILOG", value: 16)
!374 = !DIEnumerator(name: "XML_ERR_ENTITYREF_IN_DTD", value: 17)
!375 = !DIEnumerator(name: "XML_ERR_PEREF_AT_EOF", value: 18)
!376 = !DIEnumerator(name: "XML_ERR_PEREF_IN_PROLOG", value: 19)
!377 = !DIEnumerator(name: "XML_ERR_PEREF_IN_EPILOG", value: 20)
!378 = !DIEnumerator(name: "XML_ERR_PEREF_IN_INT_SUBSET", value: 21)
!379 = !DIEnumerator(name: "XML_ERR_ENTITYREF_NO_NAME", value: 22)
!380 = !DIEnumerator(name: "XML_ERR_ENTITYREF_SEMICOL_MISSING", value: 23)
!381 = !DIEnumerator(name: "XML_ERR_PEREF_NO_NAME", value: 24)
!382 = !DIEnumerator(name: "XML_ERR_PEREF_SEMICOL_MISSING", value: 25)
!383 = !DIEnumerator(name: "XML_ERR_UNDECLARED_ENTITY", value: 26)
!384 = !DIEnumerator(name: "XML_WAR_UNDECLARED_ENTITY", value: 27)
!385 = !DIEnumerator(name: "XML_ERR_UNPARSED_ENTITY", value: 28)
!386 = !DIEnumerator(name: "XML_ERR_ENTITY_IS_EXTERNAL", value: 29)
!387 = !DIEnumerator(name: "XML_ERR_ENTITY_IS_PARAMETER", value: 30)
!388 = !DIEnumerator(name: "XML_ERR_UNKNOWN_ENCODING", value: 31)
!389 = !DIEnumerator(name: "XML_ERR_UNSUPPORTED_ENCODING", value: 32)
!390 = !DIEnumerator(name: "XML_ERR_STRING_NOT_STARTED", value: 33)
!391 = !DIEnumerator(name: "XML_ERR_STRING_NOT_CLOSED", value: 34)
!392 = !DIEnumerator(name: "XML_ERR_NS_DECL_ERROR", value: 35)
!393 = !DIEnumerator(name: "XML_ERR_ENTITY_NOT_STARTED", value: 36)
!394 = !DIEnumerator(name: "XML_ERR_ENTITY_NOT_FINISHED", value: 37)
!395 = !DIEnumerator(name: "XML_ERR_LT_IN_ATTRIBUTE", value: 38)
!396 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_NOT_STARTED", value: 39)
!397 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_NOT_FINISHED", value: 40)
!398 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_WITHOUT_VALUE", value: 41)
!399 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_REDEFINED", value: 42)
!400 = !DIEnumerator(name: "XML_ERR_LITERAL_NOT_STARTED", value: 43)
!401 = !DIEnumerator(name: "XML_ERR_LITERAL_NOT_FINISHED", value: 44)
!402 = !DIEnumerator(name: "XML_ERR_COMMENT_NOT_FINISHED", value: 45)
!403 = !DIEnumerator(name: "XML_ERR_PI_NOT_STARTED", value: 46)
!404 = !DIEnumerator(name: "XML_ERR_PI_NOT_FINISHED", value: 47)
!405 = !DIEnumerator(name: "XML_ERR_NOTATION_NOT_STARTED", value: 48)
!406 = !DIEnumerator(name: "XML_ERR_NOTATION_NOT_FINISHED", value: 49)
!407 = !DIEnumerator(name: "XML_ERR_ATTLIST_NOT_STARTED", value: 50)
!408 = !DIEnumerator(name: "XML_ERR_ATTLIST_NOT_FINISHED", value: 51)
!409 = !DIEnumerator(name: "XML_ERR_MIXED_NOT_STARTED", value: 52)
!410 = !DIEnumerator(name: "XML_ERR_MIXED_NOT_FINISHED", value: 53)
!411 = !DIEnumerator(name: "XML_ERR_ELEMCONTENT_NOT_STARTED", value: 54)
!412 = !DIEnumerator(name: "XML_ERR_ELEMCONTENT_NOT_FINISHED", value: 55)
!413 = !DIEnumerator(name: "XML_ERR_XMLDECL_NOT_STARTED", value: 56)
!414 = !DIEnumerator(name: "XML_ERR_XMLDECL_NOT_FINISHED", value: 57)
!415 = !DIEnumerator(name: "XML_ERR_CONDSEC_NOT_STARTED", value: 58)
!416 = !DIEnumerator(name: "XML_ERR_CONDSEC_NOT_FINISHED", value: 59)
!417 = !DIEnumerator(name: "XML_ERR_EXT_SUBSET_NOT_FINISHED", value: 60)
!418 = !DIEnumerator(name: "XML_ERR_DOCTYPE_NOT_FINISHED", value: 61)
!419 = !DIEnumerator(name: "XML_ERR_MISPLACED_CDATA_END", value: 62)
!420 = !DIEnumerator(name: "XML_ERR_CDATA_NOT_FINISHED", value: 63)
!421 = !DIEnumerator(name: "XML_ERR_RESERVED_XML_NAME", value: 64)
!422 = !DIEnumerator(name: "XML_ERR_SPACE_REQUIRED", value: 65)
!423 = !DIEnumerator(name: "XML_ERR_SEPARATOR_REQUIRED", value: 66)
!424 = !DIEnumerator(name: "XML_ERR_NMTOKEN_REQUIRED", value: 67)
!425 = !DIEnumerator(name: "XML_ERR_NAME_REQUIRED", value: 68)
!426 = !DIEnumerator(name: "XML_ERR_PCDATA_REQUIRED", value: 69)
!427 = !DIEnumerator(name: "XML_ERR_URI_REQUIRED", value: 70)
!428 = !DIEnumerator(name: "XML_ERR_PUBID_REQUIRED", value: 71)
!429 = !DIEnumerator(name: "XML_ERR_LT_REQUIRED", value: 72)
!430 = !DIEnumerator(name: "XML_ERR_GT_REQUIRED", value: 73)
!431 = !DIEnumerator(name: "XML_ERR_LTSLASH_REQUIRED", value: 74)
!432 = !DIEnumerator(name: "XML_ERR_EQUAL_REQUIRED", value: 75)
!433 = !DIEnumerator(name: "XML_ERR_TAG_NAME_MISMATCH", value: 76)
!434 = !DIEnumerator(name: "XML_ERR_TAG_NOT_FINISHED", value: 77)
!435 = !DIEnumerator(name: "XML_ERR_STANDALONE_VALUE", value: 78)
!436 = !DIEnumerator(name: "XML_ERR_ENCODING_NAME", value: 79)
!437 = !DIEnumerator(name: "XML_ERR_HYPHEN_IN_COMMENT", value: 80)
!438 = !DIEnumerator(name: "XML_ERR_INVALID_ENCODING", value: 81)
!439 = !DIEnumerator(name: "XML_ERR_EXT_ENTITY_STANDALONE", value: 82)
!440 = !DIEnumerator(name: "XML_ERR_CONDSEC_INVALID", value: 83)
!441 = !DIEnumerator(name: "XML_ERR_VALUE_REQUIRED", value: 84)
!442 = !DIEnumerator(name: "XML_ERR_NOT_WELL_BALANCED", value: 85)
!443 = !DIEnumerator(name: "XML_ERR_EXTRA_CONTENT", value: 86)
!444 = !DIEnumerator(name: "XML_ERR_ENTITY_CHAR_ERROR", value: 87)
!445 = !DIEnumerator(name: "XML_ERR_ENTITY_PE_INTERNAL", value: 88)
!446 = !DIEnumerator(name: "XML_ERR_ENTITY_LOOP", value: 89)
!447 = !DIEnumerator(name: "XML_ERR_ENTITY_BOUNDARY", value: 90)
!448 = !DIEnumerator(name: "XML_ERR_INVALID_URI", value: 91)
!449 = !DIEnumerator(name: "XML_ERR_URI_FRAGMENT", value: 92)
!450 = !DIEnumerator(name: "XML_WAR_CATALOG_PI", value: 93)
!451 = !DIEnumerator(name: "XML_ERR_NO_DTD", value: 94)
!452 = !DIEnumerator(name: "XML_ERR_CONDSEC_INVALID_KEYWORD", value: 95)
!453 = !DIEnumerator(name: "XML_ERR_VERSION_MISSING", value: 96)
!454 = !DIEnumerator(name: "XML_WAR_UNKNOWN_VERSION", value: 97)
!455 = !DIEnumerator(name: "XML_WAR_LANG_VALUE", value: 98)
!456 = !DIEnumerator(name: "XML_WAR_NS_URI", value: 99)
!457 = !DIEnumerator(name: "XML_WAR_NS_URI_RELATIVE", value: 100)
!458 = !DIEnumerator(name: "XML_ERR_MISSING_ENCODING", value: 101)
!459 = !DIEnumerator(name: "XML_WAR_SPACE_VALUE", value: 102)
!460 = !DIEnumerator(name: "XML_ERR_NOT_STANDALONE", value: 103)
!461 = !DIEnumerator(name: "XML_ERR_ENTITY_PROCESSING", value: 104)
!462 = !DIEnumerator(name: "XML_ERR_NOTATION_PROCESSING", value: 105)
!463 = !DIEnumerator(name: "XML_WAR_NS_COLUMN", value: 106)
!464 = !DIEnumerator(name: "XML_WAR_ENTITY_REDEFINED", value: 107)
!465 = !DIEnumerator(name: "XML_ERR_UNKNOWN_VERSION", value: 108)
!466 = !DIEnumerator(name: "XML_ERR_VERSION_MISMATCH", value: 109)
!467 = !DIEnumerator(name: "XML_ERR_NAME_TOO_LONG", value: 110)
!468 = !DIEnumerator(name: "XML_ERR_USER_STOP", value: 111)
!469 = !DIEnumerator(name: "XML_NS_ERR_XML_NAMESPACE", value: 200)
!470 = !DIEnumerator(name: "XML_NS_ERR_UNDEFINED_NAMESPACE", value: 201)
!471 = !DIEnumerator(name: "XML_NS_ERR_QNAME", value: 202)
!472 = !DIEnumerator(name: "XML_NS_ERR_ATTRIBUTE_REDEFINED", value: 203)
!473 = !DIEnumerator(name: "XML_NS_ERR_EMPTY", value: 204)
!474 = !DIEnumerator(name: "XML_NS_ERR_COLON", value: 205)
!475 = !DIEnumerator(name: "XML_DTD_ATTRIBUTE_DEFAULT", value: 500)
!476 = !DIEnumerator(name: "XML_DTD_ATTRIBUTE_REDEFINED", value: 501)
!477 = !DIEnumerator(name: "XML_DTD_ATTRIBUTE_VALUE", value: 502)
!478 = !DIEnumerator(name: "XML_DTD_CONTENT_ERROR", value: 503)
!479 = !DIEnumerator(name: "XML_DTD_CONTENT_MODEL", value: 504)
!480 = !DIEnumerator(name: "XML_DTD_CONTENT_NOT_DETERMINIST", value: 505)
!481 = !DIEnumerator(name: "XML_DTD_DIFFERENT_PREFIX", value: 506)
!482 = !DIEnumerator(name: "XML_DTD_ELEM_DEFAULT_NAMESPACE", value: 507)
!483 = !DIEnumerator(name: "XML_DTD_ELEM_NAMESPACE", value: 508)
!484 = !DIEnumerator(name: "XML_DTD_ELEM_REDEFINED", value: 509)
!485 = !DIEnumerator(name: "XML_DTD_EMPTY_NOTATION", value: 510)
!486 = !DIEnumerator(name: "XML_DTD_ENTITY_TYPE", value: 511)
!487 = !DIEnumerator(name: "XML_DTD_ID_FIXED", value: 512)
!488 = !DIEnumerator(name: "XML_DTD_ID_REDEFINED", value: 513)
!489 = !DIEnumerator(name: "XML_DTD_ID_SUBSET", value: 514)
!490 = !DIEnumerator(name: "XML_DTD_INVALID_CHILD", value: 515)
!491 = !DIEnumerator(name: "XML_DTD_INVALID_DEFAULT", value: 516)
!492 = !DIEnumerator(name: "XML_DTD_LOAD_ERROR", value: 517)
!493 = !DIEnumerator(name: "XML_DTD_MISSING_ATTRIBUTE", value: 518)
!494 = !DIEnumerator(name: "XML_DTD_MIXED_CORRUPT", value: 519)
!495 = !DIEnumerator(name: "XML_DTD_MULTIPLE_ID", value: 520)
!496 = !DIEnumerator(name: "XML_DTD_NO_DOC", value: 521)
!497 = !DIEnumerator(name: "XML_DTD_NO_DTD", value: 522)
!498 = !DIEnumerator(name: "XML_DTD_NO_ELEM_NAME", value: 523)
!499 = !DIEnumerator(name: "XML_DTD_NO_PREFIX", value: 524)
!500 = !DIEnumerator(name: "XML_DTD_NO_ROOT", value: 525)
!501 = !DIEnumerator(name: "XML_DTD_NOTATION_REDEFINED", value: 526)
!502 = !DIEnumerator(name: "XML_DTD_NOTATION_VALUE", value: 527)
!503 = !DIEnumerator(name: "XML_DTD_NOT_EMPTY", value: 528)
!504 = !DIEnumerator(name: "XML_DTD_NOT_PCDATA", value: 529)
!505 = !DIEnumerator(name: "XML_DTD_NOT_STANDALONE", value: 530)
!506 = !DIEnumerator(name: "XML_DTD_ROOT_NAME", value: 531)
!507 = !DIEnumerator(name: "XML_DTD_STANDALONE_WHITE_SPACE", value: 532)
!508 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ATTRIBUTE", value: 533)
!509 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ELEM", value: 534)
!510 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ENTITY", value: 535)
!511 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ID", value: 536)
!512 = !DIEnumerator(name: "XML_DTD_UNKNOWN_NOTATION", value: 537)
!513 = !DIEnumerator(name: "XML_DTD_STANDALONE_DEFAULTED", value: 538)
!514 = !DIEnumerator(name: "XML_DTD_XMLID_VALUE", value: 539)
!515 = !DIEnumerator(name: "XML_DTD_XMLID_TYPE", value: 540)
!516 = !DIEnumerator(name: "XML_DTD_DUP_TOKEN", value: 541)
!517 = !DIEnumerator(name: "XML_HTML_STRUCURE_ERROR", value: 800)
!518 = !DIEnumerator(name: "XML_HTML_UNKNOWN_TAG", value: 801)
!519 = !DIEnumerator(name: "XML_RNGP_ANYNAME_ATTR_ANCESTOR", value: 1000)
!520 = !DIEnumerator(name: "XML_RNGP_ATTR_CONFLICT", value: 1001)
!521 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_CHILDREN", value: 1002)
!522 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_CONTENT", value: 1003)
!523 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_EMPTY", value: 1004)
!524 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_NOOP", value: 1005)
!525 = !DIEnumerator(name: "XML_RNGP_CHOICE_CONTENT", value: 1006)
!526 = !DIEnumerator(name: "XML_RNGP_CHOICE_EMPTY", value: 1007)
!527 = !DIEnumerator(name: "XML_RNGP_CREATE_FAILURE", value: 1008)
!528 = !DIEnumerator(name: "XML_RNGP_DATA_CONTENT", value: 1009)
!529 = !DIEnumerator(name: "XML_RNGP_DEF_CHOICE_AND_INTERLEAVE", value: 1010)
!530 = !DIEnumerator(name: "XML_RNGP_DEFINE_CREATE_FAILED", value: 1011)
!531 = !DIEnumerator(name: "XML_RNGP_DEFINE_EMPTY", value: 1012)
!532 = !DIEnumerator(name: "XML_RNGP_DEFINE_MISSING", value: 1013)
!533 = !DIEnumerator(name: "XML_RNGP_DEFINE_NAME_MISSING", value: 1014)
!534 = !DIEnumerator(name: "XML_RNGP_ELEM_CONTENT_EMPTY", value: 1015)
!535 = !DIEnumerator(name: "XML_RNGP_ELEM_CONTENT_ERROR", value: 1016)
!536 = !DIEnumerator(name: "XML_RNGP_ELEMENT_EMPTY", value: 1017)
!537 = !DIEnumerator(name: "XML_RNGP_ELEMENT_CONTENT", value: 1018)
!538 = !DIEnumerator(name: "XML_RNGP_ELEMENT_NAME", value: 1019)
!539 = !DIEnumerator(name: "XML_RNGP_ELEMENT_NO_CONTENT", value: 1020)
!540 = !DIEnumerator(name: "XML_RNGP_ELEM_TEXT_CONFLICT", value: 1021)
!541 = !DIEnumerator(name: "XML_RNGP_EMPTY", value: 1022)
!542 = !DIEnumerator(name: "XML_RNGP_EMPTY_CONSTRUCT", value: 1023)
!543 = !DIEnumerator(name: "XML_RNGP_EMPTY_CONTENT", value: 1024)
!544 = !DIEnumerator(name: "XML_RNGP_EMPTY_NOT_EMPTY", value: 1025)
!545 = !DIEnumerator(name: "XML_RNGP_ERROR_TYPE_LIB", value: 1026)
!546 = !DIEnumerator(name: "XML_RNGP_EXCEPT_EMPTY", value: 1027)
!547 = !DIEnumerator(name: "XML_RNGP_EXCEPT_MISSING", value: 1028)
!548 = !DIEnumerator(name: "XML_RNGP_EXCEPT_MULTIPLE", value: 1029)
!549 = !DIEnumerator(name: "XML_RNGP_EXCEPT_NO_CONTENT", value: 1030)
!550 = !DIEnumerator(name: "XML_RNGP_EXTERNALREF_EMTPY", value: 1031)
!551 = !DIEnumerator(name: "XML_RNGP_EXTERNAL_REF_FAILURE", value: 1032)
!552 = !DIEnumerator(name: "XML_RNGP_EXTERNALREF_RECURSE", value: 1033)
!553 = !DIEnumerator(name: "XML_RNGP_FORBIDDEN_ATTRIBUTE", value: 1034)
!554 = !DIEnumerator(name: "XML_RNGP_FOREIGN_ELEMENT", value: 1035)
!555 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_CONTENT", value: 1036)
!556 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_EMPTY", value: 1037)
!557 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_MISSING", value: 1038)
!558 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_NO_START", value: 1039)
!559 = !DIEnumerator(name: "XML_RNGP_GROUP_ATTR_CONFLICT", value: 1040)
!560 = !DIEnumerator(name: "XML_RNGP_HREF_ERROR", value: 1041)
!561 = !DIEnumerator(name: "XML_RNGP_INCLUDE_EMPTY", value: 1042)
!562 = !DIEnumerator(name: "XML_RNGP_INCLUDE_FAILURE", value: 1043)
!563 = !DIEnumerator(name: "XML_RNGP_INCLUDE_RECURSE", value: 1044)
!564 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_ADD", value: 1045)
!565 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_CREATE_FAILED", value: 1046)
!566 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_EMPTY", value: 1047)
!567 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_NO_CONTENT", value: 1048)
!568 = !DIEnumerator(name: "XML_RNGP_INVALID_DEFINE_NAME", value: 1049)
!569 = !DIEnumerator(name: "XML_RNGP_INVALID_URI", value: 1050)
!570 = !DIEnumerator(name: "XML_RNGP_INVALID_VALUE", value: 1051)
!571 = !DIEnumerator(name: "XML_RNGP_MISSING_HREF", value: 1052)
!572 = !DIEnumerator(name: "XML_RNGP_NAME_MISSING", value: 1053)
!573 = !DIEnumerator(name: "XML_RNGP_NEED_COMBINE", value: 1054)
!574 = !DIEnumerator(name: "XML_RNGP_NOTALLOWED_NOT_EMPTY", value: 1055)
!575 = !DIEnumerator(name: "XML_RNGP_NSNAME_ATTR_ANCESTOR", value: 1056)
!576 = !DIEnumerator(name: "XML_RNGP_NSNAME_NO_NS", value: 1057)
!577 = !DIEnumerator(name: "XML_RNGP_PARAM_FORBIDDEN", value: 1058)
!578 = !DIEnumerator(name: "XML_RNGP_PARAM_NAME_MISSING", value: 1059)
!579 = !DIEnumerator(name: "XML_RNGP_PARENTREF_CREATE_FAILED", value: 1060)
!580 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NAME_INVALID", value: 1061)
!581 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NO_NAME", value: 1062)
!582 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NO_PARENT", value: 1063)
!583 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NOT_EMPTY", value: 1064)
!584 = !DIEnumerator(name: "XML_RNGP_PARSE_ERROR", value: 1065)
!585 = !DIEnumerator(name: "XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME", value: 1066)
!586 = !DIEnumerator(name: "XML_RNGP_PAT_ATTR_ATTR", value: 1067)
!587 = !DIEnumerator(name: "XML_RNGP_PAT_ATTR_ELEM", value: 1068)
!588 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_ATTR", value: 1069)
!589 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_ELEM", value: 1070)
!590 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_EMPTY", value: 1071)
!591 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_GROUP", value: 1072)
!592 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE", value: 1073)
!593 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_LIST", value: 1074)
!594 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_ONEMORE", value: 1075)
!595 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_REF", value: 1076)
!596 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_TEXT", value: 1077)
!597 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_ATTR", value: 1078)
!598 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_ELEM", value: 1079)
!599 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_INTERLEAVE", value: 1080)
!600 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_LIST", value: 1081)
!601 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_REF", value: 1082)
!602 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_TEXT", value: 1083)
!603 = !DIEnumerator(name: "XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME", value: 1084)
!604 = !DIEnumerator(name: "XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME", value: 1085)
!605 = !DIEnumerator(name: "XML_RNGP_PAT_ONEMORE_GROUP_ATTR", value: 1086)
!606 = !DIEnumerator(name: "XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR", value: 1087)
!607 = !DIEnumerator(name: "XML_RNGP_PAT_START_ATTR", value: 1088)
!608 = !DIEnumerator(name: "XML_RNGP_PAT_START_DATA", value: 1089)
!609 = !DIEnumerator(name: "XML_RNGP_PAT_START_EMPTY", value: 1090)
!610 = !DIEnumerator(name: "XML_RNGP_PAT_START_GROUP", value: 1091)
!611 = !DIEnumerator(name: "XML_RNGP_PAT_START_INTERLEAVE", value: 1092)
!612 = !DIEnumerator(name: "XML_RNGP_PAT_START_LIST", value: 1093)
!613 = !DIEnumerator(name: "XML_RNGP_PAT_START_ONEMORE", value: 1094)
!614 = !DIEnumerator(name: "XML_RNGP_PAT_START_TEXT", value: 1095)
!615 = !DIEnumerator(name: "XML_RNGP_PAT_START_VALUE", value: 1096)
!616 = !DIEnumerator(name: "XML_RNGP_PREFIX_UNDEFINED", value: 1097)
!617 = !DIEnumerator(name: "XML_RNGP_REF_CREATE_FAILED", value: 1098)
!618 = !DIEnumerator(name: "XML_RNGP_REF_CYCLE", value: 1099)
!619 = !DIEnumerator(name: "XML_RNGP_REF_NAME_INVALID", value: 1100)
!620 = !DIEnumerator(name: "XML_RNGP_REF_NO_DEF", value: 1101)
!621 = !DIEnumerator(name: "XML_RNGP_REF_NO_NAME", value: 1102)
!622 = !DIEnumerator(name: "XML_RNGP_REF_NOT_EMPTY", value: 1103)
!623 = !DIEnumerator(name: "XML_RNGP_START_CHOICE_AND_INTERLEAVE", value: 1104)
!624 = !DIEnumerator(name: "XML_RNGP_START_CONTENT", value: 1105)
!625 = !DIEnumerator(name: "XML_RNGP_START_EMPTY", value: 1106)
!626 = !DIEnumerator(name: "XML_RNGP_START_MISSING", value: 1107)
!627 = !DIEnumerator(name: "XML_RNGP_TEXT_EXPECTED", value: 1108)
!628 = !DIEnumerator(name: "XML_RNGP_TEXT_HAS_CHILD", value: 1109)
!629 = !DIEnumerator(name: "XML_RNGP_TYPE_MISSING", value: 1110)
!630 = !DIEnumerator(name: "XML_RNGP_TYPE_NOT_FOUND", value: 1111)
!631 = !DIEnumerator(name: "XML_RNGP_TYPE_VALUE", value: 1112)
!632 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_ATTRIBUTE", value: 1113)
!633 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_COMBINE", value: 1114)
!634 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_CONSTRUCT", value: 1115)
!635 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_TYPE_LIB", value: 1116)
!636 = !DIEnumerator(name: "XML_RNGP_URI_FRAGMENT", value: 1117)
!637 = !DIEnumerator(name: "XML_RNGP_URI_NOT_ABSOLUTE", value: 1118)
!638 = !DIEnumerator(name: "XML_RNGP_VALUE_EMPTY", value: 1119)
!639 = !DIEnumerator(name: "XML_RNGP_VALUE_NO_CONTENT", value: 1120)
!640 = !DIEnumerator(name: "XML_RNGP_XMLNS_NAME", value: 1121)
!641 = !DIEnumerator(name: "XML_RNGP_XML_NS", value: 1122)
!642 = !DIEnumerator(name: "XML_XPATH_EXPRESSION_OK", value: 1200)
!643 = !DIEnumerator(name: "XML_XPATH_NUMBER_ERROR", value: 1201)
!644 = !DIEnumerator(name: "XML_XPATH_UNFINISHED_LITERAL_ERROR", value: 1202)
!645 = !DIEnumerator(name: "XML_XPATH_START_LITERAL_ERROR", value: 1203)
!646 = !DIEnumerator(name: "XML_XPATH_VARIABLE_REF_ERROR", value: 1204)
!647 = !DIEnumerator(name: "XML_XPATH_UNDEF_VARIABLE_ERROR", value: 1205)
!648 = !DIEnumerator(name: "XML_XPATH_INVALID_PREDICATE_ERROR", value: 1206)
!649 = !DIEnumerator(name: "XML_XPATH_EXPR_ERROR", value: 1207)
!650 = !DIEnumerator(name: "XML_XPATH_UNCLOSED_ERROR", value: 1208)
!651 = !DIEnumerator(name: "XML_XPATH_UNKNOWN_FUNC_ERROR", value: 1209)
!652 = !DIEnumerator(name: "XML_XPATH_INVALID_OPERAND", value: 1210)
!653 = !DIEnumerator(name: "XML_XPATH_INVALID_TYPE", value: 1211)
!654 = !DIEnumerator(name: "XML_XPATH_INVALID_ARITY", value: 1212)
!655 = !DIEnumerator(name: "XML_XPATH_INVALID_CTXT_SIZE", value: 1213)
!656 = !DIEnumerator(name: "XML_XPATH_INVALID_CTXT_POSITION", value: 1214)
!657 = !DIEnumerator(name: "XML_XPATH_MEMORY_ERROR", value: 1215)
!658 = !DIEnumerator(name: "XML_XPTR_SYNTAX_ERROR", value: 1216)
!659 = !DIEnumerator(name: "XML_XPTR_RESOURCE_ERROR", value: 1217)
!660 = !DIEnumerator(name: "XML_XPTR_SUB_RESOURCE_ERROR", value: 1218)
!661 = !DIEnumerator(name: "XML_XPATH_UNDEF_PREFIX_ERROR", value: 1219)
!662 = !DIEnumerator(name: "XML_XPATH_ENCODING_ERROR", value: 1220)
!663 = !DIEnumerator(name: "XML_XPATH_INVALID_CHAR_ERROR", value: 1221)
!664 = !DIEnumerator(name: "XML_TREE_INVALID_HEX", value: 1300)
!665 = !DIEnumerator(name: "XML_TREE_INVALID_DEC", value: 1301)
!666 = !DIEnumerator(name: "XML_TREE_UNTERMINATED_ENTITY", value: 1302)
!667 = !DIEnumerator(name: "XML_TREE_NOT_UTF8", value: 1303)
!668 = !DIEnumerator(name: "XML_SAVE_NOT_UTF8", value: 1400)
!669 = !DIEnumerator(name: "XML_SAVE_CHAR_INVALID", value: 1401)
!670 = !DIEnumerator(name: "XML_SAVE_NO_DOCTYPE", value: 1402)
!671 = !DIEnumerator(name: "XML_SAVE_UNKNOWN_ENCODING", value: 1403)
!672 = !DIEnumerator(name: "XML_REGEXP_COMPILE_ERROR", value: 1450)
!673 = !DIEnumerator(name: "XML_IO_UNKNOWN", value: 1500)
!674 = !DIEnumerator(name: "XML_IO_EACCES", value: 1501)
!675 = !DIEnumerator(name: "XML_IO_EAGAIN", value: 1502)
!676 = !DIEnumerator(name: "XML_IO_EBADF", value: 1503)
!677 = !DIEnumerator(name: "XML_IO_EBADMSG", value: 1504)
!678 = !DIEnumerator(name: "XML_IO_EBUSY", value: 1505)
!679 = !DIEnumerator(name: "XML_IO_ECANCELED", value: 1506)
!680 = !DIEnumerator(name: "XML_IO_ECHILD", value: 1507)
!681 = !DIEnumerator(name: "XML_IO_EDEADLK", value: 1508)
!682 = !DIEnumerator(name: "XML_IO_EDOM", value: 1509)
!683 = !DIEnumerator(name: "XML_IO_EEXIST", value: 1510)
!684 = !DIEnumerator(name: "XML_IO_EFAULT", value: 1511)
!685 = !DIEnumerator(name: "XML_IO_EFBIG", value: 1512)
!686 = !DIEnumerator(name: "XML_IO_EINPROGRESS", value: 1513)
!687 = !DIEnumerator(name: "XML_IO_EINTR", value: 1514)
!688 = !DIEnumerator(name: "XML_IO_EINVAL", value: 1515)
!689 = !DIEnumerator(name: "XML_IO_EIO", value: 1516)
!690 = !DIEnumerator(name: "XML_IO_EISDIR", value: 1517)
!691 = !DIEnumerator(name: "XML_IO_EMFILE", value: 1518)
!692 = !DIEnumerator(name: "XML_IO_EMLINK", value: 1519)
!693 = !DIEnumerator(name: "XML_IO_EMSGSIZE", value: 1520)
!694 = !DIEnumerator(name: "XML_IO_ENAMETOOLONG", value: 1521)
!695 = !DIEnumerator(name: "XML_IO_ENFILE", value: 1522)
!696 = !DIEnumerator(name: "XML_IO_ENODEV", value: 1523)
!697 = !DIEnumerator(name: "XML_IO_ENOENT", value: 1524)
!698 = !DIEnumerator(name: "XML_IO_ENOEXEC", value: 1525)
!699 = !DIEnumerator(name: "XML_IO_ENOLCK", value: 1526)
!700 = !DIEnumerator(name: "XML_IO_ENOMEM", value: 1527)
!701 = !DIEnumerator(name: "XML_IO_ENOSPC", value: 1528)
!702 = !DIEnumerator(name: "XML_IO_ENOSYS", value: 1529)
!703 = !DIEnumerator(name: "XML_IO_ENOTDIR", value: 1530)
!704 = !DIEnumerator(name: "XML_IO_ENOTEMPTY", value: 1531)
!705 = !DIEnumerator(name: "XML_IO_ENOTSUP", value: 1532)
!706 = !DIEnumerator(name: "XML_IO_ENOTTY", value: 1533)
!707 = !DIEnumerator(name: "XML_IO_ENXIO", value: 1534)
!708 = !DIEnumerator(name: "XML_IO_EPERM", value: 1535)
!709 = !DIEnumerator(name: "XML_IO_EPIPE", value: 1536)
!710 = !DIEnumerator(name: "XML_IO_ERANGE", value: 1537)
!711 = !DIEnumerator(name: "XML_IO_EROFS", value: 1538)
!712 = !DIEnumerator(name: "XML_IO_ESPIPE", value: 1539)
!713 = !DIEnumerator(name: "XML_IO_ESRCH", value: 1540)
!714 = !DIEnumerator(name: "XML_IO_ETIMEDOUT", value: 1541)
!715 = !DIEnumerator(name: "XML_IO_EXDEV", value: 1542)
!716 = !DIEnumerator(name: "XML_IO_NETWORK_ATTEMPT", value: 1543)
!717 = !DIEnumerator(name: "XML_IO_ENCODER", value: 1544)
!718 = !DIEnumerator(name: "XML_IO_FLUSH", value: 1545)
!719 = !DIEnumerator(name: "XML_IO_WRITE", value: 1546)
!720 = !DIEnumerator(name: "XML_IO_NO_INPUT", value: 1547)
!721 = !DIEnumerator(name: "XML_IO_BUFFER_FULL", value: 1548)
!722 = !DIEnumerator(name: "XML_IO_LOAD_ERROR", value: 1549)
!723 = !DIEnumerator(name: "XML_IO_ENOTSOCK", value: 1550)
!724 = !DIEnumerator(name: "XML_IO_EISCONN", value: 1551)
!725 = !DIEnumerator(name: "XML_IO_ECONNREFUSED", value: 1552)
!726 = !DIEnumerator(name: "XML_IO_ENETUNREACH", value: 1553)
!727 = !DIEnumerator(name: "XML_IO_EADDRINUSE", value: 1554)
!728 = !DIEnumerator(name: "XML_IO_EALREADY", value: 1555)
!729 = !DIEnumerator(name: "XML_IO_EAFNOSUPPORT", value: 1556)
!730 = !DIEnumerator(name: "XML_XINCLUDE_RECURSION", value: 1600)
!731 = !DIEnumerator(name: "XML_XINCLUDE_PARSE_VALUE", value: 1601)
!732 = !DIEnumerator(name: "XML_XINCLUDE_ENTITY_DEF_MISMATCH", value: 1602)
!733 = !DIEnumerator(name: "XML_XINCLUDE_NO_HREF", value: 1603)
!734 = !DIEnumerator(name: "XML_XINCLUDE_NO_FALLBACK", value: 1604)
!735 = !DIEnumerator(name: "XML_XINCLUDE_HREF_URI", value: 1605)
!736 = !DIEnumerator(name: "XML_XINCLUDE_TEXT_FRAGMENT", value: 1606)
!737 = !DIEnumerator(name: "XML_XINCLUDE_TEXT_DOCUMENT", value: 1607)
!738 = !DIEnumerator(name: "XML_XINCLUDE_INVALID_CHAR", value: 1608)
!739 = !DIEnumerator(name: "XML_XINCLUDE_BUILD_FAILED", value: 1609)
!740 = !DIEnumerator(name: "XML_XINCLUDE_UNKNOWN_ENCODING", value: 1610)
!741 = !DIEnumerator(name: "XML_XINCLUDE_MULTIPLE_ROOT", value: 1611)
!742 = !DIEnumerator(name: "XML_XINCLUDE_XPTR_FAILED", value: 1612)
!743 = !DIEnumerator(name: "XML_XINCLUDE_XPTR_RESULT", value: 1613)
!744 = !DIEnumerator(name: "XML_XINCLUDE_INCLUDE_IN_INCLUDE", value: 1614)
!745 = !DIEnumerator(name: "XML_XINCLUDE_FALLBACKS_IN_INCLUDE", value: 1615)
!746 = !DIEnumerator(name: "XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE", value: 1616)
!747 = !DIEnumerator(name: "XML_XINCLUDE_DEPRECATED_NS", value: 1617)
!748 = !DIEnumerator(name: "XML_XINCLUDE_FRAGMENT_ID", value: 1618)
!749 = !DIEnumerator(name: "XML_CATALOG_MISSING_ATTR", value: 1650)
!750 = !DIEnumerator(name: "XML_CATALOG_ENTRY_BROKEN", value: 1651)
!751 = !DIEnumerator(name: "XML_CATALOG_PREFER_VALUE", value: 1652)
!752 = !DIEnumerator(name: "XML_CATALOG_NOT_CATALOG", value: 1653)
!753 = !DIEnumerator(name: "XML_CATALOG_RECURSION", value: 1654)
!754 = !DIEnumerator(name: "XML_SCHEMAP_PREFIX_UNDEFINED", value: 1700)
!755 = !DIEnumerator(name: "XML_SCHEMAP_ATTRFORMDEFAULT_VALUE", value: 1701)
!756 = !DIEnumerator(name: "XML_SCHEMAP_ATTRGRP_NONAME_NOREF", value: 1702)
!757 = !DIEnumerator(name: "XML_SCHEMAP_ATTR_NONAME_NOREF", value: 1703)
!758 = !DIEnumerator(name: "XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF", value: 1704)
!759 = !DIEnumerator(name: "XML_SCHEMAP_ELEMFORMDEFAULT_VALUE", value: 1705)
!760 = !DIEnumerator(name: "XML_SCHEMAP_ELEM_NONAME_NOREF", value: 1706)
!761 = !DIEnumerator(name: "XML_SCHEMAP_EXTENSION_NO_BASE", value: 1707)
!762 = !DIEnumerator(name: "XML_SCHEMAP_FACET_NO_VALUE", value: 1708)
!763 = !DIEnumerator(name: "XML_SCHEMAP_FAILED_BUILD_IMPORT", value: 1709)
!764 = !DIEnumerator(name: "XML_SCHEMAP_GROUP_NONAME_NOREF", value: 1710)
!765 = !DIEnumerator(name: "XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI", value: 1711)
!766 = !DIEnumerator(name: "XML_SCHEMAP_IMPORT_REDEFINE_NSNAME", value: 1712)
!767 = !DIEnumerator(name: "XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI", value: 1713)
!768 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_BOOLEAN", value: 1714)
!769 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ENUM", value: 1715)
!770 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_FACET", value: 1716)
!771 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_FACET_VALUE", value: 1717)
!772 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_MAXOCCURS", value: 1718)
!773 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_MINOCCURS", value: 1719)
!774 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_REF_AND_SUBTYPE", value: 1720)
!775 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_WHITE_SPACE", value: 1721)
!776 = !DIEnumerator(name: "XML_SCHEMAP_NOATTR_NOREF", value: 1722)
!777 = !DIEnumerator(name: "XML_SCHEMAP_NOTATION_NO_NAME", value: 1723)
!778 = !DIEnumerator(name: "XML_SCHEMAP_NOTYPE_NOREF", value: 1724)
!779 = !DIEnumerator(name: "XML_SCHEMAP_REF_AND_SUBTYPE", value: 1725)
!780 = !DIEnumerator(name: "XML_SCHEMAP_RESTRICTION_NONAME_NOREF", value: 1726)
!781 = !DIEnumerator(name: "XML_SCHEMAP_SIMPLETYPE_NONAME", value: 1727)
!782 = !DIEnumerator(name: "XML_SCHEMAP_TYPE_AND_SUBTYPE", value: 1728)
!783 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ALL_CHILD", value: 1729)
!784 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD", value: 1730)
!785 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ATTR_CHILD", value: 1731)
!786 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD", value: 1732)
!787 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP", value: 1733)
!788 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_BASE_TYPE", value: 1734)
!789 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_CHOICE_CHILD", value: 1735)
!790 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD", value: 1736)
!791 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD", value: 1737)
!792 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ELEM_CHILD", value: 1738)
!793 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD", value: 1739)
!794 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_FACET_CHILD", value: 1740)
!795 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_FACET_TYPE", value: 1741)
!796 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_GROUP_CHILD", value: 1742)
!797 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_IMPORT_CHILD", value: 1743)
!798 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_LIST_CHILD", value: 1744)
!799 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_NOTATION_CHILD", value: 1745)
!800 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD", value: 1746)
!801 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_REF", value: 1747)
!802 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD", value: 1748)
!803 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD", value: 1749)
!804 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD", value: 1750)
!805 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD", value: 1751)
!806 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD", value: 1752)
!807 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_TYPE", value: 1753)
!808 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_UNION_CHILD", value: 1754)
!809 = !DIEnumerator(name: "XML_SCHEMAP_ELEM_DEFAULT_FIXED", value: 1755)
!810 = !DIEnumerator(name: "XML_SCHEMAP_REGEXP_INVALID", value: 1756)
!811 = !DIEnumerator(name: "XML_SCHEMAP_FAILED_LOAD", value: 1757)
!812 = !DIEnumerator(name: "XML_SCHEMAP_NOTHING_TO_PARSE", value: 1758)
!813 = !DIEnumerator(name: "XML_SCHEMAP_NOROOT", value: 1759)
!814 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_GROUP", value: 1760)
!815 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_TYPE", value: 1761)
!816 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_ELEMENT", value: 1762)
!817 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_ATTRGROUP", value: 1763)
!818 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_ATTR", value: 1764)
!819 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_NOTATION", value: 1765)
!820 = !DIEnumerator(name: "XML_SCHEMAP_FAILED_PARSE", value: 1766)
!821 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_PREFIX", value: 1767)
!822 = !DIEnumerator(name: "XML_SCHEMAP_DEF_AND_PREFIX", value: 1768)
!823 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD", value: 1769)
!824 = !DIEnumerator(name: "XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI", value: 1770)
!825 = !DIEnumerator(name: "XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI", value: 1771)
!826 = !DIEnumerator(name: "XML_SCHEMAP_NOT_SCHEMA", value: 1772)
!827 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_MEMBER_TYPE", value: 1773)
!828 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_USE", value: 1774)
!829 = !DIEnumerator(name: "XML_SCHEMAP_RECURSIVE", value: 1775)
!830 = !DIEnumerator(name: "XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE", value: 1776)
!831 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_COMBINATION", value: 1777)
!832 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION", value: 1778)
!833 = !DIEnumerator(name: "XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD", value: 1779)
!834 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_NAME", value: 1780)
!835 = !DIEnumerator(name: "XML_SCHEMAP_REF_AND_CONTENT", value: 1781)
!836 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_1", value: 1782)
!837 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_2", value: 1783)
!838 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_3", value: 1784)
!839 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_4", value: 1785)
!840 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_5", value: 1786)
!841 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1", value: 1787)
!842 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1", value: 1788)
!843 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2", value: 1789)
!844 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2", value: 1790)
!845 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3", value: 1791)
!846 = !DIEnumerator(name: "XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER", value: 1792)
!847 = !DIEnumerator(name: "XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE", value: 1793)
!848 = !DIEnumerator(name: "XML_SCHEMAP_UNION_NOT_EXPRESSIBLE", value: 1794)
!849 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_3_1", value: 1795)
!850 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_3_2", value: 1796)
!851 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1", value: 1797)
!852 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2", value: 1798)
!853 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3", value: 1799)
!854 = !DIEnumerator(name: "XML_SCHEMAP_COS_CT_EXTENDS_1_3", value: 1800)
!855 = !DIEnumerator(name: "XML_SCHEMAV_NOROOT", value: 1801)
!856 = !DIEnumerator(name: "XML_SCHEMAV_UNDECLAREDELEM", value: 1802)
!857 = !DIEnumerator(name: "XML_SCHEMAV_NOTTOPLEVEL", value: 1803)
!858 = !DIEnumerator(name: "XML_SCHEMAV_MISSING", value: 1804)
!859 = !DIEnumerator(name: "XML_SCHEMAV_WRONGELEM", value: 1805)
!860 = !DIEnumerator(name: "XML_SCHEMAV_NOTYPE", value: 1806)
!861 = !DIEnumerator(name: "XML_SCHEMAV_NOROLLBACK", value: 1807)
!862 = !DIEnumerator(name: "XML_SCHEMAV_ISABSTRACT", value: 1808)
!863 = !DIEnumerator(name: "XML_SCHEMAV_NOTEMPTY", value: 1809)
!864 = !DIEnumerator(name: "XML_SCHEMAV_ELEMCONT", value: 1810)
!865 = !DIEnumerator(name: "XML_SCHEMAV_HAVEDEFAULT", value: 1811)
!866 = !DIEnumerator(name: "XML_SCHEMAV_NOTNILLABLE", value: 1812)
!867 = !DIEnumerator(name: "XML_SCHEMAV_EXTRACONTENT", value: 1813)
!868 = !DIEnumerator(name: "XML_SCHEMAV_INVALIDATTR", value: 1814)
!869 = !DIEnumerator(name: "XML_SCHEMAV_INVALIDELEM", value: 1815)
!870 = !DIEnumerator(name: "XML_SCHEMAV_NOTDETERMINIST", value: 1816)
!871 = !DIEnumerator(name: "XML_SCHEMAV_CONSTRUCT", value: 1817)
!872 = !DIEnumerator(name: "XML_SCHEMAV_INTERNAL", value: 1818)
!873 = !DIEnumerator(name: "XML_SCHEMAV_NOTSIMPLE", value: 1819)
!874 = !DIEnumerator(name: "XML_SCHEMAV_ATTRUNKNOWN", value: 1820)
!875 = !DIEnumerator(name: "XML_SCHEMAV_ATTRINVALID", value: 1821)
!876 = !DIEnumerator(name: "XML_SCHEMAV_VALUE", value: 1822)
!877 = !DIEnumerator(name: "XML_SCHEMAV_FACET", value: 1823)
!878 = !DIEnumerator(name: "XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1", value: 1824)
!879 = !DIEnumerator(name: "XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2", value: 1825)
!880 = !DIEnumerator(name: "XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3", value: 1826)
!881 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_3_1_1", value: 1827)
!882 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_3_1_2", value: 1828)
!883 = !DIEnumerator(name: "XML_SCHEMAV_CVC_FACET_VALID", value: 1829)
!884 = !DIEnumerator(name: "XML_SCHEMAV_CVC_LENGTH_VALID", value: 1830)
!885 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MINLENGTH_VALID", value: 1831)
!886 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MAXLENGTH_VALID", value: 1832)
!887 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MININCLUSIVE_VALID", value: 1833)
!888 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID", value: 1834)
!889 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID", value: 1835)
!890 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID", value: 1836)
!891 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TOTALDIGITS_VALID", value: 1837)
!892 = !DIEnumerator(name: "XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID", value: 1838)
!893 = !DIEnumerator(name: "XML_SCHEMAV_CVC_PATTERN_VALID", value: 1839)
!894 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ENUMERATION_VALID", value: 1840)
!895 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1", value: 1841)
!896 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2", value: 1842)
!897 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3", value: 1843)
!898 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4", value: 1844)
!899 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_1", value: 1845)
!900 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_2", value: 1846)
!901 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_3_1", value: 1847)
!902 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_3_2_1", value: 1848)
!903 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_3_2_2", value: 1849)
!904 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_4_1", value: 1850)
!905 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_4_2", value: 1851)
!906 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_4_3", value: 1852)
!907 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_1_1", value: 1853)
!908 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_1_2", value: 1854)
!909 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_1", value: 1855)
!910 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_2_1", value: 1856)
!911 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_2_2_1", value: 1857)
!912 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_2_2_2", value: 1858)
!913 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_6", value: 1859)
!914 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_7", value: 1860)
!915 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_1", value: 1861)
!916 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_2", value: 1862)
!917 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_3", value: 1863)
!918 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_4", value: 1864)
!919 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1", value: 1865)
!920 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1", value: 1866)
!921 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2", value: 1867)
!922 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_4", value: 1868)
!923 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1", value: 1869)
!924 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2", value: 1870)
!925 = !DIEnumerator(name: "XML_SCHEMAV_ELEMENT_CONTENT", value: 1871)
!926 = !DIEnumerator(name: "XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING", value: 1872)
!927 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_1", value: 1873)
!928 = !DIEnumerator(name: "XML_SCHEMAV_CVC_AU", value: 1874)
!929 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_1", value: 1875)
!930 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_2", value: 1876)
!931 = !DIEnumerator(name: "XML_SCHEMAV_CVC_IDC", value: 1877)
!932 = !DIEnumerator(name: "XML_SCHEMAV_CVC_WILDCARD", value: 1878)
!933 = !DIEnumerator(name: "XML_SCHEMAV_MISC", value: 1879)
!934 = !DIEnumerator(name: "XML_XPTR_UNKNOWN_SCHEME", value: 1900)
!935 = !DIEnumerator(name: "XML_XPTR_CHILDSEQ_START", value: 1901)
!936 = !DIEnumerator(name: "XML_XPTR_EVAL_FAILED", value: 1902)
!937 = !DIEnumerator(name: "XML_XPTR_EXTRA_OBJECTS", value: 1903)
!938 = !DIEnumerator(name: "XML_C14N_CREATE_CTXT", value: 1950)
!939 = !DIEnumerator(name: "XML_C14N_REQUIRES_UTF8", value: 1951)
!940 = !DIEnumerator(name: "XML_C14N_CREATE_STACK", value: 1952)
!941 = !DIEnumerator(name: "XML_C14N_INVALID_NODE", value: 1953)
!942 = !DIEnumerator(name: "XML_C14N_UNKNOW_NODE", value: 1954)
!943 = !DIEnumerator(name: "XML_C14N_RELATIVE_NAMESPACE", value: 1955)
!944 = !DIEnumerator(name: "XML_FTP_PASV_ANSWER", value: 2000)
!945 = !DIEnumerator(name: "XML_FTP_EPSV_ANSWER", value: 2001)
!946 = !DIEnumerator(name: "XML_FTP_ACCNT", value: 2002)
!947 = !DIEnumerator(name: "XML_FTP_URL_SYNTAX", value: 2003)
!948 = !DIEnumerator(name: "XML_HTTP_URL_SYNTAX", value: 2020)
!949 = !DIEnumerator(name: "XML_HTTP_USE_IP", value: 2021)
!950 = !DIEnumerator(name: "XML_HTTP_UNKNOWN_HOST", value: 2022)
!951 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_1", value: 3000)
!952 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_2", value: 3001)
!953 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_3", value: 3002)
!954 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_4", value: 3003)
!955 = !DIEnumerator(name: "XML_SCHEMAP_SRC_RESOLVE", value: 3004)
!956 = !DIEnumerator(name: "XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE", value: 3005)
!957 = !DIEnumerator(name: "XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE", value: 3006)
!958 = !DIEnumerator(name: "XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES", value: 3007)
!959 = !DIEnumerator(name: "XML_SCHEMAP_ST_PROPS_CORRECT_1", value: 3008)
!960 = !DIEnumerator(name: "XML_SCHEMAP_ST_PROPS_CORRECT_2", value: 3009)
!961 = !DIEnumerator(name: "XML_SCHEMAP_ST_PROPS_CORRECT_3", value: 3010)
!962 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_1", value: 3011)
!963 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_2", value: 3012)
!964 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1", value: 3013)
!965 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2", value: 3014)
!966 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_1", value: 3015)
!967 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1", value: 3016)
!968 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2", value: 3017)
!969 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1", value: 3018)
!970 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2", value: 3019)
!971 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3", value: 3020)
!972 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4", value: 3021)
!973 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5", value: 3022)
!974 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_1", value: 3023)
!975 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1", value: 3024)
!976 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2", value: 3025)
!977 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2", value: 3026)
!978 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1", value: 3027)
!979 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3", value: 3028)
!980 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4", value: 3029)
!981 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5", value: 3030)
!982 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_DERIVED_OK_2_1", value: 3031)
!983 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_DERIVED_OK_2_2", value: 3032)
!984 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED", value: 3033)
!985 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ELEM_MISSING", value: 3034)
!986 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED", value: 3035)
!987 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ATTR_MISSING", value: 3036)
!988 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ATTR_INVALID_VALUE", value: 3037)
!989 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_1", value: 3038)
!990 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_2_1", value: 3039)
!991 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_2_2", value: 3040)
!992 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_3", value: 3041)
!993 = !DIEnumerator(name: "XML_SCHEMAP_P_PROPS_CORRECT_1", value: 3042)
!994 = !DIEnumerator(name: "XML_SCHEMAP_P_PROPS_CORRECT_2_1", value: 3043)
!995 = !DIEnumerator(name: "XML_SCHEMAP_P_PROPS_CORRECT_2_2", value: 3044)
!996 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_2", value: 3045)
!997 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_3", value: 3046)
!998 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_4", value: 3047)
!999 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_5", value: 3048)
!1000 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_6", value: 3049)
!1001 = !DIEnumerator(name: "XML_SCHEMAP_SRC_INCLUDE", value: 3050)
!1002 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_1", value: 3051)
!1003 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_2", value: 3052)
!1004 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_3_1", value: 3053)
!1005 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_3_2", value: 3054)
!1006 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_4", value: 3055)
!1007 = !DIEnumerator(name: "XML_SCHEMAP_NO_XMLNS", value: 3056)
!1008 = !DIEnumerator(name: "XML_SCHEMAP_NO_XSI", value: 3057)
!1009 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_1", value: 3058)
!1010 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_2_1", value: 3059)
!1011 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1", value: 3060)
!1012 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2", value: 3061)
!1013 = !DIEnumerator(name: "XML_SCHEMAP_CVC_SIMPLE_TYPE", value: 3062)
!1014 = !DIEnumerator(name: "XML_SCHEMAP_COS_CT_EXTENDS_1_1", value: 3063)
!1015 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_1_1", value: 3064)
!1016 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_1_2", value: 3065)
!1017 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_2", value: 3066)
!1018 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_2_1", value: 3067)
!1019 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_2_2", value: 3068)
!1020 = !DIEnumerator(name: "XML_SCHEMAP_INTERNAL", value: 3069)
!1021 = !DIEnumerator(name: "XML_SCHEMAP_NOT_DETERMINISTIC", value: 3070)
!1022 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1", value: 3071)
!1023 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2", value: 3072)
!1024 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3", value: 3073)
!1025 = !DIEnumerator(name: "XML_SCHEMAP_MG_PROPS_CORRECT_1", value: 3074)
!1026 = !DIEnumerator(name: "XML_SCHEMAP_MG_PROPS_CORRECT_2", value: 3075)
!1027 = !DIEnumerator(name: "XML_SCHEMAP_SRC_CT_1", value: 3076)
!1028 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3", value: 3077)
!1029 = !DIEnumerator(name: "XML_SCHEMAP_AU_PROPS_CORRECT_2", value: 3078)
!1030 = !DIEnumerator(name: "XML_SCHEMAP_A_PROPS_CORRECT_2", value: 3079)
!1031 = !DIEnumerator(name: "XML_SCHEMAP_C_PROPS_CORRECT", value: 3080)
!1032 = !DIEnumerator(name: "XML_SCHEMAP_SRC_REDEFINE", value: 3081)
!1033 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT", value: 3082)
!1034 = !DIEnumerator(name: "XML_SCHEMAP_WARN_SKIP_SCHEMA", value: 3083)
!1035 = !DIEnumerator(name: "XML_SCHEMAP_WARN_UNLOCATED_SCHEMA", value: 3084)
!1036 = !DIEnumerator(name: "XML_SCHEMAP_WARN_ATTR_REDECL_PROH", value: 3085)
!1037 = !DIEnumerator(name: "XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH", value: 3086)
!1038 = !DIEnumerator(name: "XML_SCHEMAP_AG_PROPS_CORRECT", value: 3087)
!1039 = !DIEnumerator(name: "XML_SCHEMAP_COS_CT_EXTENDS_1_2", value: 3088)
!1040 = !DIEnumerator(name: "XML_SCHEMAP_AU_PROPS_CORRECT", value: 3089)
!1041 = !DIEnumerator(name: "XML_SCHEMAP_A_PROPS_CORRECT_3", value: 3090)
!1042 = !DIEnumerator(name: "XML_SCHEMAP_COS_ALL_LIMITED", value: 3091)
!1043 = !DIEnumerator(name: "XML_SCHEMATRONV_ASSERT", value: 4000)
!1044 = !DIEnumerator(name: "XML_SCHEMATRONV_REPORT", value: 4001)
!1045 = !DIEnumerator(name: "XML_MODULE_OPEN", value: 4900)
!1046 = !DIEnumerator(name: "XML_MODULE_CLOSE", value: 4901)
!1047 = !DIEnumerator(name: "XML_CHECK_FOUND_ELEMENT", value: 5000)
!1048 = !DIEnumerator(name: "XML_CHECK_FOUND_ATTRIBUTE", value: 5001)
!1049 = !DIEnumerator(name: "XML_CHECK_FOUND_TEXT", value: 5002)
!1050 = !DIEnumerator(name: "XML_CHECK_FOUND_CDATA", value: 5003)
!1051 = !DIEnumerator(name: "XML_CHECK_FOUND_ENTITYREF", value: 5004)
!1052 = !DIEnumerator(name: "XML_CHECK_FOUND_ENTITY", value: 5005)
!1053 = !DIEnumerator(name: "XML_CHECK_FOUND_PI", value: 5006)
!1054 = !DIEnumerator(name: "XML_CHECK_FOUND_COMMENT", value: 5007)
!1055 = !DIEnumerator(name: "XML_CHECK_FOUND_DOCTYPE", value: 5008)
!1056 = !DIEnumerator(name: "XML_CHECK_FOUND_FRAGMENT", value: 5009)
!1057 = !DIEnumerator(name: "XML_CHECK_FOUND_NOTATION", value: 5010)
!1058 = !DIEnumerator(name: "XML_CHECK_UNKNOWN_NODE", value: 5011)
!1059 = !DIEnumerator(name: "XML_CHECK_ENTITY_TYPE", value: 5012)
!1060 = !DIEnumerator(name: "XML_CHECK_NO_PARENT", value: 5013)
!1061 = !DIEnumerator(name: "XML_CHECK_NO_DOC", value: 5014)
!1062 = !DIEnumerator(name: "XML_CHECK_NO_NAME", value: 5015)
!1063 = !DIEnumerator(name: "XML_CHECK_NO_ELEM", value: 5016)
!1064 = !DIEnumerator(name: "XML_CHECK_WRONG_DOC", value: 5017)
!1065 = !DIEnumerator(name: "XML_CHECK_NO_PREV", value: 5018)
!1066 = !DIEnumerator(name: "XML_CHECK_WRONG_PREV", value: 5019)
!1067 = !DIEnumerator(name: "XML_CHECK_NO_NEXT", value: 5020)
!1068 = !DIEnumerator(name: "XML_CHECK_WRONG_NEXT", value: 5021)
!1069 = !DIEnumerator(name: "XML_CHECK_NOT_DTD", value: 5022)
!1070 = !DIEnumerator(name: "XML_CHECK_NOT_ATTR", value: 5023)
!1071 = !DIEnumerator(name: "XML_CHECK_NOT_ATTR_DECL", value: 5024)
!1072 = !DIEnumerator(name: "XML_CHECK_NOT_ELEM_DECL", value: 5025)
!1073 = !DIEnumerator(name: "XML_CHECK_NOT_ENTITY_DECL", value: 5026)
!1074 = !DIEnumerator(name: "XML_CHECK_NOT_NS_DECL", value: 5027)
!1075 = !DIEnumerator(name: "XML_CHECK_NO_HREF", value: 5028)
!1076 = !DIEnumerator(name: "XML_CHECK_WRONG_PARENT", value: 5029)
!1077 = !DIEnumerator(name: "XML_CHECK_NS_SCOPE", value: 5030)
!1078 = !DIEnumerator(name: "XML_CHECK_NS_ANCESTOR", value: 5031)
!1079 = !DIEnumerator(name: "XML_CHECK_NOT_UTF8", value: 5032)
!1080 = !DIEnumerator(name: "XML_CHECK_NO_DICT", value: 5033)
!1081 = !DIEnumerator(name: "XML_CHECK_NOT_NCNAME", value: 5034)
!1082 = !DIEnumerator(name: "XML_CHECK_OUTSIDE_DICT", value: 5035)
!1083 = !DIEnumerator(name: "XML_CHECK_WRONG_NAME", value: 5036)
!1084 = !DIEnumerator(name: "XML_CHECK_NAME_NOT_NULL", value: 5037)
!1085 = !DIEnumerator(name: "XML_I18N_NO_NAME", value: 6000)
!1086 = !DIEnumerator(name: "XML_I18N_NO_HANDLER", value: 6001)
!1087 = !DIEnumerator(name: "XML_I18N_EXCESS_HANDLER", value: 6002)
!1088 = !DIEnumerator(name: "XML_I18N_CONV_FAILED", value: 6003)
!1089 = !DIEnumerator(name: "XML_I18N_NO_OUTPUT", value: 6004)
!1090 = !DIEnumerator(name: "XML_BUF_OVERFLOW", value: 7000)
!1091 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1092, line: 29, baseType: !277, size: 32, elements: !1093)
!1092 = !DIFile(filename: "./include/libxml/xmlsave.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "eed2463cad941f74f99b8b9bc03aa74d")
!1093 = !{!1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101}
!1094 = !DIEnumerator(name: "XML_SAVE_FORMAT", value: 1)
!1095 = !DIEnumerator(name: "XML_SAVE_NO_DECL", value: 2)
!1096 = !DIEnumerator(name: "XML_SAVE_NO_EMPTY", value: 4)
!1097 = !DIEnumerator(name: "XML_SAVE_NO_XHTML", value: 8)
!1098 = !DIEnumerator(name: "XML_SAVE_XHTML", value: 16)
!1099 = !DIEnumerator(name: "XML_SAVE_AS_XML", value: 32)
!1100 = !DIEnumerator(name: "XML_SAVE_AS_HTML", value: 64)
!1101 = !DIEnumerator(name: "XML_SAVE_WSNONSIG", value: 128)
!1102 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1103, line: 58, baseType: !1104, size: 32, elements: !1105)
!1103 = !DIFile(filename: "./include/libxml/encoding.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "807b84fade38abad3ae0d9b6af714dbc")
!1104 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1105 = !{!1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1106 = !DIEnumerator(name: "XML_CHAR_ENCODING_ERROR", value: -1)
!1107 = !DIEnumerator(name: "XML_CHAR_ENCODING_NONE", value: 0)
!1108 = !DIEnumerator(name: "XML_CHAR_ENCODING_UTF8", value: 1)
!1109 = !DIEnumerator(name: "XML_CHAR_ENCODING_UTF16LE", value: 2)
!1110 = !DIEnumerator(name: "XML_CHAR_ENCODING_UTF16BE", value: 3)
!1111 = !DIEnumerator(name: "XML_CHAR_ENCODING_UCS4LE", value: 4)
!1112 = !DIEnumerator(name: "XML_CHAR_ENCODING_UCS4BE", value: 5)
!1113 = !DIEnumerator(name: "XML_CHAR_ENCODING_EBCDIC", value: 6)
!1114 = !DIEnumerator(name: "XML_CHAR_ENCODING_UCS4_2143", value: 7)
!1115 = !DIEnumerator(name: "XML_CHAR_ENCODING_UCS4_3412", value: 8)
!1116 = !DIEnumerator(name: "XML_CHAR_ENCODING_UCS2", value: 9)
!1117 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_1", value: 10)
!1118 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_2", value: 11)
!1119 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_3", value: 12)
!1120 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_4", value: 13)
!1121 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_5", value: 14)
!1122 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_6", value: 15)
!1123 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_7", value: 16)
!1124 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_8", value: 17)
!1125 = !DIEnumerator(name: "XML_CHAR_ENCODING_8859_9", value: 18)
!1126 = !DIEnumerator(name: "XML_CHAR_ENCODING_2022_JP", value: 19)
!1127 = !DIEnumerator(name: "XML_CHAR_ENCODING_SHIFT_JIS", value: 20)
!1128 = !DIEnumerator(name: "XML_CHAR_ENCODING_EUC_JP", value: 21)
!1129 = !DIEnumerator(name: "XML_CHAR_ENCODING_ASCII", value: 22)
!1130 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !355, line: 36, baseType: !277, size: 32, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162}
!1132 = !DIEnumerator(name: "XML_FROM_NONE", value: 0)
!1133 = !DIEnumerator(name: "XML_FROM_PARSER", value: 1)
!1134 = !DIEnumerator(name: "XML_FROM_TREE", value: 2)
!1135 = !DIEnumerator(name: "XML_FROM_NAMESPACE", value: 3)
!1136 = !DIEnumerator(name: "XML_FROM_DTD", value: 4)
!1137 = !DIEnumerator(name: "XML_FROM_HTML", value: 5)
!1138 = !DIEnumerator(name: "XML_FROM_MEMORY", value: 6)
!1139 = !DIEnumerator(name: "XML_FROM_OUTPUT", value: 7)
!1140 = !DIEnumerator(name: "XML_FROM_IO", value: 8)
!1141 = !DIEnumerator(name: "XML_FROM_FTP", value: 9)
!1142 = !DIEnumerator(name: "XML_FROM_HTTP", value: 10)
!1143 = !DIEnumerator(name: "XML_FROM_XINCLUDE", value: 11)
!1144 = !DIEnumerator(name: "XML_FROM_XPATH", value: 12)
!1145 = !DIEnumerator(name: "XML_FROM_XPOINTER", value: 13)
!1146 = !DIEnumerator(name: "XML_FROM_REGEXP", value: 14)
!1147 = !DIEnumerator(name: "XML_FROM_DATATYPE", value: 15)
!1148 = !DIEnumerator(name: "XML_FROM_SCHEMASP", value: 16)
!1149 = !DIEnumerator(name: "XML_FROM_SCHEMASV", value: 17)
!1150 = !DIEnumerator(name: "XML_FROM_RELAXNGP", value: 18)
!1151 = !DIEnumerator(name: "XML_FROM_RELAXNGV", value: 19)
!1152 = !DIEnumerator(name: "XML_FROM_CATALOG", value: 20)
!1153 = !DIEnumerator(name: "XML_FROM_C14N", value: 21)
!1154 = !DIEnumerator(name: "XML_FROM_XSLT", value: 22)
!1155 = !DIEnumerator(name: "XML_FROM_VALID", value: 23)
!1156 = !DIEnumerator(name: "XML_FROM_CHECK", value: 24)
!1157 = !DIEnumerator(name: "XML_FROM_WRITER", value: 25)
!1158 = !DIEnumerator(name: "XML_FROM_MODULE", value: 26)
!1159 = !DIEnumerator(name: "XML_FROM_I18N", value: 27)
!1160 = !DIEnumerator(name: "XML_FROM_SCHEMATRONV", value: 28)
!1161 = !DIEnumerator(name: "XML_FROM_BUFFER", value: 29)
!1162 = !DIEnumerator(name: "XML_FROM_URI", value: 30)
!1163 = !{!1164, !1165, !1169, !1104, !1273, !1321, !1178, !1285, !1193, !1324, !1345, !1348, !1351, !1384, !1422, !1448, !1451, !1452}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlChar", file: !1167, line: 28, baseType: !1168)
!1167 = !DIFile(filename: "./include/libxml/xmlstring.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "82efb8a055d5fc8eb7d815ed471eca53")
!1168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNodePtr", file: !276, line: 488, baseType: !1170)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNode", file: !276, line: 487, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlNode", file: !276, line: 489, size: 960, elements: !1173)
!1173 = !{!1174, !1175, !1177, !1180, !1182, !1183, !1184, !1185, !1186, !1247, !1250, !1251, !1268, !1269, !1270, !1272}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1172, file: !276, line: 490, baseType: !1164, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1172, file: !276, line: 491, baseType: !1176, size: 32, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementType", file: !276, line: 183, baseType: !285)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1172, file: !276, line: 492, baseType: !1178, size: 64, offset: 128)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1172, file: !276, line: 493, baseType: !1181, size: 64, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1172, file: !276, line: 494, baseType: !1181, size: 64, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1172, file: !276, line: 495, baseType: !1181, size: 64, offset: 320)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1172, file: !276, line: 496, baseType: !1181, size: 64, offset: 384)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1172, file: !276, line: 497, baseType: !1181, size: 64, offset: 448)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !1172, file: !276, line: 498, baseType: !1187, size: 64, offset: 512)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlDoc", file: !276, line: 551, size: 1408, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1222, !1223, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1244, !1245, !1246}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1188, file: !276, line: 552, baseType: !1164, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1188, file: !276, line: 553, baseType: !1176, size: 32, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1188, file: !276, line: 554, baseType: !1193, size: 64, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1188, file: !276, line: 555, baseType: !1181, size: 64, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1188, file: !276, line: 556, baseType: !1181, size: 64, offset: 256)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1188, file: !276, line: 557, baseType: !1181, size: 64, offset: 320)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1188, file: !276, line: 558, baseType: !1181, size: 64, offset: 384)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1188, file: !276, line: 559, baseType: !1181, size: 64, offset: 448)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !1188, file: !276, line: 560, baseType: !1187, size: 64, offset: 512)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1188, file: !276, line: 563, baseType: !1104, size: 32, offset: 576)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "standalone", scope: !1188, file: !276, line: 564, baseType: !1104, size: 32, offset: 608)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "intSubset", scope: !1188, file: !276, line: 570, baseType: !1203, size: 64, offset: 640)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlDtd", file: !276, line: 406, size: 1024, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1204, file: !276, line: 407, baseType: !1164, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1204, file: !276, line: 408, baseType: !1176, size: 32, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1204, file: !276, line: 409, baseType: !1178, size: 64, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1204, file: !276, line: 410, baseType: !1181, size: 64, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1204, file: !276, line: 411, baseType: !1181, size: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1204, file: !276, line: 412, baseType: !1187, size: 64, offset: 320)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1204, file: !276, line: 413, baseType: !1181, size: 64, offset: 384)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1204, file: !276, line: 414, baseType: !1181, size: 64, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !1204, file: !276, line: 415, baseType: !1187, size: 64, offset: 512)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "notations", scope: !1204, file: !276, line: 418, baseType: !1164, size: 64, offset: 576)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1204, file: !276, line: 419, baseType: !1164, size: 64, offset: 640)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1204, file: !276, line: 420, baseType: !1164, size: 64, offset: 704)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "entities", scope: !1204, file: !276, line: 421, baseType: !1164, size: 64, offset: 768)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ExternalID", scope: !1204, file: !276, line: 422, baseType: !1178, size: 64, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "SystemID", scope: !1204, file: !276, line: 423, baseType: !1178, size: 64, offset: 896)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pentities", scope: !1204, file: !276, line: 424, baseType: !1164, size: 64, offset: 960)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "extSubset", scope: !1188, file: !276, line: 571, baseType: !1203, size: 64, offset: 704)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "oldNs", scope: !1188, file: !276, line: 572, baseType: !1224, size: 64, offset: 768)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlNs", file: !276, line: 389, size: 384, elements: !1226)
!1226 = !{!1227, !1228, !1230, !1231, !1232, !1233}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1225, file: !276, line: 390, baseType: !1224, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1225, file: !276, line: 391, baseType: !1229, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNsType", file: !276, line: 375, baseType: !1176)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "href", scope: !1225, file: !276, line: 392, baseType: !1178, size: 64, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !1225, file: !276, line: 393, baseType: !1178, size: 64, offset: 192)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1225, file: !276, line: 394, baseType: !1164, size: 64, offset: 256)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1225, file: !276, line: 395, baseType: !1187, size: 64, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1188, file: !276, line: 573, baseType: !1178, size: 64, offset: 832)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1188, file: !276, line: 574, baseType: !1178, size: 64, offset: 896)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !1188, file: !276, line: 575, baseType: !1164, size: 64, offset: 960)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1188, file: !276, line: 576, baseType: !1164, size: 64, offset: 1024)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "URL", scope: !1188, file: !276, line: 577, baseType: !1178, size: 64, offset: 1088)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !1188, file: !276, line: 578, baseType: !1104, size: 32, offset: 1152)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1188, file: !276, line: 580, baseType: !1241, size: 64, offset: 1216)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlDict", file: !1243, line: 24, flags: DIFlagFwdDecl)
!1243 = !DIFile(filename: "./include/libxml/dict.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "a48513ceb9774ebece2daa8a2cd52f07")
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "psvi", scope: !1188, file: !276, line: 581, baseType: !1164, size: 64, offset: 1280)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "parseFlags", scope: !1188, file: !276, line: 582, baseType: !1104, size: 32, offset: 1344)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1188, file: !276, line: 584, baseType: !1104, size: 32, offset: 1376)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1172, file: !276, line: 501, baseType: !1248, size: 64, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNs", file: !276, line: 387, baseType: !1225)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !1172, file: !276, line: 502, baseType: !1165, size: 64, offset: 640)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1172, file: !276, line: 503, baseType: !1252, size: 64, offset: 704)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlAttr", file: !276, line: 434, size: 768, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1267}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1253, file: !276, line: 435, baseType: !1164, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1253, file: !276, line: 436, baseType: !1176, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1253, file: !276, line: 437, baseType: !1178, size: 64, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1253, file: !276, line: 438, baseType: !1181, size: 64, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1253, file: !276, line: 439, baseType: !1181, size: 64, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1253, file: !276, line: 440, baseType: !1181, size: 64, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !276, line: 441, baseType: !1252, size: 64, offset: 384)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1253, file: !276, line: 442, baseType: !1252, size: 64, offset: 448)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !1253, file: !276, line: 443, baseType: !1187, size: 64, offset: 512)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1253, file: !276, line: 444, baseType: !1248, size: 64, offset: 576)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "atype", scope: !1253, file: !276, line: 445, baseType: !1266, size: 32, offset: 640)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttributeType", file: !276, line: 217, baseType: !308)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "psvi", scope: !1253, file: !276, line: 446, baseType: !1164, size: 64, offset: 704)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "nsDef", scope: !1172, file: !276, line: 504, baseType: !1248, size: 64, offset: 768)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "psvi", scope: !1172, file: !276, line: 505, baseType: !1164, size: 64, offset: 832)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1172, file: !276, line: 506, baseType: !1271, size: 16, offset: 896)
!1271 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1172, file: !276, line: 507, baseType: !1271, size: 16, offset: 912)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlOutputBufferPtr", file: !276, line: 32, baseType: !1274)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlOutputBuffer", file: !276, line: 31, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlOutputBuffer", file: !1277, line: 141, size: 448, elements: !1278)
!1277 = !DIFile(filename: "./include/libxml/xmlIO.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "cb4be47d203f7d54f374b9272db7e3f3")
!1278 = !{!1279, !1280, !1286, !1291, !1313, !1318, !1319, !1320}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1276, file: !1277, line: 142, baseType: !1164, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "writecallback", scope: !1276, file: !1277, line: 143, baseType: !1281, size: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlOutputWriteCallback", file: !1277, line: 100, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!1104, !1164, !1285, !1104}
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "closecallback", scope: !1276, file: !1277, line: 144, baseType: !1287, size: 64, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlOutputCloseCallback", file: !1277, line: 110, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!1104, !1164}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !1276, file: !1277, line: 146, baseType: !1292, size: 64, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingHandlerPtr", file: !1103, line: 145, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingHandler", file: !1103, line: 144, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlCharEncodingHandler", file: !1103, line: 146, size: 320, elements: !1296)
!1296 = !{!1297, !1298, !1307, !1309, !1312}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1295, file: !1103, line: 147, baseType: !1193, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !1295, file: !1103, line: 148, baseType: !1299, size: 64, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingInputFunc", file: !1103, line: 101, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!1104, !1303, !1304, !1305, !1304}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1168)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1295, file: !1103, line: 149, baseType: !1308, size: 64, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingOutputFunc", file: !1103, line: 123, baseType: !1300)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "iconv_in", scope: !1295, file: !1103, line: 151, baseType: !1310, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "libiconv_t", file: !1311, line: 46, baseType: !1164)
!1311 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack/linux-ubuntu22.04-zen2/clang-18.0.0/libiconv-1.17-yjxuwwhaestsjkdrfxfvtlovzccan2px/include/iconv.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build", checksumkind: CSK_MD5, checksum: "b2fc3eb69b19b470f76aa362172c4039")
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "iconv_out", scope: !1295, file: !1103, line: 152, baseType: !1310, size: 64, offset: 256)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1276, file: !1277, line: 148, baseType: !1314, size: 64, offset: 256)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlBufPtr", file: !276, line: 114, baseType: !1315)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlBuf", file: !276, line: 105, baseType: !1317)
!1317 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlBuf", file: !276, line: 105, flags: DIFlagFwdDecl)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !1276, file: !1277, line: 149, baseType: !1314, size: 64, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1276, file: !1277, line: 150, baseType: !1104, size: 32, offset: 384)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1276, file: !1277, line: 151, baseType: !1104, size: 32, offset: 416)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1322, line: 70, baseType: !1323)
!1322 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!1323 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlSaveCtxtPtr", file: !1092, line: 42, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlSaveCtxt", file: !1092, line: 41, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlSaveCtxt", file: !2, line: 78, size: 1216, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1341, !1342, !1343, !1344}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1327, file: !2, line: 79, baseType: !1164, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1327, file: !2, line: 80, baseType: !1104, size: 32, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1327, file: !2, line: 81, baseType: !1104, size: 32, offset: 96)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1327, file: !2, line: 82, baseType: !1178, size: 64, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1327, file: !2, line: 83, baseType: !1178, size: 64, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1327, file: !2, line: 84, baseType: !1292, size: 64, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1327, file: !2, line: 85, baseType: !1273, size: 64, offset: 320)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1327, file: !2, line: 86, baseType: !1104, size: 32, offset: 384)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1327, file: !2, line: 87, baseType: !1104, size: 32, offset: 416)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1327, file: !2, line: 88, baseType: !1104, size: 32, offset: 448)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "indent", scope: !1327, file: !2, line: 89, baseType: !1340, size: 488, offset: 480)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 488, elements: !208)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "indent_nr", scope: !1327, file: !2, line: 90, baseType: !1104, size: 32, offset: 992)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "indent_size", scope: !1327, file: !2, line: 91, baseType: !1104, size: 32, offset: 1024)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "escape", scope: !1327, file: !2, line: 92, baseType: !1308, size: 64, offset: 1088)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "escapeAttr", scope: !1327, file: !2, line: 93, baseType: !1308, size: 64, offset: 1152)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDocPtr", file: !276, line: 550, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDoc", file: !276, line: 549, baseType: !1188)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDtdPtr", file: !276, line: 405, baseType: !1349)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDtd", file: !276, line: 404, baseType: !1204)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementPtr", file: !276, line: 345, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElement", file: !276, line: 344, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlElement", file: !276, line: 346, size: 896, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1367, !1383, !1415, !1416}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1354, file: !276, line: 347, baseType: !1164, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1354, file: !276, line: 348, baseType: !1176, size: 32, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1354, file: !276, line: 349, baseType: !1178, size: 64, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1354, file: !276, line: 350, baseType: !1181, size: 64, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1354, file: !276, line: 351, baseType: !1181, size: 64, offset: 256)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1354, file: !276, line: 352, baseType: !1203, size: 64, offset: 320)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1354, file: !276, line: 353, baseType: !1181, size: 64, offset: 384)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1354, file: !276, line: 354, baseType: !1181, size: 64, offset: 448)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !1354, file: !276, line: 355, baseType: !1187, size: 64, offset: 512)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "etype", scope: !1354, file: !276, line: 357, baseType: !1366, size: 32, offset: 576)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementTypeVal", file: !276, line: 328, baseType: !320)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !1354, file: !276, line: 358, baseType: !1368, size: 64, offset: 640)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContentPtr", file: !276, line: 305, baseType: !1369)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContent", file: !276, line: 304, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlElementContent", file: !276, line: 306, size: 384, elements: !1372)
!1372 = !{!1373, !1375, !1377, !1378, !1380, !1381, !1382}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1371, file: !276, line: 307, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContentType", file: !276, line: 283, baseType: !327)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ocur", scope: !1371, file: !276, line: 308, baseType: !1376, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContentOccur", file: !276, line: 295, baseType: !333)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1371, file: !276, line: 309, baseType: !1178, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1371, file: !276, line: 310, baseType: !1379, size: 64, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1371, file: !276, line: 311, baseType: !1379, size: 64, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1371, file: !276, line: 312, baseType: !1379, size: 64, offset: 256)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !1371, file: !276, line: 313, baseType: !1178, size: 64, offset: 320)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1354, file: !276, line: 359, baseType: !1384, size: 64, offset: 704)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttributePtr", file: !276, line: 252, baseType: !1385)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttribute", file: !276, line: 251, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlAttribute", file: !276, line: 253, size: 960, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1400, !1401, !1403, !1404, !1413, !1414}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1387, file: !276, line: 254, baseType: !1164, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1387, file: !276, line: 255, baseType: !1176, size: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1387, file: !276, line: 256, baseType: !1178, size: 64, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1387, file: !276, line: 257, baseType: !1181, size: 64, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1387, file: !276, line: 258, baseType: !1181, size: 64, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1387, file: !276, line: 259, baseType: !1203, size: 64, offset: 320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1387, file: !276, line: 260, baseType: !1181, size: 64, offset: 384)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1387, file: !276, line: 261, baseType: !1181, size: 64, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !1387, file: !276, line: 262, baseType: !1187, size: 64, offset: 512)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "nexth", scope: !1387, file: !276, line: 264, baseType: !1399, size: 64, offset: 576)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "atype", scope: !1387, file: !276, line: 265, baseType: !1266, size: 32, offset: 640)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1387, file: !276, line: 266, baseType: !1402, size: 32, offset: 672)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttributeDefault", file: !276, line: 230, baseType: !339)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "defaultValue", scope: !1387, file: !276, line: 267, baseType: !1178, size: 64, offset: 704)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !1387, file: !276, line: 268, baseType: !1405, size: 64, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEnumerationPtr", file: !276, line: 239, baseType: !1406)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEnumeration", file: !276, line: 238, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlEnumeration", file: !276, line: 240, size: 128, elements: !1409)
!1409 = !{!1410, !1412}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1408, file: !276, line: 241, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1408, file: !276, line: 242, baseType: !1178, size: 64, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !1387, file: !276, line: 269, baseType: !1178, size: 64, offset: 832)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1387, file: !276, line: 270, baseType: !1178, size: 64, offset: 896)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !1354, file: !276, line: 360, baseType: !1178, size: 64, offset: 768)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "contModel", scope: !1354, file: !276, line: 362, baseType: !1417, size: 64, offset: 832)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegexpPtr", file: !1418, line: 29, baseType: !1419)
!1418 = !DIFile(filename: "./include/libxml/xmlregexp.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "fea3110c96e8cd9013900e1c8e5b6c0b")
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegexp", file: !1418, line: 28, baseType: !1421)
!1421 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegexp", file: !1418, line: 28, flags: DIFlagFwdDecl)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEntityPtr", file: !276, line: 49, baseType: !1423)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEntity", file: !276, line: 48, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlEntity", file: !346, line: 38, size: 1088, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1441, !1442, !1443, !1445, !1446, !1447}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1425, file: !346, line: 39, baseType: !1164, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1425, file: !346, line: 40, baseType: !1176, size: 32, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1425, file: !346, line: 41, baseType: !1178, size: 64, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1425, file: !346, line: 42, baseType: !1181, size: 64, offset: 192)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1425, file: !346, line: 43, baseType: !1181, size: 64, offset: 256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1425, file: !346, line: 44, baseType: !1203, size: 64, offset: 320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1425, file: !346, line: 45, baseType: !1181, size: 64, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1425, file: !346, line: 46, baseType: !1181, size: 64, offset: 448)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !1425, file: !346, line: 47, baseType: !1187, size: 64, offset: 512)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1425, file: !346, line: 49, baseType: !1165, size: 64, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !1425, file: !346, line: 50, baseType: !1165, size: 64, offset: 640)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1425, file: !346, line: 51, baseType: !1104, size: 32, offset: 704)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "etype", scope: !1425, file: !346, line: 52, baseType: !1440, size: 32, offset: 736)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEntityType", file: !346, line: 31, baseType: !345)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ExternalID", scope: !1425, file: !346, line: 53, baseType: !1178, size: 64, offset: 768)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "SystemID", scope: !1425, file: !346, line: 54, baseType: !1178, size: 64, offset: 832)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "nexte", scope: !1425, file: !346, line: 56, baseType: !1444, size: 64, offset: 896)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "URI", scope: !1425, file: !346, line: 57, baseType: !1178, size: 64, offset: 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1425, file: !346, line: 58, baseType: !1104, size: 32, offset: 1024)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "checked", scope: !1425, file: !346, line: 59, baseType: !1104, size: 32, offset: 1056)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttrPtr", file: !276, line: 433, baseType: !1449)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttr", file: !276, line: 432, baseType: !1253)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNsPtr", file: !276, line: 388, baseType: !1248)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNotationTablePtr", file: !1453, line: 118, baseType: !1454)
!1453 = !DIFile(filename: "./include/libxml/valid.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "3c082c0a5b81e1bc9fd9a21b69014584")
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNotationTable", file: !1453, line: 117, baseType: !1456)
!1456 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlHashTable", file: !1457, line: 21, flags: DIFlagFwdDecl)
!1457 = !DIFile(filename: "./include/libxml/hash.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "af6927d60ab5a971b68a65626d903bb2")
!1458 = !{!0, !8, !13, !18, !23, !28, !33, !38, !40, !45, !50, !52, !54, !56, !61, !63, !65, !70, !75, !77, !79, !81, !83, !88, !90, !95, !97, !102, !107, !112, !114, !119, !121, !126, !128, !130, !132, !134, !136, !141, !146, !148, !150, !152, !154, !156, !158, !160, !165, !167, !169, !171, !173, !175, !177, !179, !184, !186, !188, !190, !195, !197, !199, !201, !203, !205, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !232, !234, !236, !238, !243, !248, !253, !255, !257, !259, !261, !263, !265, !267, !269, !271}
!1459 = !{i32 7, !"Dwarf Version", i32 5}
!1460 = !{i32 2, !"Debug Info Version", i32 3}
!1461 = !{i32 1, !"wchar_size", i32 4}
!1462 = !{i32 8, !"PIC Level", i32 2}
!1463 = !{i32 7, !"uwtable", i32 2}
!1464 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!1465 = distinct !DISubprogram(name: "xmlIsXHTML__internal_alias", scope: !2, file: !2, line: 55, type: !1466, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1468)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!1104, !1178, !1178}
!1468 = !{!1469, !1470}
!1469 = !DILocalVariable(name: "systemID", arg: 1, scope: !1465, file: !2, line: 55, type: !1178)
!1470 = !DILocalVariable(name: "publicID", arg: 2, scope: !1465, file: !2, line: 55, type: !1178)
!1471 = !{!1472, !1472, i64 0}
!1472 = !{!"any pointer", !1473, i64 0}
!1473 = !{!"omnipotent char", !1474, i64 0}
!1474 = !{!"Simple C/C++ TBAA"}
!1475 = !DILocation(line: 55, column: 27, scope: !1465)
!1476 = !DILocation(line: 55, column: 52, scope: !1465)
!1477 = !DILocation(line: 56, column: 10, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1465, file: !2, line: 56, column: 9)
!1479 = !DILocation(line: 56, column: 19, scope: !1478)
!1480 = !DILocation(line: 56, column: 28, scope: !1478)
!1481 = !DILocation(line: 56, column: 32, scope: !1478)
!1482 = !DILocation(line: 56, column: 41, scope: !1478)
!1483 = !DILocation(line: 56, column: 9, scope: !1465)
!1484 = !DILocation(line: 57, column: 2, scope: !1478)
!1485 = !DILocation(line: 58, column: 9, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1465, file: !2, line: 58, column: 9)
!1487 = !DILocation(line: 58, column: 18, scope: !1486)
!1488 = !DILocation(line: 58, column: 9, scope: !1465)
!1489 = !DILocation(line: 59, column: 18, scope: !1490)
!1490 = distinct !DILexicalBlock(scope: !1491, file: !2, line: 59, column: 6)
!1491 = distinct !DILexicalBlock(scope: !1486, file: !2, line: 58, column: 27)
!1492 = !DILocation(line: 59, column: 6, scope: !1490)
!1493 = !DILocation(line: 59, column: 6, scope: !1491)
!1494 = !DILocation(line: 59, column: 53, scope: !1490)
!1495 = !DILocation(line: 60, column: 18, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1491, file: !2, line: 60, column: 6)
!1497 = !DILocation(line: 60, column: 6, scope: !1496)
!1498 = !DILocation(line: 60, column: 6, scope: !1491)
!1499 = !DILocation(line: 60, column: 52, scope: !1496)
!1500 = !DILocation(line: 61, column: 18, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1491, file: !2, line: 61, column: 6)
!1502 = !DILocation(line: 61, column: 6, scope: !1501)
!1503 = !DILocation(line: 61, column: 6, scope: !1491)
!1504 = !DILocation(line: 61, column: 52, scope: !1501)
!1505 = !DILocation(line: 62, column: 5, scope: !1491)
!1506 = !DILocation(line: 63, column: 9, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1465, file: !2, line: 63, column: 9)
!1508 = !DILocation(line: 63, column: 18, scope: !1507)
!1509 = !DILocation(line: 63, column: 9, scope: !1465)
!1510 = !DILocation(line: 64, column: 18, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1512, file: !2, line: 64, column: 6)
!1512 = distinct !DILexicalBlock(scope: !1507, file: !2, line: 63, column: 27)
!1513 = !DILocation(line: 64, column: 6, scope: !1511)
!1514 = !DILocation(line: 64, column: 6, scope: !1512)
!1515 = !DILocation(line: 64, column: 53, scope: !1511)
!1516 = !DILocation(line: 65, column: 18, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1512, file: !2, line: 65, column: 6)
!1518 = !DILocation(line: 65, column: 6, scope: !1517)
!1519 = !DILocation(line: 65, column: 6, scope: !1512)
!1520 = !DILocation(line: 65, column: 52, scope: !1517)
!1521 = !DILocation(line: 66, column: 18, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1512, file: !2, line: 66, column: 6)
!1523 = !DILocation(line: 66, column: 6, scope: !1522)
!1524 = !DILocation(line: 66, column: 6, scope: !1512)
!1525 = !DILocation(line: 66, column: 52, scope: !1522)
!1526 = !DILocation(line: 67, column: 5, scope: !1512)
!1527 = !DILocation(line: 68, column: 5, scope: !1465)
!1528 = !DILocation(line: 69, column: 1, scope: !1465)
!1529 = !DISubprogram(name: "xmlStrEqual__internal_alias", scope: !1530, file: !1530, line: 10811, type: !1466, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1530 = !DIFile(filename: "./elfgcchack.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "8278cf5308b2e49b9b44b5d0704ddb9f")
!1531 = distinct !DISubprogram(name: "xmlBufDumpNotationTable", scope: !2, file: !2, line: 467, type: !1532, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1534)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{null, !1314, !1452}
!1534 = !{!1535, !1536, !1537}
!1535 = !DILocalVariable(name: "buf", arg: 1, scope: !1531, file: !2, line: 467, type: !1314)
!1536 = !DILocalVariable(name: "table", arg: 2, scope: !1531, file: !2, line: 467, type: !1452)
!1537 = !DILocalVariable(name: "buffer", scope: !1531, file: !2, line: 468, type: !1538)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlBufferPtr", file: !276, line: 90, baseType: !1539)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlBuffer", file: !276, line: 89, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlBuffer", file: !276, line: 91, size: 256, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1548}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !1541, file: !276, line: 92, baseType: !1165, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1541, file: !276, line: 93, baseType: !277, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1541, file: !276, line: 94, baseType: !277, size: 32, offset: 96)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1541, file: !276, line: 95, baseType: !1547, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlBufferAllocationScheme", file: !276, line: 81, baseType: !275)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "contentIO", scope: !1541, file: !276, line: 96, baseType: !1165, size: 64, offset: 192)
!1549 = !DILocation(line: 467, column: 35, scope: !1531)
!1550 = !DILocation(line: 467, column: 60, scope: !1531)
!1551 = !DILocation(line: 468, column: 5, scope: !1531)
!1552 = !DILocation(line: 468, column: 18, scope: !1531)
!1553 = !DILocation(line: 470, column: 14, scope: !1531)
!1554 = !DILocation(line: 470, column: 12, scope: !1531)
!1555 = !DILocation(line: 471, column: 9, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1531, file: !2, line: 471, column: 9)
!1557 = !DILocation(line: 471, column: 16, scope: !1556)
!1558 = !DILocation(line: 471, column: 9, scope: !1531)
!1559 = !DILocation(line: 475, column: 9, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1556, file: !2, line: 471, column: 25)
!1561 = !DILocation(line: 477, column: 26, scope: !1531)
!1562 = !DILocation(line: 477, column: 34, scope: !1531)
!1563 = !DILocation(line: 477, column: 5, scope: !1531)
!1564 = !DILocation(line: 478, column: 23, scope: !1531)
!1565 = !DILocation(line: 478, column: 28, scope: !1531)
!1566 = !DILocation(line: 478, column: 5, scope: !1531)
!1567 = !DILocation(line: 479, column: 1, scope: !1531)
!1568 = !DISubprogram(name: "xmlBufferCreate__internal_alias", scope: !1530, file: !1530, line: 1463, type: !1569, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!1538}
!1571 = !DISubprogram(name: "xmlDumpNotationTable__internal_alias", scope: !1530, file: !1530, line: 3188, type: !1572, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{null, !1538, !1452}
!1574 = !DISubprogram(name: "xmlBufMergeBuffer", scope: !1575, file: !1575, line: 62, type: !1576, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1575 = !DIFile(filename: "./buf.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "760feeae2c042ff45bc33ab6ce484557")
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!1104, !1314, !1538}
!1578 = distinct !DISubprogram(name: "xmlBufDumpElementDecl", scope: !2, file: !2, line: 490, type: !1579, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1581)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{null, !1314, !1351}
!1581 = !{!1582, !1583, !1584}
!1582 = !DILocalVariable(name: "buf", arg: 1, scope: !1578, file: !2, line: 490, type: !1314)
!1583 = !DILocalVariable(name: "elem", arg: 2, scope: !1578, file: !2, line: 490, type: !1351)
!1584 = !DILocalVariable(name: "buffer", scope: !1578, file: !2, line: 491, type: !1538)
!1585 = !DILocation(line: 490, column: 33, scope: !1578)
!1586 = !DILocation(line: 490, column: 52, scope: !1578)
!1587 = !DILocation(line: 491, column: 5, scope: !1578)
!1588 = !DILocation(line: 491, column: 18, scope: !1578)
!1589 = !DILocation(line: 493, column: 14, scope: !1578)
!1590 = !DILocation(line: 493, column: 12, scope: !1578)
!1591 = !DILocation(line: 494, column: 9, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1578, file: !2, line: 494, column: 9)
!1593 = !DILocation(line: 494, column: 16, scope: !1592)
!1594 = !DILocation(line: 494, column: 9, scope: !1578)
!1595 = !DILocation(line: 498, column: 9, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !1592, file: !2, line: 494, column: 25)
!1597 = !DILocation(line: 500, column: 24, scope: !1578)
!1598 = !DILocation(line: 500, column: 32, scope: !1578)
!1599 = !DILocation(line: 500, column: 5, scope: !1578)
!1600 = !DILocation(line: 501, column: 23, scope: !1578)
!1601 = !DILocation(line: 501, column: 28, scope: !1578)
!1602 = !DILocation(line: 501, column: 5, scope: !1578)
!1603 = !DILocation(line: 502, column: 1, scope: !1578)
!1604 = !DISubprogram(name: "xmlDumpElementDecl__internal_alias", scope: !1530, file: !1530, line: 3128, type: !1605, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{null, !1538, !1351}
!1607 = distinct !DISubprogram(name: "xmlBufDumpAttributeDecl", scope: !2, file: !2, line: 513, type: !1608, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1610)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1314, !1384}
!1610 = !{!1611, !1612, !1613}
!1611 = !DILocalVariable(name: "buf", arg: 1, scope: !1607, file: !2, line: 513, type: !1314)
!1612 = !DILocalVariable(name: "attr", arg: 2, scope: !1607, file: !2, line: 513, type: !1384)
!1613 = !DILocalVariable(name: "buffer", scope: !1607, file: !2, line: 514, type: !1538)
!1614 = !DILocation(line: 513, column: 35, scope: !1607)
!1615 = !DILocation(line: 513, column: 56, scope: !1607)
!1616 = !DILocation(line: 514, column: 5, scope: !1607)
!1617 = !DILocation(line: 514, column: 18, scope: !1607)
!1618 = !DILocation(line: 516, column: 14, scope: !1607)
!1619 = !DILocation(line: 516, column: 12, scope: !1607)
!1620 = !DILocation(line: 517, column: 9, scope: !1621)
!1621 = distinct !DILexicalBlock(scope: !1607, file: !2, line: 517, column: 9)
!1622 = !DILocation(line: 517, column: 16, scope: !1621)
!1623 = !DILocation(line: 517, column: 9, scope: !1607)
!1624 = !DILocation(line: 521, column: 9, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1621, file: !2, line: 517, column: 25)
!1626 = !DILocation(line: 523, column: 26, scope: !1607)
!1627 = !DILocation(line: 523, column: 34, scope: !1607)
!1628 = !DILocation(line: 523, column: 5, scope: !1607)
!1629 = !DILocation(line: 524, column: 23, scope: !1607)
!1630 = !DILocation(line: 524, column: 28, scope: !1607)
!1631 = !DILocation(line: 524, column: 5, scope: !1607)
!1632 = !DILocation(line: 525, column: 1, scope: !1607)
!1633 = !DISubprogram(name: "xmlDumpAttributeDecl__internal_alias", scope: !1530, file: !1530, line: 3104, type: !1634, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{null, !1538, !1384}
!1636 = distinct !DISubprogram(name: "xmlBufDumpEntityDecl", scope: !2, file: !2, line: 535, type: !1637, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1639)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{null, !1314, !1422}
!1639 = !{!1640, !1641, !1642}
!1640 = !DILocalVariable(name: "buf", arg: 1, scope: !1636, file: !2, line: 535, type: !1314)
!1641 = !DILocalVariable(name: "ent", arg: 2, scope: !1636, file: !2, line: 535, type: !1422)
!1642 = !DILocalVariable(name: "buffer", scope: !1636, file: !2, line: 536, type: !1538)
!1643 = !DILocation(line: 535, column: 32, scope: !1636)
!1644 = !DILocation(line: 535, column: 50, scope: !1636)
!1645 = !DILocation(line: 536, column: 5, scope: !1636)
!1646 = !DILocation(line: 536, column: 18, scope: !1636)
!1647 = !DILocation(line: 538, column: 14, scope: !1636)
!1648 = !DILocation(line: 538, column: 12, scope: !1636)
!1649 = !DILocation(line: 539, column: 9, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1636, file: !2, line: 539, column: 9)
!1651 = !DILocation(line: 539, column: 16, scope: !1650)
!1652 = !DILocation(line: 539, column: 9, scope: !1636)
!1653 = !DILocation(line: 543, column: 9, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1650, file: !2, line: 539, column: 25)
!1655 = !DILocation(line: 545, column: 23, scope: !1636)
!1656 = !DILocation(line: 545, column: 31, scope: !1636)
!1657 = !DILocation(line: 545, column: 5, scope: !1636)
!1658 = !DILocation(line: 546, column: 23, scope: !1636)
!1659 = !DILocation(line: 546, column: 28, scope: !1636)
!1660 = !DILocation(line: 546, column: 5, scope: !1636)
!1661 = !DILocation(line: 547, column: 1, scope: !1636)
!1662 = !DISubprogram(name: "xmlDumpEntityDecl__internal_alias", scope: !1530, file: !1530, line: 3164, type: !1663, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{null, !1538, !1422}
!1665 = distinct !DISubprogram(name: "xmlNsListDumpOutput", scope: !2, file: !2, line: 691, type: !1666, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1668)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{null, !1273, !1451}
!1668 = !{!1669, !1670}
!1669 = !DILocalVariable(name: "buf", arg: 1, scope: !1665, file: !2, line: 691, type: !1273)
!1670 = !DILocalVariable(name: "cur", arg: 2, scope: !1665, file: !2, line: 691, type: !1451)
!1671 = !DILocation(line: 691, column: 40, scope: !1665)
!1672 = !DILocation(line: 691, column: 54, scope: !1665)
!1673 = !DILocation(line: 692, column: 5, scope: !1665)
!1674 = !DILocation(line: 692, column: 12, scope: !1665)
!1675 = !DILocation(line: 692, column: 16, scope: !1665)
!1676 = !DILocation(line: 693, column: 25, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1665, file: !2, line: 692, column: 25)
!1678 = !DILocation(line: 693, column: 30, scope: !1677)
!1679 = !DILocation(line: 693, column: 9, scope: !1677)
!1680 = !DILocation(line: 694, column: 8, scope: !1677)
!1681 = !DILocation(line: 694, column: 13, scope: !1677)
!1682 = !{!1683, !1472, i64 0}
!1683 = !{!"_xmlNs", !1472, i64 0, !1473, i64 8, !1472, i64 16, !1472, i64 24, !1472, i64 32, !1472, i64 40}
!1684 = !DILocation(line: 694, column: 6, scope: !1677)
!1685 = distinct !{!1685, !1673, !1686, !1687}
!1686 = !DILocation(line: 695, column: 5, scope: !1665)
!1687 = !{!"llvm.loop.mustprogress"}
!1688 = !DILocation(line: 696, column: 1, scope: !1665)
!1689 = distinct !DISubprogram(name: "xmlNsDumpOutput", scope: !2, file: !2, line: 631, type: !1690, scopeLine: 631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1692)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !1273, !1451, !1324}
!1692 = !{!1693, !1694, !1695}
!1693 = !DILocalVariable(name: "buf", arg: 1, scope: !1689, file: !2, line: 631, type: !1273)
!1694 = !DILocalVariable(name: "cur", arg: 2, scope: !1689, file: !2, line: 631, type: !1451)
!1695 = !DILocalVariable(name: "ctxt", arg: 3, scope: !1689, file: !2, line: 631, type: !1324)
!1696 = !DILocation(line: 631, column: 36, scope: !1689)
!1697 = !DILocation(line: 631, column: 50, scope: !1689)
!1698 = !DILocation(line: 631, column: 70, scope: !1689)
!1699 = !DILocation(line: 632, column: 10, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !1689, file: !2, line: 632, column: 9)
!1701 = !DILocation(line: 632, column: 14, scope: !1700)
!1702 = !DILocation(line: 632, column: 23, scope: !1700)
!1703 = !DILocation(line: 632, column: 27, scope: !1700)
!1704 = !DILocation(line: 632, column: 31, scope: !1700)
!1705 = !DILocation(line: 632, column: 9, scope: !1689)
!1706 = !DILocation(line: 632, column: 41, scope: !1700)
!1707 = !DILocation(line: 633, column: 10, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1689, file: !2, line: 633, column: 9)
!1709 = !DILocation(line: 633, column: 15, scope: !1708)
!1710 = !{!1683, !1473, i64 8}
!1711 = !DILocation(line: 633, column: 20, scope: !1708)
!1712 = !DILocation(line: 633, column: 44, scope: !1708)
!1713 = !DILocation(line: 633, column: 48, scope: !1708)
!1714 = !DILocation(line: 633, column: 53, scope: !1708)
!1715 = !{!1683, !1472, i64 16}
!1716 = !DILocation(line: 633, column: 58, scope: !1708)
!1717 = !DILocation(line: 633, column: 9, scope: !1689)
!1718 = !DILocation(line: 634, column: 18, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1720, file: !2, line: 634, column: 6)
!1720 = distinct !DILexicalBlock(scope: !1708, file: !2, line: 633, column: 68)
!1721 = !DILocation(line: 634, column: 23, scope: !1719)
!1722 = !{!1683, !1472, i64 24}
!1723 = !DILocation(line: 634, column: 6, scope: !1719)
!1724 = !DILocation(line: 634, column: 6, scope: !1720)
!1725 = !DILocation(line: 635, column: 6, scope: !1719)
!1726 = !DILocation(line: 637, column: 6, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1720, file: !2, line: 637, column: 6)
!1728 = !DILocation(line: 637, column: 11, scope: !1727)
!1729 = !DILocation(line: 637, column: 19, scope: !1727)
!1730 = !DILocation(line: 637, column: 22, scope: !1727)
!1731 = !DILocation(line: 637, column: 28, scope: !1727)
!1732 = !{!1733, !1734, i64 56}
!1733 = !{!"_xmlSaveCtxt", !1472, i64 0, !1734, i64 8, !1734, i64 12, !1472, i64 16, !1472, i64 24, !1472, i64 32, !1472, i64 40, !1734, i64 48, !1734, i64 52, !1734, i64 56, !1473, i64 60, !1734, i64 124, !1734, i64 128, !1472, i64 136, !1472, i64 144}
!1734 = !{!"int", !1473, i64 0}
!1735 = !DILocation(line: 637, column: 35, scope: !1727)
!1736 = !DILocation(line: 637, column: 6, scope: !1720)
!1737 = !DILocation(line: 638, column: 35, scope: !1727)
!1738 = !DILocation(line: 638, column: 6, scope: !1727)
!1739 = !DILocation(line: 640, column: 27, scope: !1727)
!1740 = !DILocation(line: 640, column: 6, scope: !1727)
!1741 = !DILocation(line: 643, column: 6, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !1720, file: !2, line: 643, column: 6)
!1743 = !DILocation(line: 643, column: 11, scope: !1742)
!1744 = !DILocation(line: 643, column: 18, scope: !1742)
!1745 = !DILocation(line: 643, column: 6, scope: !1720)
!1746 = !DILocation(line: 644, column: 27, scope: !1747)
!1747 = distinct !DILexicalBlock(scope: !1742, file: !2, line: 643, column: 27)
!1748 = !DILocation(line: 644, column: 6, scope: !1747)
!1749 = !DILocation(line: 645, column: 33, scope: !1747)
!1750 = !DILocation(line: 645, column: 52, scope: !1747)
!1751 = !DILocation(line: 645, column: 57, scope: !1747)
!1752 = !DILocation(line: 645, column: 6, scope: !1747)
!1753 = !DILocation(line: 646, column: 2, scope: !1747)
!1754 = !DILocation(line: 647, column: 27, scope: !1742)
!1755 = !DILocation(line: 647, column: 6, scope: !1742)
!1756 = !DILocation(line: 648, column: 23, scope: !1720)
!1757 = !DILocation(line: 648, column: 2, scope: !1720)
!1758 = !DILocation(line: 649, column: 26, scope: !1720)
!1759 = !DILocation(line: 649, column: 31, scope: !1720)
!1760 = !{!1761, !1472, i64 32}
!1761 = !{!"_xmlOutputBuffer", !1472, i64 0, !1472, i64 8, !1472, i64 16, !1472, i64 24, !1472, i64 32, !1472, i64 40, !1734, i64 48, !1734, i64 52}
!1762 = !DILocation(line: 649, column: 39, scope: !1720)
!1763 = !DILocation(line: 649, column: 44, scope: !1720)
!1764 = !DILocation(line: 649, column: 2, scope: !1720)
!1765 = !DILocation(line: 650, column: 5, scope: !1720)
!1766 = !DILocation(line: 651, column: 1, scope: !1689)
!1767 = distinct !DISubprogram(name: "xmlSaveToFd__internal_alias", scope: !2, file: !2, line: 1797, type: !1768, scopeLine: 1798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1770)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!1324, !1104, !1285, !1104}
!1770 = !{!1771, !1772, !1773, !1774}
!1771 = !DILocalVariable(name: "fd", arg: 1, scope: !1767, file: !2, line: 1797, type: !1104)
!1772 = !DILocalVariable(name: "encoding", arg: 2, scope: !1767, file: !2, line: 1797, type: !1285)
!1773 = !DILocalVariable(name: "options", arg: 3, scope: !1767, file: !2, line: 1797, type: !1104)
!1774 = !DILocalVariable(name: "ret", scope: !1767, file: !2, line: 1799, type: !1324)
!1775 = !{!1734, !1734, i64 0}
!1776 = !DILocation(line: 1797, column: 17, scope: !1767)
!1777 = !DILocation(line: 1797, column: 33, scope: !1767)
!1778 = !DILocation(line: 1797, column: 47, scope: !1767)
!1779 = !DILocation(line: 1799, column: 5, scope: !1767)
!1780 = !DILocation(line: 1799, column: 20, scope: !1767)
!1781 = !DILocation(line: 1801, column: 26, scope: !1767)
!1782 = !DILocation(line: 1801, column: 36, scope: !1767)
!1783 = !DILocation(line: 1801, column: 11, scope: !1767)
!1784 = !DILocation(line: 1801, column: 9, scope: !1767)
!1785 = !DILocation(line: 1802, column: 9, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1767, file: !2, line: 1802, column: 9)
!1787 = !DILocation(line: 1802, column: 13, scope: !1786)
!1788 = !DILocation(line: 1802, column: 9, scope: !1767)
!1789 = !DILocation(line: 1802, column: 22, scope: !1786)
!1790 = !DILocation(line: 1803, column: 40, scope: !1767)
!1791 = !DILocation(line: 1803, column: 44, scope: !1767)
!1792 = !DILocation(line: 1803, column: 49, scope: !1767)
!1793 = !{!1733, !1472, i64 32}
!1794 = !DILocation(line: 1803, column: 16, scope: !1767)
!1795 = !DILocation(line: 1803, column: 5, scope: !1767)
!1796 = !DILocation(line: 1803, column: 10, scope: !1767)
!1797 = !DILocation(line: 1803, column: 14, scope: !1767)
!1798 = !{!1733, !1472, i64 40}
!1799 = !DILocation(line: 1804, column: 9, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1767, file: !2, line: 1804, column: 9)
!1801 = !DILocation(line: 1804, column: 14, scope: !1800)
!1802 = !DILocation(line: 1804, column: 18, scope: !1800)
!1803 = !DILocation(line: 1804, column: 9, scope: !1767)
!1804 = !DILocation(line: 1805, column: 18, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1800, file: !2, line: 1804, column: 27)
!1806 = !DILocation(line: 1805, column: 2, scope: !1805)
!1807 = !DILocation(line: 1806, column: 2, scope: !1805)
!1808 = !DILocation(line: 1808, column: 12, scope: !1767)
!1809 = !DILocation(line: 1808, column: 5, scope: !1767)
!1810 = !DILocation(line: 1809, column: 1, scope: !1767)
!1811 = distinct !DISubprogram(name: "xmlNewSaveCtxt", scope: !2, file: !2, line: 379, type: !1812, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1814)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!1324, !1285, !1104}
!1814 = !{!1815, !1816, !1817}
!1815 = !DILocalVariable(name: "encoding", arg: 1, scope: !1811, file: !2, line: 379, type: !1285)
!1816 = !DILocalVariable(name: "options", arg: 2, scope: !1811, file: !2, line: 379, type: !1104)
!1817 = !DILocalVariable(name: "ret", scope: !1811, file: !2, line: 381, type: !1324)
!1818 = !DILocation(line: 379, column: 28, scope: !1811)
!1819 = !DILocation(line: 379, column: 42, scope: !1811)
!1820 = !DILocation(line: 381, column: 5, scope: !1811)
!1821 = !DILocation(line: 381, column: 20, scope: !1811)
!1822 = !DILocation(line: 383, column: 28, scope: !1811)
!1823 = !DILocation(line: 383, column: 9, scope: !1811)
!1824 = !DILocation(line: 384, column: 9, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1811, file: !2, line: 384, column: 9)
!1826 = !DILocation(line: 384, column: 13, scope: !1825)
!1827 = !DILocation(line: 384, column: 9, scope: !1811)
!1828 = !DILocation(line: 385, column: 2, scope: !1829)
!1829 = distinct !DILexicalBlock(scope: !1825, file: !2, line: 384, column: 22)
!1830 = !DILocation(line: 386, column: 2, scope: !1829)
!1831 = !DILocation(line: 388, column: 12, scope: !1811)
!1832 = !DILocation(line: 388, column: 5, scope: !1811)
!1833 = !DILocation(line: 390, column: 9, scope: !1834)
!1834 = distinct !DILexicalBlock(scope: !1811, file: !2, line: 390, column: 9)
!1835 = !DILocation(line: 390, column: 18, scope: !1834)
!1836 = !DILocation(line: 390, column: 9, scope: !1811)
!1837 = !DILocation(line: 391, column: 51, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1834, file: !2, line: 390, column: 27)
!1839 = !DILocation(line: 391, column: 24, scope: !1838)
!1840 = !DILocation(line: 391, column: 9, scope: !1838)
!1841 = !DILocation(line: 391, column: 14, scope: !1838)
!1842 = !DILocation(line: 391, column: 22, scope: !1838)
!1843 = !DILocation(line: 392, column: 6, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1838, file: !2, line: 392, column: 6)
!1845 = !DILocation(line: 392, column: 11, scope: !1844)
!1846 = !DILocation(line: 392, column: 19, scope: !1844)
!1847 = !DILocation(line: 392, column: 6, scope: !1838)
!1848 = !DILocation(line: 393, column: 50, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1844, file: !2, line: 392, column: 28)
!1850 = !DILocation(line: 393, column: 6, scope: !1849)
!1851 = !DILocation(line: 394, column: 29, scope: !1849)
!1852 = !DILocation(line: 394, column: 13, scope: !1849)
!1853 = !DILocation(line: 395, column: 6, scope: !1849)
!1854 = !DILocation(line: 397, column: 52, scope: !1838)
!1855 = !DILocation(line: 397, column: 25, scope: !1838)
!1856 = !DILocation(line: 397, column: 9, scope: !1838)
!1857 = !DILocation(line: 397, column: 14, scope: !1838)
!1858 = !DILocation(line: 397, column: 23, scope: !1838)
!1859 = !{!1733, !1472, i64 24}
!1860 = !DILocation(line: 398, column: 2, scope: !1838)
!1861 = !DILocation(line: 398, column: 7, scope: !1838)
!1862 = !DILocation(line: 398, column: 14, scope: !1838)
!1863 = !{!1733, !1472, i64 136}
!1864 = !DILocation(line: 399, column: 5, scope: !1838)
!1865 = !DILocation(line: 400, column: 21, scope: !1811)
!1866 = !DILocation(line: 400, column: 5, scope: !1811)
!1867 = !DILocation(line: 407, column: 10, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1811, file: !2, line: 407, column: 9)
!1869 = !DILocation(line: 407, column: 15, scope: !1868)
!1870 = !{!1733, !1734, i64 48}
!1871 = !DILocation(line: 407, column: 23, scope: !1868)
!1872 = !DILocation(line: 407, column: 44, scope: !1868)
!1873 = !DILocation(line: 407, column: 50, scope: !1868)
!1874 = !DILocation(line: 407, column: 58, scope: !1868)
!1875 = !DILocation(line: 407, column: 9, scope: !1811)
!1876 = !DILocation(line: 408, column: 10, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1868, file: !2, line: 407, column: 80)
!1878 = !DILocation(line: 409, column: 5, scope: !1877)
!1879 = !DILocation(line: 411, column: 20, scope: !1811)
!1880 = !DILocation(line: 411, column: 5, scope: !1811)
!1881 = !DILocation(line: 411, column: 10, scope: !1811)
!1882 = !DILocation(line: 411, column: 18, scope: !1811)
!1883 = !DILocation(line: 412, column: 9, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1811, file: !2, line: 412, column: 9)
!1885 = !DILocation(line: 412, column: 17, scope: !1884)
!1886 = !DILocation(line: 412, column: 9, scope: !1811)
!1887 = !DILocation(line: 413, column: 9, scope: !1884)
!1888 = !DILocation(line: 413, column: 14, scope: !1884)
!1889 = !DILocation(line: 413, column: 21, scope: !1884)
!1890 = !DILocation(line: 414, column: 14, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1884, file: !2, line: 414, column: 14)
!1892 = !DILocation(line: 414, column: 22, scope: !1891)
!1893 = !DILocation(line: 414, column: 14, scope: !1884)
!1894 = !DILocation(line: 415, column: 9, scope: !1891)
!1895 = !DILocation(line: 415, column: 14, scope: !1891)
!1896 = !DILocation(line: 415, column: 21, scope: !1891)
!1897 = !DILocation(line: 417, column: 12, scope: !1811)
!1898 = !DILocation(line: 417, column: 5, scope: !1811)
!1899 = !DILocation(line: 418, column: 1, scope: !1811)
!1900 = !DISubprogram(name: "xmlOutputBufferCreateFd__internal_alias", scope: !1530, file: !1530, line: 6806, type: !1901, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!1273, !1104, !1292}
!1903 = distinct !DISubprogram(name: "xmlFreeSaveCtxt", scope: !2, file: !2, line: 361, type: !1904, scopeLine: 362, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1906)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{null, !1324}
!1906 = !{!1907}
!1907 = !DILocalVariable(name: "ctxt", arg: 1, scope: !1903, file: !2, line: 361, type: !1324)
!1908 = !DILocation(line: 361, column: 32, scope: !1903)
!1909 = !DILocation(line: 363, column: 9, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1903, file: !2, line: 363, column: 9)
!1911 = !DILocation(line: 363, column: 14, scope: !1910)
!1912 = !DILocation(line: 363, column: 9, scope: !1903)
!1913 = !DILocation(line: 363, column: 23, scope: !1910)
!1914 = !DILocation(line: 364, column: 9, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1903, file: !2, line: 364, column: 9)
!1916 = !DILocation(line: 364, column: 15, scope: !1915)
!1917 = !DILocation(line: 364, column: 24, scope: !1915)
!1918 = !DILocation(line: 364, column: 9, scope: !1903)
!1919 = !DILocation(line: 365, column: 9, scope: !1915)
!1920 = !DILocation(line: 365, column: 26, scope: !1915)
!1921 = !DILocation(line: 365, column: 32, scope: !1915)
!1922 = !DILocation(line: 366, column: 9, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1903, file: !2, line: 366, column: 9)
!1924 = !DILocation(line: 366, column: 15, scope: !1923)
!1925 = !DILocation(line: 366, column: 19, scope: !1923)
!1926 = !DILocation(line: 366, column: 9, scope: !1903)
!1927 = !DILocation(line: 367, column: 30, scope: !1923)
!1928 = !DILocation(line: 367, column: 36, scope: !1923)
!1929 = !DILocation(line: 367, column: 9, scope: !1923)
!1930 = !DILocation(line: 368, column: 5, scope: !1903)
!1931 = !DILocation(line: 368, column: 13, scope: !1903)
!1932 = !DILocation(line: 369, column: 1, scope: !1903)
!1933 = distinct !DISubprogram(name: "xmlSaveToFilename__internal_alias", scope: !2, file: !2, line: 1824, type: !1934, scopeLine: 1825, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1936)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!1324, !1285, !1285, !1104}
!1936 = !{!1937, !1938, !1939, !1940, !1941}
!1937 = !DILocalVariable(name: "filename", arg: 1, scope: !1933, file: !2, line: 1824, type: !1285)
!1938 = !DILocalVariable(name: "encoding", arg: 2, scope: !1933, file: !2, line: 1824, type: !1285)
!1939 = !DILocalVariable(name: "options", arg: 3, scope: !1933, file: !2, line: 1824, type: !1104)
!1940 = !DILocalVariable(name: "ret", scope: !1933, file: !2, line: 1826, type: !1324)
!1941 = !DILocalVariable(name: "compression", scope: !1933, file: !2, line: 1827, type: !1104)
!1942 = !DILocation(line: 1824, column: 31, scope: !1933)
!1943 = !DILocation(line: 1824, column: 53, scope: !1933)
!1944 = !DILocation(line: 1824, column: 67, scope: !1933)
!1945 = !DILocation(line: 1826, column: 5, scope: !1933)
!1946 = !DILocation(line: 1826, column: 20, scope: !1933)
!1947 = !DILocation(line: 1827, column: 5, scope: !1933)
!1948 = !DILocation(line: 1827, column: 9, scope: !1933)
!1949 = !DILocation(line: 1829, column: 26, scope: !1933)
!1950 = !DILocation(line: 1829, column: 36, scope: !1933)
!1951 = !DILocation(line: 1829, column: 11, scope: !1933)
!1952 = !DILocation(line: 1829, column: 9, scope: !1933)
!1953 = !DILocation(line: 1830, column: 9, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1933, file: !2, line: 1830, column: 9)
!1955 = !DILocation(line: 1830, column: 13, scope: !1954)
!1956 = !DILocation(line: 1830, column: 9, scope: !1933)
!1957 = !DILocation(line: 1830, column: 22, scope: !1954)
!1958 = !DILocation(line: 1831, column: 46, scope: !1933)
!1959 = !DILocation(line: 1831, column: 56, scope: !1933)
!1960 = !DILocation(line: 1831, column: 61, scope: !1933)
!1961 = !DILocation(line: 1832, column: 46, scope: !1933)
!1962 = !DILocation(line: 1831, column: 16, scope: !1933)
!1963 = !DILocation(line: 1831, column: 5, scope: !1933)
!1964 = !DILocation(line: 1831, column: 10, scope: !1933)
!1965 = !DILocation(line: 1831, column: 14, scope: !1933)
!1966 = !DILocation(line: 1833, column: 9, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1933, file: !2, line: 1833, column: 9)
!1968 = !DILocation(line: 1833, column: 14, scope: !1967)
!1969 = !DILocation(line: 1833, column: 18, scope: !1967)
!1970 = !DILocation(line: 1833, column: 9, scope: !1933)
!1971 = !DILocation(line: 1834, column: 18, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1967, file: !2, line: 1833, column: 27)
!1973 = !DILocation(line: 1834, column: 2, scope: !1972)
!1974 = !DILocation(line: 1835, column: 2, scope: !1972)
!1975 = !DILocation(line: 1837, column: 12, scope: !1933)
!1976 = !DILocation(line: 1837, column: 5, scope: !1933)
!1977 = !DILocation(line: 1838, column: 1, scope: !1933)
!1978 = !DISubprogram(name: "xmlOutputBufferCreateFilename__internal_alias", scope: !1530, file: !1530, line: 6830, type: !1979, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!1273, !1285, !1292, !1104}
!1981 = distinct !DISubprogram(name: "xmlSaveToBuffer__internal_alias", scope: !2, file: !2, line: 1853, type: !1982, scopeLine: 1854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !1984)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!1324, !1538, !1285, !1104}
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990}
!1985 = !DILocalVariable(name: "buffer", arg: 1, scope: !1981, file: !2, line: 1853, type: !1538)
!1986 = !DILocalVariable(name: "encoding", arg: 2, scope: !1981, file: !2, line: 1853, type: !1285)
!1987 = !DILocalVariable(name: "options", arg: 3, scope: !1981, file: !2, line: 1853, type: !1104)
!1988 = !DILocalVariable(name: "ret", scope: !1981, file: !2, line: 1855, type: !1324)
!1989 = !DILocalVariable(name: "out_buff", scope: !1981, file: !2, line: 1856, type: !1273)
!1990 = !DILocalVariable(name: "handler", scope: !1981, file: !2, line: 1857, type: !1292)
!1991 = !DILocation(line: 1853, column: 30, scope: !1981)
!1992 = !DILocation(line: 1853, column: 50, scope: !1981)
!1993 = !DILocation(line: 1853, column: 64, scope: !1981)
!1994 = !DILocation(line: 1855, column: 5, scope: !1981)
!1995 = !DILocation(line: 1855, column: 20, scope: !1981)
!1996 = !DILocation(line: 1856, column: 5, scope: !1981)
!1997 = !DILocation(line: 1856, column: 24, scope: !1981)
!1998 = !DILocation(line: 1857, column: 5, scope: !1981)
!1999 = !DILocation(line: 1857, column: 31, scope: !1981)
!2000 = !DILocation(line: 1859, column: 26, scope: !1981)
!2001 = !DILocation(line: 1859, column: 36, scope: !1981)
!2002 = !DILocation(line: 1859, column: 11, scope: !1981)
!2003 = !DILocation(line: 1859, column: 9, scope: !1981)
!2004 = !DILocation(line: 1860, column: 9, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1981, file: !2, line: 1860, column: 9)
!2006 = !DILocation(line: 1860, column: 13, scope: !2005)
!2007 = !DILocation(line: 1860, column: 9, scope: !1981)
!2008 = !DILocation(line: 1860, column: 22, scope: !2005)
!2009 = !DILocation(line: 1862, column: 9, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !1981, file: !2, line: 1862, column: 9)
!2011 = !DILocation(line: 1862, column: 18, scope: !2010)
!2012 = !DILocation(line: 1862, column: 9, scope: !1981)
!2013 = !DILocation(line: 1863, column: 46, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !2010, file: !2, line: 1862, column: 27)
!2015 = !DILocation(line: 1863, column: 19, scope: !2014)
!2016 = !DILocation(line: 1863, column: 17, scope: !2014)
!2017 = !DILocation(line: 1864, column: 13, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2014, file: !2, line: 1864, column: 13)
!2019 = !DILocation(line: 1864, column: 21, scope: !2018)
!2020 = !DILocation(line: 1864, column: 13, scope: !2014)
!2021 = !DILocation(line: 1865, column: 13, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2018, file: !2, line: 1864, column: 30)
!2023 = !DILocation(line: 1865, column: 21, scope: !2022)
!2024 = !DILocation(line: 1866, column: 13, scope: !2022)
!2025 = !DILocation(line: 1868, column: 5, scope: !2014)
!2026 = !DILocation(line: 1869, column: 17, scope: !2010)
!2027 = !DILocation(line: 1870, column: 44, scope: !1981)
!2028 = !DILocation(line: 1870, column: 52, scope: !1981)
!2029 = !DILocation(line: 1870, column: 16, scope: !1981)
!2030 = !DILocation(line: 1870, column: 14, scope: !1981)
!2031 = !DILocation(line: 1871, column: 9, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !1981, file: !2, line: 1871, column: 9)
!2033 = !DILocation(line: 1871, column: 18, scope: !2032)
!2034 = !DILocation(line: 1871, column: 9, scope: !1981)
!2035 = !DILocation(line: 1872, column: 9, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2032, file: !2, line: 1871, column: 27)
!2037 = !DILocation(line: 1872, column: 17, scope: !2036)
!2038 = !DILocation(line: 1873, column: 13, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2036, file: !2, line: 1873, column: 13)
!2040 = !DILocation(line: 1873, column: 13, scope: !2036)
!2041 = !DILocation(line: 1873, column: 42, scope: !2039)
!2042 = !DILocation(line: 1873, column: 22, scope: !2039)
!2043 = !DILocation(line: 1874, column: 9, scope: !2036)
!2044 = !DILocation(line: 1877, column: 16, scope: !1981)
!2045 = !DILocation(line: 1877, column: 5, scope: !1981)
!2046 = !DILocation(line: 1877, column: 10, scope: !1981)
!2047 = !DILocation(line: 1877, column: 14, scope: !1981)
!2048 = !DILocation(line: 1878, column: 12, scope: !1981)
!2049 = !DILocation(line: 1878, column: 5, scope: !1981)
!2050 = !DILocation(line: 1879, column: 1, scope: !1981)
!2051 = !DISubprogram(name: "xmlFindCharEncodingHandler__internal_alias", scope: !1530, file: !1530, line: 3521, type: !2052, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!1292, !1285}
!2054 = !DISubprogram(name: "xmlOutputBufferCreateBuffer__internal_alias", scope: !1530, file: !1530, line: 6794, type: !2055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{!1273, !1538, !1292}
!2057 = !DISubprogram(name: "xmlCharEncCloseFunc__internal_alias", scope: !1530, file: !1530, line: 1951, type: !2058, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!1104, !1293}
!2060 = distinct !DISubprogram(name: "xmlSaveToIO__internal_alias", scope: !2, file: !2, line: 1895, type: !2061, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !2063)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!1324, !1281, !1287, !1164, !1285, !1104}
!2063 = !{!2064, !2065, !2066, !2067, !2068, !2069}
!2064 = !DILocalVariable(name: "iowrite", arg: 1, scope: !2060, file: !2, line: 1895, type: !1281)
!2065 = !DILocalVariable(name: "ioclose", arg: 2, scope: !2060, file: !2, line: 1896, type: !1287)
!2066 = !DILocalVariable(name: "ioctx", arg: 3, scope: !2060, file: !2, line: 1897, type: !1164)
!2067 = !DILocalVariable(name: "encoding", arg: 4, scope: !2060, file: !2, line: 1897, type: !1285)
!2068 = !DILocalVariable(name: "options", arg: 5, scope: !2060, file: !2, line: 1897, type: !1104)
!2069 = !DILocalVariable(name: "ret", scope: !2060, file: !2, line: 1899, type: !1324)
!2070 = !DILocation(line: 1895, column: 36, scope: !2060)
!2071 = !DILocation(line: 1896, column: 36, scope: !2060)
!2072 = !DILocation(line: 1897, column: 19, scope: !2060)
!2073 = !DILocation(line: 1897, column: 38, scope: !2060)
!2074 = !DILocation(line: 1897, column: 52, scope: !2060)
!2075 = !DILocation(line: 1899, column: 5, scope: !2060)
!2076 = !DILocation(line: 1899, column: 20, scope: !2060)
!2077 = !DILocation(line: 1901, column: 26, scope: !2060)
!2078 = !DILocation(line: 1901, column: 36, scope: !2060)
!2079 = !DILocation(line: 1901, column: 11, scope: !2060)
!2080 = !DILocation(line: 1901, column: 9, scope: !2060)
!2081 = !DILocation(line: 1902, column: 9, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2060, file: !2, line: 1902, column: 9)
!2083 = !DILocation(line: 1902, column: 13, scope: !2082)
!2084 = !DILocation(line: 1902, column: 9, scope: !2060)
!2085 = !DILocation(line: 1902, column: 22, scope: !2082)
!2086 = !DILocation(line: 1903, column: 40, scope: !2060)
!2087 = !DILocation(line: 1903, column: 49, scope: !2060)
!2088 = !DILocation(line: 1903, column: 58, scope: !2060)
!2089 = !DILocation(line: 1903, column: 65, scope: !2060)
!2090 = !DILocation(line: 1903, column: 70, scope: !2060)
!2091 = !DILocation(line: 1903, column: 16, scope: !2060)
!2092 = !DILocation(line: 1903, column: 5, scope: !2060)
!2093 = !DILocation(line: 1903, column: 10, scope: !2060)
!2094 = !DILocation(line: 1903, column: 14, scope: !2060)
!2095 = !DILocation(line: 1904, column: 9, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2060, file: !2, line: 1904, column: 9)
!2097 = !DILocation(line: 1904, column: 14, scope: !2096)
!2098 = !DILocation(line: 1904, column: 18, scope: !2096)
!2099 = !DILocation(line: 1904, column: 9, scope: !2060)
!2100 = !DILocation(line: 1905, column: 18, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2096, file: !2, line: 1904, column: 27)
!2102 = !DILocation(line: 1905, column: 2, scope: !2101)
!2103 = !DILocation(line: 1906, column: 2, scope: !2101)
!2104 = !DILocation(line: 1908, column: 12, scope: !2060)
!2105 = !DILocation(line: 1908, column: 5, scope: !2060)
!2106 = !DILocation(line: 1909, column: 1, scope: !2060)
!2107 = !DISubprogram(name: "xmlOutputBufferCreateIO__internal_alias", scope: !1530, file: !1530, line: 6852, type: !2108, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!1273, !1281, !1287, !1164, !1292}
!2110 = distinct !DISubprogram(name: "xmlSaveDoc__internal_alias", scope: !2, file: !2, line: 1923, type: !2111, scopeLine: 1924, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !2114)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!2113, !1324, !1345}
!2113 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!2114 = !{!2115, !2116, !2117}
!2115 = !DILocalVariable(name: "ctxt", arg: 1, scope: !2110, file: !2, line: 1923, type: !1324)
!2116 = !DILocalVariable(name: "doc", arg: 2, scope: !2110, file: !2, line: 1923, type: !1345)
!2117 = !DILocalVariable(name: "ret", scope: !2110, file: !2, line: 1925, type: !2113)
!2118 = !DILocation(line: 1923, column: 27, scope: !2110)
!2119 = !DILocation(line: 1923, column: 43, scope: !2110)
!2120 = !DILocation(line: 1925, column: 5, scope: !2110)
!2121 = !DILocation(line: 1925, column: 10, scope: !2110)
!2122 = !{!2123, !2123, i64 0}
!2123 = !{!"long", !1473, i64 0}
!2124 = !DILocation(line: 1927, column: 10, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2110, file: !2, line: 1927, column: 9)
!2126 = !DILocation(line: 1927, column: 15, scope: !2125)
!2127 = !DILocation(line: 1927, column: 24, scope: !2125)
!2128 = !DILocation(line: 1927, column: 28, scope: !2125)
!2129 = !DILocation(line: 1927, column: 32, scope: !2125)
!2130 = !DILocation(line: 1927, column: 9, scope: !2110)
!2131 = !DILocation(line: 1927, column: 42, scope: !2125)
!2132 = !DILocation(line: 1928, column: 33, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2110, file: !2, line: 1928, column: 9)
!2134 = !DILocation(line: 1928, column: 39, scope: !2133)
!2135 = !DILocation(line: 1928, column: 9, scope: !2133)
!2136 = !DILocation(line: 1928, column: 44, scope: !2133)
!2137 = !DILocation(line: 1928, column: 9, scope: !2110)
!2138 = !DILocation(line: 1929, column: 9, scope: !2133)
!2139 = !DILocation(line: 1930, column: 12, scope: !2110)
!2140 = !DILocation(line: 1930, column: 5, scope: !2110)
!2141 = !DILocation(line: 1931, column: 1, scope: !2110)
!2142 = distinct !DISubprogram(name: "xmlDocContentDumpOutput", scope: !2, file: !2, line: 1097, type: !2143, scopeLine: 1097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !2145)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!1104, !1324, !1345}
!2145 = !{!2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2158, !2159}
!2146 = !DILocalVariable(name: "ctxt", arg: 1, scope: !2142, file: !2, line: 1097, type: !1324)
!2147 = !DILocalVariable(name: "cur", arg: 2, scope: !2142, file: !2, line: 1097, type: !1345)
!2148 = !DILocalVariable(name: "dtd", scope: !2142, file: !2, line: 1099, type: !1348)
!2149 = !DILocalVariable(name: "is_xhtml", scope: !2142, file: !2, line: 1100, type: !1104)
!2150 = !DILocalVariable(name: "oldenc", scope: !2142, file: !2, line: 1102, type: !1178)
!2151 = !DILocalVariable(name: "oldctxtenc", scope: !2142, file: !2, line: 1103, type: !1178)
!2152 = !DILocalVariable(name: "encoding", scope: !2142, file: !2, line: 1104, type: !1178)
!2153 = !DILocalVariable(name: "oldescape", scope: !2142, file: !2, line: 1105, type: !1308)
!2154 = !DILocalVariable(name: "oldescapeAttr", scope: !2142, file: !2, line: 1106, type: !1308)
!2155 = !DILocalVariable(name: "buf", scope: !2142, file: !2, line: 1107, type: !1273)
!2156 = !DILocalVariable(name: "enc", scope: !2142, file: !2, line: 1108, type: !2157)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncoding", file: !1103, line: 83, baseType: !1102)
!2158 = !DILocalVariable(name: "switched_encoding", scope: !2142, file: !2, line: 1109, type: !1104)
!2159 = !DILocalVariable(name: "child", scope: !2160, file: !2, line: 1217, type: !1169)
!2160 = distinct !DILexicalBlock(scope: !2161, file: !2, line: 1216, column: 29)
!2161 = distinct !DILexicalBlock(scope: !2162, file: !2, line: 1216, column: 6)
!2162 = distinct !DILexicalBlock(scope: !2163, file: !2, line: 1155, column: 50)
!2163 = distinct !DILexicalBlock(scope: !2164, file: !2, line: 1153, column: 16)
!2164 = distinct !DILexicalBlock(scope: !2142, file: !2, line: 1123, column: 9)
!2165 = !DILocation(line: 1097, column: 40, scope: !2142)
!2166 = !DILocation(line: 1097, column: 56, scope: !2142)
!2167 = !DILocation(line: 1099, column: 5, scope: !2142)
!2168 = !DILocation(line: 1099, column: 15, scope: !2142)
!2169 = !DILocation(line: 1100, column: 5, scope: !2142)
!2170 = !DILocation(line: 1100, column: 9, scope: !2142)
!2171 = !DILocation(line: 1102, column: 5, scope: !2142)
!2172 = !DILocation(line: 1102, column: 20, scope: !2142)
!2173 = !DILocation(line: 1102, column: 29, scope: !2142)
!2174 = !DILocation(line: 1102, column: 34, scope: !2142)
!2175 = !{!2176, !1472, i64 112}
!2176 = !{!"_xmlDoc", !1472, i64 0, !1473, i64 8, !1472, i64 16, !1472, i64 24, !1472, i64 32, !1472, i64 40, !1472, i64 48, !1472, i64 56, !1472, i64 64, !1734, i64 72, !1734, i64 76, !1472, i64 80, !1472, i64 88, !1472, i64 96, !1472, i64 104, !1472, i64 112, !1472, i64 120, !1472, i64 128, !1472, i64 136, !1734, i64 144, !1472, i64 152, !1472, i64 160, !1734, i64 168, !1734, i64 172}
!2177 = !DILocation(line: 1103, column: 5, scope: !2142)
!2178 = !DILocation(line: 1103, column: 20, scope: !2142)
!2179 = !DILocation(line: 1103, column: 33, scope: !2142)
!2180 = !DILocation(line: 1103, column: 39, scope: !2142)
!2181 = !DILocation(line: 1104, column: 5, scope: !2142)
!2182 = !DILocation(line: 1104, column: 20, scope: !2142)
!2183 = !DILocation(line: 1104, column: 31, scope: !2142)
!2184 = !DILocation(line: 1104, column: 37, scope: !2142)
!2185 = !DILocation(line: 1105, column: 5, scope: !2142)
!2186 = !DILocation(line: 1105, column: 31, scope: !2142)
!2187 = !DILocation(line: 1105, column: 43, scope: !2142)
!2188 = !DILocation(line: 1105, column: 49, scope: !2142)
!2189 = !DILocation(line: 1106, column: 5, scope: !2142)
!2190 = !DILocation(line: 1106, column: 31, scope: !2142)
!2191 = !DILocation(line: 1106, column: 47, scope: !2142)
!2192 = !DILocation(line: 1106, column: 53, scope: !2142)
!2193 = !{!1733, !1472, i64 144}
!2194 = !DILocation(line: 1107, column: 5, scope: !2142)
!2195 = !DILocation(line: 1107, column: 24, scope: !2142)
!2196 = !DILocation(line: 1107, column: 30, scope: !2142)
!2197 = !DILocation(line: 1107, column: 36, scope: !2142)
!2198 = !DILocation(line: 1108, column: 5, scope: !2142)
!2199 = !DILocation(line: 1108, column: 21, scope: !2142)
!2200 = !DILocation(line: 1109, column: 5, scope: !2142)
!2201 = !DILocation(line: 1109, column: 9, scope: !2142)
!2202 = !DILocation(line: 1111, column: 5, scope: !2142)
!2203 = !DILocation(line: 1113, column: 10, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2142, file: !2, line: 1113, column: 9)
!2205 = !DILocation(line: 1113, column: 15, scope: !2204)
!2206 = !{!2176, !1473, i64 8}
!2207 = !DILocation(line: 1113, column: 20, scope: !2204)
!2208 = !DILocation(line: 1113, column: 47, scope: !2204)
!2209 = !DILocation(line: 1114, column: 10, scope: !2204)
!2210 = !DILocation(line: 1114, column: 15, scope: !2204)
!2211 = !DILocation(line: 1114, column: 20, scope: !2204)
!2212 = !DILocation(line: 1113, column: 9, scope: !2142)
!2213 = !DILocation(line: 1115, column: 3, scope: !2204)
!2214 = !DILocation(line: 1117, column: 9, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2142, file: !2, line: 1117, column: 9)
!2216 = !DILocation(line: 1117, column: 15, scope: !2215)
!2217 = !DILocation(line: 1117, column: 24, scope: !2215)
!2218 = !DILocation(line: 1117, column: 9, scope: !2142)
!2219 = !DILocation(line: 1118, column: 34, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2215, file: !2, line: 1117, column: 33)
!2221 = !DILocation(line: 1118, column: 40, scope: !2220)
!2222 = !DILocation(line: 1118, column: 9, scope: !2220)
!2223 = !DILocation(line: 1118, column: 14, scope: !2220)
!2224 = !DILocation(line: 1118, column: 23, scope: !2220)
!2225 = !DILocation(line: 1119, column: 5, scope: !2220)
!2226 = !DILocation(line: 1119, column: 16, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2215, file: !2, line: 1119, column: 16)
!2228 = !DILocation(line: 1119, column: 21, scope: !2227)
!2229 = !DILocation(line: 1119, column: 30, scope: !2227)
!2230 = !DILocation(line: 1119, column: 16, scope: !2215)
!2231 = !DILocation(line: 1120, column: 13, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2227, file: !2, line: 1119, column: 39)
!2233 = !DILocation(line: 1120, column: 18, scope: !2232)
!2234 = !DILocation(line: 1120, column: 11, scope: !2232)
!2235 = !DILocation(line: 1121, column: 5, scope: !2232)
!2236 = !DILocation(line: 1123, column: 11, scope: !2164)
!2237 = !DILocation(line: 1123, column: 16, scope: !2164)
!2238 = !DILocation(line: 1123, column: 21, scope: !2164)
!2239 = !DILocation(line: 1123, column: 48, scope: !2164)
!2240 = !DILocation(line: 1124, column: 12, scope: !2164)
!2241 = !DILocation(line: 1124, column: 18, scope: !2164)
!2242 = !DILocation(line: 1124, column: 26, scope: !2164)
!2243 = !DILocation(line: 1124, column: 45, scope: !2164)
!2244 = !DILocation(line: 1124, column: 51, scope: !2164)
!2245 = !DILocation(line: 1125, column: 12, scope: !2164)
!2246 = !DILocation(line: 1125, column: 18, scope: !2164)
!2247 = !DILocation(line: 1125, column: 26, scope: !2164)
!2248 = !DILocation(line: 1125, column: 44, scope: !2164)
!2249 = !DILocation(line: 1125, column: 51, scope: !2164)
!2250 = !DILocation(line: 1126, column: 10, scope: !2164)
!2251 = !DILocation(line: 1126, column: 16, scope: !2164)
!2252 = !DILocation(line: 1126, column: 24, scope: !2164)
!2253 = !DILocation(line: 1123, column: 9, scope: !2142)
!2254 = !DILocation(line: 1128, column: 13, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2256, file: !2, line: 1128, column: 13)
!2256 = distinct !DILexicalBlock(scope: !2164, file: !2, line: 1126, column: 45)
!2257 = !DILocation(line: 1128, column: 22, scope: !2255)
!2258 = !DILocation(line: 1128, column: 13, scope: !2256)
!2259 = !DILocation(line: 1129, column: 26, scope: !2255)
!2260 = !DILocation(line: 1129, column: 49, scope: !2255)
!2261 = !DILocation(line: 1129, column: 6, scope: !2255)
!2262 = !DILocation(line: 1130, column: 13, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2256, file: !2, line: 1130, column: 13)
!2264 = !DILocation(line: 1130, column: 22, scope: !2263)
!2265 = !DILocation(line: 1130, column: 13, scope: !2256)
!2266 = !DILocation(line: 1131, column: 37, scope: !2263)
!2267 = !DILocation(line: 1131, column: 17, scope: !2263)
!2268 = !DILocation(line: 1131, column: 15, scope: !2263)
!2269 = !DILocation(line: 1131, column: 6, scope: !2263)
!2270 = !DILocation(line: 1132, column: 13, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2256, file: !2, line: 1132, column: 13)
!2272 = !DILocation(line: 1132, column: 22, scope: !2271)
!2273 = !DILocation(line: 1132, column: 13, scope: !2256)
!2274 = !DILocation(line: 1133, column: 15, scope: !2271)
!2275 = !DILocation(line: 1133, column: 6, scope: !2271)
!2276 = !DILocation(line: 1134, column: 7, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2256, file: !2, line: 1134, column: 6)
!2278 = !DILocation(line: 1134, column: 16, scope: !2277)
!2279 = !DILocation(line: 1134, column: 25, scope: !2277)
!2280 = !DILocation(line: 1134, column: 29, scope: !2277)
!2281 = !DILocation(line: 1134, column: 40, scope: !2277)
!2282 = !DILocation(line: 1134, column: 49, scope: !2277)
!2283 = !DILocation(line: 1135, column: 7, scope: !2277)
!2284 = !DILocation(line: 1135, column: 12, scope: !2277)
!2285 = !{!1761, !1472, i64 24}
!2286 = !DILocation(line: 1135, column: 20, scope: !2277)
!2287 = !DILocation(line: 1135, column: 29, scope: !2277)
!2288 = !DILocation(line: 1135, column: 33, scope: !2277)
!2289 = !DILocation(line: 1135, column: 38, scope: !2277)
!2290 = !{!1761, !1472, i64 40}
!2291 = !DILocation(line: 1135, column: 43, scope: !2277)
!2292 = !DILocation(line: 1134, column: 6, scope: !2256)
!2293 = !DILocation(line: 1136, column: 32, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2295, file: !2, line: 1136, column: 10)
!2295 = distinct !DILexicalBlock(scope: !2277, file: !2, line: 1135, column: 53)
!2296 = !DILocation(line: 1136, column: 52, scope: !2294)
!2297 = !DILocation(line: 1136, column: 10, scope: !2294)
!2298 = !DILocation(line: 1136, column: 62, scope: !2294)
!2299 = !DILocation(line: 1136, column: 10, scope: !2295)
!2300 = !DILocation(line: 1137, column: 19, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2294, file: !2, line: 1136, column: 67)
!2302 = !DILocation(line: 1137, column: 3, scope: !2301)
!2303 = !DILocation(line: 1137, column: 8, scope: !2301)
!2304 = !DILocation(line: 1137, column: 17, scope: !2301)
!2305 = !DILocation(line: 1138, column: 3, scope: !2301)
!2306 = !DILocation(line: 1140, column: 2, scope: !2295)
!2307 = !DILocation(line: 1141, column: 13, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2256, file: !2, line: 1141, column: 13)
!2309 = !DILocation(line: 1141, column: 19, scope: !2308)
!2310 = !DILocation(line: 1141, column: 27, scope: !2308)
!2311 = !DILocation(line: 1141, column: 13, scope: !2256)
!2312 = !DILocation(line: 1142, column: 37, scope: !2308)
!2313 = !DILocation(line: 1142, column: 42, scope: !2308)
!2314 = !DILocation(line: 1143, column: 51, scope: !2308)
!2315 = !DILocation(line: 1142, column: 6, scope: !2308)
!2316 = !DILocation(line: 1145, column: 37, scope: !2308)
!2317 = !DILocation(line: 1145, column: 42, scope: !2308)
!2318 = !DILocation(line: 1146, column: 51, scope: !2308)
!2319 = !DILocation(line: 1145, column: 6, scope: !2308)
!2320 = !DILocation(line: 1147, column: 6, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2256, file: !2, line: 1147, column: 6)
!2322 = !DILocation(line: 1147, column: 12, scope: !2321)
!2323 = !DILocation(line: 1147, column: 21, scope: !2321)
!2324 = !DILocation(line: 1147, column: 6, scope: !2256)
!2325 = !DILocation(line: 1148, column: 22, scope: !2321)
!2326 = !DILocation(line: 1148, column: 6, scope: !2321)
!2327 = !DILocation(line: 1148, column: 11, scope: !2321)
!2328 = !DILocation(line: 1148, column: 20, scope: !2321)
!2329 = !DILocation(line: 1149, column: 2, scope: !2256)
!2330 = !DILocation(line: 1153, column: 17, scope: !2163)
!2331 = !DILocation(line: 1153, column: 22, scope: !2163)
!2332 = !DILocation(line: 1153, column: 27, scope: !2163)
!2333 = !DILocation(line: 1153, column: 49, scope: !2163)
!2334 = !DILocation(line: 1154, column: 17, scope: !2163)
!2335 = !DILocation(line: 1154, column: 23, scope: !2163)
!2336 = !DILocation(line: 1154, column: 31, scope: !2163)
!2337 = !DILocation(line: 1154, column: 50, scope: !2163)
!2338 = !DILocation(line: 1155, column: 17, scope: !2163)
!2339 = !DILocation(line: 1155, column: 23, scope: !2163)
!2340 = !DILocation(line: 1155, column: 31, scope: !2163)
!2341 = !DILocation(line: 1153, column: 16, scope: !2164)
!2342 = !DILocation(line: 1156, column: 43, scope: !2162)
!2343 = !DILocation(line: 1156, column: 8, scope: !2162)
!2344 = !DILocation(line: 1156, column: 6, scope: !2162)
!2345 = !{!1473, !1473, i64 0}
!2346 = !DILocation(line: 1157, column: 7, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2162, file: !2, line: 1157, column: 6)
!2348 = !DILocation(line: 1157, column: 16, scope: !2347)
!2349 = !DILocation(line: 1157, column: 25, scope: !2347)
!2350 = !DILocation(line: 1157, column: 29, scope: !2347)
!2351 = !DILocation(line: 1157, column: 40, scope: !2347)
!2352 = !DILocation(line: 1157, column: 49, scope: !2347)
!2353 = !DILocation(line: 1158, column: 7, scope: !2347)
!2354 = !DILocation(line: 1158, column: 12, scope: !2347)
!2355 = !DILocation(line: 1158, column: 20, scope: !2347)
!2356 = !DILocation(line: 1158, column: 29, scope: !2347)
!2357 = !DILocation(line: 1158, column: 33, scope: !2347)
!2358 = !DILocation(line: 1158, column: 38, scope: !2347)
!2359 = !DILocation(line: 1158, column: 43, scope: !2347)
!2360 = !DILocation(line: 1158, column: 52, scope: !2347)
!2361 = !DILocation(line: 1159, column: 8, scope: !2347)
!2362 = !DILocation(line: 1159, column: 14, scope: !2347)
!2363 = !DILocation(line: 1159, column: 22, scope: !2347)
!2364 = !DILocation(line: 1159, column: 42, scope: !2347)
!2365 = !DILocation(line: 1157, column: 6, scope: !2162)
!2366 = !DILocation(line: 1160, column: 11, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2368, file: !2, line: 1160, column: 10)
!2368 = distinct !DILexicalBlock(scope: !2347, file: !2, line: 1159, column: 49)
!2369 = !DILocation(line: 1160, column: 15, scope: !2367)
!2370 = !DILocation(line: 1160, column: 42, scope: !2367)
!2371 = !DILocation(line: 1161, column: 4, scope: !2367)
!2372 = !DILocation(line: 1161, column: 8, scope: !2367)
!2373 = !DILocation(line: 1161, column: 35, scope: !2367)
!2374 = !DILocation(line: 1162, column: 4, scope: !2367)
!2375 = !DILocation(line: 1162, column: 8, scope: !2367)
!2376 = !DILocation(line: 1160, column: 10, scope: !2368)
!2377 = !DILocation(line: 1168, column: 29, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2379, file: !2, line: 1168, column: 7)
!2379 = distinct !DILexicalBlock(scope: !2367, file: !2, line: 1162, column: 37)
!2380 = !DILocation(line: 1168, column: 49, scope: !2378)
!2381 = !DILocation(line: 1168, column: 7, scope: !2378)
!2382 = !DILocation(line: 1168, column: 59, scope: !2378)
!2383 = !DILocation(line: 1168, column: 7, scope: !2379)
!2384 = !DILocation(line: 1169, column: 23, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2378, file: !2, line: 1168, column: 64)
!2386 = !DILocation(line: 1169, column: 7, scope: !2385)
!2387 = !DILocation(line: 1169, column: 12, scope: !2385)
!2388 = !DILocation(line: 1169, column: 21, scope: !2385)
!2389 = !DILocation(line: 1170, column: 7, scope: !2385)
!2390 = !DILocation(line: 1172, column: 21, scope: !2379)
!2391 = !DILocation(line: 1173, column: 6, scope: !2379)
!2392 = !DILocation(line: 1174, column: 10, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2368, file: !2, line: 1174, column: 10)
!2394 = !DILocation(line: 1174, column: 16, scope: !2393)
!2395 = !DILocation(line: 1174, column: 23, scope: !2393)
!2396 = !DILocation(line: 1174, column: 10, scope: !2368)
!2397 = !DILocation(line: 1175, column: 3, scope: !2393)
!2398 = !DILocation(line: 1175, column: 9, scope: !2393)
!2399 = !DILocation(line: 1175, column: 16, scope: !2393)
!2400 = !DILocation(line: 1176, column: 10, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2368, file: !2, line: 1176, column: 10)
!2402 = !DILocation(line: 1176, column: 16, scope: !2401)
!2403 = !DILocation(line: 1176, column: 27, scope: !2401)
!2404 = !DILocation(line: 1176, column: 10, scope: !2368)
!2405 = !DILocation(line: 1177, column: 3, scope: !2401)
!2406 = !DILocation(line: 1177, column: 9, scope: !2401)
!2407 = !DILocation(line: 1177, column: 20, scope: !2401)
!2408 = !DILocation(line: 1178, column: 2, scope: !2368)
!2409 = !DILocation(line: 1184, column: 7, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2162, file: !2, line: 1184, column: 6)
!2411 = !DILocation(line: 1184, column: 13, scope: !2410)
!2412 = !DILocation(line: 1184, column: 21, scope: !2410)
!2413 = !DILocation(line: 1184, column: 41, scope: !2410)
!2414 = !DILocation(line: 1184, column: 6, scope: !2162)
!2415 = !DILocation(line: 1185, column: 27, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2410, file: !2, line: 1184, column: 47)
!2417 = !DILocation(line: 1185, column: 6, scope: !2416)
!2418 = !DILocation(line: 1186, column: 10, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2416, file: !2, line: 1186, column: 10)
!2420 = !DILocation(line: 1186, column: 15, scope: !2419)
!2421 = !{!2176, !1472, i64 104}
!2422 = !DILocation(line: 1186, column: 23, scope: !2419)
!2423 = !DILocation(line: 1186, column: 10, scope: !2416)
!2424 = !DILocation(line: 1187, column: 27, scope: !2419)
!2425 = !DILocation(line: 1187, column: 32, scope: !2419)
!2426 = !DILocation(line: 1187, column: 40, scope: !2419)
!2427 = !DILocation(line: 1187, column: 45, scope: !2419)
!2428 = !DILocation(line: 1187, column: 3, scope: !2419)
!2429 = !DILocation(line: 1189, column: 24, scope: !2419)
!2430 = !DILocation(line: 1189, column: 3, scope: !2419)
!2431 = !DILocation(line: 1190, column: 10, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2416, file: !2, line: 1190, column: 10)
!2433 = !DILocation(line: 1190, column: 19, scope: !2432)
!2434 = !DILocation(line: 1190, column: 10, scope: !2416)
!2435 = !DILocation(line: 1191, column: 24, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2432, file: !2, line: 1190, column: 28)
!2437 = !DILocation(line: 1191, column: 3, scope: !2436)
!2438 = !DILocation(line: 1192, column: 27, scope: !2436)
!2439 = !DILocation(line: 1192, column: 32, scope: !2436)
!2440 = !DILocation(line: 1192, column: 52, scope: !2436)
!2441 = !DILocation(line: 1192, column: 3, scope: !2436)
!2442 = !DILocation(line: 1193, column: 6, scope: !2436)
!2443 = !DILocation(line: 1194, column: 14, scope: !2416)
!2444 = !DILocation(line: 1194, column: 19, scope: !2416)
!2445 = !{!2176, !1734, i64 76}
!2446 = !DILocation(line: 1194, column: 6, scope: !2416)
!2447 = !DILocation(line: 1196, column: 28, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2416, file: !2, line: 1194, column: 31)
!2449 = !DILocation(line: 1196, column: 7, scope: !2448)
!2450 = !DILocation(line: 1197, column: 7, scope: !2448)
!2451 = !DILocation(line: 1199, column: 28, scope: !2448)
!2452 = !DILocation(line: 1199, column: 7, scope: !2448)
!2453 = !DILocation(line: 1200, column: 7, scope: !2448)
!2454 = !DILocation(line: 1202, column: 27, scope: !2416)
!2455 = !DILocation(line: 1202, column: 6, scope: !2416)
!2456 = !DILocation(line: 1203, column: 2, scope: !2416)
!2457 = !DILocation(line: 1206, column: 13, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2162, file: !2, line: 1206, column: 13)
!2459 = !DILocation(line: 1206, column: 19, scope: !2458)
!2460 = !DILocation(line: 1206, column: 27, scope: !2458)
!2461 = !DILocation(line: 1206, column: 13, scope: !2162)
!2462 = !DILocation(line: 1207, column: 22, scope: !2458)
!2463 = !DILocation(line: 1207, column: 13, scope: !2458)
!2464 = !DILocation(line: 1208, column: 7, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2162, file: !2, line: 1208, column: 6)
!2466 = !DILocation(line: 1208, column: 13, scope: !2465)
!2467 = !DILocation(line: 1208, column: 21, scope: !2465)
!2468 = !DILocation(line: 1208, column: 42, scope: !2465)
!2469 = !DILocation(line: 1208, column: 6, scope: !2162)
!2470 = !DILocation(line: 1209, column: 28, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2465, file: !2, line: 1208, column: 48)
!2472 = !DILocation(line: 1209, column: 12, scope: !2471)
!2473 = !DILocation(line: 1209, column: 10, scope: !2471)
!2474 = !DILocation(line: 1210, column: 10, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2471, file: !2, line: 1210, column: 10)
!2476 = !DILocation(line: 1210, column: 14, scope: !2475)
!2477 = !DILocation(line: 1210, column: 10, scope: !2471)
!2478 = !DILocation(line: 1211, column: 25, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2475, file: !2, line: 1210, column: 23)
!2480 = !DILocation(line: 1211, column: 30, scope: !2479)
!2481 = !{!2482, !1472, i64 112}
!2482 = !{!"_xmlDtd", !1472, i64 0, !1473, i64 8, !1472, i64 16, !1472, i64 24, !1472, i64 32, !1472, i64 40, !1472, i64 48, !1472, i64 56, !1472, i64 64, !1472, i64 72, !1472, i64 80, !1472, i64 88, !1472, i64 96, !1472, i64 104, !1472, i64 112, !1472, i64 120}
!2483 = !DILocation(line: 1211, column: 40, scope: !2479)
!2484 = !DILocation(line: 1211, column: 45, scope: !2479)
!2485 = !{!2482, !1472, i64 104}
!2486 = !DILocation(line: 1211, column: 14, scope: !2479)
!2487 = !DILocation(line: 1211, column: 12, scope: !2479)
!2488 = !DILocation(line: 1212, column: 7, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2479, file: !2, line: 1212, column: 7)
!2490 = !DILocation(line: 1212, column: 16, scope: !2489)
!2491 = !DILocation(line: 1212, column: 7, scope: !2479)
!2492 = !DILocation(line: 1212, column: 30, scope: !2489)
!2493 = !DILocation(line: 1212, column: 21, scope: !2489)
!2494 = !DILocation(line: 1213, column: 6, scope: !2479)
!2495 = !DILocation(line: 1214, column: 2, scope: !2471)
!2496 = !DILocation(line: 1216, column: 6, scope: !2161)
!2497 = !DILocation(line: 1216, column: 11, scope: !2161)
!2498 = !{!2176, !1472, i64 24}
!2499 = !DILocation(line: 1216, column: 20, scope: !2161)
!2500 = !DILocation(line: 1216, column: 6, scope: !2162)
!2501 = !DILocation(line: 1217, column: 6, scope: !2160)
!2502 = !DILocation(line: 1217, column: 17, scope: !2160)
!2503 = !DILocation(line: 1217, column: 25, scope: !2160)
!2504 = !DILocation(line: 1217, column: 30, scope: !2160)
!2505 = !DILocation(line: 1219, column: 6, scope: !2160)
!2506 = !DILocation(line: 1219, column: 13, scope: !2160)
!2507 = !DILocation(line: 1219, column: 19, scope: !2160)
!2508 = !DILocation(line: 1220, column: 3, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 1219, column: 28)
!2510 = !DILocation(line: 1220, column: 9, scope: !2509)
!2511 = !DILocation(line: 1220, column: 15, scope: !2509)
!2512 = !{!1733, !1734, i64 52}
!2513 = !DILocation(line: 1222, column: 7, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2509, file: !2, line: 1222, column: 7)
!2515 = !DILocation(line: 1222, column: 7, scope: !2509)
!2516 = !DILocation(line: 1223, column: 27, scope: !2514)
!2517 = !DILocation(line: 1223, column: 33, scope: !2514)
!2518 = !DILocation(line: 1223, column: 7, scope: !2514)
!2519 = !DILocation(line: 1226, column: 33, scope: !2514)
!2520 = !DILocation(line: 1226, column: 39, scope: !2514)
!2521 = !DILocation(line: 1226, column: 7, scope: !2514)
!2522 = !DILocation(line: 1227, column: 24, scope: !2509)
!2523 = !DILocation(line: 1227, column: 3, scope: !2509)
!2524 = !DILocation(line: 1228, column: 11, scope: !2509)
!2525 = !DILocation(line: 1228, column: 18, scope: !2509)
!2526 = !{!2527, !1472, i64 48}
!2527 = !{!"_xmlNode", !1472, i64 0, !1473, i64 8, !1472, i64 16, !1472, i64 24, !1472, i64 32, !1472, i64 40, !1472, i64 48, !1472, i64 56, !1472, i64 64, !1472, i64 72, !1472, i64 80, !1472, i64 88, !1472, i64 96, !1472, i64 104, !2528, i64 112, !2528, i64 114}
!2528 = !{!"short", !1473, i64 0}
!2529 = !DILocation(line: 1228, column: 9, scope: !2509)
!2530 = distinct !{!2530, !2505, !2531, !1687}
!2531 = !DILocation(line: 1229, column: 6, scope: !2160)
!2532 = !DILocation(line: 1230, column: 2, scope: !2161)
!2533 = !DILocation(line: 1230, column: 2, scope: !2160)
!2534 = !DILocation(line: 1231, column: 5, scope: !2162)
!2535 = !DILocation(line: 1236, column: 10, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2142, file: !2, line: 1236, column: 9)
!2537 = !DILocation(line: 1236, column: 9, scope: !2536)
!2538 = !DILocation(line: 1236, column: 29, scope: !2536)
!2539 = !DILocation(line: 1236, column: 33, scope: !2536)
!2540 = !DILocation(line: 1236, column: 44, scope: !2536)
!2541 = !DILocation(line: 1236, column: 9, scope: !2142)
!2542 = !DILocation(line: 1237, column: 23, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2536, file: !2, line: 1236, column: 54)
!2544 = !DILocation(line: 1237, column: 2, scope: !2543)
!2545 = !DILocation(line: 1238, column: 17, scope: !2543)
!2546 = !DILocation(line: 1238, column: 2, scope: !2543)
!2547 = !DILocation(line: 1238, column: 8, scope: !2543)
!2548 = !DILocation(line: 1238, column: 15, scope: !2543)
!2549 = !DILocation(line: 1239, column: 21, scope: !2543)
!2550 = !DILocation(line: 1239, column: 2, scope: !2543)
!2551 = !DILocation(line: 1239, column: 8, scope: !2543)
!2552 = !DILocation(line: 1239, column: 19, scope: !2543)
!2553 = !DILocation(line: 1240, column: 5, scope: !2543)
!2554 = !DILocation(line: 1241, column: 21, scope: !2142)
!2555 = !DILocation(line: 1241, column: 5, scope: !2142)
!2556 = !DILocation(line: 1241, column: 10, scope: !2142)
!2557 = !DILocation(line: 1241, column: 19, scope: !2142)
!2558 = !DILocation(line: 1242, column: 5, scope: !2142)
!2559 = !DILocation(line: 1243, column: 1, scope: !2142)
!2560 = distinct !DISubprogram(name: "xmlSaveTree__internal_alias", scope: !2, file: !2, line: 1945, type: !2561, scopeLine: 1946, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !2563)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!2113, !1324, !1169}
!2563 = !{!2564, !2565, !2566}
!2564 = !DILocalVariable(name: "ctxt", arg: 1, scope: !2560, file: !2, line: 1945, type: !1324)
!2565 = !DILocalVariable(name: "node", arg: 2, scope: !2560, file: !2, line: 1945, type: !1169)
!2566 = !DILocalVariable(name: "ret", scope: !2560, file: !2, line: 1947, type: !2113)
!2567 = !DILocation(line: 1945, column: 28, scope: !2560)
!2568 = !DILocation(line: 1945, column: 45, scope: !2560)
!2569 = !DILocation(line: 1947, column: 5, scope: !2560)
!2570 = !DILocation(line: 1947, column: 10, scope: !2560)
!2571 = !DILocation(line: 1949, column: 10, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2560, file: !2, line: 1949, column: 9)
!2573 = !DILocation(line: 1949, column: 15, scope: !2572)
!2574 = !DILocation(line: 1949, column: 24, scope: !2572)
!2575 = !DILocation(line: 1949, column: 28, scope: !2572)
!2576 = !DILocation(line: 1949, column: 33, scope: !2572)
!2577 = !DILocation(line: 1949, column: 9, scope: !2560)
!2578 = !DILocation(line: 1949, column: 43, scope: !2572)
!2579 = !DILocation(line: 1950, column: 31, scope: !2560)
!2580 = !DILocation(line: 1950, column: 37, scope: !2560)
!2581 = !DILocation(line: 1950, column: 5, scope: !2560)
!2582 = !DILocation(line: 1951, column: 12, scope: !2560)
!2583 = !DILocation(line: 1951, column: 5, scope: !2560)
!2584 = !DILocation(line: 1952, column: 1, scope: !2560)
!2585 = distinct !DISubprogram(name: "xmlNodeDumpOutputInternal", scope: !2, file: !2, line: 895, type: !2586, scopeLine: 895, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !2588)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{null, !1324, !1169}
!2588 = !{!2589, !2590, !2591, !2592, !2593, !2594, !2595}
!2589 = !DILocalVariable(name: "ctxt", arg: 1, scope: !2585, file: !2, line: 895, type: !1324)
!2590 = !DILocalVariable(name: "cur", arg: 2, scope: !2585, file: !2, line: 895, type: !1169)
!2591 = !DILocalVariable(name: "format", scope: !2585, file: !2, line: 896, type: !1104)
!2592 = !DILocalVariable(name: "tmp", scope: !2585, file: !2, line: 897, type: !1169)
!2593 = !DILocalVariable(name: "start", scope: !2585, file: !2, line: 898, type: !1165)
!2594 = !DILocalVariable(name: "end", scope: !2585, file: !2, line: 898, type: !1165)
!2595 = !DILocalVariable(name: "buf", scope: !2585, file: !2, line: 899, type: !1273)
!2596 = !DILocation(line: 895, column: 42, scope: !2585)
!2597 = !DILocation(line: 895, column: 59, scope: !2585)
!2598 = !DILocation(line: 896, column: 5, scope: !2585)
!2599 = !DILocation(line: 896, column: 9, scope: !2585)
!2600 = !DILocation(line: 897, column: 5, scope: !2585)
!2601 = !DILocation(line: 897, column: 16, scope: !2585)
!2602 = !DILocation(line: 898, column: 5, scope: !2585)
!2603 = !DILocation(line: 898, column: 14, scope: !2585)
!2604 = !DILocation(line: 898, column: 22, scope: !2585)
!2605 = !DILocation(line: 899, column: 5, scope: !2585)
!2606 = !DILocation(line: 899, column: 24, scope: !2585)
!2607 = !DILocation(line: 901, column: 9, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 901, column: 9)
!2609 = !DILocation(line: 901, column: 13, scope: !2608)
!2610 = !DILocation(line: 901, column: 9, scope: !2585)
!2611 = !DILocation(line: 901, column: 22, scope: !2608)
!2612 = !DILocation(line: 902, column: 11, scope: !2585)
!2613 = !DILocation(line: 902, column: 17, scope: !2585)
!2614 = !DILocation(line: 902, column: 9, scope: !2585)
!2615 = !DILocation(line: 903, column: 9, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 903, column: 9)
!2617 = !DILocation(line: 903, column: 14, scope: !2616)
!2618 = !{!2527, !1473, i64 8}
!2619 = !DILocation(line: 903, column: 19, scope: !2616)
!2620 = !DILocation(line: 903, column: 9, scope: !2585)
!2621 = !DILocation(line: 904, column: 2, scope: !2616)
!2622 = !DILocation(line: 905, column: 9, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 905, column: 9)
!2624 = !DILocation(line: 905, column: 14, scope: !2623)
!2625 = !DILocation(line: 905, column: 19, scope: !2623)
!2626 = !DILocation(line: 905, column: 9, scope: !2585)
!2627 = !DILocation(line: 906, column: 2, scope: !2623)
!2628 = !DILocation(line: 907, column: 10, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 907, column: 9)
!2630 = !DILocation(line: 907, column: 15, scope: !2629)
!2631 = !DILocation(line: 907, column: 20, scope: !2629)
!2632 = !DILocation(line: 907, column: 42, scope: !2629)
!2633 = !DILocation(line: 908, column: 10, scope: !2629)
!2634 = !DILocation(line: 908, column: 15, scope: !2629)
!2635 = !DILocation(line: 908, column: 20, scope: !2629)
!2636 = !DILocation(line: 907, column: 9, scope: !2585)
!2637 = !DILocation(line: 909, column: 26, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2629, file: !2, line: 908, column: 48)
!2639 = !DILocation(line: 909, column: 44, scope: !2638)
!2640 = !DILocation(line: 909, column: 2, scope: !2638)
!2641 = !DILocation(line: 910, column: 2, scope: !2638)
!2642 = !DILocation(line: 913, column: 9, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 913, column: 9)
!2644 = !DILocation(line: 913, column: 15, scope: !2643)
!2645 = !DILocation(line: 913, column: 23, scope: !2643)
!2646 = !DILocation(line: 913, column: 9, scope: !2585)
!2647 = !DILocation(line: 914, column: 29, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2643, file: !2, line: 913, column: 41)
!2649 = !DILocation(line: 914, column: 35, scope: !2648)
!2650 = !DILocation(line: 914, column: 9, scope: !2648)
!2651 = !DILocation(line: 915, column: 9, scope: !2648)
!2652 = !DILocation(line: 917, column: 11, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 917, column: 9)
!2654 = !DILocation(line: 917, column: 16, scope: !2653)
!2655 = !DILocation(line: 917, column: 21, scope: !2653)
!2656 = !DILocation(line: 917, column: 44, scope: !2653)
!2657 = !DILocation(line: 917, column: 48, scope: !2653)
!2658 = !DILocation(line: 917, column: 53, scope: !2653)
!2659 = !{!2527, !1472, i64 64}
!2660 = !DILocation(line: 917, column: 57, scope: !2653)
!2661 = !DILocation(line: 917, column: 66, scope: !2653)
!2662 = !DILocation(line: 918, column: 11, scope: !2653)
!2663 = !DILocation(line: 918, column: 16, scope: !2653)
!2664 = !DILocation(line: 918, column: 21, scope: !2653)
!2665 = !DILocation(line: 918, column: 26, scope: !2653)
!2666 = !DILocation(line: 918, column: 53, scope: !2653)
!2667 = !DILocation(line: 919, column: 12, scope: !2653)
!2668 = !DILocation(line: 919, column: 18, scope: !2653)
!2669 = !DILocation(line: 919, column: 26, scope: !2653)
!2670 = !DILocation(line: 919, column: 45, scope: !2653)
!2671 = !DILocation(line: 919, column: 52, scope: !2653)
!2672 = !DILocation(line: 920, column: 10, scope: !2653)
!2673 = !DILocation(line: 920, column: 16, scope: !2653)
!2674 = !DILocation(line: 920, column: 24, scope: !2653)
!2675 = !DILocation(line: 917, column: 9, scope: !2585)
!2676 = !DILocation(line: 921, column: 29, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2653, file: !2, line: 920, column: 45)
!2678 = !DILocation(line: 921, column: 35, scope: !2677)
!2679 = !DILocation(line: 921, column: 2, scope: !2677)
!2680 = !DILocation(line: 922, column: 2, scope: !2677)
!2681 = !DILocation(line: 925, column: 9, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 925, column: 9)
!2683 = !DILocation(line: 925, column: 14, scope: !2682)
!2684 = !DILocation(line: 925, column: 19, scope: !2682)
!2685 = !DILocation(line: 925, column: 9, scope: !2585)
!2686 = !DILocation(line: 926, column: 26, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2682, file: !2, line: 925, column: 36)
!2688 = !DILocation(line: 926, column: 44, scope: !2687)
!2689 = !DILocation(line: 926, column: 9, scope: !2687)
!2690 = !DILocation(line: 927, column: 2, scope: !2687)
!2691 = !DILocation(line: 929, column: 9, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 929, column: 9)
!2693 = !DILocation(line: 929, column: 14, scope: !2692)
!2694 = !DILocation(line: 929, column: 19, scope: !2692)
!2695 = !DILocation(line: 929, column: 9, scope: !2585)
!2696 = !DILocation(line: 930, column: 31, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2692, file: !2, line: 929, column: 46)
!2698 = !DILocation(line: 930, column: 37, scope: !2697)
!2699 = !DILocation(line: 930, column: 42, scope: !2697)
!2700 = !{!2527, !1472, i64 24}
!2701 = !DILocation(line: 930, column: 9, scope: !2697)
!2702 = !DILocation(line: 931, column: 2, scope: !2697)
!2703 = !DILocation(line: 933, column: 9, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 933, column: 9)
!2705 = !DILocation(line: 933, column: 14, scope: !2704)
!2706 = !DILocation(line: 933, column: 19, scope: !2704)
!2707 = !DILocation(line: 933, column: 9, scope: !2585)
!2708 = !DILocation(line: 934, column: 31, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2704, file: !2, line: 933, column: 40)
!2710 = !DILocation(line: 934, column: 36, scope: !2709)
!2711 = !DILocation(line: 934, column: 60, scope: !2709)
!2712 = !DILocation(line: 934, column: 9, scope: !2709)
!2713 = !DILocation(line: 935, column: 2, scope: !2709)
!2714 = !DILocation(line: 937, column: 9, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 937, column: 9)
!2716 = !DILocation(line: 937, column: 14, scope: !2715)
!2717 = !DILocation(line: 937, column: 19, scope: !2715)
!2718 = !DILocation(line: 937, column: 9, scope: !2585)
!2719 = !DILocation(line: 938, column: 33, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2715, file: !2, line: 937, column: 42)
!2721 = !DILocation(line: 938, column: 38, scope: !2720)
!2722 = !DILocation(line: 938, column: 64, scope: !2720)
!2723 = !DILocation(line: 938, column: 9, scope: !2720)
!2724 = !DILocation(line: 939, column: 2, scope: !2720)
!2725 = !DILocation(line: 941, column: 9, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 941, column: 9)
!2727 = !DILocation(line: 941, column: 14, scope: !2726)
!2728 = !DILocation(line: 941, column: 19, scope: !2726)
!2729 = !DILocation(line: 941, column: 9, scope: !2585)
!2730 = !DILocation(line: 942, column: 30, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2726, file: !2, line: 941, column: 39)
!2732 = !DILocation(line: 942, column: 35, scope: !2731)
!2733 = !DILocation(line: 942, column: 58, scope: !2731)
!2734 = !DILocation(line: 942, column: 9, scope: !2731)
!2735 = !DILocation(line: 943, column: 2, scope: !2731)
!2736 = !DILocation(line: 945, column: 9, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 945, column: 9)
!2738 = !DILocation(line: 945, column: 14, scope: !2737)
!2739 = !DILocation(line: 945, column: 19, scope: !2737)
!2740 = !DILocation(line: 945, column: 9, scope: !2585)
!2741 = !DILocation(line: 946, column: 6, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2743, file: !2, line: 946, column: 6)
!2743 = distinct !DILexicalBlock(scope: !2737, file: !2, line: 945, column: 37)
!2744 = !DILocation(line: 946, column: 11, scope: !2742)
!2745 = !{!2527, !1472, i64 80}
!2746 = !DILocation(line: 946, column: 19, scope: !2742)
!2747 = !DILocation(line: 946, column: 6, scope: !2743)
!2748 = !DILocation(line: 947, column: 10, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2750, file: !2, line: 947, column: 10)
!2750 = distinct !DILexicalBlock(scope: !2742, file: !2, line: 946, column: 28)
!2751 = !DILocation(line: 947, column: 15, scope: !2749)
!2752 = !{!2527, !1472, i64 16}
!2753 = !DILocation(line: 947, column: 20, scope: !2749)
!2754 = !DILocation(line: 947, column: 10, scope: !2750)
!2755 = !DILocation(line: 948, column: 44, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2749, file: !2, line: 947, column: 43)
!2757 = !DILocation(line: 948, column: 49, scope: !2756)
!2758 = !DILocation(line: 948, column: 54, scope: !2756)
!2759 = !DILocation(line: 948, column: 63, scope: !2756)
!2760 = !DILocation(line: 948, column: 69, scope: !2756)
!2761 = !DILocation(line: 948, column: 17, scope: !2756)
!2762 = !DILocation(line: 949, column: 6, scope: !2756)
!2763 = !DILocation(line: 953, column: 30, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2749, file: !2, line: 949, column: 13)
!2765 = !DILocation(line: 953, column: 50, scope: !2764)
!2766 = !DILocation(line: 953, column: 55, scope: !2764)
!2767 = !DILocation(line: 953, column: 3, scope: !2764)
!2768 = !DILocation(line: 955, column: 2, scope: !2750)
!2769 = !DILocation(line: 957, column: 2, scope: !2743)
!2770 = !DILocation(line: 959, column: 9, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 959, column: 9)
!2772 = !DILocation(line: 959, column: 14, scope: !2771)
!2773 = !DILocation(line: 959, column: 19, scope: !2771)
!2774 = !DILocation(line: 959, column: 9, scope: !2585)
!2775 = !DILocation(line: 960, column: 6, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2777, file: !2, line: 960, column: 6)
!2777 = distinct !DILexicalBlock(scope: !2771, file: !2, line: 959, column: 35)
!2778 = !DILocation(line: 960, column: 11, scope: !2776)
!2779 = !DILocation(line: 960, column: 19, scope: !2776)
!2780 = !DILocation(line: 960, column: 6, scope: !2777)
!2781 = !DILocation(line: 961, column: 27, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2776, file: !2, line: 960, column: 28)
!2783 = !DILocation(line: 961, column: 6, scope: !2782)
!2784 = !DILocation(line: 962, column: 33, scope: !2782)
!2785 = !DILocation(line: 962, column: 52, scope: !2782)
!2786 = !DILocation(line: 962, column: 57, scope: !2782)
!2787 = !DILocation(line: 962, column: 6, scope: !2782)
!2788 = !DILocation(line: 963, column: 10, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2782, file: !2, line: 963, column: 10)
!2790 = !DILocation(line: 963, column: 15, scope: !2789)
!2791 = !DILocation(line: 963, column: 23, scope: !2789)
!2792 = !DILocation(line: 963, column: 10, scope: !2782)
!2793 = !DILocation(line: 964, column: 14, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 964, column: 14)
!2795 = distinct !DILexicalBlock(scope: !2789, file: !2, line: 963, column: 32)
!2796 = !DILocation(line: 964, column: 20, scope: !2794)
!2797 = !DILocation(line: 964, column: 27, scope: !2794)
!2798 = !DILocation(line: 964, column: 14, scope: !2795)
!2799 = !DILocation(line: 965, column: 43, scope: !2794)
!2800 = !DILocation(line: 965, column: 14, scope: !2794)
!2801 = !DILocation(line: 967, column: 35, scope: !2794)
!2802 = !DILocation(line: 967, column: 14, scope: !2794)
!2803 = !DILocation(line: 968, column: 30, scope: !2795)
!2804 = !DILocation(line: 968, column: 49, scope: !2795)
!2805 = !DILocation(line: 968, column: 54, scope: !2795)
!2806 = !DILocation(line: 968, column: 3, scope: !2795)
!2807 = !DILocation(line: 969, column: 6, scope: !2795)
!2808 = !DILocation(line: 970, column: 27, scope: !2782)
!2809 = !DILocation(line: 970, column: 6, scope: !2782)
!2810 = !DILocation(line: 971, column: 2, scope: !2782)
!2811 = !DILocation(line: 972, column: 27, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2776, file: !2, line: 971, column: 9)
!2813 = !DILocation(line: 972, column: 6, scope: !2812)
!2814 = !DILocation(line: 973, column: 33, scope: !2812)
!2815 = !DILocation(line: 973, column: 52, scope: !2812)
!2816 = !DILocation(line: 973, column: 57, scope: !2812)
!2817 = !DILocation(line: 973, column: 6, scope: !2812)
!2818 = !DILocation(line: 974, column: 10, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2812, file: !2, line: 974, column: 10)
!2820 = !DILocation(line: 974, column: 16, scope: !2819)
!2821 = !DILocation(line: 974, column: 23, scope: !2819)
!2822 = !DILocation(line: 974, column: 10, scope: !2812)
!2823 = !DILocation(line: 975, column: 39, scope: !2819)
!2824 = !DILocation(line: 975, column: 10, scope: !2819)
!2825 = !DILocation(line: 976, column: 27, scope: !2812)
!2826 = !DILocation(line: 976, column: 6, scope: !2812)
!2827 = !DILocation(line: 978, column: 2, scope: !2777)
!2828 = !DILocation(line: 980, column: 9, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 980, column: 9)
!2830 = !DILocation(line: 980, column: 14, scope: !2829)
!2831 = !DILocation(line: 980, column: 19, scope: !2829)
!2832 = !DILocation(line: 980, column: 9, scope: !2585)
!2833 = !DILocation(line: 981, column: 6, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2835, file: !2, line: 981, column: 6)
!2835 = distinct !DILexicalBlock(scope: !2829, file: !2, line: 980, column: 40)
!2836 = !DILocation(line: 981, column: 11, scope: !2834)
!2837 = !DILocation(line: 981, column: 19, scope: !2834)
!2838 = !DILocation(line: 981, column: 6, scope: !2835)
!2839 = !DILocation(line: 982, column: 27, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2834, file: !2, line: 981, column: 28)
!2841 = !DILocation(line: 982, column: 6, scope: !2840)
!2842 = !DILocation(line: 983, column: 33, scope: !2840)
!2843 = !DILocation(line: 983, column: 52, scope: !2840)
!2844 = !DILocation(line: 983, column: 57, scope: !2840)
!2845 = !DILocation(line: 983, column: 6, scope: !2840)
!2846 = !DILocation(line: 984, column: 27, scope: !2840)
!2847 = !DILocation(line: 984, column: 6, scope: !2840)
!2848 = !DILocation(line: 985, column: 2, scope: !2840)
!2849 = !DILocation(line: 986, column: 2, scope: !2835)
!2850 = !DILocation(line: 988, column: 9, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 988, column: 9)
!2852 = !DILocation(line: 988, column: 14, scope: !2851)
!2853 = !DILocation(line: 988, column: 19, scope: !2851)
!2854 = !DILocation(line: 988, column: 9, scope: !2585)
!2855 = !DILocation(line: 989, column: 30, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2851, file: !2, line: 988, column: 43)
!2857 = !DILocation(line: 989, column: 9, scope: !2856)
!2858 = !DILocation(line: 990, column: 29, scope: !2856)
!2859 = !DILocation(line: 990, column: 48, scope: !2856)
!2860 = !DILocation(line: 990, column: 53, scope: !2856)
!2861 = !DILocation(line: 990, column: 2, scope: !2856)
!2862 = !DILocation(line: 991, column: 30, scope: !2856)
!2863 = !DILocation(line: 991, column: 9, scope: !2856)
!2864 = !DILocation(line: 992, column: 2, scope: !2856)
!2865 = !DILocation(line: 994, column: 9, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 994, column: 9)
!2867 = !DILocation(line: 994, column: 14, scope: !2866)
!2868 = !DILocation(line: 994, column: 19, scope: !2866)
!2869 = !DILocation(line: 994, column: 9, scope: !2585)
!2870 = !DILocation(line: 995, column: 6, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2872, file: !2, line: 995, column: 6)
!2872 = distinct !DILexicalBlock(scope: !2866, file: !2, line: 994, column: 46)
!2873 = !DILocation(line: 995, column: 11, scope: !2871)
!2874 = !DILocation(line: 995, column: 19, scope: !2871)
!2875 = !DILocation(line: 995, column: 27, scope: !2871)
!2876 = !DILocation(line: 995, column: 31, scope: !2871)
!2877 = !DILocation(line: 995, column: 36, scope: !2871)
!2878 = !DILocation(line: 995, column: 30, scope: !2871)
!2879 = !DILocation(line: 995, column: 44, scope: !2871)
!2880 = !DILocation(line: 995, column: 6, scope: !2872)
!2881 = !DILocation(line: 996, column: 27, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2871, file: !2, line: 995, column: 53)
!2883 = !DILocation(line: 996, column: 6, scope: !2882)
!2884 = !DILocation(line: 997, column: 2, scope: !2882)
!2885 = !DILocation(line: 998, column: 20, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2871, file: !2, line: 997, column: 9)
!2887 = !DILocation(line: 998, column: 25, scope: !2886)
!2888 = !DILocation(line: 998, column: 18, scope: !2886)
!2889 = !DILocation(line: 998, column: 12, scope: !2886)
!2890 = !DILocation(line: 999, column: 6, scope: !2886)
!2891 = !DILocation(line: 999, column: 14, scope: !2886)
!2892 = !DILocation(line: 999, column: 13, scope: !2886)
!2893 = !DILocation(line: 999, column: 18, scope: !2886)
!2894 = !DILocation(line: 1000, column: 9, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2896, file: !2, line: 1000, column: 7)
!2896 = distinct !DILexicalBlock(scope: !2886, file: !2, line: 999, column: 27)
!2897 = !DILocation(line: 1000, column: 8, scope: !2895)
!2898 = !DILocation(line: 1000, column: 13, scope: !2895)
!2899 = !DILocation(line: 1000, column: 21, scope: !2895)
!2900 = !DILocation(line: 1000, column: 27, scope: !2895)
!2901 = !DILocation(line: 1000, column: 31, scope: !2895)
!2902 = !DILocation(line: 1000, column: 25, scope: !2895)
!2903 = !DILocation(line: 1000, column: 36, scope: !2895)
!2904 = !DILocation(line: 1000, column: 44, scope: !2895)
!2905 = !DILocation(line: 1001, column: 10, scope: !2895)
!2906 = !DILocation(line: 1001, column: 14, scope: !2895)
!2907 = !DILocation(line: 1001, column: 8, scope: !2895)
!2908 = !DILocation(line: 1001, column: 19, scope: !2895)
!2909 = !DILocation(line: 1000, column: 7, scope: !2896)
!2910 = !DILocation(line: 1002, column: 13, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2895, file: !2, line: 1001, column: 28)
!2912 = !DILocation(line: 1002, column: 17, scope: !2911)
!2913 = !DILocation(line: 1002, column: 11, scope: !2911)
!2914 = !DILocation(line: 1003, column: 28, scope: !2911)
!2915 = !DILocation(line: 1003, column: 7, scope: !2911)
!2916 = !DILocation(line: 1004, column: 28, scope: !2911)
!2917 = !DILocation(line: 1004, column: 33, scope: !2911)
!2918 = !DILocation(line: 1004, column: 39, scope: !2911)
!2919 = !DILocation(line: 1004, column: 37, scope: !2911)
!2920 = !DILocation(line: 1004, column: 60, scope: !2911)
!2921 = !DILocation(line: 1004, column: 7, scope: !2911)
!2922 = !DILocation(line: 1005, column: 28, scope: !2911)
!2923 = !DILocation(line: 1005, column: 7, scope: !2911)
!2924 = !DILocation(line: 1006, column: 15, scope: !2911)
!2925 = !DILocation(line: 1006, column: 13, scope: !2911)
!2926 = !DILocation(line: 1007, column: 3, scope: !2911)
!2927 = !DILocation(line: 1008, column: 6, scope: !2896)
!2928 = distinct !{!2928, !2890, !2929, !1687}
!2929 = !DILocation(line: 1009, column: 6, scope: !2886)
!2930 = !DILocation(line: 1010, column: 10, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2886, file: !2, line: 1010, column: 10)
!2932 = !DILocation(line: 1010, column: 19, scope: !2931)
!2933 = !DILocation(line: 1010, column: 16, scope: !2931)
!2934 = !DILocation(line: 1010, column: 10, scope: !2886)
!2935 = !DILocation(line: 1011, column: 24, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2931, file: !2, line: 1010, column: 24)
!2937 = !DILocation(line: 1011, column: 3, scope: !2936)
!2938 = !DILocation(line: 1012, column: 30, scope: !2936)
!2939 = !DILocation(line: 1012, column: 49, scope: !2936)
!2940 = !DILocation(line: 1012, column: 3, scope: !2936)
!2941 = !DILocation(line: 1013, column: 24, scope: !2936)
!2942 = !DILocation(line: 1013, column: 3, scope: !2936)
!2943 = !DILocation(line: 1014, column: 6, scope: !2936)
!2944 = !DILocation(line: 1016, column: 2, scope: !2872)
!2945 = !DILocation(line: 1018, column: 9, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1018, column: 9)
!2947 = !DILocation(line: 1018, column: 14, scope: !2946)
!2948 = !DILocation(line: 1018, column: 19, scope: !2946)
!2949 = !DILocation(line: 1018, column: 9, scope: !2585)
!2950 = !DILocation(line: 1019, column: 20, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2946, file: !2, line: 1018, column: 42)
!2952 = !DILocation(line: 1019, column: 39, scope: !2951)
!2953 = !DILocation(line: 1019, column: 2, scope: !2951)
!2954 = !DILocation(line: 1020, column: 2, scope: !2951)
!2955 = !DILocation(line: 1022, column: 9, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1022, column: 9)
!2957 = !DILocation(line: 1022, column: 14, scope: !2956)
!2958 = !DILocation(line: 1022, column: 19, scope: !2956)
!2959 = !DILocation(line: 1022, column: 9, scope: !2585)
!2960 = !DILocation(line: 1023, column: 22, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2956, file: !2, line: 1022, column: 42)
!2962 = !DILocation(line: 1023, column: 39, scope: !2961)
!2963 = !DILocation(line: 1023, column: 2, scope: !2961)
!2964 = !DILocation(line: 1024, column: 2, scope: !2961)
!2965 = !DILocation(line: 1027, column: 14, scope: !2585)
!2966 = !DILocation(line: 1027, column: 20, scope: !2585)
!2967 = !DILocation(line: 1027, column: 12, scope: !2585)
!2968 = !DILocation(line: 1028, column: 9, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1028, column: 9)
!2970 = !DILocation(line: 1028, column: 16, scope: !2969)
!2971 = !DILocation(line: 1028, column: 9, scope: !2585)
!2972 = !DILocation(line: 1029, column: 8, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2969, file: !2, line: 1028, column: 22)
!2974 = !DILocation(line: 1029, column: 13, scope: !2973)
!2975 = !DILocation(line: 1029, column: 6, scope: !2973)
!2976 = !DILocation(line: 1030, column: 2, scope: !2973)
!2977 = !DILocation(line: 1030, column: 9, scope: !2973)
!2978 = !DILocation(line: 1030, column: 13, scope: !2973)
!2979 = !DILocation(line: 1031, column: 11, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2981, file: !2, line: 1031, column: 10)
!2981 = distinct !DILexicalBlock(scope: !2973, file: !2, line: 1030, column: 22)
!2982 = !DILocation(line: 1031, column: 16, scope: !2980)
!2983 = !DILocation(line: 1031, column: 21, scope: !2980)
!2984 = !DILocation(line: 1031, column: 39, scope: !2980)
!2985 = !DILocation(line: 1032, column: 4, scope: !2980)
!2986 = !DILocation(line: 1032, column: 9, scope: !2980)
!2987 = !DILocation(line: 1032, column: 14, scope: !2980)
!2988 = !DILocation(line: 1032, column: 41, scope: !2980)
!2989 = !DILocation(line: 1033, column: 4, scope: !2980)
!2990 = !DILocation(line: 1033, column: 9, scope: !2980)
!2991 = !DILocation(line: 1033, column: 14, scope: !2980)
!2992 = !DILocation(line: 1031, column: 10, scope: !2981)
!2993 = !DILocation(line: 1034, column: 3, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2980, file: !2, line: 1033, column: 39)
!2995 = !DILocation(line: 1034, column: 9, scope: !2994)
!2996 = !DILocation(line: 1034, column: 16, scope: !2994)
!2997 = !DILocation(line: 1035, column: 3, scope: !2994)
!2998 = !DILocation(line: 1037, column: 12, scope: !2981)
!2999 = !DILocation(line: 1037, column: 17, scope: !2981)
!3000 = !DILocation(line: 1037, column: 10, scope: !2981)
!3001 = distinct !{!3001, !2976, !3002, !1687}
!3002 = !DILocation(line: 1038, column: 2, scope: !2973)
!3003 = !DILocation(line: 1039, column: 5, scope: !2973)
!3004 = !DILocation(line: 1040, column: 26, scope: !2585)
!3005 = !DILocation(line: 1040, column: 5, scope: !2585)
!3006 = !DILocation(line: 1041, column: 10, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1041, column: 9)
!3008 = !DILocation(line: 1041, column: 15, scope: !3007)
!3009 = !{!2527, !1472, i64 72}
!3010 = !DILocation(line: 1041, column: 18, scope: !3007)
!3011 = !DILocation(line: 1041, column: 27, scope: !3007)
!3012 = !DILocation(line: 1041, column: 31, scope: !3007)
!3013 = !DILocation(line: 1041, column: 36, scope: !3007)
!3014 = !DILocation(line: 1041, column: 40, scope: !3007)
!3015 = !DILocation(line: 1041, column: 47, scope: !3007)
!3016 = !DILocation(line: 1041, column: 9, scope: !2585)
!3017 = !DILocation(line: 1042, column: 36, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3007, file: !2, line: 1041, column: 57)
!3019 = !DILocation(line: 1042, column: 55, scope: !3018)
!3020 = !DILocation(line: 1042, column: 60, scope: !3018)
!3021 = !DILocation(line: 1042, column: 64, scope: !3018)
!3022 = !DILocation(line: 1042, column: 9, scope: !3018)
!3023 = !DILocation(line: 1043, column: 23, scope: !3018)
!3024 = !DILocation(line: 1043, column: 2, scope: !3018)
!3025 = !DILocation(line: 1044, column: 5, scope: !3018)
!3026 = !DILocation(line: 1046, column: 32, scope: !2585)
!3027 = !DILocation(line: 1046, column: 51, scope: !2585)
!3028 = !DILocation(line: 1046, column: 56, scope: !2585)
!3029 = !DILocation(line: 1046, column: 5, scope: !2585)
!3030 = !DILocation(line: 1047, column: 9, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1047, column: 9)
!3032 = !DILocation(line: 1047, column: 14, scope: !3031)
!3033 = !{!2527, !1472, i64 96}
!3034 = !DILocation(line: 1047, column: 9, scope: !2585)
!3035 = !DILocation(line: 1048, column: 33, scope: !3031)
!3036 = !DILocation(line: 1048, column: 39, scope: !3031)
!3037 = !DILocation(line: 1048, column: 44, scope: !3031)
!3038 = !DILocation(line: 1048, column: 9, scope: !3031)
!3039 = !DILocation(line: 1049, column: 9, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1049, column: 9)
!3041 = !DILocation(line: 1049, column: 14, scope: !3040)
!3042 = !{!2527, !1472, i64 88}
!3043 = !DILocation(line: 1049, column: 25, scope: !3040)
!3044 = !DILocation(line: 1049, column: 9, scope: !2585)
!3045 = !DILocation(line: 1050, column: 31, scope: !3040)
!3046 = !DILocation(line: 1050, column: 37, scope: !3040)
!3047 = !DILocation(line: 1050, column: 42, scope: !3040)
!3048 = !DILocation(line: 1050, column: 9, scope: !3040)
!3049 = !DILocation(line: 1052, column: 11, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1052, column: 9)
!3051 = !DILocation(line: 1052, column: 16, scope: !3050)
!3052 = !DILocation(line: 1052, column: 21, scope: !3050)
!3053 = !DILocation(line: 1052, column: 42, scope: !3050)
!3054 = !DILocation(line: 1052, column: 46, scope: !3050)
!3055 = !DILocation(line: 1052, column: 51, scope: !3050)
!3056 = !DILocation(line: 1052, column: 59, scope: !3050)
!3057 = !DILocation(line: 1052, column: 69, scope: !3050)
!3058 = !DILocation(line: 1053, column: 3, scope: !3050)
!3059 = !DILocation(line: 1053, column: 8, scope: !3050)
!3060 = !DILocation(line: 1053, column: 17, scope: !3050)
!3061 = !DILocation(line: 1053, column: 26, scope: !3050)
!3062 = !DILocation(line: 1053, column: 31, scope: !3050)
!3063 = !DILocation(line: 1053, column: 37, scope: !3050)
!3064 = !DILocation(line: 1053, column: 45, scope: !3050)
!3065 = !DILocation(line: 1053, column: 66, scope: !3050)
!3066 = !DILocation(line: 1052, column: 9, scope: !2585)
!3067 = !DILocation(line: 1054, column: 13, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !2, line: 1054, column: 13)
!3069 = distinct !DILexicalBlock(scope: !3050, file: !2, line: 1053, column: 73)
!3070 = !DILocation(line: 1054, column: 19, scope: !3068)
!3071 = !DILocation(line: 1054, column: 26, scope: !3068)
!3072 = !DILocation(line: 1054, column: 13, scope: !3069)
!3073 = !DILocation(line: 1055, column: 42, scope: !3068)
!3074 = !DILocation(line: 1055, column: 13, scope: !3068)
!3075 = !DILocation(line: 1056, column: 30, scope: !3069)
!3076 = !DILocation(line: 1056, column: 9, scope: !3069)
!3077 = !DILocation(line: 1057, column: 17, scope: !3069)
!3078 = !DILocation(line: 1057, column: 2, scope: !3069)
!3079 = !DILocation(line: 1057, column: 8, scope: !3069)
!3080 = !DILocation(line: 1057, column: 15, scope: !3069)
!3081 = !DILocation(line: 1058, column: 2, scope: !3069)
!3082 = !DILocation(line: 1060, column: 9, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1060, column: 9)
!3084 = !DILocation(line: 1060, column: 15, scope: !3083)
!3085 = !DILocation(line: 1060, column: 22, scope: !3083)
!3086 = !DILocation(line: 1060, column: 9, scope: !2585)
!3087 = !DILocation(line: 1061, column: 38, scope: !3083)
!3088 = !DILocation(line: 1061, column: 9, scope: !3083)
!3089 = !DILocation(line: 1062, column: 26, scope: !2585)
!3090 = !DILocation(line: 1062, column: 5, scope: !2585)
!3091 = !DILocation(line: 1063, column: 10, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1063, column: 9)
!3093 = !DILocation(line: 1063, column: 15, scope: !3092)
!3094 = !DILocation(line: 1063, column: 20, scope: !3092)
!3095 = !DILocation(line: 1063, column: 41, scope: !3092)
!3096 = !DILocation(line: 1063, column: 45, scope: !3092)
!3097 = !DILocation(line: 1063, column: 50, scope: !3092)
!3098 = !DILocation(line: 1063, column: 58, scope: !3092)
!3099 = !DILocation(line: 1063, column: 9, scope: !2585)
!3100 = !DILocation(line: 1064, column: 29, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3092, file: !2, line: 1063, column: 68)
!3102 = !DILocation(line: 1064, column: 34, scope: !3101)
!3103 = !DILocation(line: 1064, column: 39, scope: !3101)
!3104 = !DILocation(line: 1064, column: 48, scope: !3101)
!3105 = !DILocation(line: 1064, column: 54, scope: !3101)
!3106 = !DILocation(line: 1064, column: 2, scope: !3101)
!3107 = !DILocation(line: 1065, column: 5, scope: !3101)
!3108 = !DILocation(line: 1066, column: 9, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1066, column: 9)
!3110 = !DILocation(line: 1066, column: 14, scope: !3109)
!3111 = !DILocation(line: 1066, column: 23, scope: !3109)
!3112 = !DILocation(line: 1066, column: 9, scope: !2585)
!3113 = !DILocation(line: 1067, column: 6, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3115, file: !2, line: 1067, column: 6)
!3115 = distinct !DILexicalBlock(scope: !3109, file: !2, line: 1066, column: 32)
!3116 = !DILocation(line: 1067, column: 12, scope: !3114)
!3117 = !DILocation(line: 1067, column: 19, scope: !3114)
!3118 = !DILocation(line: 1067, column: 6, scope: !3115)
!3119 = !DILocation(line: 1067, column: 46, scope: !3114)
!3120 = !DILocation(line: 1067, column: 25, scope: !3114)
!3121 = !DILocation(line: 1068, column: 6, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3115, file: !2, line: 1068, column: 6)
!3123 = !DILocation(line: 1068, column: 12, scope: !3122)
!3124 = !DILocation(line: 1068, column: 18, scope: !3122)
!3125 = !DILocation(line: 1068, column: 6, scope: !3115)
!3126 = !DILocation(line: 1068, column: 24, scope: !3122)
!3127 = !DILocation(line: 1068, column: 30, scope: !3122)
!3128 = !DILocation(line: 1068, column: 35, scope: !3122)
!3129 = !DILocation(line: 1069, column: 24, scope: !3115)
!3130 = !DILocation(line: 1069, column: 30, scope: !3115)
!3131 = !DILocation(line: 1069, column: 35, scope: !3115)
!3132 = !DILocation(line: 1069, column: 2, scope: !3115)
!3133 = !DILocation(line: 1070, column: 6, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3115, file: !2, line: 1070, column: 6)
!3135 = !DILocation(line: 1070, column: 12, scope: !3134)
!3136 = !DILocation(line: 1070, column: 18, scope: !3134)
!3137 = !DILocation(line: 1070, column: 6, scope: !3115)
!3138 = !DILocation(line: 1070, column: 23, scope: !3134)
!3139 = !DILocation(line: 1070, column: 29, scope: !3134)
!3140 = !DILocation(line: 1070, column: 34, scope: !3134)
!3141 = !DILocation(line: 1071, column: 7, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3115, file: !2, line: 1071, column: 6)
!3143 = !DILocation(line: 1071, column: 6, scope: !3142)
!3144 = !DILocation(line: 1071, column: 28, scope: !3142)
!3145 = !DILocation(line: 1071, column: 32, scope: !3142)
!3146 = !DILocation(line: 1071, column: 38, scope: !3142)
!3147 = !DILocation(line: 1071, column: 45, scope: !3142)
!3148 = !DILocation(line: 1071, column: 6, scope: !3115)
!3149 = !DILocation(line: 1072, column: 27, scope: !3142)
!3150 = !DILocation(line: 1072, column: 32, scope: !3142)
!3151 = !DILocation(line: 1072, column: 38, scope: !3142)
!3152 = !{!1733, !1734, i64 128}
!3153 = !DILocation(line: 1073, column: 28, scope: !3142)
!3154 = !DILocation(line: 1073, column: 34, scope: !3142)
!3155 = !DILocation(line: 1073, column: 42, scope: !3142)
!3156 = !DILocation(line: 1073, column: 48, scope: !3142)
!3157 = !{!1733, !1734, i64 124}
!3158 = !DILocation(line: 1073, column: 40, scope: !3142)
!3159 = !DILocation(line: 1074, column: 7, scope: !3142)
!3160 = !DILocation(line: 1074, column: 13, scope: !3142)
!3161 = !DILocation(line: 1074, column: 25, scope: !3142)
!3162 = !DILocation(line: 1074, column: 31, scope: !3142)
!3163 = !DILocation(line: 1072, column: 50, scope: !3142)
!3164 = !DILocation(line: 1075, column: 6, scope: !3142)
!3165 = !DILocation(line: 1075, column: 12, scope: !3142)
!3166 = !DILocation(line: 1072, column: 6, scope: !3142)
!3167 = !DILocation(line: 1076, column: 5, scope: !3115)
!3168 = !DILocation(line: 1077, column: 26, scope: !2585)
!3169 = !DILocation(line: 1077, column: 5, scope: !2585)
!3170 = !DILocation(line: 1078, column: 10, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1078, column: 9)
!3172 = !DILocation(line: 1078, column: 15, scope: !3171)
!3173 = !DILocation(line: 1078, column: 18, scope: !3171)
!3174 = !DILocation(line: 1078, column: 27, scope: !3171)
!3175 = !DILocation(line: 1078, column: 31, scope: !3171)
!3176 = !DILocation(line: 1078, column: 36, scope: !3171)
!3177 = !DILocation(line: 1078, column: 40, scope: !3171)
!3178 = !DILocation(line: 1078, column: 47, scope: !3171)
!3179 = !DILocation(line: 1078, column: 9, scope: !2585)
!3180 = !DILocation(line: 1079, column: 36, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3171, file: !2, line: 1078, column: 57)
!3182 = !DILocation(line: 1079, column: 55, scope: !3181)
!3183 = !DILocation(line: 1079, column: 60, scope: !3181)
!3184 = !DILocation(line: 1079, column: 64, scope: !3181)
!3185 = !DILocation(line: 1079, column: 9, scope: !3181)
!3186 = !DILocation(line: 1080, column: 23, scope: !3181)
!3187 = !DILocation(line: 1080, column: 2, scope: !3181)
!3188 = !DILocation(line: 1081, column: 5, scope: !3181)
!3189 = !DILocation(line: 1083, column: 32, scope: !2585)
!3190 = !DILocation(line: 1083, column: 51, scope: !2585)
!3191 = !DILocation(line: 1083, column: 56, scope: !2585)
!3192 = !DILocation(line: 1083, column: 5, scope: !2585)
!3193 = !DILocation(line: 1084, column: 9, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !2585, file: !2, line: 1084, column: 9)
!3195 = !DILocation(line: 1084, column: 15, scope: !3194)
!3196 = !DILocation(line: 1084, column: 22, scope: !3194)
!3197 = !DILocation(line: 1084, column: 9, scope: !2585)
!3198 = !DILocation(line: 1085, column: 38, scope: !3194)
!3199 = !DILocation(line: 1085, column: 9, scope: !3194)
!3200 = !DILocation(line: 1086, column: 26, scope: !2585)
!3201 = !DILocation(line: 1086, column: 5, scope: !2585)
!3202 = !DILocation(line: 1087, column: 20, scope: !2585)
!3203 = !DILocation(line: 1087, column: 5, scope: !2585)
!3204 = !DILocation(line: 1087, column: 11, scope: !2585)
!3205 = !DILocation(line: 1087, column: 18, scope: !2585)
!3206 = !DILocation(line: 1088, column: 1, scope: !2585)
!3207 = distinct !DISubprogram(name: "xmlSaveFlush__internal_alias", scope: !2, file: !2, line: 1964, type: !3208, scopeLine: 1965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3210)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!1104, !1324}
!3210 = !{!3211}
!3211 = !DILocalVariable(name: "ctxt", arg: 1, scope: !3207, file: !2, line: 1964, type: !1324)
!3212 = !DILocation(line: 1964, column: 29, scope: !3207)
!3213 = !DILocation(line: 1966, column: 9, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3207, file: !2, line: 1966, column: 9)
!3215 = !DILocation(line: 1966, column: 14, scope: !3214)
!3216 = !DILocation(line: 1966, column: 9, scope: !3207)
!3217 = !DILocation(line: 1966, column: 23, scope: !3214)
!3218 = !DILocation(line: 1967, column: 9, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3207, file: !2, line: 1967, column: 9)
!3220 = !DILocation(line: 1967, column: 15, scope: !3219)
!3221 = !DILocation(line: 1967, column: 19, scope: !3219)
!3222 = !DILocation(line: 1967, column: 9, scope: !3207)
!3223 = !DILocation(line: 1967, column: 28, scope: !3219)
!3224 = !DILocation(line: 1968, column: 33, scope: !3207)
!3225 = !DILocation(line: 1968, column: 39, scope: !3207)
!3226 = !DILocation(line: 1968, column: 12, scope: !3207)
!3227 = !DILocation(line: 1968, column: 5, scope: !3207)
!3228 = !DILocation(line: 1969, column: 1, scope: !3207)
!3229 = !DISubprogram(name: "xmlOutputBufferFlush__internal_alias", scope: !1530, file: !1530, line: 6864, type: !3230, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{!1104, !1273}
!3232 = distinct !DISubprogram(name: "xmlSaveClose__internal_alias", scope: !2, file: !2, line: 1981, type: !3208, scopeLine: 1982, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3233)
!3233 = !{!3234, !3235}
!3234 = !DILocalVariable(name: "ctxt", arg: 1, scope: !3232, file: !2, line: 1981, type: !1324)
!3235 = !DILocalVariable(name: "ret", scope: !3232, file: !2, line: 1983, type: !1104)
!3236 = !DILocation(line: 1981, column: 29, scope: !3232)
!3237 = !DILocation(line: 1983, column: 5, scope: !3232)
!3238 = !DILocation(line: 1983, column: 9, scope: !3232)
!3239 = !DILocation(line: 1985, column: 9, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3232, file: !2, line: 1985, column: 9)
!3241 = !DILocation(line: 1985, column: 14, scope: !3240)
!3242 = !DILocation(line: 1985, column: 9, scope: !3232)
!3243 = !DILocation(line: 1985, column: 23, scope: !3240)
!3244 = !DILocation(line: 1986, column: 24, scope: !3232)
!3245 = !DILocation(line: 1986, column: 11, scope: !3232)
!3246 = !DILocation(line: 1986, column: 9, scope: !3232)
!3247 = !DILocation(line: 1987, column: 21, scope: !3232)
!3248 = !DILocation(line: 1987, column: 5, scope: !3232)
!3249 = !DILocation(line: 1988, column: 12, scope: !3232)
!3250 = !DILocation(line: 1988, column: 5, scope: !3232)
!3251 = !DILocation(line: 1989, column: 1, scope: !3232)
!3252 = distinct !DISubprogram(name: "xmlSaveSetEscape__internal_alias", scope: !2, file: !2, line: 2001, type: !3253, scopeLine: 2002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3255)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!1104, !1324, !1308}
!3255 = !{!3256, !3257}
!3256 = !DILocalVariable(name: "ctxt", arg: 1, scope: !3252, file: !2, line: 2001, type: !1324)
!3257 = !DILocalVariable(name: "escape", arg: 2, scope: !3252, file: !2, line: 2001, type: !1308)
!3258 = !DILocation(line: 2001, column: 33, scope: !3252)
!3259 = !DILocation(line: 2001, column: 65, scope: !3252)
!3260 = !DILocation(line: 2003, column: 9, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3252, file: !2, line: 2003, column: 9)
!3262 = !DILocation(line: 2003, column: 14, scope: !3261)
!3263 = !DILocation(line: 2003, column: 9, scope: !3252)
!3264 = !DILocation(line: 2003, column: 23, scope: !3261)
!3265 = !DILocation(line: 2004, column: 20, scope: !3252)
!3266 = !DILocation(line: 2004, column: 5, scope: !3252)
!3267 = !DILocation(line: 2004, column: 11, scope: !3252)
!3268 = !DILocation(line: 2004, column: 18, scope: !3252)
!3269 = !DILocation(line: 2005, column: 5, scope: !3252)
!3270 = !DILocation(line: 2006, column: 1, scope: !3252)
!3271 = distinct !DISubprogram(name: "xmlSaveSetAttrEscape__internal_alias", scope: !2, file: !2, line: 2018, type: !3253, scopeLine: 2019, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3272)
!3272 = !{!3273, !3274}
!3273 = !DILocalVariable(name: "ctxt", arg: 1, scope: !3271, file: !2, line: 2018, type: !1324)
!3274 = !DILocalVariable(name: "escape", arg: 2, scope: !3271, file: !2, line: 2018, type: !1308)
!3275 = !DILocation(line: 2018, column: 37, scope: !3271)
!3276 = !DILocation(line: 2018, column: 69, scope: !3271)
!3277 = !DILocation(line: 2020, column: 9, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3271, file: !2, line: 2020, column: 9)
!3279 = !DILocation(line: 2020, column: 14, scope: !3278)
!3280 = !DILocation(line: 2020, column: 9, scope: !3271)
!3281 = !DILocation(line: 2020, column: 23, scope: !3278)
!3282 = !DILocation(line: 2021, column: 24, scope: !3271)
!3283 = !DILocation(line: 2021, column: 5, scope: !3271)
!3284 = !DILocation(line: 2021, column: 11, scope: !3271)
!3285 = !DILocation(line: 2021, column: 22, scope: !3271)
!3286 = !DILocation(line: 2022, column: 5, scope: !3271)
!3287 = !DILocation(line: 2023, column: 1, scope: !3271)
!3288 = distinct !DISubprogram(name: "xmlBufAttrSerializeTxtContent", scope: !2, file: !2, line: 2041, type: !3289, scopeLine: 2043, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3291)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{null, !1314, !1345, !1448, !1178}
!3291 = !{!3292, !3293, !3294, !3295, !3296, !3297, !3298, !3310, !3311}
!3292 = !DILocalVariable(name: "buf", arg: 1, scope: !3288, file: !2, line: 2041, type: !1314)
!3293 = !DILocalVariable(name: "doc", arg: 2, scope: !3288, file: !2, line: 2041, type: !1345)
!3294 = !DILocalVariable(name: "attr", arg: 3, scope: !3288, file: !2, line: 2042, type: !1448)
!3295 = !DILocalVariable(name: "string", arg: 4, scope: !3288, file: !2, line: 2042, type: !1178)
!3296 = !DILocalVariable(name: "base", scope: !3288, file: !2, line: 2044, type: !1165)
!3297 = !DILocalVariable(name: "cur", scope: !3288, file: !2, line: 2044, type: !1165)
!3298 = !DILocalVariable(name: "tmp", scope: !3299, file: !2, line: 2097, type: !3309)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !2, line: 2093, column: 57)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !2, line: 2092, column: 20)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !2, line: 2086, column: 20)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !2, line: 2080, column: 20)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !2, line: 2074, column: 20)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !2, line: 2068, column: 20)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !2, line: 2062, column: 20)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !2, line: 2056, column: 20)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !2, line: 2050, column: 13)
!3308 = distinct !DILexicalBlock(scope: !3288, file: !2, line: 2049, column: 23)
!3309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1168, size: 96, elements: !241)
!3310 = !DILocalVariable(name: "val", scope: !3299, file: !2, line: 2098, type: !1104)
!3311 = !DILocalVariable(name: "l", scope: !3299, file: !2, line: 2098, type: !1104)
!3312 = !DILocation(line: 2041, column: 41, scope: !3288)
!3313 = !DILocation(line: 2041, column: 56, scope: !3288)
!3314 = !DILocation(line: 2042, column: 42, scope: !3288)
!3315 = !DILocation(line: 2042, column: 64, scope: !3288)
!3316 = !DILocation(line: 2044, column: 5, scope: !3288)
!3317 = !DILocation(line: 2044, column: 14, scope: !3288)
!3318 = !DILocation(line: 2044, column: 21, scope: !3288)
!3319 = !DILocation(line: 2046, column: 9, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3288, file: !2, line: 2046, column: 9)
!3321 = !DILocation(line: 2046, column: 16, scope: !3320)
!3322 = !DILocation(line: 2046, column: 9, scope: !3288)
!3323 = !DILocation(line: 2047, column: 9, scope: !3320)
!3324 = !DILocation(line: 2048, column: 30, scope: !3288)
!3325 = !DILocation(line: 2048, column: 16, scope: !3288)
!3326 = !DILocation(line: 2048, column: 10, scope: !3288)
!3327 = !DILocation(line: 2049, column: 5, scope: !3288)
!3328 = !DILocation(line: 2049, column: 13, scope: !3288)
!3329 = !DILocation(line: 2049, column: 12, scope: !3288)
!3330 = !DILocation(line: 2049, column: 17, scope: !3288)
!3331 = !DILocation(line: 2050, column: 14, scope: !3307)
!3332 = !DILocation(line: 2050, column: 13, scope: !3307)
!3333 = !DILocation(line: 2050, column: 18, scope: !3307)
!3334 = !DILocation(line: 2050, column: 13, scope: !3308)
!3335 = !DILocation(line: 2051, column: 17, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !2, line: 2051, column: 17)
!3337 = distinct !DILexicalBlock(scope: !3307, file: !2, line: 2050, column: 27)
!3338 = !DILocation(line: 2051, column: 25, scope: !3336)
!3339 = !DILocation(line: 2051, column: 22, scope: !3336)
!3340 = !DILocation(line: 2051, column: 17, scope: !3337)
!3341 = !DILocation(line: 2052, column: 27, scope: !3336)
!3342 = !DILocation(line: 2052, column: 32, scope: !3336)
!3343 = !DILocation(line: 2052, column: 38, scope: !3336)
!3344 = !DILocation(line: 2052, column: 44, scope: !3336)
!3345 = !DILocation(line: 2052, column: 42, scope: !3336)
!3346 = !DILocation(line: 2052, column: 17, scope: !3336)
!3347 = !DILocation(line: 2053, column: 23, scope: !3337)
!3348 = !DILocation(line: 2053, column: 13, scope: !3337)
!3349 = !DILocation(line: 2054, column: 16, scope: !3337)
!3350 = !DILocation(line: 2055, column: 20, scope: !3337)
!3351 = !DILocation(line: 2055, column: 18, scope: !3337)
!3352 = !DILocation(line: 2056, column: 9, scope: !3337)
!3353 = !DILocation(line: 2056, column: 21, scope: !3306)
!3354 = !DILocation(line: 2056, column: 20, scope: !3306)
!3355 = !DILocation(line: 2056, column: 25, scope: !3306)
!3356 = !DILocation(line: 2056, column: 20, scope: !3307)
!3357 = !DILocation(line: 2057, column: 17, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !2, line: 2057, column: 17)
!3359 = distinct !DILexicalBlock(scope: !3306, file: !2, line: 2056, column: 34)
!3360 = !DILocation(line: 2057, column: 25, scope: !3358)
!3361 = !DILocation(line: 2057, column: 22, scope: !3358)
!3362 = !DILocation(line: 2057, column: 17, scope: !3359)
!3363 = !DILocation(line: 2058, column: 27, scope: !3358)
!3364 = !DILocation(line: 2058, column: 32, scope: !3358)
!3365 = !DILocation(line: 2058, column: 38, scope: !3358)
!3366 = !DILocation(line: 2058, column: 44, scope: !3358)
!3367 = !DILocation(line: 2058, column: 42, scope: !3358)
!3368 = !DILocation(line: 2058, column: 17, scope: !3358)
!3369 = !DILocation(line: 2059, column: 23, scope: !3359)
!3370 = !DILocation(line: 2059, column: 13, scope: !3359)
!3371 = !DILocation(line: 2060, column: 16, scope: !3359)
!3372 = !DILocation(line: 2061, column: 20, scope: !3359)
!3373 = !DILocation(line: 2061, column: 18, scope: !3359)
!3374 = !DILocation(line: 2062, column: 9, scope: !3359)
!3375 = !DILocation(line: 2062, column: 21, scope: !3305)
!3376 = !DILocation(line: 2062, column: 20, scope: !3305)
!3377 = !DILocation(line: 2062, column: 25, scope: !3305)
!3378 = !DILocation(line: 2062, column: 20, scope: !3306)
!3379 = !DILocation(line: 2063, column: 17, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !2, line: 2063, column: 17)
!3381 = distinct !DILexicalBlock(scope: !3305, file: !2, line: 2062, column: 34)
!3382 = !DILocation(line: 2063, column: 25, scope: !3380)
!3383 = !DILocation(line: 2063, column: 22, scope: !3380)
!3384 = !DILocation(line: 2063, column: 17, scope: !3381)
!3385 = !DILocation(line: 2064, column: 27, scope: !3380)
!3386 = !DILocation(line: 2064, column: 32, scope: !3380)
!3387 = !DILocation(line: 2064, column: 38, scope: !3380)
!3388 = !DILocation(line: 2064, column: 44, scope: !3380)
!3389 = !DILocation(line: 2064, column: 42, scope: !3380)
!3390 = !DILocation(line: 2064, column: 17, scope: !3380)
!3391 = !DILocation(line: 2065, column: 23, scope: !3381)
!3392 = !DILocation(line: 2065, column: 13, scope: !3381)
!3393 = !DILocation(line: 2066, column: 16, scope: !3381)
!3394 = !DILocation(line: 2067, column: 20, scope: !3381)
!3395 = !DILocation(line: 2067, column: 18, scope: !3381)
!3396 = !DILocation(line: 2068, column: 9, scope: !3381)
!3397 = !DILocation(line: 2068, column: 21, scope: !3304)
!3398 = !DILocation(line: 2068, column: 20, scope: !3304)
!3399 = !DILocation(line: 2068, column: 25, scope: !3304)
!3400 = !DILocation(line: 2068, column: 20, scope: !3305)
!3401 = !DILocation(line: 2069, column: 17, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !2, line: 2069, column: 17)
!3403 = distinct !DILexicalBlock(scope: !3304, file: !2, line: 2068, column: 33)
!3404 = !DILocation(line: 2069, column: 25, scope: !3402)
!3405 = !DILocation(line: 2069, column: 22, scope: !3402)
!3406 = !DILocation(line: 2069, column: 17, scope: !3403)
!3407 = !DILocation(line: 2070, column: 27, scope: !3402)
!3408 = !DILocation(line: 2070, column: 32, scope: !3402)
!3409 = !DILocation(line: 2070, column: 38, scope: !3402)
!3410 = !DILocation(line: 2070, column: 44, scope: !3402)
!3411 = !DILocation(line: 2070, column: 42, scope: !3402)
!3412 = !DILocation(line: 2070, column: 17, scope: !3402)
!3413 = !DILocation(line: 2071, column: 23, scope: !3403)
!3414 = !DILocation(line: 2071, column: 13, scope: !3403)
!3415 = !DILocation(line: 2072, column: 16, scope: !3403)
!3416 = !DILocation(line: 2073, column: 20, scope: !3403)
!3417 = !DILocation(line: 2073, column: 18, scope: !3403)
!3418 = !DILocation(line: 2074, column: 9, scope: !3403)
!3419 = !DILocation(line: 2074, column: 21, scope: !3303)
!3420 = !DILocation(line: 2074, column: 20, scope: !3303)
!3421 = !DILocation(line: 2074, column: 25, scope: !3303)
!3422 = !DILocation(line: 2074, column: 20, scope: !3304)
!3423 = !DILocation(line: 2075, column: 17, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !2, line: 2075, column: 17)
!3425 = distinct !DILexicalBlock(scope: !3303, file: !2, line: 2074, column: 33)
!3426 = !DILocation(line: 2075, column: 25, scope: !3424)
!3427 = !DILocation(line: 2075, column: 22, scope: !3424)
!3428 = !DILocation(line: 2075, column: 17, scope: !3425)
!3429 = !DILocation(line: 2076, column: 27, scope: !3424)
!3430 = !DILocation(line: 2076, column: 32, scope: !3424)
!3431 = !DILocation(line: 2076, column: 38, scope: !3424)
!3432 = !DILocation(line: 2076, column: 44, scope: !3424)
!3433 = !DILocation(line: 2076, column: 42, scope: !3424)
!3434 = !DILocation(line: 2076, column: 17, scope: !3424)
!3435 = !DILocation(line: 2077, column: 23, scope: !3425)
!3436 = !DILocation(line: 2077, column: 13, scope: !3425)
!3437 = !DILocation(line: 2078, column: 16, scope: !3425)
!3438 = !DILocation(line: 2079, column: 20, scope: !3425)
!3439 = !DILocation(line: 2079, column: 18, scope: !3425)
!3440 = !DILocation(line: 2080, column: 9, scope: !3425)
!3441 = !DILocation(line: 2080, column: 21, scope: !3302)
!3442 = !DILocation(line: 2080, column: 20, scope: !3302)
!3443 = !DILocation(line: 2080, column: 25, scope: !3302)
!3444 = !DILocation(line: 2080, column: 20, scope: !3303)
!3445 = !DILocation(line: 2081, column: 17, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !2, line: 2081, column: 17)
!3447 = distinct !DILexicalBlock(scope: !3302, file: !2, line: 2080, column: 33)
!3448 = !DILocation(line: 2081, column: 25, scope: !3446)
!3449 = !DILocation(line: 2081, column: 22, scope: !3446)
!3450 = !DILocation(line: 2081, column: 17, scope: !3447)
!3451 = !DILocation(line: 2082, column: 27, scope: !3446)
!3452 = !DILocation(line: 2082, column: 32, scope: !3446)
!3453 = !DILocation(line: 2082, column: 38, scope: !3446)
!3454 = !DILocation(line: 2082, column: 44, scope: !3446)
!3455 = !DILocation(line: 2082, column: 42, scope: !3446)
!3456 = !DILocation(line: 2082, column: 17, scope: !3446)
!3457 = !DILocation(line: 2083, column: 23, scope: !3447)
!3458 = !DILocation(line: 2083, column: 13, scope: !3447)
!3459 = !DILocation(line: 2084, column: 16, scope: !3447)
!3460 = !DILocation(line: 2085, column: 20, scope: !3447)
!3461 = !DILocation(line: 2085, column: 18, scope: !3447)
!3462 = !DILocation(line: 2086, column: 9, scope: !3447)
!3463 = !DILocation(line: 2086, column: 21, scope: !3301)
!3464 = !DILocation(line: 2086, column: 20, scope: !3301)
!3465 = !DILocation(line: 2086, column: 25, scope: !3301)
!3466 = !DILocation(line: 2086, column: 20, scope: !3302)
!3467 = !DILocation(line: 2087, column: 17, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !2, line: 2087, column: 17)
!3469 = distinct !DILexicalBlock(scope: !3301, file: !2, line: 2086, column: 33)
!3470 = !DILocation(line: 2087, column: 25, scope: !3468)
!3471 = !DILocation(line: 2087, column: 22, scope: !3468)
!3472 = !DILocation(line: 2087, column: 17, scope: !3469)
!3473 = !DILocation(line: 2088, column: 27, scope: !3468)
!3474 = !DILocation(line: 2088, column: 32, scope: !3468)
!3475 = !DILocation(line: 2088, column: 38, scope: !3468)
!3476 = !DILocation(line: 2088, column: 44, scope: !3468)
!3477 = !DILocation(line: 2088, column: 42, scope: !3468)
!3478 = !DILocation(line: 2088, column: 17, scope: !3468)
!3479 = !DILocation(line: 2089, column: 23, scope: !3469)
!3480 = !DILocation(line: 2089, column: 13, scope: !3469)
!3481 = !DILocation(line: 2090, column: 16, scope: !3469)
!3482 = !DILocation(line: 2091, column: 20, scope: !3469)
!3483 = !DILocation(line: 2091, column: 18, scope: !3469)
!3484 = !DILocation(line: 2092, column: 9, scope: !3469)
!3485 = !DILocation(line: 2092, column: 22, scope: !3300)
!3486 = !DILocation(line: 2092, column: 21, scope: !3300)
!3487 = !DILocation(line: 2092, column: 26, scope: !3300)
!3488 = !DILocation(line: 2092, column: 35, scope: !3300)
!3489 = !DILocation(line: 2092, column: 39, scope: !3300)
!3490 = !DILocation(line: 2092, column: 46, scope: !3300)
!3491 = !DILocation(line: 2092, column: 52, scope: !3300)
!3492 = !DILocation(line: 2093, column: 15, scope: !3300)
!3493 = !DILocation(line: 2093, column: 19, scope: !3300)
!3494 = !DILocation(line: 2093, column: 28, scope: !3300)
!3495 = !DILocation(line: 2093, column: 32, scope: !3300)
!3496 = !DILocation(line: 2093, column: 37, scope: !3300)
!3497 = !DILocation(line: 2093, column: 46, scope: !3300)
!3498 = !DILocation(line: 2092, column: 20, scope: !3301)
!3499 = !DILocation(line: 2097, column: 13, scope: !3299)
!3500 = !DILocation(line: 2097, column: 27, scope: !3299)
!3501 = !DILocation(line: 2098, column: 13, scope: !3299)
!3502 = !DILocation(line: 2098, column: 17, scope: !3299)
!3503 = !DILocation(line: 2098, column: 26, scope: !3299)
!3504 = !DILocation(line: 2100, column: 17, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3299, file: !2, line: 2100, column: 17)
!3506 = !DILocation(line: 2100, column: 25, scope: !3505)
!3507 = !DILocation(line: 2100, column: 22, scope: !3505)
!3508 = !DILocation(line: 2100, column: 17, scope: !3299)
!3509 = !DILocation(line: 2101, column: 27, scope: !3505)
!3510 = !DILocation(line: 2101, column: 32, scope: !3505)
!3511 = !DILocation(line: 2101, column: 38, scope: !3505)
!3512 = !DILocation(line: 2101, column: 44, scope: !3505)
!3513 = !DILocation(line: 2101, column: 42, scope: !3505)
!3514 = !DILocation(line: 2101, column: 17, scope: !3505)
!3515 = !DILocation(line: 2102, column: 18, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3299, file: !2, line: 2102, column: 17)
!3517 = !DILocation(line: 2102, column: 17, scope: !3516)
!3518 = !DILocation(line: 2102, column: 22, scope: !3516)
!3519 = !DILocation(line: 2102, column: 17, scope: !3299)
!3520 = !DILocation(line: 2103, column: 60, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3516, file: !2, line: 2102, column: 30)
!3522 = !DILocation(line: 2103, column: 17, scope: !3521)
!3523 = !DILocation(line: 2104, column: 26, scope: !3521)
!3524 = !DILocation(line: 2104, column: 32, scope: !3521)
!3525 = !DILocation(line: 2104, column: 31, scope: !3521)
!3526 = !DILocation(line: 2104, column: 3, scope: !3521)
!3527 = !DILocation(line: 2105, column: 27, scope: !3521)
!3528 = !DILocation(line: 2105, column: 44, scope: !3521)
!3529 = !DILocation(line: 2105, column: 17, scope: !3521)
!3530 = !DILocation(line: 2106, column: 20, scope: !3521)
!3531 = !DILocation(line: 2107, column: 24, scope: !3521)
!3532 = !DILocation(line: 2107, column: 22, scope: !3521)
!3533 = !DILocation(line: 2108, column: 17, scope: !3521)
!3534 = distinct !{!3534, !3327, !3535, !1687}
!3535 = !DILocation(line: 2150, column: 5, scope: !3288)
!3536 = !DILocation(line: 2109, column: 25, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3516, file: !2, line: 2109, column: 24)
!3538 = !DILocation(line: 2109, column: 24, scope: !3537)
!3539 = !DILocation(line: 2109, column: 29, scope: !3537)
!3540 = !DILocation(line: 2109, column: 24, scope: !3516)
!3541 = !DILocation(line: 2110, column: 24, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3537, file: !2, line: 2109, column: 37)
!3543 = !DILocation(line: 2110, column: 23, scope: !3542)
!3544 = !DILocation(line: 2110, column: 32, scope: !3542)
!3545 = !DILocation(line: 2110, column: 21, scope: !3542)
!3546 = !DILocation(line: 2111, column: 21, scope: !3542)
!3547 = !DILocation(line: 2112, column: 25, scope: !3542)
!3548 = !DILocation(line: 2112, column: 24, scope: !3542)
!3549 = !DILocation(line: 2112, column: 33, scope: !3542)
!3550 = !DILocation(line: 2112, column: 21, scope: !3542)
!3551 = !DILocation(line: 2113, column: 19, scope: !3542)
!3552 = !DILocation(line: 2114, column: 13, scope: !3542)
!3553 = !DILocation(line: 2114, column: 26, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3537, file: !2, line: 2114, column: 24)
!3555 = !DILocation(line: 2114, column: 25, scope: !3554)
!3556 = !DILocation(line: 2114, column: 30, scope: !3554)
!3557 = !DILocation(line: 2114, column: 38, scope: !3554)
!3558 = !DILocation(line: 2114, column: 42, scope: !3554)
!3559 = !DILocation(line: 2114, column: 50, scope: !3554)
!3560 = !DILocation(line: 2114, column: 24, scope: !3537)
!3561 = !DILocation(line: 2115, column: 24, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3554, file: !2, line: 2114, column: 57)
!3563 = !DILocation(line: 2115, column: 23, scope: !3562)
!3564 = !DILocation(line: 2115, column: 32, scope: !3562)
!3565 = !DILocation(line: 2115, column: 21, scope: !3562)
!3566 = !DILocation(line: 2116, column: 21, scope: !3562)
!3567 = !DILocation(line: 2117, column: 25, scope: !3562)
!3568 = !DILocation(line: 2117, column: 24, scope: !3562)
!3569 = !DILocation(line: 2117, column: 33, scope: !3562)
!3570 = !DILocation(line: 2117, column: 21, scope: !3562)
!3571 = !DILocation(line: 2118, column: 21, scope: !3562)
!3572 = !DILocation(line: 2119, column: 25, scope: !3562)
!3573 = !DILocation(line: 2119, column: 24, scope: !3562)
!3574 = !DILocation(line: 2119, column: 33, scope: !3562)
!3575 = !DILocation(line: 2119, column: 21, scope: !3562)
!3576 = !DILocation(line: 2120, column: 19, scope: !3562)
!3577 = !DILocation(line: 2121, column: 13, scope: !3562)
!3578 = !DILocation(line: 2121, column: 26, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3554, file: !2, line: 2121, column: 24)
!3580 = !DILocation(line: 2121, column: 25, scope: !3579)
!3581 = !DILocation(line: 2121, column: 30, scope: !3579)
!3582 = !DILocation(line: 2121, column: 38, scope: !3579)
!3583 = !DILocation(line: 2121, column: 42, scope: !3579)
!3584 = !DILocation(line: 2121, column: 50, scope: !3579)
!3585 = !DILocation(line: 2121, column: 56, scope: !3579)
!3586 = !DILocation(line: 2121, column: 60, scope: !3579)
!3587 = !DILocation(line: 2121, column: 67, scope: !3579)
!3588 = !DILocation(line: 2121, column: 24, scope: !3554)
!3589 = !DILocation(line: 2122, column: 24, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3579, file: !2, line: 2121, column: 74)
!3591 = !DILocation(line: 2122, column: 23, scope: !3590)
!3592 = !DILocation(line: 2122, column: 32, scope: !3590)
!3593 = !DILocation(line: 2122, column: 21, scope: !3590)
!3594 = !DILocation(line: 2123, column: 21, scope: !3590)
!3595 = !DILocation(line: 2124, column: 25, scope: !3590)
!3596 = !DILocation(line: 2124, column: 24, scope: !3590)
!3597 = !DILocation(line: 2124, column: 33, scope: !3590)
!3598 = !DILocation(line: 2124, column: 21, scope: !3590)
!3599 = !DILocation(line: 2125, column: 21, scope: !3590)
!3600 = !DILocation(line: 2126, column: 25, scope: !3590)
!3601 = !DILocation(line: 2126, column: 24, scope: !3590)
!3602 = !DILocation(line: 2126, column: 33, scope: !3590)
!3603 = !DILocation(line: 2126, column: 21, scope: !3590)
!3604 = !DILocation(line: 2127, column: 21, scope: !3590)
!3605 = !DILocation(line: 2128, column: 25, scope: !3590)
!3606 = !DILocation(line: 2128, column: 24, scope: !3590)
!3607 = !DILocation(line: 2128, column: 33, scope: !3590)
!3608 = !DILocation(line: 2128, column: 21, scope: !3590)
!3609 = !DILocation(line: 2129, column: 19, scope: !3590)
!3610 = !DILocation(line: 2130, column: 13, scope: !3590)
!3611 = !DILocation(line: 2131, column: 18, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3299, file: !2, line: 2131, column: 17)
!3613 = !DILocation(line: 2131, column: 20, scope: !3612)
!3614 = !DILocation(line: 2131, column: 26, scope: !3612)
!3615 = !DILocation(line: 2131, column: 31, scope: !3612)
!3616 = !DILocation(line: 2131, column: 17, scope: !3299)
!3617 = !DILocation(line: 2132, column: 64, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3612, file: !2, line: 2131, column: 46)
!3619 = !DILocation(line: 2132, column: 17, scope: !3618)
!3620 = !DILocation(line: 2133, column: 26, scope: !3618)
!3621 = !DILocation(line: 2133, column: 32, scope: !3618)
!3622 = !DILocation(line: 2133, column: 31, scope: !3618)
!3623 = !DILocation(line: 2133, column: 3, scope: !3618)
!3624 = !DILocation(line: 2134, column: 27, scope: !3618)
!3625 = !DILocation(line: 2134, column: 44, scope: !3618)
!3626 = !DILocation(line: 2134, column: 17, scope: !3618)
!3627 = !DILocation(line: 2135, column: 20, scope: !3618)
!3628 = !DILocation(line: 2136, column: 24, scope: !3618)
!3629 = !DILocation(line: 2136, column: 22, scope: !3618)
!3630 = !DILocation(line: 2137, column: 17, scope: !3618)
!3631 = !DILocation(line: 2143, column: 29, scope: !3299)
!3632 = !DILocation(line: 2143, column: 34, scope: !3299)
!3633 = !DILocation(line: 2143, column: 6, scope: !3299)
!3634 = !DILocation(line: 2144, column: 23, scope: !3299)
!3635 = !DILocation(line: 2144, column: 40, scope: !3299)
!3636 = !DILocation(line: 2144, column: 13, scope: !3299)
!3637 = !DILocation(line: 2145, column: 20, scope: !3299)
!3638 = !DILocation(line: 2145, column: 17, scope: !3299)
!3639 = !DILocation(line: 2146, column: 20, scope: !3299)
!3640 = !DILocation(line: 2146, column: 18, scope: !3299)
!3641 = !DILocation(line: 2147, column: 9, scope: !3300)
!3642 = !DILocation(line: 2147, column: 9, scope: !3299)
!3643 = !DILocation(line: 2148, column: 16, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3300, file: !2, line: 2147, column: 16)
!3645 = !DILocation(line: 2151, column: 9, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3288, file: !2, line: 2151, column: 9)
!3647 = !DILocation(line: 2151, column: 17, scope: !3646)
!3648 = !DILocation(line: 2151, column: 14, scope: !3646)
!3649 = !DILocation(line: 2151, column: 9, scope: !3288)
!3650 = !DILocation(line: 2152, column: 19, scope: !3646)
!3651 = !DILocation(line: 2152, column: 24, scope: !3646)
!3652 = !DILocation(line: 2152, column: 30, scope: !3646)
!3653 = !DILocation(line: 2152, column: 36, scope: !3646)
!3654 = !DILocation(line: 2152, column: 34, scope: !3646)
!3655 = !DILocation(line: 2152, column: 9, scope: !3646)
!3656 = !DILocation(line: 2153, column: 1, scope: !3288)
!3657 = !DISubprogram(name: "xmlBufAdd", scope: !1575, file: !1575, line: 38, type: !3658, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3658 = !DISubroutineType(types: !3659)
!3659 = !{!1104, !1314, !1178, !1104}
!3660 = distinct !DISubprogram(name: "xmlSaveErr", scope: !2, file: !2, line: 122, type: !3661, scopeLine: 123, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3663)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{null, !1104, !1169, !1285}
!3663 = !{!3664, !3665, !3666, !3667}
!3664 = !DILocalVariable(name: "code", arg: 1, scope: !3660, file: !2, line: 122, type: !1104)
!3665 = !DILocalVariable(name: "node", arg: 2, scope: !3660, file: !2, line: 122, type: !1169)
!3666 = !DILocalVariable(name: "extra", arg: 3, scope: !3660, file: !2, line: 122, type: !1285)
!3667 = !DILocalVariable(name: "msg", scope: !3660, file: !2, line: 124, type: !1285)
!3668 = !DILocation(line: 122, column: 16, scope: !3660)
!3669 = !DILocation(line: 122, column: 33, scope: !3660)
!3670 = !DILocation(line: 122, column: 51, scope: !3660)
!3671 = !DILocation(line: 124, column: 5, scope: !3660)
!3672 = !DILocation(line: 124, column: 17, scope: !3660)
!3673 = !DILocation(line: 126, column: 12, scope: !3660)
!3674 = !DILocation(line: 126, column: 5, scope: !3660)
!3675 = !DILocation(line: 128, column: 10, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3660, file: !2, line: 126, column: 18)
!3677 = !DILocation(line: 129, column: 6, scope: !3676)
!3678 = !DILocation(line: 131, column: 10, scope: !3676)
!3679 = !DILocation(line: 132, column: 6, scope: !3676)
!3680 = !DILocation(line: 134, column: 10, scope: !3676)
!3681 = !DILocation(line: 135, column: 6, scope: !3676)
!3682 = !DILocation(line: 137, column: 10, scope: !3676)
!3683 = !DILocation(line: 138, column: 6, scope: !3676)
!3684 = !DILocation(line: 140, column: 10, scope: !3676)
!3685 = !DILocation(line: 141, column: 5, scope: !3676)
!3686 = !DILocation(line: 142, column: 39, scope: !3660)
!3687 = !DILocation(line: 142, column: 45, scope: !3660)
!3688 = !DILocation(line: 142, column: 51, scope: !3660)
!3689 = !DILocation(line: 142, column: 56, scope: !3660)
!3690 = !DILocation(line: 142, column: 5, scope: !3660)
!3691 = !DILocation(line: 143, column: 1, scope: !3660)
!3692 = distinct !DISubprogram(name: "xmlSerializeHexCharRef", scope: !2, file: !2, line: 151, type: !3693, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3695)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!1303, !1303, !1104}
!3695 = !{!3696, !3697, !3698}
!3696 = !DILocalVariable(name: "out", arg: 1, scope: !3692, file: !2, line: 151, type: !1303)
!3697 = !DILocalVariable(name: "val", arg: 2, scope: !3692, file: !2, line: 151, type: !1104)
!3698 = !DILocalVariable(name: "ptr", scope: !3692, file: !2, line: 152, type: !1303)
!3699 = !DILocation(line: 151, column: 39, scope: !3692)
!3700 = !DILocation(line: 151, column: 48, scope: !3692)
!3701 = !DILocation(line: 152, column: 5, scope: !3692)
!3702 = !DILocation(line: 152, column: 20, scope: !3692)
!3703 = !DILocation(line: 154, column: 9, scope: !3692)
!3704 = !DILocation(line: 154, column: 12, scope: !3692)
!3705 = !DILocation(line: 155, column: 9, scope: !3692)
!3706 = !DILocation(line: 155, column: 12, scope: !3692)
!3707 = !DILocation(line: 156, column: 9, scope: !3692)
!3708 = !DILocation(line: 156, column: 12, scope: !3692)
!3709 = !DILocation(line: 157, column: 9, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3692, file: !2, line: 157, column: 9)
!3711 = !DILocation(line: 157, column: 13, scope: !3710)
!3712 = !DILocation(line: 157, column: 9, scope: !3692)
!3713 = !DILocation(line: 157, column: 27, scope: !3710)
!3714 = !DILocation(line: 157, column: 25, scope: !3710)
!3715 = !DILocation(line: 157, column: 21, scope: !3710)
!3716 = !DILocation(line: 158, column: 14, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3710, file: !2, line: 158, column: 14)
!3718 = !DILocation(line: 158, column: 18, scope: !3717)
!3719 = !DILocation(line: 158, column: 14, scope: !3710)
!3720 = !DILocation(line: 158, column: 33, scope: !3717)
!3721 = !DILocation(line: 158, column: 37, scope: !3717)
!3722 = !DILocation(line: 158, column: 31, scope: !3717)
!3723 = !DILocation(line: 158, column: 27, scope: !3717)
!3724 = !DILocation(line: 159, column: 14, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3717, file: !2, line: 159, column: 14)
!3726 = !DILocation(line: 159, column: 18, scope: !3725)
!3727 = !DILocation(line: 159, column: 14, scope: !3717)
!3728 = !DILocation(line: 159, column: 34, scope: !3725)
!3729 = !DILocation(line: 159, column: 38, scope: !3725)
!3730 = !DILocation(line: 159, column: 32, scope: !3725)
!3731 = !DILocation(line: 159, column: 28, scope: !3725)
!3732 = !DILocation(line: 160, column: 14, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3725, file: !2, line: 160, column: 14)
!3734 = !DILocation(line: 160, column: 18, scope: !3733)
!3735 = !DILocation(line: 160, column: 14, scope: !3725)
!3736 = !DILocation(line: 160, column: 35, scope: !3733)
!3737 = !DILocation(line: 160, column: 39, scope: !3733)
!3738 = !DILocation(line: 160, column: 33, scope: !3733)
!3739 = !DILocation(line: 160, column: 29, scope: !3733)
!3740 = !DILocation(line: 161, column: 14, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3733, file: !2, line: 161, column: 14)
!3742 = !DILocation(line: 161, column: 18, scope: !3741)
!3743 = !DILocation(line: 161, column: 14, scope: !3733)
!3744 = !DILocation(line: 161, column: 36, scope: !3741)
!3745 = !DILocation(line: 161, column: 40, scope: !3741)
!3746 = !DILocation(line: 161, column: 34, scope: !3741)
!3747 = !DILocation(line: 161, column: 30, scope: !3741)
!3748 = !DILocation(line: 162, column: 16, scope: !3741)
!3749 = !DILocation(line: 162, column: 20, scope: !3741)
!3750 = !DILocation(line: 162, column: 14, scope: !3741)
!3751 = !DILocation(line: 163, column: 11, scope: !3692)
!3752 = !DILocation(line: 163, column: 15, scope: !3692)
!3753 = !DILocation(line: 163, column: 9, scope: !3692)
!3754 = !DILocation(line: 164, column: 5, scope: !3692)
!3755 = !DILocation(line: 164, column: 12, scope: !3692)
!3756 = !DILocation(line: 164, column: 16, scope: !3692)
!3757 = !DILocation(line: 165, column: 10, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3692, file: !2, line: 164, column: 21)
!3759 = !DILocation(line: 165, column: 14, scope: !3758)
!3760 = !DILocation(line: 165, column: 2, scope: !3758)
!3761 = !DILocation(line: 166, column: 18, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !2, line: 165, column: 21)
!3763 = !DILocation(line: 166, column: 21, scope: !3762)
!3764 = !DILocation(line: 166, column: 28, scope: !3762)
!3765 = !DILocation(line: 167, column: 18, scope: !3762)
!3766 = !DILocation(line: 167, column: 21, scope: !3762)
!3767 = !DILocation(line: 167, column: 28, scope: !3762)
!3768 = !DILocation(line: 168, column: 18, scope: !3762)
!3769 = !DILocation(line: 168, column: 21, scope: !3762)
!3770 = !DILocation(line: 168, column: 28, scope: !3762)
!3771 = !DILocation(line: 169, column: 18, scope: !3762)
!3772 = !DILocation(line: 169, column: 21, scope: !3762)
!3773 = !DILocation(line: 169, column: 28, scope: !3762)
!3774 = !DILocation(line: 170, column: 18, scope: !3762)
!3775 = !DILocation(line: 170, column: 21, scope: !3762)
!3776 = !DILocation(line: 170, column: 28, scope: !3762)
!3777 = !DILocation(line: 171, column: 18, scope: !3762)
!3778 = !DILocation(line: 171, column: 21, scope: !3762)
!3779 = !DILocation(line: 171, column: 28, scope: !3762)
!3780 = !DILocation(line: 172, column: 18, scope: !3762)
!3781 = !DILocation(line: 172, column: 21, scope: !3762)
!3782 = !DILocation(line: 172, column: 28, scope: !3762)
!3783 = !DILocation(line: 173, column: 18, scope: !3762)
!3784 = !DILocation(line: 173, column: 21, scope: !3762)
!3785 = !DILocation(line: 173, column: 28, scope: !3762)
!3786 = !DILocation(line: 174, column: 18, scope: !3762)
!3787 = !DILocation(line: 174, column: 21, scope: !3762)
!3788 = !DILocation(line: 174, column: 28, scope: !3762)
!3789 = !DILocation(line: 175, column: 18, scope: !3762)
!3790 = !DILocation(line: 175, column: 21, scope: !3762)
!3791 = !DILocation(line: 175, column: 28, scope: !3762)
!3792 = !DILocation(line: 176, column: 20, scope: !3762)
!3793 = !DILocation(line: 176, column: 23, scope: !3762)
!3794 = !DILocation(line: 176, column: 30, scope: !3762)
!3795 = !DILocation(line: 177, column: 20, scope: !3762)
!3796 = !DILocation(line: 177, column: 23, scope: !3762)
!3797 = !DILocation(line: 177, column: 30, scope: !3762)
!3798 = !DILocation(line: 178, column: 20, scope: !3762)
!3799 = !DILocation(line: 178, column: 23, scope: !3762)
!3800 = !DILocation(line: 178, column: 30, scope: !3762)
!3801 = !DILocation(line: 179, column: 20, scope: !3762)
!3802 = !DILocation(line: 179, column: 23, scope: !3762)
!3803 = !DILocation(line: 179, column: 30, scope: !3762)
!3804 = !DILocation(line: 180, column: 20, scope: !3762)
!3805 = !DILocation(line: 180, column: 23, scope: !3762)
!3806 = !DILocation(line: 180, column: 30, scope: !3762)
!3807 = !DILocation(line: 181, column: 20, scope: !3762)
!3808 = !DILocation(line: 181, column: 23, scope: !3762)
!3809 = !DILocation(line: 181, column: 30, scope: !3762)
!3810 = !DILocation(line: 182, column: 19, scope: !3762)
!3811 = !DILocation(line: 182, column: 22, scope: !3762)
!3812 = !DILocation(line: 182, column: 29, scope: !3762)
!3813 = !DILocation(line: 184, column: 6, scope: !3758)
!3814 = distinct !{!3814, !3754, !3815, !1687}
!3815 = !DILocation(line: 185, column: 5, scope: !3692)
!3816 = !DILocation(line: 186, column: 9, scope: !3692)
!3817 = !DILocation(line: 186, column: 12, scope: !3692)
!3818 = !DILocation(line: 187, column: 6, scope: !3692)
!3819 = !DILocation(line: 187, column: 10, scope: !3692)
!3820 = !DILocation(line: 188, column: 12, scope: !3692)
!3821 = !DILocation(line: 189, column: 1, scope: !3692)
!3822 = !DILocation(line: 188, column: 5, scope: !3692)
!3823 = distinct !DISubprogram(name: "xmlAttrSerializeTxtContent__internal_alias", scope: !2, file: !2, line: 2165, type: !3824, scopeLine: 2167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3826)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{null, !1538, !1345, !1448, !1178}
!3826 = !{!3827, !3828, !3829, !3830, !3831}
!3827 = !DILocalVariable(name: "buf", arg: 1, scope: !3823, file: !2, line: 2165, type: !1538)
!3828 = !DILocalVariable(name: "doc", arg: 2, scope: !3823, file: !2, line: 2165, type: !1345)
!3829 = !DILocalVariable(name: "attr", arg: 3, scope: !3823, file: !2, line: 2166, type: !1448)
!3830 = !DILocalVariable(name: "string", arg: 4, scope: !3823, file: !2, line: 2166, type: !1178)
!3831 = !DILocalVariable(name: "buffer", scope: !3823, file: !2, line: 2168, type: !1314)
!3832 = !DILocation(line: 2165, column: 41, scope: !3823)
!3833 = !DILocation(line: 2165, column: 56, scope: !3823)
!3834 = !DILocation(line: 2166, column: 39, scope: !3823)
!3835 = !DILocation(line: 2166, column: 61, scope: !3823)
!3836 = !DILocation(line: 2168, column: 5, scope: !3823)
!3837 = !DILocation(line: 2168, column: 15, scope: !3823)
!3838 = !DILocation(line: 2170, column: 10, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3823, file: !2, line: 2170, column: 9)
!3840 = !DILocation(line: 2170, column: 14, scope: !3839)
!3841 = !DILocation(line: 2170, column: 23, scope: !3839)
!3842 = !DILocation(line: 2170, column: 27, scope: !3839)
!3843 = !DILocation(line: 2170, column: 34, scope: !3839)
!3844 = !DILocation(line: 2170, column: 9, scope: !3823)
!3845 = !DILocation(line: 2171, column: 9, scope: !3839)
!3846 = !DILocation(line: 2172, column: 31, scope: !3823)
!3847 = !DILocation(line: 2172, column: 14, scope: !3823)
!3848 = !DILocation(line: 2172, column: 12, scope: !3823)
!3849 = !DILocation(line: 2173, column: 9, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3823, file: !2, line: 2173, column: 9)
!3851 = !DILocation(line: 2173, column: 16, scope: !3850)
!3852 = !DILocation(line: 2173, column: 9, scope: !3823)
!3853 = !DILocation(line: 2174, column: 9, scope: !3850)
!3854 = !DILocation(line: 2175, column: 35, scope: !3823)
!3855 = !DILocation(line: 2175, column: 43, scope: !3823)
!3856 = !DILocation(line: 2175, column: 48, scope: !3823)
!3857 = !DILocation(line: 2175, column: 54, scope: !3823)
!3858 = !DILocation(line: 2175, column: 5, scope: !3823)
!3859 = !DILocation(line: 2176, column: 24, scope: !3823)
!3860 = !DILocation(line: 2176, column: 5, scope: !3823)
!3861 = !DILocation(line: 2177, column: 1, scope: !3823)
!3862 = !DISubprogram(name: "xmlBufFromBuffer", scope: !1575, file: !1575, line: 60, type: !3863, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!1314, !1538}
!3865 = !DISubprogram(name: "xmlBufBackToBuffer", scope: !1575, file: !1575, line: 61, type: !3866, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!1538, !1314}
!3868 = distinct !DISubprogram(name: "xmlNodeDump__internal_alias", scope: !2, file: !2, line: 2196, type: !3869, scopeLine: 2198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3871)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!1104, !1538, !1345, !1169, !1104, !1104}
!3871 = !{!3872, !3873, !3874, !3875, !3876, !3877, !3878}
!3872 = !DILocalVariable(name: "buf", arg: 1, scope: !3868, file: !2, line: 2196, type: !1538)
!3873 = !DILocalVariable(name: "doc", arg: 2, scope: !3868, file: !2, line: 2196, type: !1345)
!3874 = !DILocalVariable(name: "cur", arg: 3, scope: !3868, file: !2, line: 2196, type: !1169)
!3875 = !DILocalVariable(name: "level", arg: 4, scope: !3868, file: !2, line: 2196, type: !1104)
!3876 = !DILocalVariable(name: "format", arg: 5, scope: !3868, file: !2, line: 2197, type: !1104)
!3877 = !DILocalVariable(name: "buffer", scope: !3868, file: !2, line: 2199, type: !1314)
!3878 = !DILocalVariable(name: "ret", scope: !3868, file: !2, line: 2200, type: !1104)
!3879 = !DILocation(line: 2196, column: 26, scope: !3868)
!3880 = !DILocation(line: 2196, column: 41, scope: !3868)
!3881 = !DILocation(line: 2196, column: 57, scope: !3868)
!3882 = !DILocation(line: 2196, column: 66, scope: !3868)
!3883 = !DILocation(line: 2197, column: 17, scope: !3868)
!3884 = !DILocation(line: 2199, column: 5, scope: !3868)
!3885 = !DILocation(line: 2199, column: 15, scope: !3868)
!3886 = !DILocation(line: 2200, column: 5, scope: !3868)
!3887 = !DILocation(line: 2200, column: 9, scope: !3868)
!3888 = !DILocation(line: 2202, column: 10, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3868, file: !2, line: 2202, column: 9)
!3890 = !DILocation(line: 2202, column: 14, scope: !3889)
!3891 = !DILocation(line: 2202, column: 23, scope: !3889)
!3892 = !DILocation(line: 2202, column: 27, scope: !3889)
!3893 = !DILocation(line: 2202, column: 31, scope: !3889)
!3894 = !DILocation(line: 2202, column: 9, scope: !3868)
!3895 = !DILocation(line: 2203, column: 9, scope: !3889)
!3896 = !DILocation(line: 2204, column: 31, scope: !3868)
!3897 = !DILocation(line: 2204, column: 14, scope: !3868)
!3898 = !DILocation(line: 2204, column: 12, scope: !3868)
!3899 = !DILocation(line: 2205, column: 9, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3868, file: !2, line: 2205, column: 9)
!3901 = !DILocation(line: 2205, column: 16, scope: !3900)
!3902 = !DILocation(line: 2205, column: 9, scope: !3868)
!3903 = !DILocation(line: 2206, column: 9, scope: !3900)
!3904 = !DILocation(line: 2207, column: 26, scope: !3868)
!3905 = !DILocation(line: 2207, column: 34, scope: !3868)
!3906 = !DILocation(line: 2207, column: 39, scope: !3868)
!3907 = !DILocation(line: 2207, column: 44, scope: !3868)
!3908 = !DILocation(line: 2207, column: 51, scope: !3868)
!3909 = !DILocation(line: 2207, column: 11, scope: !3868)
!3910 = !DILocation(line: 2207, column: 9, scope: !3868)
!3911 = !DILocation(line: 2208, column: 24, scope: !3868)
!3912 = !DILocation(line: 2208, column: 5, scope: !3868)
!3913 = !DILocation(line: 2209, column: 9, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3868, file: !2, line: 2209, column: 9)
!3915 = !DILocation(line: 2209, column: 13, scope: !3914)
!3916 = !DILocation(line: 2209, column: 9, scope: !3868)
!3917 = !DILocation(line: 2210, column: 9, scope: !3914)
!3918 = !DILocation(line: 2211, column: 18, scope: !3868)
!3919 = !DILocation(line: 2211, column: 5, scope: !3868)
!3920 = !DILocation(line: 2212, column: 1, scope: !3868)
!3921 = distinct !DISubprogram(name: "xmlBufNodeDump__internal_alias", scope: !2, file: !2, line: 2231, type: !3922, scopeLine: 2233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !3924)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!1321, !1314, !1345, !1169, !1104, !1104}
!3924 = !{!3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933}
!3925 = !DILocalVariable(name: "buf", arg: 1, scope: !3921, file: !2, line: 2231, type: !1314)
!3926 = !DILocalVariable(name: "doc", arg: 2, scope: !3921, file: !2, line: 2231, type: !1345)
!3927 = !DILocalVariable(name: "cur", arg: 3, scope: !3921, file: !2, line: 2231, type: !1169)
!3928 = !DILocalVariable(name: "level", arg: 4, scope: !3921, file: !2, line: 2231, type: !1104)
!3929 = !DILocalVariable(name: "format", arg: 5, scope: !3921, file: !2, line: 2232, type: !1104)
!3930 = !DILocalVariable(name: "use", scope: !3921, file: !2, line: 2234, type: !1321)
!3931 = !DILocalVariable(name: "ret", scope: !3921, file: !2, line: 2235, type: !1104)
!3932 = !DILocalVariable(name: "outbuf", scope: !3921, file: !2, line: 2236, type: !1273)
!3933 = !DILocalVariable(name: "oldalloc", scope: !3921, file: !2, line: 2237, type: !1104)
!3934 = !DILocation(line: 2231, column: 26, scope: !3921)
!3935 = !DILocation(line: 2231, column: 41, scope: !3921)
!3936 = !DILocation(line: 2231, column: 57, scope: !3921)
!3937 = !DILocation(line: 2231, column: 66, scope: !3921)
!3938 = !DILocation(line: 2232, column: 17, scope: !3921)
!3939 = !DILocation(line: 2234, column: 5, scope: !3921)
!3940 = !DILocation(line: 2234, column: 12, scope: !3921)
!3941 = !DILocation(line: 2235, column: 5, scope: !3921)
!3942 = !DILocation(line: 2235, column: 9, scope: !3921)
!3943 = !DILocation(line: 2236, column: 5, scope: !3921)
!3944 = !DILocation(line: 2236, column: 24, scope: !3921)
!3945 = !DILocation(line: 2237, column: 5, scope: !3921)
!3946 = !DILocation(line: 2237, column: 9, scope: !3921)
!3947 = !DILocation(line: 2239, column: 5, scope: !3921)
!3948 = !DILocation(line: 2241, column: 9, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3921, file: !2, line: 2241, column: 9)
!3950 = !DILocation(line: 2241, column: 13, scope: !3949)
!3951 = !DILocation(line: 2241, column: 9, scope: !3921)
!3952 = !DILocation(line: 2246, column: 9, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3949, file: !2, line: 2241, column: 22)
!3954 = !DILocation(line: 2248, column: 9, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3921, file: !2, line: 2248, column: 9)
!3956 = !DILocation(line: 2248, column: 13, scope: !3955)
!3957 = !DILocation(line: 2248, column: 9, scope: !3921)
!3958 = !DILocation(line: 2253, column: 9, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3955, file: !2, line: 2248, column: 22)
!3960 = !DILocation(line: 2255, column: 35, scope: !3921)
!3961 = !DILocation(line: 2255, column: 12, scope: !3921)
!3962 = !DILocation(line: 2256, column: 9, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3921, file: !2, line: 2256, column: 9)
!3964 = !DILocation(line: 2256, column: 16, scope: !3963)
!3965 = !DILocation(line: 2256, column: 9, scope: !3921)
!3966 = !DILocation(line: 2257, column: 9, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3963, file: !2, line: 2256, column: 25)
!3968 = !DILocation(line: 2258, column: 9, scope: !3967)
!3969 = !DILocation(line: 2260, column: 12, scope: !3921)
!3970 = !DILocation(line: 2260, column: 5, scope: !3921)
!3971 = !DILocation(line: 2261, column: 22, scope: !3921)
!3972 = !DILocation(line: 2261, column: 5, scope: !3921)
!3973 = !DILocation(line: 2261, column: 13, scope: !3921)
!3974 = !DILocation(line: 2261, column: 20, scope: !3921)
!3975 = !DILocation(line: 2262, column: 5, scope: !3921)
!3976 = !DILocation(line: 2262, column: 13, scope: !3921)
!3977 = !DILocation(line: 2262, column: 21, scope: !3921)
!3978 = !DILocation(line: 2263, column: 5, scope: !3921)
!3979 = !DILocation(line: 2263, column: 13, scope: !3921)
!3980 = !DILocation(line: 2263, column: 27, scope: !3921)
!3981 = !{!1761, !1472, i64 8}
!3982 = !DILocation(line: 2264, column: 5, scope: !3921)
!3983 = !DILocation(line: 2264, column: 13, scope: !3921)
!3984 = !DILocation(line: 2264, column: 27, scope: !3921)
!3985 = !{!1761, !1472, i64 16}
!3986 = !DILocation(line: 2265, column: 5, scope: !3921)
!3987 = !DILocation(line: 2265, column: 13, scope: !3921)
!3988 = !DILocation(line: 2265, column: 21, scope: !3921)
!3989 = !{!1761, !1472, i64 0}
!3990 = !DILocation(line: 2266, column: 5, scope: !3921)
!3991 = !DILocation(line: 2266, column: 13, scope: !3921)
!3992 = !DILocation(line: 2266, column: 21, scope: !3921)
!3993 = !{!1761, !1734, i64 48}
!3994 = !DILocation(line: 2268, column: 21, scope: !3921)
!3995 = !DILocation(line: 2268, column: 11, scope: !3921)
!3996 = !DILocation(line: 2268, column: 9, scope: !3921)
!3997 = !DILocation(line: 2269, column: 42, scope: !3921)
!3998 = !DILocation(line: 2269, column: 16, scope: !3921)
!3999 = !DILocation(line: 2269, column: 14, scope: !3921)
!4000 = !DILocation(line: 2270, column: 31, scope: !3921)
!4001 = !DILocation(line: 2270, column: 5, scope: !3921)
!4002 = !DILocation(line: 2271, column: 23, scope: !3921)
!4003 = !DILocation(line: 2271, column: 31, scope: !3921)
!4004 = !DILocation(line: 2271, column: 36, scope: !3921)
!4005 = !DILocation(line: 2271, column: 41, scope: !3921)
!4006 = !DILocation(line: 2271, column: 48, scope: !3921)
!4007 = !DILocation(line: 2271, column: 5, scope: !3921)
!4008 = !DILocation(line: 2272, column: 31, scope: !3921)
!4009 = !DILocation(line: 2272, column: 36, scope: !3921)
!4010 = !DILocation(line: 2272, column: 5, scope: !3921)
!4011 = !DILocation(line: 2273, column: 5, scope: !3921)
!4012 = !DILocation(line: 2273, column: 13, scope: !3921)
!4013 = !DILocation(line: 2274, column: 21, scope: !3921)
!4014 = !DILocation(line: 2274, column: 11, scope: !3921)
!4015 = !DILocation(line: 2274, column: 28, scope: !3921)
!4016 = !DILocation(line: 2274, column: 26, scope: !3921)
!4017 = !DILocation(line: 2274, column: 9, scope: !3921)
!4018 = !DILocation(line: 2275, column: 13, scope: !3921)
!4019 = !DILocation(line: 2275, column: 12, scope: !3921)
!4020 = !DILocation(line: 2275, column: 5, scope: !3921)
!4021 = !DILocation(line: 2276, column: 1, scope: !3921)
!4022 = !DISubprogram(name: "xmlInitParser__internal_alias", scope: !1530, file: !1530, line: 4669, type: !4023, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{null}
!4025 = distinct !DISubprogram(name: "xmlSaveErrMemory", scope: !2, file: !2, line: 108, type: !4026, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4028)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{null, !1285}
!4028 = !{!4029}
!4029 = !DILocalVariable(name: "extra", arg: 1, scope: !4025, file: !2, line: 108, type: !1285)
!4030 = !DILocation(line: 108, column: 30, scope: !4025)
!4031 = !DILocation(line: 110, column: 70, scope: !4025)
!4032 = !DILocation(line: 110, column: 5, scope: !4025)
!4033 = !DILocation(line: 111, column: 1, scope: !4025)
!4034 = !DISubprogram(name: "xmlBufUse__internal_alias", scope: !1530, file: !1530, line: 1403, type: !4035, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{!1321, !4037}
!4037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1314)
!4038 = !DISubprogram(name: "xmlBufGetAllocationScheme", scope: !1575, file: !1575, line: 28, type: !4039, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!1104, !1314}
!4041 = !DISubprogram(name: "xmlBufSetAllocationScheme", scope: !1575, file: !1575, line: 26, type: !4042, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!1104, !1314, !1547}
!4044 = distinct !DISubprogram(name: "xmlNodeDumpOutput__internal_alias", scope: !2, file: !2, line: 2341, type: !4045, scopeLine: 2343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4047)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{null, !1273, !1345, !1169, !1104, !1104, !1285}
!4047 = !{!4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056}
!4048 = !DILocalVariable(name: "buf", arg: 1, scope: !4044, file: !2, line: 2341, type: !1273)
!4049 = !DILocalVariable(name: "doc", arg: 2, scope: !4044, file: !2, line: 2341, type: !1345)
!4050 = !DILocalVariable(name: "cur", arg: 3, scope: !4044, file: !2, line: 2341, type: !1169)
!4051 = !DILocalVariable(name: "level", arg: 4, scope: !4044, file: !2, line: 2342, type: !1104)
!4052 = !DILocalVariable(name: "format", arg: 5, scope: !4044, file: !2, line: 2342, type: !1104)
!4053 = !DILocalVariable(name: "encoding", arg: 6, scope: !4044, file: !2, line: 2342, type: !1285)
!4054 = !DILocalVariable(name: "ctxt", scope: !4044, file: !2, line: 2344, type: !1326)
!4055 = !DILocalVariable(name: "dtd", scope: !4044, file: !2, line: 2346, type: !1348)
!4056 = !DILocalVariable(name: "is_xhtml", scope: !4044, file: !2, line: 2347, type: !1104)
!4057 = !DILocation(line: 2341, column: 38, scope: !4044)
!4058 = !DILocation(line: 2341, column: 53, scope: !4044)
!4059 = !DILocation(line: 2341, column: 69, scope: !4044)
!4060 = !DILocation(line: 2342, column: 23, scope: !4044)
!4061 = !DILocation(line: 2342, column: 34, scope: !4044)
!4062 = !DILocation(line: 2342, column: 54, scope: !4044)
!4063 = !DILocation(line: 2344, column: 5, scope: !4044)
!4064 = !DILocation(line: 2344, column: 17, scope: !4044)
!4065 = !DILocation(line: 2346, column: 5, scope: !4044)
!4066 = !DILocation(line: 2346, column: 15, scope: !4044)
!4067 = !DILocation(line: 2347, column: 5, scope: !4044)
!4068 = !DILocation(line: 2347, column: 9, scope: !4044)
!4069 = !DILocation(line: 2350, column: 5, scope: !4044)
!4070 = !DILocation(line: 2352, column: 10, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4044, file: !2, line: 2352, column: 9)
!4072 = !DILocation(line: 2352, column: 14, scope: !4071)
!4073 = !DILocation(line: 2352, column: 23, scope: !4071)
!4074 = !DILocation(line: 2352, column: 27, scope: !4071)
!4075 = !DILocation(line: 2352, column: 31, scope: !4071)
!4076 = !DILocation(line: 2352, column: 9, scope: !4044)
!4077 = !DILocation(line: 2352, column: 41, scope: !4071)
!4078 = !DILocation(line: 2354, column: 9, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4044, file: !2, line: 2354, column: 9)
!4080 = !DILocation(line: 2354, column: 18, scope: !4079)
!4081 = !DILocation(line: 2354, column: 9, scope: !4044)
!4082 = !DILocation(line: 2355, column: 18, scope: !4079)
!4083 = !DILocation(line: 2355, column: 9, scope: !4079)
!4084 = !DILocation(line: 2357, column: 5, scope: !4044)
!4085 = !DILocation(line: 2358, column: 16, scope: !4044)
!4086 = !DILocation(line: 2358, column: 10, scope: !4044)
!4087 = !DILocation(line: 2358, column: 14, scope: !4044)
!4088 = !DILocation(line: 2359, column: 18, scope: !4044)
!4089 = !DILocation(line: 2359, column: 10, scope: !4044)
!4090 = !DILocation(line: 2359, column: 16, scope: !4044)
!4091 = !DILocation(line: 2360, column: 19, scope: !4044)
!4092 = !DILocation(line: 2360, column: 10, scope: !4044)
!4093 = !DILocation(line: 2360, column: 17, scope: !4044)
!4094 = !DILocation(line: 2361, column: 39, scope: !4044)
!4095 = !DILocation(line: 2361, column: 10, scope: !4044)
!4096 = !DILocation(line: 2361, column: 19, scope: !4044)
!4097 = !DILocation(line: 2362, column: 5, scope: !4044)
!4098 = !DILocation(line: 2363, column: 10, scope: !4044)
!4099 = !DILocation(line: 2363, column: 18, scope: !4044)
!4100 = !DILocation(line: 2366, column: 27, scope: !4044)
!4101 = !DILocation(line: 2366, column: 11, scope: !4044)
!4102 = !DILocation(line: 2366, column: 9, scope: !4044)
!4103 = !DILocation(line: 2367, column: 9, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4044, file: !2, line: 2367, column: 9)
!4105 = !DILocation(line: 2367, column: 13, scope: !4104)
!4106 = !DILocation(line: 2367, column: 9, scope: !4044)
!4107 = !DILocation(line: 2368, column: 24, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4104, file: !2, line: 2367, column: 22)
!4109 = !DILocation(line: 2368, column: 29, scope: !4108)
!4110 = !DILocation(line: 2368, column: 39, scope: !4108)
!4111 = !DILocation(line: 2368, column: 44, scope: !4108)
!4112 = !DILocation(line: 2368, column: 13, scope: !4108)
!4113 = !DILocation(line: 2368, column: 11, scope: !4108)
!4114 = !DILocation(line: 2369, column: 6, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4108, file: !2, line: 2369, column: 6)
!4116 = !DILocation(line: 2369, column: 15, scope: !4115)
!4117 = !DILocation(line: 2369, column: 6, scope: !4108)
!4118 = !DILocation(line: 2370, column: 15, scope: !4115)
!4119 = !DILocation(line: 2370, column: 6, scope: !4115)
!4120 = !DILocation(line: 2371, column: 5, scope: !4108)
!4121 = !DILocation(line: 2373, column: 9, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4044, file: !2, line: 2373, column: 9)
!4123 = !DILocation(line: 2373, column: 9, scope: !4044)
!4124 = !DILocation(line: 2374, column: 36, scope: !4122)
!4125 = !DILocation(line: 2374, column: 9, scope: !4122)
!4126 = !DILocation(line: 2377, column: 42, scope: !4122)
!4127 = !DILocation(line: 2377, column: 9, scope: !4122)
!4128 = !DILocation(line: 2378, column: 1, scope: !4044)
!4129 = distinct !DISubprogram(name: "xmlElemDump__internal_alias", scope: !2, file: !2, line: 2287, type: !4130, scopeLine: 2288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4186)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{null, !4132, !1345, !1169}
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4134, line: 7, baseType: !4135)
!4134 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4136, line: 49, size: 1728, elements: !4137)
!4136 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!4137 = !{!4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4153, !4155, !4156, !4157, !4160, !4161, !4163, !4167, !4170, !4172, !4175, !4178, !4179, !4180, !4181, !4182}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4135, file: !4136, line: 51, baseType: !1104, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4135, file: !4136, line: 54, baseType: !1193, size: 64, offset: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4135, file: !4136, line: 55, baseType: !1193, size: 64, offset: 128)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4135, file: !4136, line: 56, baseType: !1193, size: 64, offset: 192)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4135, file: !4136, line: 57, baseType: !1193, size: 64, offset: 256)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4135, file: !4136, line: 58, baseType: !1193, size: 64, offset: 320)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4135, file: !4136, line: 59, baseType: !1193, size: 64, offset: 384)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4135, file: !4136, line: 60, baseType: !1193, size: 64, offset: 448)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4135, file: !4136, line: 61, baseType: !1193, size: 64, offset: 512)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4135, file: !4136, line: 64, baseType: !1193, size: 64, offset: 576)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4135, file: !4136, line: 65, baseType: !1193, size: 64, offset: 640)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4135, file: !4136, line: 66, baseType: !1193, size: 64, offset: 704)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4135, file: !4136, line: 68, baseType: !4151, size: 64, offset: 768)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4136, line: 36, flags: DIFlagFwdDecl)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4135, file: !4136, line: 70, baseType: !4154, size: 64, offset: 832)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4135, file: !4136, line: 72, baseType: !1104, size: 32, offset: 896)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4135, file: !4136, line: 73, baseType: !1104, size: 32, offset: 928)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4135, file: !4136, line: 74, baseType: !4158, size: 64, offset: 960)
!4158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !4159, line: 152, baseType: !2113)
!4159 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4135, file: !4136, line: 77, baseType: !1271, size: 16, offset: 1024)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4135, file: !4136, line: 78, baseType: !4162, size: 8, offset: 1040)
!4162 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4135, file: !4136, line: 79, baseType: !4164, size: 8, offset: 1048)
!4164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 8, elements: !4165)
!4165 = !{!4166}
!4166 = !DISubrange(count: 1)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4135, file: !4136, line: 81, baseType: !4168, size: 64, offset: 1088)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4136, line: 43, baseType: null)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4135, file: !4136, line: 89, baseType: !4171, size: 64, offset: 1152)
!4171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !4159, line: 153, baseType: !2113)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4135, file: !4136, line: 91, baseType: !4173, size: 64, offset: 1216)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 64)
!4174 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4136, line: 37, flags: DIFlagFwdDecl)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4135, file: !4136, line: 92, baseType: !4176, size: 64, offset: 1280)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4136, line: 38, flags: DIFlagFwdDecl)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4135, file: !4136, line: 93, baseType: !4154, size: 64, offset: 1344)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4135, file: !4136, line: 94, baseType: !1164, size: 64, offset: 1408)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4135, file: !4136, line: 95, baseType: !1321, size: 64, offset: 1472)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4135, file: !4136, line: 96, baseType: !1104, size: 32, offset: 1536)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4135, file: !4136, line: 98, baseType: !4183, size: 160, offset: 1568)
!4183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 160, elements: !4184)
!4184 = !{!4185}
!4185 = !DISubrange(count: 20)
!4186 = !{!4187, !4188, !4189, !4190}
!4187 = !DILocalVariable(name: "f", arg: 1, scope: !4129, file: !2, line: 2287, type: !4132)
!4188 = !DILocalVariable(name: "doc", arg: 2, scope: !4129, file: !2, line: 2287, type: !1345)
!4189 = !DILocalVariable(name: "cur", arg: 3, scope: !4129, file: !2, line: 2287, type: !1169)
!4190 = !DILocalVariable(name: "outbuf", scope: !4129, file: !2, line: 2289, type: !1273)
!4191 = !DILocation(line: 2287, column: 20, scope: !4129)
!4192 = !DILocation(line: 2287, column: 33, scope: !4129)
!4193 = !DILocation(line: 2287, column: 49, scope: !4129)
!4194 = !DILocation(line: 2289, column: 5, scope: !4129)
!4195 = !DILocation(line: 2289, column: 24, scope: !4129)
!4196 = !DILocation(line: 2291, column: 5, scope: !4129)
!4197 = !DILocation(line: 2293, column: 9, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4129, file: !2, line: 2293, column: 9)
!4199 = !DILocation(line: 2293, column: 13, scope: !4198)
!4200 = !DILocation(line: 2293, column: 9, scope: !4129)
!4201 = !DILocation(line: 2298, column: 9, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4198, file: !2, line: 2293, column: 22)
!4203 = !DILocation(line: 2307, column: 40, scope: !4129)
!4204 = !DILocation(line: 2307, column: 14, scope: !4129)
!4205 = !DILocation(line: 2307, column: 12, scope: !4129)
!4206 = !DILocation(line: 2308, column: 9, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4129, file: !2, line: 2308, column: 9)
!4208 = !DILocation(line: 2308, column: 16, scope: !4207)
!4209 = !DILocation(line: 2308, column: 9, scope: !4129)
!4210 = !DILocation(line: 2309, column: 9, scope: !4207)
!4211 = !DILocation(line: 2310, column: 10, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4129, file: !2, line: 2310, column: 9)
!4213 = !DILocation(line: 2310, column: 14, scope: !4212)
!4214 = !DILocation(line: 2310, column: 23, scope: !4212)
!4215 = !DILocation(line: 2310, column: 27, scope: !4212)
!4216 = !DILocation(line: 2310, column: 32, scope: !4212)
!4217 = !DILocation(line: 2310, column: 37, scope: !4212)
!4218 = !DILocation(line: 2310, column: 9, scope: !4129)
!4219 = !DILocation(line: 2312, column: 28, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4212, file: !2, line: 2310, column: 65)
!4221 = !DILocation(line: 2312, column: 36, scope: !4220)
!4222 = !DILocation(line: 2312, column: 41, scope: !4220)
!4223 = !DILocation(line: 2312, column: 9, scope: !4220)
!4224 = !DILocation(line: 2316, column: 5, scope: !4220)
!4225 = !DILocation(line: 2317, column: 27, scope: !4212)
!4226 = !DILocation(line: 2317, column: 35, scope: !4212)
!4227 = !DILocation(line: 2317, column: 40, scope: !4212)
!4228 = !DILocation(line: 2317, column: 9, scope: !4212)
!4229 = !DILocation(line: 2318, column: 26, scope: !4129)
!4230 = !DILocation(line: 2318, column: 5, scope: !4129)
!4231 = !DILocation(line: 2319, column: 1, scope: !4129)
!4232 = !DISubprogram(name: "xmlOutputBufferCreateFile__internal_alias", scope: !1530, file: !1530, line: 6818, type: !4233, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!1273, !4132, !1292}
!4235 = !DISubprogram(name: "htmlNodeDumpOutput__internal_alias", scope: !1530, file: !1530, line: 550, type: !4236, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{null, !1273, !1345, !1169, !1285}
!4238 = !DISubprogram(name: "xmlOutputBufferClose__internal_alias", scope: !1530, file: !1530, line: 6782, type: !3230, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4239 = distinct !DISubprogram(name: "xmlSaveCtxtInit", scope: !2, file: !2, line: 330, type: !1904, scopeLine: 331, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4240)
!4240 = !{!4241, !4242, !4243}
!4241 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4239, file: !2, line: 330, type: !1324)
!4242 = !DILocalVariable(name: "i", scope: !4239, file: !2, line: 332, type: !1104)
!4243 = !DILocalVariable(name: "len", scope: !4239, file: !2, line: 333, type: !1104)
!4244 = !DILocation(line: 330, column: 32, scope: !4239)
!4245 = !DILocation(line: 332, column: 5, scope: !4239)
!4246 = !DILocation(line: 332, column: 9, scope: !4239)
!4247 = !DILocation(line: 333, column: 5, scope: !4239)
!4248 = !DILocation(line: 333, column: 9, scope: !4239)
!4249 = !DILocation(line: 335, column: 9, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4239, file: !2, line: 335, column: 9)
!4251 = !DILocation(line: 335, column: 14, scope: !4250)
!4252 = !DILocation(line: 335, column: 9, scope: !4239)
!4253 = !DILocation(line: 335, column: 23, scope: !4250)
!4254 = !DILocation(line: 336, column: 10, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4239, file: !2, line: 336, column: 9)
!4256 = !DILocation(line: 336, column: 16, scope: !4255)
!4257 = !DILocation(line: 336, column: 25, scope: !4255)
!4258 = !DILocation(line: 336, column: 34, scope: !4255)
!4259 = !DILocation(line: 336, column: 38, scope: !4255)
!4260 = !DILocation(line: 336, column: 44, scope: !4255)
!4261 = !DILocation(line: 336, column: 51, scope: !4255)
!4262 = !DILocation(line: 336, column: 9, scope: !4239)
!4263 = !DILocation(line: 337, column: 9, scope: !4255)
!4264 = !DILocation(line: 337, column: 15, scope: !4255)
!4265 = !DILocation(line: 337, column: 22, scope: !4255)
!4266 = !DILocation(line: 338, column: 32, scope: !4239)
!4267 = !DILocation(line: 338, column: 11, scope: !4239)
!4268 = !DILocation(line: 338, column: 9, scope: !4239)
!4269 = !DILocation(line: 339, column: 10, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4239, file: !2, line: 339, column: 9)
!4271 = !DILocation(line: 339, column: 30, scope: !4270)
!4272 = !DILocation(line: 339, column: 39, scope: !4270)
!4273 = !DILocation(line: 339, column: 43, scope: !4270)
!4274 = !DILocation(line: 339, column: 47, scope: !4270)
!4275 = !DILocation(line: 339, column: 9, scope: !4239)
!4276 = !DILocation(line: 340, column: 17, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4270, file: !2, line: 339, column: 54)
!4278 = !DILocation(line: 340, column: 23, scope: !4277)
!4279 = !DILocation(line: 340, column: 9, scope: !4277)
!4280 = !DILocation(line: 341, column: 5, scope: !4277)
!4281 = !DILocation(line: 342, column: 22, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4270, file: !2, line: 341, column: 12)
!4283 = !DILocation(line: 342, column: 2, scope: !4282)
!4284 = !DILocation(line: 342, column: 8, scope: !4282)
!4285 = !DILocation(line: 342, column: 20, scope: !4282)
!4286 = !DILocation(line: 343, column: 33, scope: !4282)
!4287 = !DILocation(line: 343, column: 39, scope: !4282)
!4288 = !DILocation(line: 343, column: 31, scope: !4282)
!4289 = !DILocation(line: 343, column: 2, scope: !4282)
!4290 = !DILocation(line: 343, column: 8, scope: !4282)
!4291 = !DILocation(line: 343, column: 18, scope: !4282)
!4292 = !DILocation(line: 344, column: 9, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4282, file: !2, line: 344, column: 2)
!4294 = !DILocation(line: 344, column: 7, scope: !4293)
!4295 = !DILocation(line: 344, column: 13, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4293, file: !2, line: 344, column: 2)
!4297 = !DILocation(line: 344, column: 17, scope: !4296)
!4298 = !DILocation(line: 344, column: 23, scope: !4296)
!4299 = !DILocation(line: 344, column: 15, scope: !4296)
!4300 = !DILocation(line: 344, column: 2, scope: !4293)
!4301 = !DILocation(line: 345, column: 14, scope: !4296)
!4302 = !DILocation(line: 345, column: 20, scope: !4296)
!4303 = !DILocation(line: 345, column: 27, scope: !4296)
!4304 = !DILocation(line: 345, column: 31, scope: !4296)
!4305 = !DILocation(line: 345, column: 37, scope: !4296)
!4306 = !DILocation(line: 345, column: 29, scope: !4296)
!4307 = !DILocation(line: 345, column: 51, scope: !4296)
!4308 = !DILocation(line: 346, column: 6, scope: !4296)
!4309 = !DILocation(line: 346, column: 12, scope: !4296)
!4310 = !DILocation(line: 345, column: 6, scope: !4296)
!4311 = !DILocation(line: 344, column: 34, scope: !4296)
!4312 = !DILocation(line: 344, column: 2, scope: !4296)
!4313 = distinct !{!4313, !4300, !4314, !1687}
!4314 = !DILocation(line: 346, column: 23, scope: !4293)
!4315 = !DILocation(line: 347, column: 9, scope: !4282)
!4316 = !DILocation(line: 347, column: 15, scope: !4282)
!4317 = !DILocation(line: 347, column: 22, scope: !4282)
!4318 = !DILocation(line: 347, column: 28, scope: !4282)
!4319 = !DILocation(line: 347, column: 40, scope: !4282)
!4320 = !DILocation(line: 347, column: 46, scope: !4282)
!4321 = !DILocation(line: 347, column: 38, scope: !4282)
!4322 = !DILocation(line: 347, column: 59, scope: !4282)
!4323 = !DILocation(line: 350, column: 9, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4239, file: !2, line: 350, column: 9)
!4325 = !DILocation(line: 350, column: 9, scope: !4239)
!4326 = !DILocation(line: 351, column: 2, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !2, line: 350, column: 29)
!4328 = !DILocation(line: 351, column: 8, scope: !4327)
!4329 = !DILocation(line: 351, column: 16, scope: !4327)
!4330 = !DILocation(line: 352, column: 5, scope: !4327)
!4331 = !DILocation(line: 353, column: 1, scope: !4239)
!4332 = !DISubprogram(name: "xmlGetIntSubset__internal_alias", scope: !1530, file: !1530, line: 4073, type: !4333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!1348, !4335}
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!4337 = distinct !DISubprogram(name: "xhtmlNodeDumpOutput", scope: !2, file: !2, line: 1444, type: !2586, scopeLine: 1444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4338)
!4338 = !{!4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4353}
!4339 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4337, file: !2, line: 1444, type: !1324)
!4340 = !DILocalVariable(name: "cur", arg: 2, scope: !4337, file: !2, line: 1444, type: !1169)
!4341 = !DILocalVariable(name: "format", scope: !4337, file: !2, line: 1445, type: !1104)
!4342 = !DILocalVariable(name: "addmeta", scope: !4337, file: !2, line: 1445, type: !1104)
!4343 = !DILocalVariable(name: "tmp", scope: !4337, file: !2, line: 1446, type: !1169)
!4344 = !DILocalVariable(name: "start", scope: !4337, file: !2, line: 1447, type: !1165)
!4345 = !DILocalVariable(name: "end", scope: !4337, file: !2, line: 1447, type: !1165)
!4346 = !DILocalVariable(name: "buf", scope: !4337, file: !2, line: 1448, type: !1273)
!4347 = !DILocalVariable(name: "httpequiv", scope: !4348, file: !2, line: 1599, type: !1165)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !2, line: 1598, column: 57)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !2, line: 1598, column: 17)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !2, line: 1597, column: 29)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !2, line: 1594, column: 57)
!4352 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1590, column: 9)
!4353 = !DILocalVariable(name: "indent", scope: !4354, file: !2, line: 1754, type: !1104)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !2, line: 1753, column: 32)
!4355 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1753, column: 9)
!4356 = !DILocation(line: 1444, column: 36, scope: !4337)
!4357 = !DILocation(line: 1444, column: 53, scope: !4337)
!4358 = !DILocation(line: 1445, column: 5, scope: !4337)
!4359 = !DILocation(line: 1445, column: 9, scope: !4337)
!4360 = !DILocation(line: 1445, column: 17, scope: !4337)
!4361 = !DILocation(line: 1446, column: 5, scope: !4337)
!4362 = !DILocation(line: 1446, column: 16, scope: !4337)
!4363 = !DILocation(line: 1447, column: 5, scope: !4337)
!4364 = !DILocation(line: 1447, column: 14, scope: !4337)
!4365 = !DILocation(line: 1447, column: 22, scope: !4337)
!4366 = !DILocation(line: 1448, column: 5, scope: !4337)
!4367 = !DILocation(line: 1448, column: 24, scope: !4337)
!4368 = !DILocation(line: 1450, column: 9, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1450, column: 9)
!4370 = !DILocation(line: 1450, column: 13, scope: !4369)
!4371 = !DILocation(line: 1450, column: 9, scope: !4337)
!4372 = !DILocation(line: 1450, column: 22, scope: !4369)
!4373 = !DILocation(line: 1451, column: 10, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1451, column: 9)
!4375 = !DILocation(line: 1451, column: 15, scope: !4374)
!4376 = !DILocation(line: 1451, column: 20, scope: !4374)
!4377 = !DILocation(line: 1451, column: 42, scope: !4374)
!4378 = !DILocation(line: 1452, column: 10, scope: !4374)
!4379 = !DILocation(line: 1452, column: 15, scope: !4374)
!4380 = !DILocation(line: 1452, column: 20, scope: !4374)
!4381 = !DILocation(line: 1451, column: 9, scope: !4337)
!4382 = !DILocation(line: 1453, column: 33, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4374, file: !2, line: 1452, column: 48)
!4384 = !DILocation(line: 1453, column: 51, scope: !4383)
!4385 = !DILocation(line: 1453, column: 9, scope: !4383)
!4386 = !DILocation(line: 1454, column: 2, scope: !4383)
!4387 = !DILocation(line: 1456, column: 9, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1456, column: 9)
!4389 = !DILocation(line: 1456, column: 14, scope: !4388)
!4390 = !DILocation(line: 1456, column: 19, scope: !4388)
!4391 = !DILocation(line: 1456, column: 9, scope: !4337)
!4392 = !DILocation(line: 1457, column: 2, scope: !4388)
!4393 = !DILocation(line: 1458, column: 9, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1458, column: 9)
!4395 = !DILocation(line: 1458, column: 14, scope: !4394)
!4396 = !DILocation(line: 1458, column: 19, scope: !4394)
!4397 = !DILocation(line: 1458, column: 9, scope: !4337)
!4398 = !DILocation(line: 1459, column: 2, scope: !4394)
!4399 = !DILocation(line: 1460, column: 9, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1460, column: 9)
!4401 = !DILocation(line: 1460, column: 14, scope: !4400)
!4402 = !DILocation(line: 1460, column: 19, scope: !4400)
!4403 = !DILocation(line: 1460, column: 9, scope: !4337)
!4404 = !DILocation(line: 1461, column: 22, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4400, file: !2, line: 1460, column: 42)
!4406 = !DILocation(line: 1461, column: 39, scope: !4405)
!4407 = !DILocation(line: 1461, column: 2, scope: !4405)
!4408 = !DILocation(line: 1462, column: 2, scope: !4405)
!4409 = !DILocation(line: 1464, column: 9, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1464, column: 9)
!4411 = !DILocation(line: 1464, column: 14, scope: !4410)
!4412 = !DILocation(line: 1464, column: 19, scope: !4410)
!4413 = !DILocation(line: 1464, column: 9, scope: !4337)
!4414 = !DILocation(line: 1465, column: 26, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4410, file: !2, line: 1464, column: 36)
!4416 = !DILocation(line: 1465, column: 44, scope: !4415)
!4417 = !DILocation(line: 1465, column: 9, scope: !4415)
!4418 = !DILocation(line: 1466, column: 2, scope: !4415)
!4419 = !DILocation(line: 1468, column: 9, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1468, column: 9)
!4421 = !DILocation(line: 1468, column: 14, scope: !4420)
!4422 = !DILocation(line: 1468, column: 19, scope: !4420)
!4423 = !DILocation(line: 1468, column: 9, scope: !4337)
!4424 = !DILocation(line: 1469, column: 33, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4420, file: !2, line: 1468, column: 46)
!4426 = !DILocation(line: 1469, column: 39, scope: !4425)
!4427 = !DILocation(line: 1469, column: 44, scope: !4425)
!4428 = !DILocation(line: 1469, column: 9, scope: !4425)
!4429 = !DILocation(line: 1470, column: 2, scope: !4425)
!4430 = !DILocation(line: 1472, column: 11, scope: !4337)
!4431 = !DILocation(line: 1472, column: 17, scope: !4337)
!4432 = !DILocation(line: 1472, column: 9, scope: !4337)
!4433 = !DILocation(line: 1473, column: 9, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1473, column: 9)
!4435 = !DILocation(line: 1473, column: 14, scope: !4434)
!4436 = !DILocation(line: 1473, column: 19, scope: !4434)
!4437 = !DILocation(line: 1473, column: 9, scope: !4337)
!4438 = !DILocation(line: 1474, column: 31, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4434, file: !2, line: 1473, column: 40)
!4440 = !DILocation(line: 1474, column: 36, scope: !4439)
!4441 = !DILocation(line: 1474, column: 60, scope: !4439)
!4442 = !DILocation(line: 1474, column: 9, scope: !4439)
!4443 = !DILocation(line: 1475, column: 2, scope: !4439)
!4444 = !DILocation(line: 1477, column: 9, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1477, column: 9)
!4446 = !DILocation(line: 1477, column: 14, scope: !4445)
!4447 = !DILocation(line: 1477, column: 19, scope: !4445)
!4448 = !DILocation(line: 1477, column: 9, scope: !4337)
!4449 = !DILocation(line: 1478, column: 33, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !2, line: 1477, column: 42)
!4451 = !DILocation(line: 1478, column: 38, scope: !4450)
!4452 = !DILocation(line: 1478, column: 64, scope: !4450)
!4453 = !DILocation(line: 1478, column: 9, scope: !4450)
!4454 = !DILocation(line: 1479, column: 2, scope: !4450)
!4455 = !DILocation(line: 1481, column: 9, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1481, column: 9)
!4457 = !DILocation(line: 1481, column: 14, scope: !4456)
!4458 = !DILocation(line: 1481, column: 19, scope: !4456)
!4459 = !DILocation(line: 1481, column: 9, scope: !4337)
!4460 = !DILocation(line: 1482, column: 30, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4456, file: !2, line: 1481, column: 39)
!4462 = !DILocation(line: 1482, column: 35, scope: !4461)
!4463 = !DILocation(line: 1482, column: 58, scope: !4461)
!4464 = !DILocation(line: 1482, column: 9, scope: !4461)
!4465 = !DILocation(line: 1483, column: 2, scope: !4461)
!4466 = !DILocation(line: 1485, column: 9, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1485, column: 9)
!4468 = !DILocation(line: 1485, column: 14, scope: !4467)
!4469 = !DILocation(line: 1485, column: 19, scope: !4467)
!4470 = !DILocation(line: 1485, column: 9, scope: !4337)
!4471 = !DILocation(line: 1486, column: 6, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !2, line: 1486, column: 6)
!4473 = distinct !DILexicalBlock(scope: !4467, file: !2, line: 1485, column: 37)
!4474 = !DILocation(line: 1486, column: 11, scope: !4472)
!4475 = !DILocation(line: 1486, column: 19, scope: !4472)
!4476 = !DILocation(line: 1486, column: 6, scope: !4473)
!4477 = !DILocation(line: 1487, column: 11, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !2, line: 1487, column: 10)
!4479 = distinct !DILexicalBlock(scope: !4472, file: !2, line: 1486, column: 28)
!4480 = !DILocation(line: 1487, column: 16, scope: !4478)
!4481 = !DILocation(line: 1487, column: 21, scope: !4478)
!4482 = !DILocation(line: 1487, column: 39, scope: !4478)
!4483 = !DILocation(line: 1488, column: 4, scope: !4478)
!4484 = !DILocation(line: 1488, column: 9, scope: !4478)
!4485 = !DILocation(line: 1488, column: 14, scope: !4478)
!4486 = !DILocation(line: 1487, column: 10, scope: !4479)
!4487 = !DILocation(line: 1489, column: 44, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4478, file: !2, line: 1488, column: 38)
!4489 = !DILocation(line: 1489, column: 49, scope: !4488)
!4490 = !DILocation(line: 1489, column: 54, scope: !4488)
!4491 = !DILocation(line: 1489, column: 63, scope: !4488)
!4492 = !DILocation(line: 1489, column: 69, scope: !4488)
!4493 = !DILocation(line: 1489, column: 17, scope: !4488)
!4494 = !DILocation(line: 1490, column: 6, scope: !4488)
!4495 = !DILocation(line: 1494, column: 30, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4478, file: !2, line: 1490, column: 13)
!4497 = !DILocation(line: 1494, column: 50, scope: !4496)
!4498 = !DILocation(line: 1494, column: 55, scope: !4496)
!4499 = !DILocation(line: 1494, column: 3, scope: !4496)
!4500 = !DILocation(line: 1496, column: 2, scope: !4479)
!4501 = !DILocation(line: 1498, column: 2, scope: !4473)
!4502 = !DILocation(line: 1500, column: 9, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1500, column: 9)
!4504 = !DILocation(line: 1500, column: 14, scope: !4503)
!4505 = !DILocation(line: 1500, column: 19, scope: !4503)
!4506 = !DILocation(line: 1500, column: 9, scope: !4337)
!4507 = !DILocation(line: 1501, column: 6, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !2, line: 1501, column: 6)
!4509 = distinct !DILexicalBlock(scope: !4503, file: !2, line: 1500, column: 35)
!4510 = !DILocation(line: 1501, column: 11, scope: !4508)
!4511 = !DILocation(line: 1501, column: 19, scope: !4508)
!4512 = !DILocation(line: 1501, column: 6, scope: !4509)
!4513 = !DILocation(line: 1502, column: 27, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4508, file: !2, line: 1501, column: 28)
!4515 = !DILocation(line: 1502, column: 6, scope: !4514)
!4516 = !DILocation(line: 1503, column: 33, scope: !4514)
!4517 = !DILocation(line: 1503, column: 52, scope: !4514)
!4518 = !DILocation(line: 1503, column: 57, scope: !4514)
!4519 = !DILocation(line: 1503, column: 6, scope: !4514)
!4520 = !DILocation(line: 1504, column: 10, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4514, file: !2, line: 1504, column: 10)
!4522 = !DILocation(line: 1504, column: 15, scope: !4521)
!4523 = !DILocation(line: 1504, column: 23, scope: !4521)
!4524 = !DILocation(line: 1504, column: 10, scope: !4514)
!4525 = !DILocation(line: 1505, column: 24, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4521, file: !2, line: 1504, column: 32)
!4527 = !DILocation(line: 1505, column: 3, scope: !4526)
!4528 = !DILocation(line: 1506, column: 30, scope: !4526)
!4529 = !DILocation(line: 1506, column: 49, scope: !4526)
!4530 = !DILocation(line: 1506, column: 54, scope: !4526)
!4531 = !DILocation(line: 1506, column: 3, scope: !4526)
!4532 = !DILocation(line: 1507, column: 6, scope: !4526)
!4533 = !DILocation(line: 1508, column: 27, scope: !4514)
!4534 = !DILocation(line: 1508, column: 6, scope: !4514)
!4535 = !DILocation(line: 1509, column: 2, scope: !4514)
!4536 = !DILocation(line: 1510, column: 27, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4508, file: !2, line: 1509, column: 9)
!4538 = !DILocation(line: 1510, column: 6, scope: !4537)
!4539 = !DILocation(line: 1511, column: 33, scope: !4537)
!4540 = !DILocation(line: 1511, column: 52, scope: !4537)
!4541 = !DILocation(line: 1511, column: 57, scope: !4537)
!4542 = !DILocation(line: 1511, column: 6, scope: !4537)
!4543 = !DILocation(line: 1512, column: 27, scope: !4537)
!4544 = !DILocation(line: 1512, column: 6, scope: !4537)
!4545 = !DILocation(line: 1514, column: 2, scope: !4509)
!4546 = !DILocation(line: 1516, column: 9, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1516, column: 9)
!4548 = !DILocation(line: 1516, column: 14, scope: !4547)
!4549 = !DILocation(line: 1516, column: 19, scope: !4547)
!4550 = !DILocation(line: 1516, column: 9, scope: !4337)
!4551 = !DILocation(line: 1517, column: 6, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2, line: 1517, column: 6)
!4553 = distinct !DILexicalBlock(scope: !4547, file: !2, line: 1516, column: 40)
!4554 = !DILocation(line: 1517, column: 11, scope: !4552)
!4555 = !DILocation(line: 1517, column: 19, scope: !4552)
!4556 = !DILocation(line: 1517, column: 6, scope: !4553)
!4557 = !DILocation(line: 1518, column: 27, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4552, file: !2, line: 1517, column: 28)
!4559 = !DILocation(line: 1518, column: 6, scope: !4558)
!4560 = !DILocation(line: 1519, column: 33, scope: !4558)
!4561 = !DILocation(line: 1519, column: 52, scope: !4558)
!4562 = !DILocation(line: 1519, column: 57, scope: !4558)
!4563 = !DILocation(line: 1519, column: 6, scope: !4558)
!4564 = !DILocation(line: 1520, column: 27, scope: !4558)
!4565 = !DILocation(line: 1520, column: 6, scope: !4558)
!4566 = !DILocation(line: 1521, column: 2, scope: !4558)
!4567 = !DILocation(line: 1522, column: 2, scope: !4553)
!4568 = !DILocation(line: 1524, column: 9, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1524, column: 9)
!4570 = !DILocation(line: 1524, column: 14, scope: !4569)
!4571 = !DILocation(line: 1524, column: 19, scope: !4569)
!4572 = !DILocation(line: 1524, column: 9, scope: !4337)
!4573 = !DILocation(line: 1525, column: 30, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4569, file: !2, line: 1524, column: 43)
!4575 = !DILocation(line: 1525, column: 9, scope: !4574)
!4576 = !DILocation(line: 1526, column: 29, scope: !4574)
!4577 = !DILocation(line: 1526, column: 48, scope: !4574)
!4578 = !DILocation(line: 1526, column: 53, scope: !4574)
!4579 = !DILocation(line: 1526, column: 2, scope: !4574)
!4580 = !DILocation(line: 1527, column: 30, scope: !4574)
!4581 = !DILocation(line: 1527, column: 9, scope: !4574)
!4582 = !DILocation(line: 1528, column: 2, scope: !4574)
!4583 = !DILocation(line: 1530, column: 9, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1530, column: 9)
!4585 = !DILocation(line: 1530, column: 14, scope: !4584)
!4586 = !DILocation(line: 1530, column: 19, scope: !4584)
!4587 = !DILocation(line: 1530, column: 9, scope: !4337)
!4588 = !DILocation(line: 1531, column: 6, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !2, line: 1531, column: 6)
!4590 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 1530, column: 46)
!4591 = !DILocation(line: 1531, column: 11, scope: !4589)
!4592 = !DILocation(line: 1531, column: 19, scope: !4589)
!4593 = !DILocation(line: 1531, column: 27, scope: !4589)
!4594 = !DILocation(line: 1531, column: 31, scope: !4589)
!4595 = !DILocation(line: 1531, column: 36, scope: !4589)
!4596 = !DILocation(line: 1531, column: 30, scope: !4589)
!4597 = !DILocation(line: 1531, column: 44, scope: !4589)
!4598 = !DILocation(line: 1531, column: 6, scope: !4590)
!4599 = !DILocation(line: 1532, column: 27, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4589, file: !2, line: 1531, column: 53)
!4601 = !DILocation(line: 1532, column: 6, scope: !4600)
!4602 = !DILocation(line: 1533, column: 2, scope: !4600)
!4603 = !DILocation(line: 1534, column: 20, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4589, file: !2, line: 1533, column: 9)
!4605 = !DILocation(line: 1534, column: 25, scope: !4604)
!4606 = !DILocation(line: 1534, column: 18, scope: !4604)
!4607 = !DILocation(line: 1534, column: 12, scope: !4604)
!4608 = !DILocation(line: 1535, column: 6, scope: !4604)
!4609 = !DILocation(line: 1535, column: 14, scope: !4604)
!4610 = !DILocation(line: 1535, column: 13, scope: !4604)
!4611 = !DILocation(line: 1535, column: 18, scope: !4604)
!4612 = !DILocation(line: 1536, column: 8, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !2, line: 1536, column: 7)
!4614 = distinct !DILexicalBlock(scope: !4604, file: !2, line: 1535, column: 27)
!4615 = !DILocation(line: 1536, column: 7, scope: !4613)
!4616 = !DILocation(line: 1536, column: 12, scope: !4613)
!4617 = !DILocation(line: 1536, column: 19, scope: !4613)
!4618 = !DILocation(line: 1536, column: 24, scope: !4613)
!4619 = !DILocation(line: 1536, column: 28, scope: !4613)
!4620 = !DILocation(line: 1536, column: 22, scope: !4613)
!4621 = !DILocation(line: 1536, column: 33, scope: !4613)
!4622 = !DILocation(line: 1536, column: 40, scope: !4613)
!4623 = !DILocation(line: 1536, column: 45, scope: !4613)
!4624 = !DILocation(line: 1536, column: 49, scope: !4613)
!4625 = !DILocation(line: 1536, column: 43, scope: !4613)
!4626 = !DILocation(line: 1536, column: 54, scope: !4613)
!4627 = !DILocation(line: 1536, column: 7, scope: !4614)
!4628 = !DILocation(line: 1537, column: 13, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 1536, column: 62)
!4630 = !DILocation(line: 1537, column: 17, scope: !4629)
!4631 = !DILocation(line: 1537, column: 11, scope: !4629)
!4632 = !DILocation(line: 1538, column: 28, scope: !4629)
!4633 = !DILocation(line: 1538, column: 7, scope: !4629)
!4634 = !DILocation(line: 1539, column: 28, scope: !4629)
!4635 = !DILocation(line: 1539, column: 33, scope: !4629)
!4636 = !DILocation(line: 1539, column: 39, scope: !4629)
!4637 = !DILocation(line: 1539, column: 37, scope: !4629)
!4638 = !DILocation(line: 1539, column: 60, scope: !4629)
!4639 = !DILocation(line: 1539, column: 7, scope: !4629)
!4640 = !DILocation(line: 1540, column: 28, scope: !4629)
!4641 = !DILocation(line: 1540, column: 7, scope: !4629)
!4642 = !DILocation(line: 1541, column: 15, scope: !4629)
!4643 = !DILocation(line: 1541, column: 13, scope: !4629)
!4644 = !DILocation(line: 1542, column: 3, scope: !4629)
!4645 = !DILocation(line: 1543, column: 6, scope: !4614)
!4646 = distinct !{!4646, !4608, !4647, !1687}
!4647 = !DILocation(line: 1544, column: 6, scope: !4604)
!4648 = !DILocation(line: 1545, column: 10, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4604, file: !2, line: 1545, column: 10)
!4650 = !DILocation(line: 1545, column: 19, scope: !4649)
!4651 = !DILocation(line: 1545, column: 16, scope: !4649)
!4652 = !DILocation(line: 1545, column: 10, scope: !4604)
!4653 = !DILocation(line: 1546, column: 24, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !2, line: 1545, column: 24)
!4655 = !DILocation(line: 1546, column: 3, scope: !4654)
!4656 = !DILocation(line: 1547, column: 30, scope: !4654)
!4657 = !DILocation(line: 1547, column: 49, scope: !4654)
!4658 = !DILocation(line: 1547, column: 3, scope: !4654)
!4659 = !DILocation(line: 1548, column: 24, scope: !4654)
!4660 = !DILocation(line: 1548, column: 3, scope: !4654)
!4661 = !DILocation(line: 1549, column: 6, scope: !4654)
!4662 = !DILocation(line: 1551, column: 2, scope: !4590)
!4663 = !DILocation(line: 1553, column: 9, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1553, column: 9)
!4665 = !DILocation(line: 1553, column: 14, scope: !4664)
!4666 = !DILocation(line: 1553, column: 19, scope: !4664)
!4667 = !DILocation(line: 1553, column: 9, scope: !4337)
!4668 = !DILocation(line: 1554, column: 27, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4664, file: !2, line: 1553, column: 42)
!4670 = !DILocation(line: 1554, column: 46, scope: !4669)
!4671 = !DILocation(line: 1554, column: 9, scope: !4669)
!4672 = !DILocation(line: 1555, column: 2, scope: !4669)
!4673 = !DILocation(line: 1558, column: 14, scope: !4337)
!4674 = !DILocation(line: 1558, column: 20, scope: !4337)
!4675 = !DILocation(line: 1558, column: 12, scope: !4337)
!4676 = !DILocation(line: 1559, column: 9, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1559, column: 9)
!4678 = !DILocation(line: 1559, column: 16, scope: !4677)
!4679 = !DILocation(line: 1559, column: 9, scope: !4337)
!4680 = !DILocation(line: 1560, column: 8, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4677, file: !2, line: 1559, column: 22)
!4682 = !DILocation(line: 1560, column: 13, scope: !4681)
!4683 = !DILocation(line: 1560, column: 6, scope: !4681)
!4684 = !DILocation(line: 1561, column: 2, scope: !4681)
!4685 = !DILocation(line: 1561, column: 9, scope: !4681)
!4686 = !DILocation(line: 1561, column: 13, scope: !4681)
!4687 = !DILocation(line: 1562, column: 11, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2, line: 1562, column: 10)
!4689 = distinct !DILexicalBlock(scope: !4681, file: !2, line: 1561, column: 22)
!4690 = !DILocation(line: 1562, column: 16, scope: !4688)
!4691 = !DILocation(line: 1562, column: 21, scope: !4688)
!4692 = !DILocation(line: 1562, column: 39, scope: !4688)
!4693 = !DILocation(line: 1563, column: 4, scope: !4688)
!4694 = !DILocation(line: 1563, column: 9, scope: !4688)
!4695 = !DILocation(line: 1563, column: 14, scope: !4688)
!4696 = !DILocation(line: 1562, column: 10, scope: !4689)
!4697 = !DILocation(line: 1564, column: 10, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4688, file: !2, line: 1563, column: 39)
!4699 = !DILocation(line: 1565, column: 3, scope: !4698)
!4700 = !DILocation(line: 1567, column: 12, scope: !4689)
!4701 = !DILocation(line: 1567, column: 17, scope: !4689)
!4702 = !DILocation(line: 1567, column: 10, scope: !4689)
!4703 = distinct !{!4703, !4684, !4704, !1687}
!4704 = !DILocation(line: 1568, column: 2, scope: !4681)
!4705 = !DILocation(line: 1569, column: 5, scope: !4681)
!4706 = !DILocation(line: 1570, column: 26, scope: !4337)
!4707 = !DILocation(line: 1570, column: 5, scope: !4337)
!4708 = !DILocation(line: 1571, column: 10, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1571, column: 9)
!4710 = !DILocation(line: 1571, column: 15, scope: !4709)
!4711 = !DILocation(line: 1571, column: 18, scope: !4709)
!4712 = !DILocation(line: 1571, column: 27, scope: !4709)
!4713 = !DILocation(line: 1571, column: 31, scope: !4709)
!4714 = !DILocation(line: 1571, column: 36, scope: !4709)
!4715 = !DILocation(line: 1571, column: 40, scope: !4709)
!4716 = !DILocation(line: 1571, column: 47, scope: !4709)
!4717 = !DILocation(line: 1571, column: 9, scope: !4337)
!4718 = !DILocation(line: 1572, column: 36, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4709, file: !2, line: 1571, column: 57)
!4720 = !DILocation(line: 1572, column: 55, scope: !4719)
!4721 = !DILocation(line: 1572, column: 60, scope: !4719)
!4722 = !DILocation(line: 1572, column: 64, scope: !4719)
!4723 = !DILocation(line: 1572, column: 9, scope: !4719)
!4724 = !DILocation(line: 1573, column: 23, scope: !4719)
!4725 = !DILocation(line: 1573, column: 2, scope: !4719)
!4726 = !DILocation(line: 1574, column: 5, scope: !4719)
!4727 = !DILocation(line: 1576, column: 32, scope: !4337)
!4728 = !DILocation(line: 1576, column: 51, scope: !4337)
!4729 = !DILocation(line: 1576, column: 56, scope: !4337)
!4730 = !DILocation(line: 1576, column: 5, scope: !4337)
!4731 = !DILocation(line: 1577, column: 9, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1577, column: 9)
!4733 = !DILocation(line: 1577, column: 14, scope: !4732)
!4734 = !DILocation(line: 1577, column: 9, scope: !4337)
!4735 = !DILocation(line: 1578, column: 33, scope: !4732)
!4736 = !DILocation(line: 1578, column: 39, scope: !4732)
!4737 = !DILocation(line: 1578, column: 44, scope: !4732)
!4738 = !DILocation(line: 1578, column: 9, scope: !4732)
!4739 = !DILocation(line: 1579, column: 22, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1579, column: 9)
!4741 = !DILocation(line: 1579, column: 27, scope: !4740)
!4742 = !DILocation(line: 1579, column: 10, scope: !4740)
!4743 = !DILocation(line: 1579, column: 50, scope: !4740)
!4744 = !DILocation(line: 1580, column: 3, scope: !4740)
!4745 = !DILocation(line: 1580, column: 8, scope: !4740)
!4746 = !DILocation(line: 1580, column: 11, scope: !4740)
!4747 = !DILocation(line: 1580, column: 20, scope: !4740)
!4748 = !DILocation(line: 1580, column: 24, scope: !4740)
!4749 = !DILocation(line: 1580, column: 29, scope: !4740)
!4750 = !DILocation(line: 1580, column: 35, scope: !4740)
!4751 = !DILocation(line: 1579, column: 9, scope: !4337)
!4752 = !DILocation(line: 1584, column: 29, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4740, file: !2, line: 1580, column: 46)
!4754 = !DILocation(line: 1584, column: 2, scope: !4753)
!4755 = !DILocation(line: 1586, column: 5, scope: !4753)
!4756 = !DILocation(line: 1587, column: 9, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1587, column: 9)
!4758 = !DILocation(line: 1587, column: 14, scope: !4757)
!4759 = !DILocation(line: 1587, column: 25, scope: !4757)
!4760 = !DILocation(line: 1587, column: 9, scope: !4337)
!4761 = !DILocation(line: 1588, column: 33, scope: !4757)
!4762 = !DILocation(line: 1588, column: 39, scope: !4757)
!4763 = !DILocation(line: 1588, column: 44, scope: !4757)
!4764 = !DILocation(line: 1588, column: 9, scope: !4757)
!4765 = !DILocation(line: 1590, column: 10, scope: !4352)
!4766 = !DILocation(line: 1590, column: 15, scope: !4352)
!4767 = !DILocation(line: 1590, column: 20, scope: !4352)
!4768 = !DILocation(line: 1590, column: 41, scope: !4352)
!4769 = !DILocation(line: 1591, column: 10, scope: !4352)
!4770 = !DILocation(line: 1591, column: 15, scope: !4352)
!4771 = !{!2527, !1472, i64 40}
!4772 = !DILocation(line: 1591, column: 22, scope: !4352)
!4773 = !DILocation(line: 1591, column: 31, scope: !4352)
!4774 = !DILocation(line: 1592, column: 10, scope: !4352)
!4775 = !DILocation(line: 1592, column: 15, scope: !4352)
!4776 = !DILocation(line: 1592, column: 23, scope: !4352)
!4777 = !DILocation(line: 1592, column: 46, scope: !4352)
!4778 = !DILocation(line: 1592, column: 51, scope: !4352)
!4779 = !DILocation(line: 1592, column: 30, scope: !4352)
!4780 = !DILocation(line: 1592, column: 56, scope: !4352)
!4781 = !DILocation(line: 1593, column: 21, scope: !4352)
!4782 = !DILocation(line: 1593, column: 26, scope: !4352)
!4783 = !DILocation(line: 1593, column: 9, scope: !4352)
!4784 = !DILocation(line: 1593, column: 48, scope: !4352)
!4785 = !DILocation(line: 1594, column: 21, scope: !4352)
!4786 = !DILocation(line: 1594, column: 26, scope: !4352)
!4787 = !DILocation(line: 1594, column: 34, scope: !4352)
!4788 = !DILocation(line: 1594, column: 9, scope: !4352)
!4789 = !DILocation(line: 1590, column: 9, scope: !4337)
!4790 = !DILocation(line: 1596, column: 15, scope: !4351)
!4791 = !DILocation(line: 1596, column: 20, scope: !4351)
!4792 = !DILocation(line: 1596, column: 13, scope: !4351)
!4793 = !DILocation(line: 1597, column: 9, scope: !4351)
!4794 = !DILocation(line: 1597, column: 16, scope: !4351)
!4795 = !DILocation(line: 1597, column: 20, scope: !4351)
!4796 = !DILocation(line: 1598, column: 29, scope: !4349)
!4797 = !DILocation(line: 1598, column: 34, scope: !4349)
!4798 = !DILocation(line: 1598, column: 17, scope: !4349)
!4799 = !DILocation(line: 1598, column: 17, scope: !4350)
!4800 = !DILocation(line: 1599, column: 17, scope: !4348)
!4801 = !DILocation(line: 1599, column: 26, scope: !4348)
!4802 = !DILocation(line: 1601, column: 40, scope: !4348)
!4803 = !DILocation(line: 1601, column: 29, scope: !4348)
!4804 = !DILocation(line: 1601, column: 27, scope: !4348)
!4805 = !DILocation(line: 1602, column: 21, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4348, file: !2, line: 1602, column: 21)
!4807 = !DILocation(line: 1602, column: 31, scope: !4806)
!4808 = !DILocation(line: 1602, column: 21, scope: !4348)
!4809 = !DILocation(line: 1603, column: 39, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !2, line: 1603, column: 25)
!4811 = distinct !DILexicalBlock(scope: !4806, file: !2, line: 1602, column: 40)
!4812 = !DILocation(line: 1603, column: 25, scope: !4810)
!4813 = !DILocation(line: 1603, column: 74, scope: !4810)
!4814 = !DILocation(line: 1603, column: 25, scope: !4811)
!4815 = !DILocation(line: 1604, column: 25, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4810, file: !2, line: 1603, column: 80)
!4817 = !DILocation(line: 1604, column: 33, scope: !4816)
!4818 = !DILocation(line: 1605, column: 25, scope: !4816)
!4819 = !DILocation(line: 1607, column: 21, scope: !4811)
!4820 = !DILocation(line: 1607, column: 29, scope: !4811)
!4821 = !DILocation(line: 1608, column: 17, scope: !4811)
!4822 = !DILocation(line: 1609, column: 13, scope: !4349)
!4823 = !DILocation(line: 1609, column: 13, scope: !4348)
!4824 = !DILocation(line: 1610, column: 19, scope: !4350)
!4825 = !DILocation(line: 1610, column: 24, scope: !4350)
!4826 = !DILocation(line: 1610, column: 17, scope: !4350)
!4827 = distinct !{!4827, !4793, !4828, !1687}
!4828 = !DILocation(line: 1611, column: 9, scope: !4351)
!4829 = !DILocation(line: 1612, column: 13, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4351, file: !2, line: 1612, column: 13)
!4831 = !DILocation(line: 1612, column: 17, scope: !4830)
!4832 = !DILocation(line: 1612, column: 13, scope: !4351)
!4833 = !DILocation(line: 1613, column: 21, scope: !4830)
!4834 = !DILocation(line: 1613, column: 13, scope: !4830)
!4835 = !DILocation(line: 1614, column: 5, scope: !4351)
!4836 = !DILocation(line: 1616, column: 10, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1616, column: 9)
!4838 = !DILocation(line: 1616, column: 15, scope: !4837)
!4839 = !DILocation(line: 1616, column: 20, scope: !4837)
!4840 = !DILocation(line: 1616, column: 41, scope: !4837)
!4841 = !DILocation(line: 1616, column: 45, scope: !4837)
!4842 = !DILocation(line: 1616, column: 50, scope: !4837)
!4843 = !DILocation(line: 1616, column: 59, scope: !4837)
!4844 = !DILocation(line: 1616, column: 9, scope: !4337)
!4845 = !DILocation(line: 1617, column: 8, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !2, line: 1617, column: 6)
!4847 = distinct !DILexicalBlock(scope: !4837, file: !2, line: 1616, column: 69)
!4848 = !DILocation(line: 1617, column: 13, scope: !4846)
!4849 = !DILocation(line: 1617, column: 16, scope: !4846)
!4850 = !DILocation(line: 1617, column: 25, scope: !4846)
!4851 = !DILocation(line: 1617, column: 29, scope: !4846)
!4852 = !DILocation(line: 1617, column: 34, scope: !4846)
!4853 = !DILocation(line: 1617, column: 38, scope: !4846)
!4854 = !DILocation(line: 1617, column: 45, scope: !4846)
!4855 = !DILocation(line: 1617, column: 55, scope: !4846)
!4856 = !DILocation(line: 1618, column: 21, scope: !4846)
!4857 = !DILocation(line: 1618, column: 8, scope: !4846)
!4858 = !DILocation(line: 1618, column: 26, scope: !4846)
!4859 = !DILocation(line: 1618, column: 32, scope: !4846)
!4860 = !DILocation(line: 1618, column: 36, scope: !4846)
!4861 = !DILocation(line: 1618, column: 44, scope: !4846)
!4862 = !DILocation(line: 1617, column: 6, scope: !4847)
!4863 = !DILocation(line: 1622, column: 27, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4846, file: !2, line: 1618, column: 52)
!4865 = !DILocation(line: 1622, column: 6, scope: !4864)
!4866 = !DILocation(line: 1623, column: 2, scope: !4864)
!4867 = !DILocation(line: 1624, column: 7, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !2, line: 1624, column: 7)
!4869 = distinct !DILexicalBlock(scope: !4846, file: !2, line: 1623, column: 9)
!4870 = !DILocation(line: 1624, column: 15, scope: !4868)
!4871 = !DILocation(line: 1624, column: 7, scope: !4869)
!4872 = !DILocation(line: 1625, column: 25, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4868, file: !2, line: 1624, column: 21)
!4874 = !DILocation(line: 1625, column: 4, scope: !4873)
!4875 = !DILocation(line: 1626, column: 8, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !2, line: 1626, column: 8)
!4877 = !DILocation(line: 1626, column: 14, scope: !4876)
!4878 = !DILocation(line: 1626, column: 21, scope: !4876)
!4879 = !DILocation(line: 1626, column: 8, scope: !4873)
!4880 = !DILocation(line: 1627, column: 26, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4876, file: !2, line: 1626, column: 27)
!4882 = !DILocation(line: 1627, column: 5, scope: !4881)
!4883 = !DILocation(line: 1628, column: 9, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4881, file: !2, line: 1628, column: 9)
!4885 = !DILocation(line: 1628, column: 9, scope: !4881)
!4886 = !DILocation(line: 1629, column: 27, scope: !4884)
!4887 = !DILocation(line: 1629, column: 32, scope: !4884)
!4888 = !DILocation(line: 1629, column: 38, scope: !4884)
!4889 = !DILocation(line: 1630, column: 7, scope: !4884)
!4890 = !DILocation(line: 1630, column: 13, scope: !4884)
!4891 = !DILocation(line: 1630, column: 19, scope: !4884)
!4892 = !DILocation(line: 1630, column: 25, scope: !4884)
!4893 = !DILocation(line: 1630, column: 31, scope: !4884)
!4894 = !DILocation(line: 1630, column: 23, scope: !4884)
!4895 = !DILocation(line: 1631, column: 6, scope: !4884)
!4896 = !DILocation(line: 1631, column: 12, scope: !4884)
!4897 = !DILocation(line: 1631, column: 24, scope: !4884)
!4898 = !DILocation(line: 1631, column: 30, scope: !4884)
!4899 = !DILocation(line: 1631, column: 36, scope: !4884)
!4900 = !DILocation(line: 1629, column: 50, scope: !4884)
!4901 = !DILocation(line: 1631, column: 42, scope: !4884)
!4902 = !DILocation(line: 1631, column: 48, scope: !4884)
!4903 = !DILocation(line: 1629, column: 6, scope: !4884)
!4904 = !DILocation(line: 1632, column: 4, scope: !4881)
!4905 = !DILocation(line: 1633, column: 31, scope: !4873)
!4906 = !DILocation(line: 1633, column: 4, scope: !4873)
!4907 = !DILocation(line: 1635, column: 8, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4873, file: !2, line: 1635, column: 8)
!4909 = !DILocation(line: 1635, column: 14, scope: !4908)
!4910 = !DILocation(line: 1635, column: 8, scope: !4873)
!4911 = !DILocation(line: 1636, column: 32, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !2, line: 1635, column: 24)
!4913 = !DILocation(line: 1636, column: 51, scope: !4912)
!4914 = !DILocation(line: 1636, column: 57, scope: !4912)
!4915 = !DILocation(line: 1636, column: 5, scope: !4912)
!4916 = !DILocation(line: 1637, column: 4, scope: !4912)
!4917 = !DILocation(line: 1638, column: 26, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4908, file: !2, line: 1637, column: 11)
!4919 = !DILocation(line: 1638, column: 5, scope: !4918)
!4920 = !DILocation(line: 1640, column: 25, scope: !4873)
!4921 = !DILocation(line: 1640, column: 4, scope: !4873)
!4922 = !DILocation(line: 1641, column: 8, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4873, file: !2, line: 1641, column: 8)
!4924 = !DILocation(line: 1641, column: 14, scope: !4923)
!4925 = !DILocation(line: 1641, column: 21, scope: !4923)
!4926 = !DILocation(line: 1641, column: 8, scope: !4873)
!4927 = !DILocation(line: 1642, column: 26, scope: !4923)
!4928 = !DILocation(line: 1642, column: 5, scope: !4923)
!4929 = !DILocation(line: 1643, column: 3, scope: !4873)
!4930 = !DILocation(line: 1644, column: 25, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4868, file: !2, line: 1643, column: 10)
!4932 = !DILocation(line: 1644, column: 4, scope: !4931)
!4933 = !DILocation(line: 1649, column: 27, scope: !4869)
!4934 = !DILocation(line: 1649, column: 6, scope: !4869)
!4935 = !DILocation(line: 1650, column: 11, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4869, file: !2, line: 1650, column: 10)
!4937 = !DILocation(line: 1650, column: 16, scope: !4936)
!4938 = !DILocation(line: 1650, column: 19, scope: !4936)
!4939 = !DILocation(line: 1650, column: 28, scope: !4936)
!4940 = !DILocation(line: 1650, column: 32, scope: !4936)
!4941 = !DILocation(line: 1650, column: 37, scope: !4936)
!4942 = !DILocation(line: 1650, column: 41, scope: !4936)
!4943 = !DILocation(line: 1650, column: 48, scope: !4936)
!4944 = !DILocation(line: 1650, column: 10, scope: !4869)
!4945 = !DILocation(line: 1651, column: 30, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4936, file: !2, line: 1650, column: 58)
!4947 = !DILocation(line: 1651, column: 49, scope: !4946)
!4948 = !DILocation(line: 1651, column: 54, scope: !4946)
!4949 = !DILocation(line: 1651, column: 58, scope: !4946)
!4950 = !DILocation(line: 1651, column: 3, scope: !4946)
!4951 = !DILocation(line: 1652, column: 24, scope: !4946)
!4952 = !DILocation(line: 1652, column: 3, scope: !4946)
!4953 = !DILocation(line: 1653, column: 6, scope: !4946)
!4954 = !DILocation(line: 1654, column: 33, scope: !4869)
!4955 = !DILocation(line: 1654, column: 52, scope: !4869)
!4956 = !DILocation(line: 1654, column: 57, scope: !4869)
!4957 = !DILocation(line: 1654, column: 6, scope: !4869)
!4958 = !DILocation(line: 1655, column: 27, scope: !4869)
!4959 = !DILocation(line: 1655, column: 6, scope: !4869)
!4960 = !DILocation(line: 1657, column: 2, scope: !4847)
!4961 = !DILocation(line: 1659, column: 26, scope: !4337)
!4962 = !DILocation(line: 1659, column: 5, scope: !4337)
!4963 = !DILocation(line: 1660, column: 6, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1660, column: 6)
!4965 = !DILocation(line: 1660, column: 14, scope: !4964)
!4966 = !DILocation(line: 1660, column: 6, scope: !4337)
!4967 = !DILocation(line: 1661, column: 7, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !2, line: 1661, column: 7)
!4969 = distinct !DILexicalBlock(scope: !4964, file: !2, line: 1660, column: 20)
!4970 = !DILocation(line: 1661, column: 13, scope: !4968)
!4971 = !DILocation(line: 1661, column: 20, scope: !4968)
!4972 = !DILocation(line: 1661, column: 7, scope: !4969)
!4973 = !DILocation(line: 1662, column: 25, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4968, file: !2, line: 1661, column: 26)
!4975 = !DILocation(line: 1662, column: 4, scope: !4974)
!4976 = !DILocation(line: 1663, column: 8, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4974, file: !2, line: 1663, column: 8)
!4978 = !DILocation(line: 1663, column: 8, scope: !4974)
!4979 = !DILocation(line: 1664, column: 26, scope: !4977)
!4980 = !DILocation(line: 1664, column: 31, scope: !4977)
!4981 = !DILocation(line: 1664, column: 37, scope: !4977)
!4982 = !DILocation(line: 1665, column: 6, scope: !4977)
!4983 = !DILocation(line: 1665, column: 12, scope: !4977)
!4984 = !DILocation(line: 1665, column: 18, scope: !4977)
!4985 = !DILocation(line: 1665, column: 24, scope: !4977)
!4986 = !DILocation(line: 1665, column: 30, scope: !4977)
!4987 = !DILocation(line: 1665, column: 22, scope: !4977)
!4988 = !DILocation(line: 1666, column: 5, scope: !4977)
!4989 = !DILocation(line: 1666, column: 11, scope: !4977)
!4990 = !DILocation(line: 1666, column: 23, scope: !4977)
!4991 = !DILocation(line: 1666, column: 29, scope: !4977)
!4992 = !DILocation(line: 1666, column: 35, scope: !4977)
!4993 = !DILocation(line: 1664, column: 49, scope: !4977)
!4994 = !DILocation(line: 1666, column: 41, scope: !4977)
!4995 = !DILocation(line: 1666, column: 47, scope: !4977)
!4996 = !DILocation(line: 1664, column: 5, scope: !4977)
!4997 = !DILocation(line: 1667, column: 3, scope: !4974)
!4998 = !DILocation(line: 1668, column: 30, scope: !4969)
!4999 = !DILocation(line: 1668, column: 3, scope: !4969)
!5000 = !DILocation(line: 1670, column: 7, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4969, file: !2, line: 1670, column: 7)
!5002 = !DILocation(line: 1670, column: 13, scope: !5001)
!5003 = !DILocation(line: 1670, column: 7, scope: !4969)
!5004 = !DILocation(line: 1671, column: 31, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5001, file: !2, line: 1670, column: 23)
!5006 = !DILocation(line: 1671, column: 50, scope: !5005)
!5007 = !DILocation(line: 1671, column: 56, scope: !5005)
!5008 = !DILocation(line: 1671, column: 4, scope: !5005)
!5009 = !DILocation(line: 1672, column: 3, scope: !5005)
!5010 = !DILocation(line: 1673, column: 25, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5001, file: !2, line: 1672, column: 10)
!5012 = !DILocation(line: 1673, column: 4, scope: !5011)
!5013 = !DILocation(line: 1675, column: 24, scope: !4969)
!5014 = !DILocation(line: 1675, column: 3, scope: !4969)
!5015 = !DILocation(line: 1676, column: 2, scope: !4969)
!5016 = !DILocation(line: 1677, column: 10, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1677, column: 9)
!5018 = !DILocation(line: 1677, column: 15, scope: !5017)
!5019 = !DILocation(line: 1677, column: 20, scope: !5017)
!5020 = !DILocation(line: 1677, column: 41, scope: !5017)
!5021 = !DILocation(line: 1677, column: 45, scope: !5017)
!5022 = !DILocation(line: 1677, column: 50, scope: !5017)
!5023 = !DILocation(line: 1677, column: 58, scope: !5017)
!5024 = !DILocation(line: 1677, column: 9, scope: !4337)
!5025 = !DILocation(line: 1678, column: 29, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5017, file: !2, line: 1677, column: 68)
!5027 = !DILocation(line: 1678, column: 34, scope: !5026)
!5028 = !DILocation(line: 1678, column: 39, scope: !5026)
!5029 = !DILocation(line: 1678, column: 48, scope: !5026)
!5030 = !DILocation(line: 1678, column: 54, scope: !5026)
!5031 = !DILocation(line: 1678, column: 2, scope: !5026)
!5032 = !DILocation(line: 1679, column: 5, scope: !5026)
!5033 = !DILocation(line: 1753, column: 9, scope: !4355)
!5034 = !DILocation(line: 1753, column: 14, scope: !4355)
!5035 = !DILocation(line: 1753, column: 23, scope: !4355)
!5036 = !DILocation(line: 1753, column: 9, scope: !4337)
!5037 = !DILocation(line: 1754, column: 2, scope: !4354)
!5038 = !DILocation(line: 1754, column: 6, scope: !4354)
!5039 = !DILocation(line: 1754, column: 15, scope: !4354)
!5040 = !DILocation(line: 1754, column: 21, scope: !4354)
!5041 = !DILocation(line: 1756, column: 6, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4354, file: !2, line: 1756, column: 6)
!5043 = !DILocation(line: 1756, column: 13, scope: !5042)
!5044 = !DILocation(line: 1756, column: 6, scope: !4354)
!5045 = !DILocation(line: 1756, column: 40, scope: !5042)
!5046 = !DILocation(line: 1756, column: 19, scope: !5042)
!5047 = !DILocation(line: 1757, column: 6, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4354, file: !2, line: 1757, column: 6)
!5049 = !DILocation(line: 1757, column: 12, scope: !5048)
!5050 = !DILocation(line: 1757, column: 18, scope: !5048)
!5051 = !DILocation(line: 1757, column: 6, scope: !4354)
!5052 = !DILocation(line: 1757, column: 24, scope: !5048)
!5053 = !DILocation(line: 1757, column: 30, scope: !5048)
!5054 = !DILocation(line: 1757, column: 35, scope: !5048)
!5055 = !DILocation(line: 1758, column: 17, scope: !4354)
!5056 = !DILocation(line: 1758, column: 2, scope: !4354)
!5057 = !DILocation(line: 1758, column: 8, scope: !4354)
!5058 = !DILocation(line: 1758, column: 15, scope: !4354)
!5059 = !DILocation(line: 1759, column: 26, scope: !4354)
!5060 = !DILocation(line: 1759, column: 32, scope: !4354)
!5061 = !DILocation(line: 1759, column: 37, scope: !4354)
!5062 = !DILocation(line: 1759, column: 2, scope: !4354)
!5063 = !DILocation(line: 1760, column: 6, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4354, file: !2, line: 1760, column: 6)
!5065 = !DILocation(line: 1760, column: 12, scope: !5064)
!5066 = !DILocation(line: 1760, column: 18, scope: !5064)
!5067 = !DILocation(line: 1760, column: 6, scope: !4354)
!5068 = !DILocation(line: 1760, column: 23, scope: !5064)
!5069 = !DILocation(line: 1760, column: 29, scope: !5064)
!5070 = !DILocation(line: 1760, column: 34, scope: !5064)
!5071 = !DILocation(line: 1761, column: 17, scope: !4354)
!5072 = !DILocation(line: 1761, column: 2, scope: !4354)
!5073 = !DILocation(line: 1761, column: 8, scope: !4354)
!5074 = !DILocation(line: 1761, column: 15, scope: !4354)
!5075 = !DILocation(line: 1762, column: 7, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !4354, file: !2, line: 1762, column: 6)
!5077 = !DILocation(line: 1762, column: 6, scope: !5076)
!5078 = !DILocation(line: 1762, column: 28, scope: !5076)
!5079 = !DILocation(line: 1762, column: 32, scope: !5076)
!5080 = !DILocation(line: 1762, column: 39, scope: !5076)
!5081 = !DILocation(line: 1762, column: 6, scope: !4354)
!5082 = !DILocation(line: 1763, column: 27, scope: !5076)
!5083 = !DILocation(line: 1763, column: 32, scope: !5076)
!5084 = !DILocation(line: 1763, column: 38, scope: !5076)
!5085 = !DILocation(line: 1764, column: 28, scope: !5076)
!5086 = !DILocation(line: 1764, column: 34, scope: !5076)
!5087 = !DILocation(line: 1764, column: 42, scope: !5076)
!5088 = !DILocation(line: 1764, column: 48, scope: !5076)
!5089 = !DILocation(line: 1764, column: 40, scope: !5076)
!5090 = !DILocation(line: 1765, column: 7, scope: !5076)
!5091 = !DILocation(line: 1765, column: 13, scope: !5076)
!5092 = !DILocation(line: 1765, column: 25, scope: !5076)
!5093 = !DILocation(line: 1765, column: 31, scope: !5076)
!5094 = !DILocation(line: 1763, column: 50, scope: !5076)
!5095 = !DILocation(line: 1766, column: 6, scope: !5076)
!5096 = !DILocation(line: 1766, column: 12, scope: !5076)
!5097 = !DILocation(line: 1763, column: 6, scope: !5076)
!5098 = !DILocation(line: 1767, column: 5, scope: !4355)
!5099 = !DILocation(line: 1767, column: 5, scope: !4354)
!5100 = !DILocation(line: 1768, column: 26, scope: !4337)
!5101 = !DILocation(line: 1768, column: 5, scope: !4337)
!5102 = !DILocation(line: 1769, column: 10, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !4337, file: !2, line: 1769, column: 9)
!5104 = !DILocation(line: 1769, column: 15, scope: !5103)
!5105 = !DILocation(line: 1769, column: 18, scope: !5103)
!5106 = !DILocation(line: 1769, column: 27, scope: !5103)
!5107 = !DILocation(line: 1769, column: 31, scope: !5103)
!5108 = !DILocation(line: 1769, column: 36, scope: !5103)
!5109 = !DILocation(line: 1769, column: 40, scope: !5103)
!5110 = !DILocation(line: 1769, column: 47, scope: !5103)
!5111 = !DILocation(line: 1769, column: 9, scope: !4337)
!5112 = !DILocation(line: 1770, column: 36, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5103, file: !2, line: 1769, column: 57)
!5114 = !DILocation(line: 1770, column: 55, scope: !5113)
!5115 = !DILocation(line: 1770, column: 60, scope: !5113)
!5116 = !DILocation(line: 1770, column: 64, scope: !5113)
!5117 = !DILocation(line: 1770, column: 9, scope: !5113)
!5118 = !DILocation(line: 1771, column: 23, scope: !5113)
!5119 = !DILocation(line: 1771, column: 2, scope: !5113)
!5120 = !DILocation(line: 1772, column: 5, scope: !5113)
!5121 = !DILocation(line: 1774, column: 32, scope: !4337)
!5122 = !DILocation(line: 1774, column: 51, scope: !4337)
!5123 = !DILocation(line: 1774, column: 56, scope: !4337)
!5124 = !DILocation(line: 1774, column: 5, scope: !4337)
!5125 = !DILocation(line: 1775, column: 26, scope: !4337)
!5126 = !DILocation(line: 1775, column: 5, scope: !4337)
!5127 = !DILocation(line: 1776, column: 1, scope: !4337)
!5128 = distinct !DISubprogram(name: "xmlDocDumpFormatMemoryEnc__internal_alias", scope: !2, file: !2, line: 2396, type: !5129, scopeLine: 2398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5132)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{null, !1345, !5131, !1304, !1285, !1104}
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!5132 = !{!5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141}
!5133 = !DILocalVariable(name: "out_doc", arg: 1, scope: !5128, file: !2, line: 2396, type: !1345)
!5134 = !DILocalVariable(name: "doc_txt_ptr", arg: 2, scope: !5128, file: !2, line: 2396, type: !5131)
!5135 = !DILocalVariable(name: "doc_txt_len", arg: 3, scope: !5128, file: !2, line: 2397, type: !1304)
!5136 = !DILocalVariable(name: "txt_encoding", arg: 4, scope: !5128, file: !2, line: 2397, type: !1285)
!5137 = !DILocalVariable(name: "format", arg: 5, scope: !5128, file: !2, line: 2398, type: !1104)
!5138 = !DILocalVariable(name: "ctxt", scope: !5128, file: !2, line: 2399, type: !1326)
!5139 = !DILocalVariable(name: "dummy", scope: !5128, file: !2, line: 2400, type: !1104)
!5140 = !DILocalVariable(name: "out_buff", scope: !5128, file: !2, line: 2401, type: !1273)
!5141 = !DILocalVariable(name: "conv_hdlr", scope: !5128, file: !2, line: 2402, type: !1292)
!5142 = !DILocation(line: 2396, column: 37, scope: !5128)
!5143 = !DILocation(line: 2396, column: 56, scope: !5128)
!5144 = !DILocation(line: 2397, column: 9, scope: !5128)
!5145 = !DILocation(line: 2397, column: 35, scope: !5128)
!5146 = !DILocation(line: 2398, column: 7, scope: !5128)
!5147 = !DILocation(line: 2399, column: 5, scope: !5128)
!5148 = !DILocation(line: 2399, column: 17, scope: !5128)
!5149 = !DILocation(line: 2400, column: 5, scope: !5128)
!5150 = !DILocation(line: 2400, column: 33, scope: !5128)
!5151 = !DILocation(line: 2401, column: 5, scope: !5128)
!5152 = !DILocation(line: 2401, column: 33, scope: !5128)
!5153 = !DILocation(line: 2402, column: 5, scope: !5128)
!5154 = !DILocation(line: 2402, column: 33, scope: !5128)
!5155 = !DILocation(line: 2404, column: 9, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2404, column: 9)
!5157 = !DILocation(line: 2404, column: 21, scope: !5156)
!5158 = !DILocation(line: 2404, column: 9, scope: !5128)
!5159 = !DILocation(line: 2405, column: 21, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5156, file: !2, line: 2404, column: 30)
!5161 = !DILocation(line: 2406, column: 5, scope: !5160)
!5162 = !DILocation(line: 2408, column: 9, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2408, column: 9)
!5164 = !DILocation(line: 2408, column: 21, scope: !5163)
!5165 = !DILocation(line: 2408, column: 9, scope: !5128)
!5166 = !DILocation(line: 2409, column: 10, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !2, line: 2408, column: 30)
!5168 = !DILocation(line: 2409, column: 22, scope: !5167)
!5169 = !DILocation(line: 2410, column: 9, scope: !5167)
!5170 = !DILocation(line: 2413, column: 6, scope: !5128)
!5171 = !DILocation(line: 2413, column: 18, scope: !5128)
!5172 = !DILocation(line: 2414, column: 6, scope: !5128)
!5173 = !DILocation(line: 2414, column: 18, scope: !5128)
!5174 = !DILocation(line: 2416, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2416, column: 9)
!5176 = !DILocation(line: 2416, column: 17, scope: !5175)
!5177 = !DILocation(line: 2416, column: 9, scope: !5128)
!5178 = !DILocation(line: 2418, column: 9, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5175, file: !2, line: 2416, column: 26)
!5180 = !DILocation(line: 2426, column: 9, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2426, column: 9)
!5182 = !DILocation(line: 2426, column: 22, scope: !5181)
!5183 = !DILocation(line: 2426, column: 9, scope: !5128)
!5184 = !DILocation(line: 2427, column: 32, scope: !5181)
!5185 = !DILocation(line: 2427, column: 41, scope: !5181)
!5186 = !DILocation(line: 2427, column: 15, scope: !5181)
!5187 = !DILocation(line: 2427, column: 2, scope: !5181)
!5188 = !DILocation(line: 2428, column: 9, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2428, column: 9)
!5190 = !DILocation(line: 2428, column: 22, scope: !5189)
!5191 = !DILocation(line: 2428, column: 9, scope: !5128)
!5192 = !DILocation(line: 2429, column: 41, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5189, file: !2, line: 2428, column: 31)
!5194 = !DILocation(line: 2429, column: 14, scope: !5193)
!5195 = !DILocation(line: 2429, column: 12, scope: !5193)
!5196 = !DILocation(line: 2430, column: 7, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5193, file: !2, line: 2430, column: 7)
!5198 = !DILocation(line: 2430, column: 17, scope: !5197)
!5199 = !DILocation(line: 2430, column: 7, scope: !5193)
!5200 = !DILocation(line: 2431, column: 57, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !2, line: 2430, column: 27)
!5202 = !DILocation(line: 2432, column: 10, scope: !5201)
!5203 = !DILocation(line: 2431, column: 6, scope: !5201)
!5204 = !DILocation(line: 2433, column: 6, scope: !5201)
!5205 = !DILocation(line: 2435, column: 5, scope: !5193)
!5206 = !DILocation(line: 2437, column: 42, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2437, column: 9)
!5208 = !DILocation(line: 2437, column: 21, scope: !5207)
!5209 = !DILocation(line: 2437, column: 19, scope: !5207)
!5210 = !DILocation(line: 2437, column: 54, scope: !5207)
!5211 = !DILocation(line: 2437, column: 9, scope: !5128)
!5212 = !DILocation(line: 2438, column: 9, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5207, file: !2, line: 2437, column: 64)
!5214 = !DILocation(line: 2439, column: 9, scope: !5213)
!5215 = !DILocation(line: 2442, column: 5, scope: !5128)
!5216 = !DILocation(line: 2443, column: 16, scope: !5128)
!5217 = !DILocation(line: 2443, column: 10, scope: !5128)
!5218 = !DILocation(line: 2443, column: 14, scope: !5128)
!5219 = !DILocation(line: 2444, column: 10, scope: !5128)
!5220 = !DILocation(line: 2444, column: 16, scope: !5128)
!5221 = !DILocation(line: 2445, column: 19, scope: !5128)
!5222 = !DILocation(line: 2445, column: 10, scope: !5128)
!5223 = !DILocation(line: 2445, column: 17, scope: !5128)
!5224 = !DILocation(line: 2446, column: 39, scope: !5128)
!5225 = !DILocation(line: 2446, column: 10, scope: !5128)
!5226 = !DILocation(line: 2446, column: 19, scope: !5128)
!5227 = !DILocation(line: 2447, column: 5, scope: !5128)
!5228 = !DILocation(line: 2448, column: 10, scope: !5128)
!5229 = !DILocation(line: 2448, column: 18, scope: !5128)
!5230 = !DILocation(line: 2449, column: 36, scope: !5128)
!5231 = !DILocation(line: 2449, column: 5, scope: !5128)
!5232 = !DILocation(line: 2450, column: 26, scope: !5128)
!5233 = !DILocation(line: 2450, column: 5, scope: !5128)
!5234 = !DILocation(line: 2451, column: 9, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2451, column: 9)
!5236 = !DILocation(line: 2451, column: 19, scope: !5235)
!5237 = !DILocation(line: 2451, column: 24, scope: !5235)
!5238 = !DILocation(line: 2451, column: 9, scope: !5128)
!5239 = !DILocation(line: 2452, column: 27, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5235, file: !2, line: 2451, column: 33)
!5241 = !DILocation(line: 2452, column: 37, scope: !5240)
!5242 = !DILocation(line: 2452, column: 17, scope: !5240)
!5243 = !DILocation(line: 2452, column: 3, scope: !5240)
!5244 = !DILocation(line: 2452, column: 15, scope: !5240)
!5245 = !DILocation(line: 2453, column: 42, scope: !5240)
!5246 = !DILocation(line: 2453, column: 52, scope: !5240)
!5247 = !DILocation(line: 2453, column: 28, scope: !5240)
!5248 = !DILocation(line: 2453, column: 60, scope: !5240)
!5249 = !DILocation(line: 2453, column: 59, scope: !5240)
!5250 = !DILocation(line: 2453, column: 17, scope: !5240)
!5251 = !DILocation(line: 2453, column: 3, scope: !5240)
!5252 = !DILocation(line: 2453, column: 15, scope: !5240)
!5253 = !DILocation(line: 2454, column: 5, scope: !5240)
!5254 = !DILocation(line: 2455, column: 27, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5235, file: !2, line: 2454, column: 12)
!5256 = !DILocation(line: 2455, column: 37, scope: !5255)
!5257 = !DILocation(line: 2455, column: 17, scope: !5255)
!5258 = !DILocation(line: 2455, column: 3, scope: !5255)
!5259 = !DILocation(line: 2455, column: 15, scope: !5255)
!5260 = !DILocation(line: 2456, column: 42, scope: !5255)
!5261 = !DILocation(line: 2456, column: 52, scope: !5255)
!5262 = !DILocation(line: 2456, column: 28, scope: !5255)
!5263 = !DILocation(line: 2456, column: 61, scope: !5255)
!5264 = !DILocation(line: 2456, column: 60, scope: !5255)
!5265 = !DILocation(line: 2456, column: 17, scope: !5255)
!5266 = !DILocation(line: 2456, column: 3, scope: !5255)
!5267 = !DILocation(line: 2456, column: 15, scope: !5255)
!5268 = !DILocation(line: 2458, column: 32, scope: !5128)
!5269 = !DILocation(line: 2458, column: 11, scope: !5128)
!5270 = !DILocation(line: 2460, column: 11, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5128, file: !2, line: 2460, column: 9)
!5272 = !DILocation(line: 2460, column: 10, scope: !5271)
!5273 = !DILocation(line: 2460, column: 23, scope: !5271)
!5274 = !DILocation(line: 2460, column: 32, scope: !5271)
!5275 = !DILocation(line: 2460, column: 37, scope: !5271)
!5276 = !DILocation(line: 2460, column: 36, scope: !5271)
!5277 = !DILocation(line: 2460, column: 49, scope: !5271)
!5278 = !DILocation(line: 2460, column: 9, scope: !5128)
!5279 = !DILocation(line: 2461, column: 10, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5271, file: !2, line: 2460, column: 55)
!5281 = !DILocation(line: 2461, column: 22, scope: !5280)
!5282 = !DILocation(line: 2462, column: 9, scope: !5280)
!5283 = !DILocation(line: 2463, column: 5, scope: !5280)
!5284 = !DILocation(line: 2465, column: 5, scope: !5128)
!5285 = !DILocation(line: 2466, column: 1, scope: !5128)
!5286 = !DISubprogram(name: "xmlAllocOutputBuffer__internal_alias", scope: !1530, file: !1530, line: 1102, type: !5287, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{!1273, !1292}
!5289 = !DISubprogram(name: "xmlStrndup__internal_alias", scope: !1530, file: !1530, line: 11071, type: !5290, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!1165, !1178, !1104}
!5292 = !DISubprogram(name: "xmlBufContent__internal_alias", scope: !1530, file: !1530, line: 1351, type: !5293, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5293 = !DISubroutineType(types: !5294)
!5294 = !{!1165, !5295}
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5296, size: 64)
!5296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!5297 = distinct !DISubprogram(name: "xmlDocDumpMemory__internal_alias", scope: !2, file: !2, line: 2480, type: !5298, scopeLine: 2480, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5300)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{null, !1345, !5131, !1304}
!5300 = !{!5301, !5302, !5303}
!5301 = !DILocalVariable(name: "cur", arg: 1, scope: !5297, file: !2, line: 2480, type: !1345)
!5302 = !DILocalVariable(name: "mem", arg: 2, scope: !5297, file: !2, line: 2480, type: !5131)
!5303 = !DILocalVariable(name: "size", arg: 3, scope: !5297, file: !2, line: 2480, type: !1304)
!5304 = !DILocation(line: 2480, column: 28, scope: !5297)
!5305 = !DILocation(line: 2480, column: 42, scope: !5297)
!5306 = !DILocation(line: 2480, column: 52, scope: !5297)
!5307 = !DILocation(line: 2481, column: 31, scope: !5297)
!5308 = !DILocation(line: 2481, column: 36, scope: !5297)
!5309 = !DILocation(line: 2481, column: 41, scope: !5297)
!5310 = !DILocation(line: 2481, column: 5, scope: !5297)
!5311 = !DILocation(line: 2482, column: 1, scope: !5297)
!5312 = distinct !DISubprogram(name: "xmlDocDumpFormatMemory__internal_alias", scope: !2, file: !2, line: 2498, type: !5313, scopeLine: 2498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5315)
!5313 = !DISubroutineType(types: !5314)
!5314 = !{null, !1345, !5131, !1304, !1104}
!5315 = !{!5316, !5317, !5318, !5319}
!5316 = !DILocalVariable(name: "cur", arg: 1, scope: !5312, file: !2, line: 2498, type: !1345)
!5317 = !DILocalVariable(name: "mem", arg: 2, scope: !5312, file: !2, line: 2498, type: !5131)
!5318 = !DILocalVariable(name: "size", arg: 3, scope: !5312, file: !2, line: 2498, type: !1304)
!5319 = !DILocalVariable(name: "format", arg: 4, scope: !5312, file: !2, line: 2498, type: !1104)
!5320 = !DILocation(line: 2498, column: 34, scope: !5312)
!5321 = !DILocation(line: 2498, column: 48, scope: !5312)
!5322 = !DILocation(line: 2498, column: 58, scope: !5312)
!5323 = !DILocation(line: 2498, column: 68, scope: !5312)
!5324 = !DILocation(line: 2499, column: 31, scope: !5312)
!5325 = !DILocation(line: 2499, column: 36, scope: !5312)
!5326 = !DILocation(line: 2499, column: 41, scope: !5312)
!5327 = !DILocation(line: 2499, column: 53, scope: !5312)
!5328 = !DILocation(line: 2499, column: 5, scope: !5312)
!5329 = !DILocation(line: 2500, column: 1, scope: !5312)
!5330 = distinct !DISubprogram(name: "xmlDocDumpMemoryEnc__internal_alias", scope: !2, file: !2, line: 2515, type: !5331, scopeLine: 2516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5333)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{null, !1345, !5131, !1304, !1285}
!5333 = !{!5334, !5335, !5336, !5337}
!5334 = !DILocalVariable(name: "out_doc", arg: 1, scope: !5330, file: !2, line: 2515, type: !1345)
!5335 = !DILocalVariable(name: "doc_txt_ptr", arg: 2, scope: !5330, file: !2, line: 2515, type: !5131)
!5336 = !DILocalVariable(name: "doc_txt_len", arg: 3, scope: !5330, file: !2, line: 2516, type: !1304)
!5337 = !DILocalVariable(name: "txt_encoding", arg: 4, scope: !5330, file: !2, line: 2516, type: !1285)
!5338 = !DILocation(line: 2515, column: 31, scope: !5330)
!5339 = !DILocation(line: 2515, column: 50, scope: !5330)
!5340 = !DILocation(line: 2516, column: 20, scope: !5330)
!5341 = !DILocation(line: 2516, column: 46, scope: !5330)
!5342 = !DILocation(line: 2517, column: 31, scope: !5330)
!5343 = !DILocation(line: 2517, column: 40, scope: !5330)
!5344 = !DILocation(line: 2517, column: 53, scope: !5330)
!5345 = !DILocation(line: 2518, column: 24, scope: !5330)
!5346 = !DILocation(line: 2517, column: 5, scope: !5330)
!5347 = !DILocation(line: 2519, column: 1, scope: !5330)
!5348 = distinct !DISubprogram(name: "xmlDocFormatDump__internal_alias", scope: !2, file: !2, line: 2534, type: !5349, scopeLine: 2534, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5351)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{!1104, !4132, !1345, !1104}
!5351 = !{!5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359}
!5352 = !DILocalVariable(name: "f", arg: 1, scope: !5348, file: !2, line: 2534, type: !4132)
!5353 = !DILocalVariable(name: "cur", arg: 2, scope: !5348, file: !2, line: 2534, type: !1345)
!5354 = !DILocalVariable(name: "format", arg: 3, scope: !5348, file: !2, line: 2534, type: !1104)
!5355 = !DILocalVariable(name: "ctxt", scope: !5348, file: !2, line: 2535, type: !1326)
!5356 = !DILocalVariable(name: "buf", scope: !5348, file: !2, line: 2536, type: !1273)
!5357 = !DILocalVariable(name: "encoding", scope: !5348, file: !2, line: 2537, type: !1285)
!5358 = !DILocalVariable(name: "handler", scope: !5348, file: !2, line: 2538, type: !1292)
!5359 = !DILocalVariable(name: "ret", scope: !5348, file: !2, line: 2539, type: !1104)
!5360 = !DILocation(line: 2534, column: 24, scope: !5348)
!5361 = !DILocation(line: 2534, column: 37, scope: !5348)
!5362 = !DILocation(line: 2534, column: 46, scope: !5348)
!5363 = !DILocation(line: 2535, column: 5, scope: !5348)
!5364 = !DILocation(line: 2535, column: 17, scope: !5348)
!5365 = !DILocation(line: 2536, column: 5, scope: !5348)
!5366 = !DILocation(line: 2536, column: 24, scope: !5348)
!5367 = !DILocation(line: 2537, column: 5, scope: !5348)
!5368 = !DILocation(line: 2537, column: 18, scope: !5348)
!5369 = !DILocation(line: 2538, column: 5, scope: !5348)
!5370 = !DILocation(line: 2538, column: 31, scope: !5348)
!5371 = !DILocation(line: 2539, column: 5, scope: !5348)
!5372 = !DILocation(line: 2539, column: 9, scope: !5348)
!5373 = !DILocation(line: 2541, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5348, file: !2, line: 2541, column: 9)
!5375 = !DILocation(line: 2541, column: 13, scope: !5374)
!5376 = !DILocation(line: 2541, column: 9, scope: !5348)
!5377 = !DILocation(line: 2546, column: 2, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !2, line: 2541, column: 22)
!5379 = !DILocation(line: 2548, column: 31, scope: !5348)
!5380 = !DILocation(line: 2548, column: 36, scope: !5348)
!5381 = !DILocation(line: 2548, column: 14, scope: !5348)
!5382 = !DILocation(line: 2550, column: 9, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5348, file: !2, line: 2550, column: 9)
!5384 = !DILocation(line: 2550, column: 18, scope: !5383)
!5385 = !DILocation(line: 2550, column: 9, scope: !5348)
!5386 = !DILocation(line: 2551, column: 39, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5383, file: !2, line: 2550, column: 27)
!5388 = !DILocation(line: 2551, column: 12, scope: !5387)
!5389 = !DILocation(line: 2551, column: 10, scope: !5387)
!5390 = !DILocation(line: 2552, column: 6, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5387, file: !2, line: 2552, column: 6)
!5392 = !DILocation(line: 2552, column: 14, scope: !5391)
!5393 = !DILocation(line: 2552, column: 6, scope: !5387)
!5394 = !DILocation(line: 2553, column: 6, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5391, file: !2, line: 2552, column: 23)
!5396 = !DILocation(line: 2553, column: 23, scope: !5395)
!5397 = !DILocation(line: 2553, column: 28, scope: !5395)
!5398 = !DILocation(line: 2554, column: 6, scope: !5395)
!5399 = !DILocation(line: 2554, column: 11, scope: !5395)
!5400 = !DILocation(line: 2554, column: 20, scope: !5395)
!5401 = !DILocation(line: 2555, column: 15, scope: !5395)
!5402 = !DILocation(line: 2556, column: 2, scope: !5395)
!5403 = !DILocation(line: 2557, column: 5, scope: !5387)
!5404 = !DILocation(line: 2558, column: 37, scope: !5348)
!5405 = !DILocation(line: 2558, column: 40, scope: !5348)
!5406 = !DILocation(line: 2558, column: 11, scope: !5348)
!5407 = !DILocation(line: 2558, column: 9, scope: !5348)
!5408 = !DILocation(line: 2559, column: 9, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5348, file: !2, line: 2559, column: 9)
!5410 = !DILocation(line: 2559, column: 13, scope: !5409)
!5411 = !DILocation(line: 2559, column: 9, scope: !5348)
!5412 = !DILocation(line: 2559, column: 22, scope: !5409)
!5413 = !DILocation(line: 2560, column: 5, scope: !5348)
!5414 = !DILocation(line: 2561, column: 16, scope: !5348)
!5415 = !DILocation(line: 2561, column: 10, scope: !5348)
!5416 = !DILocation(line: 2561, column: 14, scope: !5348)
!5417 = !DILocation(line: 2562, column: 10, scope: !5348)
!5418 = !DILocation(line: 2562, column: 16, scope: !5348)
!5419 = !DILocation(line: 2563, column: 19, scope: !5348)
!5420 = !DILocation(line: 2563, column: 10, scope: !5348)
!5421 = !DILocation(line: 2563, column: 17, scope: !5348)
!5422 = !DILocation(line: 2564, column: 39, scope: !5348)
!5423 = !DILocation(line: 2564, column: 10, scope: !5348)
!5424 = !DILocation(line: 2564, column: 19, scope: !5348)
!5425 = !DILocation(line: 2565, column: 5, scope: !5348)
!5426 = !DILocation(line: 2566, column: 10, scope: !5348)
!5427 = !DILocation(line: 2566, column: 18, scope: !5348)
!5428 = !DILocation(line: 2567, column: 36, scope: !5348)
!5429 = !DILocation(line: 2567, column: 5, scope: !5348)
!5430 = !DILocation(line: 2569, column: 32, scope: !5348)
!5431 = !DILocation(line: 2569, column: 11, scope: !5348)
!5432 = !DILocation(line: 2569, column: 9, scope: !5348)
!5433 = !DILocation(line: 2570, column: 12, scope: !5348)
!5434 = !DILocation(line: 2570, column: 5, scope: !5348)
!5435 = !DILocation(line: 2571, column: 1, scope: !5348)
!5436 = distinct !DISubprogram(name: "xmlDocDump__internal_alias", scope: !2, file: !2, line: 2583, type: !5437, scopeLine: 2583, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5439)
!5437 = !DISubroutineType(types: !5438)
!5438 = !{!1104, !4132, !1345}
!5439 = !{!5440, !5441}
!5440 = !DILocalVariable(name: "f", arg: 1, scope: !5436, file: !2, line: 2583, type: !4132)
!5441 = !DILocalVariable(name: "cur", arg: 2, scope: !5436, file: !2, line: 2583, type: !1345)
!5442 = !DILocation(line: 2583, column: 18, scope: !5436)
!5443 = !DILocation(line: 2583, column: 31, scope: !5436)
!5444 = !DILocation(line: 2584, column: 30, scope: !5436)
!5445 = !DILocation(line: 2584, column: 33, scope: !5436)
!5446 = !DILocation(line: 2584, column: 12, scope: !5436)
!5447 = !DILocation(line: 2584, column: 5, scope: !5436)
!5448 = distinct !DISubprogram(name: "xmlSaveFileTo__internal_alias", scope: !2, file: !2, line: 2600, type: !5449, scopeLine: 2600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5451)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!1104, !1273, !1345, !1285}
!5451 = !{!5452, !5453, !5454, !5455, !5456}
!5452 = !DILocalVariable(name: "buf", arg: 1, scope: !5448, file: !2, line: 2600, type: !1273)
!5453 = !DILocalVariable(name: "cur", arg: 2, scope: !5448, file: !2, line: 2600, type: !1345)
!5454 = !DILocalVariable(name: "encoding", arg: 3, scope: !5448, file: !2, line: 2600, type: !1285)
!5455 = !DILocalVariable(name: "ctxt", scope: !5448, file: !2, line: 2601, type: !1326)
!5456 = !DILocalVariable(name: "ret", scope: !5448, file: !2, line: 2602, type: !1104)
!5457 = !DILocation(line: 2600, column: 34, scope: !5448)
!5458 = !DILocation(line: 2600, column: 49, scope: !5448)
!5459 = !DILocation(line: 2600, column: 66, scope: !5448)
!5460 = !DILocation(line: 2601, column: 5, scope: !5448)
!5461 = !DILocation(line: 2601, column: 17, scope: !5448)
!5462 = !DILocation(line: 2602, column: 5, scope: !5448)
!5463 = !DILocation(line: 2602, column: 9, scope: !5448)
!5464 = !DILocation(line: 2604, column: 9, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5448, file: !2, line: 2604, column: 9)
!5466 = !DILocation(line: 2604, column: 13, scope: !5465)
!5467 = !DILocation(line: 2604, column: 9, scope: !5448)
!5468 = !DILocation(line: 2604, column: 22, scope: !5465)
!5469 = !DILocation(line: 2605, column: 9, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5448, file: !2, line: 2605, column: 9)
!5471 = !DILocation(line: 2605, column: 13, scope: !5470)
!5472 = !DILocation(line: 2605, column: 9, scope: !5448)
!5473 = !DILocation(line: 2606, column: 30, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5470, file: !2, line: 2605, column: 22)
!5475 = !DILocation(line: 2606, column: 9, scope: !5474)
!5476 = !DILocation(line: 2607, column: 2, scope: !5474)
!5477 = !DILocation(line: 2609, column: 5, scope: !5448)
!5478 = !DILocation(line: 2610, column: 16, scope: !5448)
!5479 = !DILocation(line: 2610, column: 10, scope: !5448)
!5480 = !DILocation(line: 2610, column: 14, scope: !5448)
!5481 = !DILocation(line: 2611, column: 10, scope: !5448)
!5482 = !DILocation(line: 2611, column: 16, scope: !5448)
!5483 = !DILocation(line: 2612, column: 10, scope: !5448)
!5484 = !DILocation(line: 2612, column: 17, scope: !5448)
!5485 = !DILocation(line: 2613, column: 39, scope: !5448)
!5486 = !DILocation(line: 2613, column: 10, scope: !5448)
!5487 = !DILocation(line: 2613, column: 19, scope: !5448)
!5488 = !DILocation(line: 2614, column: 5, scope: !5448)
!5489 = !DILocation(line: 2615, column: 10, scope: !5448)
!5490 = !DILocation(line: 2615, column: 18, scope: !5448)
!5491 = !DILocation(line: 2616, column: 36, scope: !5448)
!5492 = !DILocation(line: 2616, column: 5, scope: !5448)
!5493 = !DILocation(line: 2617, column: 32, scope: !5448)
!5494 = !DILocation(line: 2617, column: 11, scope: !5448)
!5495 = !DILocation(line: 2617, column: 9, scope: !5448)
!5496 = !DILocation(line: 2618, column: 12, scope: !5448)
!5497 = !DILocation(line: 2618, column: 5, scope: !5448)
!5498 = !DILocation(line: 2619, column: 1, scope: !5448)
!5499 = distinct !DISubprogram(name: "xmlSaveFormatFileTo__internal_alias", scope: !2, file: !2, line: 2635, type: !5500, scopeLine: 2637, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5502)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{!1104, !1273, !1345, !1285, !1104}
!5502 = !{!5503, !5504, !5505, !5506, !5507, !5508}
!5503 = !DILocalVariable(name: "buf", arg: 1, scope: !5499, file: !2, line: 2635, type: !1273)
!5504 = !DILocalVariable(name: "cur", arg: 2, scope: !5499, file: !2, line: 2635, type: !1345)
!5505 = !DILocalVariable(name: "encoding", arg: 3, scope: !5499, file: !2, line: 2636, type: !1285)
!5506 = !DILocalVariable(name: "format", arg: 4, scope: !5499, file: !2, line: 2636, type: !1104)
!5507 = !DILocalVariable(name: "ctxt", scope: !5499, file: !2, line: 2638, type: !1326)
!5508 = !DILocalVariable(name: "ret", scope: !5499, file: !2, line: 2639, type: !1104)
!5509 = !DILocation(line: 2635, column: 40, scope: !5499)
!5510 = !DILocation(line: 2635, column: 55, scope: !5499)
!5511 = !DILocation(line: 2636, column: 33, scope: !5499)
!5512 = !DILocation(line: 2636, column: 47, scope: !5499)
!5513 = !DILocation(line: 2638, column: 5, scope: !5499)
!5514 = !DILocation(line: 2638, column: 17, scope: !5499)
!5515 = !DILocation(line: 2639, column: 5, scope: !5499)
!5516 = !DILocation(line: 2639, column: 9, scope: !5499)
!5517 = !DILocation(line: 2641, column: 9, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5499, file: !2, line: 2641, column: 9)
!5519 = !DILocation(line: 2641, column: 13, scope: !5518)
!5520 = !DILocation(line: 2641, column: 9, scope: !5499)
!5521 = !DILocation(line: 2641, column: 22, scope: !5518)
!5522 = !DILocation(line: 2642, column: 10, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5499, file: !2, line: 2642, column: 9)
!5524 = !DILocation(line: 2642, column: 14, scope: !5523)
!5525 = !DILocation(line: 2642, column: 23, scope: !5523)
!5526 = !DILocation(line: 2643, column: 11, scope: !5523)
!5527 = !DILocation(line: 2643, column: 16, scope: !5523)
!5528 = !DILocation(line: 2643, column: 21, scope: !5523)
!5529 = !DILocation(line: 2643, column: 43, scope: !5523)
!5530 = !DILocation(line: 2644, column: 4, scope: !5523)
!5531 = !DILocation(line: 2644, column: 9, scope: !5523)
!5532 = !DILocation(line: 2644, column: 14, scope: !5523)
!5533 = !DILocation(line: 2642, column: 9, scope: !5499)
!5534 = !DILocation(line: 2645, column: 30, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5523, file: !2, line: 2644, column: 43)
!5536 = !DILocation(line: 2645, column: 9, scope: !5535)
!5537 = !DILocation(line: 2646, column: 2, scope: !5535)
!5538 = !DILocation(line: 2648, column: 5, scope: !5499)
!5539 = !DILocation(line: 2649, column: 16, scope: !5499)
!5540 = !DILocation(line: 2649, column: 10, scope: !5499)
!5541 = !DILocation(line: 2649, column: 14, scope: !5499)
!5542 = !DILocation(line: 2650, column: 10, scope: !5499)
!5543 = !DILocation(line: 2650, column: 16, scope: !5499)
!5544 = !DILocation(line: 2651, column: 19, scope: !5499)
!5545 = !DILocation(line: 2651, column: 10, scope: !5499)
!5546 = !DILocation(line: 2651, column: 17, scope: !5499)
!5547 = !DILocation(line: 2652, column: 39, scope: !5499)
!5548 = !DILocation(line: 2652, column: 10, scope: !5499)
!5549 = !DILocation(line: 2652, column: 19, scope: !5499)
!5550 = !DILocation(line: 2653, column: 5, scope: !5499)
!5551 = !DILocation(line: 2654, column: 10, scope: !5499)
!5552 = !DILocation(line: 2654, column: 18, scope: !5499)
!5553 = !DILocation(line: 2655, column: 36, scope: !5499)
!5554 = !DILocation(line: 2655, column: 5, scope: !5499)
!5555 = !DILocation(line: 2656, column: 32, scope: !5499)
!5556 = !DILocation(line: 2656, column: 11, scope: !5499)
!5557 = !DILocation(line: 2656, column: 9, scope: !5499)
!5558 = !DILocation(line: 2657, column: 13, scope: !5499)
!5559 = !DILocation(line: 2657, column: 5, scope: !5499)
!5560 = !DILocation(line: 2658, column: 1, scope: !5499)
!5561 = distinct !DISubprogram(name: "xmlSaveFormatFileEnc__internal_alias", scope: !2, file: !2, line: 2674, type: !5562, scopeLine: 2675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5564)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!1104, !1285, !1345, !1285, !1104}
!5564 = !{!5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572}
!5565 = !DILocalVariable(name: "filename", arg: 1, scope: !5561, file: !2, line: 2674, type: !1285)
!5566 = !DILocalVariable(name: "cur", arg: 2, scope: !5561, file: !2, line: 2674, type: !1345)
!5567 = !DILocalVariable(name: "encoding", arg: 3, scope: !5561, file: !2, line: 2675, type: !1285)
!5568 = !DILocalVariable(name: "format", arg: 4, scope: !5561, file: !2, line: 2675, type: !1104)
!5569 = !DILocalVariable(name: "ctxt", scope: !5561, file: !2, line: 2676, type: !1326)
!5570 = !DILocalVariable(name: "buf", scope: !5561, file: !2, line: 2677, type: !1273)
!5571 = !DILocalVariable(name: "handler", scope: !5561, file: !2, line: 2678, type: !1292)
!5572 = !DILocalVariable(name: "ret", scope: !5561, file: !2, line: 2679, type: !1104)
!5573 = !DILocation(line: 2674, column: 36, scope: !5561)
!5574 = !DILocation(line: 2674, column: 56, scope: !5561)
!5575 = !DILocation(line: 2675, column: 17, scope: !5561)
!5576 = !DILocation(line: 2675, column: 31, scope: !5561)
!5577 = !DILocation(line: 2676, column: 5, scope: !5561)
!5578 = !DILocation(line: 2676, column: 17, scope: !5561)
!5579 = !DILocation(line: 2677, column: 5, scope: !5561)
!5580 = !DILocation(line: 2677, column: 24, scope: !5561)
!5581 = !DILocation(line: 2678, column: 5, scope: !5561)
!5582 = !DILocation(line: 2678, column: 31, scope: !5561)
!5583 = !DILocation(line: 2679, column: 5, scope: !5561)
!5584 = !DILocation(line: 2679, column: 9, scope: !5561)
!5585 = !DILocation(line: 2681, column: 9, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 2681, column: 9)
!5587 = !DILocation(line: 2681, column: 13, scope: !5586)
!5588 = !DILocation(line: 2681, column: 9, scope: !5561)
!5589 = !DILocation(line: 2682, column: 2, scope: !5586)
!5590 = !DILocation(line: 2684, column: 9, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 2684, column: 9)
!5592 = !DILocation(line: 2684, column: 18, scope: !5591)
!5593 = !DILocation(line: 2684, column: 9, scope: !5561)
!5594 = !DILocation(line: 2685, column: 28, scope: !5591)
!5595 = !DILocation(line: 2685, column: 33, scope: !5591)
!5596 = !DILocation(line: 2685, column: 11, scope: !5591)
!5597 = !DILocation(line: 2685, column: 2, scope: !5591)
!5598 = !DILocation(line: 2687, column: 9, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 2687, column: 9)
!5600 = !DILocation(line: 2687, column: 18, scope: !5599)
!5601 = !DILocation(line: 2687, column: 9, scope: !5561)
!5602 = !DILocation(line: 2689, column: 43, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5599, file: !2, line: 2687, column: 27)
!5604 = !DILocation(line: 2689, column: 16, scope: !5603)
!5605 = !DILocation(line: 2689, column: 14, scope: !5603)
!5606 = !DILocation(line: 2690, column: 10, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5603, file: !2, line: 2690, column: 10)
!5608 = !DILocation(line: 2690, column: 18, scope: !5607)
!5609 = !DILocation(line: 2690, column: 10, scope: !5603)
!5610 = !DILocation(line: 2691, column: 3, scope: !5607)
!5611 = !DILocation(line: 2692, column: 5, scope: !5603)
!5612 = !DILocation(line: 2695, column: 9, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 2695, column: 9)
!5614 = !DILocation(line: 2695, column: 14, scope: !5613)
!5615 = !{!2176, !1734, i64 72}
!5616 = !DILocation(line: 2695, column: 26, scope: !5613)
!5617 = !DILocation(line: 2695, column: 9, scope: !5561)
!5618 = !DILocation(line: 2695, column: 50, scope: !5613)
!5619 = !DILocation(line: 2695, column: 31, scope: !5613)
!5620 = !DILocation(line: 2695, column: 36, scope: !5613)
!5621 = !DILocation(line: 2695, column: 48, scope: !5613)
!5622 = !DILocation(line: 2700, column: 41, scope: !5561)
!5623 = !DILocation(line: 2700, column: 51, scope: !5561)
!5624 = !DILocation(line: 2700, column: 60, scope: !5561)
!5625 = !DILocation(line: 2700, column: 65, scope: !5561)
!5626 = !DILocation(line: 2700, column: 11, scope: !5561)
!5627 = !DILocation(line: 2700, column: 9, scope: !5561)
!5628 = !DILocation(line: 2701, column: 9, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 2701, column: 9)
!5630 = !DILocation(line: 2701, column: 13, scope: !5629)
!5631 = !DILocation(line: 2701, column: 9, scope: !5561)
!5632 = !DILocation(line: 2701, column: 22, scope: !5629)
!5633 = !DILocation(line: 2702, column: 5, scope: !5561)
!5634 = !DILocation(line: 2703, column: 16, scope: !5561)
!5635 = !DILocation(line: 2703, column: 10, scope: !5561)
!5636 = !DILocation(line: 2703, column: 14, scope: !5561)
!5637 = !DILocation(line: 2704, column: 10, scope: !5561)
!5638 = !DILocation(line: 2704, column: 16, scope: !5561)
!5639 = !DILocation(line: 2705, column: 19, scope: !5561)
!5640 = !DILocation(line: 2705, column: 10, scope: !5561)
!5641 = !DILocation(line: 2705, column: 17, scope: !5561)
!5642 = !DILocation(line: 2706, column: 39, scope: !5561)
!5643 = !DILocation(line: 2706, column: 10, scope: !5561)
!5644 = !DILocation(line: 2706, column: 19, scope: !5561)
!5645 = !DILocation(line: 2707, column: 5, scope: !5561)
!5646 = !DILocation(line: 2708, column: 10, scope: !5561)
!5647 = !DILocation(line: 2708, column: 18, scope: !5561)
!5648 = !DILocation(line: 2710, column: 36, scope: !5561)
!5649 = !DILocation(line: 2710, column: 5, scope: !5561)
!5650 = !DILocation(line: 2712, column: 32, scope: !5561)
!5651 = !DILocation(line: 2712, column: 11, scope: !5561)
!5652 = !DILocation(line: 2712, column: 9, scope: !5561)
!5653 = !DILocation(line: 2713, column: 12, scope: !5561)
!5654 = !DILocation(line: 2713, column: 5, scope: !5561)
!5655 = !DILocation(line: 2714, column: 1, scope: !5561)
!5656 = !DISubprogram(name: "xmlGetCompressMode__internal_alias", scope: !1530, file: !1530, line: 3919, type: !5657, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5657 = !DISubroutineType(types: !5658)
!5658 = !{!1104}
!5659 = distinct !DISubprogram(name: "xmlSaveFileEnc__internal_alias", scope: !2, file: !2, line: 2728, type: !5660, scopeLine: 2728, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5662)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{!1104, !1285, !1345, !1285}
!5662 = !{!5663, !5664, !5665}
!5663 = !DILocalVariable(name: "filename", arg: 1, scope: !5659, file: !2, line: 2728, type: !1285)
!5664 = !DILocalVariable(name: "cur", arg: 2, scope: !5659, file: !2, line: 2728, type: !1345)
!5665 = !DILocalVariable(name: "encoding", arg: 3, scope: !5659, file: !2, line: 2728, type: !1285)
!5666 = !DILocation(line: 2728, column: 28, scope: !5659)
!5667 = !DILocation(line: 2728, column: 48, scope: !5659)
!5668 = !DILocation(line: 2728, column: 65, scope: !5659)
!5669 = !DILocation(line: 2729, column: 36, scope: !5659)
!5670 = !DILocation(line: 2729, column: 46, scope: !5659)
!5671 = !DILocation(line: 2729, column: 51, scope: !5659)
!5672 = !DILocation(line: 2729, column: 14, scope: !5659)
!5673 = !DILocation(line: 2729, column: 5, scope: !5659)
!5674 = distinct !DISubprogram(name: "xmlSaveFormatFile__internal_alias", scope: !2, file: !2, line: 2747, type: !5675, scopeLine: 2747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5677)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!1104, !1285, !1345, !1104}
!5677 = !{!5678, !5679, !5680}
!5678 = !DILocalVariable(name: "filename", arg: 1, scope: !5674, file: !2, line: 2747, type: !1285)
!5679 = !DILocalVariable(name: "cur", arg: 2, scope: !5674, file: !2, line: 2747, type: !1345)
!5680 = !DILocalVariable(name: "format", arg: 3, scope: !5674, file: !2, line: 2747, type: !1104)
!5681 = !DILocation(line: 2747, column: 31, scope: !5674)
!5682 = !DILocation(line: 2747, column: 51, scope: !5674)
!5683 = !DILocation(line: 2747, column: 60, scope: !5674)
!5684 = !DILocation(line: 2748, column: 36, scope: !5674)
!5685 = !DILocation(line: 2748, column: 46, scope: !5674)
!5686 = !DILocation(line: 2748, column: 57, scope: !5674)
!5687 = !DILocation(line: 2748, column: 14, scope: !5674)
!5688 = !DILocation(line: 2748, column: 5, scope: !5674)
!5689 = distinct !DISubprogram(name: "xmlSaveFile__internal_alias", scope: !2, file: !2, line: 2762, type: !5690, scopeLine: 2762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5692)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!1104, !1285, !1345}
!5692 = !{!5693, !5694}
!5693 = !DILocalVariable(name: "filename", arg: 1, scope: !5689, file: !2, line: 2762, type: !1285)
!5694 = !DILocalVariable(name: "cur", arg: 2, scope: !5689, file: !2, line: 2762, type: !1345)
!5695 = !DILocation(line: 2762, column: 25, scope: !5689)
!5696 = !DILocation(line: 2762, column: 45, scope: !5689)
!5697 = !DILocation(line: 2763, column: 33, scope: !5689)
!5698 = !DILocation(line: 2763, column: 43, scope: !5689)
!5699 = !DILocation(line: 2763, column: 12, scope: !5689)
!5700 = !DILocation(line: 2763, column: 5, scope: !5689)
!5701 = distinct !DISubprogram(name: "xmlOutputBufferWriteWSNonSig", scope: !2, file: !2, line: 606, type: !5702, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{null, !1324, !1104}
!5704 = !{!5705, !5706, !5707}
!5705 = !DILocalVariable(name: "ctxt", arg: 1, scope: !5701, file: !2, line: 606, type: !1324)
!5706 = !DILocalVariable(name: "extra", arg: 2, scope: !5701, file: !2, line: 606, type: !1104)
!5707 = !DILocalVariable(name: "i", scope: !5701, file: !2, line: 608, type: !1104)
!5708 = !DILocation(line: 606, column: 45, scope: !5701)
!5709 = !DILocation(line: 606, column: 55, scope: !5701)
!5710 = !DILocation(line: 608, column: 5, scope: !5701)
!5711 = !DILocation(line: 608, column: 9, scope: !5701)
!5712 = !DILocation(line: 609, column: 10, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5701, file: !2, line: 609, column: 9)
!5714 = !DILocation(line: 609, column: 15, scope: !5713)
!5715 = !DILocation(line: 609, column: 24, scope: !5713)
!5716 = !DILocation(line: 609, column: 28, scope: !5713)
!5717 = !DILocation(line: 609, column: 34, scope: !5713)
!5718 = !DILocation(line: 609, column: 38, scope: !5713)
!5719 = !DILocation(line: 609, column: 9, scope: !5701)
!5720 = !DILocation(line: 610, column: 9, scope: !5713)
!5721 = !DILocation(line: 611, column: 26, scope: !5701)
!5722 = !DILocation(line: 611, column: 32, scope: !5701)
!5723 = !DILocation(line: 611, column: 5, scope: !5701)
!5724 = !DILocation(line: 612, column: 12, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5701, file: !2, line: 612, column: 5)
!5726 = !DILocation(line: 612, column: 10, scope: !5725)
!5727 = !DILocation(line: 612, column: 17, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5725, file: !2, line: 612, column: 5)
!5729 = !DILocation(line: 612, column: 22, scope: !5728)
!5730 = !DILocation(line: 612, column: 28, scope: !5728)
!5731 = !DILocation(line: 612, column: 36, scope: !5728)
!5732 = !DILocation(line: 612, column: 34, scope: !5728)
!5733 = !DILocation(line: 612, column: 19, scope: !5728)
!5734 = !DILocation(line: 612, column: 5, scope: !5725)
!5735 = !DILocation(line: 613, column: 30, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5728, file: !2, line: 612, column: 66)
!5737 = !DILocation(line: 613, column: 36, scope: !5736)
!5738 = !DILocation(line: 613, column: 41, scope: !5736)
!5739 = !DILocation(line: 613, column: 47, scope: !5736)
!5740 = !DILocation(line: 614, column: 19, scope: !5736)
!5741 = !DILocation(line: 614, column: 25, scope: !5736)
!5742 = !DILocation(line: 614, column: 33, scope: !5736)
!5743 = !DILocation(line: 614, column: 31, scope: !5736)
!5744 = !DILocation(line: 614, column: 41, scope: !5736)
!5745 = !DILocation(line: 614, column: 39, scope: !5736)
!5746 = !DILocation(line: 614, column: 46, scope: !5736)
!5747 = !DILocation(line: 614, column: 52, scope: !5736)
!5748 = !DILocation(line: 614, column: 44, scope: !5736)
!5749 = !DILocation(line: 614, column: 18, scope: !5736)
!5750 = !DILocation(line: 615, column: 18, scope: !5736)
!5751 = !DILocation(line: 615, column: 24, scope: !5736)
!5752 = !DILocation(line: 615, column: 37, scope: !5736)
!5753 = !DILocation(line: 615, column: 43, scope: !5736)
!5754 = !DILocation(line: 615, column: 51, scope: !5736)
!5755 = !DILocation(line: 615, column: 49, scope: !5736)
!5756 = !DILocation(line: 615, column: 59, scope: !5736)
!5757 = !DILocation(line: 615, column: 57, scope: !5736)
!5758 = !DILocation(line: 613, column: 59, scope: !5736)
!5759 = !DILocation(line: 616, column: 17, scope: !5736)
!5760 = !DILocation(line: 616, column: 23, scope: !5736)
!5761 = !DILocation(line: 613, column: 9, scope: !5736)
!5762 = !DILocation(line: 617, column: 5, scope: !5736)
!5763 = !DILocation(line: 612, column: 49, scope: !5728)
!5764 = !DILocation(line: 612, column: 55, scope: !5728)
!5765 = !DILocation(line: 612, column: 46, scope: !5728)
!5766 = !DILocation(line: 612, column: 5, scope: !5728)
!5767 = distinct !{!5767, !5734, !5768, !1687}
!5768 = !DILocation(line: 617, column: 5, scope: !5725)
!5769 = !DILocation(line: 618, column: 1, scope: !5701)
!5770 = !DISubprogram(name: "xmlOutputBufferWrite__internal_alias", scope: !1530, file: !1530, line: 6900, type: !5771, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!1104, !1273, !1104, !1285}
!5773 = !DISubprogram(name: "xmlOutputBufferWriteString__internal_alias", scope: !1530, file: !1530, line: 6924, type: !5774, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5774 = !DISubroutineType(types: !5775)
!5775 = !{!1104, !1273, !1285}
!5776 = !DISubprogram(name: "xmlBufWriteQuotedString", scope: !1575, file: !1575, line: 44, type: !5777, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{!1104, !1314, !1178}
!5779 = !DISubprogram(name: "xmlStrdup__internal_alias", scope: !1530, file: !1530, line: 10901, type: !5780, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!1165, !1178}
!5782 = !DISubprogram(name: "htmlSetMetaEncoding__internal_alias", scope: !1530, file: !1530, line: 778, type: !5783, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5783 = !DISubroutineType(types: !5784)
!5784 = !{!1104, !5785, !1178}
!5785 = !DIDerivedType(tag: DW_TAG_typedef, name: "htmlDocPtr", file: !5786, line: 34, baseType: !1345)
!5786 = !DIFile(filename: "./include/libxml/HTMLparser.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "d57891c89573ed6dce04b8133e7438d2")
!5787 = !DISubprogram(name: "htmlGetMetaEncoding__internal_alias", scope: !1530, file: !1530, line: 394, type: !5788, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!1178, !5785}
!5790 = distinct !DISubprogram(name: "xmlSaveSwitchEncoding", scope: !2, file: !2, line: 555, type: !5791, scopeLine: 555, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5793)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!1104, !1324, !1285}
!5793 = !{!5794, !5795, !5796}
!5794 = !DILocalVariable(name: "ctxt", arg: 1, scope: !5790, file: !2, line: 555, type: !1324)
!5795 = !DILocalVariable(name: "encoding", arg: 2, scope: !5790, file: !2, line: 555, type: !1285)
!5796 = !DILocalVariable(name: "buf", scope: !5790, file: !2, line: 556, type: !1273)
!5797 = !DILocation(line: 555, column: 49, scope: !5790)
!5798 = !DILocation(line: 555, column: 67, scope: !5790)
!5799 = !DILocation(line: 556, column: 5, scope: !5790)
!5800 = !DILocation(line: 556, column: 24, scope: !5790)
!5801 = !DILocation(line: 556, column: 30, scope: !5790)
!5802 = !DILocation(line: 556, column: 36, scope: !5790)
!5803 = !DILocation(line: 558, column: 10, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5790, file: !2, line: 558, column: 9)
!5805 = !DILocation(line: 558, column: 19, scope: !5804)
!5806 = !DILocation(line: 558, column: 28, scope: !5804)
!5807 = !DILocation(line: 558, column: 32, scope: !5804)
!5808 = !DILocation(line: 558, column: 37, scope: !5804)
!5809 = !DILocation(line: 558, column: 45, scope: !5804)
!5810 = !DILocation(line: 558, column: 54, scope: !5804)
!5811 = !DILocation(line: 558, column: 58, scope: !5804)
!5812 = !DILocation(line: 558, column: 63, scope: !5804)
!5813 = !DILocation(line: 558, column: 68, scope: !5804)
!5814 = !DILocation(line: 558, column: 9, scope: !5790)
!5815 = !DILocation(line: 559, column: 58, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5804, file: !2, line: 558, column: 78)
!5817 = !DILocation(line: 559, column: 17, scope: !5816)
!5818 = !DILocation(line: 559, column: 2, scope: !5816)
!5819 = !DILocation(line: 559, column: 7, scope: !5816)
!5820 = !DILocation(line: 559, column: 15, scope: !5816)
!5821 = !DILocation(line: 560, column: 6, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5816, file: !2, line: 560, column: 6)
!5823 = !DILocation(line: 560, column: 11, scope: !5822)
!5824 = !DILocation(line: 560, column: 19, scope: !5822)
!5825 = !DILocation(line: 560, column: 6, scope: !5816)
!5826 = !DILocation(line: 562, column: 24, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5822, file: !2, line: 560, column: 28)
!5828 = !DILocation(line: 561, column: 6, scope: !5827)
!5829 = !DILocation(line: 563, column: 6, scope: !5827)
!5830 = !DILocation(line: 565, column: 14, scope: !5816)
!5831 = !DILocation(line: 565, column: 2, scope: !5816)
!5832 = !DILocation(line: 565, column: 7, scope: !5816)
!5833 = !DILocation(line: 565, column: 12, scope: !5816)
!5834 = !DILocation(line: 566, column: 6, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5816, file: !2, line: 566, column: 6)
!5836 = !DILocation(line: 566, column: 11, scope: !5835)
!5837 = !DILocation(line: 566, column: 16, scope: !5835)
!5838 = !DILocation(line: 566, column: 6, scope: !5816)
!5839 = !DILocation(line: 567, column: 26, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5835, file: !2, line: 566, column: 25)
!5841 = !DILocation(line: 567, column: 31, scope: !5840)
!5842 = !DILocation(line: 567, column: 6, scope: !5840)
!5843 = !DILocation(line: 568, column: 6, scope: !5840)
!5844 = !DILocation(line: 569, column: 6, scope: !5840)
!5845 = !DILocation(line: 574, column: 26, scope: !5816)
!5846 = !DILocation(line: 574, column: 9, scope: !5816)
!5847 = !DILocation(line: 575, column: 5, scope: !5816)
!5848 = !DILocation(line: 576, column: 5, scope: !5790)
!5849 = !DILocation(line: 577, column: 1, scope: !5790)
!5850 = !DISubprogram(name: "htmlDocContentDumpFormatOutput__internal_alias", scope: !1530, file: !1530, line: 262, type: !5851, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5851 = !DISubroutineType(types: !5852)
!5852 = !{null, !1273, !1345, !1285, !1104}
!5853 = !DISubprogram(name: "xmlParseCharEncoding__internal_alias", scope: !1530, file: !1530, line: 7033, type: !5854, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{!2157, !1285}
!5856 = distinct !DISubprogram(name: "xmlEscapeEntities", scope: !2, file: !2, line: 207, type: !5857, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !5859)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!1104, !1303, !1304, !1178, !1304}
!5859 = !{!5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869}
!5860 = !DILocalVariable(name: "out", arg: 1, scope: !5856, file: !2, line: 207, type: !1303)
!5861 = !DILocalVariable(name: "outlen", arg: 2, scope: !5856, file: !2, line: 207, type: !1304)
!5862 = !DILocalVariable(name: "in", arg: 3, scope: !5856, file: !2, line: 208, type: !1178)
!5863 = !DILocalVariable(name: "inlen", arg: 4, scope: !5856, file: !2, line: 208, type: !1304)
!5864 = !DILocalVariable(name: "outstart", scope: !5856, file: !2, line: 209, type: !1303)
!5865 = !DILocalVariable(name: "base", scope: !5856, file: !2, line: 210, type: !1305)
!5866 = !DILocalVariable(name: "outend", scope: !5856, file: !2, line: 211, type: !1303)
!5867 = !DILocalVariable(name: "inend", scope: !5856, file: !2, line: 212, type: !1305)
!5868 = !DILocalVariable(name: "val", scope: !5856, file: !2, line: 213, type: !1104)
!5869 = !DILabel(scope: !5856, name: "error", file: !2, line: 312)
!5870 = !DILocation(line: 207, column: 34, scope: !5856)
!5871 = !DILocation(line: 207, column: 44, scope: !5856)
!5872 = !DILocation(line: 208, column: 33, scope: !5856)
!5873 = !DILocation(line: 208, column: 42, scope: !5856)
!5874 = !DILocation(line: 209, column: 5, scope: !5856)
!5875 = !DILocation(line: 209, column: 20, scope: !5856)
!5876 = !DILocation(line: 209, column: 31, scope: !5856)
!5877 = !DILocation(line: 210, column: 5, scope: !5856)
!5878 = !DILocation(line: 210, column: 26, scope: !5856)
!5879 = !DILocation(line: 210, column: 33, scope: !5856)
!5880 = !DILocation(line: 211, column: 5, scope: !5856)
!5881 = !DILocation(line: 211, column: 20, scope: !5856)
!5882 = !DILocation(line: 211, column: 29, scope: !5856)
!5883 = !DILocation(line: 211, column: 36, scope: !5856)
!5884 = !DILocation(line: 211, column: 35, scope: !5856)
!5885 = !DILocation(line: 211, column: 33, scope: !5856)
!5886 = !DILocation(line: 212, column: 5, scope: !5856)
!5887 = !DILocation(line: 212, column: 26, scope: !5856)
!5888 = !DILocation(line: 213, column: 5, scope: !5856)
!5889 = !DILocation(line: 213, column: 9, scope: !5856)
!5890 = !DILocation(line: 215, column: 13, scope: !5856)
!5891 = !DILocation(line: 215, column: 20, scope: !5856)
!5892 = !DILocation(line: 215, column: 19, scope: !5856)
!5893 = !DILocation(line: 215, column: 16, scope: !5856)
!5894 = !DILocation(line: 215, column: 11, scope: !5856)
!5895 = !DILocation(line: 217, column: 5, scope: !5856)
!5896 = !DILocation(line: 217, column: 13, scope: !5856)
!5897 = !DILocation(line: 217, column: 18, scope: !5856)
!5898 = !DILocation(line: 217, column: 16, scope: !5856)
!5899 = !DILocation(line: 217, column: 25, scope: !5856)
!5900 = !DILocation(line: 217, column: 29, scope: !5856)
!5901 = !DILocation(line: 217, column: 35, scope: !5856)
!5902 = !DILocation(line: 217, column: 33, scope: !5856)
!5903 = !DILocation(line: 0, scope: !5856)
!5904 = !DILocation(line: 218, column: 7, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !2, line: 218, column: 6)
!5906 = distinct !DILexicalBlock(scope: !5856, file: !2, line: 217, column: 44)
!5907 = !DILocation(line: 218, column: 6, scope: !5905)
!5908 = !DILocation(line: 218, column: 10, scope: !5905)
!5909 = !DILocation(line: 218, column: 6, scope: !5906)
!5910 = !DILocation(line: 219, column: 10, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !2, line: 219, column: 10)
!5912 = distinct !DILexicalBlock(scope: !5905, file: !2, line: 218, column: 18)
!5913 = !DILocation(line: 219, column: 19, scope: !5911)
!5914 = !DILocation(line: 219, column: 17, scope: !5911)
!5915 = !DILocation(line: 219, column: 23, scope: !5911)
!5916 = !DILocation(line: 219, column: 10, scope: !5912)
!5917 = !DILocation(line: 219, column: 28, scope: !5911)
!5918 = !DILocation(line: 220, column: 10, scope: !5912)
!5919 = !DILocation(line: 220, column: 13, scope: !5912)
!5920 = !DILocation(line: 221, column: 10, scope: !5912)
!5921 = !DILocation(line: 221, column: 13, scope: !5912)
!5922 = !DILocation(line: 222, column: 10, scope: !5912)
!5923 = !DILocation(line: 222, column: 13, scope: !5912)
!5924 = !DILocation(line: 223, column: 10, scope: !5912)
!5925 = !DILocation(line: 223, column: 13, scope: !5912)
!5926 = !DILocation(line: 224, column: 8, scope: !5912)
!5927 = !DILocation(line: 225, column: 6, scope: !5912)
!5928 = distinct !{!5928, !5895, !5929, !1687}
!5929 = !DILocation(line: 308, column: 5, scope: !5856)
!5930 = !DILocation(line: 226, column: 14, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5905, file: !2, line: 226, column: 13)
!5932 = !DILocation(line: 226, column: 13, scope: !5931)
!5933 = !DILocation(line: 226, column: 17, scope: !5931)
!5934 = !DILocation(line: 226, column: 13, scope: !5905)
!5935 = !DILocation(line: 227, column: 10, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !2, line: 227, column: 10)
!5937 = distinct !DILexicalBlock(scope: !5931, file: !2, line: 226, column: 25)
!5938 = !DILocation(line: 227, column: 19, scope: !5936)
!5939 = !DILocation(line: 227, column: 17, scope: !5936)
!5940 = !DILocation(line: 227, column: 23, scope: !5936)
!5941 = !DILocation(line: 227, column: 10, scope: !5937)
!5942 = !DILocation(line: 227, column: 28, scope: !5936)
!5943 = !DILocation(line: 228, column: 10, scope: !5937)
!5944 = !DILocation(line: 228, column: 13, scope: !5937)
!5945 = !DILocation(line: 229, column: 10, scope: !5937)
!5946 = !DILocation(line: 229, column: 13, scope: !5937)
!5947 = !DILocation(line: 230, column: 10, scope: !5937)
!5948 = !DILocation(line: 230, column: 13, scope: !5937)
!5949 = !DILocation(line: 231, column: 10, scope: !5937)
!5950 = !DILocation(line: 231, column: 13, scope: !5937)
!5951 = !DILocation(line: 232, column: 8, scope: !5937)
!5952 = !DILocation(line: 233, column: 6, scope: !5937)
!5953 = !DILocation(line: 234, column: 14, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5931, file: !2, line: 234, column: 13)
!5955 = !DILocation(line: 234, column: 13, scope: !5954)
!5956 = !DILocation(line: 234, column: 17, scope: !5954)
!5957 = !DILocation(line: 234, column: 13, scope: !5931)
!5958 = !DILocation(line: 235, column: 10, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !2, line: 235, column: 10)
!5960 = distinct !DILexicalBlock(scope: !5954, file: !2, line: 234, column: 25)
!5961 = !DILocation(line: 235, column: 19, scope: !5959)
!5962 = !DILocation(line: 235, column: 17, scope: !5959)
!5963 = !DILocation(line: 235, column: 23, scope: !5959)
!5964 = !DILocation(line: 235, column: 10, scope: !5960)
!5965 = !DILocation(line: 235, column: 28, scope: !5959)
!5966 = !DILocation(line: 236, column: 10, scope: !5960)
!5967 = !DILocation(line: 236, column: 13, scope: !5960)
!5968 = !DILocation(line: 237, column: 10, scope: !5960)
!5969 = !DILocation(line: 237, column: 13, scope: !5960)
!5970 = !DILocation(line: 238, column: 10, scope: !5960)
!5971 = !DILocation(line: 238, column: 13, scope: !5960)
!5972 = !DILocation(line: 239, column: 10, scope: !5960)
!5973 = !DILocation(line: 239, column: 13, scope: !5960)
!5974 = !DILocation(line: 240, column: 10, scope: !5960)
!5975 = !DILocation(line: 240, column: 13, scope: !5960)
!5976 = !DILocation(line: 241, column: 8, scope: !5960)
!5977 = !DILocation(line: 242, column: 6, scope: !5960)
!5978 = !DILocation(line: 243, column: 16, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5954, file: !2, line: 243, column: 13)
!5980 = !DILocation(line: 243, column: 15, scope: !5979)
!5981 = !DILocation(line: 243, column: 19, scope: !5979)
!5982 = !DILocation(line: 243, column: 28, scope: !5979)
!5983 = !DILocation(line: 243, column: 33, scope: !5979)
!5984 = !DILocation(line: 243, column: 32, scope: !5979)
!5985 = !DILocation(line: 243, column: 36, scope: !5979)
!5986 = !DILocation(line: 243, column: 45, scope: !5979)
!5987 = !DILocation(line: 244, column: 15, scope: !5979)
!5988 = !DILocation(line: 244, column: 14, scope: !5979)
!5989 = !DILocation(line: 244, column: 18, scope: !5979)
!5990 = !DILocation(line: 244, column: 27, scope: !5979)
!5991 = !DILocation(line: 244, column: 32, scope: !5979)
!5992 = !DILocation(line: 244, column: 31, scope: !5979)
!5993 = !DILocation(line: 244, column: 35, scope: !5979)
!5994 = !DILocation(line: 243, column: 13, scope: !5954)
!5995 = !DILocation(line: 248, column: 18, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5979, file: !2, line: 244, column: 45)
!5997 = !DILocation(line: 248, column: 15, scope: !5996)
!5998 = !DILocation(line: 248, column: 10, scope: !5996)
!5999 = !DILocation(line: 248, column: 13, scope: !5996)
!6000 = !DILocation(line: 249, column: 6, scope: !5996)
!6001 = !DILocation(line: 250, column: 14, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5979, file: !2, line: 250, column: 13)
!6003 = !DILocation(line: 250, column: 13, scope: !6002)
!6004 = !DILocation(line: 250, column: 17, scope: !6002)
!6005 = !DILocation(line: 250, column: 13, scope: !5979)
!6006 = !DILocation(line: 254, column: 10, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6008, file: !2, line: 254, column: 10)
!6008 = distinct !DILexicalBlock(scope: !6002, file: !2, line: 250, column: 26)
!6009 = !DILocation(line: 254, column: 19, scope: !6007)
!6010 = !DILocation(line: 254, column: 17, scope: !6007)
!6011 = !DILocation(line: 254, column: 23, scope: !6007)
!6012 = !DILocation(line: 254, column: 10, scope: !6008)
!6013 = !DILocation(line: 254, column: 29, scope: !6007)
!6014 = !DILocation(line: 256, column: 11, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6008, file: !2, line: 256, column: 10)
!6016 = !DILocation(line: 256, column: 10, scope: !6015)
!6017 = !DILocation(line: 256, column: 14, scope: !6015)
!6018 = !DILocation(line: 256, column: 10, scope: !6008)
!6019 = !DILocation(line: 257, column: 3, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6015, file: !2, line: 256, column: 22)
!6021 = !DILocation(line: 258, column: 5, scope: !6020)
!6022 = !DILocation(line: 259, column: 3, scope: !6020)
!6023 = !DILocation(line: 260, column: 18, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6015, file: !2, line: 260, column: 17)
!6025 = !DILocation(line: 260, column: 17, scope: !6024)
!6026 = !DILocation(line: 260, column: 21, scope: !6024)
!6027 = !DILocation(line: 260, column: 17, scope: !6015)
!6028 = !DILocation(line: 261, column: 7, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !2, line: 261, column: 7)
!6030 = distinct !DILexicalBlock(scope: !6024, file: !2, line: 260, column: 29)
!6031 = !DILocation(line: 261, column: 15, scope: !6029)
!6032 = !DILocation(line: 261, column: 13, scope: !6029)
!6033 = !DILocation(line: 261, column: 18, scope: !6029)
!6034 = !DILocation(line: 261, column: 7, scope: !6030)
!6035 = !DILocation(line: 261, column: 23, scope: !6029)
!6036 = !DILocation(line: 262, column: 10, scope: !6030)
!6037 = !DILocation(line: 262, column: 9, scope: !6030)
!6038 = !DILocation(line: 262, column: 17, scope: !6030)
!6039 = !DILocation(line: 262, column: 7, scope: !6030)
!6040 = !DILocation(line: 263, column: 7, scope: !6030)
!6041 = !DILocation(line: 264, column: 11, scope: !6030)
!6042 = !DILocation(line: 264, column: 10, scope: !6030)
!6043 = !DILocation(line: 264, column: 18, scope: !6030)
!6044 = !DILocation(line: 264, column: 7, scope: !6030)
!6045 = !DILocation(line: 265, column: 6, scope: !6030)
!6046 = !DILocation(line: 266, column: 6, scope: !6030)
!6047 = !DILocation(line: 266, column: 18, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6024, file: !2, line: 266, column: 17)
!6049 = !DILocation(line: 266, column: 17, scope: !6048)
!6050 = !DILocation(line: 266, column: 21, scope: !6048)
!6051 = !DILocation(line: 266, column: 17, scope: !6024)
!6052 = !DILocation(line: 267, column: 7, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !2, line: 267, column: 7)
!6054 = distinct !DILexicalBlock(scope: !6048, file: !2, line: 266, column: 29)
!6055 = !DILocation(line: 267, column: 15, scope: !6053)
!6056 = !DILocation(line: 267, column: 13, scope: !6053)
!6057 = !DILocation(line: 267, column: 18, scope: !6053)
!6058 = !DILocation(line: 267, column: 7, scope: !6054)
!6059 = !DILocation(line: 267, column: 23, scope: !6053)
!6060 = !DILocation(line: 268, column: 10, scope: !6054)
!6061 = !DILocation(line: 268, column: 9, scope: !6054)
!6062 = !DILocation(line: 268, column: 17, scope: !6054)
!6063 = !DILocation(line: 268, column: 7, scope: !6054)
!6064 = !DILocation(line: 269, column: 7, scope: !6054)
!6065 = !DILocation(line: 270, column: 11, scope: !6054)
!6066 = !DILocation(line: 270, column: 10, scope: !6054)
!6067 = !DILocation(line: 270, column: 18, scope: !6054)
!6068 = !DILocation(line: 270, column: 7, scope: !6054)
!6069 = !DILocation(line: 271, column: 7, scope: !6054)
!6070 = !DILocation(line: 272, column: 11, scope: !6054)
!6071 = !DILocation(line: 272, column: 10, scope: !6054)
!6072 = !DILocation(line: 272, column: 18, scope: !6054)
!6073 = !DILocation(line: 272, column: 7, scope: !6054)
!6074 = !DILocation(line: 273, column: 6, scope: !6054)
!6075 = !DILocation(line: 274, column: 6, scope: !6054)
!6076 = !DILocation(line: 274, column: 18, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6048, file: !2, line: 274, column: 17)
!6078 = !DILocation(line: 274, column: 17, scope: !6077)
!6079 = !DILocation(line: 274, column: 21, scope: !6077)
!6080 = !DILocation(line: 274, column: 17, scope: !6048)
!6081 = !DILocation(line: 275, column: 7, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !2, line: 275, column: 7)
!6083 = distinct !DILexicalBlock(scope: !6077, file: !2, line: 274, column: 29)
!6084 = !DILocation(line: 275, column: 15, scope: !6082)
!6085 = !DILocation(line: 275, column: 13, scope: !6082)
!6086 = !DILocation(line: 275, column: 18, scope: !6082)
!6087 = !DILocation(line: 275, column: 7, scope: !6083)
!6088 = !DILocation(line: 275, column: 23, scope: !6082)
!6089 = !DILocation(line: 276, column: 10, scope: !6083)
!6090 = !DILocation(line: 276, column: 9, scope: !6083)
!6091 = !DILocation(line: 276, column: 17, scope: !6083)
!6092 = !DILocation(line: 276, column: 7, scope: !6083)
!6093 = !DILocation(line: 277, column: 7, scope: !6083)
!6094 = !DILocation(line: 278, column: 11, scope: !6083)
!6095 = !DILocation(line: 278, column: 10, scope: !6083)
!6096 = !DILocation(line: 278, column: 18, scope: !6083)
!6097 = !DILocation(line: 278, column: 7, scope: !6083)
!6098 = !DILocation(line: 279, column: 7, scope: !6083)
!6099 = !DILocation(line: 280, column: 11, scope: !6083)
!6100 = !DILocation(line: 280, column: 10, scope: !6083)
!6101 = !DILocation(line: 280, column: 18, scope: !6083)
!6102 = !DILocation(line: 280, column: 7, scope: !6083)
!6103 = !DILocation(line: 281, column: 7, scope: !6083)
!6104 = !DILocation(line: 282, column: 11, scope: !6083)
!6105 = !DILocation(line: 282, column: 10, scope: !6083)
!6106 = !DILocation(line: 282, column: 18, scope: !6083)
!6107 = !DILocation(line: 282, column: 7, scope: !6083)
!6108 = !DILocation(line: 283, column: 6, scope: !6083)
!6109 = !DILocation(line: 284, column: 6, scope: !6083)
!6110 = !DILocation(line: 285, column: 3, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6077, file: !2, line: 284, column: 13)
!6112 = !DILocation(line: 286, column: 5, scope: !6111)
!6113 = !DILocation(line: 287, column: 3, scope: !6111)
!6114 = !DILocation(line: 289, column: 11, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6008, file: !2, line: 289, column: 10)
!6116 = !DILocation(line: 289, column: 10, scope: !6008)
!6117 = !DILocation(line: 290, column: 3, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6115, file: !2, line: 289, column: 25)
!6119 = !DILocation(line: 291, column: 5, scope: !6118)
!6120 = !DILocation(line: 292, column: 3, scope: !6118)
!6121 = !DILocation(line: 298, column: 35, scope: !6008)
!6122 = !DILocation(line: 298, column: 40, scope: !6008)
!6123 = !DILocation(line: 298, column: 12, scope: !6008)
!6124 = !DILocation(line: 298, column: 10, scope: !6008)
!6125 = !DILocation(line: 299, column: 2, scope: !6008)
!6126 = !DILocation(line: 299, column: 13, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6002, file: !2, line: 299, column: 13)
!6128 = !DILocation(line: 299, column: 13, scope: !6002)
!6129 = !DILocation(line: 300, column: 10, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !2, line: 300, column: 10)
!6131 = distinct !DILexicalBlock(scope: !6127, file: !2, line: 299, column: 32)
!6132 = !DILocation(line: 300, column: 19, scope: !6130)
!6133 = !DILocation(line: 300, column: 17, scope: !6130)
!6134 = !DILocation(line: 300, column: 23, scope: !6130)
!6135 = !DILocation(line: 300, column: 10, scope: !6131)
!6136 = !DILocation(line: 300, column: 28, scope: !6130)
!6137 = !DILocation(line: 301, column: 35, scope: !6131)
!6138 = !DILocation(line: 301, column: 43, scope: !6131)
!6139 = !DILocation(line: 301, column: 40, scope: !6131)
!6140 = !DILocation(line: 301, column: 12, scope: !6131)
!6141 = !DILocation(line: 301, column: 10, scope: !6131)
!6142 = !DILocation(line: 302, column: 2, scope: !6131)
!6143 = !DILocation(line: 303, column: 6, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6127, file: !2, line: 302, column: 9)
!6145 = !DILocation(line: 303, column: 22, scope: !6144)
!6146 = !DILocation(line: 305, column: 8, scope: !6144)
!6147 = !DILocation(line: 306, column: 6, scope: !6144)
!6148 = !DILocation(line: 309, column: 15, scope: !5856)
!6149 = !DILocation(line: 309, column: 21, scope: !5856)
!6150 = !DILocation(line: 309, column: 19, scope: !5856)
!6151 = !DILocation(line: 309, column: 6, scope: !5856)
!6152 = !DILocation(line: 309, column: 13, scope: !5856)
!6153 = !DILocation(line: 310, column: 14, scope: !5856)
!6154 = !DILocation(line: 310, column: 19, scope: !5856)
!6155 = !DILocation(line: 310, column: 17, scope: !5856)
!6156 = !DILocation(line: 310, column: 6, scope: !5856)
!6157 = !DILocation(line: 310, column: 12, scope: !5856)
!6158 = !DILocation(line: 311, column: 5, scope: !5856)
!6159 = !DILocation(line: 312, column: 1, scope: !5856)
!6160 = !DILocation(line: 313, column: 15, scope: !5856)
!6161 = !DILocation(line: 313, column: 21, scope: !5856)
!6162 = !DILocation(line: 313, column: 19, scope: !5856)
!6163 = !DILocation(line: 313, column: 6, scope: !5856)
!6164 = !DILocation(line: 313, column: 13, scope: !5856)
!6165 = !DILocation(line: 314, column: 14, scope: !5856)
!6166 = !DILocation(line: 314, column: 19, scope: !5856)
!6167 = !DILocation(line: 314, column: 17, scope: !5856)
!6168 = !DILocation(line: 314, column: 6, scope: !5856)
!6169 = !DILocation(line: 314, column: 12, scope: !5856)
!6170 = !DILocation(line: 315, column: 5, scope: !5856)
!6171 = !DILocation(line: 316, column: 1, scope: !5856)
!6172 = distinct !DISubprogram(name: "xmlSaveClearEncoding", scope: !2, file: !2, line: 579, type: !3208, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6173)
!6173 = !{!6174, !6175}
!6174 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6172, file: !2, line: 579, type: !1324)
!6175 = !DILocalVariable(name: "buf", scope: !6172, file: !2, line: 580, type: !1273)
!6176 = !DILocation(line: 579, column: 48, scope: !6172)
!6177 = !DILocation(line: 580, column: 5, scope: !6172)
!6178 = !DILocation(line: 580, column: 24, scope: !6172)
!6179 = !DILocation(line: 580, column: 30, scope: !6172)
!6180 = !DILocation(line: 580, column: 36, scope: !6172)
!6181 = !DILocation(line: 581, column: 26, scope: !6172)
!6182 = !DILocation(line: 581, column: 5, scope: !6172)
!6183 = !DILocation(line: 582, column: 25, scope: !6172)
!6184 = !DILocation(line: 582, column: 30, scope: !6172)
!6185 = !DILocation(line: 582, column: 5, scope: !6172)
!6186 = !DILocation(line: 583, column: 16, scope: !6172)
!6187 = !DILocation(line: 583, column: 21, scope: !6172)
!6188 = !DILocation(line: 583, column: 5, scope: !6172)
!6189 = !DILocation(line: 584, column: 5, scope: !6172)
!6190 = !DILocation(line: 584, column: 10, scope: !6172)
!6191 = !DILocation(line: 584, column: 18, scope: !6172)
!6192 = !DILocation(line: 585, column: 5, scope: !6172)
!6193 = !DILocation(line: 585, column: 10, scope: !6172)
!6194 = !DILocation(line: 585, column: 15, scope: !6172)
!6195 = !DILocation(line: 587, column: 1, scope: !6172)
!6196 = !DILocation(line: 586, column: 5, scope: !6172)
!6197 = !DISubprogram(name: "xmlBufCreate", scope: !1575, file: !1575, line: 22, type: !6198, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{!1314}
!6200 = !DISubprogram(name: "xmlCharEncOutput", scope: !6201, file: !6201, line: 25, type: !6202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6201 = !DIFile(filename: "./enc.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "ba968a7ff7d49c6975eeddee901d5fe6")
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!1104, !1273, !1104}
!6204 = !DISubprogram(name: "__xmlGenericError__internal_alias", scope: !1530, file: !1530, line: 72, type: !6205, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!6207}
!6207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6208, size: 64)
!6208 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlGenericErrorFunc", file: !355, line: 845, baseType: !6209)
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6210, size: 64)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{null, !1164, !1285, null}
!6212 = !DISubprogram(name: "__xmlGenericErrorContext__internal_alias", scope: !1530, file: !1530, line: 82, type: !6213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!6215}
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!6216 = !DISubprogram(name: "xmlBufFree", scope: !1575, file: !1575, line: 30, type: !6217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !1314}
!6219 = distinct !DISubprogram(name: "htmlNodeDumpOutputInternal", scope: !2, file: !2, line: 836, type: !6220, scopeLine: 836, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6222)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{!1104, !1324, !1169}
!6222 = !{!6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230}
!6223 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6219, file: !2, line: 836, type: !1324)
!6224 = !DILocalVariable(name: "cur", arg: 2, scope: !6219, file: !2, line: 836, type: !1169)
!6225 = !DILocalVariable(name: "oldenc", scope: !6219, file: !2, line: 837, type: !1178)
!6226 = !DILocalVariable(name: "oldctxtenc", scope: !6219, file: !2, line: 838, type: !1178)
!6227 = !DILocalVariable(name: "encoding", scope: !6219, file: !2, line: 839, type: !1178)
!6228 = !DILocalVariable(name: "buf", scope: !6219, file: !2, line: 840, type: !1273)
!6229 = !DILocalVariable(name: "switched_encoding", scope: !6219, file: !2, line: 841, type: !1104)
!6230 = !DILocalVariable(name: "doc", scope: !6219, file: !2, line: 842, type: !1345)
!6231 = !DILocation(line: 836, column: 43, scope: !6219)
!6232 = !DILocation(line: 836, column: 60, scope: !6219)
!6233 = !DILocation(line: 837, column: 5, scope: !6219)
!6234 = !DILocation(line: 837, column: 20, scope: !6219)
!6235 = !DILocation(line: 838, column: 5, scope: !6219)
!6236 = !DILocation(line: 838, column: 20, scope: !6219)
!6237 = !DILocation(line: 838, column: 33, scope: !6219)
!6238 = !DILocation(line: 838, column: 39, scope: !6219)
!6239 = !DILocation(line: 839, column: 5, scope: !6219)
!6240 = !DILocation(line: 839, column: 20, scope: !6219)
!6241 = !DILocation(line: 839, column: 31, scope: !6219)
!6242 = !DILocation(line: 839, column: 37, scope: !6219)
!6243 = !DILocation(line: 840, column: 5, scope: !6219)
!6244 = !DILocation(line: 840, column: 24, scope: !6219)
!6245 = !DILocation(line: 840, column: 30, scope: !6219)
!6246 = !DILocation(line: 840, column: 36, scope: !6219)
!6247 = !DILocation(line: 841, column: 5, scope: !6219)
!6248 = !DILocation(line: 841, column: 9, scope: !6219)
!6249 = !DILocation(line: 842, column: 5, scope: !6219)
!6250 = !DILocation(line: 842, column: 15, scope: !6219)
!6251 = !DILocation(line: 844, column: 5, scope: !6219)
!6252 = !DILocation(line: 846, column: 11, scope: !6219)
!6253 = !DILocation(line: 846, column: 16, scope: !6219)
!6254 = !DILocation(line: 846, column: 9, scope: !6219)
!6255 = !DILocation(line: 847, column: 9, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 847, column: 9)
!6257 = !DILocation(line: 847, column: 13, scope: !6256)
!6258 = !DILocation(line: 847, column: 9, scope: !6219)
!6259 = !DILocation(line: 848, column: 18, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6256, file: !2, line: 847, column: 22)
!6261 = !DILocation(line: 848, column: 23, scope: !6260)
!6262 = !DILocation(line: 848, column: 16, scope: !6260)
!6263 = !DILocation(line: 849, column: 6, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !2, line: 849, column: 6)
!6265 = !DILocation(line: 849, column: 12, scope: !6264)
!6266 = !DILocation(line: 849, column: 21, scope: !6264)
!6267 = !DILocation(line: 849, column: 6, scope: !6260)
!6268 = !DILocation(line: 850, column: 31, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6264, file: !2, line: 849, column: 30)
!6270 = !DILocation(line: 850, column: 37, scope: !6269)
!6271 = !DILocation(line: 850, column: 6, scope: !6269)
!6272 = !DILocation(line: 850, column: 11, scope: !6269)
!6273 = !DILocation(line: 850, column: 20, scope: !6269)
!6274 = !DILocation(line: 851, column: 2, scope: !6269)
!6275 = !DILocation(line: 851, column: 13, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6264, file: !2, line: 851, column: 13)
!6277 = !DILocation(line: 851, column: 18, scope: !6276)
!6278 = !DILocation(line: 851, column: 27, scope: !6276)
!6279 = !DILocation(line: 851, column: 13, scope: !6264)
!6280 = !DILocation(line: 852, column: 17, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6276, file: !2, line: 851, column: 36)
!6282 = !DILocation(line: 852, column: 22, scope: !6281)
!6283 = !DILocation(line: 852, column: 15, scope: !6281)
!6284 = !DILocation(line: 853, column: 2, scope: !6281)
!6285 = !DILocation(line: 854, column: 5, scope: !6260)
!6286 = !DILocation(line: 856, column: 10, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 856, column: 9)
!6288 = !DILocation(line: 856, column: 19, scope: !6287)
!6289 = !DILocation(line: 856, column: 28, scope: !6287)
!6290 = !DILocation(line: 856, column: 32, scope: !6287)
!6291 = !DILocation(line: 856, column: 36, scope: !6287)
!6292 = !DILocation(line: 856, column: 9, scope: !6219)
!6293 = !DILocation(line: 857, column: 22, scope: !6287)
!6294 = !DILocation(line: 857, column: 45, scope: !6287)
!6295 = !DILocation(line: 857, column: 2, scope: !6287)
!6296 = !DILocation(line: 858, column: 10, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 858, column: 9)
!6298 = !DILocation(line: 858, column: 19, scope: !6297)
!6299 = !DILocation(line: 858, column: 28, scope: !6297)
!6300 = !DILocation(line: 858, column: 32, scope: !6297)
!6301 = !DILocation(line: 858, column: 36, scope: !6297)
!6302 = !DILocation(line: 858, column: 9, scope: !6219)
!6303 = !DILocation(line: 859, column: 33, scope: !6297)
!6304 = !DILocation(line: 859, column: 13, scope: !6297)
!6305 = !DILocation(line: 859, column: 11, scope: !6297)
!6306 = !DILocation(line: 859, column: 2, scope: !6297)
!6307 = !DILocation(line: 860, column: 9, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 860, column: 9)
!6309 = !DILocation(line: 860, column: 18, scope: !6308)
!6310 = !DILocation(line: 860, column: 9, scope: !6219)
!6311 = !DILocation(line: 861, column: 11, scope: !6308)
!6312 = !DILocation(line: 861, column: 2, scope: !6308)
!6313 = !DILocation(line: 862, column: 10, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 862, column: 9)
!6315 = !DILocation(line: 862, column: 19, scope: !6314)
!6316 = !DILocation(line: 862, column: 28, scope: !6314)
!6317 = !DILocation(line: 862, column: 32, scope: !6314)
!6318 = !DILocation(line: 862, column: 43, scope: !6314)
!6319 = !DILocation(line: 862, column: 52, scope: !6314)
!6320 = !DILocation(line: 863, column: 3, scope: !6314)
!6321 = !DILocation(line: 863, column: 8, scope: !6314)
!6322 = !DILocation(line: 863, column: 16, scope: !6314)
!6323 = !DILocation(line: 863, column: 25, scope: !6314)
!6324 = !DILocation(line: 863, column: 29, scope: !6314)
!6325 = !DILocation(line: 863, column: 34, scope: !6314)
!6326 = !DILocation(line: 863, column: 39, scope: !6314)
!6327 = !DILocation(line: 862, column: 9, scope: !6219)
!6328 = !DILocation(line: 864, column: 28, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !2, line: 864, column: 6)
!6330 = distinct !DILexicalBlock(scope: !6314, file: !2, line: 863, column: 49)
!6331 = !DILocation(line: 864, column: 48, scope: !6329)
!6332 = !DILocation(line: 864, column: 6, scope: !6329)
!6333 = !DILocation(line: 864, column: 58, scope: !6329)
!6334 = !DILocation(line: 864, column: 6, scope: !6330)
!6335 = !DILocation(line: 865, column: 22, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6329, file: !2, line: 864, column: 63)
!6337 = !DILocation(line: 865, column: 6, scope: !6336)
!6338 = !DILocation(line: 865, column: 11, scope: !6336)
!6339 = !DILocation(line: 865, column: 20, scope: !6336)
!6340 = !DILocation(line: 866, column: 6, scope: !6336)
!6341 = !DILocation(line: 868, column: 20, scope: !6330)
!6342 = !DILocation(line: 869, column: 5, scope: !6330)
!6343 = !DILocation(line: 870, column: 9, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 870, column: 9)
!6345 = !DILocation(line: 870, column: 15, scope: !6344)
!6346 = !DILocation(line: 870, column: 23, scope: !6344)
!6347 = !DILocation(line: 870, column: 9, scope: !6219)
!6348 = !DILocation(line: 871, column: 27, scope: !6344)
!6349 = !DILocation(line: 871, column: 32, scope: !6344)
!6350 = !DILocation(line: 871, column: 37, scope: !6344)
!6351 = !DILocation(line: 872, column: 26, scope: !6344)
!6352 = !DILocation(line: 871, column: 2, scope: !6344)
!6353 = !DILocation(line: 874, column: 27, scope: !6344)
!6354 = !DILocation(line: 874, column: 32, scope: !6344)
!6355 = !DILocation(line: 874, column: 37, scope: !6344)
!6356 = !DILocation(line: 875, column: 26, scope: !6344)
!6357 = !DILocation(line: 874, column: 2, scope: !6344)
!6358 = !DILocation(line: 879, column: 10, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 879, column: 9)
!6360 = !DILocation(line: 879, column: 9, scope: !6359)
!6361 = !DILocation(line: 879, column: 29, scope: !6359)
!6362 = !DILocation(line: 879, column: 33, scope: !6359)
!6363 = !DILocation(line: 879, column: 44, scope: !6359)
!6364 = !DILocation(line: 879, column: 9, scope: !6219)
!6365 = !DILocation(line: 880, column: 23, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6359, file: !2, line: 879, column: 54)
!6367 = !DILocation(line: 880, column: 2, scope: !6366)
!6368 = !DILocation(line: 881, column: 5, scope: !6366)
!6369 = !DILocation(line: 882, column: 9, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 882, column: 9)
!6371 = !DILocation(line: 882, column: 13, scope: !6370)
!6372 = !DILocation(line: 882, column: 9, scope: !6219)
!6373 = !DILocation(line: 883, column: 18, scope: !6370)
!6374 = !DILocation(line: 883, column: 2, scope: !6370)
!6375 = !DILocation(line: 883, column: 7, scope: !6370)
!6376 = !DILocation(line: 883, column: 16, scope: !6370)
!6377 = !DILocation(line: 884, column: 5, scope: !6219)
!6378 = !DILocation(line: 885, column: 1, scope: !6219)
!6379 = distinct !DISubprogram(name: "xmlDtdDumpOutput", scope: !2, file: !2, line: 706, type: !6380, scopeLine: 706, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6382)
!6380 = !DISubroutineType(types: !6381)
!6381 = !{null, !1324, !1348}
!6382 = !{!6383, !6384, !6385, !6386, !6387}
!6383 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6379, file: !2, line: 706, type: !1324)
!6384 = !DILocalVariable(name: "dtd", arg: 2, scope: !6379, file: !2, line: 706, type: !1348)
!6385 = !DILocalVariable(name: "buf", scope: !6379, file: !2, line: 707, type: !1273)
!6386 = !DILocalVariable(name: "format", scope: !6379, file: !2, line: 708, type: !1104)
!6387 = !DILocalVariable(name: "level", scope: !6379, file: !2, line: 708, type: !1104)
!6388 = !DILocation(line: 706, column: 33, scope: !6379)
!6389 = !DILocation(line: 706, column: 49, scope: !6379)
!6390 = !DILocation(line: 707, column: 5, scope: !6379)
!6391 = !DILocation(line: 707, column: 24, scope: !6379)
!6392 = !DILocation(line: 708, column: 5, scope: !6379)
!6393 = !DILocation(line: 708, column: 9, scope: !6379)
!6394 = !DILocation(line: 708, column: 17, scope: !6379)
!6395 = !DILocation(line: 710, column: 9, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6379, file: !2, line: 710, column: 9)
!6397 = !DILocation(line: 710, column: 13, scope: !6396)
!6398 = !DILocation(line: 710, column: 9, scope: !6379)
!6399 = !DILocation(line: 710, column: 22, scope: !6396)
!6400 = !DILocation(line: 711, column: 10, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6379, file: !2, line: 711, column: 9)
!6402 = !DILocation(line: 711, column: 15, scope: !6401)
!6403 = !DILocation(line: 711, column: 24, scope: !6401)
!6404 = !DILocation(line: 711, column: 28, scope: !6401)
!6405 = !DILocation(line: 711, column: 34, scope: !6401)
!6406 = !DILocation(line: 711, column: 38, scope: !6401)
!6407 = !DILocation(line: 711, column: 9, scope: !6379)
!6408 = !DILocation(line: 712, column: 9, scope: !6401)
!6409 = !DILocation(line: 713, column: 11, scope: !6379)
!6410 = !DILocation(line: 713, column: 17, scope: !6379)
!6411 = !DILocation(line: 713, column: 9, scope: !6379)
!6412 = !DILocation(line: 714, column: 26, scope: !6379)
!6413 = !DILocation(line: 714, column: 5, scope: !6379)
!6414 = !DILocation(line: 715, column: 32, scope: !6379)
!6415 = !DILocation(line: 715, column: 51, scope: !6379)
!6416 = !DILocation(line: 715, column: 56, scope: !6379)
!6417 = !{!2482, !1472, i64 16}
!6418 = !DILocation(line: 715, column: 5, scope: !6379)
!6419 = !DILocation(line: 716, column: 9, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6379, file: !2, line: 716, column: 9)
!6421 = !DILocation(line: 716, column: 14, scope: !6420)
!6422 = !DILocation(line: 716, column: 25, scope: !6420)
!6423 = !DILocation(line: 716, column: 9, scope: !6379)
!6424 = !DILocation(line: 717, column: 23, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6420, file: !2, line: 716, column: 34)
!6426 = !DILocation(line: 717, column: 2, scope: !6425)
!6427 = !DILocation(line: 718, column: 26, scope: !6425)
!6428 = !DILocation(line: 718, column: 31, scope: !6425)
!6429 = !DILocation(line: 718, column: 39, scope: !6425)
!6430 = !DILocation(line: 718, column: 44, scope: !6425)
!6431 = !DILocation(line: 718, column: 2, scope: !6425)
!6432 = !DILocation(line: 719, column: 23, scope: !6425)
!6433 = !DILocation(line: 719, column: 2, scope: !6425)
!6434 = !DILocation(line: 720, column: 26, scope: !6425)
!6435 = !DILocation(line: 720, column: 31, scope: !6425)
!6436 = !DILocation(line: 720, column: 39, scope: !6425)
!6437 = !DILocation(line: 720, column: 44, scope: !6425)
!6438 = !DILocation(line: 720, column: 2, scope: !6425)
!6439 = !DILocation(line: 721, column: 5, scope: !6425)
!6440 = !DILocation(line: 721, column: 17, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6420, file: !2, line: 721, column: 17)
!6442 = !DILocation(line: 721, column: 22, scope: !6441)
!6443 = !DILocation(line: 721, column: 31, scope: !6441)
!6444 = !DILocation(line: 721, column: 17, scope: !6420)
!6445 = !DILocation(line: 722, column: 23, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6441, file: !2, line: 721, column: 40)
!6447 = !DILocation(line: 722, column: 2, scope: !6446)
!6448 = !DILocation(line: 723, column: 26, scope: !6446)
!6449 = !DILocation(line: 723, column: 31, scope: !6446)
!6450 = !DILocation(line: 723, column: 39, scope: !6446)
!6451 = !DILocation(line: 723, column: 44, scope: !6446)
!6452 = !DILocation(line: 723, column: 2, scope: !6446)
!6453 = !DILocation(line: 724, column: 5, scope: !6446)
!6454 = !DILocation(line: 725, column: 10, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6379, file: !2, line: 725, column: 9)
!6456 = !DILocation(line: 725, column: 15, scope: !6455)
!6457 = !{!2482, !1472, i64 96}
!6458 = !DILocation(line: 725, column: 24, scope: !6455)
!6459 = !DILocation(line: 725, column: 33, scope: !6455)
!6460 = !DILocation(line: 725, column: 37, scope: !6455)
!6461 = !DILocation(line: 725, column: 42, scope: !6455)
!6462 = !{!2482, !1472, i64 80}
!6463 = !DILocation(line: 725, column: 51, scope: !6455)
!6464 = !DILocation(line: 725, column: 60, scope: !6455)
!6465 = !DILocation(line: 726, column: 10, scope: !6455)
!6466 = !DILocation(line: 726, column: 15, scope: !6455)
!6467 = !{!2482, !1472, i64 88}
!6468 = !DILocation(line: 726, column: 26, scope: !6455)
!6469 = !DILocation(line: 726, column: 35, scope: !6455)
!6470 = !DILocation(line: 726, column: 39, scope: !6455)
!6471 = !DILocation(line: 726, column: 44, scope: !6455)
!6472 = !{!2482, !1472, i64 72}
!6473 = !DILocation(line: 726, column: 54, scope: !6455)
!6474 = !DILocation(line: 726, column: 63, scope: !6455)
!6475 = !DILocation(line: 727, column: 3, scope: !6455)
!6476 = !DILocation(line: 727, column: 8, scope: !6455)
!6477 = !{!2482, !1472, i64 120}
!6478 = !DILocation(line: 727, column: 18, scope: !6455)
!6479 = !DILocation(line: 725, column: 9, scope: !6379)
!6480 = !DILocation(line: 728, column: 23, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6455, file: !2, line: 727, column: 28)
!6482 = !DILocation(line: 728, column: 2, scope: !6481)
!6483 = !DILocation(line: 729, column: 2, scope: !6481)
!6484 = !DILocation(line: 731, column: 26, scope: !6379)
!6485 = !DILocation(line: 731, column: 5, scope: !6379)
!6486 = !DILocation(line: 736, column: 10, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6379, file: !2, line: 736, column: 9)
!6488 = !DILocation(line: 736, column: 15, scope: !6487)
!6489 = !DILocation(line: 736, column: 25, scope: !6487)
!6490 = !DILocation(line: 736, column: 34, scope: !6487)
!6491 = !DILocation(line: 736, column: 39, scope: !6487)
!6492 = !DILocation(line: 736, column: 44, scope: !6487)
!6493 = !{!2482, !1472, i64 64}
!6494 = !DILocation(line: 736, column: 48, scope: !6487)
!6495 = !DILocation(line: 736, column: 57, scope: !6487)
!6496 = !DILocation(line: 737, column: 10, scope: !6487)
!6497 = !DILocation(line: 737, column: 15, scope: !6487)
!6498 = !DILocation(line: 737, column: 20, scope: !6487)
!6499 = !{!2176, !1472, i64 80}
!6500 = !DILocation(line: 737, column: 33, scope: !6487)
!6501 = !DILocation(line: 737, column: 30, scope: !6487)
!6502 = !DILocation(line: 736, column: 9, scope: !6379)
!6503 = !DILocation(line: 738, column: 33, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6487, file: !2, line: 737, column: 40)
!6505 = !DILocation(line: 738, column: 38, scope: !6504)
!6506 = !DILocation(line: 739, column: 55, scope: !6504)
!6507 = !DILocation(line: 739, column: 60, scope: !6504)
!6508 = !DILocation(line: 738, column: 9, scope: !6504)
!6509 = !DILocation(line: 740, column: 5, scope: !6504)
!6510 = !DILocation(line: 741, column: 14, scope: !6379)
!6511 = !DILocation(line: 741, column: 20, scope: !6379)
!6512 = !DILocation(line: 741, column: 12, scope: !6379)
!6513 = !DILocation(line: 742, column: 13, scope: !6379)
!6514 = !DILocation(line: 742, column: 19, scope: !6379)
!6515 = !DILocation(line: 742, column: 11, scope: !6379)
!6516 = !DILocation(line: 743, column: 5, scope: !6379)
!6517 = !DILocation(line: 743, column: 11, scope: !6379)
!6518 = !DILocation(line: 743, column: 18, scope: !6379)
!6519 = !DILocation(line: 744, column: 5, scope: !6379)
!6520 = !DILocation(line: 744, column: 11, scope: !6379)
!6521 = !DILocation(line: 744, column: 17, scope: !6379)
!6522 = !DILocation(line: 745, column: 27, scope: !6379)
!6523 = !DILocation(line: 745, column: 33, scope: !6379)
!6524 = !DILocation(line: 745, column: 38, scope: !6379)
!6525 = !{!2482, !1472, i64 24}
!6526 = !DILocation(line: 745, column: 5, scope: !6379)
!6527 = !DILocation(line: 746, column: 20, scope: !6379)
!6528 = !DILocation(line: 746, column: 5, scope: !6379)
!6529 = !DILocation(line: 746, column: 11, scope: !6379)
!6530 = !DILocation(line: 746, column: 18, scope: !6379)
!6531 = !DILocation(line: 747, column: 19, scope: !6379)
!6532 = !DILocation(line: 747, column: 5, scope: !6379)
!6533 = !DILocation(line: 747, column: 11, scope: !6379)
!6534 = !DILocation(line: 747, column: 17, scope: !6379)
!6535 = !DILocation(line: 748, column: 26, scope: !6379)
!6536 = !DILocation(line: 748, column: 5, scope: !6379)
!6537 = !DILocation(line: 749, column: 1, scope: !6379)
!6538 = distinct !DISubprogram(name: "xmlNodeListDumpOutput", scope: !2, file: !2, line: 806, type: !2586, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6539)
!6539 = !{!6540, !6541, !6542}
!6540 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6538, file: !2, line: 806, type: !1324)
!6541 = !DILocalVariable(name: "cur", arg: 2, scope: !6538, file: !2, line: 806, type: !1169)
!6542 = !DILocalVariable(name: "buf", scope: !6538, file: !2, line: 807, type: !1273)
!6543 = !DILocation(line: 806, column: 38, scope: !6538)
!6544 = !DILocation(line: 806, column: 55, scope: !6538)
!6545 = !DILocation(line: 807, column: 5, scope: !6538)
!6546 = !DILocation(line: 807, column: 24, scope: !6538)
!6547 = !DILocation(line: 809, column: 9, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6538, file: !2, line: 809, column: 9)
!6549 = !DILocation(line: 809, column: 13, scope: !6548)
!6550 = !DILocation(line: 809, column: 9, scope: !6538)
!6551 = !DILocation(line: 809, column: 22, scope: !6548)
!6552 = !DILocation(line: 810, column: 11, scope: !6538)
!6553 = !DILocation(line: 810, column: 17, scope: !6538)
!6554 = !DILocation(line: 810, column: 9, scope: !6538)
!6555 = !DILocation(line: 811, column: 5, scope: !6538)
!6556 = !DILocation(line: 811, column: 12, scope: !6538)
!6557 = !DILocation(line: 811, column: 16, scope: !6538)
!6558 = !DILocation(line: 812, column: 7, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !2, line: 812, column: 6)
!6560 = distinct !DILexicalBlock(scope: !6538, file: !2, line: 811, column: 25)
!6561 = !DILocation(line: 812, column: 13, scope: !6559)
!6562 = !DILocation(line: 812, column: 20, scope: !6559)
!6563 = !DILocation(line: 812, column: 26, scope: !6559)
!6564 = !DILocation(line: 812, column: 30, scope: !6559)
!6565 = !DILocation(line: 812, column: 29, scope: !6559)
!6566 = !DILocation(line: 812, column: 51, scope: !6559)
!6567 = !DILocation(line: 813, column: 8, scope: !6559)
!6568 = !DILocation(line: 813, column: 13, scope: !6559)
!6569 = !DILocation(line: 813, column: 18, scope: !6559)
!6570 = !DILocation(line: 813, column: 39, scope: !6559)
!6571 = !DILocation(line: 814, column: 8, scope: !6559)
!6572 = !DILocation(line: 814, column: 13, scope: !6559)
!6573 = !DILocation(line: 814, column: 18, scope: !6559)
!6574 = !DILocation(line: 814, column: 39, scope: !6559)
!6575 = !DILocation(line: 815, column: 8, scope: !6559)
!6576 = !DILocation(line: 815, column: 13, scope: !6559)
!6577 = !DILocation(line: 815, column: 18, scope: !6559)
!6578 = !DILocation(line: 812, column: 6, scope: !6560)
!6579 = !DILocation(line: 816, column: 27, scope: !6559)
!6580 = !DILocation(line: 816, column: 32, scope: !6559)
!6581 = !DILocation(line: 816, column: 38, scope: !6559)
!6582 = !DILocation(line: 817, column: 28, scope: !6559)
!6583 = !DILocation(line: 817, column: 34, scope: !6559)
!6584 = !DILocation(line: 817, column: 42, scope: !6559)
!6585 = !DILocation(line: 817, column: 48, scope: !6559)
!6586 = !DILocation(line: 817, column: 40, scope: !6559)
!6587 = !DILocation(line: 818, column: 7, scope: !6559)
!6588 = !DILocation(line: 818, column: 13, scope: !6559)
!6589 = !DILocation(line: 818, column: 25, scope: !6559)
!6590 = !DILocation(line: 818, column: 31, scope: !6559)
!6591 = !DILocation(line: 816, column: 50, scope: !6559)
!6592 = !DILocation(line: 819, column: 6, scope: !6559)
!6593 = !DILocation(line: 819, column: 12, scope: !6559)
!6594 = !DILocation(line: 816, column: 6, scope: !6559)
!6595 = !DILocation(line: 820, column: 35, scope: !6560)
!6596 = !DILocation(line: 820, column: 41, scope: !6560)
!6597 = !DILocation(line: 820, column: 9, scope: !6560)
!6598 = !DILocation(line: 821, column: 6, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6560, file: !2, line: 821, column: 6)
!6600 = !DILocation(line: 821, column: 12, scope: !6599)
!6601 = !DILocation(line: 821, column: 19, scope: !6599)
!6602 = !DILocation(line: 821, column: 6, scope: !6560)
!6603 = !DILocation(line: 822, column: 27, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6599, file: !2, line: 821, column: 25)
!6605 = !DILocation(line: 822, column: 6, scope: !6604)
!6606 = !DILocation(line: 823, column: 2, scope: !6604)
!6607 = !DILocation(line: 824, column: 8, scope: !6560)
!6608 = !DILocation(line: 824, column: 13, scope: !6560)
!6609 = !DILocation(line: 824, column: 6, scope: !6560)
!6610 = distinct !{!6610, !6555, !6611, !1687}
!6611 = !DILocation(line: 825, column: 5, scope: !6538)
!6612 = !DILocation(line: 826, column: 1, scope: !6538)
!6613 = !DISubprogram(name: "xmlOutputBufferWriteEscape__internal_alias", scope: !1530, file: !1530, line: 6912, type: !6614, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!1104, !1273, !1178, !1308}
!6616 = distinct !DISubprogram(name: "xmlAttrDumpOutput", scope: !2, file: !2, line: 759, type: !6617, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6619)
!6617 = !DISubroutineType(types: !6618)
!6618 = !{null, !1324, !1448}
!6619 = !{!6620, !6621, !6622}
!6620 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6616, file: !2, line: 759, type: !1324)
!6621 = !DILocalVariable(name: "cur", arg: 2, scope: !6616, file: !2, line: 759, type: !1448)
!6622 = !DILocalVariable(name: "buf", scope: !6616, file: !2, line: 760, type: !1273)
!6623 = !DILocation(line: 759, column: 34, scope: !6616)
!6624 = !DILocation(line: 759, column: 51, scope: !6616)
!6625 = !DILocation(line: 760, column: 5, scope: !6616)
!6626 = !DILocation(line: 760, column: 24, scope: !6616)
!6627 = !DILocation(line: 762, column: 9, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6616, file: !2, line: 762, column: 9)
!6629 = !DILocation(line: 762, column: 13, scope: !6628)
!6630 = !DILocation(line: 762, column: 9, scope: !6616)
!6631 = !DILocation(line: 762, column: 22, scope: !6628)
!6632 = !DILocation(line: 763, column: 11, scope: !6616)
!6633 = !DILocation(line: 763, column: 17, scope: !6616)
!6634 = !DILocation(line: 763, column: 9, scope: !6616)
!6635 = !DILocation(line: 764, column: 9, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6616, file: !2, line: 764, column: 9)
!6637 = !DILocation(line: 764, column: 13, scope: !6636)
!6638 = !DILocation(line: 764, column: 9, scope: !6616)
!6639 = !DILocation(line: 764, column: 22, scope: !6636)
!6640 = !DILocation(line: 765, column: 9, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6616, file: !2, line: 765, column: 9)
!6642 = !DILocation(line: 765, column: 15, scope: !6641)
!6643 = !DILocation(line: 765, column: 22, scope: !6641)
!6644 = !DILocation(line: 765, column: 9, scope: !6616)
!6645 = !DILocation(line: 766, column: 38, scope: !6641)
!6646 = !DILocation(line: 766, column: 9, scope: !6641)
!6647 = !DILocation(line: 768, column: 30, scope: !6641)
!6648 = !DILocation(line: 768, column: 9, scope: !6641)
!6649 = !DILocation(line: 769, column: 10, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6616, file: !2, line: 769, column: 9)
!6651 = !DILocation(line: 769, column: 15, scope: !6650)
!6652 = !{!6653, !1472, i64 72}
!6653 = !{!"_xmlAttr", !1472, i64 0, !1473, i64 8, !1472, i64 16, !1472, i64 24, !1472, i64 32, !1472, i64 40, !1472, i64 48, !1472, i64 56, !1472, i64 64, !1472, i64 72, !1473, i64 80, !1472, i64 88}
!6654 = !DILocation(line: 769, column: 18, scope: !6650)
!6655 = !DILocation(line: 769, column: 27, scope: !6650)
!6656 = !DILocation(line: 769, column: 31, scope: !6650)
!6657 = !DILocation(line: 769, column: 36, scope: !6650)
!6658 = !DILocation(line: 769, column: 40, scope: !6650)
!6659 = !DILocation(line: 769, column: 47, scope: !6650)
!6660 = !DILocation(line: 769, column: 9, scope: !6616)
!6661 = !DILocation(line: 770, column: 36, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6650, file: !2, line: 769, column: 57)
!6663 = !DILocation(line: 770, column: 55, scope: !6662)
!6664 = !DILocation(line: 770, column: 60, scope: !6662)
!6665 = !DILocation(line: 770, column: 64, scope: !6662)
!6666 = !DILocation(line: 770, column: 9, scope: !6662)
!6667 = !DILocation(line: 771, column: 23, scope: !6662)
!6668 = !DILocation(line: 771, column: 2, scope: !6662)
!6669 = !DILocation(line: 772, column: 5, scope: !6662)
!6670 = !DILocation(line: 773, column: 32, scope: !6616)
!6671 = !DILocation(line: 773, column: 51, scope: !6616)
!6672 = !DILocation(line: 773, column: 56, scope: !6616)
!6673 = !{!6653, !1472, i64 16}
!6674 = !DILocation(line: 773, column: 5, scope: !6616)
!6675 = !DILocation(line: 774, column: 26, scope: !6616)
!6676 = !DILocation(line: 774, column: 5, scope: !6616)
!6677 = !DILocation(line: 775, column: 29, scope: !6616)
!6678 = !DILocation(line: 775, column: 34, scope: !6616)
!6679 = !DILocation(line: 775, column: 5, scope: !6616)
!6680 = !DILocation(line: 776, column: 26, scope: !6616)
!6681 = !DILocation(line: 776, column: 5, scope: !6616)
!6682 = !DILocation(line: 777, column: 1, scope: !6616)
!6683 = distinct !DISubprogram(name: "xmlNsDumpOutputCtxt", scope: !2, file: !2, line: 662, type: !6684, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6686)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{null, !1324, !1451}
!6686 = !{!6687, !6688}
!6687 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6683, file: !2, line: 662, type: !1324)
!6688 = !DILocalVariable(name: "cur", arg: 2, scope: !6683, file: !2, line: 662, type: !1451)
!6689 = !DILocation(line: 662, column: 36, scope: !6683)
!6690 = !DILocation(line: 662, column: 51, scope: !6683)
!6691 = !DILocation(line: 663, column: 21, scope: !6683)
!6692 = !DILocation(line: 663, column: 27, scope: !6683)
!6693 = !DILocation(line: 663, column: 32, scope: !6683)
!6694 = !DILocation(line: 663, column: 37, scope: !6683)
!6695 = !DILocation(line: 663, column: 5, scope: !6683)
!6696 = !DILocation(line: 664, column: 1, scope: !6683)
!6697 = distinct !DISubprogram(name: "xmlNsListDumpOutputCtxt", scope: !2, file: !2, line: 675, type: !6684, scopeLine: 675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6698)
!6698 = !{!6699, !6700}
!6699 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6697, file: !2, line: 675, type: !1324)
!6700 = !DILocalVariable(name: "cur", arg: 2, scope: !6697, file: !2, line: 675, type: !1451)
!6701 = !DILocation(line: 675, column: 40, scope: !6697)
!6702 = !DILocation(line: 675, column: 55, scope: !6697)
!6703 = !DILocation(line: 676, column: 5, scope: !6697)
!6704 = !DILocation(line: 676, column: 12, scope: !6697)
!6705 = !DILocation(line: 676, column: 16, scope: !6697)
!6706 = !DILocation(line: 677, column: 25, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6697, file: !2, line: 676, column: 25)
!6708 = !DILocation(line: 677, column: 31, scope: !6707)
!6709 = !DILocation(line: 677, column: 36, scope: !6707)
!6710 = !DILocation(line: 677, column: 41, scope: !6707)
!6711 = !DILocation(line: 677, column: 9, scope: !6707)
!6712 = !DILocation(line: 678, column: 8, scope: !6707)
!6713 = !DILocation(line: 678, column: 13, scope: !6707)
!6714 = !DILocation(line: 678, column: 6, scope: !6707)
!6715 = distinct !{!6715, !6703, !6716, !1687}
!6716 = !DILocation(line: 679, column: 5, scope: !6697)
!6717 = !DILocation(line: 680, column: 1, scope: !6697)
!6718 = distinct !DISubprogram(name: "xmlAttrListDumpOutput", scope: !2, file: !2, line: 789, type: !6617, scopeLine: 789, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6719)
!6719 = !{!6720, !6721}
!6720 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6718, file: !2, line: 789, type: !1324)
!6721 = !DILocalVariable(name: "cur", arg: 2, scope: !6718, file: !2, line: 789, type: !1448)
!6722 = !DILocation(line: 789, column: 38, scope: !6718)
!6723 = !DILocation(line: 789, column: 55, scope: !6718)
!6724 = !DILocation(line: 790, column: 9, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6718, file: !2, line: 790, column: 9)
!6726 = !DILocation(line: 790, column: 13, scope: !6725)
!6727 = !DILocation(line: 790, column: 9, scope: !6718)
!6728 = !DILocation(line: 790, column: 22, scope: !6725)
!6729 = !DILocation(line: 791, column: 5, scope: !6718)
!6730 = !DILocation(line: 791, column: 12, scope: !6718)
!6731 = !DILocation(line: 791, column: 16, scope: !6718)
!6732 = !DILocation(line: 792, column: 27, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6718, file: !2, line: 791, column: 25)
!6734 = !DILocation(line: 792, column: 33, scope: !6733)
!6735 = !DILocation(line: 792, column: 9, scope: !6733)
!6736 = !DILocation(line: 793, column: 8, scope: !6733)
!6737 = !DILocation(line: 793, column: 13, scope: !6733)
!6738 = !{!6653, !1472, i64 48}
!6739 = !DILocation(line: 793, column: 6, scope: !6733)
!6740 = distinct !{!6740, !6729, !6741, !1687}
!6741 = !DILocation(line: 794, column: 5, scope: !6718)
!6742 = !DILocation(line: 795, column: 1, scope: !6718)
!6743 = !DISubprogram(name: "__xmlIndentTreeOutput", scope: !6744, file: !6744, line: 382, type: !6745, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6744 = !DIFile(filename: "./include/libxml/globals.h", directory: "/local-ssd/libxml2-5hiu2bm3eabodlo3ma2tknpx3yddqhyc-build/aidengro/spack-stage-libxml2-2.9.10-5hiu2bm3eabodlo3ma2tknpx3yddqhyc/spack-src", checksumkind: CSK_MD5, checksum: "4b9d5b9ff807b093244cc301d2cefda5")
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!1304}
!6747 = !DISubprogram(name: "htmlNodeDumpFormatOutput__internal_alias", scope: !1530, file: !1530, line: 538, type: !6748, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6748 = !DISubroutineType(types: !6749)
!6749 = !{null, !1273, !1345, !1169, !1285, !1104}
!6750 = distinct !DISubprogram(name: "xmlAttrSerializeContent", scope: !2, file: !2, line: 434, type: !6751, scopeLine: 435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6753)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{null, !1273, !1448}
!6753 = !{!6754, !6755, !6756}
!6754 = !DILocalVariable(name: "buf", arg: 1, scope: !6750, file: !2, line: 434, type: !1273)
!6755 = !DILocalVariable(name: "attr", arg: 2, scope: !6750, file: !2, line: 434, type: !1448)
!6756 = !DILocalVariable(name: "children", scope: !6750, file: !2, line: 436, type: !1169)
!6757 = !DILocation(line: 434, column: 44, scope: !6750)
!6758 = !DILocation(line: 434, column: 60, scope: !6750)
!6759 = !DILocation(line: 436, column: 5, scope: !6750)
!6760 = !DILocation(line: 436, column: 16, scope: !6750)
!6761 = !DILocation(line: 438, column: 16, scope: !6750)
!6762 = !DILocation(line: 438, column: 22, scope: !6750)
!6763 = !{!6653, !1472, i64 24}
!6764 = !DILocation(line: 438, column: 14, scope: !6750)
!6765 = !DILocation(line: 439, column: 5, scope: !6750)
!6766 = !DILocation(line: 439, column: 12, scope: !6750)
!6767 = !DILocation(line: 439, column: 21, scope: !6750)
!6768 = !DILocation(line: 440, column: 17, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6750, file: !2, line: 439, column: 30)
!6770 = !DILocation(line: 440, column: 27, scope: !6769)
!6771 = !DILocation(line: 440, column: 9, scope: !6769)
!6772 = !DILocation(line: 442, column: 40, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6769, file: !2, line: 440, column: 33)
!6774 = !DILocation(line: 442, column: 45, scope: !6773)
!6775 = !DILocation(line: 442, column: 53, scope: !6773)
!6776 = !DILocation(line: 442, column: 59, scope: !6773)
!6777 = !{!6653, !1472, i64 64}
!6778 = !DILocation(line: 443, column: 33, scope: !6773)
!6779 = !DILocation(line: 443, column: 39, scope: !6773)
!6780 = !DILocation(line: 443, column: 49, scope: !6773)
!6781 = !DILocation(line: 442, column: 10, scope: !6773)
!6782 = !DILocation(line: 444, column: 3, scope: !6773)
!6783 = !DILocation(line: 446, column: 27, scope: !6773)
!6784 = !DILocation(line: 446, column: 32, scope: !6773)
!6785 = !DILocation(line: 446, column: 17, scope: !6773)
!6786 = !DILocation(line: 447, column: 27, scope: !6773)
!6787 = !DILocation(line: 447, column: 32, scope: !6773)
!6788 = !DILocation(line: 447, column: 40, scope: !6773)
!6789 = !DILocation(line: 447, column: 50, scope: !6773)
!6790 = !DILocation(line: 448, column: 40, scope: !6773)
!6791 = !DILocation(line: 448, column: 50, scope: !6773)
!6792 = !DILocation(line: 448, column: 30, scope: !6773)
!6793 = !DILocation(line: 447, column: 17, scope: !6773)
!6794 = !DILocation(line: 449, column: 27, scope: !6773)
!6795 = !DILocation(line: 449, column: 32, scope: !6773)
!6796 = !DILocation(line: 449, column: 17, scope: !6773)
!6797 = !DILocation(line: 450, column: 17, scope: !6773)
!6798 = !DILocation(line: 453, column: 17, scope: !6773)
!6799 = !DILocation(line: 455, column: 20, scope: !6769)
!6800 = !DILocation(line: 455, column: 30, scope: !6769)
!6801 = !DILocation(line: 455, column: 18, scope: !6769)
!6802 = distinct !{!6802, !6765, !6803, !1687}
!6803 = !DILocation(line: 456, column: 5, scope: !6750)
!6804 = !DILocation(line: 457, column: 1, scope: !6750)
!6805 = !DISubprogram(name: "xmlStrlen__internal_alias", scope: !1530, file: !1530, line: 11021, type: !6806, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{!1104, !1178}
!6808 = !DISubprogram(name: "__xmlSimpleError", scope: !355, file: !355, line: 936, type: !6809, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6809 = !DISubroutineType(types: !6810)
!6810 = !{null, !1104, !1104, !1169, !1285, !1285}
!6811 = !DISubprogram(name: "__xmlTreeIndentString", scope: !6744, file: !6744, line: 391, type: !6812, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6812 = !DISubroutineType(types: !6813)
!6813 = !{!6814}
!6814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!6815 = !DISubprogram(name: "__xmlSaveNoEmptyTags", scope: !6744, file: !6744, line: 453, type: !6745, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6816 = distinct !DISubprogram(name: "xhtmlNodeListDumpOutput", scope: !2, file: !2, line: 1412, type: !2586, scopeLine: 1412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6817)
!6817 = !{!6818, !6819, !6820}
!6818 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6816, file: !2, line: 1412, type: !1324)
!6819 = !DILocalVariable(name: "cur", arg: 2, scope: !6816, file: !2, line: 1412, type: !1169)
!6820 = !DILocalVariable(name: "buf", scope: !6816, file: !2, line: 1413, type: !1273)
!6821 = !DILocation(line: 1412, column: 40, scope: !6816)
!6822 = !DILocation(line: 1412, column: 57, scope: !6816)
!6823 = !DILocation(line: 1413, column: 5, scope: !6816)
!6824 = !DILocation(line: 1413, column: 24, scope: !6816)
!6825 = !DILocation(line: 1415, column: 9, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6816, file: !2, line: 1415, column: 9)
!6827 = !DILocation(line: 1415, column: 13, scope: !6826)
!6828 = !DILocation(line: 1415, column: 9, scope: !6816)
!6829 = !DILocation(line: 1415, column: 22, scope: !6826)
!6830 = !DILocation(line: 1416, column: 11, scope: !6816)
!6831 = !DILocation(line: 1416, column: 17, scope: !6816)
!6832 = !DILocation(line: 1416, column: 9, scope: !6816)
!6833 = !DILocation(line: 1417, column: 5, scope: !6816)
!6834 = !DILocation(line: 1417, column: 12, scope: !6816)
!6835 = !DILocation(line: 1417, column: 16, scope: !6816)
!6836 = !DILocation(line: 1418, column: 7, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !2, line: 1418, column: 6)
!6838 = distinct !DILexicalBlock(scope: !6816, file: !2, line: 1417, column: 25)
!6839 = !DILocation(line: 1418, column: 13, scope: !6837)
!6840 = !DILocation(line: 1418, column: 20, scope: !6837)
!6841 = !DILocation(line: 1418, column: 26, scope: !6837)
!6842 = !DILocation(line: 1418, column: 30, scope: !6837)
!6843 = !DILocation(line: 1418, column: 29, scope: !6837)
!6844 = !DILocation(line: 1418, column: 51, scope: !6837)
!6845 = !DILocation(line: 1419, column: 7, scope: !6837)
!6846 = !DILocation(line: 1419, column: 12, scope: !6837)
!6847 = !DILocation(line: 1419, column: 17, scope: !6837)
!6848 = !DILocation(line: 1418, column: 6, scope: !6838)
!6849 = !DILocation(line: 1420, column: 27, scope: !6837)
!6850 = !DILocation(line: 1420, column: 32, scope: !6837)
!6851 = !DILocation(line: 1420, column: 38, scope: !6837)
!6852 = !DILocation(line: 1421, column: 28, scope: !6837)
!6853 = !DILocation(line: 1421, column: 34, scope: !6837)
!6854 = !DILocation(line: 1421, column: 42, scope: !6837)
!6855 = !DILocation(line: 1421, column: 48, scope: !6837)
!6856 = !DILocation(line: 1421, column: 40, scope: !6837)
!6857 = !DILocation(line: 1422, column: 7, scope: !6837)
!6858 = !DILocation(line: 1422, column: 13, scope: !6837)
!6859 = !DILocation(line: 1422, column: 25, scope: !6837)
!6860 = !DILocation(line: 1422, column: 31, scope: !6837)
!6861 = !DILocation(line: 1420, column: 50, scope: !6837)
!6862 = !DILocation(line: 1423, column: 6, scope: !6837)
!6863 = !DILocation(line: 1423, column: 12, scope: !6837)
!6864 = !DILocation(line: 1420, column: 6, scope: !6837)
!6865 = !DILocation(line: 1424, column: 29, scope: !6838)
!6866 = !DILocation(line: 1424, column: 35, scope: !6838)
!6867 = !DILocation(line: 1424, column: 9, scope: !6838)
!6868 = !DILocation(line: 1425, column: 6, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6838, file: !2, line: 1425, column: 6)
!6870 = !DILocation(line: 1425, column: 12, scope: !6869)
!6871 = !DILocation(line: 1425, column: 19, scope: !6869)
!6872 = !DILocation(line: 1425, column: 6, scope: !6838)
!6873 = !DILocation(line: 1426, column: 27, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6869, file: !2, line: 1425, column: 25)
!6875 = !DILocation(line: 1426, column: 6, scope: !6874)
!6876 = !DILocation(line: 1427, column: 2, scope: !6874)
!6877 = !DILocation(line: 1428, column: 8, scope: !6838)
!6878 = !DILocation(line: 1428, column: 13, scope: !6838)
!6879 = !DILocation(line: 1428, column: 6, scope: !6838)
!6880 = distinct !{!6880, !6833, !6881, !1687}
!6881 = !DILocation(line: 1429, column: 5, scope: !6816)
!6882 = !DILocation(line: 1430, column: 1, scope: !6816)
!6883 = distinct !DISubprogram(name: "xhtmlAttrListDumpOutput", scope: !2, file: !2, line: 1326, type: !6617, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !6884)
!6884 = !{!6885, !6886, !6887, !6888, !6889, !6890, !6891, !6892}
!6885 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6883, file: !2, line: 1326, type: !1324)
!6886 = !DILocalVariable(name: "cur", arg: 2, scope: !6883, file: !2, line: 1326, type: !1448)
!6887 = !DILocalVariable(name: "xml_lang", scope: !6883, file: !2, line: 1327, type: !1448)
!6888 = !DILocalVariable(name: "lang", scope: !6883, file: !2, line: 1328, type: !1448)
!6889 = !DILocalVariable(name: "name", scope: !6883, file: !2, line: 1329, type: !1448)
!6890 = !DILocalVariable(name: "id", scope: !6883, file: !2, line: 1330, type: !1448)
!6891 = !DILocalVariable(name: "parent", scope: !6883, file: !2, line: 1331, type: !1169)
!6892 = !DILocalVariable(name: "buf", scope: !6883, file: !2, line: 1332, type: !1273)
!6893 = !DILocation(line: 1326, column: 40, scope: !6883)
!6894 = !DILocation(line: 1326, column: 57, scope: !6883)
!6895 = !DILocation(line: 1327, column: 5, scope: !6883)
!6896 = !DILocation(line: 1327, column: 16, scope: !6883)
!6897 = !DILocation(line: 1328, column: 5, scope: !6883)
!6898 = !DILocation(line: 1328, column: 16, scope: !6883)
!6899 = !DILocation(line: 1329, column: 5, scope: !6883)
!6900 = !DILocation(line: 1329, column: 16, scope: !6883)
!6901 = !DILocation(line: 1330, column: 5, scope: !6883)
!6902 = !DILocation(line: 1330, column: 16, scope: !6883)
!6903 = !DILocation(line: 1331, column: 5, scope: !6883)
!6904 = !DILocation(line: 1331, column: 16, scope: !6883)
!6905 = !DILocation(line: 1332, column: 5, scope: !6883)
!6906 = !DILocation(line: 1332, column: 24, scope: !6883)
!6907 = !DILocation(line: 1334, column: 9, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6883, file: !2, line: 1334, column: 9)
!6909 = !DILocation(line: 1334, column: 13, scope: !6908)
!6910 = !DILocation(line: 1334, column: 9, scope: !6883)
!6911 = !DILocation(line: 1334, column: 22, scope: !6908)
!6912 = !DILocation(line: 1335, column: 11, scope: !6883)
!6913 = !DILocation(line: 1335, column: 17, scope: !6883)
!6914 = !DILocation(line: 1335, column: 9, scope: !6883)
!6915 = !DILocation(line: 1336, column: 14, scope: !6883)
!6916 = !DILocation(line: 1336, column: 19, scope: !6883)
!6917 = !{!6653, !1472, i64 40}
!6918 = !DILocation(line: 1336, column: 12, scope: !6883)
!6919 = !DILocation(line: 1337, column: 5, scope: !6883)
!6920 = !DILocation(line: 1337, column: 12, scope: !6883)
!6921 = !DILocation(line: 1337, column: 16, scope: !6883)
!6922 = !DILocation(line: 1338, column: 7, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !2, line: 1338, column: 6)
!6924 = distinct !DILexicalBlock(scope: !6883, file: !2, line: 1337, column: 25)
!6925 = !DILocation(line: 1338, column: 12, scope: !6923)
!6926 = !DILocation(line: 1338, column: 15, scope: !6923)
!6927 = !DILocation(line: 1338, column: 24, scope: !6923)
!6928 = !DILocation(line: 1338, column: 40, scope: !6923)
!6929 = !DILocation(line: 1338, column: 45, scope: !6923)
!6930 = !DILocation(line: 1338, column: 28, scope: !6923)
!6931 = !DILocation(line: 1338, column: 6, scope: !6924)
!6932 = !DILocation(line: 1339, column: 11, scope: !6923)
!6933 = !DILocation(line: 1339, column: 9, scope: !6923)
!6934 = !DILocation(line: 1339, column: 6, scope: !6923)
!6935 = !DILocation(line: 1341, column: 7, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6923, file: !2, line: 1341, column: 6)
!6937 = !DILocation(line: 1341, column: 12, scope: !6936)
!6938 = !DILocation(line: 1341, column: 15, scope: !6936)
!6939 = !DILocation(line: 1341, column: 24, scope: !6936)
!6940 = !DILocation(line: 1341, column: 40, scope: !6936)
!6941 = !DILocation(line: 1341, column: 45, scope: !6936)
!6942 = !DILocation(line: 1341, column: 28, scope: !6936)
!6943 = !DILocation(line: 1341, column: 6, scope: !6923)
!6944 = !DILocation(line: 1342, column: 13, scope: !6936)
!6945 = !DILocation(line: 1342, column: 11, scope: !6936)
!6946 = !DILocation(line: 1342, column: 6, scope: !6936)
!6947 = !DILocation(line: 1344, column: 7, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6936, file: !2, line: 1344, column: 6)
!6949 = !DILocation(line: 1344, column: 12, scope: !6948)
!6950 = !DILocation(line: 1344, column: 15, scope: !6948)
!6951 = !DILocation(line: 1344, column: 24, scope: !6948)
!6952 = !DILocation(line: 1344, column: 40, scope: !6948)
!6953 = !DILocation(line: 1344, column: 45, scope: !6948)
!6954 = !DILocation(line: 1344, column: 28, scope: !6948)
!6955 = !DILocation(line: 1344, column: 6, scope: !6936)
!6956 = !DILocation(line: 1345, column: 13, scope: !6948)
!6957 = !DILocation(line: 1345, column: 11, scope: !6948)
!6958 = !DILocation(line: 1345, column: 6, scope: !6948)
!6959 = !DILocation(line: 1347, column: 7, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6948, file: !2, line: 1347, column: 6)
!6961 = !DILocation(line: 1347, column: 12, scope: !6960)
!6962 = !DILocation(line: 1347, column: 15, scope: !6960)
!6963 = !DILocation(line: 1347, column: 24, scope: !6960)
!6964 = !DILocation(line: 1347, column: 40, scope: !6960)
!6965 = !DILocation(line: 1347, column: 45, scope: !6960)
!6966 = !DILocation(line: 1347, column: 28, scope: !6960)
!6967 = !DILocation(line: 1347, column: 69, scope: !6960)
!6968 = !DILocation(line: 1348, column: 19, scope: !6960)
!6969 = !DILocation(line: 1348, column: 24, scope: !6960)
!6970 = !DILocation(line: 1348, column: 28, scope: !6960)
!6971 = !DILocation(line: 1348, column: 7, scope: !6960)
!6972 = !DILocation(line: 1347, column: 6, scope: !6948)
!6973 = !DILocation(line: 1349, column: 17, scope: !6960)
!6974 = !DILocation(line: 1349, column: 15, scope: !6960)
!6975 = !DILocation(line: 1349, column: 6, scope: !6960)
!6976 = !DILocation(line: 1350, column: 12, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6960, file: !2, line: 1350, column: 11)
!6978 = !DILocation(line: 1350, column: 17, scope: !6977)
!6979 = !DILocation(line: 1350, column: 20, scope: !6977)
!6980 = !DILocation(line: 1350, column: 29, scope: !6977)
!6981 = !DILocation(line: 1351, column: 6, scope: !6977)
!6982 = !DILocation(line: 1351, column: 11, scope: !6977)
!6983 = !DILocation(line: 1351, column: 20, scope: !6977)
!6984 = !DILocation(line: 1351, column: 29, scope: !6977)
!6985 = !DILocation(line: 1352, column: 6, scope: !6977)
!6986 = !DILocation(line: 1352, column: 11, scope: !6977)
!6987 = !DILocation(line: 1352, column: 21, scope: !6977)
!6988 = !DILocation(line: 1352, column: 29, scope: !6977)
!6989 = !DILocation(line: 1352, column: 38, scope: !6977)
!6990 = !DILocation(line: 1353, column: 6, scope: !6977)
!6991 = !DILocation(line: 1353, column: 11, scope: !6977)
!6992 = !DILocation(line: 1353, column: 21, scope: !6977)
!6993 = !DILocation(line: 1353, column: 32, scope: !6977)
!6994 = !DILocation(line: 1353, column: 39, scope: !6977)
!6995 = !DILocation(line: 1354, column: 23, scope: !6977)
!6996 = !DILocation(line: 1354, column: 28, scope: !6977)
!6997 = !DILocation(line: 1354, column: 5, scope: !6977)
!6998 = !DILocation(line: 1350, column: 11, scope: !6960)
!6999 = !DILocation(line: 1355, column: 10, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !2, line: 1355, column: 10)
!7001 = distinct !DILexicalBlock(scope: !6977, file: !2, line: 1354, column: 36)
!7002 = !DILocation(line: 1355, column: 15, scope: !7000)
!7003 = !DILocation(line: 1355, column: 24, scope: !7000)
!7004 = !DILocation(line: 1355, column: 10, scope: !7001)
!7005 = !DILocation(line: 1356, column: 15, scope: !7000)
!7006 = !DILocation(line: 1356, column: 20, scope: !7000)
!7007 = !DILocation(line: 1356, column: 3, scope: !7000)
!7008 = !DILocation(line: 1357, column: 33, scope: !7001)
!7009 = !DILocation(line: 1357, column: 38, scope: !7001)
!7010 = !DILocation(line: 1357, column: 22, scope: !7001)
!7011 = !DILocation(line: 1357, column: 6, scope: !7001)
!7012 = !DILocation(line: 1357, column: 11, scope: !7001)
!7013 = !DILocation(line: 1357, column: 20, scope: !7001)
!7014 = !DILocation(line: 1358, column: 10, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7001, file: !2, line: 1358, column: 10)
!7016 = !DILocation(line: 1358, column: 15, scope: !7015)
!7017 = !DILocation(line: 1358, column: 24, scope: !7015)
!7018 = !DILocation(line: 1358, column: 10, scope: !7001)
!7019 = !DILocation(line: 1359, column: 40, scope: !7015)
!7020 = !DILocation(line: 1359, column: 3, scope: !7015)
!7021 = !DILocation(line: 1359, column: 8, scope: !7015)
!7022 = !DILocation(line: 1359, column: 18, scope: !7015)
!7023 = !DILocation(line: 1359, column: 25, scope: !7015)
!7024 = !DILocation(line: 1360, column: 2, scope: !7001)
!7025 = !DILocation(line: 1361, column: 27, scope: !6924)
!7026 = !DILocation(line: 1361, column: 33, scope: !6924)
!7027 = !DILocation(line: 1361, column: 9, scope: !6924)
!7028 = !DILocation(line: 1362, column: 8, scope: !6924)
!7029 = !DILocation(line: 1362, column: 13, scope: !6924)
!7030 = !DILocation(line: 1362, column: 6, scope: !6924)
!7031 = distinct !{!7031, !6919, !7032, !1687}
!7032 = !DILocation(line: 1363, column: 5, scope: !6883)
!7033 = !DILocation(line: 1367, column: 10, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !6883, file: !2, line: 1367, column: 9)
!7035 = !DILocation(line: 1367, column: 15, scope: !7034)
!7036 = !DILocation(line: 1367, column: 24, scope: !7034)
!7037 = !DILocation(line: 1367, column: 28, scope: !7034)
!7038 = !DILocation(line: 1367, column: 31, scope: !7034)
!7039 = !DILocation(line: 1367, column: 9, scope: !6883)
!7040 = !DILocation(line: 1368, column: 7, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !2, line: 1368, column: 6)
!7042 = distinct !DILexicalBlock(scope: !7034, file: !2, line: 1367, column: 41)
!7043 = !DILocation(line: 1368, column: 14, scope: !7041)
!7044 = !DILocation(line: 1368, column: 23, scope: !7041)
!7045 = !DILocation(line: 1368, column: 27, scope: !7041)
!7046 = !DILocation(line: 1368, column: 35, scope: !7041)
!7047 = !DILocation(line: 1368, column: 40, scope: !7041)
!7048 = !DILocation(line: 1368, column: 49, scope: !7041)
!7049 = !DILocation(line: 1369, column: 20, scope: !7041)
!7050 = !DILocation(line: 1369, column: 28, scope: !7041)
!7051 = !DILocation(line: 1369, column: 8, scope: !7041)
!7052 = !DILocation(line: 1369, column: 49, scope: !7041)
!7053 = !DILocation(line: 1370, column: 20, scope: !7041)
!7054 = !DILocation(line: 1370, column: 28, scope: !7041)
!7055 = !DILocation(line: 1370, column: 8, scope: !7041)
!7056 = !DILocation(line: 1370, column: 49, scope: !7041)
!7057 = !DILocation(line: 1371, column: 20, scope: !7041)
!7058 = !DILocation(line: 1371, column: 28, scope: !7041)
!7059 = !DILocation(line: 1371, column: 8, scope: !7041)
!7060 = !DILocation(line: 1371, column: 51, scope: !7041)
!7061 = !DILocation(line: 1372, column: 20, scope: !7041)
!7062 = !DILocation(line: 1372, column: 28, scope: !7041)
!7063 = !DILocation(line: 1372, column: 8, scope: !7041)
!7064 = !DILocation(line: 1372, column: 51, scope: !7041)
!7065 = !DILocation(line: 1373, column: 20, scope: !7041)
!7066 = !DILocation(line: 1373, column: 28, scope: !7041)
!7067 = !DILocation(line: 1373, column: 8, scope: !7041)
!7068 = !DILocation(line: 1373, column: 51, scope: !7041)
!7069 = !DILocation(line: 1374, column: 20, scope: !7041)
!7070 = !DILocation(line: 1374, column: 28, scope: !7041)
!7071 = !DILocation(line: 1374, column: 8, scope: !7041)
!7072 = !DILocation(line: 1374, column: 54, scope: !7041)
!7073 = !DILocation(line: 1375, column: 20, scope: !7041)
!7074 = !DILocation(line: 1375, column: 28, scope: !7041)
!7075 = !DILocation(line: 1375, column: 8, scope: !7041)
!7076 = !DILocation(line: 1375, column: 52, scope: !7041)
!7077 = !DILocation(line: 1376, column: 20, scope: !7041)
!7078 = !DILocation(line: 1376, column: 28, scope: !7041)
!7079 = !DILocation(line: 1376, column: 8, scope: !7041)
!7080 = !DILocation(line: 1376, column: 53, scope: !7041)
!7081 = !DILocation(line: 1377, column: 20, scope: !7041)
!7082 = !DILocation(line: 1377, column: 28, scope: !7041)
!7083 = !DILocation(line: 1377, column: 8, scope: !7041)
!7084 = !DILocation(line: 1368, column: 6, scope: !7042)
!7085 = !DILocation(line: 1378, column: 27, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7041, file: !2, line: 1377, column: 56)
!7087 = !DILocation(line: 1378, column: 6, scope: !7086)
!7088 = !DILocation(line: 1379, column: 30, scope: !7086)
!7089 = !DILocation(line: 1379, column: 35, scope: !7086)
!7090 = !DILocation(line: 1379, column: 6, scope: !7086)
!7091 = !DILocation(line: 1380, column: 27, scope: !7086)
!7092 = !DILocation(line: 1380, column: 6, scope: !7086)
!7093 = !DILocation(line: 1381, column: 2, scope: !7086)
!7094 = !DILocation(line: 1382, column: 5, scope: !7042)
!7095 = !DILocation(line: 1386, column: 10, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !6883, file: !2, line: 1386, column: 9)
!7097 = !DILocation(line: 1386, column: 15, scope: !7096)
!7098 = !DILocation(line: 1386, column: 24, scope: !7096)
!7099 = !DILocation(line: 1386, column: 28, scope: !7096)
!7100 = !DILocation(line: 1386, column: 37, scope: !7096)
!7101 = !DILocation(line: 1386, column: 9, scope: !6883)
!7102 = !DILocation(line: 1387, column: 23, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7096, file: !2, line: 1386, column: 47)
!7104 = !DILocation(line: 1387, column: 2, scope: !7103)
!7105 = !DILocation(line: 1388, column: 26, scope: !7103)
!7106 = !DILocation(line: 1388, column: 31, scope: !7103)
!7107 = !DILocation(line: 1388, column: 2, scope: !7103)
!7108 = !DILocation(line: 1389, column: 23, scope: !7103)
!7109 = !DILocation(line: 1389, column: 2, scope: !7103)
!7110 = !DILocation(line: 1390, column: 5, scope: !7103)
!7111 = !DILocation(line: 1391, column: 10, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7096, file: !2, line: 1391, column: 9)
!7113 = !DILocation(line: 1391, column: 19, scope: !7112)
!7114 = !DILocation(line: 1391, column: 28, scope: !7112)
!7115 = !DILocation(line: 1391, column: 32, scope: !7112)
!7116 = !DILocation(line: 1391, column: 37, scope: !7112)
!7117 = !DILocation(line: 1391, column: 9, scope: !7096)
!7118 = !DILocation(line: 1392, column: 23, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7112, file: !2, line: 1391, column: 47)
!7120 = !DILocation(line: 1392, column: 2, scope: !7119)
!7121 = !DILocation(line: 1393, column: 26, scope: !7119)
!7122 = !DILocation(line: 1393, column: 31, scope: !7119)
!7123 = !DILocation(line: 1393, column: 2, scope: !7119)
!7124 = !DILocation(line: 1394, column: 23, scope: !7119)
!7125 = !DILocation(line: 1394, column: 2, scope: !7119)
!7126 = !DILocation(line: 1395, column: 5, scope: !7119)
!7127 = !DILocation(line: 1396, column: 1, scope: !6883)
!7128 = !DISubprogram(name: "xmlGetProp__internal_alias", scope: !1530, file: !1530, line: 4177, type: !7129, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!1165, !7131, !1178}
!7131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7132, size: 64)
!7132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!7133 = !DISubprogram(name: "xmlStrcasecmp__internal_alias", scope: !1530, file: !1530, line: 10851, type: !1466, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7134 = distinct !DISubprogram(name: "xhtmlIsEmpty", scope: !2, file: !2, line: 1261, type: !7135, scopeLine: 1261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !7137)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!1104, !1169}
!7137 = !{!7138}
!7138 = !DILocalVariable(name: "node", arg: 1, scope: !7134, file: !2, line: 1261, type: !1169)
!7139 = !DILocation(line: 1261, column: 25, scope: !7134)
!7140 = !DILocation(line: 1262, column: 9, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7134, file: !2, line: 1262, column: 9)
!7142 = !DILocation(line: 1262, column: 14, scope: !7141)
!7143 = !DILocation(line: 1262, column: 9, scope: !7134)
!7144 = !DILocation(line: 1263, column: 2, scope: !7141)
!7145 = !DILocation(line: 1264, column: 9, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7134, file: !2, line: 1264, column: 9)
!7147 = !DILocation(line: 1264, column: 15, scope: !7146)
!7148 = !DILocation(line: 1264, column: 20, scope: !7146)
!7149 = !DILocation(line: 1264, column: 9, scope: !7134)
!7150 = !DILocation(line: 1265, column: 2, scope: !7146)
!7151 = !DILocation(line: 1266, column: 10, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7134, file: !2, line: 1266, column: 9)
!7153 = !DILocation(line: 1266, column: 16, scope: !7152)
!7154 = !DILocation(line: 1266, column: 19, scope: !7152)
!7155 = !DILocation(line: 1266, column: 28, scope: !7152)
!7156 = !DILocation(line: 1266, column: 45, scope: !7152)
!7157 = !DILocation(line: 1266, column: 51, scope: !7152)
!7158 = !DILocation(line: 1266, column: 55, scope: !7152)
!7159 = !DILocation(line: 1266, column: 33, scope: !7152)
!7160 = !DILocation(line: 1266, column: 9, scope: !7134)
!7161 = !DILocation(line: 1267, column: 2, scope: !7152)
!7162 = !DILocation(line: 1268, column: 9, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7134, file: !2, line: 1268, column: 9)
!7164 = !DILocation(line: 1268, column: 15, scope: !7163)
!7165 = !DILocation(line: 1268, column: 24, scope: !7163)
!7166 = !DILocation(line: 1268, column: 9, scope: !7134)
!7167 = !DILocation(line: 1269, column: 2, scope: !7163)
!7168 = !DILocation(line: 1270, column: 13, scope: !7134)
!7169 = !DILocation(line: 1270, column: 19, scope: !7134)
!7170 = !DILocation(line: 1270, column: 5, scope: !7134)
!7171 = !DILocation(line: 1272, column: 22, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1272, column: 10)
!7173 = distinct !DILexicalBlock(scope: !7134, file: !2, line: 1270, column: 28)
!7174 = !DILocation(line: 1272, column: 28, scope: !7172)
!7175 = !DILocation(line: 1272, column: 10, scope: !7172)
!7176 = !DILocation(line: 1272, column: 10, scope: !7173)
!7177 = !DILocation(line: 1273, column: 3, scope: !7172)
!7178 = !DILocation(line: 1274, column: 6, scope: !7173)
!7179 = !DILocation(line: 1276, column: 22, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1276, column: 10)
!7181 = !DILocation(line: 1276, column: 28, scope: !7180)
!7182 = !DILocation(line: 1276, column: 10, scope: !7180)
!7183 = !DILocation(line: 1276, column: 10, scope: !7173)
!7184 = !DILocation(line: 1277, column: 3, scope: !7180)
!7185 = !DILocation(line: 1278, column: 22, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1278, column: 10)
!7187 = !DILocation(line: 1278, column: 28, scope: !7186)
!7188 = !DILocation(line: 1278, column: 10, scope: !7186)
!7189 = !DILocation(line: 1278, column: 10, scope: !7173)
!7190 = !DILocation(line: 1279, column: 3, scope: !7186)
!7191 = !DILocation(line: 1280, column: 22, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1280, column: 10)
!7193 = !DILocation(line: 1280, column: 28, scope: !7192)
!7194 = !DILocation(line: 1280, column: 10, scope: !7192)
!7195 = !DILocation(line: 1280, column: 10, scope: !7173)
!7196 = !DILocation(line: 1281, column: 3, scope: !7192)
!7197 = !DILocation(line: 1282, column: 6, scope: !7173)
!7198 = !DILocation(line: 1284, column: 22, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1284, column: 10)
!7200 = !DILocation(line: 1284, column: 28, scope: !7199)
!7201 = !DILocation(line: 1284, column: 10, scope: !7199)
!7202 = !DILocation(line: 1284, column: 10, scope: !7173)
!7203 = !DILocation(line: 1285, column: 3, scope: !7199)
!7204 = !DILocation(line: 1286, column: 6, scope: !7173)
!7205 = !DILocation(line: 1288, column: 22, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1288, column: 10)
!7207 = !DILocation(line: 1288, column: 28, scope: !7206)
!7208 = !DILocation(line: 1288, column: 10, scope: !7206)
!7209 = !DILocation(line: 1288, column: 10, scope: !7173)
!7210 = !DILocation(line: 1289, column: 3, scope: !7206)
!7211 = !DILocation(line: 1290, column: 6, scope: !7173)
!7212 = !DILocation(line: 1292, column: 22, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1292, column: 10)
!7214 = !DILocation(line: 1292, column: 28, scope: !7213)
!7215 = !DILocation(line: 1292, column: 10, scope: !7213)
!7216 = !DILocation(line: 1292, column: 10, scope: !7173)
!7217 = !DILocation(line: 1293, column: 3, scope: !7213)
!7218 = !DILocation(line: 1294, column: 6, scope: !7173)
!7219 = !DILocation(line: 1296, column: 22, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1296, column: 10)
!7221 = !DILocation(line: 1296, column: 28, scope: !7220)
!7222 = !DILocation(line: 1296, column: 10, scope: !7220)
!7223 = !DILocation(line: 1296, column: 10, scope: !7173)
!7224 = !DILocation(line: 1297, column: 3, scope: !7220)
!7225 = !DILocation(line: 1298, column: 22, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1298, column: 10)
!7227 = !DILocation(line: 1298, column: 28, scope: !7226)
!7228 = !DILocation(line: 1298, column: 10, scope: !7226)
!7229 = !DILocation(line: 1298, column: 10, scope: !7173)
!7230 = !DILocation(line: 1299, column: 3, scope: !7226)
!7231 = !DILocation(line: 1300, column: 22, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1300, column: 10)
!7233 = !DILocation(line: 1300, column: 28, scope: !7232)
!7234 = !DILocation(line: 1300, column: 10, scope: !7232)
!7235 = !DILocation(line: 1300, column: 10, scope: !7173)
!7236 = !DILocation(line: 1301, column: 3, scope: !7232)
!7237 = !DILocation(line: 1302, column: 6, scope: !7173)
!7238 = !DILocation(line: 1304, column: 22, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1304, column: 10)
!7240 = !DILocation(line: 1304, column: 28, scope: !7239)
!7241 = !DILocation(line: 1304, column: 10, scope: !7239)
!7242 = !DILocation(line: 1304, column: 10, scope: !7173)
!7243 = !DILocation(line: 1305, column: 3, scope: !7239)
!7244 = !DILocation(line: 1306, column: 6, scope: !7173)
!7245 = !DILocation(line: 1308, column: 22, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1308, column: 10)
!7247 = !DILocation(line: 1308, column: 28, scope: !7246)
!7248 = !DILocation(line: 1308, column: 10, scope: !7246)
!7249 = !DILocation(line: 1308, column: 10, scope: !7173)
!7250 = !DILocation(line: 1309, column: 3, scope: !7246)
!7251 = !DILocation(line: 1310, column: 6, scope: !7173)
!7252 = !DILocation(line: 1312, column: 22, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7173, file: !2, line: 1312, column: 10)
!7254 = !DILocation(line: 1312, column: 28, scope: !7253)
!7255 = !DILocation(line: 1312, column: 10, scope: !7253)
!7256 = !DILocation(line: 1312, column: 10, scope: !7173)
!7257 = !DILocation(line: 1313, column: 3, scope: !7253)
!7258 = !DILocation(line: 1314, column: 6, scope: !7173)
!7259 = !DILocation(line: 1316, column: 5, scope: !7134)
!7260 = !DILocation(line: 1317, column: 1, scope: !7134)
!7261 = !DISubprogram(name: "htmlIsBooleanAttr__internal_alias", scope: !1530, file: !1530, line: 442, type: !6806, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7262 = !DISubprogram(name: "xmlFreeNode__internal_alias", scope: !1530, file: !1530, line: 3677, type: !7263, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{null, !1169}
!7265 = !DISubprogram(name: "xmlNewText__internal_alias", scope: !1530, file: !1530, line: 6393, type: !7266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{!1169, !1178}

; ModuleID = 'samples/198.bc'
source_filename = "rdkafka_broker.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rd_atomic32_t = type { i32 }
%struct.rd_kafka_pid_s = type { i64, i16 }
%struct.rd_kafka_ApiVersion = type { i16, i16, i16 }
%struct.rd_kafka_broker_s = type { %struct.anon, i32, ptr, i64, ptr, ptr, i32, i32, ptr, %union.mtx_t, i32, %struct.anon.0, i32, %struct.anon.1, i32, ptr, ptr, i64, i32, i32, i64, %struct.rd_interval_s, %struct.rd_atomic32_t, i32, ptr, i64, %struct.rd_interval_s, i32, %struct.anon.2, i32, i64, %struct.rd_atomic32_t, ptr, ptr, i32, %struct.rd_kafka_bufq_s, %struct.rd_kafka_bufq_s, %struct.rd_kafka_bufq_s, %struct.rd_avg_s, %struct.rd_avg_s, %struct.rd_avg_s, %struct.rd_avg_s, [256 x i8], [256 x i8], i16, ptr, i32, i32, ptr, %union.mtx_t, [2 x i32], i32, i64, i64, i8, %struct.anon.6, %struct.anon.7, %struct.rd_kafka_broker_monitor_s, i32, i32, %struct.anon.9, %struct.anon.10, %struct.rd_kafka_timer_s }
%struct.anon = type { ptr, ptr }
%struct.anon.0 = type { ptr, ptr }
%struct.anon.1 = type { ptr, ptr }
%struct.rd_interval_s = type { i64, i64, i32 }
%struct.anon.2 = type { %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic32_t, %struct.rd_atomic32_t, [68 x %struct.rd_atomic64_t], %struct.rd_atomic64_t, %struct.rd_atomic64_t }
%struct.rd_atomic64_t = type { i64 }
%struct.rd_kafka_bufq_s = type { %struct.anon.3, %struct.rd_atomic32_t, %struct.rd_atomic32_t }
%struct.anon.3 = type { ptr, ptr }
%struct.rd_avg_s = type { %struct.anon.4, %union.mtx_t, i32, i32, ptr, %struct.anon.5 }
%struct.anon.4 = type { i64, i64, i64, i64, i32, i64 }
%struct.anon.5 = type { i64, i64, i64, i64, i64, i64, i64, i32, double, double }
%union.mtx_t = type { i64, [32 x i8] }
%struct.anon.6 = type { i32, %struct.rd_atomic32_t }
%struct.anon.7 = type { ptr, ptr }
%struct.rd_kafka_broker_monitor_s = type { %struct.anon.8, ptr, ptr, ptr }
%struct.anon.8 = type { ptr, ptr }
%struct.anon.9 = type { %struct.rd_interval_s, %struct.rd_interval_s, %struct.rd_interval_s, %struct.rd_interval_s }
%struct.anon.10 = type { [512 x i8], i32, i32 }
%struct.rd_kafka_timer_s = type { %struct.anon.11, i64, i64, i8, ptr, ptr }
%struct.anon.11 = type { ptr, ptr }
%struct.rd_kafka_s = type { ptr, ptr, %struct.anon.12, %struct.rd_list_s, %struct.rd_atomic32_t, %struct.rd_atomic32_t, %struct.rd_atomic32_t, %struct.rd_atomic32_t, %struct.rd_atomic32_t, %union.mtx_t, ptr, %union.cnd_t, %union.mtx_t, i32, %struct.rd_list_s, %struct.anon.13, i32, ptr, %struct.rd_kafka_conf_s, ptr, [128 x i8], ptr, ptr, %struct.rd_atomic32_t, %union.pthread_rwlock_t, i32, %struct.timeval, %struct.rd_atomic64_t, %struct.anon.23, %struct.rd_atomic32_t, i64, ptr, i64, %struct.rd_kafka_metadata_cache, ptr, i32, i32, %struct.rd_atomic32_t, %struct.anon.25, %struct.rd_atomic32_t, %struct.anon.27, %struct.rd_kafka_coord_cache_s, %struct.anon.28, %struct.anon.29, %struct.rd_kafka_timers_s, i64, i32, i32, %union.cnd_t, %union.mtx_t, i64, %struct.anon.31, %struct.anon.32, %struct.anon.33, %struct.anon.34 }
%struct.anon.12 = type { ptr, ptr }
%struct.rd_list_s = type { i32, i32, ptr, ptr, i32, i32, ptr }
%struct.anon.13 = type { ptr, ptr }
%struct.rd_kafka_conf_s = type { %struct.rd_kafka_anyconf_hdr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, %struct.anon.14, %struct.anon.15, ptr, %struct.rd_list_s, %struct.anon.17, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, ptr, ptr, i32, i32, i32, i32, i32, ptr, ptr, %struct.rd_list_s, i32, ptr, ptr, i32, i32, i32, ptr, %struct.anon.18, i32, i32, double, i64, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.anon.19, %struct.anon.20, %struct.anon.21, ptr, ptr, %struct.anon.22 }
%struct.rd_kafka_anyconf_hdr = type { [33 x i64] }
%struct.anon.14 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.rd_list_s, ptr, ptr, i32, i32, ptr }
%struct.anon.15 = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.mtx_t, ptr, ptr, ptr, ptr, i64, ptr, i32, i32, %struct.anon.16 }
%struct.anon.16 = type { i32, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.anon.17 = type { %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s, %struct.rd_list_s }
%struct.anon.18 = type { i32, i8, ptr, i32 }
%struct.anon.19 = type { i32 }
%struct.anon.20 = type { i32, i32 }
%struct.anon.21 = type { ptr }
%struct.anon.22 = type { i8 }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.timeval = type { i64, i64 }
%struct.anon.23 = type { %struct.rd_atomic32_t, ptr, i32 }
%struct.rd_kafka_metadata_cache = type { %struct.rd_avl_s, %struct.anon.24, %struct.rd_kafka_timer_s, i32, %struct.rd_list_s, %union.mtx_t, i32, i32, %struct.rd_kafka_timer_s, %union.cnd_t, %union.mtx_t }
%struct.rd_avl_s = type { ptr, ptr, i32, %union.pthread_rwlock_t }
%struct.anon.24 = type { ptr, ptr }
%struct.anon.25 = type { i32, i64, %struct.rd_kafka_pid_s, i32, %struct.rd_atomic32_t, %struct.rd_kafka_timer_s, %struct.rd_atomic32_t, ptr, i32, i64, ptr, ptr, %struct.rd_kafka_broker_monitor_s, i8, %struct.anon.26, i32, %struct.rd_kafka_timer_s, %union.mtx_t, %struct.rd_kafka_toppar_tqhead_s, %struct.rd_kafka_toppar_tqhead_s, %struct.rd_kafka_toppar_tqhead_s, %struct.rd_atomic64_t, i32, ptr, i32, i8, %struct.rd_kafka_timer_s }
%struct.anon.26 = type { [64 x i8], i8, ptr, i8, %union.cnd_t, %union.mtx_t }
%struct.rd_kafka_toppar_tqhead_s = type { ptr, ptr }
%struct.anon.27 = type { ptr, %struct.rd_kafka_assignment_s, i32 }
%struct.rd_kafka_assignment_s = type { ptr, ptr, ptr, ptr, i32, i32, i64 }
%struct.rd_kafka_coord_cache_s = type { %struct.rd_kafka_coord_cache_head_s, i32, i64 }
%struct.rd_kafka_coord_cache_head_s = type { ptr, ptr }
%struct.anon.28 = type { ptr, ptr }
%struct.anon.29 = type { %union.mtx_t, %union.cnd_t, i32, i64, i32, i64 }
%struct.rd_kafka_timers_s = type { %struct.anon.30, ptr, %union.mtx_t, %union.cnd_t, ptr, i32 }
%struct.anon.30 = type { ptr, ptr }
%union.cnd_t = type { i64, [40 x i8] }
%struct.anon.31 = type { ptr, i64, i32 }
%struct.anon.32 = type { %struct.rd_interval_s, %struct.rd_interval_s, %union.mtx_t, %struct.rd_interval_s, %struct.rd_interval_s }
%struct.anon.33 = type { ptr, ptr }
%struct.anon.34 = type { ptr, %struct.rd_atomic32_t }
%struct.timespec = type { i64, i64 }
%struct.rd_kafka_op_s = type { %struct.anon.48, i32, i32, i32, i32, i32, ptr, i32, i32, ptr, %struct.rd_kafka_replyq_s, ptr, ptr, ptr, ptr, %union.anon.49 }
%struct.anon.48 = type { ptr, ptr }
%struct.rd_kafka_replyq_s = type { ptr, i32 }
%union.anon.49 = type { %struct.anon.73 }
%struct.anon.73 = type { %struct.rd_kafka_AdminOptions_s, i64, %struct.rd_kafka_timer_s, ptr, %struct.rd_list_s, ptr, ptr, i32, i32, i32, ptr, %struct.rd_kafka_replyq_s, i32, %struct.anon.77, ptr }
%struct.rd_kafka_AdminOptions_s = type { i32, %struct.rd_kafka_confval_s, i64, %struct.rd_kafka_confval_s, %struct.rd_kafka_confval_s, %struct.rd_kafka_confval_s, %struct.rd_kafka_confval_s, %struct.rd_kafka_confval_s, %struct.rd_kafka_confval_s }
%struct.rd_kafka_confval_s = type { ptr, i32, i32, i32, %union.anon.74 }
%union.anon.74 = type { %struct.anon.76 }
%struct.anon.76 = type { ptr, i32, i64, i64, ptr }
%struct.anon.77 = type { i32, ptr, i32, %struct.rd_list_s, i32 }
%struct.anon.81 = type { ptr, ptr }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.rd_kafka_buf_s = type { %struct.anon.35, i32, i64, i32, i32, %struct.rd_buf_s, %struct.rd_slice_s, i32, i64, i32, %struct.rd_kafkap_reqhdr, %struct.rd_kafkap_reshdr, i32, %struct.rd_kafka_replyq_s, %struct.rd_kafka_replyq_s, ptr, ptr, ptr, ptr, ptr, ptr, %struct.rd_atomic32_t, ptr, i32, i32, i32, i64, i64, i64, i64, i32, i8, i64, ptr, i32, %union.anon, ptr }
%struct.anon.35 = type { ptr, ptr }
%struct.rd_buf_s = type { %struct.rd_segment_head, i64, ptr, i64, i64, i64, ptr, i64, i64 }
%struct.rd_segment_head = type { ptr, ptr }
%struct.rd_slice_s = type { ptr, ptr, i64, i64, i64 }
%struct.rd_kafkap_reqhdr = type { i32, i16, i16, i32 }
%struct.rd_kafkap_reshdr = type { i32, i32 }
%union.anon = type { %struct.anon.37 }
%struct.anon.37 = type { %struct.rd_kafka_msgbatch_s }
%struct.rd_kafka_msgbatch_s = type { ptr, %struct.rd_kafka_msgq_s, %struct.rd_kafka_pid_s, i32, i64, i64, i64 }
%struct.rd_kafka_msgq_s = type { %struct.rd_kafka_msgs_head_s, i32, i64, %struct.anon.38 }
%struct.rd_kafka_msgs_head_s = type { ptr, ptr }
%struct.anon.38 = type { i64, i32, i64, i8, i8 }
%struct.rd_kafka_toppar_s = type { %struct.anon.40, %struct.anon.41, %struct.anon.42, %struct.anon.43, %struct.anon.44, %struct.anon.45, ptr, i32, i32, i32, ptr, ptr, ptr, %struct.rd_atomic32_t, %union.mtx_t, ptr, %struct.rd_kafka_msgq_s, %struct.rd_kafka_msgq_s, i32, ptr, ptr, %struct.rd_atomic32_t, i64, %struct.anon.46, %struct.rd_atomic32_t, i32, i32, i32, i32, i32, i64, %struct.rd_kafka_fetch_pos_s, %struct.rd_kafka_fetch_pos_s, %struct.rd_kafka_fetch_pos_s, %struct.rd_kafka_fetch_pos_s, %struct.rd_kafka_fetch_pos_s, %struct.rd_kafka_fetch_pos_s, ptr, i64, %struct.rd_kafka_fetch_pos_s, %struct.rd_kafka_fetch_pos_s, i64, %struct.offset_stats, %struct.offset_stats, i64, i64, i64, i64, ptr, ptr, i32, ptr, i8, %struct.rd_kafka_replyq_s, i32, %struct.rd_kafka_timer_s, %struct.rd_kafka_timer_s, %struct.rd_kafka_timer_s, %struct.rd_kafka_timer_s, %struct.rd_kafka_timer_s, %struct.rd_interval_s, %struct.rd_interval_s, %struct.rd_interval_s, %struct.rd_interval_s, i32, %struct.rd_kafka_toppar_err, %struct.anon.47 }
%struct.anon.40 = type { ptr, ptr }
%struct.anon.41 = type { ptr, ptr }
%struct.anon.42 = type { ptr, ptr }
%struct.anon.43 = type { ptr, ptr }
%struct.anon.44 = type { ptr, ptr }
%struct.anon.45 = type { ptr, ptr }
%struct.anon.46 = type { %struct.rd_kafka_pid_s, i64, i64, i32, i32, i8 }
%struct.rd_kafka_fetch_pos_s = type { i64, i32, i8 }
%struct.offset_stats = type { %struct.rd_kafka_fetch_pos_s, i64 }
%struct.rd_kafka_toppar_err = type { i32, i32, i64, i64, i32, i32 }
%struct.anon.47 = type { %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t, %struct.rd_atomic64_t }
%struct.anon.65 = type { ptr }
%struct.rd_kafka_enq_once_s = type { %union.mtx_t, i32, ptr, %struct.rd_kafka_replyq_s }
%struct.rd_segment_s = type { %struct.anon.87, ptr, i64, i64, i64, ptr, i32 }
%struct.anon.87 = type { ptr, ptr }
%struct.rd_kafka_topic_s = type { [4 x i8], %struct.anon.84, %struct.rd_atomic32_t, %union.pthread_rwlock_t, ptr, ptr, ptr, i32, i32, %struct.rd_interval_s, %struct.rd_list_s, %struct.rd_interval_s, i64, i64, %struct.rd_atomic32_t, i32, i32, i32, ptr, %struct.rd_avg_s, %struct.rd_avg_s, %struct.rd_kafka_topic_conf_s, %struct.anon.85 }
%struct.anon.84 = type { ptr, ptr }
%struct.rd_kafka_topic_conf_s = type { %struct.rd_kafka_anyconf_hdr, i32, i32, i32, ptr, ptr, i8, i32, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, ptr }
%struct.anon.85 = type { ptr, ptr }
%struct.anon.67 = type { ptr, %struct.rd_kafka_msgq_s, %struct.rd_kafka_msgq_s, i32 }
%struct.rd_kafka_msg_s = type { %struct.rd_kafka_message_s, %struct.anon.51, i32, i32, i64, ptr, i32, i32, %union.anon.52 }
%struct.rd_kafka_message_s = type { i32, ptr, i32, ptr, i64, ptr, i64, i64, ptr }
%struct.anon.51 = type { ptr, ptr }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, i64, i64, i64, i64, i32 }
%struct.rd_kafkap_str_s = type { i32, ptr }
%struct.__sigset_t = type { [16 x i64] }
%struct.rd_sockaddr_list_s = type { i32, i32, [0 x %union.rd_sockaddr_inx_t] }
%union.rd_sockaddr_inx_t = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.86 }
%union.anon.86 = type { [4 x i32] }
%struct.rd_kafka_metadata_broker = type { i32, ptr, i32 }
%struct.anon.68 = type { i32, [256 x i8] }
%struct.anon.79 = type { i32 }
%struct.rd_kafka_q_s = type { %union.mtx_t, %union.cnd_t, ptr, %struct.rd_kafka_op_tailq, i32, i64, i32, i32, ptr, ptr, ptr, ptr, ptr }
%struct.rd_kafka_op_tailq = type { ptr, ptr }
%struct.rd_kafka_q_io = type { i32, ptr, i64, i8, ptr, ptr }
%struct.rd_kafka_lwtopic_s = type { [4 x i8], ptr, %struct.rd_atomic32_t, ptr }

@.str = private unnamed_addr constant [5 x i8] c"INIT\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [5 x i8] c"DOWN\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [12 x i8] c"TRY_CONNECT\00", align 1, !dbg !9
@.str.3 = private unnamed_addr constant [8 x i8] c"CONNECT\00", align 1, !dbg !14
@.str.4 = private unnamed_addr constant [14 x i8] c"SSL_HANDSHAKE\00", align 1, !dbg !19
@.str.5 = private unnamed_addr constant [12 x i8] c"AUTH_LEGACY\00", align 1, !dbg !24
@.str.6 = private unnamed_addr constant [3 x i8] c"UP\00", align 1, !dbg !26
@.str.7 = private unnamed_addr constant [7 x i8] c"UPDATE\00", align 1, !dbg !31
@.str.8 = private unnamed_addr constant [17 x i8] c"APIVERSION_QUERY\00", align 1, !dbg !36
@.str.9 = private unnamed_addr constant [15 x i8] c"AUTH_HANDSHAKE\00", align 1, !dbg !41
@.str.10 = private unnamed_addr constant [9 x i8] c"AUTH_REQ\00", align 1, !dbg !46
@.str.11 = private unnamed_addr constant [7 x i8] c"REAUTH\00", align 1, !dbg !51
@rd_kafka_broker_state_names = global [12 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11], align 16, !dbg !53
@.str.12 = private unnamed_addr constant [10 x i8] c"plaintext\00", align 1, !dbg !2877
@.str.13 = private unnamed_addr constant [4 x i8] c"ssl\00", align 1, !dbg !2882
@.str.14 = private unnamed_addr constant [15 x i8] c"sasl_plaintext\00", align 1, !dbg !2884
@.str.15 = private unnamed_addr constant [9 x i8] c"sasl_ssl\00", align 1, !dbg !2886
@rd_kafka_secproto_names = global [5 x ptr] [ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr null], align 16, !dbg !2888
@.str.16 = private unnamed_addr constant [6 x i8] c"STATE\00", align 1, !dbg !2891
@.str.17 = private unnamed_addr constant [34 x i8] c"%s: Broker changed state %s -> %s\00", align 1, !dbg !2896
@.str.18 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1, !dbg !2901
@.str.19 = private unnamed_addr constant [23 x i8] c"%i/%i brokers are down\00", align 1, !dbg !2903
@.str.20 = private unnamed_addr constant [17 x i8] c"rdkafka_broker.c\00", align 1, !dbg !2908
@__FUNCTION__.rd_kafka_broker_fail = private unnamed_addr constant [21 x i8] c"rd_kafka_broker_fail\00", align 1, !dbg !2910
@.str.21 = private unnamed_addr constant [41 x i8] c"assert: thrd_is_current(rkb->rkb_thread)\00", align 1, !dbg !2915
@.str.22 = private unnamed_addr constant [8 x i8] c"BRKTERM\00", align 1, !dbg !2920
@.str.23 = private unnamed_addr constant [74 x i8] c"terminating: broker still has %d refcnt(s), %d buffer(s), %d partition(s)\00", align 1, !dbg !2922
@.str.24 = private unnamed_addr constant [11 x i8] c"BRKOUTBUFS\00", align 1, !dbg !2927
@.str.25 = private unnamed_addr constant [12 x i8] c"broker down\00", align 1, !dbg !2932
@.str.26 = private unnamed_addr constant [3 x i8] c"%s\00", align 1, !dbg !2934
@.str.27 = private unnamed_addr constant [24 x i8] c"rkbuf->rkbuf_rkb == rkb\00", align 1, !dbg !2936
@__PRETTY_FUNCTION__.rd_kafka_broker_buf_enq_replyq = private unnamed_addr constant [124 x i8] c"void rd_kafka_broker_buf_enq_replyq(rd_kafka_broker_t *, rd_kafka_buf_t *, rd_kafka_replyq_t, rd_kafka_resp_cb_t *, void *)\00", align 1, !dbg !2941
@.str.28 = private unnamed_addr constant [25 x i8] c"wait broker state change\00", align 1, !dbg !2946
@.str.29 = private unnamed_addr constant [10 x i8] c"BROADCAST\00", align 1, !dbg !2951
@.str.30 = private unnamed_addr constant [26 x i8] c"Broadcasting state change\00", align 1, !dbg !2953
@__FUNCTION__.rd_kafka_broker_any = private unnamed_addr constant [20 x i8] c"rd_kafka_broker_any\00", align 1, !dbg !2958
@__FUNCTION__.rd_kafka_broker_any_up = private unnamed_addr constant [23 x i8] c"rd_kafka_broker_any_up\00", align 1, !dbg !2961
@__FUNCTION__.rd_kafka_broker_get_async = private unnamed_addr constant [26 x i8] c"rd_kafka_broker_get_async\00", align 1, !dbg !2964
@__const.rd_kafka_recv.errstr = private unnamed_addr constant [512 x i8] c"Protocol parse failurealign 16
@.str.31 = private unnamed_addr constant [18 x i8] c"!rkbuf->rkbuf_rkb\00", align 1, !dbg !2967
@__PRETTY_FUNCTION__.rd_kafka_recv = private unnamed_addr constant [39 x i8] c"int rd_kafka_recv(rd_kafka_broker_t *)\00", align 1, !dbg !2972
@.str.32 = private unnamed_addr constant [3 x i8] c": \00", align 1, !dbg !2977
@.str.33 = private unnamed_addr constant [11 x i8] c"PROTOUFLOW\00", align 1, !dbg !2979
@.str.34 = private unnamed_addr constant [111 x i8] c"Protocol read buffer underflow for %s v%hd at %zu/%zu (%s:%i): expected %zu bytes > %zu remaining bytes (%s)%s\00", align 1, !dbg !2981
@__FUNCTION__.rd_kafka_recv = private unnamed_addr constant [14 x i8] c"rd_kafka_recv\00", align 1, !dbg !2986
@.str.35 = private unnamed_addr constant [35 x i8] c"incorrect broker.version.fallback?\00", align 1, !dbg !2989
@.str.36 = private unnamed_addr constant [69 x i8] c"Invalid response size %d (0..%i): increase receive.message.max.bytes\00", align 1, !dbg !2994
@.str.37 = private unnamed_addr constant [13 x i8] c"Disconnected\00", align 1, !dbg !2999
@.str.38 = private unnamed_addr constant [19 x i8] c"Receive failed: %s\00", align 1, !dbg !3004
@stderr = external global ptr, align 8
@.str.39 = private unnamed_addr constant [65 x i8] c"WARNING: librdkafka: %s: fcntl(FD_CLOEXEC) failed: %s: ignoring\0A\00", align 1, !dbg !3009
@__FUNCTION__.rd_kafka_socket_cb_generic = private unnamed_addr constant [27 x i8] c"rd_kafka_socket_cb_generic\00", align 1, !dbg !3014
@.str.40 = private unnamed_addr constant [10 x i8] c"connected\00", align 1, !dbg !3019
@.str.41 = private unnamed_addr constant [10 x i8] c"CONNECTED\00", align 1, !dbg !3021
@.str.42 = private unnamed_addr constant [16 x i8] c"Connected (#%d)\00", align 1, !dbg !3023
@__FUNCTION__.rd_kafka_send = private unnamed_addr constant [14 x i8] c"rd_kafka_send\00", align 1, !dbg !3026
@.str.43 = private unnamed_addr constant [8 x i8] c"MAKEREQ\00", align 1, !dbg !3028
@.str.44 = private unnamed_addr constant [29 x i8] c"Failed to make %sRequest: %s\00", align 1, !dbg !3030
@.str.45 = private unnamed_addr constant [12 x i8] c"UNSUPPORTED\00", align 1, !dbg !3035
@.str.46 = private unnamed_addr constant [162 x i8] c"Failing %sResponse (v%hd, %zu bytes, CorrId %d): request not supported by broker (missing api.version.request=false or incorrect broker.version.fallback config?)\00", align 1, !dbg !3037
@.str.47 = private unnamed_addr constant [43 x i8] c"rd_slice_offset(&rkbuf->rkbuf_reader) == 0\00", align 1, !dbg !3042
@__PRETTY_FUNCTION__.rd_kafka_send = private unnamed_addr constant [39 x i8] c"int rd_kafka_send(rd_kafka_broker_t *)\00", align 1, !dbg !3047
@.str.48 = private unnamed_addr constant [47 x i8] c"assert: rkbuf->rkbuf_connid == rkb->rkb_connid\00", align 1, !dbg !3049
@.str.49 = private unnamed_addr constant [5 x i8] c"SEND\00", align 1, !dbg !3054
@.str.50 = private unnamed_addr constant [60 x i8] c"Sent partial %sRequest (v%hd, %zd+%zd/%zu bytes, CorrId %d)\00", align 1, !dbg !3056
@.str.51 = private unnamed_addr constant [50 x i8] c"Sent %sRequest (v%hd, %zu bytes @ %zu, CorrId %d)\00", align 1, !dbg !3061
@.str.52 = private unnamed_addr constant [6 x i8] c"RETRY\00", align 1, !dbg !3066
@.str.53 = private unnamed_addr constant [74 x i8] c"Retrying %sRequest (v%hd, %zu bytes, retry %d/%d, prev CorrId %d) in %dms\00", align 1, !dbg !3068
@.str.54 = private unnamed_addr constant [12 x i8] c"IMPLICITACK\00", align 1, !dbg !3070
@.str.55 = private unnamed_addr constant [103 x i8] c"%.*s [%d] %d message(s) implicitly acked by subsequent batch success (msgids %lu..%lu, last acked %lu)\00", align 1, !dbg !3072
@.str.56 = private unnamed_addr constant [33 x i8] c"thrd_is_current(rkb->rkb_thread)\00", align 1, !dbg !3077
@__PRETTY_FUNCTION__.rd_kafka_broker_destroy_final = private unnamed_addr constant [56 x i8] c"void rd_kafka_broker_destroy_final(rd_kafka_broker_t *)\00", align 1, !dbg !3080
@.str.57 = private unnamed_addr constant [52 x i8] c"(((&rkb->rkb_monitors)->tqh_first) == (((void*)0)))\00", align 1, !dbg !3083
@.str.58 = private unnamed_addr constant [61 x i8] c"(((&rkb->rkb_outbufs.rkbq_bufs)->tqh_first) == (((void*)0)))\00", align 1, !dbg !3088
@.str.59 = private unnamed_addr constant [63 x i8] c"(((&rkb->rkb_waitresps.rkbq_bufs)->tqh_first) == (((void*)0)))\00", align 1, !dbg !3093
@.str.60 = private unnamed_addr constant [63 x i8] c"(((&rkb->rkb_retrybufs.rkbq_bufs)->tqh_first) == (((void*)0)))\00", align 1, !dbg !3098
@.str.61 = private unnamed_addr constant [51 x i8] c"(((&rkb->rkb_toppars)->tqh_first) == (((void*)0)))\00", align 1, !dbg !3100
@__FUNCTION__.rd_kafka_broker_add = private unnamed_addr constant [20 x i8] c"rd_kafka_broker_add\00", align 1, !dbg !3105
@.str.62 = private unnamed_addr constant [9 x i8] c"WAKEUPFD\00", align 1, !dbg !3107
@.str.63 = private unnamed_addr constant [73 x i8] c"Failed to setup broker queue wake-up fds: %s: disabling low-latency mode\00", align 1, !dbg !3109
@.str.64 = private unnamed_addr constant [39 x i8] c"Enabled low-latency ops queue wake-ups\00", align 1, !dbg !3114
@.str.65 = private unnamed_addr constant [7 x i8] c"THREAD\00", align 1, !dbg !3117
@.str.66 = private unnamed_addr constant [31 x i8] c"Unable to create broker thread\00", align 1, !dbg !3119
@.str.67 = private unnamed_addr constant [7 x i8] c"BROKER\00", align 1, !dbg !3124
@.str.68 = private unnamed_addr constant [32 x i8] c"Added new broker with NodeId %d\00", align 1, !dbg !3126
@.str.69 = private unnamed_addr constant [41 x i8] c"rkb && *\22failed to create broker thread\22\00", align 1, !dbg !3131
@__PRETTY_FUNCTION__.rd_kafka_broker_add_logical = private unnamed_addr constant [75 x i8] c"rd_kafka_broker_t *rd_kafka_broker_add_logical(rd_kafka_t *, const char *)\00", align 1, !dbg !3133
@.str.70 = private unnamed_addr constant [40 x i8] c"((rkb)->rkb_source == RD_KAFKA_LOGICAL)\00", align 1, !dbg !3138
@__PRETTY_FUNCTION__.rd_kafka_broker_set_nodename = private unnamed_addr constant [76 x i8] c"void rd_kafka_broker_set_nodename(rd_kafka_broker_t *, rd_kafka_broker_t *)\00", align 1, !dbg !3140
@.str.71 = private unnamed_addr constant [16 x i8] c"rkb != from_rkb\00", align 1, !dbg !3145
@.str.72 = private unnamed_addr constant [9 x i8] c"NODENAME\00", align 1, !dbg !3147
@.str.73 = private unnamed_addr constant [42 x i8] c"Broker nodename changed from \22%s\22 to \22%s\22\00", align 1, !dbg !3149
@.str.74 = private unnamed_addr constant [7 x i8] c"NODEID\00", align 1, !dbg !3154
@.str.75 = private unnamed_addr constant [36 x i8] c"Broker nodeid changed from %d to %d\00", align 1, !dbg !3156
@.str.76 = private unnamed_addr constant [38 x i8] c"Canonicalizing bootstrap broker %s:%d\00", align 1, !dbg !3161
@.str.77 = private unnamed_addr constant [5 x i8] c"9092\00", align 1, !dbg !3166
@.str.78 = private unnamed_addr constant [27 x i8] c"Failed to resolve '%s': %s\00", align 1, !dbg !3168
@.str.79 = private unnamed_addr constant [40 x i8] c"Adding broker with resolved hostname %s\00", align 1, !dbg !3171
@.str.80 = private unnamed_addr constant [24 x i8] c"bootstrap servers added\00", align 1, !dbg !3173
@__FUNCTION__.rd_kafka_broker_update = private unnamed_addr constant [23 x i8] c"rd_kafka_broker_update\00", align 1, !dbg !3175
@rd_kafka_broker_name.ret = internal thread_local global [4 x [256 x i8]] zeroinitializer, align 16, !dbg !3177
@rd_kafka_broker_name.reti = internal thread_local global i32 0, align 4, !dbg !3186
@.str.81 = private unnamed_addr constant [7 x i8] c"WAKEUP\00", align 1, !dbg !3188
@.str.82 = private unnamed_addr constant [12 x i8] c"Wake-up: %s\00", align 1, !dbg !3190
@.str.83 = private unnamed_addr constant [54 x i8] c"Wake-up sent to %d broker thread%s in state >= %s: %s\00", align 1, !dbg !3192
@.str.84 = private unnamed_addr constant [2 x i8] c"s\00", align 1, !dbg !3197
@.str.85 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !3200
@.str.86 = private unnamed_addr constant [80 x i8] c"Not selecting any broker for cluster connection: still suppressed for %ldms: %s\00", align 1, !dbg !3202
@__FUNCTION__.rd_kafka_connect_any = private unnamed_addr constant [21 x i8] c"rd_kafka_connect_any\00", align 1, !dbg !3207
@.str.87 = private unnamed_addr constant [43 x i8] c"Cluster connection already in progress: %s\00", align 1, !dbg !3209
@.str.88 = private unnamed_addr constant [74 x i8] c"Selected for cluster connection: %s (broker has %d connection attempt(s))\00", align 1, !dbg !3211
@.str.89 = private unnamed_addr constant [9 x i8] c"FETCHADD\00", align 1, !dbg !3213
@.str.90 = private unnamed_addr constant [72 x i8] c"Added %.*s [%d] to %s list (%d entries, opv %d, %d messages queued): %s\00", align 1, !dbg !3215
@.str.91 = private unnamed_addr constant [6 x i8] c"fetch\00", align 1, !dbg !3220
@.str.92 = private unnamed_addr constant [7 x i8] c"active\00", align 1, !dbg !3222
@__FUNCTION__.rd_kafka_broker_active_toppar_del = private unnamed_addr constant [34 x i8] c"rd_kafka_broker_active_toppar_del\00", align 1, !dbg !3224
@.str.93 = private unnamed_addr constant [39 x i8] c"assert: rkb->rkb_active_toppar_cnt > 0\00", align 1, !dbg !3227
@.str.94 = private unnamed_addr constant [56 x i8] c"Removed %.*s [%d] from %s list (%d entries, opv %d): %s\00", align 1, !dbg !3229
@.str.95 = private unnamed_addr constant [7 x i8] c"r >= 0\00", align 1, !dbg !3231
@__PRETTY_FUNCTION__.rd_kafka_broker_persistent_connection_del = private unnamed_addr constant [85 x i8] c"void rd_kafka_broker_persistent_connection_del(rd_kafka_broker_t *, rd_atomic32_t *)\00", align 1, !dbg !3233
@.str.96 = private unnamed_addr constant [20 x i8] c"!rkbmon->rkbmon_rkb\00", align 1, !dbg !3238
@__PRETTY_FUNCTION__.rd_kafka_broker_monitor_add = private unnamed_addr constant [130 x i8] c"void rd_kafka_broker_monitor_add(rd_kafka_broker_monitor_t *, rd_kafka_broker_t *, rd_kafka_q_t *, void (*)(rd_kafka_broker_t *))\00", align 1, !dbg !3240
@.str.97 = private unnamed_addr constant [20 x i8] c"!*\22refcnt sub-zero\22\00", align 1, !dbg !3245
@.str.98 = private unnamed_addr constant [7 x i8] c"./rd.h\00", align 1, !dbg !3247
@__PRETTY_FUNCTION__.rd_refcnt_sub0 = private unnamed_addr constant [34 x i8] c"int rd_refcnt_sub0(rd_refcnt_t *)\00", align 1, !dbg !3249
@.str.99 = private unnamed_addr constant [5 x i8] c"%s: \00", align 1, !dbg !3251
@.str.100 = private unnamed_addr constant [189 x i8] c"Disconnected while requesting ApiVersion: might be caused by incorrect security.protocol configuration (connecting to a SSL listener?) or broker version is < 0.10 (see api.version.request)\00", align 1, !dbg !3253
@.str.101 = private unnamed_addr constant [109 x i8] c"Disconnected while requesting ApiVersion: might be caused by broker version < 0.10 (see api.version.request)\00", align 1, !dbg !3258
@.str.102 = private unnamed_addr constant [110 x i8] c"Disconnected: verify that security.protocol is correctly configured, broker might require SASL authentication\00", align 1, !dbg !3263
@.str.103 = private unnamed_addr constant [23 x i8] c"after %dms in state %s\00", align 1, !dbg !3268
@.str.104 = private unnamed_addr constant [35 x i8] c", %d identical error(s) suppressed\00", align 1, !dbg !3270
@.str.105 = private unnamed_addr constant [6 x i8] c" (%s)\00", align 1, !dbg !3272
@.str.106 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1, !dbg !3274
@.str.107 = private unnamed_addr constant [12 x i8] c"%s (%s)%s%s\00", align 1, !dbg !3276
@.str.108 = private unnamed_addr constant [26 x i8] c": identical to last error\00", align 1, !dbg !3278
@.str.109 = private unnamed_addr constant [23 x i8] c": error log suppressed\00", align 1, !dbg !3280
@.str.110 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1, !dbg !3282
@.str.111 = private unnamed_addr constant [8 x i8] c"FEATURE\00", align 1, !dbg !3284
@.str.112 = private unnamed_addr constant [44 x i8] c"Updated enabled protocol features -%s to %s\00", align 1, !dbg !3286
@.str.113 = private unnamed_addr constant [29 x i8] c"!(rkbuf->rkbuf_flags & 0x80)\00", align 1, !dbg !3291
@__PRETTY_FUNCTION__.rd_kafka_buf_finalize = private unnamed_addr constant [59 x i8] c"void rd_kafka_buf_finalize(rd_kafka_t *, rd_kafka_buf_t *)\00", align 1, !dbg !3293
@.str.114 = private unnamed_addr constant [33 x i8] c"data_len <= (2147483647 *2U +1U)\00", align 1, !dbg !3298
@.str.115 = private unnamed_addr constant [12 x i8] c"./rdcrc32.h\00", align 1, !dbg !3300
@__PRETTY_FUNCTION__.rd_crc32_update = private unnamed_addr constant [70 x i8] c"rd_crc32_t rd_crc32_update(rd_crc32_t, const unsigned char *, size_t)\00", align 1, !dbg !3302
@.str.116 = private unnamed_addr constant [16 x i8] c"./rdkafka_buf.h\00", align 1, !dbg !3307
@__FUNCTION__.rd_kafka_buf_update = private unnamed_addr constant [20 x i8] c"rd_kafka_buf_update\00", align 1, !dbg !3309
@.str.117 = private unnamed_addr constant [50 x i8] c"assert: !(rkbuf->rkbuf_flags & RD_KAFKA_OP_F_CRC)\00", align 1, !dbg !3311
@__FUNCTION__.rd_kafka_broker_buf_enq0 = private unnamed_addr constant [25 x i8] c"rd_kafka_broker_buf_enq0\00", align 1, !dbg !3313
@.str.118 = private unnamed_addr constant [20 x i8] c"broker state change\00", align 1, !dbg !3316
@.str.119 = private unnamed_addr constant [18 x i8] c"eonce->refcnt > 0\00", align 1, !dbg !3318
@.str.120 = private unnamed_addr constant [18 x i8] c"./rdkafka_queue.h\00", align 1, !dbg !3320
@__PRETTY_FUNCTION__.rd_kafka_enq_once_trigger = private unnamed_addr constant [89 x i8] c"void rd_kafka_enq_once_trigger(rd_kafka_enq_once_t *, rd_kafka_resp_err_t, const char *)\00", align 1, !dbg !3322
@.str.121 = private unnamed_addr constant [12 x i8] c"!eonce->rko\00", align 1, !dbg !3327
@__PRETTY_FUNCTION__.rd_kafka_enq_once_destroy0 = private unnamed_addr constant [55 x i8] c"void rd_kafka_enq_once_destroy0(rd_kafka_enq_once_t *)\00", align 1, !dbg !3329
@.str.122 = private unnamed_addr constant [17 x i8] c"!eonce->replyq.q\00", align 1, !dbg !3334
@.str.123 = private unnamed_addr constant [19 x i8] c"eonce->refcnt == 0\00", align 1, !dbg !3336
@.str.124 = private unnamed_addr constant [18 x i8] c"lookup controller\00", align 1, !dbg !3338
@__FUNCTION__.rd_kafka_broker_controller_nowait = private unnamed_addr constant [34 x i8] c"rd_kafka_broker_controller_nowait\00", align 1, !dbg !3340
@rd_kafka_ApiKey2str.names = internal global [68 x ptr] [ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr null, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191], align 16, !dbg !3483
@.str.125 = private unnamed_addr constant [8 x i8] c"Produce\00", align 1, !dbg !3342
@.str.126 = private unnamed_addr constant [6 x i8] c"Fetch\00", align 1, !dbg !3344
@.str.127 = private unnamed_addr constant [12 x i8] c"ListOffsets\00", align 1, !dbg !3346
@.str.128 = private unnamed_addr constant [9 x i8] c"Metadata\00", align 1, !dbg !3348
@.str.129 = private unnamed_addr constant [13 x i8] c"LeaderAndIsr\00", align 1, !dbg !3350
@.str.130 = private unnamed_addr constant [12 x i8] c"StopReplica\00", align 1, !dbg !3352
@.str.131 = private unnamed_addr constant [15 x i8] c"UpdateMetadata\00", align 1, !dbg !3354
@.str.132 = private unnamed_addr constant [19 x i8] c"ControlledShutdown\00", align 1, !dbg !3356
@.str.133 = private unnamed_addr constant [13 x i8] c"OffsetCommit\00", align 1, !dbg !3358
@.str.134 = private unnamed_addr constant [12 x i8] c"OffsetFetch\00", align 1, !dbg !3360
@.str.135 = private unnamed_addr constant [16 x i8] c"FindCoordinator\00", align 1, !dbg !3362
@.str.136 = private unnamed_addr constant [10 x i8] c"JoinGroup\00", align 1, !dbg !3364
@.str.137 = private unnamed_addr constant [10 x i8] c"Heartbeat\00", align 1, !dbg !3366
@.str.138 = private unnamed_addr constant [11 x i8] c"LeaveGroup\00", align 1, !dbg !3368
@.str.139 = private unnamed_addr constant [10 x i8] c"SyncGroup\00", align 1, !dbg !3370
@.str.140 = private unnamed_addr constant [15 x i8] c"DescribeGroups\00", align 1, !dbg !3372
@.str.141 = private unnamed_addr constant [11 x i8] c"ListGroups\00", align 1, !dbg !3374
@.str.142 = private unnamed_addr constant [14 x i8] c"SaslHandshake\00", align 1, !dbg !3376
@.str.143 = private unnamed_addr constant [11 x i8] c"ApiVersion\00", align 1, !dbg !3378
@.str.144 = private unnamed_addr constant [13 x i8] c"CreateTopics\00", align 1, !dbg !3380
@.str.145 = private unnamed_addr constant [13 x i8] c"DeleteTopics\00", align 1, !dbg !3382
@.str.146 = private unnamed_addr constant [14 x i8] c"DeleteRecords\00", align 1, !dbg !3384
@.str.147 = private unnamed_addr constant [15 x i8] c"InitProducerId\00", align 1, !dbg !3386
@.str.148 = private unnamed_addr constant [21 x i8] c"OffsetForLeaderEpoch\00", align 1, !dbg !3388
@.str.149 = private unnamed_addr constant [19 x i8] c"AddPartitionsToTxn\00", align 1, !dbg !3391
@.str.150 = private unnamed_addr constant [16 x i8] c"AddOffsetsToTxn\00", align 1, !dbg !3393
@.str.151 = private unnamed_addr constant [7 x i8] c"EndTxn\00", align 1, !dbg !3395
@.str.152 = private unnamed_addr constant [16 x i8] c"WriteTxnMarkers\00", align 1, !dbg !3397
@.str.153 = private unnamed_addr constant [16 x i8] c"TxnOffsetCommit\00", align 1, !dbg !3399
@.str.154 = private unnamed_addr constant [13 x i8] c"DescribeAcls\00", align 1, !dbg !3401
@.str.155 = private unnamed_addr constant [11 x i8] c"CreateAcls\00", align 1, !dbg !3403
@.str.156 = private unnamed_addr constant [11 x i8] c"DeleteAcls\00", align 1, !dbg !3405
@.str.157 = private unnamed_addr constant [16 x i8] c"DescribeConfigs\00", align 1, !dbg !3407
@.str.158 = private unnamed_addr constant [13 x i8] c"AlterConfigs\00", align 1, !dbg !3409
@.str.159 = private unnamed_addr constant [20 x i8] c"AlterReplicaLogDirs\00", align 1, !dbg !3411
@.str.160 = private unnamed_addr constant [16 x i8] c"DescribeLogDirs\00", align 1, !dbg !3413
@.str.161 = private unnamed_addr constant [17 x i8] c"SaslAuthenticate\00", align 1, !dbg !3415
@.str.162 = private unnamed_addr constant [17 x i8] c"CreatePartitions\00", align 1, !dbg !3417
@.str.163 = private unnamed_addr constant [22 x i8] c"CreateDelegationToken\00", align 1, !dbg !3419
@.str.164 = private unnamed_addr constant [21 x i8] c"RenewDelegationToken\00", align 1, !dbg !3424
@.str.165 = private unnamed_addr constant [22 x i8] c"ExpireDelegationToken\00", align 1, !dbg !3426
@.str.166 = private unnamed_addr constant [24 x i8] c"DescribeDelegationToken\00", align 1, !dbg !3428
@.str.167 = private unnamed_addr constant [13 x i8] c"DeleteGroups\00", align 1, !dbg !3430
@.str.168 = private unnamed_addr constant [20 x i8] c"ElectLeadersRequest\00", align 1, !dbg !3432
@.str.169 = private unnamed_addr constant [31 x i8] c"IncrementalAlterConfigsRequest\00", align 1, !dbg !3434
@.str.170 = private unnamed_addr constant [35 x i8] c"AlterPartitionReassignmentsRequest\00", align 1, !dbg !3436
@.str.171 = private unnamed_addr constant [34 x i8] c"ListPartitionReassignmentsRequest\00", align 1, !dbg !3438
@.str.172 = private unnamed_addr constant [20 x i8] c"OffsetDeleteRequest\00", align 1, !dbg !3440
@.str.173 = private unnamed_addr constant [28 x i8] c"DescribeClientQuotasRequest\00", align 1, !dbg !3442
@.str.174 = private unnamed_addr constant [25 x i8] c"AlterClientQuotasRequest\00", align 1, !dbg !3447
@.str.175 = private unnamed_addr constant [36 x i8] c"DescribeUserScramCredentialsRequest\00", align 1, !dbg !3449
@.str.176 = private unnamed_addr constant [33 x i8] c"AlterUserScramCredentialsRequest\00", align 1, !dbg !3451
@.str.177 = private unnamed_addr constant [12 x i8] c"VoteRequest\00", align 1, !dbg !3453
@.str.178 = private unnamed_addr constant [24 x i8] c"BeginQuorumEpochRequest\00", align 1, !dbg !3455
@.str.179 = private unnamed_addr constant [22 x i8] c"EndQuorumEpochRequest\00", align 1, !dbg !3457
@.str.180 = private unnamed_addr constant [22 x i8] c"DescribeQuorumRequest\00", align 1, !dbg !3459
@.str.181 = private unnamed_addr constant [16 x i8] c"AlterIsrRequest\00", align 1, !dbg !3461
@.str.182 = private unnamed_addr constant [22 x i8] c"UpdateFeaturesRequest\00", align 1, !dbg !3463
@.str.183 = private unnamed_addr constant [16 x i8] c"EnvelopeRequest\00", align 1, !dbg !3465
@.str.184 = private unnamed_addr constant [14 x i8] c"FetchSnapshot\00", align 1, !dbg !3467
@.str.185 = private unnamed_addr constant [16 x i8] c"DescribeCluster\00", align 1, !dbg !3469
@.str.186 = private unnamed_addr constant [18 x i8] c"DescribeProducers\00", align 1, !dbg !3471
@.str.187 = private unnamed_addr constant [16 x i8] c"BrokerHeartbeat\00", align 1, !dbg !3473
@.str.188 = private unnamed_addr constant [17 x i8] c"UnregisterBroker\00", align 1, !dbg !3475
@.str.189 = private unnamed_addr constant [21 x i8] c"DescribeTransactions\00", align 1, !dbg !3477
@.str.190 = private unnamed_addr constant [17 x i8] c"ListTransactions\00", align 1, !dbg !3479
@.str.191 = private unnamed_addr constant [20 x i8] c"AllocateProducerIds\00", align 1, !dbg !3481
@rd_kafka_ApiKey2str.ret = internal thread_local global [64 x i8] zeroinitializer, align 16, !dbg !3491
@.str.192 = private unnamed_addr constant [13 x i8] c"Unknown-%hd?\00", align 1, !dbg !3493
@__FUNCTION__.rd_kafka_req_response = private unnamed_addr constant [22 x i8] c"rd_kafka_req_response\00", align 1, !dbg !3495
@.str.193 = private unnamed_addr constant [9 x i8] c"RESPONSE\00", align 1, !dbg !3498
@.str.194 = private unnamed_addr constant [44 x i8] c"Response for unknown CorrId %d (timed out?)\00", align 1, !dbg !3500
@.str.195 = private unnamed_addr constant [5 x i8] c"RECV\00", align 1, !dbg !3502
@.str.196 = private unnamed_addr constant [61 x i8] c"Received %sResponse (v%hd, %zu bytes, CorrId %d, rtt %.2fms)\00", align 1, !dbg !3504
@.str.197 = private unnamed_addr constant [25 x i8] c": uvarint parsing failed\00", align 1, !dbg !3506
@__PRETTY_FUNCTION__.rd_kafka_req_response = private unnamed_addr constant [65 x i8] c"int rd_kafka_req_response(rd_kafka_broker_t *, rd_kafka_buf_t *)\00", align 1, !dbg !3508
@__FUNCTION__.rd_kafka_waitresp_find = private unnamed_addr constant [23 x i8] c"rd_kafka_waitresp_find\00", align 1, !dbg !3511
@rd_strerror.ret = internal thread_local global [128 x i8] zeroinitializer, align 16, !dbg !3513
@.str.198 = private unnamed_addr constant [44 x i8] c"Updated enabled protocol features +%s to %s\00", align 1, !dbg !3520
@.str.199 = private unnamed_addr constant [11 x i8] c"APIVERSION\00", align 1, !dbg !3522
@.str.200 = private unnamed_addr constant [52 x i8] c"Using (configuration fallback) %s protocol features\00", align 1, !dbg !3524
@.str.201 = private unnamed_addr constant [40 x i8] c"Updated enabled protocol features to %s\00", align 1, !dbg !3526
@.str.202 = private unnamed_addr constant [185 x i8] c"ApiVersionRequest v%hd failed due to invalid request: check client.software.name (\22%s\22) and client.software.version (\22%s\22) for invalid characters: falling back to older request version\00", align 1, !dbg !3528
@.str.203 = private unnamed_addr constant [60 x i8] c"ApiVersionRequest v%hd failed due to %s: retrying with v%hd\00", align 1, !dbg !3533
@.str.204 = private unnamed_addr constant [108 x i8] c"ApiVersionRequest failed: %s: probably due to broker version < 0.10 (see api.version.request configuration)\00", align 1, !dbg !3535
@.str.205 = private unnamed_addr constant [5 x i8] c"AUTH\00", align 1, !dbg !3540
@.str.206 = private unnamed_addr constant [41 x i8] c"Auth in state %s (handshake %ssupported)\00", align 1, !dbg !3542
@.str.207 = private unnamed_addr constant [5 x i8] c"not \00", align 1, !dbg !3544
@.str.208 = private unnamed_addr constant [45 x i8] c"Failed to initialize SASL authentication: %s\00", align 1, !dbg !3546
@.str.209 = private unnamed_addr constant [6 x i8] c"(n/a)\00", align 1, !dbg !3551
@__FUNCTION__.rd_kafka_broker_handle_SaslHandshake = private unnamed_addr constant [37 x i8] c"rd_kafka_broker_handle_SaslHandshake\00", align 1, !dbg !3553
@.str.210 = private unnamed_addr constant [9 x i8] c"PROTOERR\00", align 1, !dbg !3558
@.str.211 = private unnamed_addr constant [93 x i8] c"Protocol parse failure for %s v%hd%s at %zu/%zu (%s:%i) (incorrect broker.version.fallback?)\00", align 1, !dbg !3560
@.str.212 = private unnamed_addr constant [7 x i8] c"(flex)\00", align 1, !dbg !3565
@.str.213 = private unnamed_addr constant [26 x i8] c"Invalid MechanismCount %d\00", align 1, !dbg !3567
@.str.214 = private unnamed_addr constant [7 x i8] c"%s%.*s\00", align 1, !dbg !3569
@.str.215 = private unnamed_addr constant [2 x i8] c",\00", align 1, !dbg !3571
@.str.216 = private unnamed_addr constant [10 x i8] c"SASLMECHS\00", align 1, !dbg !3573
@.str.217 = private unnamed_addr constant [37 x i8] c"Broker supported SASL mechanisms: %s\00", align 1, !dbg !3575
@.str.218 = private unnamed_addr constant [74 x i8] c"SASL %s mechanism handshake failed: %s: broker's supported mechanisms: %s\00", align 1, !dbg !3578
@__FUNCTION__.rd_kafka_broker_send = private unnamed_addr constant [21 x i8] c"rd_kafka_broker_send\00", align 1, !dbg !3580
@.str.219 = private unnamed_addr constant [51 x i8] c"assert: rkb->rkb_state >= RD_KAFKA_BROKER_STATE_UP\00", align 1, !dbg !3582
@.str.220 = private unnamed_addr constant [27 x i8] c"assert: rkb->rkb_transport\00", align 1, !dbg !3584
@.str.221 = private unnamed_addr constant [16 x i8] c"Send failed: %s\00", align 1, !dbg !3586
@.str.222 = private unnamed_addr constant [5 x i8] c"LRKT\00", align 1, !dbg !3588
@.str.223 = private unnamed_addr constant [2 x i8] c"p\00", align 1, !dbg !3590
@__PRETTY_FUNCTION__.rd_calloc = private unnamed_addr constant [32 x i8] c"void *rd_calloc(size_t, size_t)\00", align 1, !dbg !3592
@.str.224 = private unnamed_addr constant [7 x i8] c"%s:%hu\00", align 1, !dbg !3595
@.str.225 = private unnamed_addr constant [6 x i8] c"%s://\00", align 1, !dbg !3597
@.str.226 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1, !dbg !3599
@.str.227 = private unnamed_addr constant [10 x i8] c"/internal\00", align 1, !dbg !3601
@.str.228 = private unnamed_addr constant [11 x i8] c"/bootstrap\00", align 1, !dbg !3603
@.str.229 = private unnamed_addr constant [6 x i8] c"%s/%d\00", align 1, !dbg !3605
@.str.230 = private unnamed_addr constant [2 x i8] c"n\00", align 1, !dbg !3607
@__PRETTY_FUNCTION__.rd_strdup = private unnamed_addr constant [30 x i8] c"char *rd_strdup(const char *)\00", align 1, !dbg !3609
@.str.231 = private unnamed_addr constant [13 x i8] c"rdk:broker%d\00", align 1, !dbg !3614
@rd_kafka_thread_cnt_curr = external global %struct.rd_atomic32_t, align 4
@.str.232 = private unnamed_addr constant [8 x i8] c"BRKMAIN\00", align 1, !dbg !3616
@.str.233 = private unnamed_addr constant [25 x i8] c"Enter main broker thread\00", align 1, !dbg !3618
@.str.234 = private unnamed_addr constant [10 x i8] c"RECONNECT\00", align 1, !dbg !3623
@.str.235 = private unnamed_addr constant [32 x i8] c"Delaying next reconnect by %dms\00", align 1, !dbg !3625
@.str.236 = private unnamed_addr constant [39 x i8] c"Connection setup timed out in state %s\00", align 1, !dbg !3627
@.str.237 = private unnamed_addr constant [33 x i8] c"rd_kafka_sasl_ready(rkb->rkb_rk)\00", align 1, !dbg !3629
@__PRETTY_FUNCTION__.rd_kafka_broker_thread_main = private unnamed_addr constant [40 x i8] c"int rd_kafka_broker_thread_main(void *)\00", align 1, !dbg !3631
@.str.238 = private unnamed_addr constant [10 x i8] c"TERMINATE\00", align 1, !dbg !3634
@.str.239 = private unnamed_addr constant [164 x i8] c"Handle is terminating in state %s: %d refcnts (%p), %d toppar(s), %d active toppar(s), %d outbufs, %d waitresps, %d retrybufs: failed %d request(s) in retry+outbuf\00", align 1, !dbg !3636
@.str.240 = private unnamed_addr constant [29 x i8] c"Broker handle is terminating\00", align 1, !dbg !3641
@.str.241 = private unnamed_addr constant [16 x i8] c"abs_timeout > 0\00", align 1, !dbg !3643
@__PRETTY_FUNCTION__.rd_kafka_broker_serve = private unnamed_addr constant [53 x i8] c"void rd_kafka_broker_serve(rd_kafka_broker_t *, int)\00", align 1, !dbg !3645
@__FUNCTION__.rd_kafka_broker_timeout_scan = private unnamed_addr constant [29 x i8] c"rd_kafka_broker_timeout_scan\00", align 1, !dbg !3650
@.str.242 = private unnamed_addr constant [10 x i8] c"in flight\00", align 1, !dbg !3653
@.str.243 = private unnamed_addr constant [15 x i8] c"in retry queue\00", align 1, !dbg !3655
@.str.244 = private unnamed_addr constant [16 x i8] c"in output queue\00", align 1, !dbg !3657
@.str.245 = private unnamed_addr constant [9 x i8] c"REQTMOUT\00", align 1, !dbg !3659
@.str.246 = private unnamed_addr constant [82 x i8] c"Timed out %i in-flight, %i retry-queued, %i out-queue, %i partially-sent requests\00", align 1, !dbg !3661
@.str.247 = private unnamed_addr constant [22 x i8] c" (average rtt %.3fms)\00", align 1, !dbg !3666
@.str.248 = private unnamed_addr constant [38 x i8] c"%i request(s) timed out: disconnect%s\00", align 1, !dbg !3668
@.str.249 = private unnamed_addr constant [8 x i8] c"TIMEOUT\00", align 1, !dbg !3670
@.str.250 = private unnamed_addr constant [82 x i8] c"%s [%d]: timed out %d+%d message(s) (MsgId %lu..%lu): message.timeout.ms exceeded\00", align 1, !dbg !3672
@__FUNCTION__.rd_kafka_broker_producer_serve = private unnamed_addr constant [31 x i8] c"rd_kafka_broker_producer_serve\00", align 1, !dbg !3674
@__const.rd_kafka_broker_produce_toppars.pid = private unnamed_addr constant %struct.rd_kafka_pid_s { i64 -1, i16 -1 }, align 8
@.str.251 = private unnamed_addr constant [35 x i8] c"%d message(s) timed out on %s [%d]\00", align 1, !dbg !3677
@.str.252 = private unnamed_addr constant [7 x i8] c"TOPPAR\00", align 1, !dbg !3679
@.str.253 = private unnamed_addr constant [95 x i8] c"%.*s [%d] PID has changed: must drain requests for all partitions before resuming reset of PID\00", align 1, !dbg !3681
@.str.254 = private unnamed_addr constant [95 x i8] c"%.*s [%d] waiting for %d in-flight request(s) to drain from queue before continuing to produce\00", align 1, !dbg !3686
@.str.255 = private unnamed_addr constant [52 x i8] c"%.*s [%d] all in-flight requests drained from queue\00", align 1, !dbg !3688
@.str.256 = private unnamed_addr constant [70 x i8] c"%.*s [%d] %d message(s) in xmit queue (%d added from partition queue)\00", align 1, !dbg !3690
@.str.257 = private unnamed_addr constant [49 x i8] c"%.*s [%d] %d message(s) queued but broker not up\00", align 1, !dbg !3693
@.str.258 = private unnamed_addr constant [12 x i8] c"ApiKey == 0\00", align 1, !dbg !3698
@__PRETTY_FUNCTION__.rd_kafka_broker_bufq_purge_by_toppar = private unnamed_addr constant [132 x i8] c"int rd_kafka_broker_bufq_purge_by_toppar(rd_kafka_broker_t *, rd_kafka_bufq_t *, int64_t, rd_kafka_toppar_t *, rd_kafka_resp_err_t)\00", align 1, !dbg !3700
@.str.259 = private unnamed_addr constant [41 x i8] c"Moved %d retry buffer(s) to output queue\00", align 1, !dbg !3705
@__FUNCTION__.rd_kafka_broker_consumer_serve = private unnamed_addr constant [31 x i8] c"rd_kafka_broker_consumer_serve\00", align 1, !dbg !3707
@.str.260 = private unnamed_addr constant [6 x i8] c"FETCH\00", align 1, !dbg !3709
@.str.261 = private unnamed_addr constant [24 x i8] c"Fetch backoff for %ldms\00", align 1, !dbg !3711
@.str.262 = private unnamed_addr constant [61 x i8] c"Connection max idle time exceeded (%dms since last activity)\00", align 1, !dbg !3713
@.str.263 = private unnamed_addr constant [30 x i8] c"broker in state %s connecting\00", align 1, !dbg !3715
@.str.264 = private unnamed_addr constant [46 x i8] c"broker has no address yet: postponing connect\00", align 1, !dbg !3718
@__FUNCTION__.rd_kafka_broker_connect = private unnamed_addr constant [24 x i8] c"rd_kafka_broker_connect\00", align 1, !dbg !3723
@.str.265 = private unnamed_addr constant [28 x i8] c"assert: !rkb->rkb_transport\00", align 1, !dbg !3726
@.str.266 = private unnamed_addr constant [34 x i8] c"Logical broker has no address yet\00", align 1, !dbg !3728
@.str.267 = private unnamed_addr constant [68 x i8] c": possibly held back by preceeding%s %sRequest with timeout in %dms\00", align 1, !dbg !3730
@.str.268 = private unnamed_addr constant [10 x i8] c" blocking\00", align 1, !dbg !3733
@.str.269 = private unnamed_addr constant [52 x i8] c"Timed out %sRequest %s (after %ldms, timeout #%d)%s\00", align 1, !dbg !3735
@__FUNCTION__.rd_kafka_broker_op_serve = private unnamed_addr constant [25 x i8] c"rd_kafka_broker_op_serve\00", align 1, !dbg !3737
@.str.270 = private unnamed_addr constant [31 x i8] c"Nodename changed from %s to %s\00", align 1, !dbg !3739
@.str.271 = private unnamed_addr constant [29 x i8] c"NodeId changed from %d to %d\00", align 1, !dbg !3741
@.str.272 = private unnamed_addr constant [27 x i8] c"Name changed from %s to %s\00", align 1, !dbg !3743
@.str.273 = private unnamed_addr constant [24 x i8] c"Broker hostname updated\00", align 1, !dbg !3745
@.str.274 = private unnamed_addr constant [7 x i8] c"TOPBRK\00", align 1, !dbg !3747
@.str.275 = private unnamed_addr constant [38 x i8] c"Topic %s [%d]: not joining broker: %s\00", align 1, !dbg !3749
@.str.276 = private unnamed_addr constant [24 x i8] c"instance is terminating\00", align 1, !dbg !3751
@.str.277 = private unnamed_addr constant [18 x i8] c"partition removed\00", align 1, !dbg !3753
@.str.278 = private unnamed_addr constant [51 x i8] c"Topic %s [%d]: not joining broker (next broker %s)\00", align 1, !dbg !3755
@.str.279 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1, !dbg !3757
@.str.280 = private unnamed_addr constant [62 x i8] c"Topic %s [%d]: joining broker (rktp %p, %d message(s) queued)\00", align 1, !dbg !3759
@.str.281 = private unnamed_addr constant [55 x i8] c"assert: !(rktp->rktp_flags & RD_KAFKA_TOPPAR_F_ON_RKB)\00", align 1, !dbg !3764
@.str.282 = private unnamed_addr constant [26 x i8] c"!rktp->rktp_msgq_wakeup_q\00", align 1, !dbg !3767
@__PRETTY_FUNCTION__.rd_kafka_broker_op_serve = private unnamed_addr constant [73 x i8] c"rd_bool_t rd_kafka_broker_op_serve(rd_kafka_broker_t *, rd_kafka_op_t *)\00", align 1, !dbg !3769
@.str.283 = private unnamed_addr constant [8 x i8] c"joining\00", align 1, !dbg !3772
@.str.284 = private unnamed_addr constant [71 x i8] c"wait for outstanding requests to finish before producing to new leader\00", align 1, !dbg !3774
@.str.285 = private unnamed_addr constant [70 x i8] c"Topic %s [%d]: ignoring PARTITION_LEAVE: not delegated to broker (%s)\00", align 1, !dbg !3779
@.str.286 = private unnamed_addr constant [5 x i8] c"none\00", align 1, !dbg !3781
@.str.287 = private unnamed_addr constant [78 x i8] c"Topic %s [%d]: leaving broker (%d messages in xmitq, next broker %s, rktp %p)\00", align 1, !dbg !3783
@.str.288 = private unnamed_addr constant [8 x i8] c"leaving\00", align 1, !dbg !3788
@.str.289 = private unnamed_addr constant [26 x i8] c"rktp->rktp_flags & 0x1000\00", align 1, !dbg !3790
@.str.290 = private unnamed_addr constant [72 x i8] c"Topic %s [%d]: no next broker, failing %d message(s) in partition queue\00", align 1, !dbg !3792
@.str.291 = private unnamed_addr constant [55 x i8] c"assert: rd_kafka_msgq_len( &rktp->rktp_xmit_msgq) == 0\00", align 1, !dbg !3794
@.str.292 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1, !dbg !3796
@.str.293 = private unnamed_addr constant [121 x i8] c"Received TERMINATE op in state %s: %d refcnts, %d toppar(s), %d active toppar(s), %d outbufs, %d waitresps, %d retrybufs\00", align 1, !dbg !3798
@.str.294 = private unnamed_addr constant [22 x i8] c"Client is terminating\00", align 1, !dbg !3803
@.str.295 = private unnamed_addr constant [20 x i8] c"Received CONNECT op\00", align 1, !dbg !3805
@.str.296 = private unnamed_addr constant [42 x i8] c"Closing connection due to nodename change\00", align 1, !dbg !3807
@.str.297 = private unnamed_addr constant [19 x i8] c"Received REAUTH op\00", align 1, !dbg !3809
@.str.298 = private unnamed_addr constant [30 x i8] c"assert: !*\22unhandled op type\22\00", align 1, !dbg !3811
@.str.299 = private unnamed_addr constant [32 x i8] c"broker node information updated\00", align 1, !dbg !3813
@.str.300 = private unnamed_addr constant [7 x i8] c"LEADER\00", align 1, !dbg !3815
@.str.301 = private unnamed_addr constant [33 x i8] c"Mapped %d partition(s) to broker\00", align 1, !dbg !3817
@.str.302 = private unnamed_addr constant [6 x i8] c"PURGE\00", align 1, !dbg !3819
@.str.303 = private unnamed_addr constant [29 x i8] c"Purging queues with flags %s\00", align 1, !dbg !3821
@.str.304 = private unnamed_addr constant [53 x i8] c"Purged %d partially sent request: forcing disconnect\00", align 1, !dbg !3823
@.str.305 = private unnamed_addr constant [7 x i8] c"PURGEQ\00", align 1, !dbg !3826
@.str.306 = private unnamed_addr constant [79 x i8] c"Purged %i in-flight, %i retry-queued, %i out-queue, %i partially-sent requests\00", align 1, !dbg !3828
@.str.307 = private unnamed_addr constant [42 x i8] c"Purged %i message(s) from %d partition(s)\00", align 1, !dbg !3833
@.str.308 = private unnamed_addr constant [4 x i8] c"://\00", align 1, !dbg !3835
@.str.309 = private unnamed_addr constant [50 x i8] c"Broker name \22%s\22 parse error: empty protocol name\00", align 1, !dbg !3837
@.str.310 = private unnamed_addr constant [56 x i8] c"Broker name \22%s\22 parse error: unsupported protocol \22%s\22\00", align 1, !dbg !3839
@.str.311 = private unnamed_addr constant [90 x i8] c"Broker name \22%s\22 parse error: protocol \22%s\22 does not match security.protocol setting \22%s\22\00", align 1, !dbg !3841
@.str.312 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1, !dbg !3846
@__FUNCTION__.rd_kafka_q_destroy0 = private unnamed_addr constant [20 x i8] c"rd_kafka_q_destroy0\00", align 1, !dbg !3848
@.str.313 = private unnamed_addr constant [28 x i8] c"assert: rkq->rkq_refcnt > 0\00", align 1, !dbg !3850
@.str.314 = private unnamed_addr constant [83 x i8] c"\1B[31mRDUT: FAIL: %s:%d: %s: assert failed: (7) <= (backoff) && (15) >= (backoff): \00", align 1, !dbg !3852
@__FUNCTION__.rd_ut_reconnect_backoff = private unnamed_addr constant [24 x i8] c"rd_ut_reconnect_backoff\00", align 1, !dbg !3857
@.str.315 = private unnamed_addr constant [25 x i8] c"%d out of range %d .. %d\00", align 1, !dbg !3859
@.str.316 = private unnamed_addr constant [6 x i8] c"\1B[0m\0A\00", align 1, !dbg !3861
@rd_unittest_assert_on_failure = external global i8, align 1
@.str.317 = private unnamed_addr constant [38 x i8] c"(7) <= (backoff) && (15) >= (backoff)\00", align 1, !dbg !3863
@__PRETTY_FUNCTION__.rd_ut_reconnect_backoff = private unnamed_addr constant [34 x i8] c"int rd_ut_reconnect_backoff(void)\00", align 1, !dbg !3865
@.str.318 = private unnamed_addr constant [84 x i8] c"\1B[31mRDUT: FAIL: %s:%d: %s: assert failed: (15) <= (backoff) && (30) >= (backoff): \00", align 1, !dbg !3867
@.str.319 = private unnamed_addr constant [39 x i8] c"(15) <= (backoff) && (30) >= (backoff)\00", align 1, !dbg !3872
@.str.320 = private unnamed_addr constant [84 x i8] c"\1B[31mRDUT: FAIL: %s:%d: %s: assert failed: (30) <= (backoff) && (60) >= (backoff): \00", align 1, !dbg !3874
@.str.321 = private unnamed_addr constant [39 x i8] c"(30) <= (backoff) && (60) >= (backoff)\00", align 1, !dbg !3876
@.str.322 = private unnamed_addr constant [111 x i8] c"\1B[31mRDUT: FAIL: %s:%d: %s: assert failed: (60) <= (backoff) && (conf.reconnect_backoff_max_ms) >= (backoff): \00", align 1, !dbg !3878
@.str.323 = private unnamed_addr constant [66 x i8] c"(60) <= (backoff) && (conf.reconnect_backoff_max_ms) >= (backoff)\00", align 1, !dbg !3880
@.str.324 = private unnamed_addr constant [111 x i8] c"\1B[31mRDUT: FAIL: %s:%d: %s: assert failed: (67) <= (backoff) && (conf.reconnect_backoff_max_ms) >= (backoff): \00", align 1, !dbg !3885
@.str.325 = private unnamed_addr constant [66 x i8] c"(67) <= (backoff) && (conf.reconnect_backoff_max_ms) >= (backoff)\00", align 1, !dbg !3887
@.str.326 = private unnamed_addr constant [32 x i8] c"\1B[32mRDUT: PASS: %s:%d: %s\1B[0m\0A\00", align 1, !dbg !3889

; Function Attrs: nounwind uwtable
define signext i16 @rd_kafka_broker_ApiVersion_supported(ptr noundef %rkb, i16 noundef signext %ApiKey, i16 noundef signext %minver, i16 noundef signext %maxver, ptr noundef %featuresp) #0 !dbg !3898 {
entry:
  %retval = alloca i16, align 2
  %rkb.addr = alloca ptr, align 8
  %ApiKey.addr = alloca i16, align 2
  %minver.addr = alloca i16, align 2
  %maxver.addr = alloca i16, align 2
  %featuresp.addr = alloca ptr, align 8
  %skel = alloca %struct.rd_kafka_ApiVersion, align 2
  %ret = alloca %struct.rd_kafka_ApiVersion, align 2
  %retp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !3902, metadata !DIExpression()), !dbg !3914
  store i16 %ApiKey, ptr %ApiKey.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %ApiKey.addr, metadata !3903, metadata !DIExpression()), !dbg !3917
  store i16 %minver, ptr %minver.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %minver.addr, metadata !3904, metadata !DIExpression()), !dbg !3918
  store i16 %maxver, ptr %maxver.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %maxver.addr, metadata !3905, metadata !DIExpression()), !dbg !3919
  store ptr %featuresp, ptr %featuresp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %featuresp.addr, metadata !3906, metadata !DIExpression()), !dbg !3920
  call void @llvm.lifetime.start.p0(i64 6, ptr %skel) #16, !dbg !3921
  tail call void @llvm.dbg.declare(metadata ptr %skel, metadata !3907, metadata !DIExpression()), !dbg !3922
  %ApiKey1 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %skel, i32 0, i32 0, !dbg !3923
  %0 = load i16, ptr %ApiKey.addr, align 2, !dbg !3924, !tbaa !3915
  store i16 %0, ptr %ApiKey1, align 2, !dbg !3923, !tbaa !3925
  %MinVer = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %skel, i32 0, i32 1, !dbg !3923
  store i16 0, ptr %MinVer, align 2, !dbg !3923, !tbaa !3927
  %MaxVer = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %skel, i32 0, i32 2, !dbg !3923
  store i16 0, ptr %MaxVer, align 2, !dbg !3923, !tbaa !3928
  call void @llvm.lifetime.start.p0(i64 6, ptr %ret) #16, !dbg !3929
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !3908, metadata !DIExpression()), !dbg !3930
  call void @llvm.memset.p0.i64(ptr align 2 %ret, i8 0, i64 6, i1 false), !dbg !3930
  call void @llvm.lifetime.start.p0(i64 8, ptr %retp) #16, !dbg !3929
  tail call void @llvm.dbg.declare(metadata ptr %retp, metadata !3909, metadata !DIExpression()), !dbg !3931
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !3932, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 9, !dbg !3932
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !3932
  %2 = load ptr, ptr %featuresp.addr, align 8, !dbg !3933, !tbaa !3910
  %tobool = icmp ne ptr %2, null, !dbg !3933
  br i1 %tobool, label %if.then, label %if.end, !dbg !3935

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !3936, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 23, !dbg !3937
  %4 = load i32, ptr %rkb_features, align 4, !dbg !3937, !tbaa !3938
  %5 = load ptr, ptr %featuresp.addr, align 8, !dbg !3957, !tbaa !3910
  store i32 %4, ptr %5, align 4, !dbg !3958, !tbaa !3959
  br label %if.end, !dbg !3960

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !3961, !tbaa !3910
  %rkb_features2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 23, !dbg !3963
  %7 = load i32, ptr %rkb_features2, align 4, !dbg !3963, !tbaa !3938
  %and = and i32 %7, 16384, !dbg !3964
  %tobool3 = icmp ne i32 %and, 0, !dbg !3964
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !3965

if.then4:                                         ; preds = %if.end
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !3966, !tbaa !3910
  %rkb_lock5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 9, !dbg !3966
  %call6 = call i32 @mtx_unlock(ptr noundef %rkb_lock5), !dbg !3966
  %9 = load i16, ptr %maxver.addr, align 2, !dbg !3968, !tbaa !3915
  store i16 %9, ptr %retval, align 2, !dbg !3969
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3969

if.end7:                                          ; preds = %if.end
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !3970, !tbaa !3910
  %rkb_ApiVersions = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 24, !dbg !3971
  %11 = load ptr, ptr %rkb_ApiVersions, align 8, !dbg !3971, !tbaa !3972
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !3973, !tbaa !3910
  %rkb_ApiVersions_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 25, !dbg !3974
  %13 = load i64, ptr %rkb_ApiVersions_cnt, align 8, !dbg !3974, !tbaa !3975
  %call8 = call ptr @bsearch(ptr noundef %skel, ptr noundef %11, i64 noundef %13, i64 noundef 6, ptr noundef @rd_kafka_ApiVersion_key_cmp), !dbg !3976
  store ptr %call8, ptr %retp, align 8, !dbg !3977, !tbaa !3910
  %14 = load ptr, ptr %retp, align 8, !dbg !3978, !tbaa !3910
  %tobool9 = icmp ne ptr %14, null, !dbg !3978
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !3980

if.then10:                                        ; preds = %if.end7
  %15 = load ptr, ptr %retp, align 8, !dbg !3981, !tbaa !3910
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %ret, ptr align 2 %15, i64 6, i1 false), !dbg !3982, !tbaa.struct !3983
  br label %if.end11, !dbg !3984

if.end11:                                         ; preds = %if.then10, %if.end7
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !3985, !tbaa !3910
  %rkb_lock12 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 9, !dbg !3985
  %call13 = call i32 @mtx_unlock(ptr noundef %rkb_lock12), !dbg !3985
  %17 = load ptr, ptr %retp, align 8, !dbg !3986, !tbaa !3910
  %tobool14 = icmp ne ptr %17, null, !dbg !3986
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !3988

if.then15:                                        ; preds = %if.end11
  store i16 -1, ptr %retval, align 2, !dbg !3989
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3989

if.end16:                                         ; preds = %if.end11
  %MaxVer17 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %ret, i32 0, i32 2, !dbg !3990
  %18 = load i16, ptr %MaxVer17, align 2, !dbg !3990, !tbaa !3928
  %conv = sext i16 %18 to i32, !dbg !3992
  %19 = load i16, ptr %maxver.addr, align 2, !dbg !3993, !tbaa !3915
  %conv18 = sext i16 %19 to i32, !dbg !3993
  %cmp = icmp slt i32 %conv, %conv18, !dbg !3994
  br i1 %cmp, label %if.then20, label %if.else28, !dbg !3995

if.then20:                                        ; preds = %if.end16
  %MaxVer21 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %ret, i32 0, i32 2, !dbg !3996
  %20 = load i16, ptr %MaxVer21, align 2, !dbg !3996, !tbaa !3928
  %conv22 = sext i16 %20 to i32, !dbg !3999
  %21 = load i16, ptr %minver.addr, align 2, !dbg !4000, !tbaa !3915
  %conv23 = sext i16 %21 to i32, !dbg !4000
  %cmp24 = icmp slt i32 %conv22, %conv23, !dbg !4001
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !4002

if.then26:                                        ; preds = %if.then20
  store i16 -1, ptr %retval, align 2, !dbg !4003
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4003

if.else:                                          ; preds = %if.then20
  %MaxVer27 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %ret, i32 0, i32 2, !dbg !4004
  %22 = load i16, ptr %MaxVer27, align 2, !dbg !4004, !tbaa !3928
  store i16 %22, ptr %retval, align 2, !dbg !4005
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4005

if.else28:                                        ; preds = %if.end16
  %MinVer29 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %ret, i32 0, i32 1, !dbg !4006
  %23 = load i16, ptr %MinVer29, align 2, !dbg !4006, !tbaa !3927
  %conv30 = sext i16 %23 to i32, !dbg !4008
  %24 = load i16, ptr %maxver.addr, align 2, !dbg !4009, !tbaa !3915
  %conv31 = sext i16 %24 to i32, !dbg !4009
  %cmp32 = icmp sgt i32 %conv30, %conv31, !dbg !4010
  br i1 %cmp32, label %if.then34, label %if.else35, !dbg !4011

if.then34:                                        ; preds = %if.else28
  store i16 -1, ptr %retval, align 2, !dbg !4012
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4012

if.else35:                                        ; preds = %if.else28
  %25 = load i16, ptr %maxver.addr, align 2, !dbg !4013, !tbaa !3915
  store i16 %25, ptr %retval, align 2, !dbg !4014
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4014

cleanup:                                          ; preds = %if.else35, %if.then34, %if.else, %if.then26, %if.then15, %if.then4
  call void @llvm.lifetime.end.p0(i64 8, ptr %retp) #16, !dbg !4015
  call void @llvm.lifetime.end.p0(i64 6, ptr %ret) #16, !dbg !4015
  call void @llvm.lifetime.end.p0(i64 6, ptr %skel) #16, !dbg !4015
  %26 = load i16, ptr %retval, align 2, !dbg !4015
  ret i16 %26, !dbg !4015
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

declare !dbg !4016 i32 @mtx_lock(ptr noundef) #3

declare !dbg !4019 i32 @mtx_unlock(ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define available_externally ptr @bsearch(ptr noundef nonnull %__key, ptr noundef nonnull %__base, i64 noundef %__nmemb, i64 noundef %__size, ptr noundef nonnull %__compar) #4 !dbg !4020 {
entry:
  %retval = alloca ptr, align 8
  %__key.addr = alloca ptr, align 8
  %__base.addr = alloca ptr, align 8
  %__nmemb.addr = alloca i64, align 8
  %__size.addr = alloca i64, align 8
  %__compar.addr = alloca ptr, align 8
  %__l = alloca i64, align 8
  %__u = alloca i64, align 8
  %__idx = alloca i64, align 8
  %__p = alloca ptr, align 8
  %__comparison = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__key, ptr %__key.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %__key.addr, metadata !4027, metadata !DIExpression()), !dbg !4037
  store ptr %__base, ptr %__base.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %__base.addr, metadata !4028, metadata !DIExpression()), !dbg !4038
  store i64 %__nmemb, ptr %__nmemb.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %__nmemb.addr, metadata !4029, metadata !DIExpression()), !dbg !4040
  store i64 %__size, ptr %__size.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %__size.addr, metadata !4030, metadata !DIExpression()), !dbg !4041
  store ptr %__compar, ptr %__compar.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %__compar.addr, metadata !4031, metadata !DIExpression()), !dbg !4042
  call void @llvm.lifetime.start.p0(i64 8, ptr %__l) #16, !dbg !4043
  tail call void @llvm.dbg.declare(metadata ptr %__l, metadata !4032, metadata !DIExpression()), !dbg !4044
  call void @llvm.lifetime.start.p0(i64 8, ptr %__u) #16, !dbg !4043
  tail call void @llvm.dbg.declare(metadata ptr %__u, metadata !4033, metadata !DIExpression()), !dbg !4045
  call void @llvm.lifetime.start.p0(i64 8, ptr %__idx) #16, !dbg !4043
  tail call void @llvm.dbg.declare(metadata ptr %__idx, metadata !4034, metadata !DIExpression()), !dbg !4046
  call void @llvm.lifetime.start.p0(i64 8, ptr %__p) #16, !dbg !4047
  tail call void @llvm.dbg.declare(metadata ptr %__p, metadata !4035, metadata !DIExpression()), !dbg !4048
  call void @llvm.lifetime.start.p0(i64 4, ptr %__comparison) #16, !dbg !4049
  tail call void @llvm.dbg.declare(metadata ptr %__comparison, metadata !4036, metadata !DIExpression()), !dbg !4050
  store i64 0, ptr %__l, align 8, !dbg !4051, !tbaa !4039
  %0 = load i64, ptr %__nmemb.addr, align 8, !dbg !4052, !tbaa !4039
  store i64 %0, ptr %__u, align 8, !dbg !4053, !tbaa !4039
  br label %while.cond, !dbg !4054

while.cond:                                       ; preds = %if.end6, %entry
  %1 = load i64, ptr %__l, align 8, !dbg !4055, !tbaa !4039
  %2 = load i64, ptr %__u, align 8, !dbg !4056, !tbaa !4039
  %cmp = icmp ult i64 %1, %2, !dbg !4057
  br i1 %cmp, label %while.body, label %while.end, !dbg !4054

while.body:                                       ; preds = %while.cond
  %3 = load i64, ptr %__l, align 8, !dbg !4058, !tbaa !4039
  %4 = load i64, ptr %__u, align 8, !dbg !4060, !tbaa !4039
  %add = add i64 %3, %4, !dbg !4061
  %div = udiv i64 %add, 2, !dbg !4062
  store i64 %div, ptr %__idx, align 8, !dbg !4063, !tbaa !4039
  %5 = load ptr, ptr %__base.addr, align 8, !dbg !4064, !tbaa !3910
  %6 = load i64, ptr %__idx, align 8, !dbg !4065, !tbaa !4039
  %7 = load i64, ptr %__size.addr, align 8, !dbg !4066, !tbaa !4039
  %mul = mul i64 %6, %7, !dbg !4067
  %add.ptr = getelementptr inbounds i8, ptr %5, i64 %mul, !dbg !4068
  store ptr %add.ptr, ptr %__p, align 8, !dbg !4069, !tbaa !3910
  %8 = load ptr, ptr %__compar.addr, align 8, !dbg !4070, !tbaa !3910
  %9 = load ptr, ptr %__key.addr, align 8, !dbg !4071, !tbaa !3910
  %10 = load ptr, ptr %__p, align 8, !dbg !4072, !tbaa !3910
  %call = call i32 %8(ptr noundef %9, ptr noundef %10), !dbg !4073
  store i32 %call, ptr %__comparison, align 4, !dbg !4074, !tbaa !3959
  %11 = load i32, ptr %__comparison, align 4, !dbg !4075, !tbaa !3959
  %cmp1 = icmp slt i32 %11, 0, !dbg !4077
  br i1 %cmp1, label %if.then, label %if.else, !dbg !4078

if.then:                                          ; preds = %while.body
  %12 = load i64, ptr %__idx, align 8, !dbg !4079, !tbaa !4039
  store i64 %12, ptr %__u, align 8, !dbg !4080, !tbaa !4039
  br label %if.end6, !dbg !4081

if.else:                                          ; preds = %while.body
  %13 = load i32, ptr %__comparison, align 4, !dbg !4082, !tbaa !3959
  %cmp2 = icmp sgt i32 %13, 0, !dbg !4084
  br i1 %cmp2, label %if.then3, label %if.else5, !dbg !4085

if.then3:                                         ; preds = %if.else
  %14 = load i64, ptr %__idx, align 8, !dbg !4086, !tbaa !4039
  %add4 = add i64 %14, 1, !dbg !4087
  store i64 %add4, ptr %__l, align 8, !dbg !4088, !tbaa !4039
  br label %if.end, !dbg !4089

if.else5:                                         ; preds = %if.else
  %15 = load ptr, ptr %__p, align 8, !dbg !4090, !tbaa !3910
  store ptr %15, ptr %retval, align 8, !dbg !4092
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4092

if.end:                                           ; preds = %if.then3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  br label %while.cond, !dbg !4054, !llvm.loop !4093

while.end:                                        ; preds = %while.cond
  store ptr null, ptr %retval, align 8, !dbg !4096
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4096

cleanup:                                          ; preds = %while.end, %if.else5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__comparison) #16, !dbg !4097
  call void @llvm.lifetime.end.p0(i64 8, ptr %__p) #16, !dbg !4097
  call void @llvm.lifetime.end.p0(i64 8, ptr %__idx) #16, !dbg !4097
  call void @llvm.lifetime.end.p0(i64 8, ptr %__u) #16, !dbg !4097
  call void @llvm.lifetime.end.p0(i64 8, ptr %__l) #16, !dbg !4097
  %16 = load ptr, ptr %retval, align 8, !dbg !4097
  ret ptr %16, !dbg !4097
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_ApiVersion_key_cmp(ptr noundef %_a, ptr noundef %_b) #0 !dbg !4098 {
entry:
  %_a.addr = alloca ptr, align 8
  %_b.addr = alloca ptr, align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  store ptr %_a, ptr %_a.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %_a.addr, metadata !4100, metadata !DIExpression()), !dbg !4104
  store ptr %_b, ptr %_b.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %_b.addr, metadata !4101, metadata !DIExpression()), !dbg !4105
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #16, !dbg !4106
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !4102, metadata !DIExpression()), !dbg !4107
  %0 = load ptr, ptr %_a.addr, align 8, !dbg !4108, !tbaa !3910
  store ptr %0, ptr %a, align 8, !dbg !4107, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #16, !dbg !4109
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !4103, metadata !DIExpression()), !dbg !4110
  %1 = load ptr, ptr %_b.addr, align 8, !dbg !4111, !tbaa !3910
  store ptr %1, ptr %b, align 8, !dbg !4110, !tbaa !3910
  %2 = load ptr, ptr %a, align 8, !dbg !4112, !tbaa !3910
  %ApiKey = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %2, i32 0, i32 0, !dbg !4112
  %3 = load i16, ptr %ApiKey, align 2, !dbg !4112, !tbaa !3925
  %conv = sext i16 %3 to i32, !dbg !4112
  %4 = load ptr, ptr %b, align 8, !dbg !4112, !tbaa !3910
  %ApiKey1 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %4, i32 0, i32 0, !dbg !4112
  %5 = load i16, ptr %ApiKey1, align 2, !dbg !4112, !tbaa !3925
  %conv2 = sext i16 %5 to i32, !dbg !4112
  %cmp = icmp slt i32 %conv, %conv2, !dbg !4112
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4112

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4112

cond.false:                                       ; preds = %entry
  %6 = load ptr, ptr %a, align 8, !dbg !4112, !tbaa !3910
  %ApiKey4 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %6, i32 0, i32 0, !dbg !4112
  %7 = load i16, ptr %ApiKey4, align 2, !dbg !4112, !tbaa !3925
  %conv5 = sext i16 %7 to i32, !dbg !4112
  %8 = load ptr, ptr %b, align 8, !dbg !4112, !tbaa !3910
  %ApiKey6 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %8, i32 0, i32 0, !dbg !4112
  %9 = load i16, ptr %ApiKey6, align 2, !dbg !4112, !tbaa !3925
  %conv7 = sext i16 %9 to i32, !dbg !4112
  %cmp8 = icmp sgt i32 %conv5, %conv7, !dbg !4112
  %conv9 = zext i1 %cmp8 to i32, !dbg !4112
  br label %cond.end, !dbg !4112

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv9, %cond.false ], !dbg !4112
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #16, !dbg !4113
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #16, !dbg !4113
  ret i32 %cond, !dbg !4114
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_set_state(ptr noundef %rkb, i32 noundef %state) #0 !dbg !4115 {
entry:
  %rkb.addr = alloca ptr, align 8
  %state.addr = alloca i32, align 4
  %trigger_monitors = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !4119, metadata !DIExpression()), !dbg !4122
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !4120, metadata !DIExpression()), !dbg !4123
  call void @llvm.lifetime.start.p0(i64 1, ptr %trigger_monitors) #16, !dbg !4124
  tail call void @llvm.dbg.declare(metadata ptr %trigger_monitors, metadata !4121, metadata !DIExpression()), !dbg !4125
  store i8 0, ptr %trigger_monitors, align 1, !dbg !4125, !tbaa !4126
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !4127, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 19, !dbg !4129
  %1 = load i32, ptr %rkb_state, align 4, !dbg !4129, !tbaa !4130
  %2 = load i32, ptr %state.addr, align 4, !dbg !4131, !tbaa !3959
  %cmp = icmp eq i32 %1, %2, !dbg !4132
  br i1 %cmp, label %if.then, label %if.end, !dbg !4133

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4134

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4135

do.body:                                          ; preds = %if.end
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !4136, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 32, !dbg !4136
  %4 = load ptr, ptr %rkb_rk, align 8, !dbg !4136, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 18, !dbg !4136
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !4136
  %5 = load i32, ptr %debug, align 8, !dbg !4136, !tbaa !4140
  %and = and i32 %5, 2, !dbg !4136
  %conv = sext i32 %and to i64, !dbg !4136
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4136
  %tobool = icmp ne i64 %expval, 0, !dbg !4136
  br i1 %tobool, label %if.then1, label %if.end8, !dbg !4170

if.then1:                                         ; preds = %do.body
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !4136, !tbaa !3910
  %rkb_rk2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 32, !dbg !4136
  %7 = load ptr, ptr %rkb_rk2, align 8, !dbg !4136, !tbaa !4139
  %rk_conf3 = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 18, !dbg !4136
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !4136, !tbaa !3910
  %rkb_rk4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 32, !dbg !4136
  %9 = load ptr, ptr %rkb_rk4, align 8, !dbg !4136, !tbaa !4139
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !4136, !tbaa !3910
  %rkb_name = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 42, !dbg !4136
  %arraydecay = getelementptr inbounds [256 x i8], ptr %rkb_name, i64 0, i64 0, !dbg !4136
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !4136, !tbaa !3910
  %rkb_state5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 19, !dbg !4136
  %12 = load i32, ptr %rkb_state5, align 4, !dbg !4136, !tbaa !4130
  %idxprom = zext i32 %12 to i64, !dbg !4136
  %arrayidx = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom, !dbg !4136
  %13 = load ptr, ptr %arrayidx, align 8, !dbg !4136, !tbaa !3910
  %14 = load i32, ptr %state.addr, align 4, !dbg !4136, !tbaa !3959
  %idxprom6 = sext i32 %14 to i64, !dbg !4136
  %arrayidx7 = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom6, !dbg !4136
  %15 = load ptr, ptr %arrayidx7, align 8, !dbg !4136, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf3, ptr noundef %9, ptr noundef null, i32 noundef 7, i32 noundef 2, ptr noundef @.str.16, ptr noundef @.str.17, ptr noundef %arraydecay, ptr noundef %13, ptr noundef %15), !dbg !4136
  br label %if.end8, !dbg !4136

if.end8:                                          ; preds = %if.then1, %do.body
  br label %do.cond, !dbg !4170

do.cond:                                          ; preds = %if.end8
  br label %do.end, !dbg !4170

do.end:                                           ; preds = %do.cond
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !4171, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 27, !dbg !4173
  %17 = load i32, ptr %rkb_source, align 8, !dbg !4173, !tbaa !4174
  %cmp9 = icmp eq i32 %17, 2, !dbg !4175
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !4176

if.then11:                                        ; preds = %do.end
  br label %if.end84, !dbg !4177

if.else:                                          ; preds = %do.end
  %18 = load i32, ptr %state.addr, align 4, !dbg !4179, !tbaa !3959
  %cmp12 = icmp eq i32 %18, 1, !dbg !4181
  br i1 %cmp12, label %land.lhs.true, label %if.else69, !dbg !4182

land.lhs.true:                                    ; preds = %if.else
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !4183, !tbaa !3910
  %rkb_down_reported = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 59, !dbg !4184
  %20 = load i32, ptr %rkb_down_reported, align 4, !dbg !4184, !tbaa !4185
  %tobool14 = icmp ne i32 %20, 0, !dbg !4183
  br i1 %tobool14, label %if.else69, label %if.then15, !dbg !4186

if.then15:                                        ; preds = %land.lhs.true
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !4187, !tbaa !3910
  %rkb_rk16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 32, !dbg !4190
  %22 = load ptr, ptr %rkb_rk16, align 8, !dbg !4190, !tbaa !4139
  %rk_broker_down_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %22, i32 0, i32 7, !dbg !4191
  %call = call i32 @rd_atomic32_add(ptr noundef %rk_broker_down_cnt, i32 noundef 1), !dbg !4192
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !4193, !tbaa !3910
  %rkb_rk17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 32, !dbg !4194
  %24 = load ptr, ptr %rkb_rk17, align 8, !dbg !4194, !tbaa !4139
  %rk_broker_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %24, i32 0, i32 4, !dbg !4195
  %call18 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_cnt), !dbg !4196
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !4197, !tbaa !3910
  %rkb_rk19 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 32, !dbg !4198
  %26 = load ptr, ptr %rkb_rk19, align 8, !dbg !4198, !tbaa !4139
  %rk_broker_addrless_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %26, i32 0, i32 8, !dbg !4199
  %call20 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_addrless_cnt), !dbg !4200
  %sub = sub nsw i32 %call18, %call20, !dbg !4201
  %cmp21 = icmp eq i32 %call, %sub, !dbg !4202
  br i1 %cmp21, label %land.lhs.true23, label %if.end67, !dbg !4203

land.lhs.true23:                                  ; preds = %if.then15
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !4204, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 43, !dbg !4204
  %arraydecay24 = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !4204
  %28 = load i8, ptr %arraydecay24, align 8, !dbg !4204, !tbaa !4126
  %conv25 = sext i8 %28 to i32, !dbg !4204
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !4204
  br i1 %cmp26, label %if.end67, label %land.lhs.true28, !dbg !4205

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !4206, !tbaa !3910
  %rkb_rk29 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 32, !dbg !4206
  %30 = load ptr, ptr %rkb_rk29, align 8, !dbg !4206, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %30, i32 0, i32 23, !dbg !4206
  %call30 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !4206
  %and31 = and i32 %call30, 1, !dbg !4206
  %tobool32 = icmp ne i32 %and31, 0, !dbg !4206
  br i1 %tobool32, label %if.end67, label %if.then33, !dbg !4207

if.then33:                                        ; preds = %land.lhs.true28
  br label %do.body34, !dbg !4208

do.body34:                                        ; preds = %if.then33
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !4209, !tbaa !3910
  %rkb_rk35 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 32, !dbg !4209
  %32 = load ptr, ptr %rkb_rk35, align 8, !dbg !4209, !tbaa !4139
  %rk_conf36 = getelementptr inbounds %struct.rd_kafka_s, ptr %32, i32 0, i32 18, !dbg !4209
  %enabled_events = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf36, i32 0, i32 1, !dbg !4209
  %33 = load i32, ptr %enabled_events, align 8, !dbg !4209, !tbaa !4212
  %and37 = and i32 %33, 8, !dbg !4209
  %tobool38 = icmp ne i32 %and37, 0, !dbg !4209
  br i1 %tobool38, label %if.end53, label %if.then39, !dbg !4213

if.then39:                                        ; preds = %do.body34
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !4214, !tbaa !3910
  %rkb_rk40 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 32, !dbg !4214
  %35 = load ptr, ptr %rkb_rk40, align 8, !dbg !4214, !tbaa !4139
  %rk_conf41 = getelementptr inbounds %struct.rd_kafka_s, ptr %35, i32 0, i32 18, !dbg !4214
  %36 = load ptr, ptr %rkb.addr, align 8, !dbg !4214, !tbaa !3910
  %rkb_rk42 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 32, !dbg !4214
  %37 = load ptr, ptr %rkb_rk42, align 8, !dbg !4214, !tbaa !4139
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !4214, !tbaa !3910
  %rkb_rk43 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 32, !dbg !4214
  %39 = load ptr, ptr %rkb_rk43, align 8, !dbg !4214, !tbaa !4139
  %rk_broker_down_cnt44 = getelementptr inbounds %struct.rd_kafka_s, ptr %39, i32 0, i32 7, !dbg !4214
  %call45 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_down_cnt44), !dbg !4214
  %40 = load ptr, ptr %rkb.addr, align 8, !dbg !4214, !tbaa !3910
  %rkb_rk46 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %40, i32 0, i32 32, !dbg !4214
  %41 = load ptr, ptr %rkb_rk46, align 8, !dbg !4214, !tbaa !4139
  %rk_broker_cnt47 = getelementptr inbounds %struct.rd_kafka_s, ptr %41, i32 0, i32 4, !dbg !4214
  %call48 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_cnt47), !dbg !4214
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !4214, !tbaa !3910
  %rkb_rk49 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 32, !dbg !4214
  %43 = load ptr, ptr %rkb_rk49, align 8, !dbg !4214, !tbaa !4139
  %rk_broker_addrless_cnt50 = getelementptr inbounds %struct.rd_kafka_s, ptr %43, i32 0, i32 8, !dbg !4214
  %call51 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_addrless_cnt50), !dbg !4214
  %sub52 = sub nsw i32 %call48, %call51, !dbg !4214
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf41, ptr noundef %37, ptr noundef null, i32 noundef 3, i32 noundef 0, ptr noundef @.str.18, ptr noundef @.str.19, i32 noundef %call45, i32 noundef %sub52), !dbg !4214
  br label %do.end66, !dbg !4214

if.end53:                                         ; preds = %do.body34
  %44 = load ptr, ptr %rkb.addr, align 8, !dbg !4213, !tbaa !3910
  %rkb_rk54 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %44, i32 0, i32 32, !dbg !4213
  %45 = load ptr, ptr %rkb_rk54, align 8, !dbg !4213, !tbaa !4139
  %rk_rep = getelementptr inbounds %struct.rd_kafka_s, ptr %45, i32 0, i32 0, !dbg !4213
  %46 = load ptr, ptr %rk_rep, align 8, !dbg !4213, !tbaa !4216
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !4213, !tbaa !3910
  %rkb_rk55 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 32, !dbg !4213
  %48 = load ptr, ptr %rkb_rk55, align 8, !dbg !4213, !tbaa !4139
  %rk_broker_down_cnt56 = getelementptr inbounds %struct.rd_kafka_s, ptr %48, i32 0, i32 7, !dbg !4213
  %call57 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_down_cnt56), !dbg !4213
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !4213, !tbaa !3910
  %rkb_rk58 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 32, !dbg !4213
  %50 = load ptr, ptr %rkb_rk58, align 8, !dbg !4213, !tbaa !4139
  %rk_broker_cnt59 = getelementptr inbounds %struct.rd_kafka_s, ptr %50, i32 0, i32 4, !dbg !4213
  %call60 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_cnt59), !dbg !4213
  %51 = load ptr, ptr %rkb.addr, align 8, !dbg !4213, !tbaa !3910
  %rkb_rk61 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %51, i32 0, i32 32, !dbg !4213
  %52 = load ptr, ptr %rkb_rk61, align 8, !dbg !4213, !tbaa !4139
  %rk_broker_addrless_cnt62 = getelementptr inbounds %struct.rd_kafka_s, ptr %52, i32 0, i32 8, !dbg !4213
  %call63 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_addrless_cnt62), !dbg !4213
  %sub64 = sub nsw i32 %call60, %call63, !dbg !4213
  call void (ptr, i32, ptr, ...) @rd_kafka_q_op_err(ptr noundef %46, i32 noundef -187, ptr noundef @.str.19, i32 noundef %call57, i32 noundef %sub64), !dbg !4213
  br label %do.cond65, !dbg !4213

do.cond65:                                        ; preds = %if.end53
  br label %do.end66, !dbg !4213

do.end66:                                         ; preds = %do.cond65, %if.then39
  br label %if.end67, !dbg !4213

if.end67:                                         ; preds = %do.end66, %land.lhs.true28, %land.lhs.true23, %if.then15
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !4217, !tbaa !3910
  %rkb_down_reported68 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %53, i32 0, i32 59, !dbg !4218
  store i32 1, ptr %rkb_down_reported68, align 4, !dbg !4219, !tbaa !4185
  br label %if.end83, !dbg !4220

if.else69:                                        ; preds = %land.lhs.true, %if.else
  %54 = load i32, ptr %state.addr, align 4, !dbg !4221, !tbaa !3959
  %cmp70 = icmp eq i32 %54, 6, !dbg !4221
  br i1 %cmp70, label %land.lhs.true74, label %lor.lhs.false, !dbg !4221

lor.lhs.false:                                    ; preds = %if.else69
  %55 = load i32, ptr %state.addr, align 4, !dbg !4221, !tbaa !3959
  %cmp72 = icmp eq i32 %55, 7, !dbg !4221
  br i1 %cmp72, label %land.lhs.true74, label %if.end82, !dbg !4223

land.lhs.true74:                                  ; preds = %lor.lhs.false, %if.else69
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !4224, !tbaa !3910
  %rkb_down_reported75 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 59, !dbg !4225
  %57 = load i32, ptr %rkb_down_reported75, align 4, !dbg !4225, !tbaa !4185
  %tobool76 = icmp ne i32 %57, 0, !dbg !4224
  br i1 %tobool76, label %if.then77, label %if.end82, !dbg !4226

if.then77:                                        ; preds = %land.lhs.true74
  %58 = load ptr, ptr %rkb.addr, align 8, !dbg !4227, !tbaa !3910
  %rkb_rk78 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %58, i32 0, i32 32, !dbg !4229
  %59 = load ptr, ptr %rkb_rk78, align 8, !dbg !4229, !tbaa !4139
  %rk_broker_down_cnt79 = getelementptr inbounds %struct.rd_kafka_s, ptr %59, i32 0, i32 7, !dbg !4230
  %call80 = call i32 @rd_atomic32_sub(ptr noundef %rk_broker_down_cnt79, i32 noundef 1), !dbg !4231
  %60 = load ptr, ptr %rkb.addr, align 8, !dbg !4232, !tbaa !3910
  %rkb_down_reported81 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %60, i32 0, i32 59, !dbg !4233
  store i32 0, ptr %rkb_down_reported81, align 4, !dbg !4234, !tbaa !4185
  br label %if.end82, !dbg !4235

if.end82:                                         ; preds = %if.then77, %land.lhs.true74, %lor.lhs.false
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end67
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then11
  %61 = load ptr, ptr %rkb.addr, align 8, !dbg !4236, !tbaa !3910
  %rkb_source85 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %61, i32 0, i32 27, !dbg !4238
  %62 = load i32, ptr %rkb_source85, align 8, !dbg !4238, !tbaa !4174
  %cmp86 = icmp ne i32 %62, 2, !dbg !4239
  br i1 %cmp86, label %if.then88, label %if.end148, !dbg !4240

if.then88:                                        ; preds = %if.end84
  %63 = load i32, ptr %state.addr, align 4, !dbg !4241, !tbaa !3959
  %cmp89 = icmp eq i32 %63, 6, !dbg !4241
  br i1 %cmp89, label %land.lhs.true94, label %lor.lhs.false91, !dbg !4241

lor.lhs.false91:                                  ; preds = %if.then88
  %64 = load i32, ptr %state.addr, align 4, !dbg !4241, !tbaa !3959
  %cmp92 = icmp eq i32 %64, 7, !dbg !4241
  br i1 %cmp92, label %land.lhs.true94, label %if.else112, !dbg !4244

land.lhs.true94:                                  ; preds = %lor.lhs.false91, %if.then88
  %65 = load ptr, ptr %rkb.addr, align 8, !dbg !4245, !tbaa !3910
  %rkb_state95 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %65, i32 0, i32 19, !dbg !4245
  %66 = load i32, ptr %rkb_state95, align 4, !dbg !4245, !tbaa !4130
  %cmp96 = icmp eq i32 %66, 6, !dbg !4245
  br i1 %cmp96, label %if.else112, label %lor.lhs.false98, !dbg !4245

lor.lhs.false98:                                  ; preds = %land.lhs.true94
  %67 = load ptr, ptr %rkb.addr, align 8, !dbg !4245, !tbaa !3910
  %rkb_state99 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %67, i32 0, i32 19, !dbg !4245
  %68 = load i32, ptr %rkb_state99, align 4, !dbg !4245, !tbaa !4130
  %cmp100 = icmp eq i32 %68, 7, !dbg !4245
  br i1 %cmp100, label %if.else112, label %if.then102, !dbg !4246

if.then102:                                       ; preds = %lor.lhs.false98
  %69 = load ptr, ptr %rkb.addr, align 8, !dbg !4247, !tbaa !3910
  %rkb_rk103 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %69, i32 0, i32 32, !dbg !4249
  %70 = load ptr, ptr %rkb_rk103, align 8, !dbg !4249, !tbaa !4139
  %rk_broker_up_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %70, i32 0, i32 5, !dbg !4250
  %call104 = call i32 @rd_atomic32_add(ptr noundef %rk_broker_up_cnt, i32 noundef 1), !dbg !4251
  store i8 1, ptr %trigger_monitors, align 1, !dbg !4252, !tbaa !4126
  %71 = load ptr, ptr %rkb.addr, align 8, !dbg !4253, !tbaa !3910
  %rkb_source105 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %71, i32 0, i32 27, !dbg !4253
  %72 = load i32, ptr %rkb_source105, align 8, !dbg !4253, !tbaa !4174
  %cmp106 = icmp eq i32 %72, 3, !dbg !4253
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !4255

if.then108:                                       ; preds = %if.then102
  %73 = load ptr, ptr %rkb.addr, align 8, !dbg !4256, !tbaa !3910
  %rkb_rk109 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %73, i32 0, i32 32, !dbg !4257
  %74 = load ptr, ptr %rkb_rk109, align 8, !dbg !4257, !tbaa !4139
  %rk_logical_broker_up_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %74, i32 0, i32 6, !dbg !4258
  %call110 = call i32 @rd_atomic32_add(ptr noundef %rk_logical_broker_up_cnt, i32 noundef 1), !dbg !4259
  br label %if.end111, !dbg !4259

if.end111:                                        ; preds = %if.then108, %if.then102
  br label %if.end139, !dbg !4260

if.else112:                                       ; preds = %lor.lhs.false98, %land.lhs.true94, %lor.lhs.false91
  %75 = load ptr, ptr %rkb.addr, align 8, !dbg !4261, !tbaa !3910
  %rkb_state113 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %75, i32 0, i32 19, !dbg !4261
  %76 = load i32, ptr %rkb_state113, align 4, !dbg !4261, !tbaa !4130
  %cmp114 = icmp eq i32 %76, 6, !dbg !4261
  br i1 %cmp114, label %land.lhs.true120, label %lor.lhs.false116, !dbg !4261

lor.lhs.false116:                                 ; preds = %if.else112
  %77 = load ptr, ptr %rkb.addr, align 8, !dbg !4261, !tbaa !3910
  %rkb_state117 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %77, i32 0, i32 19, !dbg !4261
  %78 = load i32, ptr %rkb_state117, align 4, !dbg !4261, !tbaa !4130
  %cmp118 = icmp eq i32 %78, 7, !dbg !4261
  br i1 %cmp118, label %land.lhs.true120, label %if.end138, !dbg !4263

land.lhs.true120:                                 ; preds = %lor.lhs.false116, %if.else112
  %79 = load i32, ptr %state.addr, align 4, !dbg !4264, !tbaa !3959
  %cmp121 = icmp eq i32 %79, 6, !dbg !4264
  br i1 %cmp121, label %if.end138, label %lor.lhs.false123, !dbg !4264

lor.lhs.false123:                                 ; preds = %land.lhs.true120
  %80 = load i32, ptr %state.addr, align 4, !dbg !4264, !tbaa !3959
  %cmp124 = icmp eq i32 %80, 7, !dbg !4264
  br i1 %cmp124, label %if.end138, label %if.then126, !dbg !4265

if.then126:                                       ; preds = %lor.lhs.false123
  %81 = load ptr, ptr %rkb.addr, align 8, !dbg !4266, !tbaa !3910
  %rkb_rk127 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %81, i32 0, i32 32, !dbg !4268
  %82 = load ptr, ptr %rkb_rk127, align 8, !dbg !4268, !tbaa !4139
  %rk_broker_up_cnt128 = getelementptr inbounds %struct.rd_kafka_s, ptr %82, i32 0, i32 5, !dbg !4269
  %call129 = call i32 @rd_atomic32_sub(ptr noundef %rk_broker_up_cnt128, i32 noundef 1), !dbg !4270
  store i8 1, ptr %trigger_monitors, align 1, !dbg !4271, !tbaa !4126
  %83 = load ptr, ptr %rkb.addr, align 8, !dbg !4272, !tbaa !3910
  %rkb_source130 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %83, i32 0, i32 27, !dbg !4272
  %84 = load i32, ptr %rkb_source130, align 8, !dbg !4272, !tbaa !4174
  %cmp131 = icmp eq i32 %84, 3, !dbg !4272
  br i1 %cmp131, label %if.then133, label %if.end137, !dbg !4274

if.then133:                                       ; preds = %if.then126
  %85 = load ptr, ptr %rkb.addr, align 8, !dbg !4275, !tbaa !3910
  %rkb_rk134 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %85, i32 0, i32 32, !dbg !4276
  %86 = load ptr, ptr %rkb_rk134, align 8, !dbg !4276, !tbaa !4139
  %rk_logical_broker_up_cnt135 = getelementptr inbounds %struct.rd_kafka_s, ptr %86, i32 0, i32 6, !dbg !4277
  %call136 = call i32 @rd_atomic32_sub(ptr noundef %rk_logical_broker_up_cnt135, i32 noundef 1), !dbg !4278
  br label %if.end137, !dbg !4278

if.end137:                                        ; preds = %if.then133, %if.then126
  br label %if.end138, !dbg !4279

if.end138:                                        ; preds = %if.end137, %lor.lhs.false123, %land.lhs.true120, %lor.lhs.false116
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.end111
  %87 = load i32, ptr %state.addr, align 4, !dbg !4280, !tbaa !3959
  %cmp140 = icmp eq i32 %87, 1, !dbg !4282
  br i1 %cmp140, label %land.lhs.true142, label %if.end147, !dbg !4283

land.lhs.true142:                                 ; preds = %if.end139
  %88 = load ptr, ptr %rkb.addr, align 8, !dbg !4284, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %88, i32 0, i32 55, !dbg !4285
  %coord = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 1, !dbg !4286
  %call143 = call i32 @rd_atomic32_get(ptr noundef %coord), !dbg !4287
  %cmp144 = icmp sgt i32 %call143, 0, !dbg !4288
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !4289

if.then146:                                       ; preds = %land.lhs.true142
  store i8 1, ptr %trigger_monitors, align 1, !dbg !4290, !tbaa !4126
  br label %if.end147, !dbg !4291

if.end147:                                        ; preds = %if.then146, %land.lhs.true142, %if.end139
  br label %if.end148, !dbg !4292

if.end148:                                        ; preds = %if.end147, %if.end84
  %89 = load i32, ptr %state.addr, align 4, !dbg !4293, !tbaa !3959
  %90 = load ptr, ptr %rkb.addr, align 8, !dbg !4294, !tbaa !3910
  %rkb_state149 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %90, i32 0, i32 19, !dbg !4295
  store i32 %89, ptr %rkb_state149, align 4, !dbg !4296, !tbaa !4130
  %call150 = call i64 @rd_clock(), !dbg !4297
  %91 = load ptr, ptr %rkb.addr, align 8, !dbg !4298, !tbaa !3910
  %rkb_ts_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %91, i32 0, i32 20, !dbg !4299
  store i64 %call150, ptr %rkb_ts_state, align 8, !dbg !4300, !tbaa !4301
  %92 = load i8, ptr %trigger_monitors, align 1, !dbg !4302, !tbaa !4126
  %tobool151 = icmp ne i8 %92, 0, !dbg !4302
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !4304

if.then152:                                       ; preds = %if.end148
  %93 = load ptr, ptr %rkb.addr, align 8, !dbg !4305, !tbaa !3910
  call void @rd_kafka_broker_trigger_monitors(ptr noundef %93), !dbg !4306
  br label %if.end153, !dbg !4306

if.end153:                                        ; preds = %if.then152, %if.end148
  %94 = load ptr, ptr %rkb.addr, align 8, !dbg !4307, !tbaa !3910
  %rkb_rk154 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %94, i32 0, i32 32, !dbg !4308
  %95 = load ptr, ptr %rkb_rk154, align 8, !dbg !4308, !tbaa !4139
  %96 = load ptr, ptr %rkb.addr, align 8, !dbg !4309, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %96, i32 0, i32 1, !dbg !4310
  %97 = load i32, ptr %rkb_nodeid, align 8, !dbg !4310, !tbaa !4311
  %98 = load ptr, ptr %rkb.addr, align 8, !dbg !4312, !tbaa !3910
  %rkb_proto = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %98, i32 0, i32 58, !dbg !4313
  %99 = load i32, ptr %rkb_proto, align 8, !dbg !4313, !tbaa !4314
  %idxprom155 = zext i32 %99 to i64, !dbg !4315
  %arrayidx156 = getelementptr inbounds [5 x ptr], ptr @rd_kafka_secproto_names, i64 0, i64 %idxprom155, !dbg !4315
  %100 = load ptr, ptr %arrayidx156, align 8, !dbg !4315, !tbaa !3910
  %101 = load ptr, ptr %rkb.addr, align 8, !dbg !4316, !tbaa !3910
  %rkb_origname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %101, i32 0, i32 45, !dbg !4317
  %102 = load ptr, ptr %rkb_origname, align 8, !dbg !4317, !tbaa !4318
  %103 = load ptr, ptr %rkb.addr, align 8, !dbg !4319, !tbaa !3910
  %rkb_port = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %103, i32 0, i32 44, !dbg !4320
  %104 = load i16, ptr %rkb_port, align 8, !dbg !4320, !tbaa !4321
  %conv157 = zext i16 %104 to i32, !dbg !4319
  %105 = load ptr, ptr %rkb.addr, align 8, !dbg !4322, !tbaa !3910
  %rkb_state158 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %105, i32 0, i32 19, !dbg !4323
  %106 = load i32, ptr %rkb_state158, align 4, !dbg !4323, !tbaa !4130
  %idxprom159 = zext i32 %106 to i64, !dbg !4324
  %arrayidx160 = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom159, !dbg !4324
  %107 = load ptr, ptr %arrayidx160, align 8, !dbg !4324, !tbaa !3910
  call void @rd_kafka_interceptors_on_broker_state_change(ptr noundef %95, i32 noundef %97, ptr noundef %100, ptr noundef %102, i32 noundef %conv157, ptr noundef %107), !dbg !4325
  %108 = load ptr, ptr %rkb.addr, align 8, !dbg !4326, !tbaa !3910
  %rkb_rk161 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %108, i32 0, i32 32, !dbg !4327
  %109 = load ptr, ptr %rkb_rk161, align 8, !dbg !4327, !tbaa !4139
  call void @rd_kafka_brokers_broadcast_state_change(ptr noundef %109), !dbg !4328
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4329
  br label %cleanup, !dbg !4329

cleanup:                                          ; preds = %if.end153, %if.then
  call void @llvm.lifetime.end.p0(i64 1, ptr %trigger_monitors) #16, !dbg !4329
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4329

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #6

declare !dbg !4330 void @rd_kafka_log0(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_atomic32_add(ptr noundef %ra, i32 noundef %v) #4 !dbg !4335 {
entry:
  %ra.addr = alloca ptr, align 8
  %v.addr = alloca i32, align 4
  %.atomictmp = alloca i32, align 4
  %atomic-temp = alloca i32, align 4
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !4340, metadata !DIExpression()), !dbg !4342
  store i32 %v, ptr %v.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !4341, metadata !DIExpression()), !dbg !4343
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !4344, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic32_t, ptr %0, i32 0, i32 0, !dbg !4344
  %1 = load i32, ptr %v.addr, align 4, !dbg !4344, !tbaa !3959
  store i32 %1, ptr %.atomictmp, align 4, !dbg !4344, !tbaa !3959
  %2 = load i32, ptr %.atomictmp, align 4, !dbg !4344
  %3 = atomicrmw add ptr %val, i32 %2 seq_cst, align 4, !dbg !4344
  %4 = add i32 %3, %2, !dbg !4344
  store i32 %4, ptr %atomic-temp, align 4, !dbg !4344
  %5 = load i32, ptr %atomic-temp, align 4, !dbg !4344, !tbaa !3959
  ret i32 %5, !dbg !4345
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_atomic32_get(ptr noundef %ra) #4 !dbg !4346 {
entry:
  %ra.addr = alloca ptr, align 8
  %.atomictmp = alloca i32, align 4
  %atomic-temp = alloca i32, align 4
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !4350, metadata !DIExpression()), !dbg !4351
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !4352, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic32_t, ptr %0, i32 0, i32 0, !dbg !4352
  store i32 0, ptr %.atomictmp, align 4, !dbg !4352, !tbaa !3959
  %1 = load i32, ptr %.atomictmp, align 4, !dbg !4352
  %2 = atomicrmw add ptr %val, i32 %1 seq_cst, align 4, !dbg !4352
  store i32 %2, ptr %atomic-temp, align 4, !dbg !4352
  %3 = load i32, ptr %atomic-temp, align 4, !dbg !4352, !tbaa !3959
  ret i32 %3, !dbg !4353
}

declare !dbg !4354 void @rd_kafka_q_op_err(ptr noundef, i32 noundef, ptr noundef, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_atomic32_sub(ptr noundef %ra, i32 noundef %v) #4 !dbg !4357 {
entry:
  %ra.addr = alloca ptr, align 8
  %v.addr = alloca i32, align 4
  %.atomictmp = alloca i32, align 4
  %atomic-temp = alloca i32, align 4
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !4359, metadata !DIExpression()), !dbg !4361
  store i32 %v, ptr %v.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !4360, metadata !DIExpression()), !dbg !4362
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !4363, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic32_t, ptr %0, i32 0, i32 0, !dbg !4363
  %1 = load i32, ptr %v.addr, align 4, !dbg !4363, !tbaa !3959
  store i32 %1, ptr %.atomictmp, align 4, !dbg !4363, !tbaa !3959
  %2 = load i32, ptr %.atomictmp, align 4, !dbg !4363
  %3 = atomicrmw sub ptr %val, i32 %2 seq_cst, align 4, !dbg !4363
  %4 = sub i32 %3, %2, !dbg !4363
  store i32 %4, ptr %atomic-temp, align 4, !dbg !4363
  %5 = load i32, ptr %atomic-temp, align 4, !dbg !4363, !tbaa !3959
  ret i32 %5, !dbg !4364
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_clock() #4 !dbg !4365 {
entry:
  %ts = alloca %struct.timespec, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr %ts) #16, !dbg !4377
  tail call void @llvm.dbg.declare(metadata ptr %ts, metadata !4370, metadata !DIExpression()), !dbg !4378
  %call = call i32 @clock_gettime(i32 noundef 1, ptr noundef %ts) #16, !dbg !4379
  %tv_sec = getelementptr inbounds %struct.timespec, ptr %ts, i32 0, i32 0, !dbg !4380
  %0 = load i64, ptr %tv_sec, align 8, !dbg !4380, !tbaa !4381
  %mul = mul i64 %0, 1000000, !dbg !4383
  %tv_nsec = getelementptr inbounds %struct.timespec, ptr %ts, i32 0, i32 1, !dbg !4384
  %1 = load i64, ptr %tv_nsec, align 8, !dbg !4384, !tbaa !4385
  %div = udiv i64 %1, 1000, !dbg !4386
  %add = add i64 %mul, %div, !dbg !4387
  call void @llvm.lifetime.end.p0(i64 16, ptr %ts) #16, !dbg !4388
  ret i64 %add, !dbg !4389
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_trigger_monitors(ptr noundef %rkb) #0 !dbg !4390 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rkbmon = alloca ptr, align 8
  %rko = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !4392, metadata !DIExpression()), !dbg !4399
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkbmon) #16, !dbg !4400
  tail call void @llvm.dbg.declare(metadata ptr %rkbmon, metadata !4393, metadata !DIExpression()), !dbg !4401
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !4402, !tbaa !3910
  %rkb_monitors = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 56, !dbg !4402
  %tqh_first = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors, i32 0, i32 0, !dbg !4402
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !4402, !tbaa !4403
  store ptr %1, ptr %rkbmon, align 8, !dbg !4402, !tbaa !3910
  br label %for.cond, !dbg !4402

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %rkbmon, align 8, !dbg !4404, !tbaa !3910
  %cmp = icmp ne ptr %2, null, !dbg !4404
  br i1 %cmp, label %for.body, label %for.end, !dbg !4402

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !4405
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !4395, metadata !DIExpression()), !dbg !4406
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !4407, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 32, !dbg !4408
  %4 = load ptr, ptr %rkb_rk, align 8, !dbg !4408, !tbaa !4139
  %call = call ptr @rd_kafka_op_new_cb(ptr noundef %4, i32 noundef 54, ptr noundef @rd_kafka_broker_monitor_op_cb), !dbg !4409
  store ptr %call, ptr %rko, align 8, !dbg !4406, !tbaa !3910
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !4410, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 31, !dbg !4410
  %call1 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !4410
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !4411, !tbaa !3910
  %7 = load ptr, ptr %rko, align 8, !dbg !4412, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %7, i32 0, i32 15, !dbg !4413
  %rkb2 = getelementptr inbounds %struct.anon.81, ptr %rko_u, i32 0, i32 0, !dbg !4414
  store ptr %6, ptr %rkb2, align 8, !dbg !4415, !tbaa !4126
  %8 = load ptr, ptr %rkbmon, align 8, !dbg !4416, !tbaa !3910
  %rkbmon_cb = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %8, i32 0, i32 3, !dbg !4417
  %9 = load ptr, ptr %rkbmon_cb, align 8, !dbg !4417, !tbaa !4418
  %10 = load ptr, ptr %rko, align 8, !dbg !4419, !tbaa !3910
  %rko_u3 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %10, i32 0, i32 15, !dbg !4420
  %cb = getelementptr inbounds %struct.anon.81, ptr %rko_u3, i32 0, i32 1, !dbg !4421
  store ptr %9, ptr %cb, align 8, !dbg !4422, !tbaa !4126
  %11 = load ptr, ptr %rkbmon, align 8, !dbg !4423, !tbaa !3910
  %rkbmon_q = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %11, i32 0, i32 2, !dbg !4424
  %12 = load ptr, ptr %rkbmon_q, align 8, !dbg !4424, !tbaa !4425
  %13 = load ptr, ptr %rko, align 8, !dbg !4426, !tbaa !3910
  %call4 = call i32 @rd_kafka_q_enq(ptr noundef %12, ptr noundef %13), !dbg !4427
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !4428
  br label %for.inc, !dbg !4429

for.inc:                                          ; preds = %for.body
  %14 = load ptr, ptr %rkbmon, align 8, !dbg !4404, !tbaa !3910
  %rkbmon_link = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %14, i32 0, i32 0, !dbg !4404
  %tqe_next = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link, i32 0, i32 0, !dbg !4404
  %15 = load ptr, ptr %tqe_next, align 8, !dbg !4404, !tbaa !4430
  store ptr %15, ptr %rkbmon, align 8, !dbg !4404, !tbaa !3910
  br label %for.cond, !dbg !4404, !llvm.loop !4431

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkbmon) #16, !dbg !4433
  ret void, !dbg !4433
}

declare !dbg !4434 void @rd_kafka_interceptors_on_broker_state_change(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define void @rd_kafka_brokers_broadcast_state_change(ptr noundef %rk) #0 !dbg !4438 {
entry:
  %rk.addr = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !4442, metadata !DIExpression()), !dbg !4443
  br label %do.body, !dbg !4444

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !4445, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 18, !dbg !4445
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !4445
  %1 = load i32, ptr %debug, align 8, !dbg !4445, !tbaa !4140
  %and = and i32 %1, 1, !dbg !4445
  %conv = sext i32 %and to i64, !dbg !4445
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4445
  %tobool = icmp ne i64 %expval, 0, !dbg !4445
  br i1 %tobool, label %if.then, label %if.end, !dbg !4448

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !4445, !tbaa !3910
  %rk_conf1 = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 18, !dbg !4445
  %3 = load ptr, ptr %rk.addr, align 8, !dbg !4445, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf1, ptr noundef %3, ptr noundef null, i32 noundef 7, i32 noundef 1, ptr noundef @.str.29, ptr noundef @.str.30), !dbg !4445
  br label %if.end, !dbg !4445

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !4448

do.end:                                           ; preds = %if.end
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !4449, !tbaa !3910
  %rk_broker_state_change_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 12, !dbg !4450
  %call = call i32 @mtx_lock(ptr noundef %rk_broker_state_change_lock), !dbg !4451
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !4452, !tbaa !3910
  %rk_broker_state_change_version = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 13, !dbg !4453
  %6 = load i32, ptr %rk_broker_state_change_version, align 8, !dbg !4454, !tbaa !4455
  %inc = add nsw i32 %6, 1, !dbg !4454
  store i32 %inc, ptr %rk_broker_state_change_version, align 8, !dbg !4454, !tbaa !4455
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !4456, !tbaa !3910
  %rk_broker_state_change_waiters = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 14, !dbg !4457
  call void @rd_list_apply(ptr noundef %rk_broker_state_change_waiters, ptr noundef @rd_kafka_broker_state_change_trigger_eonce, ptr noundef null), !dbg !4458
  %8 = load ptr, ptr %rk.addr, align 8, !dbg !4459, !tbaa !3910
  %rk_broker_state_change_cnd = getelementptr inbounds %struct.rd_kafka_s, ptr %8, i32 0, i32 11, !dbg !4460
  %call2 = call i32 @cnd_broadcast(ptr noundef %rk_broker_state_change_cnd), !dbg !4461
  %9 = load ptr, ptr %rk.addr, align 8, !dbg !4462, !tbaa !3910
  %rk_broker_state_change_lock3 = getelementptr inbounds %struct.rd_kafka_s, ptr %9, i32 0, i32 12, !dbg !4463
  %call4 = call i32 @mtx_unlock(ptr noundef %rk_broker_state_change_lock3), !dbg !4464
  ret void, !dbg !4465
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_fail(ptr noundef %rkb, i32 noundef %level, i32 noundef %err, ptr noundef %fmt, ...) #0 !dbg !4466 {
entry:
  %rkb.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %err.addr = alloca i32, align 4
  %fmt.addr = alloca ptr, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %tmpq_waitresp = alloca %struct.rd_kafka_bufq_s, align 8
  %tmpq = alloca %struct.rd_kafka_bufq_s, align 8
  %old_state = alloca i32, align 4
  %rktp = alloca ptr, align 8
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !4470, metadata !DIExpression()), !dbg !4496
  store i32 %level, ptr %level.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !4471, metadata !DIExpression()), !dbg !4497
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4472, metadata !DIExpression()), !dbg !4498
  store ptr %fmt, ptr %fmt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %fmt.addr, metadata !4473, metadata !DIExpression()), !dbg !4499
  call void @llvm.lifetime.start.p0(i64 24, ptr %ap) #16, !dbg !4500
  tail call void @llvm.dbg.declare(metadata ptr %ap, metadata !4474, metadata !DIExpression()), !dbg !4501
  call void @llvm.lifetime.start.p0(i64 24, ptr %tmpq_waitresp) #16, !dbg !4502
  tail call void @llvm.dbg.declare(metadata ptr %tmpq_waitresp, metadata !4485, metadata !DIExpression()), !dbg !4503
  call void @llvm.lifetime.start.p0(i64 24, ptr %tmpq) #16, !dbg !4502
  tail call void @llvm.dbg.declare(metadata ptr %tmpq, metadata !4486, metadata !DIExpression()), !dbg !4504
  call void @llvm.lifetime.start.p0(i64 4, ptr %old_state) #16, !dbg !4505
  tail call void @llvm.dbg.declare(metadata ptr %old_state, metadata !4487, metadata !DIExpression()), !dbg !4506
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp) #16, !dbg !4507
  tail call void @llvm.dbg.declare(metadata ptr %rktp, metadata !4488, metadata !DIExpression()), !dbg !4508
  br label %do.body, !dbg !4509

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !4510, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !4510
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !4510, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %1), !dbg !4510
  %tobool = icmp ne i32 %call, 0, !dbg !4510
  %lnot = xor i1 %tobool, true, !dbg !4510
  %lnot.ext = zext i1 %lnot to i32, !dbg !4510
  %conv = sext i32 %lnot.ext to i64, !dbg !4510
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4510
  %tobool1 = icmp ne i64 %expval, 0, !dbg !4510
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4514

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !4510, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !4510
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !4510, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 561, ptr noundef @__FUNCTION__.rd_kafka_broker_fail, ptr noundef %3, ptr noundef @.str.21) #17, !dbg !4510
  unreachable, !dbg !4510

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !4514

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !4514

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !4515, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 5, !dbg !4517
  %5 = load ptr, ptr %rkb_transport, align 8, !dbg !4517, !tbaa !4518
  %tobool2 = icmp ne ptr %5, null, !dbg !4515
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !4519

if.then3:                                         ; preds = %do.end
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !4520, !tbaa !3910
  %rkb_transport4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 5, !dbg !4522
  %7 = load ptr, ptr %rkb_transport4, align 8, !dbg !4522, !tbaa !4518
  call void @rd_kafka_transport_close(ptr noundef %7), !dbg !4523
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !4524, !tbaa !3910
  %rkb_transport5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 5, !dbg !4525
  store ptr null, ptr %rkb_transport5, align 8, !dbg !4526, !tbaa !4518
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !4527, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 19, !dbg !4529
  %10 = load i32, ptr %rkb_state, align 4, !dbg !4529, !tbaa !4130
  %cmp = icmp uge i32 %10, 6, !dbg !4530
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !4531

if.then7:                                         ; preds = %if.then3
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !4532, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 28, !dbg !4533
  %disconnects = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 14, !dbg !4534
  %call8 = call i32 @rd_atomic32_add(ptr noundef %disconnects, i32 noundef 1), !dbg !4535
  br label %if.end9, !dbg !4535

if.end9:                                          ; preds = %if.then7, %if.then3
  br label %if.end10, !dbg !4536

if.end10:                                         ; preds = %if.end9, %do.end
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !4537, !tbaa !3910
  %rkb_req_timeouts = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 29, !dbg !4538
  store i32 0, ptr %rkb_req_timeouts, align 8, !dbg !4539, !tbaa !4540
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !4541, !tbaa !3910
  %rkb_recv_buf = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 33, !dbg !4543
  %14 = load ptr, ptr %rkb_recv_buf, align 8, !dbg !4543, !tbaa !4544
  %tobool11 = icmp ne ptr %14, null, !dbg !4541
  br i1 %tobool11, label %if.then12, label %if.end24, !dbg !4545

if.then12:                                        ; preds = %if.end10
  br label %do.body13, !dbg !4546

do.body13:                                        ; preds = %if.then12
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !4548, !tbaa !3910
  %rkb_recv_buf14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 33, !dbg !4548
  %16 = load ptr, ptr %rkb_recv_buf14, align 8, !dbg !4548, !tbaa !4544
  %rkbuf_refcnt = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %16, i32 0, i32 21, !dbg !4548
  %call15 = call i32 @rd_refcnt_sub0(ptr noundef %rkbuf_refcnt), !dbg !4548
  %cmp16 = icmp sgt i32 %call15, 0, !dbg !4548
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !4551

if.then18:                                        ; preds = %do.body13
  br label %do.end22, !dbg !4548

if.end19:                                         ; preds = %do.body13
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !4551, !tbaa !3910
  %rkb_recv_buf20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 33, !dbg !4551
  %18 = load ptr, ptr %rkb_recv_buf20, align 8, !dbg !4551, !tbaa !4544
  call void @rd_kafka_buf_destroy_final(ptr noundef %18), !dbg !4551
  br label %do.cond21, !dbg !4551

do.cond21:                                        ; preds = %if.end19
  br label %do.end22, !dbg !4551

do.end22:                                         ; preds = %do.cond21, %if.then18
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !4552, !tbaa !3910
  %rkb_recv_buf23 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 33, !dbg !4553
  store ptr null, ptr %rkb_recv_buf23, align 8, !dbg !4554, !tbaa !4544
  br label %if.end24, !dbg !4555

if.end24:                                         ; preds = %do.end22, %if.end10
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !4556, !tbaa !3910
  %rkb_reauth_in_progress = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 54, !dbg !4557
  store i8 0, ptr %rkb_reauth_in_progress, align 8, !dbg !4558, !tbaa !4559
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %ap, i64 0, i64 0, !dbg !4560
  call void @llvm.va_start.p0(ptr %arraydecay), !dbg !4560
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !4561, !tbaa !3910
  %22 = load i32, ptr %level.addr, align 4, !dbg !4562, !tbaa !3959
  %23 = load i32, ptr %err.addr, align 4, !dbg !4563, !tbaa !4126
  %24 = load ptr, ptr %fmt.addr, align 8, !dbg !4564, !tbaa !3910
  %arraydecay25 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %ap, i64 0, i64 0, !dbg !4565
  call void @rd_kafka_broker_set_error(ptr noundef %21, i32 noundef %22, i32 noundef %23, ptr noundef %24, ptr noundef %arraydecay25), !dbg !4566
  %arraydecay26 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %ap, i64 0, i64 0, !dbg !4567
  call void @llvm.va_end.p0(ptr %arraydecay26), !dbg !4567
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !4568, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 9, !dbg !4568
  %call27 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !4568
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !4569, !tbaa !3910
  %rkb_state28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 19, !dbg !4571
  %27 = load i32, ptr %rkb_state28, align 4, !dbg !4571, !tbaa !4130
  %cmp29 = icmp eq i32 %27, 8, !dbg !4572
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4573

if.then31:                                        ; preds = %if.end24
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !4574, !tbaa !3910
  call void @rd_kafka_broker_feature_disable(ptr noundef %28, i32 noundef 2), !dbg !4575
  br label %if.end32, !dbg !4575

if.end32:                                         ; preds = %if.then31, %if.end24
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !4576, !tbaa !3910
  %rkb_state33 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 19, !dbg !4577
  %30 = load i32, ptr %rkb_state33, align 4, !dbg !4577, !tbaa !4130
  store i32 %30, ptr %old_state, align 4, !dbg !4578, !tbaa !3959
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !4579, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %31, i32 noundef 1), !dbg !4580
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !4581, !tbaa !3910
  %rkb_rk34 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 32, !dbg !4582
  %33 = load ptr, ptr %rkb_rk34, align 8, !dbg !4582, !tbaa !4139
  %rk_timers = getelementptr inbounds %struct.rd_kafka_s, ptr %33, i32 0, i32 44, !dbg !4583
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !4584, !tbaa !3910
  %rkb_sasl_reauth_tmr = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 62, !dbg !4585
  %call35 = call i32 @rd_kafka_timer_stop(ptr noundef %rk_timers, ptr noundef %rkb_sasl_reauth_tmr, i32 noundef 1), !dbg !4586
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !4587, !tbaa !3910
  %rkb_lock36 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 9, !dbg !4587
  %call37 = call i32 @mtx_unlock(ptr noundef %rkb_lock36), !dbg !4587
  %36 = load ptr, ptr %rkb.addr, align 8, !dbg !4588, !tbaa !3910
  %rkb_c38 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 28, !dbg !4589
  %ts_send = getelementptr inbounds %struct.anon.2, ptr %rkb_c38, i32 0, i32 16, !dbg !4590
  %call39 = call i64 @rd_atomic64_set(ptr noundef %ts_send, i64 noundef 0), !dbg !4591
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !4592, !tbaa !3910
  %rkb_c40 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 28, !dbg !4593
  %ts_recv = getelementptr inbounds %struct.anon.2, ptr %rkb_c40, i32 0, i32 17, !dbg !4594
  %call41 = call i64 @rd_atomic64_set(ptr noundef %ts_recv, i64 noundef 0), !dbg !4595
  call void @rd_kafka_bufq_init(ptr noundef %tmpq_waitresp), !dbg !4596
  call void @rd_kafka_bufq_init(ptr noundef %tmpq), !dbg !4597
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !4598, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 36, !dbg !4599
  call void @rd_kafka_bufq_concat(ptr noundef %tmpq_waitresp, ptr noundef %rkb_waitresps), !dbg !4600
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !4601, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 35, !dbg !4602
  call void @rd_kafka_bufq_concat(ptr noundef %tmpq, ptr noundef %rkb_outbufs), !dbg !4603
  %40 = load ptr, ptr %rkb.addr, align 8, !dbg !4604, !tbaa !3910
  %rkb_blocking_request_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %40, i32 0, i32 22, !dbg !4605
  call void @rd_atomic32_init(ptr noundef %rkb_blocking_request_cnt, i32 noundef 0), !dbg !4606
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !4607, !tbaa !3910
  %42 = load i32, ptr %err.addr, align 4, !dbg !4608, !tbaa !4126
  call void @rd_kafka_bufq_purge(ptr noundef %41, ptr noundef %tmpq_waitresp, i32 noundef %42), !dbg !4609
  %43 = load ptr, ptr %rkb.addr, align 8, !dbg !4610, !tbaa !3910
  %44 = load i32, ptr %err.addr, align 4, !dbg !4611, !tbaa !4126
  %cmp42 = icmp eq i32 %44, -185, !dbg !4612
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !4611

cond.true:                                        ; preds = %if.end32
  br label %cond.end, !dbg !4611

cond.false:                                       ; preds = %if.end32
  %45 = load i32, ptr %err.addr, align 4, !dbg !4613, !tbaa !4126
  br label %cond.end, !dbg !4611

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -166, %cond.true ], [ %45, %cond.false ], !dbg !4611
  call void @rd_kafka_bufq_purge(ptr noundef %43, ptr noundef %tmpq, i32 noundef %cond), !dbg !4614
  %46 = load ptr, ptr %rkb.addr, align 8, !dbg !4615, !tbaa !3910
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !4616, !tbaa !3910
  %rkb_outbufs44 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 35, !dbg !4617
  call void @rd_kafka_bufq_connection_reset(ptr noundef %46, ptr noundef %rkb_outbufs44), !dbg !4618
  %48 = load ptr, ptr %rkb.addr, align 8, !dbg !4619, !tbaa !3910
  %rkb_rk45 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %48, i32 0, i32 32, !dbg !4619
  %49 = load ptr, ptr %rkb_rk45, align 8, !dbg !4619, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %49, i32 0, i32 23, !dbg !4619
  %call46 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !4619
  %and = and i32 %call46, 1, !dbg !4619
  %tobool47 = icmp ne i32 %and, 0, !dbg !4619
  br i1 %tobool47, label %land.lhs.true, label %if.end78, !dbg !4620

land.lhs.true:                                    ; preds = %cond.end
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !4621, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 31, !dbg !4621
  %call48 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt), !dbg !4621
  %cmp49 = icmp sle i32 %call48, 1, !dbg !4621
  br i1 %cmp49, label %if.end78, label %if.then51, !dbg !4622

if.then51:                                        ; preds = %land.lhs.true
  br label %do.body52, !dbg !4623

do.body52:                                        ; preds = %if.then51
  %51 = load ptr, ptr %rkb.addr, align 8, !dbg !4624, !tbaa !3910
  %rkb_rk53 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %51, i32 0, i32 32, !dbg !4624
  %52 = load ptr, ptr %rkb_rk53, align 8, !dbg !4624, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %52, i32 0, i32 18, !dbg !4624
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !4624
  %53 = load i32, ptr %debug, align 8, !dbg !4624, !tbaa !4140
  %and54 = and i32 %53, 130, !dbg !4624
  %conv55 = sext i32 %and54 to i64, !dbg !4624
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !4624
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !4624
  br i1 %tobool57, label %if.then58, label %if.end74, !dbg !4625

if.then58:                                        ; preds = %do.body52
  br label %do.body59, !dbg !4626

do.body59:                                        ; preds = %if.then58
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !4627
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !4489, metadata !DIExpression()), !dbg !4627
  %54 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %54, i32 0, i32 49, !dbg !4627
  %call60 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !4627
  %arraydecay61 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !4627
  %55 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %55, i32 0, i32 48, !dbg !4627
  %56 = load ptr, ptr %rkb_logname, align 8, !dbg !4627, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay61, ptr noundef %56, i64 noundef 256), !dbg !4627
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_logname_lock62 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %57, i32 0, i32 49, !dbg !4627
  %call63 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock62), !dbg !4627
  %58 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_rk64 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %58, i32 0, i32 32, !dbg !4627
  %59 = load ptr, ptr %rkb_rk64, align 8, !dbg !4627, !tbaa !4139
  %rk_conf65 = getelementptr inbounds %struct.rd_kafka_s, ptr %59, i32 0, i32 18, !dbg !4627
  %60 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_rk66 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %60, i32 0, i32 32, !dbg !4627
  %61 = load ptr, ptr %rkb_rk66, align 8, !dbg !4627, !tbaa !4139
  %arraydecay67 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !4627
  %62 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_refcnt68 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %62, i32 0, i32 31, !dbg !4627
  %call69 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt68), !dbg !4627
  %63 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_outbufs70 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %63, i32 0, i32 35, !dbg !4627
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs70, i32 0, i32 1, !dbg !4627
  %call71 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !4627
  %64 = load ptr, ptr %rkb.addr, align 8, !dbg !4627, !tbaa !3910
  %rkb_toppar_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %64, i32 0, i32 12, !dbg !4627
  %65 = load i32, ptr %rkb_toppar_cnt, align 8, !dbg !4627, !tbaa !4629
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf65, ptr noundef %61, ptr noundef %arraydecay67, i32 noundef 7, i32 noundef 130, ptr noundef @.str.22, ptr noundef @.str.23, i32 noundef %call69, i32 noundef %call71, i32 noundef %65), !dbg !4627
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !4626
  br label %do.cond72, !dbg !4627

do.cond72:                                        ; preds = %do.body59
  br label %do.end73, !dbg !4627

do.end73:                                         ; preds = %do.cond72
  br label %if.end74, !dbg !4626

if.end74:                                         ; preds = %do.end73, %do.body52
  br label %do.cond75, !dbg !4625

do.cond75:                                        ; preds = %if.end74
  br label %do.end76, !dbg !4625

do.end76:                                         ; preds = %do.cond75
  %66 = load ptr, ptr %rkb.addr, align 8, !dbg !4630, !tbaa !3910
  %67 = load ptr, ptr %rkb.addr, align 8, !dbg !4631, !tbaa !3910
  %rkb_outbufs77 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %67, i32 0, i32 35, !dbg !4632
  call void @rd_kafka_bufq_dump(ptr noundef %66, ptr noundef @.str.24, ptr noundef %rkb_outbufs77), !dbg !4633
  br label %if.end78, !dbg !4634

if.end78:                                         ; preds = %do.end76, %land.lhs.true, %cond.end
  %68 = load ptr, ptr %rkb.addr, align 8, !dbg !4635, !tbaa !3910
  %rkb_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %68, i32 0, i32 11, !dbg !4635
  %tqh_first = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars, i32 0, i32 0, !dbg !4635
  %69 = load ptr, ptr %tqh_first, align 8, !dbg !4635, !tbaa !4637
  store ptr %69, ptr %rktp, align 8, !dbg !4635, !tbaa !3910
  br label %for.cond, !dbg !4635

for.cond:                                         ; preds = %for.inc, %if.end78
  %70 = load ptr, ptr %rktp, align 8, !dbg !4638, !tbaa !3910
  %cmp79 = icmp ne ptr %70, null, !dbg !4638
  br i1 %cmp79, label %for.body, label %for.end, !dbg !4635

for.body:                                         ; preds = %for.cond
  %71 = load ptr, ptr %rktp, align 8, !dbg !4640, !tbaa !3910
  %rktp_lock = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %71, i32 0, i32 14, !dbg !4640
  %call81 = call i32 @mtx_lock(ptr noundef %rktp_lock), !dbg !4640
  %72 = load ptr, ptr %rktp, align 8, !dbg !4642, !tbaa !3910
  %rktp_broker = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %72, i32 0, i32 11, !dbg !4642
  %73 = load ptr, ptr %rktp_broker, align 8, !dbg !4642, !tbaa !4644
  %74 = load ptr, ptr %rkb.addr, align 8, !dbg !4642, !tbaa !3910
  %cmp82 = icmp ne ptr %73, %74, !dbg !4642
  %conv83 = zext i1 %cmp82 to i32, !dbg !4642
  %conv84 = sext i32 %conv83 to i64, !dbg !4642
  %expval85 = call i64 @llvm.expect.i64(i64 %conv84, i64 0), !dbg !4642
  %tobool86 = icmp ne i64 %expval85, 0, !dbg !4642
  br i1 %tobool86, label %if.then87, label %if.end90, !dbg !4655

if.then87:                                        ; preds = %for.body
  %75 = load ptr, ptr %rktp, align 8, !dbg !4656, !tbaa !3910
  %rktp_lock88 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %75, i32 0, i32 14, !dbg !4656
  %call89 = call i32 @mtx_unlock(ptr noundef %rktp_lock88), !dbg !4656
  br label %for.inc, !dbg !4658

if.end90:                                         ; preds = %for.body
  %76 = load ptr, ptr %rktp, align 8, !dbg !4659, !tbaa !3910
  %rktp_lock91 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %76, i32 0, i32 14, !dbg !4659
  %call92 = call i32 @mtx_unlock(ptr noundef %rktp_lock91), !dbg !4659
  %77 = load ptr, ptr %rktp, align 8, !dbg !4660, !tbaa !3910
  %rktp_leader_id = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %77, i32 0, i32 8, !dbg !4662
  %78 = load i32, ptr %rktp_leader_id, align 4, !dbg !4662, !tbaa !4663
  %79 = load ptr, ptr %rktp, align 8, !dbg !4664, !tbaa !3910
  %rktp_broker_id = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %79, i32 0, i32 9, !dbg !4665
  %80 = load i32, ptr %rktp_broker_id, align 8, !dbg !4665, !tbaa !4666
  %cmp93 = icmp ne i32 %78, %80, !dbg !4667
  br i1 %cmp93, label %if.then95, label %if.end97, !dbg !4668

if.then95:                                        ; preds = %if.end90
  %81 = load ptr, ptr %rktp, align 8, !dbg !4669, !tbaa !3910
  %call96 = call i32 @rd_kafka_toppar_delegate_to_leader(ptr noundef %81), !dbg !4671
  br label %if.end97, !dbg !4672

if.end97:                                         ; preds = %if.then95, %if.end90
  br label %for.inc, !dbg !4673

for.inc:                                          ; preds = %if.end97, %if.then87
  %82 = load ptr, ptr %rktp, align 8, !dbg !4638, !tbaa !3910
  %rktp_rkblink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %82, i32 0, i32 1, !dbg !4638
  %tqe_next = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink, i32 0, i32 0, !dbg !4638
  %83 = load ptr, ptr %tqe_next, align 8, !dbg !4638, !tbaa !4674
  store ptr %83, ptr %rktp, align 8, !dbg !4638, !tbaa !3910
  br label %for.cond, !dbg !4638, !llvm.loop !4675

for.end:                                          ; preds = %for.cond
  %84 = load i32, ptr %err.addr, align 4, !dbg !4677, !tbaa !4126
  %cmp98 = icmp ne i32 %84, -197, !dbg !4679
  br i1 %cmp98, label %land.lhs.true100, label %if.end106, !dbg !4680

land.lhs.true100:                                 ; preds = %for.end
  %85 = load i32, ptr %old_state, align 4, !dbg !4681, !tbaa !3959
  %cmp101 = icmp sge i32 %85, 6, !dbg !4682
  br i1 %cmp101, label %if.then103, label %if.end106, !dbg !4683

if.then103:                                       ; preds = %land.lhs.true100
  %86 = load ptr, ptr %rkb.addr, align 8, !dbg !4684, !tbaa !3910
  %rkb_rk104 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %86, i32 0, i32 32, !dbg !4685
  %87 = load ptr, ptr %rkb_rk104, align 8, !dbg !4685, !tbaa !4139
  %call105 = call i32 @rd_kafka_metadata_refresh_known_topics(ptr noundef %87, ptr noundef null, i8 noundef zeroext 1, ptr noundef @.str.25), !dbg !4686
  br label %if.end106, !dbg !4686

if.end106:                                        ; preds = %if.then103, %land.lhs.true100, %for.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp) #16, !dbg !4687
  call void @llvm.lifetime.end.p0(i64 4, ptr %old_state) #16, !dbg !4687
  call void @llvm.lifetime.end.p0(i64 24, ptr %tmpq) #16, !dbg !4687
  call void @llvm.lifetime.end.p0(i64 24, ptr %tmpq_waitresp) #16, !dbg !4687
  call void @llvm.lifetime.end.p0(i64 24, ptr %ap) #16, !dbg !4687
  ret void, !dbg !4687
}

declare !dbg !4688 i32 @thrd_is_current(i64 noundef) #3

; Function Attrs: noreturn
declare !dbg !4691 void @rd_kafka_crash(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) #7

declare !dbg !4694 void @rd_kafka_transport_close(ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_refcnt_sub0(ptr noundef %R) #4 !dbg !4697 {
entry:
  %R.addr = alloca ptr, align 8
  %r = alloca i32, align 4
  store ptr %R, ptr %R.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %R.addr, metadata !4702, metadata !DIExpression()), !dbg !4704
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !4705
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !4703, metadata !DIExpression()), !dbg !4706
  %0 = load ptr, ptr %R.addr, align 8, !dbg !4707, !tbaa !3910
  %call = call i32 @rd_atomic32_sub(ptr noundef %0, i32 noundef 1), !dbg !4708
  store i32 %call, ptr %r, align 4, !dbg !4709, !tbaa !3959
  %1 = load i32, ptr %r, align 4, !dbg !4710, !tbaa !3959
  %cmp = icmp slt i32 %1, 0, !dbg !4712
  br i1 %cmp, label %if.then, label %if.end, !dbg !4713

if.then:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.97, ptr noundef @.str.98, i32 noundef 351, ptr noundef @__PRETTY_FUNCTION__.rd_refcnt_sub0) #18, !dbg !4714
  unreachable, !dbg !4714

if.end:                                           ; preds = %entry
  %2 = load i32, ptr %r, align 4, !dbg !4717, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !4718
  ret i32 %2, !dbg !4719
}

declare !dbg !4720 void @rd_kafka_buf_destroy_final(ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_set_error(ptr noundef %rkb, i32 noundef %level, i32 noundef %err, ptr noundef %fmt, ptr noundef %ap) #0 !dbg !4723 {
entry:
  %rkb.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %err.addr = alloca i32, align 4
  %fmt.addr = alloca ptr, align 8
  %ap.addr = alloca ptr, align 8
  %errstr = alloca [512 x i8], align 16
  %extra = alloca [128 x i8], align 16
  %of = alloca i64, align 8
  %ofe = alloca i64, align 8
  %identical = alloca i8, align 1
  %suppress = alloca i8, align 1
  %state_duration_ms = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %r = alloca i64, align 8
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !4728, metadata !DIExpression()), !dbg !4748
  store i32 %level, ptr %level.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !4729, metadata !DIExpression()), !dbg !4749
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4730, metadata !DIExpression()), !dbg !4750
  store ptr %fmt, ptr %fmt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %fmt.addr, metadata !4731, metadata !DIExpression()), !dbg !4751
  store ptr %ap, ptr %ap.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ap.addr, metadata !4732, metadata !DIExpression()), !dbg !4752
  call void @llvm.lifetime.start.p0(i64 512, ptr %errstr) #16, !dbg !4753
  tail call void @llvm.dbg.declare(metadata ptr %errstr, metadata !4733, metadata !DIExpression()), !dbg !4754
  call void @llvm.lifetime.start.p0(i64 128, ptr %extra) #16, !dbg !4755
  tail call void @llvm.dbg.declare(metadata ptr %extra, metadata !4734, metadata !DIExpression()), !dbg !4756
  call void @llvm.lifetime.start.p0(i64 8, ptr %of) #16, !dbg !4757
  tail call void @llvm.dbg.declare(metadata ptr %of, metadata !4735, metadata !DIExpression()), !dbg !4758
  store i64 0, ptr %of, align 8, !dbg !4758, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %ofe) #16, !dbg !4757
  tail call void @llvm.dbg.declare(metadata ptr %ofe, metadata !4736, metadata !DIExpression()), !dbg !4759
  call void @llvm.lifetime.start.p0(i64 1, ptr %identical) #16, !dbg !4760
  tail call void @llvm.dbg.declare(metadata ptr %identical, metadata !4737, metadata !DIExpression()), !dbg !4761
  call void @llvm.lifetime.start.p0(i64 1, ptr %suppress) #16, !dbg !4760
  tail call void @llvm.dbg.declare(metadata ptr %suppress, metadata !4738, metadata !DIExpression()), !dbg !4762
  call void @llvm.lifetime.start.p0(i64 4, ptr %state_duration_ms) #16, !dbg !4763
  tail call void @llvm.dbg.declare(metadata ptr %state_duration_ms, metadata !4739, metadata !DIExpression()), !dbg !4764
  %call = call i64 @rd_clock(), !dbg !4765
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !4766, !tbaa !3910
  %rkb_ts_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 20, !dbg !4767
  %1 = load i64, ptr %rkb_ts_state, align 8, !dbg !4767, !tbaa !4301
  %sub = sub nsw i64 %call, %1, !dbg !4768
  %div = sdiv i64 %sub, 1000, !dbg !4769
  %conv = trunc i64 %div to i32, !dbg !4770
  store i32 %conv, ptr %state_duration_ms, align 4, !dbg !4764, !tbaa !3959
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !4771, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 9, !dbg !4771
  %call1 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !4771
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !4772, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 27, !dbg !4774
  %4 = load i32, ptr %rkb_source, align 8, !dbg !4774, !tbaa !4174
  %cmp = icmp eq i32 %4, 3, !dbg !4775
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !4776

land.lhs.true:                                    ; preds = %entry
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !4777, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 43, !dbg !4777
  %arraydecay = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !4777
  %6 = load i8, ptr %arraydecay, align 8, !dbg !4777, !tbaa !4126
  %conv3 = sext i8 %6 to i32, !dbg !4777
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !4777
  br i1 %cmp4, label %if.end14, label %if.then, !dbg !4778

if.then:                                          ; preds = %land.lhs.true
  %arraydecay6 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4779
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !4779, !tbaa !3910
  %rkb_nodename7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 43, !dbg !4779
  %arraydecay8 = getelementptr inbounds [256 x i8], ptr %rkb_nodename7, i64 0, i64 0, !dbg !4779
  %call9 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay6, i64 noundef 512, ptr noundef @.str.99, ptr noundef %arraydecay8) #16, !dbg !4779
  %conv10 = sext i32 %call9 to i64, !dbg !4781
  store i64 %conv10, ptr %of, align 8, !dbg !4782, !tbaa !4039
  %8 = load i64, ptr %of, align 8, !dbg !4783, !tbaa !4039
  %cmp11 = icmp ugt i64 %8, 512, !dbg !4785
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !4786

if.then13:                                        ; preds = %if.then
  store i64 0, ptr %of, align 8, !dbg !4787, !tbaa !4039
  br label %if.end, !dbg !4788

if.end:                                           ; preds = %if.then13, %if.then
  br label %if.end14, !dbg !4789

if.end14:                                         ; preds = %if.end, %land.lhs.true, %entry
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !4790, !tbaa !3910
  %rkb_lock15 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 9, !dbg !4790
  %call16 = call i32 @mtx_unlock(ptr noundef %rkb_lock15), !dbg !4790
  %arraydecay17 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4791
  %10 = load i64, ptr %of, align 8, !dbg !4791, !tbaa !4039
  %add.ptr = getelementptr inbounds i8, ptr %arraydecay17, i64 %10, !dbg !4791
  %11 = load i64, ptr %of, align 8, !dbg !4791, !tbaa !4039
  %sub18 = sub i64 512, %11, !dbg !4791
  %12 = load ptr, ptr %fmt.addr, align 8, !dbg !4791, !tbaa !3910
  %13 = load ptr, ptr %ap.addr, align 8, !dbg !4791, !tbaa !3910
  %call19 = call i32 @vsnprintf(ptr noundef %add.ptr, i64 noundef %sub18, ptr noundef %12, ptr noundef %13) #16, !dbg !4791
  %conv20 = sext i32 %call19 to i64, !dbg !4792
  store i64 %conv20, ptr %ofe, align 8, !dbg !4793, !tbaa !4039
  %14 = load i64, ptr %ofe, align 8, !dbg !4794, !tbaa !4039
  %15 = load i64, ptr %of, align 8, !dbg !4796, !tbaa !4039
  %sub21 = sub i64 512, %15, !dbg !4797
  %cmp22 = icmp ugt i64 %14, %sub21, !dbg !4798
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !4799

if.then24:                                        ; preds = %if.end14
  %16 = load i64, ptr %of, align 8, !dbg !4800, !tbaa !4039
  %sub25 = sub i64 512, %16, !dbg !4801
  store i64 %sub25, ptr %ofe, align 8, !dbg !4802, !tbaa !4039
  br label %if.end26, !dbg !4803

if.end26:                                         ; preds = %if.then24, %if.end14
  %17 = load i64, ptr %ofe, align 8, !dbg !4804, !tbaa !4039
  %18 = load i64, ptr %of, align 8, !dbg !4805, !tbaa !4039
  %add = add i64 %18, %17, !dbg !4805
  store i64 %add, ptr %of, align 8, !dbg !4805, !tbaa !4039
  %19 = load i32, ptr %err.addr, align 4, !dbg !4806, !tbaa !4126
  %cmp27 = icmp eq i32 %19, -195, !dbg !4808
  br i1 %cmp27, label %land.lhs.true29, label %if.end63, !dbg !4809

land.lhs.true29:                                  ; preds = %if.end26
  %arraydecay30 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4810
  %call31 = call i32 @strcmp(ptr noundef %arraydecay30, ptr noundef @.str.37) #19, !dbg !4811
  %tobool = icmp ne i32 %call31, 0, !dbg !4811
  br i1 %tobool, label %if.end63, label %if.then32, !dbg !4812

if.then32:                                        ; preds = %land.lhs.true29
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !4813, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 19, !dbg !4816
  %21 = load i32, ptr %rkb_state, align 4, !dbg !4816, !tbaa !4130
  %cmp33 = icmp eq i32 %21, 8, !dbg !4817
  br i1 %cmp33, label %if.then35, label %if.else44, !dbg !4818

if.then35:                                        ; preds = %if.then32
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !4819, !tbaa !3910
  %rkb_proto = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 58, !dbg !4822
  %23 = load i32, ptr %rkb_proto, align 8, !dbg !4822, !tbaa !4314
  %cmp36 = icmp ne i32 %23, 1, !dbg !4823
  br i1 %cmp36, label %land.lhs.true38, label %if.else, !dbg !4824

land.lhs.true38:                                  ; preds = %if.then35
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !4825, !tbaa !3910
  %rkb_proto39 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 58, !dbg !4826
  %25 = load i32, ptr %rkb_proto39, align 8, !dbg !4826, !tbaa !4314
  %cmp40 = icmp ne i32 %25, 3, !dbg !4827
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !4828

if.then42:                                        ; preds = %land.lhs.true38
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !4829, !tbaa !3910
  %27 = load i32, ptr %level.addr, align 4, !dbg !4830, !tbaa !3959
  %28 = load i32, ptr %err.addr, align 4, !dbg !4831, !tbaa !4126
  %29 = load ptr, ptr %ap.addr, align 8, !dbg !4832, !tbaa !3910
  call void @rd_kafka_broker_set_error(ptr noundef %26, i32 noundef %27, i32 noundef %28, ptr noundef @.str.100, ptr noundef %29), !dbg !4833
  br label %if.end43, !dbg !4833

if.else:                                          ; preds = %land.lhs.true38, %if.then35
  %30 = load ptr, ptr %rkb.addr, align 8, !dbg !4834, !tbaa !3910
  %31 = load i32, ptr %level.addr, align 4, !dbg !4835, !tbaa !3959
  %32 = load i32, ptr %err.addr, align 4, !dbg !4836, !tbaa !4126
  %33 = load ptr, ptr %ap.addr, align 8, !dbg !4837, !tbaa !3910
  call void @rd_kafka_broker_set_error(ptr noundef %30, i32 noundef %31, i32 noundef %32, ptr noundef @.str.101, ptr noundef %33), !dbg !4838
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then42
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4839

if.else44:                                        ; preds = %if.then32
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !4840, !tbaa !3910
  %rkb_state45 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 19, !dbg !4842
  %35 = load i32, ptr %rkb_state45, align 4, !dbg !4842, !tbaa !4130
  %cmp46 = icmp eq i32 %35, 6, !dbg !4843
  br i1 %cmp46, label %land.lhs.true48, label %if.end61, !dbg !4844

land.lhs.true48:                                  ; preds = %if.else44
  %36 = load i32, ptr %state_duration_ms, align 4, !dbg !4845, !tbaa !3959
  %cmp49 = icmp slt i32 %36, 2000, !dbg !4846
  br i1 %cmp49, label %land.lhs.true51, label %if.end61, !dbg !4847

land.lhs.true51:                                  ; preds = %land.lhs.true48
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !4848, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 32, !dbg !4849
  %38 = load ptr, ptr %rkb_rk, align 8, !dbg !4849, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %38, i32 0, i32 18, !dbg !4850
  %security_protocol = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 38, !dbg !4851
  %39 = load i32, ptr %security_protocol, align 8, !dbg !4851, !tbaa !4852
  %cmp52 = icmp ne i32 %39, 3, !dbg !4853
  br i1 %cmp52, label %land.lhs.true54, label %if.end61, !dbg !4854

land.lhs.true54:                                  ; preds = %land.lhs.true51
  %40 = load ptr, ptr %rkb.addr, align 8, !dbg !4855, !tbaa !3910
  %rkb_rk55 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %40, i32 0, i32 32, !dbg !4856
  %41 = load ptr, ptr %rkb_rk55, align 8, !dbg !4856, !tbaa !4139
  %rk_conf56 = getelementptr inbounds %struct.rd_kafka_s, ptr %41, i32 0, i32 18, !dbg !4857
  %security_protocol57 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf56, i32 0, i32 38, !dbg !4858
  %42 = load i32, ptr %security_protocol57, align 8, !dbg !4858, !tbaa !4852
  %cmp58 = icmp ne i32 %42, 2, !dbg !4859
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !4860

if.then60:                                        ; preds = %land.lhs.true54
  %43 = load ptr, ptr %rkb.addr, align 8, !dbg !4861, !tbaa !3910
  %44 = load i32, ptr %level.addr, align 4, !dbg !4863, !tbaa !3959
  %45 = load i32, ptr %err.addr, align 4, !dbg !4864, !tbaa !4126
  %46 = load ptr, ptr %ap.addr, align 8, !dbg !4865, !tbaa !3910
  call void @rd_kafka_broker_set_error(ptr noundef %43, i32 noundef %44, i32 noundef %45, ptr noundef @.str.102, ptr noundef %46), !dbg !4866
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4867

if.end61:                                         ; preds = %land.lhs.true54, %land.lhs.true51, %land.lhs.true48, %if.else44
  br label %if.end62

if.end62:                                         ; preds = %if.end61
  br label %if.end63, !dbg !4868

if.end63:                                         ; preds = %if.end62, %land.lhs.true29, %if.end26
  %47 = load i32, ptr %err.addr, align 4, !dbg !4869, !tbaa !4126
  %48 = load ptr, ptr %rkb.addr, align 8, !dbg !4870, !tbaa !3910
  %rkb_last_err = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %48, i32 0, i32 61, !dbg !4871
  %err64 = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err, i32 0, i32 1, !dbg !4872
  %49 = load i32, ptr %err64, align 8, !dbg !4872, !tbaa !4873
  %cmp65 = icmp eq i32 %47, %49, !dbg !4874
  br i1 %cmp65, label %land.rhs, label %land.end, !dbg !4875

land.rhs:                                         ; preds = %if.end63
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !4876, !tbaa !3910
  %rkb_last_err67 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 61, !dbg !4877
  %errstr68 = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err67, i32 0, i32 0, !dbg !4878
  %arraydecay69 = getelementptr inbounds [512 x i8], ptr %errstr68, i64 0, i64 0, !dbg !4876
  %arraydecay70 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4879
  %call71 = call i32 @strcmp(ptr noundef %arraydecay69, ptr noundef %arraydecay70) #19, !dbg !4880
  %tobool72 = icmp ne i32 %call71, 0, !dbg !4881
  %lnot = xor i1 %tobool72, true, !dbg !4881
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end63
  %51 = phi i1 [ false, %if.end63 ], [ %lnot, %land.rhs ], !dbg !4882
  %land.ext = zext i1 %51 to i32, !dbg !4875
  %conv73 = trunc i32 %land.ext to i8, !dbg !4869
  store i8 %conv73, ptr %identical, align 1, !dbg !4883, !tbaa !4126
  %52 = load i8, ptr %identical, align 1, !dbg !4884, !tbaa !4126
  %conv74 = zext i8 %52 to i32, !dbg !4884
  %tobool75 = icmp ne i32 %conv74, 0, !dbg !4884
  br i1 %tobool75, label %land.rhs76, label %land.end80, !dbg !4885

land.rhs76:                                       ; preds = %land.end
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !4886, !tbaa !3910
  %rkb_suppress = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %53, i32 0, i32 60, !dbg !4886
  %fail_error = getelementptr inbounds %struct.anon.9, ptr %rkb_suppress, i32 0, i32 3, !dbg !4886
  %call77 = call i64 @rd_interval0(ptr noundef %fail_error, i64 noundef 30000000, i64 noundef 0, i32 noundef 0), !dbg !4886
  %cmp78 = icmp sle i64 %call77, 0, !dbg !4887
  br label %land.end80

land.end80:                                       ; preds = %land.rhs76, %land.end
  %54 = phi i1 [ false, %land.end ], [ %cmp78, %land.rhs76 ], !dbg !4882
  %land.ext81 = zext i1 %54 to i32, !dbg !4885
  %conv82 = trunc i32 %land.ext81 to i8, !dbg !4884
  store i8 %conv82, ptr %suppress, align 1, !dbg !4888, !tbaa !4126
  %55 = load i32, ptr %err.addr, align 4, !dbg !4889, !tbaa !4126
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !4890, !tbaa !3910
  %rkb_last_err83 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 61, !dbg !4891
  %err84 = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err83, i32 0, i32 1, !dbg !4892
  store i32 %55, ptr %err84, align 8, !dbg !4893, !tbaa !4873
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !4894, !tbaa !3910
  %rkb_last_err85 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %57, i32 0, i32 61, !dbg !4895
  %errstr86 = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err85, i32 0, i32 0, !dbg !4896
  %arraydecay87 = getelementptr inbounds [512 x i8], ptr %errstr86, i64 0, i64 0, !dbg !4894
  %arraydecay88 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4897
  call void @rd_strlcpy(ptr noundef %arraydecay87, ptr noundef %arraydecay88, i64 noundef 512), !dbg !4898
  %arraydecay89 = getelementptr inbounds [128 x i8], ptr %extra, i64 0, i64 0, !dbg !4899
  %58 = load i32, ptr %state_duration_ms, align 4, !dbg !4899, !tbaa !3959
  %59 = load ptr, ptr %rkb.addr, align 8, !dbg !4899, !tbaa !3910
  %rkb_state90 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 19, !dbg !4899
  %60 = load i32, ptr %rkb_state90, align 4, !dbg !4899, !tbaa !4130
  %idxprom = zext i32 %60 to i64, !dbg !4899
  %arrayidx = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom, !dbg !4899
  %61 = load ptr, ptr %arrayidx, align 8, !dbg !4899, !tbaa !3910
  %call91 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay89, i64 noundef 128, ptr noundef @.str.103, i32 noundef %58, ptr noundef %61) #16, !dbg !4899
  %conv92 = sext i32 %call91 to i64, !dbg !4899
  store i64 %conv92, ptr %ofe, align 8, !dbg !4900, !tbaa !4039
  %62 = load i8, ptr %identical, align 1, !dbg !4901, !tbaa !4126
  %conv93 = zext i8 %62 to i32, !dbg !4901
  %tobool94 = icmp ne i32 %conv93, 0, !dbg !4901
  br i1 %tobool94, label %land.lhs.true95, label %if.end120, !dbg !4902

land.lhs.true95:                                  ; preds = %land.end80
  %63 = load i8, ptr %suppress, align 1, !dbg !4903, !tbaa !4126
  %tobool96 = icmp ne i8 %63, 0, !dbg !4903
  br i1 %tobool96, label %if.end120, label %land.lhs.true97, !dbg !4904

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %64 = load ptr, ptr %rkb.addr, align 8, !dbg !4905, !tbaa !3910
  %rkb_last_err98 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %64, i32 0, i32 61, !dbg !4906
  %cnt = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err98, i32 0, i32 2, !dbg !4907
  %65 = load i32, ptr %cnt, align 4, !dbg !4907, !tbaa !4908
  %cmp99 = icmp sge i32 %65, 1, !dbg !4909
  br i1 %cmp99, label %land.lhs.true101, label %if.end120, !dbg !4910

land.lhs.true101:                                 ; preds = %land.lhs.true97
  %66 = load i64, ptr %ofe, align 8, !dbg !4911, !tbaa !4039
  %add102 = add i64 %66, 30, !dbg !4912
  %cmp103 = icmp ult i64 %add102, 128, !dbg !4913
  br i1 %cmp103, label %if.then105, label %if.end120, !dbg !4914

if.then105:                                       ; preds = %land.lhs.true101
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #16, !dbg !4915
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !4740, metadata !DIExpression()), !dbg !4916
  %arraydecay106 = getelementptr inbounds [128 x i8], ptr %extra, i64 0, i64 0, !dbg !4917
  %67 = load i64, ptr %ofe, align 8, !dbg !4917, !tbaa !4039
  %add.ptr107 = getelementptr inbounds i8, ptr %arraydecay106, i64 %67, !dbg !4917
  %68 = load i64, ptr %ofe, align 8, !dbg !4917, !tbaa !4039
  %sub108 = sub i64 128, %68, !dbg !4917
  %69 = load ptr, ptr %rkb.addr, align 8, !dbg !4917, !tbaa !3910
  %rkb_last_err109 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %69, i32 0, i32 61, !dbg !4917
  %cnt110 = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err109, i32 0, i32 2, !dbg !4917
  %70 = load i32, ptr %cnt110, align 4, !dbg !4917, !tbaa !4908
  %call111 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %add.ptr107, i64 noundef %sub108, ptr noundef @.str.104, i32 noundef %70) #16, !dbg !4917
  %conv112 = sext i32 %call111 to i64, !dbg !4918
  store i64 %conv112, ptr %r, align 8, !dbg !4916, !tbaa !4039
  %71 = load i64, ptr %r, align 8, !dbg !4919, !tbaa !4039
  %72 = load i64, ptr %ofe, align 8, !dbg !4921, !tbaa !4039
  %sub113 = sub i64 128, %72, !dbg !4922
  %cmp114 = icmp ult i64 %71, %sub113, !dbg !4923
  br i1 %cmp114, label %if.then116, label %if.else118, !dbg !4924

if.then116:                                       ; preds = %if.then105
  %73 = load i64, ptr %r, align 8, !dbg !4925, !tbaa !4039
  %74 = load i64, ptr %ofe, align 8, !dbg !4926, !tbaa !4039
  %add117 = add i64 %74, %73, !dbg !4926
  store i64 %add117, ptr %ofe, align 8, !dbg !4926, !tbaa !4039
  br label %if.end119, !dbg !4927

if.else118:                                       ; preds = %if.then105
  store i64 128, ptr %ofe, align 8, !dbg !4928, !tbaa !4039
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.then116
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #16, !dbg !4929
  br label %if.end120, !dbg !4930

if.end120:                                        ; preds = %if.end119, %land.lhs.true101, %land.lhs.true97, %land.lhs.true95, %land.end80
  %75 = load i64, ptr %ofe, align 8, !dbg !4931, !tbaa !4039
  %cmp121 = icmp ugt i64 %75, 0, !dbg !4933
  br i1 %cmp121, label %land.lhs.true123, label %if.end134, !dbg !4934

land.lhs.true123:                                 ; preds = %if.end120
  %76 = load i64, ptr %of, align 8, !dbg !4935, !tbaa !4039
  %77 = load i64, ptr %ofe, align 8, !dbg !4936, !tbaa !4039
  %add124 = add i64 %76, %77, !dbg !4937
  %add125 = add i64 %add124, 4, !dbg !4938
  %cmp126 = icmp ult i64 %add125, 512, !dbg !4939
  br i1 %cmp126, label %if.then128, label %if.end134, !dbg !4940

if.then128:                                       ; preds = %land.lhs.true123
  %arraydecay129 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4941
  %78 = load i64, ptr %of, align 8, !dbg !4941, !tbaa !4039
  %add.ptr130 = getelementptr inbounds i8, ptr %arraydecay129, i64 %78, !dbg !4941
  %79 = load i64, ptr %of, align 8, !dbg !4941, !tbaa !4039
  %sub131 = sub i64 512, %79, !dbg !4941
  %arraydecay132 = getelementptr inbounds [128 x i8], ptr %extra, i64 0, i64 0, !dbg !4941
  %call133 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %add.ptr130, i64 noundef %sub131, ptr noundef @.str.105, ptr noundef %arraydecay132) #16, !dbg !4941
  br label %if.end134, !dbg !4941

if.end134:                                        ; preds = %if.then128, %land.lhs.true123, %if.end120
  %80 = load i32, ptr %err.addr, align 4, !dbg !4942, !tbaa !4126
  %cmp135 = icmp eq i32 %80, -163, !dbg !4944
  br i1 %cmp135, label %land.lhs.true137, label %if.end142, !dbg !4945

land.lhs.true137:                                 ; preds = %if.end134
  %81 = load ptr, ptr %rkb.addr, align 8, !dbg !4946, !tbaa !3910
  %rkb_rk138 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %81, i32 0, i32 32, !dbg !4946
  %82 = load ptr, ptr %rkb_rk138, align 8, !dbg !4946, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %82, i32 0, i32 23, !dbg !4946
  %call139 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !4946
  %and = and i32 %call139, 1, !dbg !4946
  %tobool140 = icmp ne i32 %and, 0, !dbg !4946
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !4947

if.then141:                                       ; preds = %land.lhs.true137
  store i8 1, ptr %suppress, align 1, !dbg !4948, !tbaa !4126
  br label %if.end142, !dbg !4949

if.end142:                                        ; preds = %if.then141, %land.lhs.true137, %if.end134
  %83 = load i8, ptr %suppress, align 1, !dbg !4950, !tbaa !4126
  %tobool143 = icmp ne i8 %83, 0, !dbg !4950
  br i1 %tobool143, label %if.else147, label %if.then144, !dbg !4952

if.then144:                                       ; preds = %if.end142
  %84 = load ptr, ptr %rkb.addr, align 8, !dbg !4953, !tbaa !3910
  %rkb_last_err145 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %84, i32 0, i32 61, !dbg !4954
  %cnt146 = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err145, i32 0, i32 2, !dbg !4955
  store i32 1, ptr %cnt146, align 4, !dbg !4956, !tbaa !4908
  br label %if.end150, !dbg !4953

if.else147:                                       ; preds = %if.end142
  %85 = load ptr, ptr %rkb.addr, align 8, !dbg !4957, !tbaa !3910
  %rkb_last_err148 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %85, i32 0, i32 61, !dbg !4958
  %cnt149 = getelementptr inbounds %struct.anon.10, ptr %rkb_last_err148, i32 0, i32 2, !dbg !4959
  %86 = load i32, ptr %cnt149, align 4, !dbg !4960, !tbaa !4908
  %inc = add nsw i32 %86, 1, !dbg !4960
  store i32 %inc, ptr %cnt149, align 4, !dbg !4960, !tbaa !4908
  br label %if.end150

if.end150:                                        ; preds = %if.else147, %if.then144
  br label %do.body, !dbg !4961

do.body:                                          ; preds = %if.end150
  %87 = load ptr, ptr %rkb.addr, align 8, !dbg !4962, !tbaa !3910
  %rkb_rk151 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %87, i32 0, i32 32, !dbg !4962
  %88 = load ptr, ptr %rkb_rk151, align 8, !dbg !4962, !tbaa !4139
  %rk_conf152 = getelementptr inbounds %struct.rd_kafka_s, ptr %88, i32 0, i32 18, !dbg !4962
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf152, i32 0, i32 13, !dbg !4962
  %89 = load i32, ptr %debug, align 8, !dbg !4962, !tbaa !4140
  %and153 = and i32 %89, 2, !dbg !4962
  %conv154 = sext i32 %and153 to i64, !dbg !4962
  %expval = call i64 @llvm.expect.i64(i64 %conv154, i64 0), !dbg !4962
  %tobool155 = icmp ne i64 %expval, 0, !dbg !4962
  br i1 %tobool155, label %if.then156, label %if.end173, !dbg !4963

if.then156:                                       ; preds = %do.body
  br label %do.body157, !dbg !4964

do.body157:                                       ; preds = %if.then156
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !4965
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !4743, metadata !DIExpression()), !dbg !4965
  %90 = load ptr, ptr %rkb.addr, align 8, !dbg !4965, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %90, i32 0, i32 49, !dbg !4965
  %call158 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !4965
  %arraydecay159 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !4965
  %91 = load ptr, ptr %rkb.addr, align 8, !dbg !4965, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %91, i32 0, i32 48, !dbg !4965
  %92 = load ptr, ptr %rkb_logname, align 8, !dbg !4965, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay159, ptr noundef %92, i64 noundef 256), !dbg !4965
  %93 = load ptr, ptr %rkb.addr, align 8, !dbg !4965, !tbaa !3910
  %rkb_logname_lock160 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %93, i32 0, i32 49, !dbg !4965
  %call161 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock160), !dbg !4965
  %94 = load ptr, ptr %rkb.addr, align 8, !dbg !4965, !tbaa !3910
  %rkb_rk162 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %94, i32 0, i32 32, !dbg !4965
  %95 = load ptr, ptr %rkb_rk162, align 8, !dbg !4965, !tbaa !4139
  %rk_conf163 = getelementptr inbounds %struct.rd_kafka_s, ptr %95, i32 0, i32 18, !dbg !4965
  %96 = load ptr, ptr %rkb.addr, align 8, !dbg !4965, !tbaa !3910
  %rkb_rk164 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %96, i32 0, i32 32, !dbg !4965
  %97 = load ptr, ptr %rkb_rk164, align 8, !dbg !4965, !tbaa !4139
  %arraydecay165 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !4965
  %arraydecay166 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4965
  %98 = load i32, ptr %err.addr, align 4, !dbg !4965, !tbaa !4126
  %call167 = call ptr @rd_kafka_err2name(i32 noundef %98), !dbg !4965
  %99 = load i8, ptr %identical, align 1, !dbg !4965, !tbaa !4126
  %conv168 = zext i8 %99 to i32, !dbg !4965
  %tobool169 = icmp ne i32 %conv168, 0, !dbg !4965
  %100 = zext i1 %tobool169 to i64, !dbg !4965
  %cond = select i1 %tobool169, ptr @.str.108, ptr @.str.85, !dbg !4965
  %101 = load i8, ptr %suppress, align 1, !dbg !4965, !tbaa !4126
  %conv170 = zext i8 %101 to i32, !dbg !4965
  %tobool171 = icmp ne i32 %conv170, 0, !dbg !4965
  %102 = zext i1 %tobool171 to i64, !dbg !4965
  %cond172 = select i1 %tobool171, ptr @.str.109, ptr @.str.85, !dbg !4965
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf163, ptr noundef %97, ptr noundef %arraydecay165, i32 noundef 7, i32 noundef 2, ptr noundef @.str.106, ptr noundef @.str.107, ptr noundef %arraydecay166, ptr noundef %call167, ptr noundef %cond, ptr noundef %cond172), !dbg !4965
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !4964
  br label %do.cond, !dbg !4965

do.cond:                                          ; preds = %do.body157
  br label %do.end, !dbg !4965

do.end:                                           ; preds = %do.cond
  br label %if.end173, !dbg !4964

if.end173:                                        ; preds = %do.end, %do.body
  br label %do.cond174, !dbg !4963

do.cond174:                                       ; preds = %if.end173
  br label %do.end175, !dbg !4963

do.end175:                                        ; preds = %do.cond174
  %103 = load i32, ptr %level.addr, align 4, !dbg !4966, !tbaa !3959
  %cmp176 = icmp ne i32 %103, 7, !dbg !4968
  br i1 %cmp176, label %land.lhs.true178, label %if.end192, !dbg !4969

land.lhs.true178:                                 ; preds = %do.end175
  %104 = load i32, ptr %level.addr, align 4, !dbg !4970, !tbaa !3959
  %cmp179 = icmp sle i32 %104, 2, !dbg !4971
  br i1 %cmp179, label %if.then182, label %lor.lhs.false, !dbg !4972

lor.lhs.false:                                    ; preds = %land.lhs.true178
  %105 = load i8, ptr %suppress, align 1, !dbg !4973, !tbaa !4126
  %tobool181 = icmp ne i8 %105, 0, !dbg !4973
  br i1 %tobool181, label %if.end192, label %if.then182, !dbg !4974

if.then182:                                       ; preds = %lor.lhs.false, %land.lhs.true178
  %106 = load ptr, ptr %rkb.addr, align 8, !dbg !4975, !tbaa !3910
  %rkb_rk183 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %106, i32 0, i32 32, !dbg !4975
  %107 = load ptr, ptr %rkb_rk183, align 8, !dbg !4975, !tbaa !4139
  %rk_conf184 = getelementptr inbounds %struct.rd_kafka_s, ptr %107, i32 0, i32 18, !dbg !4975
  %108 = load ptr, ptr %rkb.addr, align 8, !dbg !4975, !tbaa !3910
  %rkb_rk185 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %108, i32 0, i32 32, !dbg !4975
  %109 = load ptr, ptr %rkb_rk185, align 8, !dbg !4975, !tbaa !4139
  %110 = load i32, ptr %level.addr, align 4, !dbg !4975, !tbaa !3959
  %111 = load ptr, ptr %rkb.addr, align 8, !dbg !4975, !tbaa !3910
  %rkb_name = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %111, i32 0, i32 42, !dbg !4975
  %arraydecay186 = getelementptr inbounds [256 x i8], ptr %rkb_name, i64 0, i64 0, !dbg !4975
  %arraydecay187 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4975
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf184, ptr noundef %109, ptr noundef null, i32 noundef %110, i32 noundef 0, ptr noundef @.str.106, ptr noundef @.str.110, ptr noundef %arraydecay186, ptr noundef %arraydecay187), !dbg !4975
  %112 = load ptr, ptr %rkb.addr, align 8, !dbg !4977, !tbaa !3910
  %rkb_rk188 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %112, i32 0, i32 32, !dbg !4978
  %113 = load ptr, ptr %rkb_rk188, align 8, !dbg !4978, !tbaa !4139
  %rk_rep = getelementptr inbounds %struct.rd_kafka_s, ptr %113, i32 0, i32 0, !dbg !4979
  %114 = load ptr, ptr %rk_rep, align 8, !dbg !4979, !tbaa !4216
  %115 = load i32, ptr %err.addr, align 4, !dbg !4980, !tbaa !4126
  %116 = load ptr, ptr %rkb.addr, align 8, !dbg !4981, !tbaa !3910
  %rkb_name189 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %116, i32 0, i32 42, !dbg !4982
  %arraydecay190 = getelementptr inbounds [256 x i8], ptr %rkb_name189, i64 0, i64 0, !dbg !4981
  %arraydecay191 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !4983
  call void (ptr, i32, ptr, ...) @rd_kafka_q_op_err(ptr noundef %114, i32 noundef %115, ptr noundef @.str.110, ptr noundef %arraydecay190, ptr noundef %arraydecay191), !dbg !4984
  br label %if.end192, !dbg !4985

if.end192:                                        ; preds = %if.then182, %lor.lhs.false, %do.end175
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4986
  br label %cleanup, !dbg !4986

cleanup:                                          ; preds = %if.end192, %if.then60, %if.end43
  call void @llvm.lifetime.end.p0(i64 4, ptr %state_duration_ms) #16, !dbg !4986
  call void @llvm.lifetime.end.p0(i64 1, ptr %suppress) #16, !dbg !4986
  call void @llvm.lifetime.end.p0(i64 1, ptr %identical) #16, !dbg !4986
  call void @llvm.lifetime.end.p0(i64 8, ptr %ofe) #16, !dbg !4986
  call void @llvm.lifetime.end.p0(i64 8, ptr %of) #16, !dbg !4986
  call void @llvm.lifetime.end.p0(i64 128, ptr %extra) #16, !dbg !4986
  call void @llvm.lifetime.end.p0(i64 512, ptr %errstr) #16, !dbg !4986
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4986

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_feature_disable(ptr noundef %rkb, i32 noundef %features) #0 !dbg !4987 {
entry:
  %rkb.addr = alloca ptr, align 8
  %features.addr = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !4989, metadata !DIExpression()), !dbg !4996
  store i32 %features, ptr %features.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %features.addr, metadata !4990, metadata !DIExpression()), !dbg !4997
  %0 = load i32, ptr %features.addr, align 4, !dbg !4998, !tbaa !3959
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !5000, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 23, !dbg !5001
  %2 = load i32, ptr %rkb_features, align 4, !dbg !5001, !tbaa !3938
  %and = and i32 %0, %2, !dbg !5002
  %tobool = icmp ne i32 %and, 0, !dbg !5002
  br i1 %tobool, label %if.end, label %if.then, !dbg !5003

if.then:                                          ; preds = %entry
  br label %do.end17, !dbg !5004

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %features.addr, align 4, !dbg !5005, !tbaa !3959
  %not = xor i32 %3, -1, !dbg !5006
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !5007, !tbaa !3910
  %rkb_features1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 23, !dbg !5008
  %5 = load i32, ptr %rkb_features1, align 4, !dbg !5009, !tbaa !3938
  %and2 = and i32 %5, %not, !dbg !5009
  store i32 %and2, ptr %rkb_features1, align 4, !dbg !5009, !tbaa !3938
  br label %do.body, !dbg !5010

do.body:                                          ; preds = %if.end
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !5011, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 32, !dbg !5011
  %7 = load ptr, ptr %rkb_rk, align 8, !dbg !5011, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 18, !dbg !5011
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !5011
  %8 = load i32, ptr %debug, align 8, !dbg !5011, !tbaa !4140
  %and3 = and i32 %8, 146, !dbg !5011
  %conv = sext i32 %and3 to i64, !dbg !5011
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5011
  %tobool4 = icmp ne i64 %expval, 0, !dbg !5011
  br i1 %tobool4, label %if.then5, label %if.end16, !dbg !5012

if.then5:                                         ; preds = %do.body
  br label %do.body6, !dbg !5013

do.body6:                                         ; preds = %if.then5
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !5014
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !4991, metadata !DIExpression()), !dbg !5014
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !5014, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 49, !dbg !5014
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !5014
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !5014
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !5014, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 48, !dbg !5014
  %11 = load ptr, ptr %rkb_logname, align 8, !dbg !5014, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %11, i64 noundef 256), !dbg !5014
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !5014, !tbaa !3910
  %rkb_logname_lock7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 49, !dbg !5014
  %call8 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock7), !dbg !5014
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !5014, !tbaa !3910
  %rkb_rk9 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 32, !dbg !5014
  %14 = load ptr, ptr %rkb_rk9, align 8, !dbg !5014, !tbaa !4139
  %rk_conf10 = getelementptr inbounds %struct.rd_kafka_s, ptr %14, i32 0, i32 18, !dbg !5014
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !5014, !tbaa !3910
  %rkb_rk11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 32, !dbg !5014
  %16 = load ptr, ptr %rkb_rk11, align 8, !dbg !5014, !tbaa !4139
  %arraydecay12 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !5014
  %17 = load i32, ptr %features.addr, align 4, !dbg !5014, !tbaa !3959
  %call13 = call ptr @rd_kafka_features2str(i32 noundef %17), !dbg !5014
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !5014, !tbaa !3910
  %rkb_features14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 23, !dbg !5014
  %19 = load i32, ptr %rkb_features14, align 4, !dbg !5014, !tbaa !3938
  %call15 = call ptr @rd_kafka_features2str(i32 noundef %19), !dbg !5014
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf10, ptr noundef %16, ptr noundef %arraydecay12, i32 noundef 7, i32 noundef 146, ptr noundef @.str.111, ptr noundef @.str.112, ptr noundef %call13, ptr noundef %call15), !dbg !5014
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !5013
  br label %do.end, !dbg !5014

do.end:                                           ; preds = %do.body6
  br label %if.end16, !dbg !5013

if.end16:                                         ; preds = %do.end, %do.body
  br label %do.end17, !dbg !5012

do.end17:                                         ; preds = %if.then, %if.end16
  ret void, !dbg !5015
}

declare !dbg !5016 i32 @rd_kafka_timer_stop(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_atomic64_set(ptr noundef %ra, i64 noundef %v) #4 !dbg !5020 {
entry:
  %ra.addr = alloca ptr, align 8
  %v.addr = alloca i64, align 8
  %.atomictmp = alloca i64, align 8
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !5025, metadata !DIExpression()), !dbg !5027
  store i64 %v, ptr %v.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !5026, metadata !DIExpression()), !dbg !5028
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !5029, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic64_t, ptr %0, i32 0, i32 0, !dbg !5030
  %1 = load i64, ptr %v.addr, align 8, !dbg !5031, !tbaa !4039
  store i64 %1, ptr %.atomictmp, align 8, !dbg !5032, !tbaa !4039
  %2 = load i64, ptr %.atomictmp, align 8, !dbg !5032
  store atomic i64 %2, ptr %val seq_cst, align 8, !dbg !5032
  %3 = load i64, ptr %v.addr, align 8, !dbg !5033, !tbaa !4039
  ret i64 %3, !dbg !5034
}

declare !dbg !5035 void @rd_kafka_bufq_init(ptr noundef) #3

declare !dbg !5039 void @rd_kafka_bufq_concat(ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_atomic32_init(ptr noundef %ra, i32 noundef %v) #4 !dbg !5042 {
entry:
  %ra.addr = alloca ptr, align 8
  %v.addr = alloca i32, align 4
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !5046, metadata !DIExpression()), !dbg !5048
  store i32 %v, ptr %v.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !5047, metadata !DIExpression()), !dbg !5049
  %0 = load i32, ptr %v.addr, align 4, !dbg !5050, !tbaa !3959
  %1 = load ptr, ptr %ra.addr, align 8, !dbg !5051, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic32_t, ptr %1, i32 0, i32 0, !dbg !5052
  store i32 %0, ptr %val, align 4, !dbg !5053, !tbaa !5054
  ret void, !dbg !5055
}

declare !dbg !5056 void @rd_kafka_bufq_purge(ptr noundef, ptr noundef, i32 noundef) #3

declare !dbg !5059 void @rd_kafka_bufq_connection_reset(ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_strlcpy(ptr noundef %dst, ptr noundef %src, i64 noundef %dstsize) #4 !dbg !5062 {
entry:
  %dst.addr = alloca ptr, align 8
  %src.addr = alloca ptr, align 8
  %dstsize.addr = alloca i64, align 8
  %srclen = alloca i64, align 8
  %copylen = alloca i64, align 8
  store ptr %dst, ptr %dst.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %dst.addr, metadata !5067, metadata !DIExpression()), !dbg !5074
  store ptr %src, ptr %src.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %src.addr, metadata !5068, metadata !DIExpression()), !dbg !5075
  store i64 %dstsize, ptr %dstsize.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %dstsize.addr, metadata !5069, metadata !DIExpression()), !dbg !5076
  %0 = load i64, ptr %dstsize.addr, align 8, !dbg !5077, !tbaa !4039
  %cmp = icmp ugt i64 %0, 0, !dbg !5077
  %conv = zext i1 %cmp to i32, !dbg !5077
  %conv1 = sext i32 %conv to i64, !dbg !5077
  %expval = call i64 @llvm.expect.i64(i64 %conv1, i64 1), !dbg !5077
  %tobool = icmp ne i64 %expval, 0, !dbg !5077
  br i1 %tobool, label %if.then, label %if.end, !dbg !5078

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %srclen) #16, !dbg !5079
  tail call void @llvm.dbg.declare(metadata ptr %srclen, metadata !5070, metadata !DIExpression()), !dbg !5080
  %1 = load ptr, ptr %src.addr, align 8, !dbg !5081, !tbaa !3910
  %call = call i64 @strlen(ptr noundef %1) #19, !dbg !5082
  store i64 %call, ptr %srclen, align 8, !dbg !5080, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %copylen) #16, !dbg !5083
  tail call void @llvm.dbg.declare(metadata ptr %copylen, metadata !5073, metadata !DIExpression()), !dbg !5084
  %2 = load i64, ptr %srclen, align 8, !dbg !5085, !tbaa !4039
  %3 = load i64, ptr %dstsize.addr, align 8, !dbg !5085, !tbaa !4039
  %sub = sub i64 %3, 1, !dbg !5085
  %cmp2 = icmp ult i64 %2, %sub, !dbg !5085
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !5085

cond.true:                                        ; preds = %if.then
  %4 = load i64, ptr %srclen, align 8, !dbg !5085, !tbaa !4039
  br label %cond.end, !dbg !5085

cond.false:                                       ; preds = %if.then
  %5 = load i64, ptr %dstsize.addr, align 8, !dbg !5085, !tbaa !4039
  %sub4 = sub i64 %5, 1, !dbg !5085
  br label %cond.end, !dbg !5085

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub4, %cond.false ], !dbg !5085
  store i64 %cond, ptr %copylen, align 8, !dbg !5084, !tbaa !4039
  %6 = load ptr, ptr %dst.addr, align 8, !dbg !5086, !tbaa !3910
  %7 = load ptr, ptr %src.addr, align 8, !dbg !5087, !tbaa !3910
  %8 = load i64, ptr %copylen, align 8, !dbg !5088, !tbaa !4039
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr align 1 %7, i64 %8, i1 false), !dbg !5089
  %9 = load ptr, ptr %dst.addr, align 8, !dbg !5090, !tbaa !3910
  %10 = load i64, ptr %copylen, align 8, !dbg !5091, !tbaa !4039
  %arrayidx = getelementptr inbounds i8, ptr %9, i64 %10, !dbg !5090
  store i8 0, ptr %arrayidx, align 1, !dbg !5092, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 8, ptr %copylen) #16, !dbg !5093
  call void @llvm.lifetime.end.p0(i64 8, ptr %srclen) #16, !dbg !5093
  br label %if.end, !dbg !5094

if.end:                                           ; preds = %cond.end, %entry
  ret void, !dbg !5095
}

declare !dbg !5096 void @rd_kafka_bufq_dump(ptr noundef, ptr noundef, ptr noundef) #3

declare !dbg !5099 i32 @rd_kafka_toppar_delegate_to_leader(ptr noundef) #3

declare !dbg !5102 i32 @rd_kafka_metadata_refresh_known_topics(ptr noundef, ptr noundef, i8 noundef zeroext, ptr noundef) #3

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_conn_closed(ptr noundef %rkb, i32 noundef %err, ptr noundef %errstr) #0 !dbg !5105 {
entry:
  %rkb.addr = alloca ptr, align 8
  %err.addr = alloca i32, align 4
  %errstr.addr = alloca ptr, align 8
  %log_level = alloca i32, align 4
  %now = alloca i64, align 8
  %minidle = alloca i64, align 8
  %inflight = alloca i32, align 4
  %inqueue = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !5109, metadata !DIExpression()), !dbg !5119
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !5110, metadata !DIExpression()), !dbg !5120
  store ptr %errstr, ptr %errstr.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %errstr.addr, metadata !5111, metadata !DIExpression()), !dbg !5121
  call void @llvm.lifetime.start.p0(i64 4, ptr %log_level) #16, !dbg !5122
  tail call void @llvm.dbg.declare(metadata ptr %log_level, metadata !5112, metadata !DIExpression()), !dbg !5123
  store i32 3, ptr %log_level, align 4, !dbg !5123, !tbaa !3959
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !5124, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !5125
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !5125, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 18, !dbg !5126
  %log_connection_close = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 98, !dbg !5127
  %2 = load i32, ptr %log_connection_close, align 4, !dbg !5127, !tbaa !5128
  %tobool = icmp ne i32 %2, 0, !dbg !5124
  br i1 %tobool, label %if.else, label %if.then, !dbg !5129

if.then:                                          ; preds = %entry
  store i32 7, ptr %log_level, align 4, !dbg !5130, !tbaa !3959
  br label %if.end26, !dbg !5132

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !5133
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !5113, metadata !DIExpression()), !dbg !5134
  %call = call i64 @rd_clock(), !dbg !5135
  store i64 %call, ptr %now, align 8, !dbg !5134, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %minidle) #16, !dbg !5136
  tail call void @llvm.dbg.declare(metadata ptr %minidle, metadata !5116, metadata !DIExpression()), !dbg !5137
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !5138, !tbaa !3910
  %rkb_rk1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 32, !dbg !5138
  %4 = load ptr, ptr %rkb_rk1, align 8, !dbg !5138, !tbaa !4139
  %rk_conf2 = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 18, !dbg !5138
  %socket_timeout_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf2, i32 0, i32 16, !dbg !5138
  %5 = load i32, ptr %socket_timeout_ms, align 4, !dbg !5138, !tbaa !5139
  %cmp = icmp sgt i32 60000, %5, !dbg !5138
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5138

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !5138

cond.false:                                       ; preds = %if.else
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !5138, !tbaa !3910
  %rkb_rk3 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 32, !dbg !5138
  %7 = load ptr, ptr %rkb_rk3, align 8, !dbg !5138, !tbaa !4139
  %rk_conf4 = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 18, !dbg !5138
  %socket_timeout_ms5 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf4, i32 0, i32 16, !dbg !5138
  %8 = load i32, ptr %socket_timeout_ms5, align 4, !dbg !5138, !tbaa !5139
  br label %cond.end, !dbg !5138

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 60000, %cond.true ], [ %8, %cond.false ], !dbg !5138
  %mul = mul nsw i32 %cond, 1000, !dbg !5140
  %conv = sext i32 %mul to i64, !dbg !5138
  store i64 %conv, ptr %minidle, align 8, !dbg !5137, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 4, ptr %inflight) #16, !dbg !5141
  tail call void @llvm.dbg.declare(metadata ptr %inflight, metadata !5117, metadata !DIExpression()), !dbg !5142
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !5143, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 36, !dbg !5143
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_waitresps, i32 0, i32 1, !dbg !5143
  %call6 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !5143
  store i32 %call6, ptr %inflight, align 4, !dbg !5142, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %inqueue) #16, !dbg !5144
  tail call void @llvm.dbg.declare(metadata ptr %inqueue, metadata !5118, metadata !DIExpression()), !dbg !5145
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !5146, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 35, !dbg !5146
  %rkbq_cnt7 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs, i32 0, i32 1, !dbg !5146
  %call8 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt7), !dbg !5146
  store i32 %call8, ptr %inqueue, align 4, !dbg !5145, !tbaa !3959
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !5147, !tbaa !3910
  %rkb_ts_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 20, !dbg !5149
  %12 = load i64, ptr %rkb_ts_state, align 8, !dbg !5149, !tbaa !4301
  %13 = load i64, ptr %minidle, align 8, !dbg !5150, !tbaa !4039
  %add = add nsw i64 %12, %13, !dbg !5151
  %14 = load i64, ptr %now, align 8, !dbg !5152, !tbaa !4039
  %cmp9 = icmp slt i64 %add, %14, !dbg !5153
  br i1 %cmp9, label %land.lhs.true, label %if.else20, !dbg !5154

land.lhs.true:                                    ; preds = %cond.end
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !5155, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 28, !dbg !5156
  %ts_send = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 16, !dbg !5157
  %call11 = call i64 @rd_atomic64_get(ptr noundef %ts_send), !dbg !5158
  %16 = load i64, ptr %minidle, align 8, !dbg !5159, !tbaa !4039
  %add12 = add nsw i64 %call11, %16, !dbg !5160
  %17 = load i64, ptr %now, align 8, !dbg !5161, !tbaa !4039
  %cmp13 = icmp slt i64 %add12, %17, !dbg !5162
  br i1 %cmp13, label %land.lhs.true15, label %if.else20, !dbg !5163

land.lhs.true15:                                  ; preds = %land.lhs.true
  %18 = load i32, ptr %inflight, align 4, !dbg !5164, !tbaa !3959
  %19 = load i32, ptr %inqueue, align 4, !dbg !5165, !tbaa !3959
  %add16 = add nsw i32 %18, %19, !dbg !5166
  %cmp17 = icmp eq i32 %add16, 0, !dbg !5167
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !5168

if.then19:                                        ; preds = %land.lhs.true15
  store i32 7, ptr %log_level, align 4, !dbg !5169, !tbaa !3959
  br label %if.end25, !dbg !5170

if.else20:                                        ; preds = %land.lhs.true15, %land.lhs.true, %cond.end
  %20 = load i32, ptr %inflight, align 4, !dbg !5171, !tbaa !3959
  %cmp21 = icmp sgt i32 %20, 1, !dbg !5173
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !5174

if.then23:                                        ; preds = %if.else20
  store i32 4, ptr %log_level, align 4, !dbg !5175, !tbaa !3959
  br label %if.end, !dbg !5176

if.else24:                                        ; preds = %if.else20
  store i32 6, ptr %log_level, align 4, !dbg !5177, !tbaa !3959
  br label %if.end

if.end:                                           ; preds = %if.else24, %if.then23
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then19
  call void @llvm.lifetime.end.p0(i64 4, ptr %inqueue) #16, !dbg !5178
  call void @llvm.lifetime.end.p0(i64 4, ptr %inflight) #16, !dbg !5178
  call void @llvm.lifetime.end.p0(i64 8, ptr %minidle) #16, !dbg !5178
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !5178
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !5179, !tbaa !3910
  %22 = load i32, ptr %log_level, align 4, !dbg !5180, !tbaa !3959
  %23 = load i32, ptr %err.addr, align 4, !dbg !5181, !tbaa !4126
  %24 = load ptr, ptr %errstr.addr, align 8, !dbg !5182, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %21, i32 noundef %22, i32 noundef %23, ptr noundef @.str.26, ptr noundef %24), !dbg !5183
  call void @llvm.lifetime.end.p0(i64 4, ptr %log_level) #16, !dbg !5184
  ret void, !dbg !5184
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_atomic64_get(ptr noundef %ra) #4 !dbg !5185 {
entry:
  %ra.addr = alloca ptr, align 8
  %.atomictmp = alloca i64, align 8
  %atomic-temp = alloca i64, align 8
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !5189, metadata !DIExpression()), !dbg !5190
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !5191, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic64_t, ptr %0, i32 0, i32 0, !dbg !5191
  store i64 0, ptr %.atomictmp, align 8, !dbg !5191, !tbaa !4039
  %1 = load i64, ptr %.atomictmp, align 8, !dbg !5191
  %2 = atomicrmw add ptr %val, i64 %1 seq_cst, align 8, !dbg !5191
  store i64 %2, ptr %atomic-temp, align 8, !dbg !5191
  %3 = load i64, ptr %atomic-temp, align 8, !dbg !5191, !tbaa !4039
  ret i64 %3, !dbg !5192
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_buf_enq1(ptr noundef %rkb, ptr noundef %rkbuf, ptr noundef %resp_cb, ptr noundef %opaque) #0 !dbg !5193 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  %resp_cb.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !5197, metadata !DIExpression()), !dbg !5201
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !5198, metadata !DIExpression()), !dbg !5202
  store ptr %resp_cb, ptr %resp_cb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %resp_cb.addr, metadata !5199, metadata !DIExpression()), !dbg !5203
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !5200, metadata !DIExpression()), !dbg !5204
  %0 = load ptr, ptr %resp_cb.addr, align 8, !dbg !5205, !tbaa !3910
  %1 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5206, !tbaa !3910
  %rkbuf_cb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %1, i32 0, i32 15, !dbg !5207
  store ptr %0, ptr %rkbuf_cb, align 8, !dbg !5208, !tbaa !5209
  %2 = load ptr, ptr %opaque.addr, align 8, !dbg !5216, !tbaa !3910
  %3 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5217, !tbaa !3910
  %rkbuf_opaque = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %3, i32 0, i32 22, !dbg !5218
  store ptr %2, ptr %rkbuf_opaque, align 8, !dbg !5219, !tbaa !5220
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !5221, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 32, !dbg !5222
  %5 = load ptr, ptr %rkb_rk, align 8, !dbg !5222, !tbaa !4139
  %6 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5223, !tbaa !3910
  call void @rd_kafka_buf_finalize(ptr noundef %5, ptr noundef %6), !dbg !5224
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !5225, !tbaa !3910
  %8 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5226, !tbaa !3910
  call void @rd_kafka_broker_buf_enq0(ptr noundef %7, ptr noundef %8), !dbg !5227
  ret void, !dbg !5228
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_buf_finalize(ptr noundef %rk, ptr noundef %rkbuf) #0 !dbg !5229 {
entry:
  %rk.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  %totsize = alloca i64, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5233, metadata !DIExpression()), !dbg !5236
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !5234, metadata !DIExpression()), !dbg !5237
  call void @llvm.lifetime.start.p0(i64 8, ptr %totsize) #16, !dbg !5238
  tail call void @llvm.dbg.declare(metadata ptr %totsize, metadata !5235, metadata !DIExpression()), !dbg !5239
  %0 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5240, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %0, i32 0, i32 3, !dbg !5240
  %1 = load i32, ptr %rkbuf_flags, align 8, !dbg !5240, !tbaa !5243
  %and = and i32 %1, 128, !dbg !5240
  %tobool = icmp ne i32 %and, 0, !dbg !5240
  br i1 %tobool, label %if.else, label %if.then, !dbg !5244

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5244

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.113, ptr noundef @.str.20, i32 noundef 1106, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_buf_finalize) #18, !dbg !5240
  unreachable, !dbg !5240

if.end:                                           ; preds = %if.then
  %2 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5245, !tbaa !3910
  %rkbuf_flags1 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %2, i32 0, i32 3, !dbg !5247
  %3 = load i32, ptr %rkbuf_flags1, align 8, !dbg !5247, !tbaa !5243
  %and2 = and i32 %3, 64, !dbg !5248
  %tobool3 = icmp ne i32 %and2, 0, !dbg !5248
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5249

if.then4:                                         ; preds = %if.end
  %4 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5250, !tbaa !3910
  %call = call i64 @rd_kafka_buf_write_i8(ptr noundef %4, i8 noundef signext 0), !dbg !5252
  br label %if.end5, !dbg !5253

if.end5:                                          ; preds = %if.then4, %if.end
  %5 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5254, !tbaa !3910
  %rkbuf_buf = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %5, i32 0, i32 5, !dbg !5255
  %call6 = call i64 @rd_buf_len(ptr noundef %rkbuf_buf), !dbg !5256
  %sub = sub i64 %call6, 4, !dbg !5257
  store i64 %sub, ptr %totsize, align 8, !dbg !5258, !tbaa !4039
  %6 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5259, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %6, i32 0, i32 6, !dbg !5260
  %7 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5261, !tbaa !3910
  %rkbuf_buf7 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %7, i32 0, i32 5, !dbg !5262
  call void @rd_slice_init_full(ptr noundef %rkbuf_reader, ptr noundef %rkbuf_buf7), !dbg !5263
  %8 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5264, !tbaa !3910
  %9 = load i64, ptr %totsize, align 8, !dbg !5265, !tbaa !4039
  %conv = trunc i64 %9 to i32, !dbg !5266
  call void @rd_kafka_buf_update_i32(ptr noundef %8, i64 noundef 0, i32 noundef %conv), !dbg !5267
  %10 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5268, !tbaa !3910
  %11 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5269, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %11, i32 0, i32 10, !dbg !5270
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 2, !dbg !5271
  %12 = load i16, ptr %ApiVersion, align 2, !dbg !5271, !tbaa !5272
  call void @rd_kafka_buf_update_i16(ptr noundef %10, i64 noundef 6, i16 noundef signext %12), !dbg !5273
  call void @llvm.lifetime.end.p0(i64 8, ptr %totsize) #16, !dbg !5274
  ret void, !dbg !5274
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_buf_enq0(ptr noundef %rkb, ptr noundef %rkbuf) #0 !dbg !5275 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  %now = alloca i64, align 8
  %prev = alloca ptr, align 8
  %after = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !5279, metadata !DIExpression()), !dbg !5286
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !5280, metadata !DIExpression()), !dbg !5287
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !5288
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !5281, metadata !DIExpression()), !dbg !5289
  br label %do.body, !dbg !5290

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !5291, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !5291
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !5291, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %1), !dbg !5291
  %tobool = icmp ne i32 %call, 0, !dbg !5291
  %lnot = xor i1 %tobool, true, !dbg !5291
  %lnot.ext = zext i1 %lnot to i32, !dbg !5291
  %conv = sext i32 %lnot.ext to i64, !dbg !5291
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5291
  %tobool1 = icmp ne i64 %expval, 0, !dbg !5291
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5294

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !5291, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !5291
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !5291, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 1043, ptr noundef @__FUNCTION__.rd_kafka_broker_buf_enq0, ptr noundef %3, ptr noundef @.str.21) #17, !dbg !5291
  unreachable, !dbg !5291

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !5294

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5294

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !5295, !tbaa !3910
  %rkb_rk2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 32, !dbg !5297
  %5 = load ptr, ptr %rkb_rk2, align 8, !dbg !5297, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 18, !dbg !5298
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 32, !dbg !5299
  %6 = load i32, ptr %sparse_connections, align 4, !dbg !5299, !tbaa !5300
  %tobool3 = icmp ne i32 %6, 0, !dbg !5295
  br i1 %tobool3, label %land.lhs.true, label %if.end9, !dbg !5301

land.lhs.true:                                    ; preds = %do.end
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !5302, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 19, !dbg !5303
  %8 = load i32, ptr %rkb_state, align 4, !dbg !5303, !tbaa !4130
  %cmp = icmp eq i32 %8, 0, !dbg !5304
  br i1 %cmp, label %if.then5, label %if.end9, !dbg !5305

if.then5:                                         ; preds = %land.lhs.true
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !5306, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 55, !dbg !5308
  %internal = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 0, !dbg !5309
  %10 = load i32, ptr %internal, align 4, !dbg !5310, !tbaa !5311
  %inc = add nsw i32 %10, 1, !dbg !5310
  store i32 %inc, ptr %internal, align 4, !dbg !5310, !tbaa !5311
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !5312, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 9, !dbg !5312
  %call6 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !5312
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !5313, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %12, i32 noundef 2), !dbg !5314
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !5315, !tbaa !3910
  %rkb_lock7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 9, !dbg !5315
  %call8 = call i32 @mtx_unlock(ptr noundef %rkb_lock7), !dbg !5315
  br label %if.end9, !dbg !5316

if.end9:                                          ; preds = %if.then5, %land.lhs.true, %do.end
  %call10 = call i64 @rd_clock(), !dbg !5317
  store i64 %call10, ptr %now, align 8, !dbg !5318, !tbaa !4039
  %14 = load i64, ptr %now, align 8, !dbg !5319, !tbaa !4039
  %15 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5320, !tbaa !3910
  %rkbuf_ts_enq = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %15, i32 0, i32 26, !dbg !5321
  store i64 %14, ptr %rkbuf_ts_enq, align 8, !dbg !5322, !tbaa !5323
  %16 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5324, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %16, i32 0, i32 3, !dbg !5325
  %17 = load i32, ptr %rkbuf_flags, align 8, !dbg !5326, !tbaa !5243
  %and = and i32 %17, -33, !dbg !5326
  store i32 %and, ptr %rkbuf_flags, align 8, !dbg !5326, !tbaa !5243
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !5327, !tbaa !3910
  %rkb_rk11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 32, !dbg !5328
  %19 = load ptr, ptr %rkb_rk11, align 8, !dbg !5328, !tbaa !4139
  %20 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5329, !tbaa !3910
  %21 = load i64, ptr %now, align 8, !dbg !5330, !tbaa !4039
  call void @rd_kafka_buf_calc_timeout(ptr noundef %19, ptr noundef %20, i64 noundef %21), !dbg !5331
  %22 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5332, !tbaa !3910
  %rkbuf_prio = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %22, i32 0, i32 4, !dbg !5332
  %23 = load i32, ptr %rkbuf_prio, align 4, !dbg !5332, !tbaa !5333
  %cmp12 = icmp eq i32 %23, 0, !dbg !5332
  %conv13 = zext i1 %cmp12 to i32, !dbg !5332
  %conv14 = sext i32 %conv13 to i64, !dbg !5332
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 1), !dbg !5332
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !5332
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !5334

if.then17:                                        ; preds = %if.end9
  br label %do.body18, !dbg !5335

do.body18:                                        ; preds = %if.then17
  %24 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5337, !tbaa !3910
  %rkbuf_link = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %24, i32 0, i32 0, !dbg !5337
  %tqe_next = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link, i32 0, i32 0, !dbg !5337
  store ptr null, ptr %tqe_next, align 8, !dbg !5337, !tbaa !5339
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !5337, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 35, !dbg !5337
  %rkbq_bufs = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs, i32 0, i32 0, !dbg !5337
  %tqh_last = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs, i32 0, i32 1, !dbg !5337
  %26 = load ptr, ptr %tqh_last, align 8, !dbg !5337, !tbaa !5340
  %27 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5337, !tbaa !3910
  %rkbuf_link19 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %27, i32 0, i32 0, !dbg !5337
  %tqe_prev = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link19, i32 0, i32 1, !dbg !5337
  store ptr %26, ptr %tqe_prev, align 8, !dbg !5337, !tbaa !5341
  %28 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5337, !tbaa !3910
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !5337, !tbaa !3910
  %rkb_outbufs20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 35, !dbg !5337
  %rkbq_bufs21 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs20, i32 0, i32 0, !dbg !5337
  %tqh_last22 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs21, i32 0, i32 1, !dbg !5337
  %30 = load ptr, ptr %tqh_last22, align 8, !dbg !5337, !tbaa !5340
  store ptr %28, ptr %30, align 8, !dbg !5337, !tbaa !3910
  %31 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5337, !tbaa !3910
  %rkbuf_link23 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %31, i32 0, i32 0, !dbg !5337
  %tqe_next24 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link23, i32 0, i32 0, !dbg !5337
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !5337, !tbaa !3910
  %rkb_outbufs25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 35, !dbg !5337
  %rkbq_bufs26 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs25, i32 0, i32 0, !dbg !5337
  %tqh_last27 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs26, i32 0, i32 1, !dbg !5337
  store ptr %tqe_next24, ptr %tqh_last27, align 8, !dbg !5337, !tbaa !5340
  br label %do.cond28, !dbg !5337

do.cond28:                                        ; preds = %do.body18
  br label %do.end29, !dbg !5337

do.end29:                                         ; preds = %do.cond28
  br label %if.end111, !dbg !5342

if.else:                                          ; preds = %if.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %prev) #16, !dbg !5343
  tail call void @llvm.dbg.declare(metadata ptr %prev, metadata !5282, metadata !DIExpression()), !dbg !5344
  call void @llvm.lifetime.start.p0(i64 8, ptr %after) #16, !dbg !5343
  tail call void @llvm.dbg.declare(metadata ptr %after, metadata !5285, metadata !DIExpression()), !dbg !5345
  store ptr null, ptr %after, align 8, !dbg !5345, !tbaa !3910
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !5346, !tbaa !3910
  %rkb_outbufs30 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 35, !dbg !5346
  %rkbq_bufs31 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs30, i32 0, i32 0, !dbg !5346
  %tqh_first = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs31, i32 0, i32 0, !dbg !5346
  %34 = load ptr, ptr %tqh_first, align 8, !dbg !5346, !tbaa !5348
  store ptr %34, ptr %prev, align 8, !dbg !5346, !tbaa !3910
  br label %for.cond, !dbg !5346

for.cond:                                         ; preds = %for.inc, %if.else
  %35 = load ptr, ptr %prev, align 8, !dbg !5349, !tbaa !3910
  %cmp32 = icmp ne ptr %35, null, !dbg !5349
  br i1 %cmp32, label %for.body, label %for.end, !dbg !5346

for.body:                                         ; preds = %for.cond
  %36 = load ptr, ptr %prev, align 8, !dbg !5351, !tbaa !3910
  %rkbuf_prio34 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %36, i32 0, i32 4, !dbg !5354
  %37 = load i32, ptr %rkbuf_prio34, align 4, !dbg !5354, !tbaa !5333
  %38 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5355, !tbaa !3910
  %rkbuf_prio35 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %38, i32 0, i32 4, !dbg !5356
  %39 = load i32, ptr %rkbuf_prio35, align 4, !dbg !5356, !tbaa !5333
  %cmp36 = icmp ult i32 %37, %39, !dbg !5357
  br i1 %cmp36, label %land.lhs.true38, label %if.end42, !dbg !5358

land.lhs.true38:                                  ; preds = %for.body
  %40 = load ptr, ptr %prev, align 8, !dbg !5359, !tbaa !3910
  %rkbuf_corrid = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %40, i32 0, i32 1, !dbg !5360
  %41 = load i32, ptr %rkbuf_corrid, align 8, !dbg !5360, !tbaa !5361
  %cmp39 = icmp eq i32 %41, 0, !dbg !5362
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !5363

if.then41:                                        ; preds = %land.lhs.true38
  br label %for.end, !dbg !5364

if.end42:                                         ; preds = %land.lhs.true38, %for.body
  %42 = load ptr, ptr %prev, align 8, !dbg !5365, !tbaa !3910
  store ptr %42, ptr %after, align 8, !dbg !5366, !tbaa !3910
  br label %for.inc, !dbg !5367

for.inc:                                          ; preds = %if.end42
  %43 = load ptr, ptr %prev, align 8, !dbg !5349, !tbaa !3910
  %rkbuf_link43 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %43, i32 0, i32 0, !dbg !5349
  %tqe_next44 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link43, i32 0, i32 0, !dbg !5349
  %44 = load ptr, ptr %tqe_next44, align 8, !dbg !5349, !tbaa !5339
  store ptr %44, ptr %prev, align 8, !dbg !5349, !tbaa !3910
  br label %for.cond, !dbg !5349, !llvm.loop !5368

for.end:                                          ; preds = %if.then41, %for.cond
  %45 = load ptr, ptr %after, align 8, !dbg !5370, !tbaa !3910
  %tobool45 = icmp ne ptr %45, null, !dbg !5370
  br i1 %tobool45, label %if.then46, label %if.else76, !dbg !5372

if.then46:                                        ; preds = %for.end
  br label %do.body47, !dbg !5373

do.body47:                                        ; preds = %if.then46
  %46 = load ptr, ptr %after, align 8, !dbg !5374, !tbaa !3910
  %rkbuf_link48 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %46, i32 0, i32 0, !dbg !5374
  %tqe_next49 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link48, i32 0, i32 0, !dbg !5374
  %47 = load ptr, ptr %tqe_next49, align 8, !dbg !5374, !tbaa !5339
  %48 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5374, !tbaa !3910
  %rkbuf_link50 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %48, i32 0, i32 0, !dbg !5374
  %tqe_next51 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link50, i32 0, i32 0, !dbg !5374
  store ptr %47, ptr %tqe_next51, align 8, !dbg !5374, !tbaa !5339
  %cmp52 = icmp ne ptr %47, null, !dbg !5374
  br i1 %cmp52, label %if.then54, label %if.else61, !dbg !5377

if.then54:                                        ; preds = %do.body47
  %49 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5374, !tbaa !3910
  %rkbuf_link55 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %49, i32 0, i32 0, !dbg !5374
  %tqe_next56 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link55, i32 0, i32 0, !dbg !5374
  %50 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5374, !tbaa !3910
  %rkbuf_link57 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %50, i32 0, i32 0, !dbg !5374
  %tqe_next58 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link57, i32 0, i32 0, !dbg !5374
  %51 = load ptr, ptr %tqe_next58, align 8, !dbg !5374, !tbaa !5339
  %rkbuf_link59 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %51, i32 0, i32 0, !dbg !5374
  %tqe_prev60 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link59, i32 0, i32 1, !dbg !5374
  store ptr %tqe_next56, ptr %tqe_prev60, align 8, !dbg !5374, !tbaa !5341
  br label %if.end67, !dbg !5374

if.else61:                                        ; preds = %do.body47
  %52 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5374, !tbaa !3910
  %rkbuf_link62 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %52, i32 0, i32 0, !dbg !5374
  %tqe_next63 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link62, i32 0, i32 0, !dbg !5374
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !5374, !tbaa !3910
  %rkb_outbufs64 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %53, i32 0, i32 35, !dbg !5374
  %rkbq_bufs65 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs64, i32 0, i32 0, !dbg !5374
  %tqh_last66 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs65, i32 0, i32 1, !dbg !5374
  store ptr %tqe_next63, ptr %tqh_last66, align 8, !dbg !5374, !tbaa !5340
  br label %if.end67

if.end67:                                         ; preds = %if.else61, %if.then54
  %54 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5377, !tbaa !3910
  %55 = load ptr, ptr %after, align 8, !dbg !5377, !tbaa !3910
  %rkbuf_link68 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %55, i32 0, i32 0, !dbg !5377
  %tqe_next69 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link68, i32 0, i32 0, !dbg !5377
  store ptr %54, ptr %tqe_next69, align 8, !dbg !5377, !tbaa !5339
  %56 = load ptr, ptr %after, align 8, !dbg !5377, !tbaa !3910
  %rkbuf_link70 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %56, i32 0, i32 0, !dbg !5377
  %tqe_next71 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link70, i32 0, i32 0, !dbg !5377
  %57 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5377, !tbaa !3910
  %rkbuf_link72 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %57, i32 0, i32 0, !dbg !5377
  %tqe_prev73 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link72, i32 0, i32 1, !dbg !5377
  store ptr %tqe_next71, ptr %tqe_prev73, align 8, !dbg !5377, !tbaa !5341
  br label %do.cond74, !dbg !5377

do.cond74:                                        ; preds = %if.end67
  br label %do.end75, !dbg !5377

do.end75:                                         ; preds = %do.cond74
  br label %if.end110, !dbg !5377

if.else76:                                        ; preds = %for.end
  br label %do.body77, !dbg !5378

do.body77:                                        ; preds = %if.else76
  %58 = load ptr, ptr %rkb.addr, align 8, !dbg !5379, !tbaa !3910
  %rkb_outbufs78 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %58, i32 0, i32 35, !dbg !5379
  %rkbq_bufs79 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs78, i32 0, i32 0, !dbg !5379
  %tqh_first80 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs79, i32 0, i32 0, !dbg !5379
  %59 = load ptr, ptr %tqh_first80, align 8, !dbg !5379, !tbaa !5348
  %60 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5379, !tbaa !3910
  %rkbuf_link81 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %60, i32 0, i32 0, !dbg !5379
  %tqe_next82 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link81, i32 0, i32 0, !dbg !5379
  store ptr %59, ptr %tqe_next82, align 8, !dbg !5379, !tbaa !5339
  %cmp83 = icmp ne ptr %59, null, !dbg !5379
  br i1 %cmp83, label %if.then85, label %if.else93, !dbg !5382

if.then85:                                        ; preds = %do.body77
  %61 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5379, !tbaa !3910
  %rkbuf_link86 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %61, i32 0, i32 0, !dbg !5379
  %tqe_next87 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link86, i32 0, i32 0, !dbg !5379
  %62 = load ptr, ptr %rkb.addr, align 8, !dbg !5379, !tbaa !3910
  %rkb_outbufs88 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %62, i32 0, i32 35, !dbg !5379
  %rkbq_bufs89 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs88, i32 0, i32 0, !dbg !5379
  %tqh_first90 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs89, i32 0, i32 0, !dbg !5379
  %63 = load ptr, ptr %tqh_first90, align 8, !dbg !5379, !tbaa !5348
  %rkbuf_link91 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %63, i32 0, i32 0, !dbg !5379
  %tqe_prev92 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link91, i32 0, i32 1, !dbg !5379
  store ptr %tqe_next87, ptr %tqe_prev92, align 8, !dbg !5379, !tbaa !5341
  br label %if.end99, !dbg !5379

if.else93:                                        ; preds = %do.body77
  %64 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5379, !tbaa !3910
  %rkbuf_link94 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %64, i32 0, i32 0, !dbg !5379
  %tqe_next95 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link94, i32 0, i32 0, !dbg !5379
  %65 = load ptr, ptr %rkb.addr, align 8, !dbg !5379, !tbaa !3910
  %rkb_outbufs96 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %65, i32 0, i32 35, !dbg !5379
  %rkbq_bufs97 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs96, i32 0, i32 0, !dbg !5379
  %tqh_last98 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs97, i32 0, i32 1, !dbg !5379
  store ptr %tqe_next95, ptr %tqh_last98, align 8, !dbg !5379, !tbaa !5340
  br label %if.end99

if.end99:                                         ; preds = %if.else93, %if.then85
  %66 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5382, !tbaa !3910
  %67 = load ptr, ptr %rkb.addr, align 8, !dbg !5382, !tbaa !3910
  %rkb_outbufs100 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %67, i32 0, i32 35, !dbg !5382
  %rkbq_bufs101 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs100, i32 0, i32 0, !dbg !5382
  %tqh_first102 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs101, i32 0, i32 0, !dbg !5382
  store ptr %66, ptr %tqh_first102, align 8, !dbg !5382, !tbaa !5348
  %68 = load ptr, ptr %rkb.addr, align 8, !dbg !5382, !tbaa !3910
  %rkb_outbufs103 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %68, i32 0, i32 35, !dbg !5382
  %rkbq_bufs104 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs103, i32 0, i32 0, !dbg !5382
  %tqh_first105 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs104, i32 0, i32 0, !dbg !5382
  %69 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5382, !tbaa !3910
  %rkbuf_link106 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %69, i32 0, i32 0, !dbg !5382
  %tqe_prev107 = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link106, i32 0, i32 1, !dbg !5382
  store ptr %tqh_first105, ptr %tqe_prev107, align 8, !dbg !5382, !tbaa !5341
  br label %do.cond108, !dbg !5382

do.cond108:                                       ; preds = %if.end99
  br label %do.end109, !dbg !5382

do.end109:                                        ; preds = %do.cond108
  br label %if.end110

if.end110:                                        ; preds = %do.end109, %do.end75
  call void @llvm.lifetime.end.p0(i64 8, ptr %after) #16, !dbg !5383
  call void @llvm.lifetime.end.p0(i64 8, ptr %prev) #16, !dbg !5383
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %do.end29
  %70 = load ptr, ptr %rkb.addr, align 8, !dbg !5384, !tbaa !3910
  %rkb_outbufs112 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %70, i32 0, i32 35, !dbg !5385
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs112, i32 0, i32 1, !dbg !5386
  %call113 = call i32 @rd_atomic32_add(ptr noundef %rkbq_cnt, i32 noundef 1), !dbg !5387
  %71 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5388, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %71, i32 0, i32 10, !dbg !5390
  %ApiKey = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !5391
  %72 = load i16, ptr %ApiKey, align 4, !dbg !5391, !tbaa !5392
  %conv114 = sext i16 %72 to i32, !dbg !5388
  %cmp115 = icmp eq i32 %conv114, 0, !dbg !5393
  br i1 %cmp115, label %if.then117, label %if.end121, !dbg !5394

if.then117:                                       ; preds = %if.end111
  %73 = load ptr, ptr %rkb.addr, align 8, !dbg !5395, !tbaa !3910
  %rkb_outbufs118 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %73, i32 0, i32 35, !dbg !5396
  %rkbq_msg_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs118, i32 0, i32 2, !dbg !5397
  %74 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5398, !tbaa !3910
  %rkbuf_u = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %74, i32 0, i32 35, !dbg !5399
  %batch = getelementptr inbounds %struct.anon.37, ptr %rkbuf_u, i32 0, i32 0, !dbg !5399
  %msgq = getelementptr inbounds %struct.rd_kafka_msgbatch_s, ptr %batch, i32 0, i32 1, !dbg !5400
  %call119 = call i32 @rd_kafka_msgq_len(ptr noundef %msgq), !dbg !5401
  %call120 = call i32 @rd_atomic32_add(ptr noundef %rkbq_msg_cnt, i32 noundef %call119), !dbg !5402
  br label %if.end121, !dbg !5402

if.end121:                                        ; preds = %if.then117, %if.end111
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !5403
  ret void, !dbg !5403
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_buf_enq_replyq(ptr noundef %rkb, ptr noundef %rkbuf, ptr %replyq.coerce0, i32 %replyq.coerce1, ptr noundef %resp_cb, ptr noundef %opaque) #0 !dbg !5404 {
entry:
  %replyq = alloca %struct.rd_kafka_replyq_s, align 8
  %rkb.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  %resp_cb.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  %rko = alloca ptr, align 8
  %0 = getelementptr inbounds { ptr, i32 }, ptr %replyq, i32 0, i32 0
  store ptr %replyq.coerce0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i32 }, ptr %replyq, i32 0, i32 1
  store i32 %replyq.coerce1, ptr %1, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !5408, metadata !DIExpression()), !dbg !5416
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !5409, metadata !DIExpression()), !dbg !5417
  tail call void @llvm.dbg.declare(metadata ptr %replyq, metadata !5410, metadata !DIExpression()), !dbg !5418
  store ptr %resp_cb, ptr %resp_cb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %resp_cb.addr, metadata !5411, metadata !DIExpression()), !dbg !5419
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !5412, metadata !DIExpression()), !dbg !5420
  %2 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5421, !tbaa !3910
  %rkbuf_rkb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %2, i32 0, i32 20, !dbg !5421
  %3 = load ptr, ptr %rkbuf_rkb, align 8, !dbg !5421, !tbaa !5424
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !5421, !tbaa !3910
  %cmp = icmp eq ptr %3, %4, !dbg !5421
  br i1 %cmp, label %if.then, label %if.else, !dbg !5425

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5425

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.27, ptr noundef @.str.20, i32 noundef 1180, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_buf_enq_replyq) #18, !dbg !5421
  unreachable, !dbg !5421

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %resp_cb.addr, align 8, !dbg !5426, !tbaa !3910
  %tobool = icmp ne ptr %5, null, !dbg !5426
  br i1 %tobool, label %if.then1, label %if.else2, !dbg !5428

if.then1:                                         ; preds = %if.end
  %6 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5429, !tbaa !3910
  %rkbuf_replyq = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %6, i32 0, i32 13, !dbg !5431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %rkbuf_replyq, ptr align 8 %replyq, i64 16, i1 false), !dbg !5432, !tbaa.struct !5433
  %7 = load ptr, ptr %resp_cb.addr, align 8, !dbg !5434, !tbaa !3910
  %8 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5435, !tbaa !3910
  %rkbuf_cb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %8, i32 0, i32 15, !dbg !5436
  store ptr %7, ptr %rkbuf_cb, align 8, !dbg !5437, !tbaa !5209
  %9 = load ptr, ptr %opaque.addr, align 8, !dbg !5438, !tbaa !3910
  %10 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5439, !tbaa !3910
  %rkbuf_opaque = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %10, i32 0, i32 22, !dbg !5440
  store ptr %9, ptr %rkbuf_opaque, align 8, !dbg !5441, !tbaa !5220
  br label %if.end3, !dbg !5442

if.else2:                                         ; preds = %if.end
  br label %do.body, !dbg !5443

do.body:                                          ; preds = %if.else2
  br label %do.end, !dbg !5445

do.end:                                           ; preds = %do.body
  br label %if.end3

if.end3:                                          ; preds = %do.end, %if.then1
  %11 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5447, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %11, i32 0, i32 3, !dbg !5449
  %12 = load i32, ptr %rkbuf_flags, align 8, !dbg !5449, !tbaa !5243
  %and = and i32 %12, 128, !dbg !5450
  %tobool4 = icmp ne i32 %and, 0, !dbg !5450
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5451

if.then5:                                         ; preds = %if.end3
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !5452, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 32, !dbg !5453
  %14 = load ptr, ptr %rkb_rk, align 8, !dbg !5453, !tbaa !4139
  %15 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5454, !tbaa !3910
  call void @rd_kafka_buf_finalize(ptr noundef %14, ptr noundef %15), !dbg !5455
  br label %if.end6, !dbg !5455

if.end6:                                          ; preds = %if.then5, %if.end3
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !5456, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 30, !dbg !5457
  %17 = load i64, ptr %rkb_thread, align 8, !dbg !5457, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %17), !dbg !5458
  %tobool7 = icmp ne i32 %call, 0, !dbg !5458
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !5459

if.then8:                                         ; preds = %if.end6
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !5460, !tbaa !3910
  %19 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5462, !tbaa !3910
  %call9 = call i32 @rd_kafka_broker_buf_enq2(ptr noundef %18, ptr noundef %19), !dbg !5463
  br label %if.end14, !dbg !5464

if.else10:                                        ; preds = %if.end6
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !5465
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !5413, metadata !DIExpression()), !dbg !5466
  %call11 = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 8), !dbg !5467
  store ptr %call11, ptr %rko, align 8, !dbg !5466, !tbaa !3910
  %20 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5468, !tbaa !3910
  %21 = load ptr, ptr %rko, align 8, !dbg !5469, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %21, i32 0, i32 15, !dbg !5470
  %rkbuf12 = getelementptr inbounds %struct.anon.65, ptr %rko_u, i32 0, i32 0, !dbg !5471
  store ptr %20, ptr %rkbuf12, align 8, !dbg !5472, !tbaa !4126
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !5473, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 8, !dbg !5474
  %23 = load ptr, ptr %rkb_ops, align 8, !dbg !5474, !tbaa !5475
  %24 = load ptr, ptr %rko, align 8, !dbg !5476, !tbaa !3910
  %call13 = call i32 @rd_kafka_q_enq(ptr noundef %23, ptr noundef %24), !dbg !5477
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !5478
  br label %if.end14

if.end14:                                         ; preds = %if.else10, %if.then8
  ret void, !dbg !5479
}

; Function Attrs: noreturn nounwind
declare !dbg !5480 void @__assert_fail(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #8

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_buf_enq2(ptr noundef %rkb, ptr noundef %rkbuf) #0 !dbg !5484 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !5488, metadata !DIExpression()), !dbg !5490
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !5489, metadata !DIExpression()), !dbg !5491
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !5492, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 27, !dbg !5492
  %1 = load i32, ptr %rkb_source, align 8, !dbg !5492, !tbaa !4174
  %cmp = icmp eq i32 %1, 2, !dbg !5492
  %conv = zext i1 %cmp to i32, !dbg !5492
  %conv1 = sext i32 %conv to i64, !dbg !5492
  %expval = call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !5492
  %tobool = icmp ne i64 %expval, 0, !dbg !5492
  br i1 %tobool, label %if.then, label %if.end, !dbg !5494

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !5495, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !5497
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !5497, !tbaa !4139
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !5498, !tbaa !3910
  %5 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5499, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %3, ptr noundef %4, i32 noundef -195, ptr noundef null, ptr noundef %5), !dbg !5500
  store i32 -1, ptr %retval, align 4, !dbg !5501
  br label %return, !dbg !5501

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !5502, !tbaa !3910
  %7 = load ptr, ptr %rkbuf.addr, align 8, !dbg !5503, !tbaa !3910
  call void @rd_kafka_broker_buf_enq0(ptr noundef %6, ptr noundef %7), !dbg !5504
  store i32 0, ptr %retval, align 4, !dbg !5505
  br label %return, !dbg !5505

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, ptr %retval, align 4, !dbg !5506
  ret i32 %8, !dbg !5506
}

declare !dbg !5507 ptr @rd_kafka_op_new0(ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_q_enq(ptr noundef %rkq, ptr noundef %rko) #4 !dbg !5510 {
entry:
  %rkq.addr = alloca ptr, align 8
  %rko.addr = alloca ptr, align 8
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !5514, metadata !DIExpression()), !dbg !5516
  store ptr %rko, ptr %rko.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rko.addr, metadata !5515, metadata !DIExpression()), !dbg !5517
  %0 = load ptr, ptr %rkq.addr, align 8, !dbg !5518, !tbaa !3910
  %1 = load ptr, ptr %rko.addr, align 8, !dbg !5519, !tbaa !3910
  %2 = load ptr, ptr %rkq.addr, align 8, !dbg !5520, !tbaa !3910
  %call = call i32 @rd_kafka_q_enq1(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef 0, i32 noundef 1), !dbg !5521
  ret i32 %call, !dbg !5522
}

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_brokers_get_state_version(ptr noundef %rk) #0 !dbg !5523 {
entry:
  %rk.addr = alloca ptr, align 8
  %version = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5527, metadata !DIExpression()), !dbg !5529
  call void @llvm.lifetime.start.p0(i64 4, ptr %version) #16, !dbg !5530
  tail call void @llvm.dbg.declare(metadata ptr %version, metadata !5528, metadata !DIExpression()), !dbg !5531
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !5532, !tbaa !3910
  %rk_broker_state_change_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 12, !dbg !5533
  %call = call i32 @mtx_lock(ptr noundef %rk_broker_state_change_lock), !dbg !5534
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !5535, !tbaa !3910
  %rk_broker_state_change_version = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 13, !dbg !5536
  %2 = load i32, ptr %rk_broker_state_change_version, align 8, !dbg !5536, !tbaa !4455
  store i32 %2, ptr %version, align 4, !dbg !5537, !tbaa !3959
  %3 = load ptr, ptr %rk.addr, align 8, !dbg !5538, !tbaa !3910
  %rk_broker_state_change_lock1 = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 12, !dbg !5539
  %call2 = call i32 @mtx_unlock(ptr noundef %rk_broker_state_change_lock1), !dbg !5540
  %4 = load i32, ptr %version, align 4, !dbg !5541, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %version) #16, !dbg !5542
  ret i32 %4, !dbg !5543
}

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_brokers_wait_state_change(ptr noundef %rk, i32 noundef %stored_version, i32 noundef %timeout_ms) #0 !dbg !5544 {
entry:
  %rk.addr = alloca ptr, align 8
  %stored_version.addr = alloca i32, align 4
  %timeout_ms.addr = alloca i32, align 4
  %r = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5548, metadata !DIExpression()), !dbg !5552
  store i32 %stored_version, ptr %stored_version.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %stored_version.addr, metadata !5549, metadata !DIExpression()), !dbg !5553
  store i32 %timeout_ms, ptr %timeout_ms.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %timeout_ms.addr, metadata !5550, metadata !DIExpression()), !dbg !5554
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !5555
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !5551, metadata !DIExpression()), !dbg !5556
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !5557, !tbaa !3910
  %rk_broker_state_change_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 12, !dbg !5558
  %call = call i32 @mtx_lock(ptr noundef %rk_broker_state_change_lock), !dbg !5559
  %1 = load i32, ptr %stored_version.addr, align 4, !dbg !5560, !tbaa !3959
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !5562, !tbaa !3910
  %rk_broker_state_change_version = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 13, !dbg !5563
  %3 = load i32, ptr %rk_broker_state_change_version, align 8, !dbg !5563, !tbaa !4455
  %cmp = icmp ne i32 %1, %3, !dbg !5564
  br i1 %cmp, label %if.then, label %if.else, !dbg !5565

if.then:                                          ; preds = %entry
  store i32 1, ptr %r, align 4, !dbg !5566, !tbaa !3959
  br label %if.end, !dbg !5567

if.else:                                          ; preds = %entry
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !5568, !tbaa !3910
  %rk_broker_state_change_cnd = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 11, !dbg !5569
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !5570, !tbaa !3910
  %rk_broker_state_change_lock1 = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 12, !dbg !5571
  %6 = load i32, ptr %timeout_ms.addr, align 4, !dbg !5572, !tbaa !3959
  %call2 = call i32 @cnd_timedwait_ms(ptr noundef %rk_broker_state_change_cnd, ptr noundef %rk_broker_state_change_lock1, i32 noundef %6), !dbg !5573
  %cmp3 = icmp eq i32 %call2, 0, !dbg !5574
  %conv = zext i1 %cmp3 to i32, !dbg !5574
  store i32 %conv, ptr %r, align 4, !dbg !5575, !tbaa !3959
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !5576, !tbaa !3910
  %rk_broker_state_change_lock4 = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 12, !dbg !5577
  %call5 = call i32 @mtx_unlock(ptr noundef %rk_broker_state_change_lock4), !dbg !5578
  %8 = load i32, ptr %r, align 4, !dbg !5579, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !5580
  ret i32 %8, !dbg !5581
}

declare !dbg !5582 i32 @cnd_timedwait_ms(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_brokers_wait_state_change_async(ptr noundef %rk, i32 noundef %stored_version, ptr noundef %eonce) #0 !dbg !5586 {
entry:
  %rk.addr = alloca ptr, align 8
  %stored_version.addr = alloca i32, align 4
  %eonce.addr = alloca ptr, align 8
  %r = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5592, metadata !DIExpression()), !dbg !5596
  store i32 %stored_version, ptr %stored_version.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %stored_version.addr, metadata !5593, metadata !DIExpression()), !dbg !5597
  store ptr %eonce, ptr %eonce.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %eonce.addr, metadata !5594, metadata !DIExpression()), !dbg !5598
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !5599
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !5595, metadata !DIExpression()), !dbg !5600
  store i32 1, ptr %r, align 4, !dbg !5600, !tbaa !3959
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !5601, !tbaa !3910
  %rk_broker_state_change_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 12, !dbg !5602
  %call = call i32 @mtx_lock(ptr noundef %rk_broker_state_change_lock), !dbg !5603
  %1 = load i32, ptr %stored_version.addr, align 4, !dbg !5604, !tbaa !3959
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !5606, !tbaa !3910
  %rk_broker_state_change_version = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 13, !dbg !5607
  %3 = load i32, ptr %rk_broker_state_change_version, align 8, !dbg !5607, !tbaa !4455
  %cmp = icmp ne i32 %1, %3, !dbg !5608
  br i1 %cmp, label %if.then, label %if.else, !dbg !5609

if.then:                                          ; preds = %entry
  store i32 0, ptr %r, align 4, !dbg !5610, !tbaa !3959
  br label %if.end, !dbg !5611

if.else:                                          ; preds = %entry
  %4 = load ptr, ptr %eonce.addr, align 8, !dbg !5612, !tbaa !3910
  call void @rd_kafka_enq_once_add_source(ptr noundef %4, ptr noundef @.str.28), !dbg !5614
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !5615, !tbaa !3910
  %rk_broker_state_change_waiters = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 14, !dbg !5616
  %6 = load ptr, ptr %eonce.addr, align 8, !dbg !5617, !tbaa !3910
  %call1 = call ptr @rd_list_add(ptr noundef %rk_broker_state_change_waiters, ptr noundef %6), !dbg !5618
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !5619, !tbaa !3910
  %rk_broker_state_change_lock2 = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 12, !dbg !5620
  %call3 = call i32 @mtx_unlock(ptr noundef %rk_broker_state_change_lock2), !dbg !5621
  %8 = load i32, ptr %r, align 4, !dbg !5622, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !5623
  ret i32 %8, !dbg !5624
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_enq_once_add_source(ptr noundef %eonce, ptr noundef %srcdesc) #4 !dbg !5625 {
entry:
  %eonce.addr = alloca ptr, align 8
  %srcdesc.addr = alloca ptr, align 8
  store ptr %eonce, ptr %eonce.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %eonce.addr, metadata !5629, metadata !DIExpression()), !dbg !5631
  store ptr %srcdesc, ptr %srcdesc.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %srcdesc.addr, metadata !5630, metadata !DIExpression()), !dbg !5632
  %0 = load ptr, ptr %eonce.addr, align 8, !dbg !5633, !tbaa !3910
  %lock = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %0, i32 0, i32 0, !dbg !5634
  %call = call i32 @mtx_lock(ptr noundef %lock), !dbg !5635
  %1 = load ptr, ptr %eonce.addr, align 8, !dbg !5636, !tbaa !3910
  %refcnt = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %1, i32 0, i32 1, !dbg !5637
  %2 = load i32, ptr %refcnt, align 8, !dbg !5638, !tbaa !5639
  %inc = add nsw i32 %2, 1, !dbg !5638
  store i32 %inc, ptr %refcnt, align 8, !dbg !5638, !tbaa !5639
  %3 = load ptr, ptr %eonce.addr, align 8, !dbg !5641, !tbaa !3910
  %lock1 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %3, i32 0, i32 0, !dbg !5642
  %call2 = call i32 @mtx_unlock(ptr noundef %lock1), !dbg !5643
  ret void, !dbg !5644
}

declare !dbg !5645 ptr @rd_list_add(ptr noundef, ptr noundef) #3

declare !dbg !5648 void @rd_list_apply(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_state_change_trigger_eonce(ptr noundef %elem, ptr noundef %opaque) #0 !dbg !5654 {
entry:
  %elem.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  %eonce = alloca ptr, align 8
  store ptr %elem, ptr %elem.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %elem.addr, metadata !5656, metadata !DIExpression()), !dbg !5659
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !5657, metadata !DIExpression()), !dbg !5660
  call void @llvm.lifetime.start.p0(i64 8, ptr %eonce) #16, !dbg !5661
  tail call void @llvm.dbg.declare(metadata ptr %eonce, metadata !5658, metadata !DIExpression()), !dbg !5662
  %0 = load ptr, ptr %elem.addr, align 8, !dbg !5663, !tbaa !3910
  store ptr %0, ptr %eonce, align 8, !dbg !5662, !tbaa !3910
  %1 = load ptr, ptr %eonce, align 8, !dbg !5664, !tbaa !3910
  call void @rd_kafka_enq_once_trigger(ptr noundef %1, i32 noundef 0, ptr noundef @.str.118), !dbg !5665
  call void @llvm.lifetime.end.p0(i64 8, ptr %eonce) #16, !dbg !5666
  ret i32 0, !dbg !5667
}

declare !dbg !5668 i32 @cnd_broadcast(ptr noundef) #3

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_any(ptr noundef %rk, i32 noundef %state, ptr noundef %filter, ptr noundef %opaque, ptr noundef %reason) #0 !dbg !5671 {
entry:
  %rk.addr = alloca ptr, align 8
  %state.addr = alloca i32, align 4
  %filter.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  %reason.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5678, metadata !DIExpression()), !dbg !5684
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !5679, metadata !DIExpression()), !dbg !5685
  store ptr %filter, ptr %filter.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %filter.addr, metadata !5680, metadata !DIExpression()), !dbg !5686
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !5681, metadata !DIExpression()), !dbg !5687
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !5682, metadata !DIExpression()), !dbg !5688
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !5689
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !5683, metadata !DIExpression()), !dbg !5690
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !5691, !tbaa !3910
  %1 = load i32, ptr %state.addr, align 4, !dbg !5691, !tbaa !3959
  %2 = load ptr, ptr %filter.addr, align 8, !dbg !5691, !tbaa !3910
  %3 = load ptr, ptr %opaque.addr, align 8, !dbg !5691, !tbaa !3910
  %call = call ptr @rd_kafka_broker_random0(ptr noundef @__FUNCTION__.rd_kafka_broker_any, i32 noundef 1517, ptr noundef %0, i8 noundef zeroext 0, i32 noundef %1, ptr noundef null, ptr noundef %2, ptr noundef %3), !dbg !5691
  store ptr %call, ptr %rkb, align 8, !dbg !5692, !tbaa !3910
  %4 = load ptr, ptr %rkb, align 8, !dbg !5693, !tbaa !3910
  %tobool = icmp ne ptr %4, null, !dbg !5693
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5695

land.lhs.true:                                    ; preds = %entry
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !5696, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 18, !dbg !5697
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 32, !dbg !5698
  %6 = load i32, ptr %sparse_connections, align 4, !dbg !5698, !tbaa !5300
  %tobool1 = icmp ne i32 %6, 0, !dbg !5696
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5699

if.then:                                          ; preds = %land.lhs.true
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !5700, !tbaa !3910
  %8 = load ptr, ptr %reason.addr, align 8, !dbg !5702, !tbaa !3910
  call void @rd_kafka_connect_any(ptr noundef %7, ptr noundef %8), !dbg !5703
  br label %if.end, !dbg !5704

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load ptr, ptr %rkb, align 8, !dbg !5705, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !5706
  ret ptr %9, !dbg !5707
}

; Function Attrs: nounwind uwtable
define internal ptr @rd_kafka_broker_random0(ptr noundef %func, i32 noundef %line, ptr noundef %rk, i8 noundef zeroext %is_up, i32 noundef %state, ptr noundef %filtered_cnt, ptr noundef %filter, ptr noundef %opaque) #0 !dbg !5708 {
entry:
  %func.addr = alloca ptr, align 8
  %line.addr = alloca i32, align 4
  %rk.addr = alloca ptr, align 8
  %is_up.addr = alloca i8, align 1
  %state.addr = alloca i32, align 4
  %filtered_cnt.addr = alloca ptr, align 8
  %filter.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  %good = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %fcnt = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !5712, metadata !DIExpression()), !dbg !5724
  store i32 %line, ptr %line.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %line.addr, metadata !5713, metadata !DIExpression()), !dbg !5725
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5714, metadata !DIExpression()), !dbg !5726
  store i8 %is_up, ptr %is_up.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %is_up.addr, metadata !5715, metadata !DIExpression()), !dbg !5727
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !5716, metadata !DIExpression()), !dbg !5728
  store ptr %filtered_cnt, ptr %filtered_cnt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %filtered_cnt.addr, metadata !5717, metadata !DIExpression()), !dbg !5729
  store ptr %filter, ptr %filter.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %filter.addr, metadata !5718, metadata !DIExpression()), !dbg !5730
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !5719, metadata !DIExpression()), !dbg !5731
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !5732
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !5720, metadata !DIExpression()), !dbg !5733
  call void @llvm.lifetime.start.p0(i64 8, ptr %good) #16, !dbg !5732
  tail call void @llvm.dbg.declare(metadata ptr %good, metadata !5721, metadata !DIExpression()), !dbg !5734
  store ptr null, ptr %good, align 8, !dbg !5734, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !5735
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !5722, metadata !DIExpression()), !dbg !5736
  store i32 0, ptr %cnt, align 4, !dbg !5736, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %fcnt) #16, !dbg !5737
  tail call void @llvm.dbg.declare(metadata ptr %fcnt, metadata !5723, metadata !DIExpression()), !dbg !5738
  store i32 0, ptr %fcnt, align 4, !dbg !5738, !tbaa !3959
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !5739, !tbaa !3910
  %rk_brokers = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 2, !dbg !5739
  %tqh_first = getelementptr inbounds %struct.anon.12, ptr %rk_brokers, i32 0, i32 0, !dbg !5739
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !5739, !tbaa !5741
  store ptr %1, ptr %rkb, align 8, !dbg !5739, !tbaa !3910
  br label %for.cond, !dbg !5739

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %rkb, align 8, !dbg !5742, !tbaa !3910
  %cmp = icmp ne ptr %2, null, !dbg !5742
  br i1 %cmp, label %for.body, label %for.end, !dbg !5739

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %rkb, align 8, !dbg !5744, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 27, !dbg !5744
  %4 = load i32, ptr %rkb_source, align 8, !dbg !5744, !tbaa !4174
  %cmp1 = icmp eq i32 %4, 3, !dbg !5744
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5747

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !5748

if.end:                                           ; preds = %for.body
  %5 = load ptr, ptr %rkb, align 8, !dbg !5749, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 9, !dbg !5749
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !5749
  %6 = load i8, ptr %is_up.addr, align 1, !dbg !5750, !tbaa !4126
  %conv = zext i8 %6 to i32, !dbg !5750
  %tobool = icmp ne i32 %conv, 0, !dbg !5750
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false7, !dbg !5752

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %rkb, align 8, !dbg !5753, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 19, !dbg !5753
  %8 = load i32, ptr %rkb_state, align 4, !dbg !5753, !tbaa !4130
  %cmp2 = icmp eq i32 %8, 6, !dbg !5753
  br i1 %cmp2, label %if.then13, label %lor.lhs.false, !dbg !5753

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load ptr, ptr %rkb, align 8, !dbg !5753, !tbaa !3910
  %rkb_state4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 19, !dbg !5753
  %10 = load i32, ptr %rkb_state4, align 4, !dbg !5753, !tbaa !4130
  %cmp5 = icmp eq i32 %10, 7, !dbg !5753
  br i1 %cmp5, label %if.then13, label %lor.lhs.false7, !dbg !5754

lor.lhs.false7:                                   ; preds = %lor.lhs.false, %if.end
  %11 = load i8, ptr %is_up.addr, align 1, !dbg !5755, !tbaa !4126
  %tobool8 = icmp ne i8 %11, 0, !dbg !5755
  br i1 %tobool8, label %if.end38, label %land.lhs.true9, !dbg !5756

land.lhs.true9:                                   ; preds = %lor.lhs.false7
  %12 = load ptr, ptr %rkb, align 8, !dbg !5757, !tbaa !3910
  %rkb_state10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 19, !dbg !5758
  %13 = load i32, ptr %rkb_state10, align 4, !dbg !5758, !tbaa !4130
  %14 = load i32, ptr %state.addr, align 4, !dbg !5759, !tbaa !3959
  %cmp11 = icmp eq i32 %13, %14, !dbg !5760
  br i1 %cmp11, label %if.then13, label %if.end38, !dbg !5761

if.then13:                                        ; preds = %land.lhs.true9, %lor.lhs.false, %land.lhs.true
  %15 = load ptr, ptr %filter.addr, align 8, !dbg !5762, !tbaa !3910
  %tobool14 = icmp ne ptr %15, null, !dbg !5762
  br i1 %tobool14, label %land.lhs.true15, label %if.else, !dbg !5765

land.lhs.true15:                                  ; preds = %if.then13
  %16 = load ptr, ptr %filter.addr, align 8, !dbg !5766, !tbaa !3910
  %17 = load ptr, ptr %rkb, align 8, !dbg !5767, !tbaa !3910
  %18 = load ptr, ptr %opaque.addr, align 8, !dbg !5768, !tbaa !3910
  %call16 = call i32 %16(ptr noundef %17, ptr noundef %18), !dbg !5766
  %tobool17 = icmp ne i32 %call16, 0, !dbg !5766
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !5769

if.then18:                                        ; preds = %land.lhs.true15
  %19 = load i32, ptr %fcnt, align 4, !dbg !5770, !tbaa !3959
  %inc = add nsw i32 %19, 1, !dbg !5770
  store i32 %inc, ptr %fcnt, align 4, !dbg !5770, !tbaa !3959
  br label %if.end37, !dbg !5772

if.else:                                          ; preds = %land.lhs.true15, %if.then13
  %20 = load i32, ptr %cnt, align 4, !dbg !5773, !tbaa !3959
  %cmp19 = icmp slt i32 %20, 1, !dbg !5776
  br i1 %cmp19, label %if.then25, label %lor.lhs.false21, !dbg !5777

lor.lhs.false21:                                  ; preds = %if.else
  %21 = load i32, ptr %cnt, align 4, !dbg !5778, !tbaa !3959
  %call22 = call i32 @rd_jitter(i32 noundef 0, i32 noundef %21), !dbg !5779
  %cmp23 = icmp slt i32 %call22, 1, !dbg !5780
  br i1 %cmp23, label %if.then25, label %if.end36, !dbg !5781

if.then25:                                        ; preds = %lor.lhs.false21, %if.else
  %22 = load ptr, ptr %good, align 8, !dbg !5782, !tbaa !3910
  %tobool26 = icmp ne ptr %22, null, !dbg !5782
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !5785

if.then27:                                        ; preds = %if.then25
  br label %do.body, !dbg !5786

do.body:                                          ; preds = %if.then27
  %23 = load ptr, ptr %good, align 8, !dbg !5787, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 31, !dbg !5787
  %call28 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt), !dbg !5787
  %cmp29 = icmp sgt i32 %call28, 0, !dbg !5787
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !5790

if.then31:                                        ; preds = %do.body
  br label %do.end, !dbg !5787

if.end32:                                         ; preds = %do.body
  %24 = load ptr, ptr %good, align 8, !dbg !5790, !tbaa !3910
  call void @rd_kafka_broker_destroy_final(ptr noundef %24), !dbg !5790
  br label %do.cond, !dbg !5790

do.cond:                                          ; preds = %if.end32
  br label %do.end, !dbg !5790

do.end:                                           ; preds = %do.cond, %if.then31
  br label %if.end33, !dbg !5790

if.end33:                                         ; preds = %do.end, %if.then25
  %25 = load ptr, ptr %rkb, align 8, !dbg !5791, !tbaa !3910
  %rkb_refcnt34 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 31, !dbg !5791
  %call35 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt34, i32 noundef 1), !dbg !5791
  %26 = load ptr, ptr %rkb, align 8, !dbg !5792, !tbaa !3910
  store ptr %26, ptr %good, align 8, !dbg !5793, !tbaa !3910
  br label %if.end36, !dbg !5794

if.end36:                                         ; preds = %if.end33, %lor.lhs.false21
  %27 = load i32, ptr %cnt, align 4, !dbg !5795, !tbaa !3959
  %add = add nsw i32 %27, 1, !dbg !5795
  store i32 %add, ptr %cnt, align 4, !dbg !5795, !tbaa !3959
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then18
  br label %if.end38, !dbg !5796

if.end38:                                         ; preds = %if.end37, %land.lhs.true9, %lor.lhs.false7
  %28 = load ptr, ptr %rkb, align 8, !dbg !5797, !tbaa !3910
  %rkb_lock39 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 9, !dbg !5797
  %call40 = call i32 @mtx_unlock(ptr noundef %rkb_lock39), !dbg !5797
  br label %for.inc, !dbg !5798

for.inc:                                          ; preds = %if.end38, %if.then
  %29 = load ptr, ptr %rkb, align 8, !dbg !5742, !tbaa !3910
  %rkb_link = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 0, !dbg !5742
  %tqe_next = getelementptr inbounds %struct.anon, ptr %rkb_link, i32 0, i32 0, !dbg !5742
  %30 = load ptr, ptr %tqe_next, align 8, !dbg !5742, !tbaa !5799
  store ptr %30, ptr %rkb, align 8, !dbg !5742, !tbaa !3910
  br label %for.cond, !dbg !5742, !llvm.loop !5800

for.end:                                          ; preds = %for.cond
  %31 = load ptr, ptr %filtered_cnt.addr, align 8, !dbg !5802, !tbaa !3910
  %tobool41 = icmp ne ptr %31, null, !dbg !5802
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !5804

if.then42:                                        ; preds = %for.end
  %32 = load i32, ptr %fcnt, align 4, !dbg !5805, !tbaa !3959
  %33 = load ptr, ptr %filtered_cnt.addr, align 8, !dbg !5806, !tbaa !3910
  store i32 %32, ptr %33, align 4, !dbg !5807, !tbaa !3959
  br label %if.end43, !dbg !5808

if.end43:                                         ; preds = %if.then42, %for.end
  %34 = load ptr, ptr %good, align 8, !dbg !5809, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 4, ptr %fcnt) #16, !dbg !5810
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !5810
  call void @llvm.lifetime.end.p0(i64 8, ptr %good) #16, !dbg !5810
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !5810
  ret ptr %34, !dbg !5811
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_connect_any(ptr noundef %rk, ptr noundef %reason) #0 !dbg !5812 {
entry:
  %rk.addr = alloca ptr, align 8
  %reason.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  %suppr = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5816, metadata !DIExpression()), !dbg !5825
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !5817, metadata !DIExpression()), !dbg !5826
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !5827
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !5818, metadata !DIExpression()), !dbg !5828
  call void @llvm.lifetime.start.p0(i64 8, ptr %suppr) #16, !dbg !5829
  tail call void @llvm.dbg.declare(metadata ptr %suppr, metadata !5819, metadata !DIExpression()), !dbg !5830
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !5831, !tbaa !3910
  %rk_broker_up_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 5, !dbg !5833
  %call = call i32 @rd_atomic32_get(ptr noundef %rk_broker_up_cnt), !dbg !5834
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !5835, !tbaa !3910
  %rk_logical_broker_up_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 6, !dbg !5836
  %call1 = call i32 @rd_atomic32_get(ptr noundef %rk_logical_broker_up_cnt), !dbg !5837
  %sub = sub nsw i32 %call, %call1, !dbg !5838
  %cmp = icmp sgt i32 %sub, 0, !dbg !5839
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5840

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !5841, !tbaa !3910
  %rk_broker_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 4, !dbg !5842
  %call2 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_cnt), !dbg !5843
  %3 = load ptr, ptr %rk.addr, align 8, !dbg !5844, !tbaa !3910
  %rk_broker_addrless_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 8, !dbg !5845
  %call3 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_addrless_cnt), !dbg !5846
  %sub4 = sub nsw i32 %call2, %call3, !dbg !5847
  %cmp5 = icmp eq i32 %sub4, 0, !dbg !5848
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5849

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5850

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !5851, !tbaa !3910
  %rk_suppress = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 52, !dbg !5852
  %sparse_connect_lock = getelementptr inbounds %struct.anon.32, ptr %rk_suppress, i32 0, i32 2, !dbg !5853
  %call6 = call i32 @mtx_lock(ptr noundef %sparse_connect_lock), !dbg !5854
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !5855, !tbaa !3910
  %rk_suppress7 = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 52, !dbg !5855
  %sparse_connect_random = getelementptr inbounds %struct.anon.32, ptr %rk_suppress7, i32 0, i32 1, !dbg !5855
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !5855, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 18, !dbg !5855
  %sparse_connect_intvl = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 33, !dbg !5855
  %7 = load i32, ptr %sparse_connect_intvl, align 8, !dbg !5855, !tbaa !5856
  %mul = mul nsw i32 %7, 1000, !dbg !5855
  %conv = sext i32 %mul to i64, !dbg !5855
  %call8 = call i64 @rd_interval0(ptr noundef %sparse_connect_random, i64 noundef %conv, i64 noundef 0, i32 noundef 0), !dbg !5855
  store i64 %call8, ptr %suppr, align 8, !dbg !5857, !tbaa !4039
  %8 = load ptr, ptr %rk.addr, align 8, !dbg !5858, !tbaa !3910
  %rk_suppress9 = getelementptr inbounds %struct.rd_kafka_s, ptr %8, i32 0, i32 52, !dbg !5859
  %sparse_connect_lock10 = getelementptr inbounds %struct.anon.32, ptr %rk_suppress9, i32 0, i32 2, !dbg !5860
  %call11 = call i32 @mtx_unlock(ptr noundef %sparse_connect_lock10), !dbg !5861
  %9 = load i64, ptr %suppr, align 8, !dbg !5862, !tbaa !4039
  %cmp12 = icmp sle i64 %9, 0, !dbg !5864
  br i1 %cmp12, label %if.then14, label %if.end21, !dbg !5865

if.then14:                                        ; preds = %if.end
  br label %do.body, !dbg !5866

do.body:                                          ; preds = %if.then14
  %10 = load ptr, ptr %rk.addr, align 8, !dbg !5868, !tbaa !3910
  %rk_conf15 = getelementptr inbounds %struct.rd_kafka_s, ptr %10, i32 0, i32 18, !dbg !5868
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf15, i32 0, i32 13, !dbg !5868
  %11 = load i32, ptr %debug, align 8, !dbg !5868, !tbaa !4140
  %and = and i32 %11, 3, !dbg !5868
  %conv16 = sext i32 %and to i64, !dbg !5868
  %expval = call i64 @llvm.expect.i64(i64 %conv16, i64 0), !dbg !5868
  %tobool = icmp ne i64 %expval, 0, !dbg !5868
  br i1 %tobool, label %if.then17, label %if.end20, !dbg !5871

if.then17:                                        ; preds = %do.body
  %12 = load ptr, ptr %rk.addr, align 8, !dbg !5868, !tbaa !3910
  %rk_conf18 = getelementptr inbounds %struct.rd_kafka_s, ptr %12, i32 0, i32 18, !dbg !5868
  %13 = load ptr, ptr %rk.addr, align 8, !dbg !5868, !tbaa !3910
  %14 = load i64, ptr %suppr, align 8, !dbg !5868, !tbaa !4039
  %sub19 = sub nsw i64 0, %14, !dbg !5868
  %div = sdiv i64 %sub19, 1000, !dbg !5868
  %15 = load ptr, ptr %reason.addr, align 8, !dbg !5868, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf18, ptr noundef %13, ptr noundef null, i32 noundef 7, i32 noundef 3, ptr noundef @.str.3, ptr noundef @.str.86, i64 noundef %div, ptr noundef %15), !dbg !5868
  br label %if.end20, !dbg !5868

if.end20:                                         ; preds = %if.then17, %do.body
  br label %do.cond, !dbg !5871

do.cond:                                          ; preds = %if.end20
  br label %do.end, !dbg !5871

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5872

if.end21:                                         ; preds = %if.end
  %16 = load ptr, ptr %rk.addr, align 8, !dbg !5873, !tbaa !3910
  %call22 = call ptr @rd_kafka_broker_random0(ptr noundef @__FUNCTION__.rd_kafka_connect_any, i32 noundef 5605, ptr noundef %16, i8 noundef zeroext 0, i32 noundef 0, ptr noundef null, ptr noundef @rd_kafka_broker_filter_never_connected, ptr noundef null), !dbg !5873
  store ptr %call22, ptr %rkb, align 8, !dbg !5874, !tbaa !3910
  %17 = load ptr, ptr %rkb, align 8, !dbg !5875, !tbaa !3910
  %tobool23 = icmp ne ptr %17, null, !dbg !5875
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !5877

if.then24:                                        ; preds = %if.end21
  %18 = load ptr, ptr %rk.addr, align 8, !dbg !5878, !tbaa !3910
  %call25 = call ptr @rd_kafka_broker_random0(ptr noundef @__FUNCTION__.rd_kafka_connect_any, i32 noundef 5609, ptr noundef %18, i8 noundef zeroext 0, i32 noundef 0, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !5878
  store ptr %call25, ptr %rkb, align 8, !dbg !5879, !tbaa !3910
  br label %if.end26, !dbg !5880

if.end26:                                         ; preds = %if.then24, %if.end21
  %19 = load ptr, ptr %rkb, align 8, !dbg !5881, !tbaa !3910
  %tobool27 = icmp ne ptr %19, null, !dbg !5881
  br i1 %tobool27, label %if.end41, label %if.then28, !dbg !5883

if.then28:                                        ; preds = %if.end26
  br label %do.body29, !dbg !5884

do.body29:                                        ; preds = %if.then28
  %20 = load ptr, ptr %rk.addr, align 8, !dbg !5886, !tbaa !3910
  %rk_conf30 = getelementptr inbounds %struct.rd_kafka_s, ptr %20, i32 0, i32 18, !dbg !5886
  %debug31 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf30, i32 0, i32 13, !dbg !5886
  %21 = load i32, ptr %debug31, align 8, !dbg !5886, !tbaa !4140
  %and32 = and i32 %21, 3, !dbg !5886
  %conv33 = sext i32 %and32 to i64, !dbg !5886
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 0), !dbg !5886
  %tobool35 = icmp ne i64 %expval34, 0, !dbg !5886
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !5889

if.then36:                                        ; preds = %do.body29
  %22 = load ptr, ptr %rk.addr, align 8, !dbg !5886, !tbaa !3910
  %rk_conf37 = getelementptr inbounds %struct.rd_kafka_s, ptr %22, i32 0, i32 18, !dbg !5886
  %23 = load ptr, ptr %rk.addr, align 8, !dbg !5886, !tbaa !3910
  %24 = load ptr, ptr %reason.addr, align 8, !dbg !5886, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf37, ptr noundef %23, ptr noundef null, i32 noundef 7, i32 noundef 3, ptr noundef @.str.3, ptr noundef @.str.87, ptr noundef %24), !dbg !5886
  br label %if.end38, !dbg !5886

if.end38:                                         ; preds = %if.then36, %do.body29
  br label %do.cond39, !dbg !5889

do.cond39:                                        ; preds = %if.end38
  br label %do.end40, !dbg !5889

do.end40:                                         ; preds = %do.cond39
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5890

if.end41:                                         ; preds = %if.end26
  br label %do.body42, !dbg !5891

do.body42:                                        ; preds = %if.end41
  %25 = load ptr, ptr %rkb, align 8, !dbg !5892, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 32, !dbg !5892
  %26 = load ptr, ptr %rkb_rk, align 8, !dbg !5892, !tbaa !4139
  %rk_conf43 = getelementptr inbounds %struct.rd_kafka_s, ptr %26, i32 0, i32 18, !dbg !5892
  %debug44 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf43, i32 0, i32 13, !dbg !5892
  %27 = load i32, ptr %debug44, align 8, !dbg !5892, !tbaa !4140
  %and45 = and i32 %27, 3, !dbg !5892
  %conv46 = sext i32 %and45 to i64, !dbg !5892
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 0), !dbg !5892
  %tobool48 = icmp ne i64 %expval47, 0, !dbg !5892
  br i1 %tobool48, label %if.then49, label %if.end61, !dbg !5893

if.then49:                                        ; preds = %do.body42
  br label %do.body50, !dbg !5894

do.body50:                                        ; preds = %if.then49
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !5895
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !5820, metadata !DIExpression()), !dbg !5895
  %28 = load ptr, ptr %rkb, align 8, !dbg !5895, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 49, !dbg !5895
  %call51 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !5895
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !5895
  %29 = load ptr, ptr %rkb, align 8, !dbg !5895, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 48, !dbg !5895
  %30 = load ptr, ptr %rkb_logname, align 8, !dbg !5895, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %30, i64 noundef 256), !dbg !5895
  %31 = load ptr, ptr %rkb, align 8, !dbg !5895, !tbaa !3910
  %rkb_logname_lock52 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 49, !dbg !5895
  %call53 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock52), !dbg !5895
  %32 = load ptr, ptr %rkb, align 8, !dbg !5895, !tbaa !3910
  %rkb_rk54 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 32, !dbg !5895
  %33 = load ptr, ptr %rkb_rk54, align 8, !dbg !5895, !tbaa !4139
  %rk_conf55 = getelementptr inbounds %struct.rd_kafka_s, ptr %33, i32 0, i32 18, !dbg !5895
  %34 = load ptr, ptr %rkb, align 8, !dbg !5895, !tbaa !3910
  %rkb_rk56 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 32, !dbg !5895
  %35 = load ptr, ptr %rkb_rk56, align 8, !dbg !5895, !tbaa !4139
  %arraydecay57 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !5895
  %36 = load ptr, ptr %reason.addr, align 8, !dbg !5895, !tbaa !3910
  %37 = load ptr, ptr %rkb, align 8, !dbg !5895, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 28, !dbg !5895
  %connects = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 13, !dbg !5895
  %call58 = call i32 @rd_atomic32_get(ptr noundef %connects), !dbg !5895
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf55, ptr noundef %35, ptr noundef %arraydecay57, i32 noundef 7, i32 noundef 3, ptr noundef @.str.3, ptr noundef @.str.88, ptr noundef %36, i32 noundef %call58), !dbg !5895
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !5894
  br label %do.cond59, !dbg !5895

do.cond59:                                        ; preds = %do.body50
  br label %do.end60, !dbg !5895

do.end60:                                         ; preds = %do.cond59
  br label %if.end61, !dbg !5894

if.end61:                                         ; preds = %do.end60, %do.body42
  br label %do.cond62, !dbg !5893

do.cond62:                                        ; preds = %if.end61
  br label %do.end63, !dbg !5893

do.end63:                                         ; preds = %do.cond62
  %38 = load ptr, ptr %rkb, align 8, !dbg !5896, !tbaa !3910
  call void @rd_kafka_broker_schedule_connection(ptr noundef %38), !dbg !5897
  br label %do.body64, !dbg !5898

do.body64:                                        ; preds = %do.end63
  %39 = load ptr, ptr %rkb, align 8, !dbg !5899, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 31, !dbg !5899
  %call65 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt), !dbg !5899
  %cmp66 = icmp sgt i32 %call65, 0, !dbg !5899
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !5902

if.then68:                                        ; preds = %do.body64
  br label %do.end71, !dbg !5899

if.end69:                                         ; preds = %do.body64
  %40 = load ptr, ptr %rkb, align 8, !dbg !5902, !tbaa !3910
  call void @rd_kafka_broker_destroy_final(ptr noundef %40), !dbg !5902
  br label %do.cond70, !dbg !5902

do.cond70:                                        ; preds = %if.end69
  br label %do.end71, !dbg !5902

do.end71:                                         ; preds = %do.cond70, %if.then68
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5903
  br label %cleanup, !dbg !5903

cleanup:                                          ; preds = %do.end71, %do.end40, %do.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %suppr) #16, !dbg !5903
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !5903
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !5903

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_any_up(ptr noundef %rk, ptr noundef %filtered_cnt, ptr noundef %filter, ptr noundef %opaque, ptr noundef %reason) #0 !dbg !5904 {
entry:
  %rk.addr = alloca ptr, align 8
  %filtered_cnt.addr = alloca ptr, align 8
  %filter.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  %reason.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5908, metadata !DIExpression()), !dbg !5914
  store ptr %filtered_cnt, ptr %filtered_cnt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %filtered_cnt.addr, metadata !5909, metadata !DIExpression()), !dbg !5915
  store ptr %filter, ptr %filter.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %filter.addr, metadata !5910, metadata !DIExpression()), !dbg !5916
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !5911, metadata !DIExpression()), !dbg !5917
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !5912, metadata !DIExpression()), !dbg !5918
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !5919
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !5913, metadata !DIExpression()), !dbg !5920
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !5921, !tbaa !3910
  %1 = load ptr, ptr %filtered_cnt.addr, align 8, !dbg !5922, !tbaa !3910
  %2 = load ptr, ptr %filter.addr, align 8, !dbg !5923, !tbaa !3910
  %3 = load ptr, ptr %opaque.addr, align 8, !dbg !5924, !tbaa !3910
  %call = call ptr @rd_kafka_broker_random0(ptr noundef @__FUNCTION__.rd_kafka_broker_any_up, i32 noundef 1549, ptr noundef %0, i8 noundef zeroext 1, i32 noundef -1, ptr noundef %1, ptr noundef %2, ptr noundef %3), !dbg !5925
  store ptr %call, ptr %rkb, align 8, !dbg !5926, !tbaa !3910
  %4 = load ptr, ptr %rkb, align 8, !dbg !5927, !tbaa !3910
  %tobool = icmp ne ptr %4, null, !dbg !5927
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5929

land.lhs.true:                                    ; preds = %entry
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !5930, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 18, !dbg !5931
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 32, !dbg !5932
  %6 = load i32, ptr %sparse_connections, align 4, !dbg !5932, !tbaa !5300
  %tobool1 = icmp ne i32 %6, 0, !dbg !5930
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5933

if.then:                                          ; preds = %land.lhs.true
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !5934, !tbaa !3910
  %8 = load ptr, ptr %reason.addr, align 8, !dbg !5936, !tbaa !3910
  call void @rd_kafka_connect_any(ptr noundef %7, ptr noundef %8), !dbg !5937
  br label %if.end, !dbg !5938

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load ptr, ptr %rkb, align 8, !dbg !5939, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !5940
  ret ptr %9, !dbg !5941
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_any_usable(ptr noundef %rk, i32 noundef %timeout_ms, i32 noundef %do_lock, i32 noundef %features, ptr noundef %reason) #0 !dbg !5942 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %timeout_ms.addr = alloca i32, align 4
  %do_lock.addr = alloca i32, align 4
  %features.addr = alloca i32, align 4
  %reason.addr = alloca ptr, align 8
  %ts_end = alloca i64, align 8
  %rkb = alloca ptr, align 8
  %remains = alloca i32, align 4
  %version = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !5947, metadata !DIExpression()), !dbg !5958
  store i32 %timeout_ms, ptr %timeout_ms.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %timeout_ms.addr, metadata !5948, metadata !DIExpression()), !dbg !5959
  store i32 %do_lock, ptr %do_lock.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %do_lock.addr, metadata !5949, metadata !DIExpression()), !dbg !5960
  store i32 %features, ptr %features.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %features.addr, metadata !5950, metadata !DIExpression()), !dbg !5961
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !5951, metadata !DIExpression()), !dbg !5962
  call void @llvm.lifetime.start.p0(i64 8, ptr %ts_end) #16, !dbg !5963
  tail call void @llvm.dbg.declare(metadata ptr %ts_end, metadata !5952, metadata !DIExpression()), !dbg !5964
  %0 = load i32, ptr %timeout_ms.addr, align 4, !dbg !5965, !tbaa !3959
  %call = call i64 @rd_timeout_init(i32 noundef %0), !dbg !5966
  store i64 %call, ptr %ts_end, align 8, !dbg !5964, !tbaa !4039
  br label %while.cond, !dbg !5967

while.cond:                                       ; preds = %cleanup.cont, %entry
  br label %while.body, !dbg !5967

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !5968
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !5954, metadata !DIExpression()), !dbg !5969
  call void @llvm.lifetime.start.p0(i64 4, ptr %remains) #16, !dbg !5970
  tail call void @llvm.dbg.declare(metadata ptr %remains, metadata !5956, metadata !DIExpression()), !dbg !5971
  call void @llvm.lifetime.start.p0(i64 4, ptr %version) #16, !dbg !5972
  tail call void @llvm.dbg.declare(metadata ptr %version, metadata !5957, metadata !DIExpression()), !dbg !5973
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !5974, !tbaa !3910
  %call1 = call i32 @rd_kafka_brokers_get_state_version(ptr noundef %1), !dbg !5975
  store i32 %call1, ptr %version, align 4, !dbg !5973, !tbaa !3959
  %2 = load i32, ptr %do_lock.addr, align 4, !dbg !5976, !tbaa !4126
  %tobool = icmp ne i32 %2, 0, !dbg !5976
  br i1 %tobool, label %if.then, label %if.end, !dbg !5978

if.then:                                          ; preds = %while.body
  %3 = load ptr, ptr %rk.addr, align 8, !dbg !5979, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 24, !dbg !5979
  %call2 = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !5979
  br label %if.end, !dbg !5979

if.end:                                           ; preds = %if.then, %while.body
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !5980, !tbaa !3910
  %5 = load i32, ptr %features.addr, align 4, !dbg !5981, !tbaa !3959
  %call3 = call ptr @rd_kafka_broker_weighted(ptr noundef %4, ptr noundef @rd_kafka_broker_weight_usable, i32 noundef %5), !dbg !5982
  store ptr %call3, ptr %rkb, align 8, !dbg !5983, !tbaa !3910
  %6 = load ptr, ptr %rkb, align 8, !dbg !5984, !tbaa !3910
  %tobool4 = icmp ne ptr %6, null, !dbg !5984
  br i1 %tobool4, label %if.end7, label %land.lhs.true, !dbg !5986

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !5987, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 18, !dbg !5988
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 32, !dbg !5989
  %8 = load i32, ptr %sparse_connections, align 4, !dbg !5989, !tbaa !5300
  %tobool5 = icmp ne i32 %8, 0, !dbg !5987
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5990

if.then6:                                         ; preds = %land.lhs.true
  %9 = load ptr, ptr %rk.addr, align 8, !dbg !5991, !tbaa !3910
  %10 = load ptr, ptr %reason.addr, align 8, !dbg !5993, !tbaa !3910
  call void @rd_kafka_connect_any(ptr noundef %9, ptr noundef %10), !dbg !5994
  br label %if.end7, !dbg !5995

if.end7:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %11 = load i32, ptr %do_lock.addr, align 4, !dbg !5996, !tbaa !4126
  %tobool8 = icmp ne i32 %11, 0, !dbg !5996
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !5998

if.then9:                                         ; preds = %if.end7
  %12 = load ptr, ptr %rk.addr, align 8, !dbg !5999, !tbaa !3910
  %rk_lock10 = getelementptr inbounds %struct.rd_kafka_s, ptr %12, i32 0, i32 24, !dbg !5999
  %call11 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock10), !dbg !5999
  br label %if.end12, !dbg !5999

if.end12:                                         ; preds = %if.then9, %if.end7
  %13 = load ptr, ptr %rkb, align 8, !dbg !6000, !tbaa !3910
  %tobool13 = icmp ne ptr %13, null, !dbg !6000
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !6002

if.then14:                                        ; preds = %if.end12
  %14 = load ptr, ptr %rkb, align 8, !dbg !6003, !tbaa !3910
  store ptr %14, ptr %retval, align 8, !dbg !6004
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6004

if.end15:                                         ; preds = %if.end12
  %15 = load i64, ptr %ts_end, align 8, !dbg !6005, !tbaa !4039
  %call16 = call i32 @rd_timeout_remains(i64 noundef %15), !dbg !6006
  store i32 %call16, ptr %remains, align 4, !dbg !6007, !tbaa !3959
  %16 = load i32, ptr %remains, align 4, !dbg !6008, !tbaa !3959
  %call17 = call i32 @rd_timeout_expired(i32 noundef %16), !dbg !6010
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6010
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6011

if.then19:                                        ; preds = %if.end15
  store ptr null, ptr %retval, align 8, !dbg !6012
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6012

if.end20:                                         ; preds = %if.end15
  %17 = load ptr, ptr %rk.addr, align 8, !dbg !6013, !tbaa !3910
  %18 = load i32, ptr %version, align 4, !dbg !6014, !tbaa !3959
  %19 = load i32, ptr %remains, align 4, !dbg !6015, !tbaa !3959
  %call21 = call i32 @rd_kafka_brokers_wait_state_change(ptr noundef %17, i32 noundef %18, i32 noundef %19), !dbg !6016
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6017
  br label %cleanup, !dbg !6017

cleanup:                                          ; preds = %if.end20, %if.then19, %if.then14
  call void @llvm.lifetime.end.p0(i64 4, ptr %version) #16, !dbg !6017
  call void @llvm.lifetime.end.p0(i64 4, ptr %remains) #16, !dbg !6017
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6017
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup24 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !5967, !llvm.loop !6018

cleanup24:                                        ; preds = %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %ts_end) #16, !dbg !6019
  %20 = load ptr, ptr %retval, align 8, !dbg !6019
  ret ptr %20, !dbg !6019
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_timeout_init(i32 noundef %timeout_ms) #4 !dbg !6020 {
entry:
  %retval = alloca i64, align 8
  %timeout_ms.addr = alloca i32, align 4
  store i32 %timeout_ms, ptr %timeout_ms.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %timeout_ms.addr, metadata !6024, metadata !DIExpression()), !dbg !6025
  %0 = load i32, ptr %timeout_ms.addr, align 4, !dbg !6026, !tbaa !3959
  %cmp = icmp eq i32 %0, -1, !dbg !6028
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6029

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, ptr %timeout_ms.addr, align 4, !dbg !6030, !tbaa !3959
  %cmp1 = icmp eq i32 %1, 0, !dbg !6031
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6032

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, ptr %timeout_ms.addr, align 4, !dbg !6033, !tbaa !3959
  %conv = sext i32 %2 to i64, !dbg !6033
  store i64 %conv, ptr %retval, align 8, !dbg !6034
  br label %return, !dbg !6034

if.end:                                           ; preds = %lor.lhs.false
  %call = call i64 @rd_clock(), !dbg !6035
  %3 = load i32, ptr %timeout_ms.addr, align 4, !dbg !6036, !tbaa !3959
  %conv2 = sext i32 %3 to i64, !dbg !6037
  %mul = mul nsw i64 %conv2, 1000, !dbg !6038
  %add = add nsw i64 %call, %mul, !dbg !6039
  store i64 %add, ptr %retval, align 8, !dbg !6040
  br label %return, !dbg !6040

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, ptr %retval, align 8, !dbg !6041
  ret i64 %4, !dbg !6041
}

declare !dbg !6042 i32 @rwlock_rdlock(ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal ptr @rd_kafka_broker_weighted(ptr noundef %rk, ptr noundef %weight_cb, i32 noundef %features) #0 !dbg !6046 {
entry:
  %rk.addr = alloca ptr, align 8
  %weight_cb.addr = alloca ptr, align 8
  %features.addr = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %good = alloca ptr, align 8
  %highest = alloca i32, align 4
  %cnt = alloca i32, align 4
  %weight = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !6053, metadata !DIExpression()), !dbg !6064
  store ptr %weight_cb, ptr %weight_cb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %weight_cb.addr, metadata !6054, metadata !DIExpression()), !dbg !6065
  store i32 %features, ptr %features.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %features.addr, metadata !6055, metadata !DIExpression()), !dbg !6066
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !6067
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !6056, metadata !DIExpression()), !dbg !6068
  call void @llvm.lifetime.start.p0(i64 8, ptr %good) #16, !dbg !6067
  tail call void @llvm.dbg.declare(metadata ptr %good, metadata !6057, metadata !DIExpression()), !dbg !6069
  store ptr null, ptr %good, align 8, !dbg !6069, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 4, ptr %highest) #16, !dbg !6070
  tail call void @llvm.dbg.declare(metadata ptr %highest, metadata !6058, metadata !DIExpression()), !dbg !6071
  store i32 0, ptr %highest, align 4, !dbg !6071, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !6072
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !6059, metadata !DIExpression()), !dbg !6073
  store i32 0, ptr %cnt, align 4, !dbg !6073, !tbaa !3959
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !6074, !tbaa !3910
  %rk_brokers = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 2, !dbg !6074
  %tqh_first = getelementptr inbounds %struct.anon.12, ptr %rk_brokers, i32 0, i32 0, !dbg !6074
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !6074, !tbaa !5741
  store ptr %1, ptr %rkb, align 8, !dbg !6074, !tbaa !3910
  br label %for.cond, !dbg !6074

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %rkb, align 8, !dbg !6075, !tbaa !3910
  %cmp = icmp ne ptr %2, null, !dbg !6075
  br i1 %cmp, label %for.body, label %for.end, !dbg !6074

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %weight) #16, !dbg !6076
  tail call void @llvm.dbg.declare(metadata ptr %weight, metadata !6060, metadata !DIExpression()), !dbg !6077
  %3 = load ptr, ptr %rkb, align 8, !dbg !6078, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 9, !dbg !6078
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !6078
  %4 = load i32, ptr %features.addr, align 4, !dbg !6079, !tbaa !3959
  %tobool = icmp ne i32 %4, 0, !dbg !6079
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6081

land.lhs.true:                                    ; preds = %for.body
  %5 = load ptr, ptr %rkb, align 8, !dbg !6082, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 23, !dbg !6083
  %6 = load i32, ptr %rkb_features, align 4, !dbg !6083, !tbaa !3938
  %7 = load i32, ptr %features.addr, align 4, !dbg !6084, !tbaa !3959
  %and = and i32 %6, %7, !dbg !6085
  %8 = load i32, ptr %features.addr, align 4, !dbg !6086, !tbaa !3959
  %cmp1 = icmp ne i32 %and, %8, !dbg !6087
  br i1 %cmp1, label %if.then, label %if.else, !dbg !6088

if.then:                                          ; preds = %land.lhs.true
  store i32 0, ptr %weight, align 4, !dbg !6089, !tbaa !3959
  br label %if.end, !dbg !6090

if.else:                                          ; preds = %land.lhs.true, %for.body
  %9 = load ptr, ptr %weight_cb.addr, align 8, !dbg !6091, !tbaa !3910
  %10 = load ptr, ptr %rkb, align 8, !dbg !6092, !tbaa !3910
  %call2 = call i32 %9(ptr noundef %10), !dbg !6091
  store i32 %call2, ptr %weight, align 4, !dbg !6093, !tbaa !3959
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load ptr, ptr %rkb, align 8, !dbg !6094, !tbaa !3910
  %rkb_lock3 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 9, !dbg !6094
  %call4 = call i32 @mtx_unlock(ptr noundef %rkb_lock3), !dbg !6094
  %12 = load i32, ptr %weight, align 4, !dbg !6095, !tbaa !3959
  %cmp5 = icmp sle i32 %12, 0, !dbg !6097
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !6098

lor.lhs.false:                                    ; preds = %if.end
  %13 = load i32, ptr %weight, align 4, !dbg !6099, !tbaa !3959
  %14 = load i32, ptr %highest, align 4, !dbg !6100, !tbaa !3959
  %cmp6 = icmp slt i32 %13, %14, !dbg !6101
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6102

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6103

if.end8:                                          ; preds = %lor.lhs.false
  %15 = load i32, ptr %weight, align 4, !dbg !6104, !tbaa !3959
  %16 = load i32, ptr %highest, align 4, !dbg !6106, !tbaa !3959
  %cmp9 = icmp sgt i32 %15, %16, !dbg !6107
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6108

if.then10:                                        ; preds = %if.end8
  %17 = load i32, ptr %weight, align 4, !dbg !6109, !tbaa !3959
  store i32 %17, ptr %highest, align 4, !dbg !6111, !tbaa !3959
  store i32 0, ptr %cnt, align 4, !dbg !6112, !tbaa !3959
  br label %if.end11, !dbg !6113

if.end11:                                         ; preds = %if.then10, %if.end8
  %18 = load i32, ptr %cnt, align 4, !dbg !6114, !tbaa !3959
  %cmp12 = icmp slt i32 %18, 1, !dbg !6116
  br i1 %cmp12, label %if.then16, label %lor.lhs.false13, !dbg !6117

lor.lhs.false13:                                  ; preds = %if.end11
  %19 = load i32, ptr %cnt, align 4, !dbg !6118, !tbaa !3959
  %call14 = call i32 @rd_jitter(i32 noundef 0, i32 noundef %19), !dbg !6119
  %cmp15 = icmp slt i32 %call14, 1, !dbg !6120
  br i1 %cmp15, label %if.then16, label %if.end26, !dbg !6121

if.then16:                                        ; preds = %lor.lhs.false13, %if.end11
  %20 = load ptr, ptr %good, align 8, !dbg !6122, !tbaa !3910
  %tobool17 = icmp ne ptr %20, null, !dbg !6122
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !6125

if.then18:                                        ; preds = %if.then16
  br label %do.body, !dbg !6126

do.body:                                          ; preds = %if.then18
  %21 = load ptr, ptr %good, align 8, !dbg !6127, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 31, !dbg !6127
  %call19 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt), !dbg !6127
  %cmp20 = icmp sgt i32 %call19, 0, !dbg !6127
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !6130

if.then21:                                        ; preds = %do.body
  br label %do.end, !dbg !6127

if.end22:                                         ; preds = %do.body
  %22 = load ptr, ptr %good, align 8, !dbg !6130, !tbaa !3910
  call void @rd_kafka_broker_destroy_final(ptr noundef %22), !dbg !6130
  br label %do.cond, !dbg !6130

do.cond:                                          ; preds = %if.end22
  br label %do.end, !dbg !6130

do.end:                                           ; preds = %do.cond, %if.then21
  br label %if.end23, !dbg !6130

if.end23:                                         ; preds = %do.end, %if.then16
  %23 = load ptr, ptr %rkb, align 8, !dbg !6131, !tbaa !3910
  %rkb_refcnt24 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 31, !dbg !6131
  %call25 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt24, i32 noundef 1), !dbg !6131
  %24 = load ptr, ptr %rkb, align 8, !dbg !6132, !tbaa !3910
  store ptr %24, ptr %good, align 8, !dbg !6133, !tbaa !3910
  br label %if.end26, !dbg !6134

if.end26:                                         ; preds = %if.end23, %lor.lhs.false13
  %25 = load i32, ptr %cnt, align 4, !dbg !6135, !tbaa !3959
  %inc = add nsw i32 %25, 1, !dbg !6135
  store i32 %inc, ptr %cnt, align 4, !dbg !6135, !tbaa !3959
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6136
  br label %cleanup, !dbg !6136

cleanup:                                          ; preds = %if.end26, %if.then7
  call void @llvm.lifetime.end.p0(i64 4, ptr %weight) #16, !dbg !6136
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 4, label %for.inc
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !6137

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %26 = load ptr, ptr %rkb, align 8, !dbg !6075, !tbaa !3910
  %rkb_link = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 0, !dbg !6075
  %tqe_next = getelementptr inbounds %struct.anon, ptr %rkb_link, i32 0, i32 0, !dbg !6075
  %27 = load ptr, ptr %tqe_next, align 8, !dbg !6075, !tbaa !5799
  store ptr %27, ptr %rkb, align 8, !dbg !6075, !tbaa !3910
  br label %for.cond, !dbg !6075, !llvm.loop !6138

for.end:                                          ; preds = %for.cond
  %28 = load ptr, ptr %good, align 8, !dbg !6140, !tbaa !3910
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !6141
  call void @llvm.lifetime.end.p0(i64 4, ptr %highest) #16, !dbg !6141
  call void @llvm.lifetime.end.p0(i64 8, ptr %good) #16, !dbg !6141
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6141
  ret ptr %28, !dbg !6142

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_weight_usable(ptr noundef %rkb) #0 !dbg !6143 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %weight = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %tx_last = alloca i64, align 8
  %idle = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !6145, metadata !DIExpression()), !dbg !6151
  call void @llvm.lifetime.start.p0(i64 4, ptr %weight) #16, !dbg !6152
  tail call void @llvm.dbg.declare(metadata ptr %weight, metadata !6146, metadata !DIExpression()), !dbg !6153
  store i32 0, ptr %weight, align 4, !dbg !6153, !tbaa !3959
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !6154, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 19, !dbg !6154
  %1 = load i32, ptr %rkb_state, align 4, !dbg !6154, !tbaa !4130
  %cmp = icmp eq i32 %1, 6, !dbg !6154
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !6154

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !6154, !tbaa !3910
  %rkb_state1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 19, !dbg !6154
  %3 = load i32, ptr %rkb_state1, align 4, !dbg !6154, !tbaa !4130
  %cmp2 = icmp eq i32 %3, 7, !dbg !6154
  br i1 %cmp2, label %if.end, label %if.then, !dbg !6156

if.then:                                          ; preds = %lor.lhs.false
  store i32 0, ptr %retval, align 4, !dbg !6157
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6157

if.end:                                           ; preds = %lor.lhs.false, %entry
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !6158, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 1, !dbg !6159
  %5 = load i32, ptr %rkb_nodeid, align 8, !dbg !6159, !tbaa !4311
  %cmp3 = icmp ne i32 %5, -1, !dbg !6160
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !6161

land.rhs:                                         ; preds = %if.end
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !6162, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 27, !dbg !6162
  %7 = load i32, ptr %rkb_source, align 8, !dbg !6162, !tbaa !4174
  %cmp4 = icmp eq i32 %7, 3, !dbg !6162
  %lnot = xor i1 %cmp4, true, !dbg !6163
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %8 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !6164
  %land.ext = zext i1 %8 to i32, !dbg !6161
  %mul = mul nsw i32 2000, %land.ext, !dbg !6165
  %9 = load i32, ptr %weight, align 4, !dbg !6166, !tbaa !3959
  %add = add nsw i32 %9, %mul, !dbg !6166
  store i32 %add, ptr %weight, align 4, !dbg !6166, !tbaa !3959
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !6167, !tbaa !3910
  %rkb_source5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 27, !dbg !6167
  %11 = load i32, ptr %rkb_source5, align 8, !dbg !6167, !tbaa !4174
  %cmp6 = icmp eq i32 %11, 3, !dbg !6167
  %lnot7 = xor i1 %cmp6, true, !dbg !6168
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !6168
  %mul8 = mul nsw i32 10, %lnot.ext, !dbg !6169
  %12 = load i32, ptr %weight, align 4, !dbg !6170, !tbaa !3959
  %add9 = add nsw i32 %12, %mul8, !dbg !6170
  store i32 %add9, ptr %weight, align 4, !dbg !6170, !tbaa !3959
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !6171, !tbaa !3910
  %rkb_blocking_request_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 22, !dbg !6171
  %call = call i32 @rd_atomic32_get(ptr noundef %rkb_blocking_request_cnt), !dbg !6171
  %tobool = icmp ne i32 %call, 0, !dbg !6171
  %lnot10 = xor i1 %tobool, true, !dbg !6171
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !6171
  %conv = sext i32 %lnot.ext11 to i64, !dbg !6171
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6171
  %tobool12 = icmp ne i64 %expval, 0, !dbg !6171
  br i1 %tobool12, label %if.then13, label %if.end43, !dbg !6172

if.then13:                                        ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tx_last) #16, !dbg !6173
  tail call void @llvm.dbg.declare(metadata ptr %tx_last, metadata !6147, metadata !DIExpression()), !dbg !6174
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !6175, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 28, !dbg !6176
  %ts_send = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 16, !dbg !6177
  %call14 = call i64 @rd_atomic64_get(ptr noundef %ts_send), !dbg !6178
  store i64 %call14, ptr %tx_last, align 8, !dbg !6174, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 4, ptr %idle) #16, !dbg !6179
  tail call void @llvm.dbg.declare(metadata ptr %idle, metadata !6150, metadata !DIExpression()), !dbg !6180
  %call15 = call i64 @rd_clock(), !dbg !6181
  %15 = load i64, ptr %tx_last, align 8, !dbg !6182, !tbaa !4039
  %cmp16 = icmp sgt i64 %15, 0, !dbg !6183
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !6182

cond.true:                                        ; preds = %if.then13
  %16 = load i64, ptr %tx_last, align 8, !dbg !6184, !tbaa !4039
  br label %cond.end, !dbg !6182

cond.false:                                       ; preds = %if.then13
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !6185, !tbaa !3910
  %rkb_ts_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 20, !dbg !6186
  %18 = load i64, ptr %rkb_ts_state, align 8, !dbg !6186, !tbaa !4301
  br label %cond.end, !dbg !6182

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %16, %cond.true ], [ %18, %cond.false ], !dbg !6182
  %sub = sub nsw i64 %call15, %cond, !dbg !6187
  %div = sdiv i64 %sub, 1000000, !dbg !6188
  %conv18 = trunc i64 %div to i32, !dbg !6189
  store i32 %conv18, ptr %idle, align 4, !dbg !6180, !tbaa !3959
  %19 = load i32, ptr %weight, align 4, !dbg !6190, !tbaa !3959
  %add19 = add nsw i32 %19, 1, !dbg !6190
  store i32 %add19, ptr %weight, align 4, !dbg !6190, !tbaa !3959
  %20 = load i32, ptr %idle, align 4, !dbg !6191, !tbaa !3959
  %cmp20 = icmp slt i32 %20, 0, !dbg !6193
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !6194

if.then22:                                        ; preds = %cond.end
  br label %if.end42, !dbg !6194

if.else:                                          ; preds = %cond.end
  %21 = load i32, ptr %idle, align 4, !dbg !6195, !tbaa !3959
  %cmp23 = icmp slt i32 %21, 600, !dbg !6197
  br i1 %cmp23, label %if.then25, label %if.else29, !dbg !6198

if.then25:                                        ; preds = %if.else
  %22 = load i32, ptr %idle, align 4, !dbg !6199, !tbaa !3959
  %sub26 = sub nsw i32 600, %22, !dbg !6200
  %add27 = add nsw i32 1000, %sub26, !dbg !6201
  %23 = load i32, ptr %weight, align 4, !dbg !6202, !tbaa !3959
  %add28 = add nsw i32 %23, %add27, !dbg !6202
  store i32 %add28, ptr %weight, align 4, !dbg !6202, !tbaa !3959
  br label %if.end41, !dbg !6203

if.else29:                                        ; preds = %if.else
  %24 = load i32, ptr %idle, align 4, !dbg !6204, !tbaa !3959
  %div30 = sdiv i32 %24, 3600, !dbg !6204
  %cmp31 = icmp slt i32 %div30, 100, !dbg !6204
  br i1 %cmp31, label %cond.true33, label %cond.false35, !dbg !6204

cond.true33:                                      ; preds = %if.else29
  %25 = load i32, ptr %idle, align 4, !dbg !6204, !tbaa !3959
  %div34 = sdiv i32 %25, 3600, !dbg !6204
  br label %cond.end36, !dbg !6204

cond.false35:                                     ; preds = %if.else29
  br label %cond.end36, !dbg !6204

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi i32 [ %div34, %cond.true33 ], [ 100, %cond.false35 ], !dbg !6204
  %sub38 = sub nsw i32 100, %cond37, !dbg !6205
  %add39 = add nsw i32 100, %sub38, !dbg !6206
  %26 = load i32, ptr %weight, align 4, !dbg !6207, !tbaa !3959
  %add40 = add nsw i32 %26, %add39, !dbg !6207
  store i32 %add40, ptr %weight, align 4, !dbg !6207, !tbaa !3959
  br label %if.end41

if.end41:                                         ; preds = %cond.end36, %if.then25
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then22
  call void @llvm.lifetime.end.p0(i64 4, ptr %idle) #16, !dbg !6208
  call void @llvm.lifetime.end.p0(i64 8, ptr %tx_last) #16, !dbg !6208
  br label %if.end43, !dbg !6209

if.end43:                                         ; preds = %if.end42, %land.end
  %27 = load i32, ptr %weight, align 4, !dbg !6210, !tbaa !3959
  store i32 %27, ptr %retval, align 4, !dbg !6211
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6211

cleanup:                                          ; preds = %if.end43, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %weight) #16, !dbg !6212
  %28 = load i32, ptr %retval, align 4, !dbg !6212
  ret i32 %28, !dbg !6212
}

declare !dbg !6213 i32 @rwlock_rdunlock(ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_timeout_remains(i64 noundef %abs_timeout) #4 !dbg !6214 {
entry:
  %abs_timeout.addr = alloca i64, align 8
  store i64 %abs_timeout, ptr %abs_timeout.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout.addr, metadata !6218, metadata !DIExpression()), !dbg !6219
  %0 = load i64, ptr %abs_timeout.addr, align 8, !dbg !6220, !tbaa !4039
  %call = call i64 @rd_timeout_remains_us(i64 noundef %0), !dbg !6221
  %call1 = call i32 @rd_timeout_ms(i64 noundef %call), !dbg !6222
  ret i32 %call1, !dbg !6223
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_timeout_expired(i32 noundef %timeout_ms) #4 !dbg !6224 {
entry:
  %timeout_ms.addr = alloca i32, align 4
  store i32 %timeout_ms, ptr %timeout_ms.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %timeout_ms.addr, metadata !6228, metadata !DIExpression()), !dbg !6229
  %0 = load i32, ptr %timeout_ms.addr, align 4, !dbg !6230, !tbaa !3959
  %cmp = icmp eq i32 %0, 0, !dbg !6231
  %conv = zext i1 %cmp to i32, !dbg !6231
  ret i32 %conv, !dbg !6232
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_get_async(ptr noundef %rk, i32 noundef %broker_id, i32 noundef %state, ptr noundef %eonce) #0 !dbg !6233 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %broker_id.addr = alloca i32, align 4
  %state.addr = alloca i32, align 4
  %eonce.addr = alloca ptr, align 8
  %version = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !6237, metadata !DIExpression()), !dbg !6244
  store i32 %broker_id, ptr %broker_id.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %broker_id.addr, metadata !6238, metadata !DIExpression()), !dbg !6245
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !6239, metadata !DIExpression()), !dbg !6246
  store ptr %eonce, ptr %eonce.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %eonce.addr, metadata !6240, metadata !DIExpression()), !dbg !6247
  call void @llvm.lifetime.start.p0(i64 4, ptr %version) #16, !dbg !6248
  tail call void @llvm.dbg.declare(metadata ptr %version, metadata !6241, metadata !DIExpression()), !dbg !6249
  br label %do.body, !dbg !6250

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !6251
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !6242, metadata !DIExpression()), !dbg !6252
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !6253, !tbaa !3910
  %call = call i32 @rd_kafka_brokers_get_state_version(ptr noundef %0), !dbg !6254
  store i32 %call, ptr %version, align 4, !dbg !6255, !tbaa !3959
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !6256, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 24, !dbg !6256
  %call1 = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !6256
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !6257, !tbaa !3910
  %3 = load i32, ptr %broker_id.addr, align 4, !dbg !6257, !tbaa !3959
  %4 = load i32, ptr %state.addr, align 4, !dbg !6257, !tbaa !3959
  %call2 = call ptr @rd_kafka_broker_find_by_nodeid0_fl(ptr noundef @__FUNCTION__.rd_kafka_broker_get_async, i32 noundef 1646, ptr noundef %2, i32 noundef %3, i32 noundef %4, i8 noundef zeroext 1), !dbg !6257
  store ptr %call2, ptr %rkb, align 8, !dbg !6258, !tbaa !3910
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !6259, !tbaa !3910
  %rk_lock3 = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 24, !dbg !6259
  %call4 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock3), !dbg !6259
  %6 = load ptr, ptr %rkb, align 8, !dbg !6260, !tbaa !3910
  %tobool = icmp ne ptr %6, null, !dbg !6260
  br i1 %tobool, label %if.then, label %if.end, !dbg !6262

if.then:                                          ; preds = %do.body
  %7 = load ptr, ptr %rkb, align 8, !dbg !6263, !tbaa !3910
  store ptr %7, ptr %retval, align 8, !dbg !6264
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6264

if.end:                                           ; preds = %do.body
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6265
  br label %cleanup, !dbg !6265

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6265
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup7 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond, !dbg !6266

do.cond:                                          ; preds = %cleanup.cont
  %8 = load ptr, ptr %rk.addr, align 8, !dbg !6267, !tbaa !3910
  %9 = load i32, ptr %version, align 4, !dbg !6268, !tbaa !3959
  %10 = load ptr, ptr %eonce.addr, align 8, !dbg !6269, !tbaa !3910
  %call5 = call i32 @rd_kafka_brokers_wait_state_change_async(ptr noundef %8, i32 noundef %9, ptr noundef %10), !dbg !6270
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6271
  %lnot = xor i1 %tobool6, true, !dbg !6271
  br i1 %lnot, label %do.body, label %do.end, !dbg !6266, !llvm.loop !6272

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %retval, align 8, !dbg !6274
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup7, !dbg !6274

cleanup7:                                         ; preds = %do.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %version) #16, !dbg !6275
  %11 = load ptr, ptr %retval, align 8, !dbg !6275
  ret ptr %11, !dbg !6275
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_find_by_nodeid0_fl(ptr noundef %func, i32 noundef %line, ptr noundef %rk, i32 noundef %nodeid, i32 noundef %state, i8 noundef zeroext %do_connect) #0 !dbg !6276 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %line.addr = alloca i32, align 4
  %rk.addr = alloca ptr, align 8
  %nodeid.addr = alloca i32, align 4
  %state.addr = alloca i32, align 4
  %do_connect.addr = alloca i8, align 1
  %rkb = alloca ptr, align 8
  %skel = alloca %struct.rd_kafka_broker_s, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %broker_state = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !6280, metadata !DIExpression()), !dbg !6291
  store i32 %line, ptr %line.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %line.addr, metadata !6281, metadata !DIExpression()), !dbg !6292
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !6282, metadata !DIExpression()), !dbg !6293
  store i32 %nodeid, ptr %nodeid.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %nodeid.addr, metadata !6283, metadata !DIExpression()), !dbg !6294
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !6284, metadata !DIExpression()), !dbg !6295
  store i8 %do_connect, ptr %do_connect.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %do_connect.addr, metadata !6285, metadata !DIExpression()), !dbg !6296
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !6297
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !6286, metadata !DIExpression()), !dbg !6298
  call void @llvm.lifetime.start.p0(i64 3184, ptr %skel) #16, !dbg !6299
  tail call void @llvm.dbg.declare(metadata ptr %skel, metadata !6287, metadata !DIExpression()), !dbg !6300
  call void @llvm.memset.p0.i64(ptr align 8 %skel, i8 0, i64 3184, i1 false), !dbg !6300
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %skel, i32 0, i32 1, !dbg !6301
  %0 = load i32, ptr %nodeid.addr, align 4, !dbg !6302, !tbaa !3959
  store i32 %0, ptr %rkb_nodeid, align 8, !dbg !6301, !tbaa !4311
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !6303, !tbaa !3910
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 23, !dbg !6303
  %call = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !6303
  %and = and i32 %call, 1, !dbg !6303
  %tobool = icmp ne i32 %and, 0, !dbg !6303
  br i1 %tobool, label %if.then, label %if.end, !dbg !6305

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !6306
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !6306

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !6307, !tbaa !3910
  %rk_broker_by_id = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 3, !dbg !6308
  %call1 = call ptr @rd_list_find(ptr noundef %rk_broker_by_id, ptr noundef %skel, ptr noundef @rd_kafka_broker_cmp_by_id), !dbg !6309
  store ptr %call1, ptr %rkb, align 8, !dbg !6310, !tbaa !3910
  %3 = load ptr, ptr %rkb, align 8, !dbg !6311, !tbaa !3910
  %tobool2 = icmp ne ptr %3, null, !dbg !6311
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6313

if.then3:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !6314
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !6314

if.end4:                                          ; preds = %if.end
  %4 = load i32, ptr %state.addr, align 4, !dbg !6315, !tbaa !3959
  %cmp = icmp ne i32 %4, -1, !dbg !6316
  br i1 %cmp, label %if.then5, label %if.end19, !dbg !6317

if.then5:                                         ; preds = %if.end4
  call void @llvm.lifetime.start.p0(i64 4, ptr %broker_state) #16, !dbg !6318
  tail call void @llvm.dbg.declare(metadata ptr %broker_state, metadata !6288, metadata !DIExpression()), !dbg !6319
  %5 = load ptr, ptr %rkb, align 8, !dbg !6320, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 9, !dbg !6320
  %call6 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !6320
  %6 = load ptr, ptr %rkb, align 8, !dbg !6321, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 19, !dbg !6322
  %7 = load i32, ptr %rkb_state, align 4, !dbg !6322, !tbaa !4130
  store i32 %7, ptr %broker_state, align 4, !dbg !6323, !tbaa !3959
  %8 = load ptr, ptr %rkb, align 8, !dbg !6324, !tbaa !3910
  %rkb_lock7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 9, !dbg !6324
  %call8 = call i32 @mtx_unlock(ptr noundef %rkb_lock7), !dbg !6324
  %9 = load i32, ptr %broker_state, align 4, !dbg !6325, !tbaa !3959
  %10 = load i32, ptr %state.addr, align 4, !dbg !6327, !tbaa !3959
  %cmp9 = icmp ne i32 %9, %10, !dbg !6328
  br i1 %cmp9, label %if.then10, label %if.end18, !dbg !6329

if.then10:                                        ; preds = %if.then5
  %11 = load i8, ptr %do_connect.addr, align 1, !dbg !6330, !tbaa !4126
  %conv = zext i8 %11 to i32, !dbg !6330
  %tobool11 = icmp ne i32 %conv, 0, !dbg !6330
  br i1 %tobool11, label %land.lhs.true, label %if.end17, !dbg !6333

land.lhs.true:                                    ; preds = %if.then10
  %12 = load i32, ptr %broker_state, align 4, !dbg !6334, !tbaa !3959
  %cmp12 = icmp eq i32 %12, 0, !dbg !6335
  br i1 %cmp12, label %land.lhs.true14, label %if.end17, !dbg !6336

land.lhs.true14:                                  ; preds = %land.lhs.true
  %13 = load ptr, ptr %rk.addr, align 8, !dbg !6337, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !6338
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 32, !dbg !6339
  %14 = load i32, ptr %sparse_connections, align 4, !dbg !6339, !tbaa !5300
  %tobool15 = icmp ne i32 %14, 0, !dbg !6337
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !6340

if.then16:                                        ; preds = %land.lhs.true14
  %15 = load ptr, ptr %rkb, align 8, !dbg !6341, !tbaa !3910
  call void @rd_kafka_broker_schedule_connection(ptr noundef %15), !dbg !6342
  br label %if.end17, !dbg !6342

if.end17:                                         ; preds = %if.then16, %land.lhs.true14, %land.lhs.true, %if.then10
  store ptr null, ptr %retval, align 8, !dbg !6343
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6343

if.end18:                                         ; preds = %if.then5
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6344
  br label %cleanup, !dbg !6344

cleanup:                                          ; preds = %if.end18, %if.end17
  call void @llvm.lifetime.end.p0(i64 4, ptr %broker_state) #16, !dbg !6344
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup21 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end19, !dbg !6345

if.end19:                                         ; preds = %cleanup.cont, %if.end4
  %16 = load ptr, ptr %rkb, align 8, !dbg !6346, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 31, !dbg !6346
  %call20 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !6346
  %17 = load ptr, ptr %rkb, align 8, !dbg !6347, !tbaa !3910
  store ptr %17, ptr %retval, align 8, !dbg !6348
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !6348

cleanup21:                                        ; preds = %if.end19, %cleanup, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 3184, ptr %skel) #16, !dbg !6349
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6349
  %18 = load ptr, ptr %retval, align 8, !dbg !6349
  ret ptr %18, !dbg !6349
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_brokers_get_nodeids_async(ptr noundef %rk, ptr noundef %eonce) #0 !dbg !6350 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %eonce.addr = alloca ptr, align 8
  %nodeids = alloca ptr, align 8
  %version = alloca i32, align 4
  %i = alloca i32, align 4
  %broker_cnt = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !6354, metadata !DIExpression()), !dbg !6362
  store ptr %eonce, ptr %eonce.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %eonce.addr, metadata !6355, metadata !DIExpression()), !dbg !6363
  call void @llvm.lifetime.start.p0(i64 8, ptr %nodeids) #16, !dbg !6364
  tail call void @llvm.dbg.declare(metadata ptr %nodeids, metadata !6356, metadata !DIExpression()), !dbg !6365
  store ptr null, ptr %nodeids, align 8, !dbg !6365, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 4, ptr %version) #16, !dbg !6366
  tail call void @llvm.dbg.declare(metadata ptr %version, metadata !6357, metadata !DIExpression()), !dbg !6367
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #16, !dbg !6366
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6358, metadata !DIExpression()), !dbg !6368
  call void @llvm.lifetime.start.p0(i64 4, ptr %broker_cnt) #16, !dbg !6366
  tail call void @llvm.dbg.declare(metadata ptr %broker_cnt, metadata !6359, metadata !DIExpression()), !dbg !6369
  br label %do.body, !dbg !6370

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !6371
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !6360, metadata !DIExpression()), !dbg !6372
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !6373, !tbaa !3910
  %call = call i32 @rd_kafka_brokers_get_state_version(ptr noundef %0), !dbg !6374
  store i32 %call, ptr %version, align 4, !dbg !6375, !tbaa !3959
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !6376, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 24, !dbg !6376
  %call1 = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !6376
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !6377, !tbaa !3910
  %rk_broker_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 4, !dbg !6378
  %call2 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_cnt), !dbg !6379
  store i32 %call2, ptr %broker_cnt, align 4, !dbg !6380, !tbaa !3959
  %3 = load ptr, ptr %nodeids, align 8, !dbg !6381, !tbaa !3910
  %tobool = icmp ne ptr %3, null, !dbg !6381
  br i1 %tobool, label %if.then, label %if.end5, !dbg !6383

if.then:                                          ; preds = %do.body
  %4 = load i32, ptr %broker_cnt, align 4, !dbg !6384, !tbaa !3959
  %5 = load ptr, ptr %nodeids, align 8, !dbg !6387, !tbaa !3910
  %call3 = call i32 @rd_list_cnt(ptr noundef %5), !dbg !6388
  %cmp = icmp sgt i32 %4, %call3, !dbg !6389
  br i1 %cmp, label %if.then4, label %if.else, !dbg !6390

if.then4:                                         ; preds = %if.then
  %6 = load ptr, ptr %nodeids, align 8, !dbg !6391, !tbaa !3910
  call void @rd_list_destroy(ptr noundef %6), !dbg !6393
  store ptr null, ptr %nodeids, align 8, !dbg !6394, !tbaa !3910
  br label %if.end, !dbg !6395

if.else:                                          ; preds = %if.then
  %7 = load ptr, ptr %nodeids, align 8, !dbg !6396, !tbaa !3910
  call void @rd_list_set_cnt(ptr noundef %7, i64 noundef 0), !dbg !6398
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end5, !dbg !6399

if.end5:                                          ; preds = %if.end, %do.body
  %8 = load ptr, ptr %nodeids, align 8, !dbg !6400, !tbaa !3910
  %tobool6 = icmp ne ptr %8, null, !dbg !6400
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !6402

if.then7:                                         ; preds = %if.end5
  %call8 = call ptr @rd_list_new(i32 noundef 0, ptr noundef null), !dbg !6403
  store ptr %call8, ptr %nodeids, align 8, !dbg !6405, !tbaa !3910
  %9 = load ptr, ptr %nodeids, align 8, !dbg !6406, !tbaa !3910
  %10 = load i32, ptr %broker_cnt, align 4, !dbg !6407, !tbaa !3959
  %call9 = call ptr @rd_list_init_int32(ptr noundef %9, i32 noundef %10), !dbg !6408
  br label %if.end10, !dbg !6409

if.end10:                                         ; preds = %if.then7, %if.end5
  store i32 0, ptr %i, align 4, !dbg !6410, !tbaa !3959
  %11 = load ptr, ptr %rk.addr, align 8, !dbg !6411, !tbaa !3910
  %rk_brokers = getelementptr inbounds %struct.rd_kafka_s, ptr %11, i32 0, i32 2, !dbg !6411
  %tqh_first = getelementptr inbounds %struct.anon.12, ptr %rk_brokers, i32 0, i32 0, !dbg !6411
  %12 = load ptr, ptr %tqh_first, align 8, !dbg !6411, !tbaa !5741
  store ptr %12, ptr %rkb, align 8, !dbg !6411, !tbaa !3910
  br label %for.cond, !dbg !6411

for.cond:                                         ; preds = %for.inc, %if.end10
  %13 = load ptr, ptr %rkb, align 8, !dbg !6413, !tbaa !3910
  %cmp11 = icmp ne ptr %13, null, !dbg !6413
  br i1 %cmp11, label %for.body, label %for.end, !dbg !6411

for.body:                                         ; preds = %for.cond
  %14 = load ptr, ptr %rkb, align 8, !dbg !6415, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 9, !dbg !6415
  %call12 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !6415
  %15 = load ptr, ptr %rkb, align 8, !dbg !6417, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 1, !dbg !6419
  %16 = load i32, ptr %rkb_nodeid, align 8, !dbg !6419, !tbaa !4311
  %cmp13 = icmp ne i32 %16, -1, !dbg !6420
  br i1 %cmp13, label %land.lhs.true, label %if.end17, !dbg !6421

land.lhs.true:                                    ; preds = %for.body
  %17 = load ptr, ptr %rkb, align 8, !dbg !6422, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 27, !dbg !6422
  %18 = load i32, ptr %rkb_source, align 8, !dbg !6422, !tbaa !4174
  %cmp14 = icmp eq i32 %18, 3, !dbg !6422
  br i1 %cmp14, label %if.end17, label %if.then15, !dbg !6423

if.then15:                                        ; preds = %land.lhs.true
  %19 = load ptr, ptr %nodeids, align 8, !dbg !6424, !tbaa !3910
  %20 = load i32, ptr %i, align 4, !dbg !6426, !tbaa !3959
  %inc = add nsw i32 %20, 1, !dbg !6426
  store i32 %inc, ptr %i, align 4, !dbg !6426, !tbaa !3959
  %21 = load ptr, ptr %rkb, align 8, !dbg !6427, !tbaa !3910
  %rkb_nodeid16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 1, !dbg !6428
  %22 = load i32, ptr %rkb_nodeid16, align 8, !dbg !6428, !tbaa !4311
  call void @rd_list_set_int32(ptr noundef %19, i32 noundef %20, i32 noundef %22), !dbg !6429
  br label %if.end17, !dbg !6430

if.end17:                                         ; preds = %if.then15, %land.lhs.true, %for.body
  %23 = load ptr, ptr %rkb, align 8, !dbg !6431, !tbaa !3910
  %rkb_lock18 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 9, !dbg !6431
  %call19 = call i32 @mtx_unlock(ptr noundef %rkb_lock18), !dbg !6431
  br label %for.inc, !dbg !6432

for.inc:                                          ; preds = %if.end17
  %24 = load ptr, ptr %rkb, align 8, !dbg !6413, !tbaa !3910
  %rkb_link = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 0, !dbg !6413
  %tqe_next = getelementptr inbounds %struct.anon, ptr %rkb_link, i32 0, i32 0, !dbg !6413
  %25 = load ptr, ptr %tqe_next, align 8, !dbg !6413, !tbaa !5799
  store ptr %25, ptr %rkb, align 8, !dbg !6413, !tbaa !3910
  br label %for.cond, !dbg !6413, !llvm.loop !6433

for.end:                                          ; preds = %for.cond
  %26 = load ptr, ptr %rk.addr, align 8, !dbg !6435, !tbaa !3910
  %rk_lock20 = getelementptr inbounds %struct.rd_kafka_s, ptr %26, i32 0, i32 24, !dbg !6435
  %call21 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock20), !dbg !6435
  %27 = load ptr, ptr %nodeids, align 8, !dbg !6436, !tbaa !3910
  %call22 = call i32 @rd_list_cnt(ptr noundef %27), !dbg !6436
  %cmp23 = icmp eq i32 %call22, 0, !dbg !6436
  br i1 %cmp23, label %if.end25, label %if.then24, !dbg !6438

if.then24:                                        ; preds = %for.end
  %28 = load ptr, ptr %nodeids, align 8, !dbg !6439, !tbaa !3910
  store ptr %28, ptr %retval, align 8, !dbg !6440
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6440

if.end25:                                         ; preds = %for.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6441
  br label %cleanup, !dbg !6441

cleanup:                                          ; preds = %if.end25, %if.then24
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6441
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup31 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond, !dbg !6442

do.cond:                                          ; preds = %cleanup.cont
  %29 = load ptr, ptr %rk.addr, align 8, !dbg !6443, !tbaa !3910
  %30 = load i32, ptr %version, align 4, !dbg !6444, !tbaa !3959
  %31 = load ptr, ptr %eonce.addr, align 8, !dbg !6445, !tbaa !3910
  %call26 = call i32 @rd_kafka_brokers_wait_state_change_async(ptr noundef %29, i32 noundef %30, ptr noundef %31), !dbg !6446
  %tobool27 = icmp ne i32 %call26, 0, !dbg !6447
  %lnot = xor i1 %tobool27, true, !dbg !6447
  br i1 %lnot, label %do.body, label %do.end, !dbg !6442, !llvm.loop !6448

do.end:                                           ; preds = %do.cond
  %32 = load ptr, ptr %nodeids, align 8, !dbg !6450, !tbaa !3910
  %tobool28 = icmp ne ptr %32, null, !dbg !6450
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !6452

if.then29:                                        ; preds = %do.end
  %33 = load ptr, ptr %nodeids, align 8, !dbg !6453, !tbaa !3910
  call void @rd_list_destroy(ptr noundef %33), !dbg !6455
  br label %if.end30, !dbg !6456

if.end30:                                         ; preds = %if.then29, %do.end
  store ptr null, ptr %retval, align 8, !dbg !6457
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup31, !dbg !6457

cleanup31:                                        ; preds = %if.end30, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %broker_cnt) #16, !dbg !6458
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #16, !dbg !6458
  call void @llvm.lifetime.end.p0(i64 4, ptr %version) #16, !dbg !6458
  call void @llvm.lifetime.end.p0(i64 8, ptr %nodeids) #16, !dbg !6458
  %34 = load ptr, ptr %retval, align 8, !dbg !6458
  ret ptr %34, !dbg !6458
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_list_cnt(ptr noundef %rl) #4 !dbg !6459 {
entry:
  %rl.addr = alloca ptr, align 8
  store ptr %rl, ptr %rl.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rl.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  %0 = load ptr, ptr %rl.addr, align 8, !dbg !6465, !tbaa !3910
  %rl_cnt = getelementptr inbounds %struct.rd_list_s, ptr %0, i32 0, i32 1, !dbg !6466
  %1 = load i32, ptr %rl_cnt, align 4, !dbg !6466, !tbaa !6467
  ret i32 %1, !dbg !6468
}

declare !dbg !6469 void @rd_list_destroy(ptr noundef) #3

declare !dbg !6472 void @rd_list_set_cnt(ptr noundef, i64 noundef) #3

declare !dbg !6475 ptr @rd_list_new(i32 noundef, ptr noundef) #3

declare !dbg !6478 ptr @rd_list_init_int32(ptr noundef, i32 noundef) #3

declare !dbg !6481 void @rd_list_set_int32(ptr noundef, i32 noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_controller_async(ptr noundef %rk, i32 noundef %state, ptr noundef %eonce) #0 !dbg !6484 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %state.addr = alloca i32, align 4
  %eonce.addr = alloca ptr, align 8
  %version = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !6488, metadata !DIExpression()), !dbg !6494
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !6489, metadata !DIExpression()), !dbg !6495
  store ptr %eonce, ptr %eonce.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %eonce.addr, metadata !6490, metadata !DIExpression()), !dbg !6496
  call void @llvm.lifetime.start.p0(i64 4, ptr %version) #16, !dbg !6497
  tail call void @llvm.dbg.declare(metadata ptr %version, metadata !6491, metadata !DIExpression()), !dbg !6498
  br label %do.body, !dbg !6499

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !6500
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !6492, metadata !DIExpression()), !dbg !6501
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !6502, !tbaa !3910
  %call = call i32 @rd_kafka_brokers_get_state_version(ptr noundef %0), !dbg !6503
  store i32 %call, ptr %version, align 4, !dbg !6504, !tbaa !3959
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !6505, !tbaa !3910
  %2 = load i32, ptr %state.addr, align 4, !dbg !6506, !tbaa !3959
  %call1 = call ptr @rd_kafka_broker_controller_nowait(ptr noundef %1, i32 noundef %2), !dbg !6507
  store ptr %call1, ptr %rkb, align 8, !dbg !6508, !tbaa !3910
  %3 = load ptr, ptr %rkb, align 8, !dbg !6509, !tbaa !3910
  %tobool = icmp ne ptr %3, null, !dbg !6509
  br i1 %tobool, label %if.then, label %if.end, !dbg !6511

if.then:                                          ; preds = %do.body
  %4 = load ptr, ptr %rkb, align 8, !dbg !6512, !tbaa !3910
  store ptr %4, ptr %retval, align 8, !dbg !6513
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6513

if.end:                                           ; preds = %do.body
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6514
  br label %cleanup, !dbg !6514

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6514
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup4 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond, !dbg !6515

do.cond:                                          ; preds = %cleanup.cont
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !6516, !tbaa !3910
  %6 = load i32, ptr %version, align 4, !dbg !6517, !tbaa !3959
  %7 = load ptr, ptr %eonce.addr, align 8, !dbg !6518, !tbaa !3910
  %call2 = call i32 @rd_kafka_brokers_wait_state_change_async(ptr noundef %5, i32 noundef %6, ptr noundef %7), !dbg !6519
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6520
  %lnot = xor i1 %tobool3, true, !dbg !6520
  br i1 %lnot, label %do.body, label %do.end, !dbg !6515, !llvm.loop !6521

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %retval, align 8, !dbg !6523
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup4, !dbg !6523

cleanup4:                                         ; preds = %do.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %version) #16, !dbg !6524
  %8 = load ptr, ptr %retval, align 8, !dbg !6524
  ret ptr %8, !dbg !6524
}

; Function Attrs: nounwind uwtable
define internal ptr @rd_kafka_broker_controller_nowait(ptr noundef %rk, i32 noundef %state) #0 !dbg !6525 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %state.addr = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !6529, metadata !DIExpression()), !dbg !6532
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !6530, metadata !DIExpression()), !dbg !6533
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !6534
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !6531, metadata !DIExpression()), !dbg !6535
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !6536, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 24, !dbg !6536
  %call = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !6536
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !6537, !tbaa !3910
  %rk_controllerid = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 35, !dbg !6539
  %2 = load i32, ptr %rk_controllerid, align 8, !dbg !6539, !tbaa !6540
  %cmp = icmp eq i32 %2, -1, !dbg !6541
  br i1 %cmp, label %if.then, label %if.end, !dbg !6542

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %rk.addr, align 8, !dbg !6543, !tbaa !3910
  %rk_lock1 = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 24, !dbg !6543
  %call2 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock1), !dbg !6543
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !6545, !tbaa !3910
  %call3 = call i32 @rd_kafka_metadata_refresh_brokers(ptr noundef %4, ptr noundef null, ptr noundef @.str.124), !dbg !6546
  store ptr null, ptr %retval, align 8, !dbg !6547
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6547

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !6548, !tbaa !3910
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !6548, !tbaa !3910
  %rk_controllerid4 = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 35, !dbg !6548
  %7 = load i32, ptr %rk_controllerid4, align 8, !dbg !6548, !tbaa !6540
  %8 = load i32, ptr %state.addr, align 4, !dbg !6548, !tbaa !3959
  %call5 = call ptr @rd_kafka_broker_find_by_nodeid0_fl(ptr noundef @__FUNCTION__.rd_kafka_broker_controller_nowait, i32 noundef 1741, ptr noundef %5, i32 noundef %7, i32 noundef %8, i8 noundef zeroext 1), !dbg !6548
  store ptr %call5, ptr %rkb, align 8, !dbg !6549, !tbaa !3910
  %9 = load ptr, ptr %rk.addr, align 8, !dbg !6550, !tbaa !3910
  %rk_lock6 = getelementptr inbounds %struct.rd_kafka_s, ptr %9, i32 0, i32 24, !dbg !6550
  %call7 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock6), !dbg !6550
  %10 = load ptr, ptr %rkb, align 8, !dbg !6551, !tbaa !3910
  store ptr %10, ptr %retval, align 8, !dbg !6552
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6552

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6553
  %11 = load ptr, ptr %retval, align 8, !dbg !6553
  ret ptr %11, !dbg !6553
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_controller(ptr noundef %rk, i32 noundef %state, i64 noundef %abs_timeout) #0 !dbg !6554 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %state.addr = alloca i32, align 4
  %abs_timeout.addr = alloca i64, align 8
  %version = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %remains_ms = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !6558, metadata !DIExpression()), !dbg !6565
  store i32 %state, ptr %state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !6559, metadata !DIExpression()), !dbg !6566
  store i64 %abs_timeout, ptr %abs_timeout.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout.addr, metadata !6560, metadata !DIExpression()), !dbg !6567
  br label %while.body, !dbg !6568

while.body:                                       ; preds = %entry, %cleanup.cont
  call void @llvm.lifetime.start.p0(i64 4, ptr %version) #16, !dbg !6569
  tail call void @llvm.dbg.declare(metadata ptr %version, metadata !6561, metadata !DIExpression()), !dbg !6570
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !6571, !tbaa !3910
  %call = call i32 @rd_kafka_brokers_get_state_version(ptr noundef %0), !dbg !6572
  store i32 %call, ptr %version, align 4, !dbg !6570, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !6573
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !6563, metadata !DIExpression()), !dbg !6574
  call void @llvm.lifetime.start.p0(i64 4, ptr %remains_ms) #16, !dbg !6575
  tail call void @llvm.dbg.declare(metadata ptr %remains_ms, metadata !6564, metadata !DIExpression()), !dbg !6576
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !6577, !tbaa !3910
  %2 = load i32, ptr %state.addr, align 4, !dbg !6578, !tbaa !3959
  %call1 = call ptr @rd_kafka_broker_controller_nowait(ptr noundef %1, i32 noundef %2), !dbg !6579
  store ptr %call1, ptr %rkb, align 8, !dbg !6580, !tbaa !3910
  %3 = load ptr, ptr %rkb, align 8, !dbg !6581, !tbaa !3910
  %tobool = icmp ne ptr %3, null, !dbg !6581
  br i1 %tobool, label %if.then, label %if.end, !dbg !6583

if.then:                                          ; preds = %while.body
  %4 = load ptr, ptr %rkb, align 8, !dbg !6584, !tbaa !3910
  store ptr %4, ptr %retval, align 8, !dbg !6585
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6585

if.end:                                           ; preds = %while.body
  %5 = load i64, ptr %abs_timeout.addr, align 8, !dbg !6586, !tbaa !4039
  %call2 = call i32 @rd_timeout_remains(i64 noundef %5), !dbg !6587
  store i32 %call2, ptr %remains_ms, align 4, !dbg !6588, !tbaa !3959
  %6 = load i32, ptr %remains_ms, align 4, !dbg !6589, !tbaa !3959
  %call3 = call i32 @rd_timeout_expired(i32 noundef %6), !dbg !6591
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6591
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6592

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !6593
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6593

if.end6:                                          ; preds = %if.end
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !6594, !tbaa !3910
  %8 = load i32, ptr %version, align 4, !dbg !6595, !tbaa !3959
  %9 = load i32, ptr %remains_ms, align 4, !dbg !6596, !tbaa !3959
  %call7 = call i32 @rd_kafka_brokers_wait_state_change(ptr noundef %7, i32 noundef %8, i32 noundef %9), !dbg !6597
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6598
  br label %cleanup, !dbg !6598

cleanup:                                          ; preds = %if.end6, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %remains_ms) #16, !dbg !6598
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !6598
  call void @llvm.lifetime.end.p0(i64 4, ptr %version) #16, !dbg !6598
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.body, !dbg !6568, !llvm.loop !6599

return:                                           ; preds = %cleanup
  %10 = load ptr, ptr %retval, align 8, !dbg !6600
  ret ptr %10, !dbg !6600

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_recv(ptr noundef %rkb) #0 !dbg !6601 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %rkbuf = alloca ptr, align 8
  %r = alloca i64, align 8
  %errstr = alloca [512 x i8], align 16
  %err = alloca i32, align 4
  %log_decode_errors = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %_v = alloca i32, align 4
  %_vp = alloca ptr, align 8
  %__len2 = alloca i64, align 8
  %__len0 = alloca i64, align 8
  %__tmpstr = alloca [256 x i8], align 16
  %_logname = alloca [256 x i8], align 16
  %_v113 = alloca i32, align 4
  %_vp114 = alloca ptr, align 8
  %__len2117 = alloca i64, align 8
  %__len0123 = alloca i64, align 8
  %__tmpstr139 = alloca [256 x i8], align 16
  %_logname150 = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !6603, metadata !DIExpression()), !dbg !6645
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkbuf) #16, !dbg !6646
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf, metadata !6604, metadata !DIExpression()), !dbg !6647
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #16, !dbg !6648
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !6605, metadata !DIExpression()), !dbg !6649
  call void @llvm.lifetime.start.p0(i64 512, ptr %errstr) #16, !dbg !6650
  tail call void @llvm.dbg.declare(metadata ptr %errstr, metadata !6606, metadata !DIExpression()), !dbg !6651
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %errstr, ptr align 16 @__const.rd_kafka_recv.errstr, i64 512, i1 false), !dbg !6651
  call void @llvm.lifetime.start.p0(i64 4, ptr %err) #16, !dbg !6652
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !6607, metadata !DIExpression()), !dbg !6653
  store i32 0, ptr %err, align 4, !dbg !6653, !tbaa !4126
  call void @llvm.lifetime.start.p0(i64 4, ptr %log_decode_errors) #16, !dbg !6654
  tail call void @llvm.dbg.declare(metadata ptr %log_decode_errors, metadata !6608, metadata !DIExpression()), !dbg !6655
  store i32 3, ptr %log_decode_errors, align 4, !dbg !6655, !tbaa !3959
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !6656, !tbaa !3910
  %rkb_recv_buf = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 33, !dbg !6658
  %1 = load ptr, ptr %rkb_recv_buf, align 8, !dbg !6658, !tbaa !4544
  store ptr %1, ptr %rkbuf, align 8, !dbg !6659, !tbaa !3910
  %tobool = icmp ne ptr %1, null, !dbg !6659
  br i1 %tobool, label %if.end, label %if.then, !dbg !6660

if.then:                                          ; preds = %entry
  %call = call ptr @rd_kafka_buf_new0(i32 noundef 2, i64 noundef 8, i32 noundef 0), !dbg !6661
  store ptr %call, ptr %rkbuf, align 8, !dbg !6663, !tbaa !3910
  %2 = load ptr, ptr %rkbuf, align 8, !dbg !6664, !tbaa !3910
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !6665, !tbaa !3910
  %rkb_recv_buf1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 33, !dbg !6666
  store ptr %2, ptr %rkb_recv_buf1, align 8, !dbg !6667, !tbaa !4544
  %4 = load ptr, ptr %rkbuf, align 8, !dbg !6668, !tbaa !3910
  %rkbuf_buf = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %4, i32 0, i32 5, !dbg !6669
  call void @rd_buf_write_ensure(ptr noundef %rkbuf_buf, i64 noundef 8, i64 noundef 8), !dbg !6670
  br label %if.end, !dbg !6671

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !6672

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !6673

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6673

do.end:                                           ; preds = %do.cond
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !6675, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 5, !dbg !6676
  %6 = load ptr, ptr %rkb_transport, align 8, !dbg !6676, !tbaa !4518
  %7 = load ptr, ptr %rkbuf, align 8, !dbg !6677, !tbaa !3910
  %rkbuf_buf2 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %7, i32 0, i32 5, !dbg !6678
  %arraydecay = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !6679
  %call3 = call i64 @rd_kafka_transport_recv(ptr noundef %6, ptr noundef %rkbuf_buf2, ptr noundef %arraydecay, i64 noundef 512), !dbg !6680
  store i64 %call3, ptr %r, align 8, !dbg !6681, !tbaa !4039
  %8 = load i64, ptr %r, align 8, !dbg !6682, !tbaa !4039
  %cmp = icmp sle i64 %8, 0, !dbg !6682
  %conv = zext i1 %cmp to i32, !dbg !6682
  %conv4 = sext i32 %conv to i64, !dbg !6682
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0), !dbg !6682
  %tobool5 = icmp ne i64 %expval, 0, !dbg !6682
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !6684

if.then6:                                         ; preds = %do.end
  %9 = load i64, ptr %r, align 8, !dbg !6685, !tbaa !4039
  %cmp7 = icmp eq i64 %9, 0, !dbg !6688
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !6689

if.then9:                                         ; preds = %if.then6
  store i32 0, ptr %retval, align 4, !dbg !6690
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup279, !dbg !6690

if.end10:                                         ; preds = %if.then6
  store i32 -195, ptr %err, align 4, !dbg !6691, !tbaa !4126
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !6692, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 28, !dbg !6693
  %rx_err = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 7, !dbg !6694
  %call11 = call i64 @rd_atomic64_add(ptr noundef %rx_err, i64 noundef 1), !dbg !6695
  br label %err270, !dbg !6696

if.end12:                                         ; preds = %do.end
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !6697, !tbaa !3910
  %rkb_c13 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 28, !dbg !6698
  %ts_recv = getelementptr inbounds %struct.anon.2, ptr %rkb_c13, i32 0, i32 17, !dbg !6699
  %call14 = call i64 @rd_clock(), !dbg !6700
  %call15 = call i64 @rd_atomic64_set(ptr noundef %ts_recv, i64 noundef %call14), !dbg !6701
  %12 = load ptr, ptr %rkbuf, align 8, !dbg !6702, !tbaa !3910
  %rkbuf_totlen = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %12, i32 0, i32 8, !dbg !6703
  %13 = load i64, ptr %rkbuf_totlen, align 8, !dbg !6703, !tbaa !6704
  %cmp16 = icmp eq i64 %13, 0, !dbg !6705
  br i1 %cmp16, label %if.then18, label %if.end252, !dbg !6706

if.then18:                                        ; preds = %if.end12
  %14 = load ptr, ptr %rkbuf, align 8, !dbg !6707, !tbaa !3910
  %rkbuf_buf19 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %14, i32 0, i32 5, !dbg !6707
  %call20 = call i64 @rd_buf_write_pos(ptr noundef %rkbuf_buf19), !dbg !6707
  %cmp21 = icmp ult i64 %call20, 8, !dbg !6707
  %conv22 = zext i1 %cmp21 to i32, !dbg !6707
  %conv23 = sext i32 %conv22 to i64, !dbg !6707
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !6707
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !6707
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !6709

if.then26:                                        ; preds = %if.then18
  store i32 0, ptr %retval, align 4, !dbg !6710
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup279, !dbg !6710

if.end27:                                         ; preds = %if.then18
  %15 = load ptr, ptr %rkbuf, align 8, !dbg !6712, !tbaa !3910
  %rkbuf_rkb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %15, i32 0, i32 20, !dbg !6712
  %16 = load ptr, ptr %rkbuf_rkb, align 8, !dbg !6712, !tbaa !5424
  %tobool28 = icmp ne ptr %16, null, !dbg !6712
  br i1 %tobool28, label %if.else, label %if.then29, !dbg !6715

if.then29:                                        ; preds = %if.end27
  br label %if.end30, !dbg !6715

if.else:                                          ; preds = %if.end27
  call void @__assert_fail(ptr noundef @.str.31, ptr noundef @.str.20, i32 noundef 1967, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_recv) #18, !dbg !6712
  unreachable, !dbg !6712

if.end30:                                         ; preds = %if.then29
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !6716, !tbaa !3910
  %18 = load ptr, ptr %rkbuf, align 8, !dbg !6717, !tbaa !3910
  %rkbuf_rkb31 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %18, i32 0, i32 20, !dbg !6718
  store ptr %17, ptr %rkbuf_rkb31, align 8, !dbg !6719, !tbaa !5424
  %19 = load ptr, ptr %rkbuf, align 8, !dbg !6720, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %19, i32 0, i32 6, !dbg !6721
  %20 = load ptr, ptr %rkbuf, align 8, !dbg !6722, !tbaa !3910
  %rkbuf_buf32 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %20, i32 0, i32 5, !dbg !6723
  %call33 = call i32 @rd_slice_init(ptr noundef %rkbuf_reader, ptr noundef %rkbuf_buf32, i64 noundef 0, i64 noundef 8), !dbg !6724
  br label %do.body34, !dbg !6725

do.body34:                                        ; preds = %if.end30
  call void @llvm.lifetime.start.p0(i64 4, ptr %_v) #16, !dbg !6726
  tail call void @llvm.dbg.declare(metadata ptr %_v, metadata !6609, metadata !DIExpression()), !dbg !6726
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp) #16, !dbg !6726
  tail call void @llvm.dbg.declare(metadata ptr %_vp, metadata !6613, metadata !DIExpression()), !dbg !6726
  %21 = load ptr, ptr %rkbuf, align 8, !dbg !6726, !tbaa !3910
  %rkbuf_reshdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %21, i32 0, i32 11, !dbg !6726
  %Size = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr, i32 0, i32 0, !dbg !6726
  store ptr %Size, ptr %_vp, align 8, !dbg !6726, !tbaa !3910
  br label %do.body35, !dbg !6726

do.body35:                                        ; preds = %do.body34
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len2) #16, !dbg !6727
  tail call void @llvm.dbg.declare(metadata ptr %__len2, metadata !6614, metadata !DIExpression()), !dbg !6727
  store i64 4, ptr %__len2, align 8, !dbg !6727, !tbaa !4039
  %22 = load ptr, ptr %rkbuf, align 8, !dbg !6728, !tbaa !3910
  %rkbuf_reader36 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %22, i32 0, i32 6, !dbg !6728
  %23 = load i64, ptr %__len2, align 8, !dbg !6728, !tbaa !4039
  %call37 = call i64 @rd_slice_read(ptr noundef %rkbuf_reader36, ptr noundef %_v, i64 noundef %23), !dbg !6728
  %tobool38 = icmp ne i64 %call37, 0, !dbg !6728
  br i1 %tobool38, label %if.end99, label %if.then39, !dbg !6727

if.then39:                                        ; preds = %do.body35
  br label %do.body40, !dbg !6728

do.body40:                                        ; preds = %if.then39
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len0) #16, !dbg !6729
  tail call void @llvm.dbg.declare(metadata ptr %__len0, metadata !6616, metadata !DIExpression()), !dbg !6729
  %24 = load i64, ptr %__len2, align 8, !dbg !6729, !tbaa !4039
  store i64 %24, ptr %__len0, align 8, !dbg !6729, !tbaa !4039
  %25 = load i64, ptr %__len0, align 8, !dbg !6730, !tbaa !4039
  %26 = load ptr, ptr %rkbuf, align 8, !dbg !6730, !tbaa !3910
  %rkbuf_reader41 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %26, i32 0, i32 6, !dbg !6730
  %end = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader41, i32 0, i32 4, !dbg !6730
  %27 = load i64, ptr %end, align 8, !dbg !6730, !tbaa !6731
  %28 = load ptr, ptr %rkbuf, align 8, !dbg !6730, !tbaa !3910
  %rkbuf_reader42 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %28, i32 0, i32 6, !dbg !6730
  %call43 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader42), !dbg !6730
  %sub = sub i64 %27, %call43, !dbg !6730
  %cmp44 = icmp ugt i64 %25, %sub, !dbg !6730
  %conv45 = zext i1 %cmp44 to i32, !dbg !6730
  %conv46 = sext i32 %conv45 to i64, !dbg !6730
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 0), !dbg !6730
  %tobool48 = icmp ne i64 %expval47, 0, !dbg !6730
  br i1 %tobool48, label %if.then49, label %if.end96, !dbg !6729

if.then49:                                        ; preds = %do.body40
  br label %do.body50, !dbg !6732

do.body50:                                        ; preds = %if.then49
  %29 = load ptr, ptr %rkbuf, align 8, !dbg !6733, !tbaa !3910
  %rkbuf_rkb51 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %29, i32 0, i32 20, !dbg !6733
  %30 = load ptr, ptr %rkbuf_rkb51, align 8, !dbg !6733, !tbaa !5424
  %tobool52 = icmp ne ptr %30, null, !dbg !6733
  br i1 %tobool52, label %if.then53, label %if.end93, !dbg !6734

if.then53:                                        ; preds = %do.body50
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr) #16, !dbg !6735
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr, metadata !6619, metadata !DIExpression()), !dbg !6735
  %arraydecay54 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !6735
  %call55 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay54, i64 noundef 256, ptr noundef @.str.32) #16, !dbg !6735
  %arraydecay56 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !6736
  %call57 = call i64 @strlen(ptr noundef %arraydecay56) #19, !dbg !6736
  %cmp58 = icmp eq i64 %call57, 2, !dbg !6736
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !6735

if.then60:                                        ; preds = %if.then53
  %arrayidx = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !6736
  store i8 0, ptr %arrayidx, align 16, !dbg !6736, !tbaa !4126
  br label %if.end61, !dbg !6736

if.end61:                                         ; preds = %if.then60, %if.then53
  br label %do.body62, !dbg !6735

do.body62:                                        ; preds = %if.end61
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !6738
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !6625, metadata !DIExpression()), !dbg !6738
  %31 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_rkb63 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %31, i32 0, i32 20, !dbg !6738
  %32 = load ptr, ptr %rkbuf_rkb63, align 8, !dbg !6738, !tbaa !5424
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 49, !dbg !6738
  %call64 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !6738
  %arraydecay65 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !6738
  %33 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_rkb66 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %33, i32 0, i32 20, !dbg !6738
  %34 = load ptr, ptr %rkbuf_rkb66, align 8, !dbg !6738, !tbaa !5424
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 48, !dbg !6738
  %35 = load ptr, ptr %rkb_logname, align 8, !dbg !6738, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay65, ptr noundef %35, i64 noundef 256), !dbg !6738
  %36 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_rkb67 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %36, i32 0, i32 20, !dbg !6738
  %37 = load ptr, ptr %rkbuf_rkb67, align 8, !dbg !6738, !tbaa !5424
  %rkb_logname_lock68 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 49, !dbg !6738
  %call69 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock68), !dbg !6738
  %38 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_rkb70 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %38, i32 0, i32 20, !dbg !6738
  %39 = load ptr, ptr %rkbuf_rkb70, align 8, !dbg !6738, !tbaa !5424
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 32, !dbg !6738
  %40 = load ptr, ptr %rkb_rk, align 8, !dbg !6738, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %40, i32 0, i32 18, !dbg !6738
  %41 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_rkb71 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %41, i32 0, i32 20, !dbg !6738
  %42 = load ptr, ptr %rkbuf_rkb71, align 8, !dbg !6738, !tbaa !5424
  %rkb_rk72 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 32, !dbg !6738
  %43 = load ptr, ptr %rkb_rk72, align 8, !dbg !6738, !tbaa !4139
  %arraydecay73 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !6738
  %44 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %44, i32 0, i32 10, !dbg !6738
  %ApiKey = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !6738
  %45 = load i16, ptr %ApiKey, align 4, !dbg !6738, !tbaa !5392
  %call74 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %45), !dbg !6738
  %46 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_reqhdr75 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %46, i32 0, i32 10, !dbg !6738
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr75, i32 0, i32 2, !dbg !6738
  %47 = load i16, ptr %ApiVersion, align 2, !dbg !6738, !tbaa !5272
  %conv76 = sext i16 %47 to i32, !dbg !6738
  %48 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_reader77 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %48, i32 0, i32 6, !dbg !6738
  %call78 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader77), !dbg !6738
  %49 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_reader79 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %49, i32 0, i32 6, !dbg !6738
  %end80 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader79, i32 0, i32 4, !dbg !6738
  %50 = load i64, ptr %end80, align 8, !dbg !6738, !tbaa !6731
  %51 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_reader81 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %51, i32 0, i32 6, !dbg !6738
  %start = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader81, i32 0, i32 3, !dbg !6738
  %52 = load i64, ptr %start, align 8, !dbg !6738, !tbaa !6739
  %sub82 = sub i64 %50, %52, !dbg !6738
  %53 = load i64, ptr %__len0, align 8, !dbg !6738, !tbaa !4039
  %54 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_reader83 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %54, i32 0, i32 6, !dbg !6738
  %end84 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader83, i32 0, i32 4, !dbg !6738
  %55 = load i64, ptr %end84, align 8, !dbg !6738, !tbaa !6731
  %56 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_reader85 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %56, i32 0, i32 6, !dbg !6738
  %call86 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader85), !dbg !6738
  %sub87 = sub i64 %55, %call86, !dbg !6738
  %57 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_uflow_mitigation = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %57, i32 0, i32 36, !dbg !6738
  %58 = load ptr, ptr %rkbuf_uflow_mitigation, align 8, !dbg !6738, !tbaa !6740
  %tobool88 = icmp ne ptr %58, null, !dbg !6738
  br i1 %tobool88, label %cond.true, label %cond.false, !dbg !6738

cond.true:                                        ; preds = %do.body62
  %59 = load ptr, ptr %rkbuf, align 8, !dbg !6738, !tbaa !3910
  %rkbuf_uflow_mitigation89 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %59, i32 0, i32 36, !dbg !6738
  %60 = load ptr, ptr %rkbuf_uflow_mitigation89, align 8, !dbg !6738, !tbaa !6740
  br label %cond.end, !dbg !6738

cond.false:                                       ; preds = %do.body62
  br label %cond.end, !dbg !6738

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %60, %cond.true ], [ @.str.35, %cond.false ], !dbg !6738
  %arraydecay90 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !6738
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf, ptr noundef %43, ptr noundef %arraydecay73, i32 noundef 3, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call74, i32 noundef %conv76, i64 noundef %call78, i64 noundef %sub82, ptr noundef @__FUNCTION__.rd_kafka_recv, i32 noundef 1980, i64 noundef %53, i64 noundef %sub87, ptr noundef %cond, ptr noundef %arraydecay90), !dbg !6738
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !6735
  br label %do.cond91, !dbg !6738

do.cond91:                                        ; preds = %cond.end
  br label %do.end92, !dbg !6738

do.end92:                                         ; preds = %do.cond91
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr) #16, !dbg !6733
  br label %if.end93, !dbg !6735

if.end93:                                         ; preds = %do.end92, %do.body50
  %61 = load ptr, ptr %rkbuf, align 8, !dbg !6734, !tbaa !3910
  %rkbuf_err = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %61, i32 0, i32 34, !dbg !6734
  store i32 -155, ptr %rkbuf_err, align 8, !dbg !6734, !tbaa !6741
  store i32 15, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6734

do.cond94:                                        ; No predecessors!
  br label %do.end95, !dbg !6734

do.end95:                                         ; preds = %do.cond94
  br label %if.end96, !dbg !6732

if.end96:                                         ; preds = %do.end95, %do.body40
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6728
  br label %cleanup, !dbg !6728

cleanup:                                          ; preds = %if.end93, %if.end96
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len0) #16, !dbg !6728
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup100 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond97, !dbg !6729

do.cond97:                                        ; preds = %cleanup.cont
  br label %do.end98, !dbg !6729

do.end98:                                         ; preds = %do.cond97
  br label %if.end99, !dbg !6729

if.end99:                                         ; preds = %do.end98, %do.body35
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6726
  br label %cleanup100, !dbg !6726

cleanup100:                                       ; preds = %if.end99, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len2) #16, !dbg !6726
  %cleanup.dest101 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest101, label %cleanup106 [
    i32 0, label %cleanup.cont102
  ]

cleanup.cont102:                                  ; preds = %cleanup100
  br label %do.cond103, !dbg !6727

do.cond103:                                       ; preds = %cleanup.cont102
  br label %do.end104, !dbg !6727

do.end104:                                        ; preds = %do.cond103
  %62 = load i32, ptr %_v, align 4, !dbg !6726, !tbaa !3959
  %call105 = call i32 @__bswap_32(i32 noundef %62), !dbg !6726
  %63 = load ptr, ptr %_vp, align 8, !dbg !6726, !tbaa !3910
  store i32 %call105, ptr %63, align 4, !dbg !6726, !tbaa !3959
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6725
  br label %cleanup106, !dbg !6725

cleanup106:                                       ; preds = %do.end104, %cleanup100
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp) #16, !dbg !6725
  call void @llvm.lifetime.end.p0(i64 4, ptr %_v) #16, !dbg !6725
  %cleanup.dest108 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest108, label %cleanup279 [
    i32 0, label %cleanup.cont109
    i32 15, label %err_parse
  ]

cleanup.cont109:                                  ; preds = %cleanup106
  br label %do.cond110, !dbg !6726

do.cond110:                                       ; preds = %cleanup.cont109
  br label %do.end111, !dbg !6726

do.end111:                                        ; preds = %do.cond110
  br label %do.body112, !dbg !6742

do.body112:                                       ; preds = %do.end111
  call void @llvm.lifetime.start.p0(i64 4, ptr %_v113) #16, !dbg !6743
  tail call void @llvm.dbg.declare(metadata ptr %_v113, metadata !6627, metadata !DIExpression()), !dbg !6743
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp114) #16, !dbg !6743
  tail call void @llvm.dbg.declare(metadata ptr %_vp114, metadata !6629, metadata !DIExpression()), !dbg !6743
  %64 = load ptr, ptr %rkbuf, align 8, !dbg !6743, !tbaa !3910
  %rkbuf_reshdr115 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %64, i32 0, i32 11, !dbg !6743
  %CorrId = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr115, i32 0, i32 1, !dbg !6743
  store ptr %CorrId, ptr %_vp114, align 8, !dbg !6743, !tbaa !3910
  br label %do.body116, !dbg !6743

do.body116:                                       ; preds = %do.body112
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len2117) #16, !dbg !6744
  tail call void @llvm.dbg.declare(metadata ptr %__len2117, metadata !6630, metadata !DIExpression()), !dbg !6744
  store i64 4, ptr %__len2117, align 8, !dbg !6744, !tbaa !4039
  %65 = load ptr, ptr %rkbuf, align 8, !dbg !6745, !tbaa !3910
  %rkbuf_reader118 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %65, i32 0, i32 6, !dbg !6745
  %66 = load i64, ptr %__len2117, align 8, !dbg !6745, !tbaa !4039
  %call119 = call i64 @rd_slice_read(ptr noundef %rkbuf_reader118, ptr noundef %_v113, i64 noundef %66), !dbg !6745
  %tobool120 = icmp ne i64 %call119, 0, !dbg !6745
  br i1 %tobool120, label %if.end204, label %if.then121, !dbg !6744

if.then121:                                       ; preds = %do.body116
  br label %do.body122, !dbg !6745

do.body122:                                       ; preds = %if.then121
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len0123) #16, !dbg !6746
  tail call void @llvm.dbg.declare(metadata ptr %__len0123, metadata !6632, metadata !DIExpression()), !dbg !6746
  %67 = load i64, ptr %__len2117, align 8, !dbg !6746, !tbaa !4039
  store i64 %67, ptr %__len0123, align 8, !dbg !6746, !tbaa !4039
  %68 = load i64, ptr %__len0123, align 8, !dbg !6747, !tbaa !4039
  %69 = load ptr, ptr %rkbuf, align 8, !dbg !6747, !tbaa !3910
  %rkbuf_reader124 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %69, i32 0, i32 6, !dbg !6747
  %end125 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader124, i32 0, i32 4, !dbg !6747
  %70 = load i64, ptr %end125, align 8, !dbg !6747, !tbaa !6731
  %71 = load ptr, ptr %rkbuf, align 8, !dbg !6747, !tbaa !3910
  %rkbuf_reader126 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %71, i32 0, i32 6, !dbg !6747
  %call127 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader126), !dbg !6747
  %sub128 = sub i64 %70, %call127, !dbg !6747
  %cmp129 = icmp ugt i64 %68, %sub128, !dbg !6747
  %conv130 = zext i1 %cmp129 to i32, !dbg !6747
  %conv131 = sext i32 %conv130 to i64, !dbg !6747
  %expval132 = call i64 @llvm.expect.i64(i64 %conv131, i64 0), !dbg !6747
  %tobool133 = icmp ne i64 %expval132, 0, !dbg !6747
  br i1 %tobool133, label %if.then134, label %if.end198, !dbg !6746

if.then134:                                       ; preds = %do.body122
  br label %do.body135, !dbg !6748

do.body135:                                       ; preds = %if.then134
  %72 = load ptr, ptr %rkbuf, align 8, !dbg !6749, !tbaa !3910
  %rkbuf_rkb136 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %72, i32 0, i32 20, !dbg !6749
  %73 = load ptr, ptr %rkbuf_rkb136, align 8, !dbg !6749, !tbaa !5424
  %tobool137 = icmp ne ptr %73, null, !dbg !6749
  br i1 %tobool137, label %if.then138, label %if.end194, !dbg !6750

if.then138:                                       ; preds = %do.body135
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr139) #16, !dbg !6751
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr139, metadata !6635, metadata !DIExpression()), !dbg !6751
  %arraydecay140 = getelementptr inbounds [256 x i8], ptr %__tmpstr139, i64 0, i64 0, !dbg !6751
  %call141 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay140, i64 noundef 256, ptr noundef @.str.32) #16, !dbg !6751
  %arraydecay142 = getelementptr inbounds [256 x i8], ptr %__tmpstr139, i64 0, i64 0, !dbg !6752
  %call143 = call i64 @strlen(ptr noundef %arraydecay142) #19, !dbg !6752
  %cmp144 = icmp eq i64 %call143, 2, !dbg !6752
  br i1 %cmp144, label %if.then146, label %if.end148, !dbg !6751

if.then146:                                       ; preds = %if.then138
  %arrayidx147 = getelementptr inbounds [256 x i8], ptr %__tmpstr139, i64 0, i64 0, !dbg !6752
  store i8 0, ptr %arrayidx147, align 16, !dbg !6752, !tbaa !4126
  br label %if.end148, !dbg !6752

if.end148:                                        ; preds = %if.then146, %if.then138
  br label %do.body149, !dbg !6751

do.body149:                                       ; preds = %if.end148
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname150) #16, !dbg !6754
  tail call void @llvm.dbg.declare(metadata ptr %_logname150, metadata !6641, metadata !DIExpression()), !dbg !6754
  %74 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_rkb151 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %74, i32 0, i32 20, !dbg !6754
  %75 = load ptr, ptr %rkbuf_rkb151, align 8, !dbg !6754, !tbaa !5424
  %rkb_logname_lock152 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %75, i32 0, i32 49, !dbg !6754
  %call153 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock152), !dbg !6754
  %arraydecay154 = getelementptr inbounds [256 x i8], ptr %_logname150, i64 0, i64 0, !dbg !6754
  %76 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_rkb155 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %76, i32 0, i32 20, !dbg !6754
  %77 = load ptr, ptr %rkbuf_rkb155, align 8, !dbg !6754, !tbaa !5424
  %rkb_logname156 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %77, i32 0, i32 48, !dbg !6754
  %78 = load ptr, ptr %rkb_logname156, align 8, !dbg !6754, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay154, ptr noundef %78, i64 noundef 256), !dbg !6754
  %79 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_rkb157 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %79, i32 0, i32 20, !dbg !6754
  %80 = load ptr, ptr %rkbuf_rkb157, align 8, !dbg !6754, !tbaa !5424
  %rkb_logname_lock158 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %80, i32 0, i32 49, !dbg !6754
  %call159 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock158), !dbg !6754
  %81 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_rkb160 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %81, i32 0, i32 20, !dbg !6754
  %82 = load ptr, ptr %rkbuf_rkb160, align 8, !dbg !6754, !tbaa !5424
  %rkb_rk161 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %82, i32 0, i32 32, !dbg !6754
  %83 = load ptr, ptr %rkb_rk161, align 8, !dbg !6754, !tbaa !4139
  %rk_conf162 = getelementptr inbounds %struct.rd_kafka_s, ptr %83, i32 0, i32 18, !dbg !6754
  %84 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_rkb163 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %84, i32 0, i32 20, !dbg !6754
  %85 = load ptr, ptr %rkbuf_rkb163, align 8, !dbg !6754, !tbaa !5424
  %rkb_rk164 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %85, i32 0, i32 32, !dbg !6754
  %86 = load ptr, ptr %rkb_rk164, align 8, !dbg !6754, !tbaa !4139
  %arraydecay165 = getelementptr inbounds [256 x i8], ptr %_logname150, i64 0, i64 0, !dbg !6754
  %87 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_reqhdr166 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %87, i32 0, i32 10, !dbg !6754
  %ApiKey167 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr166, i32 0, i32 1, !dbg !6754
  %88 = load i16, ptr %ApiKey167, align 4, !dbg !6754, !tbaa !5392
  %call168 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %88), !dbg !6754
  %89 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_reqhdr169 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %89, i32 0, i32 10, !dbg !6754
  %ApiVersion170 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr169, i32 0, i32 2, !dbg !6754
  %90 = load i16, ptr %ApiVersion170, align 2, !dbg !6754, !tbaa !5272
  %conv171 = sext i16 %90 to i32, !dbg !6754
  %91 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_reader172 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %91, i32 0, i32 6, !dbg !6754
  %call173 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader172), !dbg !6754
  %92 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_reader174 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %92, i32 0, i32 6, !dbg !6754
  %end175 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader174, i32 0, i32 4, !dbg !6754
  %93 = load i64, ptr %end175, align 8, !dbg !6754, !tbaa !6731
  %94 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_reader176 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %94, i32 0, i32 6, !dbg !6754
  %start177 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader176, i32 0, i32 3, !dbg !6754
  %95 = load i64, ptr %start177, align 8, !dbg !6754, !tbaa !6739
  %sub178 = sub i64 %93, %95, !dbg !6754
  %96 = load i64, ptr %__len0123, align 8, !dbg !6754, !tbaa !4039
  %97 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_reader179 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %97, i32 0, i32 6, !dbg !6754
  %end180 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader179, i32 0, i32 4, !dbg !6754
  %98 = load i64, ptr %end180, align 8, !dbg !6754, !tbaa !6731
  %99 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_reader181 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %99, i32 0, i32 6, !dbg !6754
  %call182 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader181), !dbg !6754
  %sub183 = sub i64 %98, %call182, !dbg !6754
  %100 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_uflow_mitigation184 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %100, i32 0, i32 36, !dbg !6754
  %101 = load ptr, ptr %rkbuf_uflow_mitigation184, align 8, !dbg !6754, !tbaa !6740
  %tobool185 = icmp ne ptr %101, null, !dbg !6754
  br i1 %tobool185, label %cond.true186, label %cond.false188, !dbg !6754

cond.true186:                                     ; preds = %do.body149
  %102 = load ptr, ptr %rkbuf, align 8, !dbg !6754, !tbaa !3910
  %rkbuf_uflow_mitigation187 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %102, i32 0, i32 36, !dbg !6754
  %103 = load ptr, ptr %rkbuf_uflow_mitigation187, align 8, !dbg !6754, !tbaa !6740
  br label %cond.end189, !dbg !6754

cond.false188:                                    ; preds = %do.body149
  br label %cond.end189, !dbg !6754

cond.end189:                                      ; preds = %cond.false188, %cond.true186
  %cond190 = phi ptr [ %103, %cond.true186 ], [ @.str.35, %cond.false188 ], !dbg !6754
  %arraydecay191 = getelementptr inbounds [256 x i8], ptr %__tmpstr139, i64 0, i64 0, !dbg !6754
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf162, ptr noundef %86, ptr noundef %arraydecay165, i32 noundef 3, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call168, i32 noundef %conv171, i64 noundef %call173, i64 noundef %sub178, ptr noundef @__FUNCTION__.rd_kafka_recv, i32 noundef 1981, i64 noundef %96, i64 noundef %sub183, ptr noundef %cond190, ptr noundef %arraydecay191), !dbg !6754
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname150) #16, !dbg !6751
  br label %do.cond192, !dbg !6754

do.cond192:                                       ; preds = %cond.end189
  br label %do.end193, !dbg !6754

do.end193:                                        ; preds = %do.cond192
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr139) #16, !dbg !6749
  br label %if.end194, !dbg !6751

if.end194:                                        ; preds = %do.end193, %do.body135
  %104 = load ptr, ptr %rkbuf, align 8, !dbg !6750, !tbaa !3910
  %rkbuf_err195 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %104, i32 0, i32 34, !dbg !6750
  store i32 -155, ptr %rkbuf_err195, align 8, !dbg !6750, !tbaa !6741
  store i32 15, ptr %cleanup.dest.slot, align 4
  br label %cleanup199, !dbg !6750

do.cond196:                                       ; No predecessors!
  br label %do.end197, !dbg !6750

do.end197:                                        ; preds = %do.cond196
  br label %if.end198, !dbg !6748

if.end198:                                        ; preds = %do.end197, %do.body122
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6745
  br label %cleanup199, !dbg !6745

cleanup199:                                       ; preds = %if.end194, %if.end198
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len0123) #16, !dbg !6745
  %cleanup.dest200 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest200, label %cleanup205 [
    i32 0, label %cleanup.cont201
  ]

cleanup.cont201:                                  ; preds = %cleanup199
  br label %do.cond202, !dbg !6746

do.cond202:                                       ; preds = %cleanup.cont201
  br label %do.end203, !dbg !6746

do.end203:                                        ; preds = %do.cond202
  br label %if.end204, !dbg !6746

if.end204:                                        ; preds = %do.end203, %do.body116
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6743
  br label %cleanup205, !dbg !6743

cleanup205:                                       ; preds = %if.end204, %cleanup199
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len2117) #16, !dbg !6743
  %cleanup.dest206 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest206, label %cleanup211 [
    i32 0, label %cleanup.cont207
  ]

cleanup.cont207:                                  ; preds = %cleanup205
  br label %do.cond208, !dbg !6744

do.cond208:                                       ; preds = %cleanup.cont207
  br label %do.end209, !dbg !6744

do.end209:                                        ; preds = %do.cond208
  %105 = load i32, ptr %_v113, align 4, !dbg !6743, !tbaa !3959
  %call210 = call i32 @__bswap_32(i32 noundef %105), !dbg !6743
  %106 = load ptr, ptr %_vp114, align 8, !dbg !6743, !tbaa !3910
  store i32 %call210, ptr %106, align 4, !dbg !6743, !tbaa !3959
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6742
  br label %cleanup211, !dbg !6742

cleanup211:                                       ; preds = %do.end209, %cleanup205
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp114) #16, !dbg !6742
  call void @llvm.lifetime.end.p0(i64 4, ptr %_v113) #16, !dbg !6742
  %cleanup.dest213 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest213, label %cleanup279 [
    i32 0, label %cleanup.cont214
    i32 15, label %err_parse
  ]

cleanup.cont214:                                  ; preds = %cleanup211
  br label %do.cond215, !dbg !6743

do.cond215:                                       ; preds = %cleanup.cont214
  br label %do.end216, !dbg !6743

do.end216:                                        ; preds = %do.cond215
  %107 = load ptr, ptr %rkbuf, align 8, !dbg !6755, !tbaa !3910
  %rkbuf_rkb217 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %107, i32 0, i32 20, !dbg !6756
  store ptr null, ptr %rkbuf_rkb217, align 8, !dbg !6757, !tbaa !5424
  %108 = load ptr, ptr %rkbuf, align 8, !dbg !6758, !tbaa !3910
  %rkbuf_reshdr218 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %108, i32 0, i32 11, !dbg !6759
  %Size219 = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr218, i32 0, i32 0, !dbg !6760
  %109 = load i32, ptr %Size219, align 8, !dbg !6760, !tbaa !6761
  %conv220 = sext i32 %109 to i64, !dbg !6758
  %110 = load ptr, ptr %rkbuf, align 8, !dbg !6762, !tbaa !3910
  %rkbuf_totlen221 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %110, i32 0, i32 8, !dbg !6763
  store i64 %conv220, ptr %rkbuf_totlen221, align 8, !dbg !6764, !tbaa !6704
  %111 = load ptr, ptr %rkbuf, align 8, !dbg !6765, !tbaa !3910
  %rkbuf_totlen222 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %111, i32 0, i32 8, !dbg !6767
  %112 = load i64, ptr %rkbuf_totlen222, align 8, !dbg !6767, !tbaa !6704
  %cmp223 = icmp ult i64 %112, 4, !dbg !6768
  br i1 %cmp223, label %if.then231, label %lor.lhs.false, !dbg !6769

lor.lhs.false:                                    ; preds = %do.end216
  %113 = load ptr, ptr %rkbuf, align 8, !dbg !6770, !tbaa !3910
  %rkbuf_totlen225 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %113, i32 0, i32 8, !dbg !6771
  %114 = load i64, ptr %rkbuf_totlen225, align 8, !dbg !6771, !tbaa !6704
  %115 = load ptr, ptr %rkb.addr, align 8, !dbg !6772, !tbaa !3910
  %rkb_rk226 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %115, i32 0, i32 32, !dbg !6773
  %116 = load ptr, ptr %rkb_rk226, align 8, !dbg !6773, !tbaa !4139
  %rk_conf227 = getelementptr inbounds %struct.rd_kafka_s, ptr %116, i32 0, i32 18, !dbg !6774
  %recv_max_msg_size = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf227, i32 0, i32 4, !dbg !6775
  %117 = load i32, ptr %recv_max_msg_size, align 4, !dbg !6775, !tbaa !6776
  %conv228 = sext i32 %117 to i64, !dbg !6777
  %cmp229 = icmp ugt i64 %114, %conv228, !dbg !6778
  br i1 %cmp229, label %if.then231, label %if.end242, !dbg !6779

if.then231:                                       ; preds = %lor.lhs.false, %do.end216
  %arraydecay232 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !6780
  %118 = load ptr, ptr %rkbuf, align 8, !dbg !6780, !tbaa !3910
  %rkbuf_reshdr233 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %118, i32 0, i32 11, !dbg !6780
  %Size234 = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr233, i32 0, i32 0, !dbg !6780
  %119 = load i32, ptr %Size234, align 8, !dbg !6780, !tbaa !6761
  %120 = load ptr, ptr %rkb.addr, align 8, !dbg !6780, !tbaa !3910
  %rkb_rk235 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %120, i32 0, i32 32, !dbg !6780
  %121 = load ptr, ptr %rkb_rk235, align 8, !dbg !6780, !tbaa !4139
  %rk_conf236 = getelementptr inbounds %struct.rd_kafka_s, ptr %121, i32 0, i32 18, !dbg !6780
  %recv_max_msg_size237 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf236, i32 0, i32 4, !dbg !6780
  %122 = load i32, ptr %recv_max_msg_size237, align 4, !dbg !6780, !tbaa !6776
  %call238 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay232, i64 noundef 512, ptr noundef @.str.36, i32 noundef %119, i32 noundef %122) #16, !dbg !6780
  store i32 -199, ptr %err, align 4, !dbg !6782, !tbaa !4126
  %123 = load ptr, ptr %rkb.addr, align 8, !dbg !6783, !tbaa !3910
  %rkb_c239 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %123, i32 0, i32 28, !dbg !6784
  %rx_err240 = getelementptr inbounds %struct.anon.2, ptr %rkb_c239, i32 0, i32 7, !dbg !6785
  %call241 = call i64 @rd_atomic64_add(ptr noundef %rx_err240, i64 noundef 1), !dbg !6786
  br label %err270, !dbg !6787

if.end242:                                        ; preds = %lor.lhs.false
  %124 = load ptr, ptr %rkbuf, align 8, !dbg !6788, !tbaa !3910
  %rkbuf_totlen243 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %124, i32 0, i32 8, !dbg !6789
  %125 = load i64, ptr %rkbuf_totlen243, align 8, !dbg !6790, !tbaa !6704
  %sub244 = sub i64 %125, 4, !dbg !6790
  store i64 %sub244, ptr %rkbuf_totlen243, align 8, !dbg !6790, !tbaa !6704
  %126 = load ptr, ptr %rkbuf, align 8, !dbg !6791, !tbaa !3910
  %rkbuf_totlen245 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %126, i32 0, i32 8, !dbg !6793
  %127 = load i64, ptr %rkbuf_totlen245, align 8, !dbg !6793, !tbaa !6704
  %cmp246 = icmp ugt i64 %127, 0, !dbg !6794
  br i1 %cmp246, label %if.then248, label %if.end251, !dbg !6795

if.then248:                                       ; preds = %if.end242
  %128 = load ptr, ptr %rkbuf, align 8, !dbg !6796, !tbaa !3910
  %rkbuf_buf249 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %128, i32 0, i32 5, !dbg !6798
  %129 = load ptr, ptr %rkbuf, align 8, !dbg !6799, !tbaa !3910
  %rkbuf_totlen250 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %129, i32 0, i32 8, !dbg !6800
  %130 = load i64, ptr %rkbuf_totlen250, align 8, !dbg !6800, !tbaa !6704
  call void @rd_buf_write_ensure_contig(ptr noundef %rkbuf_buf249, i64 noundef %130), !dbg !6801
  br label %if.end251, !dbg !6802

if.end251:                                        ; preds = %if.then248, %if.end242
  br label %if.end252, !dbg !6803

if.end252:                                        ; preds = %if.end251, %if.end12
  %131 = load ptr, ptr %rkbuf, align 8, !dbg !6804, !tbaa !3910
  %rkbuf_buf253 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %131, i32 0, i32 5, !dbg !6806
  %call254 = call i64 @rd_buf_write_pos(ptr noundef %rkbuf_buf253), !dbg !6807
  %sub255 = sub i64 %call254, 8, !dbg !6808
  %132 = load ptr, ptr %rkbuf, align 8, !dbg !6809, !tbaa !3910
  %rkbuf_totlen256 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %132, i32 0, i32 8, !dbg !6810
  %133 = load i64, ptr %rkbuf_totlen256, align 8, !dbg !6810, !tbaa !6704
  %cmp257 = icmp eq i64 %sub255, %133, !dbg !6811
  br i1 %cmp257, label %if.then259, label %if.end268, !dbg !6812

if.then259:                                       ; preds = %if.end252
  %134 = load ptr, ptr %rkb.addr, align 8, !dbg !6813, !tbaa !3910
  %rkb_recv_buf260 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %134, i32 0, i32 33, !dbg !6815
  store ptr null, ptr %rkb_recv_buf260, align 8, !dbg !6816, !tbaa !4544
  %135 = load ptr, ptr %rkb.addr, align 8, !dbg !6817, !tbaa !3910
  %rkb_c261 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %135, i32 0, i32 28, !dbg !6818
  %rx = getelementptr inbounds %struct.anon.2, ptr %rkb_c261, i32 0, i32 6, !dbg !6819
  %call262 = call i64 @rd_atomic64_add(ptr noundef %rx, i64 noundef 1), !dbg !6820
  %136 = load ptr, ptr %rkb.addr, align 8, !dbg !6821, !tbaa !3910
  %rkb_c263 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %136, i32 0, i32 28, !dbg !6822
  %rx_bytes = getelementptr inbounds %struct.anon.2, ptr %rkb_c263, i32 0, i32 5, !dbg !6823
  %137 = load ptr, ptr %rkbuf, align 8, !dbg !6824, !tbaa !3910
  %rkbuf_buf264 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %137, i32 0, i32 5, !dbg !6825
  %call265 = call i64 @rd_buf_write_pos(ptr noundef %rkbuf_buf264), !dbg !6826
  %call266 = call i64 @rd_atomic64_add(ptr noundef %rx_bytes, i64 noundef %call265), !dbg !6827
  %138 = load ptr, ptr %rkb.addr, align 8, !dbg !6828, !tbaa !3910
  %139 = load ptr, ptr %rkbuf, align 8, !dbg !6829, !tbaa !3910
  %call267 = call i32 @rd_kafka_req_response(ptr noundef %138, ptr noundef %139), !dbg !6830
  br label %if.end268, !dbg !6831

if.end268:                                        ; preds = %if.then259, %if.end252
  store i32 1, ptr %retval, align 4, !dbg !6832
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup279, !dbg !6832

err_parse:                                        ; preds = %cleanup211, %cleanup106
  tail call void @llvm.dbg.label(metadata !6643), !dbg !6833
  %140 = load ptr, ptr %rkbuf, align 8, !dbg !6834, !tbaa !3910
  %rkbuf_err269 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %140, i32 0, i32 34, !dbg !6835
  %141 = load i32, ptr %rkbuf_err269, align 8, !dbg !6835, !tbaa !6741
  store i32 %141, ptr %err, align 4, !dbg !6836, !tbaa !4126
  br label %err270, !dbg !6837

err270:                                           ; preds = %err_parse, %if.then231, %if.end10
  tail call void @llvm.dbg.label(metadata !6644), !dbg !6838
  %arraydecay271 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !6839
  %call272 = call i32 @strcmp(ptr noundef %arraydecay271, ptr noundef @.str.37) #19, !dbg !6841
  %tobool273 = icmp ne i32 %call272, 0, !dbg !6841
  br i1 %tobool273, label %if.else276, label %if.then274, !dbg !6842

if.then274:                                       ; preds = %err270
  %142 = load ptr, ptr %rkb.addr, align 8, !dbg !6843, !tbaa !3910
  %143 = load i32, ptr %err, align 4, !dbg !6844, !tbaa !4126
  %arraydecay275 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !6845
  call void @rd_kafka_broker_conn_closed(ptr noundef %142, i32 noundef %143, ptr noundef %arraydecay275), !dbg !6846
  br label %if.end278, !dbg !6846

if.else276:                                       ; preds = %err270
  %144 = load ptr, ptr %rkb.addr, align 8, !dbg !6847, !tbaa !3910
  %145 = load i32, ptr %err, align 4, !dbg !6848, !tbaa !4126
  %arraydecay277 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !6849
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %144, i32 noundef 3, i32 noundef %145, ptr noundef @.str.38, ptr noundef %arraydecay277), !dbg !6850
  br label %if.end278

if.end278:                                        ; preds = %if.else276, %if.then274
  store i32 -1, ptr %retval, align 4, !dbg !6851
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup279, !dbg !6851

cleanup279:                                       ; preds = %if.end278, %if.end268, %cleanup211, %cleanup106, %if.then26, %if.then9
  call void @llvm.lifetime.end.p0(i64 4, ptr %log_decode_errors) #16, !dbg !6852
  call void @llvm.lifetime.end.p0(i64 4, ptr %err) #16, !dbg !6852
  call void @llvm.lifetime.end.p0(i64 512, ptr %errstr) #16, !dbg !6852
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #16, !dbg !6852
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkbuf) #16, !dbg !6852
  %146 = load i32, ptr %retval, align 4, !dbg !6852
  ret i32 %146, !dbg !6852
}

declare !dbg !6853 ptr @rd_kafka_buf_new0(i32 noundef, i64 noundef, i32 noundef) #3

declare !dbg !6856 void @rd_buf_write_ensure(ptr noundef, i64 noundef, i64 noundef) #3

declare !dbg !6860 i64 @rd_kafka_transport_recv(ptr noundef, ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_atomic64_add(ptr noundef %ra, i64 noundef %v) #4 !dbg !6863 {
entry:
  %ra.addr = alloca ptr, align 8
  %v.addr = alloca i64, align 8
  %.atomictmp = alloca i64, align 8
  %atomic-temp = alloca i64, align 8
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !6865, metadata !DIExpression()), !dbg !6867
  store i64 %v, ptr %v.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !6866, metadata !DIExpression()), !dbg !6868
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !6869, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic64_t, ptr %0, i32 0, i32 0, !dbg !6869
  %1 = load i64, ptr %v.addr, align 8, !dbg !6869, !tbaa !4039
  store i64 %1, ptr %.atomictmp, align 8, !dbg !6869, !tbaa !4039
  %2 = load i64, ptr %.atomictmp, align 8, !dbg !6869
  %3 = atomicrmw add ptr %val, i64 %2 seq_cst, align 8, !dbg !6869
  %4 = add i64 %3, %2, !dbg !6869
  store i64 %4, ptr %atomic-temp, align 8, !dbg !6869
  %5 = load i64, ptr %atomic-temp, align 8, !dbg !6869, !tbaa !4039
  ret i64 %5, !dbg !6870
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_buf_write_pos(ptr noundef %rbuf) #4 !dbg !6871 {
entry:
  %retval = alloca i64, align 8
  %rbuf.addr = alloca ptr, align 8
  %seg = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rbuf, ptr %rbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rbuf.addr, metadata !6875, metadata !DIExpression()), !dbg !6877
  call void @llvm.lifetime.start.p0(i64 8, ptr %seg) #16, !dbg !6878
  tail call void @llvm.dbg.declare(metadata ptr %seg, metadata !6876, metadata !DIExpression()), !dbg !6879
  %0 = load ptr, ptr %rbuf.addr, align 8, !dbg !6880, !tbaa !3910
  %rbuf_wpos = getelementptr inbounds %struct.rd_buf_s, ptr %0, i32 0, i32 2, !dbg !6881
  %1 = load ptr, ptr %rbuf_wpos, align 8, !dbg !6881, !tbaa !6882
  store ptr %1, ptr %seg, align 8, !dbg !6879, !tbaa !3910
  %2 = load ptr, ptr %seg, align 8, !dbg !6883, !tbaa !3910
  %tobool = icmp ne ptr %2, null, !dbg !6883
  %lnot = xor i1 %tobool, true, !dbg !6883
  %lnot.ext = zext i1 %lnot to i32, !dbg !6883
  %conv = sext i32 %lnot.ext to i64, !dbg !6883
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6883
  %tobool1 = icmp ne i64 %expval, 0, !dbg !6883
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6885

if.then:                                          ; preds = %entry
  store i64 0, ptr %retval, align 8, !dbg !6886
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6886

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %seg, align 8, !dbg !6888, !tbaa !3910
  %seg_absof = getelementptr inbounds %struct.rd_segment_s, ptr %3, i32 0, i32 4, !dbg !6889
  %4 = load i64, ptr %seg_absof, align 8, !dbg !6889, !tbaa !6890
  %5 = load ptr, ptr %seg, align 8, !dbg !6892, !tbaa !3910
  %seg_of = getelementptr inbounds %struct.rd_segment_s, ptr %5, i32 0, i32 2, !dbg !6893
  %6 = load i64, ptr %seg_of, align 8, !dbg !6893, !tbaa !6894
  %add = add i64 %4, %6, !dbg !6895
  store i64 %add, ptr %retval, align 8, !dbg !6896
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6896

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %seg) #16, !dbg !6897
  %7 = load i64, ptr %retval, align 8, !dbg !6897
  ret i64 %7, !dbg !6897
}

declare !dbg !6898 i32 @rd_slice_init(ptr noundef, ptr noundef, i64 noundef, i64 noundef) #3

declare !dbg !6902 i64 @rd_slice_read(ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_slice_abs_offset(ptr noundef %slice) #4 !dbg !6905 {
entry:
  %retval = alloca i64, align 8
  %slice.addr = alloca ptr, align 8
  store ptr %slice, ptr %slice.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %slice.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  %0 = load ptr, ptr %slice.addr, align 8, !dbg !6913, !tbaa !3910
  %seg = getelementptr inbounds %struct.rd_slice_s, ptr %0, i32 0, i32 1, !dbg !6913
  %1 = load ptr, ptr %seg, align 8, !dbg !6913, !tbaa !6915
  %tobool = icmp ne ptr %1, null, !dbg !6913
  %lnot = xor i1 %tobool, true, !dbg !6913
  %lnot.ext = zext i1 %lnot to i32, !dbg !6913
  %conv = sext i32 %lnot.ext to i64, !dbg !6913
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6913
  %tobool1 = icmp ne i64 %expval, 0, !dbg !6913
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6916

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %slice.addr, align 8, !dbg !6917, !tbaa !3910
  %end = getelementptr inbounds %struct.rd_slice_s, ptr %2, i32 0, i32 4, !dbg !6918
  %3 = load i64, ptr %end, align 8, !dbg !6918, !tbaa !6919
  store i64 %3, ptr %retval, align 8, !dbg !6920
  br label %return, !dbg !6920

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %slice.addr, align 8, !dbg !6921, !tbaa !3910
  %seg2 = getelementptr inbounds %struct.rd_slice_s, ptr %4, i32 0, i32 1, !dbg !6922
  %5 = load ptr, ptr %seg2, align 8, !dbg !6922, !tbaa !6915
  %seg_absof = getelementptr inbounds %struct.rd_segment_s, ptr %5, i32 0, i32 4, !dbg !6923
  %6 = load i64, ptr %seg_absof, align 8, !dbg !6923, !tbaa !6890
  %7 = load ptr, ptr %slice.addr, align 8, !dbg !6924, !tbaa !3910
  %rof = getelementptr inbounds %struct.rd_slice_s, ptr %7, i32 0, i32 2, !dbg !6925
  %8 = load i64, ptr %rof, align 8, !dbg !6925, !tbaa !6926
  %add = add i64 %6, %8, !dbg !6927
  store i64 %add, ptr %retval, align 8, !dbg !6928
  br label %return, !dbg !6928

return:                                           ; preds = %if.end, %if.then
  %9 = load i64, ptr %retval, align 8, !dbg !6929
  ret i64 %9, !dbg !6929
}

; Function Attrs: nounwind
declare !dbg !6930 i32 @snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #9

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !6936 i64 @strlen(ptr noundef) #10

; Function Attrs: nounwind uwtable
define internal ptr @rd_kafka_ApiKey2str(i16 noundef signext %ApiKey) #0 !dbg !3485 {
entry:
  %retval = alloca ptr, align 8
  %ApiKey.addr = alloca i16, align 2
  store i16 %ApiKey, ptr %ApiKey.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %ApiKey.addr, metadata !3489, metadata !DIExpression()), !dbg !6940
  %0 = load i16, ptr %ApiKey.addr, align 2, !dbg !6941, !tbaa !3915
  %conv = sext i16 %0 to i32, !dbg !6941
  %cmp = icmp slt i32 %conv, 0, !dbg !6943
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6944

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16, ptr %ApiKey.addr, align 2, !dbg !6945, !tbaa !3915
  %conv2 = sext i16 %1 to i32, !dbg !6945
  %cmp3 = icmp sge i32 %conv2, 68, !dbg !6946
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !6947

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %2 = load i16, ptr %ApiKey.addr, align 2, !dbg !6948, !tbaa !3915
  %idxprom = sext i16 %2 to i64, !dbg !6949
  %arrayidx = getelementptr inbounds [68 x ptr], ptr @rd_kafka_ApiKey2str.names, i64 0, i64 %idxprom, !dbg !6949
  %3 = load ptr, ptr %arrayidx, align 8, !dbg !6949, !tbaa !3910
  %tobool = icmp ne ptr %3, null, !dbg !6949
  br i1 %tobool, label %if.end, label %if.then, !dbg !6950

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  %4 = call align 16 ptr @llvm.threadlocal.address.p0(ptr align 16 @rd_kafka_ApiKey2str.ret), !dbg !6951
  %arraydecay = getelementptr inbounds [64 x i8], ptr %4, i64 0, i64 0, !dbg !6951
  %5 = load i16, ptr %ApiKey.addr, align 2, !dbg !6951, !tbaa !3915
  %conv6 = sext i16 %5 to i32, !dbg !6951
  %call = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay, i64 noundef 64, ptr noundef @.str.192, i32 noundef %conv6) #16, !dbg !6951
  %6 = call align 16 ptr @llvm.threadlocal.address.p0(ptr align 16 @rd_kafka_ApiKey2str.ret), !dbg !6953
  %arraydecay7 = getelementptr inbounds [64 x i8], ptr %6, i64 0, i64 0, !dbg !6953
  store ptr %arraydecay7, ptr %retval, align 8, !dbg !6954
  br label %return, !dbg !6954

if.end:                                           ; preds = %lor.lhs.false5
  %7 = load i16, ptr %ApiKey.addr, align 2, !dbg !6955, !tbaa !3915
  %idxprom8 = sext i16 %7 to i64, !dbg !6956
  %arrayidx9 = getelementptr inbounds [68 x ptr], ptr @rd_kafka_ApiKey2str.names, i64 0, i64 %idxprom8, !dbg !6956
  %8 = load ptr, ptr %arrayidx9, align 8, !dbg !6956, !tbaa !3910
  store ptr %8, ptr %retval, align 8, !dbg !6957
  br label %return, !dbg !6957

return:                                           ; preds = %if.end, %if.then
  %9 = load ptr, ptr %retval, align 8, !dbg !6958
  ret ptr %9, !dbg !6958
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_slice_offset(ptr noundef %slice) #4 !dbg !6959 {
entry:
  %retval = alloca i64, align 8
  %slice.addr = alloca ptr, align 8
  store ptr %slice, ptr %slice.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %slice.addr, metadata !6961, metadata !DIExpression()), !dbg !6962
  %0 = load ptr, ptr %slice.addr, align 8, !dbg !6963, !tbaa !3910
  %seg = getelementptr inbounds %struct.rd_slice_s, ptr %0, i32 0, i32 1, !dbg !6963
  %1 = load ptr, ptr %seg, align 8, !dbg !6963, !tbaa !6915
  %tobool = icmp ne ptr %1, null, !dbg !6963
  %lnot = xor i1 %tobool, true, !dbg !6963
  %lnot.ext = zext i1 %lnot to i32, !dbg !6963
  %conv = sext i32 %lnot.ext to i64, !dbg !6963
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6963
  %tobool1 = icmp ne i64 %expval, 0, !dbg !6963
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6965

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %slice.addr, align 8, !dbg !6966, !tbaa !3910
  %end = getelementptr inbounds %struct.rd_slice_s, ptr %2, i32 0, i32 4, !dbg !6966
  %3 = load i64, ptr %end, align 8, !dbg !6966, !tbaa !6919
  %4 = load ptr, ptr %slice.addr, align 8, !dbg !6966, !tbaa !3910
  %start = getelementptr inbounds %struct.rd_slice_s, ptr %4, i32 0, i32 3, !dbg !6966
  %5 = load i64, ptr %start, align 8, !dbg !6966, !tbaa !6967
  %sub = sub i64 %3, %5, !dbg !6966
  store i64 %sub, ptr %retval, align 8, !dbg !6968
  br label %return, !dbg !6968

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %slice.addr, align 8, !dbg !6969, !tbaa !3910
  %seg2 = getelementptr inbounds %struct.rd_slice_s, ptr %6, i32 0, i32 1, !dbg !6970
  %7 = load ptr, ptr %seg2, align 8, !dbg !6970, !tbaa !6915
  %seg_absof = getelementptr inbounds %struct.rd_segment_s, ptr %7, i32 0, i32 4, !dbg !6971
  %8 = load i64, ptr %seg_absof, align 8, !dbg !6971, !tbaa !6890
  %9 = load ptr, ptr %slice.addr, align 8, !dbg !6972, !tbaa !3910
  %rof = getelementptr inbounds %struct.rd_slice_s, ptr %9, i32 0, i32 2, !dbg !6973
  %10 = load i64, ptr %rof, align 8, !dbg !6973, !tbaa !6926
  %add = add i64 %8, %10, !dbg !6974
  %11 = load ptr, ptr %slice.addr, align 8, !dbg !6975, !tbaa !3910
  %start3 = getelementptr inbounds %struct.rd_slice_s, ptr %11, i32 0, i32 3, !dbg !6976
  %12 = load i64, ptr %start3, align 8, !dbg !6976, !tbaa !6967
  %sub4 = sub i64 %add, %12, !dbg !6977
  store i64 %sub4, ptr %retval, align 8, !dbg !6978
  br label %return, !dbg !6978

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, ptr %retval, align 8, !dbg !6979
  ret i64 %13, !dbg !6979
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__bswap_32(i32 noundef %__bsx) #4 !dbg !6980 {
entry:
  %__bsx.addr = alloca i32, align 4
  store i32 %__bsx, ptr %__bsx.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %__bsx.addr, metadata !6985, metadata !DIExpression()), !dbg !6986
  %0 = load i32, ptr %__bsx.addr, align 4, !dbg !6987, !tbaa !3959
  %and = and i32 %0, -16777216, !dbg !6987
  %shr = lshr i32 %and, 24, !dbg !6987
  %1 = load i32, ptr %__bsx.addr, align 4, !dbg !6987, !tbaa !3959
  %and1 = and i32 %1, 16711680, !dbg !6987
  %shr2 = lshr i32 %and1, 8, !dbg !6987
  %or = or i32 %shr, %shr2, !dbg !6987
  %2 = load i32, ptr %__bsx.addr, align 4, !dbg !6987, !tbaa !3959
  %and3 = and i32 %2, 65280, !dbg !6987
  %shl = shl i32 %and3, 8, !dbg !6987
  %or4 = or i32 %or, %shl, !dbg !6987
  %3 = load i32, ptr %__bsx.addr, align 4, !dbg !6987, !tbaa !3959
  %and5 = and i32 %3, 255, !dbg !6987
  %shl6 = shl i32 %and5, 24, !dbg !6987
  %or7 = or i32 %or4, %shl6, !dbg !6987
  ret i32 %or7, !dbg !6988
}

declare !dbg !6989 void @rd_buf_write_ensure_contig(ptr noundef, i64 noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_req_response(ptr noundef %rkb, ptr noundef %rkbuf) #0 !dbg !6992 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  %req = alloca ptr, align 8
  %log_decode_errors = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %_logname54 = alloca [256 x i8], align 16
  %_tagcnt = alloca i64, align 8
  %_v = alloca i64, align 8
  %_vp = alloca ptr, align 8
  %_r = alloca i64, align 8
  %__tmpstr = alloca [256 x i8], align 16
  %_logname122 = alloca [256 x i8], align 16
  %_tagtype = alloca i64, align 8
  %_taglen = alloca i64, align 8
  %_v170 = alloca i64, align 8
  %_vp171 = alloca ptr, align 8
  %_r172 = alloca i64, align 8
  %__tmpstr188 = alloca [256 x i8], align 16
  %_logname199 = alloca [256 x i8], align 16
  %_v256 = alloca i64, align 8
  %_vp257 = alloca ptr, align 8
  %_r258 = alloca i64, align 8
  %__tmpstr274 = alloca [256 x i8], align 16
  %_logname285 = alloca [256 x i8], align 16
  %__len1 = alloca i64, align 8
  %__len0 = alloca i64, align 8
  %__tmpstr370 = alloca [256 x i8], align 16
  %_logname381 = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !6994, metadata !DIExpression()), !dbg !7065
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !6995, metadata !DIExpression()), !dbg !7066
  call void @llvm.lifetime.start.p0(i64 8, ptr %req) #16, !dbg !7067
  tail call void @llvm.dbg.declare(metadata ptr %req, metadata !6996, metadata !DIExpression()), !dbg !7068
  store ptr null, ptr %req, align 8, !dbg !7068, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 4, ptr %log_decode_errors) #16, !dbg !7069
  tail call void @llvm.dbg.declare(metadata ptr %log_decode_errors, metadata !6997, metadata !DIExpression()), !dbg !7070
  store i32 3, ptr %log_decode_errors, align 4, !dbg !7070, !tbaa !3959
  br label %do.body, !dbg !7071

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !7072, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !7072
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !7072, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %1), !dbg !7072
  %tobool = icmp ne i32 %call, 0, !dbg !7072
  %lnot = xor i1 %tobool, true, !dbg !7072
  %lnot.ext = zext i1 %lnot to i32, !dbg !7072
  %conv = sext i32 %lnot.ext to i64, !dbg !7072
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7072
  %tobool1 = icmp ne i64 %expval, 0, !dbg !7072
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7075

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !7072, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !7072
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !7072, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 1849, ptr noundef @__FUNCTION__.rd_kafka_req_response, ptr noundef %3, ptr noundef @.str.21) #17, !dbg !7072
  unreachable, !dbg !7072

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !7075

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7075

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !7076, !tbaa !3910
  %5 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7076, !tbaa !3910
  %rkbuf_reshdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %5, i32 0, i32 11, !dbg !7076
  %CorrId = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr, i32 0, i32 1, !dbg !7076
  %6 = load i32, ptr %CorrId, align 4, !dbg !7076, !tbaa !7077
  %call2 = call ptr @rd_kafka_waitresp_find(ptr noundef %4, i32 noundef %6), !dbg !7076
  store ptr %call2, ptr %req, align 8, !dbg !7076, !tbaa !3910
  %tobool3 = icmp ne ptr %call2, null, !dbg !7076
  %lnot4 = xor i1 %tobool3, true, !dbg !7076
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !7076
  %conv6 = sext i32 %lnot.ext5 to i64, !dbg !7076
  %expval7 = call i64 @llvm.expect.i64(i64 %conv6, i64 0), !dbg !7076
  %tobool8 = icmp ne i64 %expval7, 0, !dbg !7076
  br i1 %tobool8, label %if.then9, label %if.end43, !dbg !7078

if.then9:                                         ; preds = %do.end
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !7079, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 28, !dbg !7080
  %rx_corrid_err = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 8, !dbg !7081
  %call10 = call i64 @rd_atomic64_add(ptr noundef %rx_corrid_err, i64 noundef 1), !dbg !7082
  br label %do.body11, !dbg !7083

do.body11:                                        ; preds = %if.then9
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !7084, !tbaa !3910
  %rkb_rk12 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 32, !dbg !7084
  %9 = load ptr, ptr %rkb_rk12, align 8, !dbg !7084, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %9, i32 0, i32 18, !dbg !7084
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !7084
  %10 = load i32, ptr %debug, align 8, !dbg !7084, !tbaa !4140
  %and = and i32 %10, 2, !dbg !7084
  %conv13 = sext i32 %and to i64, !dbg !7084
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0), !dbg !7084
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !7084
  br i1 %tobool15, label %if.then16, label %if.end29, !dbg !7085

if.then16:                                        ; preds = %do.body11
  br label %do.body17, !dbg !7086

do.body17:                                        ; preds = %if.then16
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !7087
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !6998, metadata !DIExpression()), !dbg !7087
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !7087, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 49, !dbg !7087
  %call18 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !7087
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7087
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !7087, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 48, !dbg !7087
  %13 = load ptr, ptr %rkb_logname, align 8, !dbg !7087, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %13, i64 noundef 256), !dbg !7087
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !7087, !tbaa !3910
  %rkb_logname_lock19 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 49, !dbg !7087
  %call20 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock19), !dbg !7087
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !7087, !tbaa !3910
  %rkb_rk21 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 32, !dbg !7087
  %16 = load ptr, ptr %rkb_rk21, align 8, !dbg !7087, !tbaa !4139
  %rk_conf22 = getelementptr inbounds %struct.rd_kafka_s, ptr %16, i32 0, i32 18, !dbg !7087
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !7087, !tbaa !3910
  %rkb_rk23 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 32, !dbg !7087
  %18 = load ptr, ptr %rkb_rk23, align 8, !dbg !7087, !tbaa !4139
  %arraydecay24 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7087
  %19 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7087, !tbaa !3910
  %rkbuf_reshdr25 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %19, i32 0, i32 11, !dbg !7087
  %CorrId26 = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr25, i32 0, i32 1, !dbg !7087
  %20 = load i32, ptr %CorrId26, align 4, !dbg !7087, !tbaa !7077
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf22, ptr noundef %18, ptr noundef %arraydecay24, i32 noundef 7, i32 noundef 2, ptr noundef @.str.193, ptr noundef @.str.194, i32 noundef %20), !dbg !7087
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !7086
  br label %do.cond27, !dbg !7087

do.cond27:                                        ; preds = %do.body17
  br label %do.end28, !dbg !7087

do.end28:                                         ; preds = %do.cond27
  br label %if.end29, !dbg !7086

if.end29:                                         ; preds = %do.end28, %do.body11
  br label %do.cond30, !dbg !7085

do.cond30:                                        ; preds = %if.end29
  br label %do.end31, !dbg !7085

do.end31:                                         ; preds = %do.cond30
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !7088, !tbaa !3910
  %rkb_rk32 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 32, !dbg !7089
  %22 = load ptr, ptr %rkb_rk32, align 8, !dbg !7089, !tbaa !4139
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !7090, !tbaa !3910
  %call33 = call ptr @rd_kafka_broker_name(ptr noundef %23), !dbg !7091
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !7092, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 1, !dbg !7093
  %25 = load i32, ptr %rkb_nodeid, align 8, !dbg !7093, !tbaa !4311
  %26 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7094, !tbaa !3910
  %rkbuf_reshdr34 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %26, i32 0, i32 11, !dbg !7095
  %CorrId35 = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr34, i32 0, i32 1, !dbg !7096
  %27 = load i32, ptr %CorrId35, align 4, !dbg !7096, !tbaa !7077
  %28 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7097, !tbaa !3910
  %rkbuf_totlen = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %28, i32 0, i32 8, !dbg !7098
  %29 = load i64, ptr %rkbuf_totlen, align 8, !dbg !7098, !tbaa !6704
  call void @rd_kafka_interceptors_on_response_received(ptr noundef %22, i32 noundef -1, ptr noundef %call33, i32 noundef %25, i16 noundef signext -1, i16 noundef signext -1, i32 noundef %27, i64 noundef %29, i64 noundef -1, i32 noundef -156), !dbg !7099
  br label %do.body36, !dbg !7100

do.body36:                                        ; preds = %do.end31
  %30 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7101, !tbaa !3910
  %rkbuf_refcnt = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %30, i32 0, i32 21, !dbg !7101
  %call37 = call i32 @rd_refcnt_sub0(ptr noundef %rkbuf_refcnt), !dbg !7101
  %cmp = icmp sgt i32 %call37, 0, !dbg !7101
  br i1 %cmp, label %if.then39, label %if.end40, !dbg !7104

if.then39:                                        ; preds = %do.body36
  br label %do.end42, !dbg !7101

if.end40:                                         ; preds = %do.body36
  %31 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7104, !tbaa !3910
  call void @rd_kafka_buf_destroy_final(ptr noundef %31), !dbg !7104
  br label %do.cond41, !dbg !7104

do.cond41:                                        ; preds = %if.end40
  br label %do.end42, !dbg !7104

do.end42:                                         ; preds = %do.cond41, %if.then39
  store i32 -1, ptr %retval, align 4, !dbg !7105
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup479, !dbg !7105

if.end43:                                         ; preds = %do.end
  br label %do.body44, !dbg !7106

do.body44:                                        ; preds = %if.end43
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !7107, !tbaa !3910
  %rkb_rk45 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 32, !dbg !7107
  %33 = load ptr, ptr %rkb_rk45, align 8, !dbg !7107, !tbaa !4139
  %rk_conf46 = getelementptr inbounds %struct.rd_kafka_s, ptr %33, i32 0, i32 18, !dbg !7107
  %debug47 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf46, i32 0, i32 13, !dbg !7107
  %34 = load i32, ptr %debug47, align 8, !dbg !7107, !tbaa !4140
  %and48 = and i32 %34, 128, !dbg !7107
  %conv49 = sext i32 %and48 to i64, !dbg !7107
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0), !dbg !7107
  %tobool51 = icmp ne i64 %expval50, 0, !dbg !7107
  br i1 %tobool51, label %if.then52, label %if.end75, !dbg !7108

if.then52:                                        ; preds = %do.body44
  br label %do.body53, !dbg !7109

do.body53:                                        ; preds = %if.then52
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname54) #16, !dbg !7110
  tail call void @llvm.dbg.declare(metadata ptr %_logname54, metadata !7005, metadata !DIExpression()), !dbg !7110
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !7110, !tbaa !3910
  %rkb_logname_lock55 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 49, !dbg !7110
  %call56 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock55), !dbg !7110
  %arraydecay57 = getelementptr inbounds [256 x i8], ptr %_logname54, i64 0, i64 0, !dbg !7110
  %36 = load ptr, ptr %rkb.addr, align 8, !dbg !7110, !tbaa !3910
  %rkb_logname58 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 48, !dbg !7110
  %37 = load ptr, ptr %rkb_logname58, align 8, !dbg !7110, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay57, ptr noundef %37, i64 noundef 256), !dbg !7110
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !7110, !tbaa !3910
  %rkb_logname_lock59 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 49, !dbg !7110
  %call60 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock59), !dbg !7110
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !7110, !tbaa !3910
  %rkb_rk61 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 32, !dbg !7110
  %40 = load ptr, ptr %rkb_rk61, align 8, !dbg !7110, !tbaa !4139
  %rk_conf62 = getelementptr inbounds %struct.rd_kafka_s, ptr %40, i32 0, i32 18, !dbg !7110
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !7110, !tbaa !3910
  %rkb_rk63 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 32, !dbg !7110
  %42 = load ptr, ptr %rkb_rk63, align 8, !dbg !7110, !tbaa !4139
  %arraydecay64 = getelementptr inbounds [256 x i8], ptr %_logname54, i64 0, i64 0, !dbg !7110
  %43 = load ptr, ptr %req, align 8, !dbg !7110, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %43, i32 0, i32 10, !dbg !7110
  %ApiKey = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !7110
  %44 = load i16, ptr %ApiKey, align 4, !dbg !7110, !tbaa !5392
  %call65 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %44), !dbg !7110
  %45 = load ptr, ptr %req, align 8, !dbg !7110, !tbaa !3910
  %rkbuf_reqhdr66 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %45, i32 0, i32 10, !dbg !7110
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr66, i32 0, i32 2, !dbg !7110
  %46 = load i16, ptr %ApiVersion, align 2, !dbg !7110, !tbaa !5272
  %conv67 = sext i16 %46 to i32, !dbg !7110
  %47 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7110, !tbaa !3910
  %rkbuf_totlen68 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %47, i32 0, i32 8, !dbg !7110
  %48 = load i64, ptr %rkbuf_totlen68, align 8, !dbg !7110, !tbaa !6704
  %49 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7110, !tbaa !3910
  %rkbuf_reshdr69 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %49, i32 0, i32 11, !dbg !7110
  %CorrId70 = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr69, i32 0, i32 1, !dbg !7110
  %50 = load i32, ptr %CorrId70, align 4, !dbg !7110, !tbaa !7077
  %51 = load ptr, ptr %req, align 8, !dbg !7110, !tbaa !3910
  %rkbuf_ts_sent = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %51, i32 0, i32 27, !dbg !7110
  %52 = load i64, ptr %rkbuf_ts_sent, align 8, !dbg !7110, !tbaa !7111
  %conv71 = sitofp i64 %52 to float, !dbg !7110
  %div = fdiv float %conv71, 1.000000e+03, !dbg !7110
  %conv72 = fpext float %div to double, !dbg !7110
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf62, ptr noundef %42, ptr noundef %arraydecay64, i32 noundef 7, i32 noundef 128, ptr noundef @.str.195, ptr noundef @.str.196, ptr noundef %call65, i32 noundef %conv67, i64 noundef %48, i32 noundef %50, double noundef %conv72), !dbg !7110
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname54) #16, !dbg !7109
  br label %do.cond73, !dbg !7110

do.cond73:                                        ; preds = %do.body53
  br label %do.end74, !dbg !7110

do.end74:                                         ; preds = %do.cond73
  br label %if.end75, !dbg !7109

if.end75:                                         ; preds = %do.end74, %do.body44
  br label %do.cond76, !dbg !7108

do.cond76:                                        ; preds = %if.end75
  br label %do.end77, !dbg !7108

do.end77:                                         ; preds = %do.cond76
  %53 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7112, !tbaa !3910
  %rkbuf_reqhdr78 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %53, i32 0, i32 10, !dbg !7113
  %54 = load ptr, ptr %req, align 8, !dbg !7114, !tbaa !3910
  %rkbuf_reqhdr79 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %54, i32 0, i32 10, !dbg !7115
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %rkbuf_reqhdr78, ptr align 4 %rkbuf_reqhdr79, i64 12, i1 false), !dbg !7115, !tbaa.struct !7116
  %55 = load ptr, ptr %req, align 8, !dbg !7117, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %55, i32 0, i32 3, !dbg !7118
  %56 = load i32, ptr %rkbuf_flags, align 8, !dbg !7118, !tbaa !5243
  %and80 = and i32 %56, 64, !dbg !7119
  %57 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7120, !tbaa !3910
  %rkbuf_flags81 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %57, i32 0, i32 3, !dbg !7121
  %58 = load i32, ptr %rkbuf_flags81, align 8, !dbg !7122, !tbaa !5243
  %or = or i32 %58, %and80, !dbg !7122
  store i32 %or, ptr %rkbuf_flags81, align 8, !dbg !7122, !tbaa !5243
  %59 = load ptr, ptr %req, align 8, !dbg !7123, !tbaa !3910
  %rkbuf_ts_sent82 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %59, i32 0, i32 27, !dbg !7124
  %60 = load i64, ptr %rkbuf_ts_sent82, align 8, !dbg !7124, !tbaa !7111
  %61 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7125, !tbaa !3910
  %rkbuf_ts_sent83 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %61, i32 0, i32 27, !dbg !7126
  store i64 %60, ptr %rkbuf_ts_sent83, align 8, !dbg !7127, !tbaa !7111
  %62 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7128, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %62, i32 0, i32 6, !dbg !7129
  %63 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7130, !tbaa !3910
  %rkbuf_buf = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %63, i32 0, i32 5, !dbg !7131
  %64 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7132, !tbaa !3910
  %rkbuf_buf84 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %64, i32 0, i32 5, !dbg !7133
  %call85 = call i64 @rd_buf_len(ptr noundef %rkbuf_buf84), !dbg !7134
  %sub = sub i64 %call85, 8, !dbg !7135
  %call86 = call i32 @rd_slice_init(ptr noundef %rkbuf_reader, ptr noundef %rkbuf_buf, i64 noundef 8, i64 noundef %sub), !dbg !7136
  %65 = load ptr, ptr %req, align 8, !dbg !7137, !tbaa !3910
  %rkbuf_reqhdr87 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %65, i32 0, i32 10, !dbg !7138
  %ApiKey88 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr87, i32 0, i32 1, !dbg !7139
  %66 = load i16, ptr %ApiKey88, align 4, !dbg !7139, !tbaa !5392
  %conv89 = sext i16 %66 to i32, !dbg !7137
  %cmp90 = icmp ne i32 %conv89, 18, !dbg !7140
  br i1 %cmp90, label %if.then92, label %if.end451, !dbg !7141

if.then92:                                        ; preds = %do.end77
  br label %do.body93, !dbg !7142

do.body93:                                        ; preds = %if.then92
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tagcnt) #16, !dbg !7143
  tail call void @llvm.dbg.declare(metadata ptr %_tagcnt, metadata !7010, metadata !DIExpression()), !dbg !7143
  %67 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7144, !tbaa !3910
  %rkbuf_flags94 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %67, i32 0, i32 3, !dbg !7144
  %68 = load i32, ptr %rkbuf_flags94, align 8, !dbg !7144, !tbaa !5243
  %and95 = and i32 %68, 64, !dbg !7144
  %tobool96 = icmp ne i32 %and95, 0, !dbg !7144
  br i1 %tobool96, label %if.end98, label %if.then97, !dbg !7143

if.then97:                                        ; preds = %do.body93
  store i32 14, ptr %cleanup.dest.slot, align 4
  br label %cleanup446, !dbg !7144

if.end98:                                         ; preds = %do.body93
  br label %do.body99, !dbg !7143

do.body99:                                        ; preds = %if.end98
  call void @llvm.lifetime.start.p0(i64 8, ptr %_v) #16, !dbg !7146
  tail call void @llvm.dbg.declare(metadata ptr %_v, metadata !7013, metadata !DIExpression()), !dbg !7146
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp) #16, !dbg !7146
  tail call void @llvm.dbg.declare(metadata ptr %_vp, metadata !7015, metadata !DIExpression()), !dbg !7146
  store ptr %_tagcnt, ptr %_vp, align 8, !dbg !7146, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %_r) #16, !dbg !7146
  tail call void @llvm.dbg.declare(metadata ptr %_r, metadata !7017, metadata !DIExpression()), !dbg !7146
  %69 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7146, !tbaa !3910
  %rkbuf_reader100 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %69, i32 0, i32 6, !dbg !7146
  %call101 = call i64 @rd_slice_read_uvarint(ptr noundef %rkbuf_reader100, ptr noundef %_v), !dbg !7146
  store i64 %call101, ptr %_r, align 8, !dbg !7146, !tbaa !4039
  %70 = load i64, ptr %_r, align 8, !dbg !7147, !tbaa !4039
  %cmp102 = icmp eq i64 %70, 0, !dbg !7147
  %conv103 = zext i1 %cmp102 to i32, !dbg !7147
  %conv104 = sext i32 %conv103 to i64, !dbg !7147
  %expval105 = call i64 @llvm.expect.i64(i64 %conv104, i64 0), !dbg !7147
  %tobool106 = icmp ne i64 %expval105, 0, !dbg !7147
  br i1 %tobool106, label %if.then107, label %if.end162, !dbg !7146

if.then107:                                       ; preds = %do.body99
  br label %do.body108, !dbg !7147

do.body108:                                       ; preds = %if.then107
  %71 = load i32, ptr %log_decode_errors, align 4, !dbg !7148, !tbaa !3959
  %cmp109 = icmp sgt i32 %71, 0, !dbg !7148
  br i1 %cmp109, label %land.lhs.true, label %if.end159, !dbg !7148

land.lhs.true:                                    ; preds = %do.body108
  %72 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7148, !tbaa !3910
  %rkbuf_rkb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %72, i32 0, i32 20, !dbg !7148
  %73 = load ptr, ptr %rkbuf_rkb, align 8, !dbg !7148, !tbaa !5424
  %tobool111 = icmp ne ptr %73, null, !dbg !7148
  br i1 %tobool111, label %if.then112, label %if.end159, !dbg !7149

if.then112:                                       ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr) #16, !dbg !7150
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr, metadata !7018, metadata !DIExpression()), !dbg !7150
  %arraydecay113 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !7150
  %call114 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay113, i64 noundef 256, ptr noundef @.str.197) #16, !dbg !7150
  %arraydecay115 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !7151
  %call116 = call i64 @strlen(ptr noundef %arraydecay115) #19, !dbg !7151
  %cmp117 = icmp eq i64 %call116, 2, !dbg !7151
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !7150

if.then119:                                       ; preds = %if.then112
  %arrayidx = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !7151
  store i8 0, ptr %arrayidx, align 16, !dbg !7151, !tbaa !4126
  br label %if.end120, !dbg !7151

if.end120:                                        ; preds = %if.then119, %if.then112
  br label %do.body121, !dbg !7150

do.body121:                                       ; preds = %if.end120
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname122) #16, !dbg !7153
  tail call void @llvm.dbg.declare(metadata ptr %_logname122, metadata !7023, metadata !DIExpression()), !dbg !7153
  %74 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_rkb123 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %74, i32 0, i32 20, !dbg !7153
  %75 = load ptr, ptr %rkbuf_rkb123, align 8, !dbg !7153, !tbaa !5424
  %rkb_logname_lock124 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %75, i32 0, i32 49, !dbg !7153
  %call125 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock124), !dbg !7153
  %arraydecay126 = getelementptr inbounds [256 x i8], ptr %_logname122, i64 0, i64 0, !dbg !7153
  %76 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_rkb127 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %76, i32 0, i32 20, !dbg !7153
  %77 = load ptr, ptr %rkbuf_rkb127, align 8, !dbg !7153, !tbaa !5424
  %rkb_logname128 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %77, i32 0, i32 48, !dbg !7153
  %78 = load ptr, ptr %rkb_logname128, align 8, !dbg !7153, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay126, ptr noundef %78, i64 noundef 256), !dbg !7153
  %79 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_rkb129 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %79, i32 0, i32 20, !dbg !7153
  %80 = load ptr, ptr %rkbuf_rkb129, align 8, !dbg !7153, !tbaa !5424
  %rkb_logname_lock130 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %80, i32 0, i32 49, !dbg !7153
  %call131 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock130), !dbg !7153
  %81 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_rkb132 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %81, i32 0, i32 20, !dbg !7153
  %82 = load ptr, ptr %rkbuf_rkb132, align 8, !dbg !7153, !tbaa !5424
  %rkb_rk133 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %82, i32 0, i32 32, !dbg !7153
  %83 = load ptr, ptr %rkb_rk133, align 8, !dbg !7153, !tbaa !4139
  %rk_conf134 = getelementptr inbounds %struct.rd_kafka_s, ptr %83, i32 0, i32 18, !dbg !7153
  %84 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_rkb135 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %84, i32 0, i32 20, !dbg !7153
  %85 = load ptr, ptr %rkbuf_rkb135, align 8, !dbg !7153, !tbaa !5424
  %rkb_rk136 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %85, i32 0, i32 32, !dbg !7153
  %86 = load ptr, ptr %rkb_rk136, align 8, !dbg !7153, !tbaa !4139
  %arraydecay137 = getelementptr inbounds [256 x i8], ptr %_logname122, i64 0, i64 0, !dbg !7153
  %87 = load i32, ptr %log_decode_errors, align 4, !dbg !7153, !tbaa !3959
  %88 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_reqhdr138 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %88, i32 0, i32 10, !dbg !7153
  %ApiKey139 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr138, i32 0, i32 1, !dbg !7153
  %89 = load i16, ptr %ApiKey139, align 4, !dbg !7153, !tbaa !5392
  %call140 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %89), !dbg !7153
  %90 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_reqhdr141 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %90, i32 0, i32 10, !dbg !7153
  %ApiVersion142 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr141, i32 0, i32 2, !dbg !7153
  %91 = load i16, ptr %ApiVersion142, align 2, !dbg !7153, !tbaa !5272
  %conv143 = sext i16 %91 to i32, !dbg !7153
  %92 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_reader144 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %92, i32 0, i32 6, !dbg !7153
  %call145 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader144), !dbg !7153
  %93 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_reader146 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %93, i32 0, i32 6, !dbg !7153
  %end = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader146, i32 0, i32 4, !dbg !7153
  %94 = load i64, ptr %end, align 8, !dbg !7153, !tbaa !6731
  %95 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_reader147 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %95, i32 0, i32 6, !dbg !7153
  %start = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader147, i32 0, i32 3, !dbg !7153
  %96 = load i64, ptr %start, align 8, !dbg !7153, !tbaa !6739
  %sub148 = sub i64 %94, %96, !dbg !7153
  %97 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_reader149 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %97, i32 0, i32 6, !dbg !7153
  %end150 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader149, i32 0, i32 4, !dbg !7153
  %98 = load i64, ptr %end150, align 8, !dbg !7153, !tbaa !6731
  %99 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_reader151 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %99, i32 0, i32 6, !dbg !7153
  %call152 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader151), !dbg !7153
  %sub153 = sub i64 %98, %call152, !dbg !7153
  %100 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_uflow_mitigation = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %100, i32 0, i32 36, !dbg !7153
  %101 = load ptr, ptr %rkbuf_uflow_mitigation, align 8, !dbg !7153, !tbaa !6740
  %tobool154 = icmp ne ptr %101, null, !dbg !7153
  br i1 %tobool154, label %cond.true, label %cond.false, !dbg !7153

cond.true:                                        ; preds = %do.body121
  %102 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7153, !tbaa !3910
  %rkbuf_uflow_mitigation155 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %102, i32 0, i32 36, !dbg !7153
  %103 = load ptr, ptr %rkbuf_uflow_mitigation155, align 8, !dbg !7153, !tbaa !6740
  br label %cond.end, !dbg !7153

cond.false:                                       ; preds = %do.body121
  br label %cond.end, !dbg !7153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %103, %cond.true ], [ @.str.35, %cond.false ], !dbg !7153
  %arraydecay156 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !7153
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf134, ptr noundef %86, ptr noundef %arraydecay137, i32 noundef %87, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call140, i32 noundef %conv143, i64 noundef %call145, i64 noundef %sub148, ptr noundef @__FUNCTION__.rd_kafka_req_response, i32 noundef 1893, i64 noundef 0, i64 noundef %sub153, ptr noundef %cond, ptr noundef %arraydecay156), !dbg !7153
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname122) #16, !dbg !7150
  br label %do.cond157, !dbg !7153

do.cond157:                                       ; preds = %cond.end
  br label %do.end158, !dbg !7153

do.end158:                                        ; preds = %do.cond157
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr) #16, !dbg !7148
  br label %if.end159, !dbg !7150

if.end159:                                        ; preds = %do.end158, %land.lhs.true, %do.body108
  %104 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7149, !tbaa !3910
  %rkbuf_err = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %104, i32 0, i32 34, !dbg !7149
  store i32 -155, ptr %rkbuf_err, align 8, !dbg !7149, !tbaa !6741
  store i32 22, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7149

do.cond160:                                       ; No predecessors!
  br label %do.end161, !dbg !7149

do.end161:                                        ; preds = %do.cond160
  br label %if.end162, !dbg !7149

if.end162:                                        ; preds = %do.end161, %do.body99
  %105 = load i64, ptr %_v, align 8, !dbg !7146, !tbaa !4039
  %106 = load ptr, ptr %_vp, align 8, !dbg !7146, !tbaa !3910
  store i64 %105, ptr %106, align 8, !dbg !7146, !tbaa !4039
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7143
  br label %cleanup, !dbg !7143

cleanup:                                          ; preds = %if.end159, %if.end162
  call void @llvm.lifetime.end.p0(i64 8, ptr %_r) #16, !dbg !7143
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp) #16, !dbg !7143
  call void @llvm.lifetime.end.p0(i64 8, ptr %_v) #16, !dbg !7143
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup446 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond165, !dbg !7146

do.cond165:                                       ; preds = %cleanup.cont
  br label %do.end166, !dbg !7146

do.end166:                                        ; preds = %do.cond165
  br label %while.cond, !dbg !7143

while.cond:                                       ; preds = %cleanup.cont445, %do.end166
  %107 = load i64, ptr %_tagcnt, align 8, !dbg !7143, !tbaa !4039
  %dec = add i64 %107, -1, !dbg !7143
  store i64 %dec, ptr %_tagcnt, align 8, !dbg !7143, !tbaa !4039
  %cmp167 = icmp ugt i64 %107, 0, !dbg !7143
  br i1 %cmp167, label %while.body, label %while.end, !dbg !7143

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tagtype) #16, !dbg !7154
  tail call void @llvm.dbg.declare(metadata ptr %_tagtype, metadata !7025, metadata !DIExpression()), !dbg !7154
  call void @llvm.lifetime.start.p0(i64 8, ptr %_taglen) #16, !dbg !7154
  tail call void @llvm.dbg.declare(metadata ptr %_taglen, metadata !7027, metadata !DIExpression()), !dbg !7154
  br label %do.body169, !dbg !7154

do.body169:                                       ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %_v170) #16, !dbg !7155
  tail call void @llvm.dbg.declare(metadata ptr %_v170, metadata !7028, metadata !DIExpression()), !dbg !7155
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp171) #16, !dbg !7155
  tail call void @llvm.dbg.declare(metadata ptr %_vp171, metadata !7030, metadata !DIExpression()), !dbg !7155
  store ptr %_tagtype, ptr %_vp171, align 8, !dbg !7155, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %_r172) #16, !dbg !7155
  tail call void @llvm.dbg.declare(metadata ptr %_r172, metadata !7031, metadata !DIExpression()), !dbg !7155
  %108 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7155, !tbaa !3910
  %rkbuf_reader173 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %108, i32 0, i32 6, !dbg !7155
  %call174 = call i64 @rd_slice_read_uvarint(ptr noundef %rkbuf_reader173, ptr noundef %_v170), !dbg !7155
  store i64 %call174, ptr %_r172, align 8, !dbg !7155, !tbaa !4039
  %109 = load i64, ptr %_r172, align 8, !dbg !7156, !tbaa !4039
  %cmp175 = icmp eq i64 %109, 0, !dbg !7156
  %conv176 = zext i1 %cmp175 to i32, !dbg !7156
  %conv177 = sext i32 %conv176 to i64, !dbg !7156
  %expval178 = call i64 @llvm.expect.i64(i64 %conv177, i64 0), !dbg !7156
  %tobool179 = icmp ne i64 %expval178, 0, !dbg !7156
  br i1 %tobool179, label %if.then180, label %if.end247, !dbg !7155

if.then180:                                       ; preds = %do.body169
  br label %do.body181, !dbg !7156

do.body181:                                       ; preds = %if.then180
  %110 = load i32, ptr %log_decode_errors, align 4, !dbg !7157, !tbaa !3959
  %cmp182 = icmp sgt i32 %110, 0, !dbg !7157
  br i1 %cmp182, label %land.lhs.true184, label %if.end243, !dbg !7157

land.lhs.true184:                                 ; preds = %do.body181
  %111 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7157, !tbaa !3910
  %rkbuf_rkb185 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %111, i32 0, i32 20, !dbg !7157
  %112 = load ptr, ptr %rkbuf_rkb185, align 8, !dbg !7157, !tbaa !5424
  %tobool186 = icmp ne ptr %112, null, !dbg !7157
  br i1 %tobool186, label %if.then187, label %if.end243, !dbg !7158

if.then187:                                       ; preds = %land.lhs.true184
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr188) #16, !dbg !7159
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr188, metadata !7032, metadata !DIExpression()), !dbg !7159
  %arraydecay189 = getelementptr inbounds [256 x i8], ptr %__tmpstr188, i64 0, i64 0, !dbg !7159
  %call190 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay189, i64 noundef 256, ptr noundef @.str.197) #16, !dbg !7159
  %arraydecay191 = getelementptr inbounds [256 x i8], ptr %__tmpstr188, i64 0, i64 0, !dbg !7160
  %call192 = call i64 @strlen(ptr noundef %arraydecay191) #19, !dbg !7160
  %cmp193 = icmp eq i64 %call192, 2, !dbg !7160
  br i1 %cmp193, label %if.then195, label %if.end197, !dbg !7159

if.then195:                                       ; preds = %if.then187
  %arrayidx196 = getelementptr inbounds [256 x i8], ptr %__tmpstr188, i64 0, i64 0, !dbg !7160
  store i8 0, ptr %arrayidx196, align 16, !dbg !7160, !tbaa !4126
  br label %if.end197, !dbg !7160

if.end197:                                        ; preds = %if.then195, %if.then187
  br label %do.body198, !dbg !7159

do.body198:                                       ; preds = %if.end197
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname199) #16, !dbg !7162
  tail call void @llvm.dbg.declare(metadata ptr %_logname199, metadata !7037, metadata !DIExpression()), !dbg !7162
  %113 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_rkb200 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %113, i32 0, i32 20, !dbg !7162
  %114 = load ptr, ptr %rkbuf_rkb200, align 8, !dbg !7162, !tbaa !5424
  %rkb_logname_lock201 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %114, i32 0, i32 49, !dbg !7162
  %call202 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock201), !dbg !7162
  %arraydecay203 = getelementptr inbounds [256 x i8], ptr %_logname199, i64 0, i64 0, !dbg !7162
  %115 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_rkb204 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %115, i32 0, i32 20, !dbg !7162
  %116 = load ptr, ptr %rkbuf_rkb204, align 8, !dbg !7162, !tbaa !5424
  %rkb_logname205 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %116, i32 0, i32 48, !dbg !7162
  %117 = load ptr, ptr %rkb_logname205, align 8, !dbg !7162, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay203, ptr noundef %117, i64 noundef 256), !dbg !7162
  %118 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_rkb206 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %118, i32 0, i32 20, !dbg !7162
  %119 = load ptr, ptr %rkbuf_rkb206, align 8, !dbg !7162, !tbaa !5424
  %rkb_logname_lock207 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %119, i32 0, i32 49, !dbg !7162
  %call208 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock207), !dbg !7162
  %120 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_rkb209 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %120, i32 0, i32 20, !dbg !7162
  %121 = load ptr, ptr %rkbuf_rkb209, align 8, !dbg !7162, !tbaa !5424
  %rkb_rk210 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %121, i32 0, i32 32, !dbg !7162
  %122 = load ptr, ptr %rkb_rk210, align 8, !dbg !7162, !tbaa !4139
  %rk_conf211 = getelementptr inbounds %struct.rd_kafka_s, ptr %122, i32 0, i32 18, !dbg !7162
  %123 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_rkb212 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %123, i32 0, i32 20, !dbg !7162
  %124 = load ptr, ptr %rkbuf_rkb212, align 8, !dbg !7162, !tbaa !5424
  %rkb_rk213 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %124, i32 0, i32 32, !dbg !7162
  %125 = load ptr, ptr %rkb_rk213, align 8, !dbg !7162, !tbaa !4139
  %arraydecay214 = getelementptr inbounds [256 x i8], ptr %_logname199, i64 0, i64 0, !dbg !7162
  %126 = load i32, ptr %log_decode_errors, align 4, !dbg !7162, !tbaa !3959
  %127 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_reqhdr215 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %127, i32 0, i32 10, !dbg !7162
  %ApiKey216 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr215, i32 0, i32 1, !dbg !7162
  %128 = load i16, ptr %ApiKey216, align 4, !dbg !7162, !tbaa !5392
  %call217 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %128), !dbg !7162
  %129 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_reqhdr218 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %129, i32 0, i32 10, !dbg !7162
  %ApiVersion219 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr218, i32 0, i32 2, !dbg !7162
  %130 = load i16, ptr %ApiVersion219, align 2, !dbg !7162, !tbaa !5272
  %conv220 = sext i16 %130 to i32, !dbg !7162
  %131 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_reader221 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %131, i32 0, i32 6, !dbg !7162
  %call222 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader221), !dbg !7162
  %132 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_reader223 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %132, i32 0, i32 6, !dbg !7162
  %end224 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader223, i32 0, i32 4, !dbg !7162
  %133 = load i64, ptr %end224, align 8, !dbg !7162, !tbaa !6731
  %134 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_reader225 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %134, i32 0, i32 6, !dbg !7162
  %start226 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader225, i32 0, i32 3, !dbg !7162
  %135 = load i64, ptr %start226, align 8, !dbg !7162, !tbaa !6739
  %sub227 = sub i64 %133, %135, !dbg !7162
  %136 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_reader228 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %136, i32 0, i32 6, !dbg !7162
  %end229 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader228, i32 0, i32 4, !dbg !7162
  %137 = load i64, ptr %end229, align 8, !dbg !7162, !tbaa !6731
  %138 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_reader230 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %138, i32 0, i32 6, !dbg !7162
  %call231 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader230), !dbg !7162
  %sub232 = sub i64 %137, %call231, !dbg !7162
  %139 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_uflow_mitigation233 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %139, i32 0, i32 36, !dbg !7162
  %140 = load ptr, ptr %rkbuf_uflow_mitigation233, align 8, !dbg !7162, !tbaa !6740
  %tobool234 = icmp ne ptr %140, null, !dbg !7162
  br i1 %tobool234, label %cond.true235, label %cond.false237, !dbg !7162

cond.true235:                                     ; preds = %do.body198
  %141 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7162, !tbaa !3910
  %rkbuf_uflow_mitigation236 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %141, i32 0, i32 36, !dbg !7162
  %142 = load ptr, ptr %rkbuf_uflow_mitigation236, align 8, !dbg !7162, !tbaa !6740
  br label %cond.end238, !dbg !7162

cond.false237:                                    ; preds = %do.body198
  br label %cond.end238, !dbg !7162

cond.end238:                                      ; preds = %cond.false237, %cond.true235
  %cond239 = phi ptr [ %142, %cond.true235 ], [ @.str.35, %cond.false237 ], !dbg !7162
  %arraydecay240 = getelementptr inbounds [256 x i8], ptr %__tmpstr188, i64 0, i64 0, !dbg !7162
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf211, ptr noundef %125, ptr noundef %arraydecay214, i32 noundef %126, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call217, i32 noundef %conv220, i64 noundef %call222, i64 noundef %sub227, ptr noundef @__FUNCTION__.rd_kafka_req_response, i32 noundef 1893, i64 noundef 0, i64 noundef %sub232, ptr noundef %cond239, ptr noundef %arraydecay240), !dbg !7162
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname199) #16, !dbg !7159
  br label %do.cond241, !dbg !7162

do.cond241:                                       ; preds = %cond.end238
  br label %do.end242, !dbg !7162

do.end242:                                        ; preds = %do.cond241
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr188) #16, !dbg !7157
  br label %if.end243, !dbg !7159

if.end243:                                        ; preds = %do.end242, %land.lhs.true184, %do.body181
  %143 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7158, !tbaa !3910
  %rkbuf_err244 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %143, i32 0, i32 34, !dbg !7158
  store i32 -155, ptr %rkbuf_err244, align 8, !dbg !7158, !tbaa !6741
  store i32 22, ptr %cleanup.dest.slot, align 4
  br label %cleanup248, !dbg !7158

do.cond245:                                       ; No predecessors!
  br label %do.end246, !dbg !7158

do.end246:                                        ; preds = %do.cond245
  br label %if.end247, !dbg !7158

if.end247:                                        ; preds = %do.end246, %do.body169
  %144 = load i64, ptr %_v170, align 8, !dbg !7155, !tbaa !4039
  %145 = load ptr, ptr %_vp171, align 8, !dbg !7155, !tbaa !3910
  store i64 %144, ptr %145, align 8, !dbg !7155, !tbaa !4039
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7154
  br label %cleanup248, !dbg !7154

cleanup248:                                       ; preds = %if.end243, %if.end247
  call void @llvm.lifetime.end.p0(i64 8, ptr %_r172) #16, !dbg !7154
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp171) #16, !dbg !7154
  call void @llvm.lifetime.end.p0(i64 8, ptr %_v170) #16, !dbg !7154
  %cleanup.dest251 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest251, label %cleanup442 [
    i32 0, label %cleanup.cont252
  ]

cleanup.cont252:                                  ; preds = %cleanup248
  br label %do.cond253, !dbg !7155

do.cond253:                                       ; preds = %cleanup.cont252
  br label %do.end254, !dbg !7155

do.end254:                                        ; preds = %do.cond253
  br label %do.body255, !dbg !7154

do.body255:                                       ; preds = %do.end254
  call void @llvm.lifetime.start.p0(i64 8, ptr %_v256) #16, !dbg !7163
  tail call void @llvm.dbg.declare(metadata ptr %_v256, metadata !7039, metadata !DIExpression()), !dbg !7163
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp257) #16, !dbg !7163
  tail call void @llvm.dbg.declare(metadata ptr %_vp257, metadata !7041, metadata !DIExpression()), !dbg !7163
  store ptr %_taglen, ptr %_vp257, align 8, !dbg !7163, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %_r258) #16, !dbg !7163
  tail call void @llvm.dbg.declare(metadata ptr %_r258, metadata !7042, metadata !DIExpression()), !dbg !7163
  %146 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7163, !tbaa !3910
  %rkbuf_reader259 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %146, i32 0, i32 6, !dbg !7163
  %call260 = call i64 @rd_slice_read_uvarint(ptr noundef %rkbuf_reader259, ptr noundef %_v256), !dbg !7163
  store i64 %call260, ptr %_r258, align 8, !dbg !7163, !tbaa !4039
  %147 = load i64, ptr %_r258, align 8, !dbg !7164, !tbaa !4039
  %cmp261 = icmp eq i64 %147, 0, !dbg !7164
  %conv262 = zext i1 %cmp261 to i32, !dbg !7164
  %conv263 = sext i32 %conv262 to i64, !dbg !7164
  %expval264 = call i64 @llvm.expect.i64(i64 %conv263, i64 0), !dbg !7164
  %tobool265 = icmp ne i64 %expval264, 0, !dbg !7164
  br i1 %tobool265, label %if.then266, label %if.end333, !dbg !7163

if.then266:                                       ; preds = %do.body255
  br label %do.body267, !dbg !7164

do.body267:                                       ; preds = %if.then266
  %148 = load i32, ptr %log_decode_errors, align 4, !dbg !7165, !tbaa !3959
  %cmp268 = icmp sgt i32 %148, 0, !dbg !7165
  br i1 %cmp268, label %land.lhs.true270, label %if.end329, !dbg !7165

land.lhs.true270:                                 ; preds = %do.body267
  %149 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7165, !tbaa !3910
  %rkbuf_rkb271 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %149, i32 0, i32 20, !dbg !7165
  %150 = load ptr, ptr %rkbuf_rkb271, align 8, !dbg !7165, !tbaa !5424
  %tobool272 = icmp ne ptr %150, null, !dbg !7165
  br i1 %tobool272, label %if.then273, label %if.end329, !dbg !7166

if.then273:                                       ; preds = %land.lhs.true270
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr274) #16, !dbg !7167
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr274, metadata !7043, metadata !DIExpression()), !dbg !7167
  %arraydecay275 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !7167
  %call276 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay275, i64 noundef 256, ptr noundef @.str.197) #16, !dbg !7167
  %arraydecay277 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !7168
  %call278 = call i64 @strlen(ptr noundef %arraydecay277) #19, !dbg !7168
  %cmp279 = icmp eq i64 %call278, 2, !dbg !7168
  br i1 %cmp279, label %if.then281, label %if.end283, !dbg !7167

if.then281:                                       ; preds = %if.then273
  %arrayidx282 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !7168
  store i8 0, ptr %arrayidx282, align 16, !dbg !7168, !tbaa !4126
  br label %if.end283, !dbg !7168

if.end283:                                        ; preds = %if.then281, %if.then273
  br label %do.body284, !dbg !7167

do.body284:                                       ; preds = %if.end283
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname285) #16, !dbg !7170
  tail call void @llvm.dbg.declare(metadata ptr %_logname285, metadata !7048, metadata !DIExpression()), !dbg !7170
  %151 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_rkb286 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %151, i32 0, i32 20, !dbg !7170
  %152 = load ptr, ptr %rkbuf_rkb286, align 8, !dbg !7170, !tbaa !5424
  %rkb_logname_lock287 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %152, i32 0, i32 49, !dbg !7170
  %call288 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock287), !dbg !7170
  %arraydecay289 = getelementptr inbounds [256 x i8], ptr %_logname285, i64 0, i64 0, !dbg !7170
  %153 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_rkb290 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %153, i32 0, i32 20, !dbg !7170
  %154 = load ptr, ptr %rkbuf_rkb290, align 8, !dbg !7170, !tbaa !5424
  %rkb_logname291 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %154, i32 0, i32 48, !dbg !7170
  %155 = load ptr, ptr %rkb_logname291, align 8, !dbg !7170, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay289, ptr noundef %155, i64 noundef 256), !dbg !7170
  %156 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_rkb292 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %156, i32 0, i32 20, !dbg !7170
  %157 = load ptr, ptr %rkbuf_rkb292, align 8, !dbg !7170, !tbaa !5424
  %rkb_logname_lock293 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %157, i32 0, i32 49, !dbg !7170
  %call294 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock293), !dbg !7170
  %158 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_rkb295 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %158, i32 0, i32 20, !dbg !7170
  %159 = load ptr, ptr %rkbuf_rkb295, align 8, !dbg !7170, !tbaa !5424
  %rkb_rk296 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %159, i32 0, i32 32, !dbg !7170
  %160 = load ptr, ptr %rkb_rk296, align 8, !dbg !7170, !tbaa !4139
  %rk_conf297 = getelementptr inbounds %struct.rd_kafka_s, ptr %160, i32 0, i32 18, !dbg !7170
  %161 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_rkb298 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %161, i32 0, i32 20, !dbg !7170
  %162 = load ptr, ptr %rkbuf_rkb298, align 8, !dbg !7170, !tbaa !5424
  %rkb_rk299 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %162, i32 0, i32 32, !dbg !7170
  %163 = load ptr, ptr %rkb_rk299, align 8, !dbg !7170, !tbaa !4139
  %arraydecay300 = getelementptr inbounds [256 x i8], ptr %_logname285, i64 0, i64 0, !dbg !7170
  %164 = load i32, ptr %log_decode_errors, align 4, !dbg !7170, !tbaa !3959
  %165 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_reqhdr301 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %165, i32 0, i32 10, !dbg !7170
  %ApiKey302 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr301, i32 0, i32 1, !dbg !7170
  %166 = load i16, ptr %ApiKey302, align 4, !dbg !7170, !tbaa !5392
  %call303 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %166), !dbg !7170
  %167 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_reqhdr304 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %167, i32 0, i32 10, !dbg !7170
  %ApiVersion305 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr304, i32 0, i32 2, !dbg !7170
  %168 = load i16, ptr %ApiVersion305, align 2, !dbg !7170, !tbaa !5272
  %conv306 = sext i16 %168 to i32, !dbg !7170
  %169 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_reader307 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %169, i32 0, i32 6, !dbg !7170
  %call308 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader307), !dbg !7170
  %170 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_reader309 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %170, i32 0, i32 6, !dbg !7170
  %end310 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader309, i32 0, i32 4, !dbg !7170
  %171 = load i64, ptr %end310, align 8, !dbg !7170, !tbaa !6731
  %172 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_reader311 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %172, i32 0, i32 6, !dbg !7170
  %start312 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader311, i32 0, i32 3, !dbg !7170
  %173 = load i64, ptr %start312, align 8, !dbg !7170, !tbaa !6739
  %sub313 = sub i64 %171, %173, !dbg !7170
  %174 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_reader314 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %174, i32 0, i32 6, !dbg !7170
  %end315 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader314, i32 0, i32 4, !dbg !7170
  %175 = load i64, ptr %end315, align 8, !dbg !7170, !tbaa !6731
  %176 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_reader316 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %176, i32 0, i32 6, !dbg !7170
  %call317 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader316), !dbg !7170
  %sub318 = sub i64 %175, %call317, !dbg !7170
  %177 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_uflow_mitigation319 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %177, i32 0, i32 36, !dbg !7170
  %178 = load ptr, ptr %rkbuf_uflow_mitigation319, align 8, !dbg !7170, !tbaa !6740
  %tobool320 = icmp ne ptr %178, null, !dbg !7170
  br i1 %tobool320, label %cond.true321, label %cond.false323, !dbg !7170

cond.true321:                                     ; preds = %do.body284
  %179 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7170, !tbaa !3910
  %rkbuf_uflow_mitigation322 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %179, i32 0, i32 36, !dbg !7170
  %180 = load ptr, ptr %rkbuf_uflow_mitigation322, align 8, !dbg !7170, !tbaa !6740
  br label %cond.end324, !dbg !7170

cond.false323:                                    ; preds = %do.body284
  br label %cond.end324, !dbg !7170

cond.end324:                                      ; preds = %cond.false323, %cond.true321
  %cond325 = phi ptr [ %180, %cond.true321 ], [ @.str.35, %cond.false323 ], !dbg !7170
  %arraydecay326 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !7170
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf297, ptr noundef %163, ptr noundef %arraydecay300, i32 noundef %164, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call303, i32 noundef %conv306, i64 noundef %call308, i64 noundef %sub313, ptr noundef @__FUNCTION__.rd_kafka_req_response, i32 noundef 1893, i64 noundef 0, i64 noundef %sub318, ptr noundef %cond325, ptr noundef %arraydecay326), !dbg !7170
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname285) #16, !dbg !7167
  br label %do.cond327, !dbg !7170

do.cond327:                                       ; preds = %cond.end324
  br label %do.end328, !dbg !7170

do.end328:                                        ; preds = %do.cond327
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr274) #16, !dbg !7165
  br label %if.end329, !dbg !7167

if.end329:                                        ; preds = %do.end328, %land.lhs.true270, %do.body267
  %181 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7166, !tbaa !3910
  %rkbuf_err330 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %181, i32 0, i32 34, !dbg !7166
  store i32 -155, ptr %rkbuf_err330, align 8, !dbg !7166, !tbaa !6741
  store i32 22, ptr %cleanup.dest.slot, align 4
  br label %cleanup334, !dbg !7166

do.cond331:                                       ; No predecessors!
  br label %do.end332, !dbg !7166

do.end332:                                        ; preds = %do.cond331
  br label %if.end333, !dbg !7166

if.end333:                                        ; preds = %do.end332, %do.body255
  %182 = load i64, ptr %_v256, align 8, !dbg !7163, !tbaa !4039
  %183 = load ptr, ptr %_vp257, align 8, !dbg !7163, !tbaa !3910
  store i64 %182, ptr %183, align 8, !dbg !7163, !tbaa !4039
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7154
  br label %cleanup334, !dbg !7154

cleanup334:                                       ; preds = %if.end329, %if.end333
  call void @llvm.lifetime.end.p0(i64 8, ptr %_r258) #16, !dbg !7154
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp257) #16, !dbg !7154
  call void @llvm.lifetime.end.p0(i64 8, ptr %_v256) #16, !dbg !7154
  %cleanup.dest337 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest337, label %cleanup442 [
    i32 0, label %cleanup.cont338
  ]

cleanup.cont338:                                  ; preds = %cleanup334
  br label %do.cond339, !dbg !7163

do.cond339:                                       ; preds = %cleanup.cont338
  br label %do.end340, !dbg !7163

do.end340:                                        ; preds = %do.cond339
  %184 = load i64, ptr %_taglen, align 8, !dbg !7171, !tbaa !4039
  %cmp341 = icmp ugt i64 %184, 0, !dbg !7171
  br i1 %cmp341, label %if.then343, label %if.end441, !dbg !7154

if.then343:                                       ; preds = %do.end340
  br label %do.body344, !dbg !7171

do.body344:                                       ; preds = %if.then343
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len1) #16, !dbg !7172
  tail call void @llvm.dbg.declare(metadata ptr %__len1, metadata !7050, metadata !DIExpression()), !dbg !7172
  %185 = load i64, ptr %_taglen, align 8, !dbg !7172, !tbaa !4039
  store i64 %185, ptr %__len1, align 8, !dbg !7172, !tbaa !4039
  %186 = load i64, ptr %__len1, align 8, !dbg !7173, !tbaa !4039
  %tobool345 = icmp ne i64 %186, 0, !dbg !7173
  br i1 %tobool345, label %land.lhs.true346, label %if.end435, !dbg !7173

land.lhs.true346:                                 ; preds = %do.body344
  %187 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7173, !tbaa !3910
  %rkbuf_reader347 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %187, i32 0, i32 6, !dbg !7173
  %188 = load i64, ptr %__len1, align 8, !dbg !7173, !tbaa !4039
  %call348 = call i64 @rd_slice_read(ptr noundef %rkbuf_reader347, ptr noundef null, i64 noundef %188), !dbg !7173
  %tobool349 = icmp ne i64 %call348, 0, !dbg !7173
  br i1 %tobool349, label %if.end435, label %if.then350, !dbg !7172

if.then350:                                       ; preds = %land.lhs.true346
  br label %do.body351, !dbg !7173

do.body351:                                       ; preds = %if.then350
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len0) #16, !dbg !7174
  tail call void @llvm.dbg.declare(metadata ptr %__len0, metadata !7053, metadata !DIExpression()), !dbg !7174
  %189 = load i64, ptr %__len1, align 8, !dbg !7174, !tbaa !4039
  store i64 %189, ptr %__len0, align 8, !dbg !7174, !tbaa !4039
  %190 = load i64, ptr %__len0, align 8, !dbg !7175, !tbaa !4039
  %191 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7175, !tbaa !3910
  %rkbuf_reader352 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %191, i32 0, i32 6, !dbg !7175
  %end353 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader352, i32 0, i32 4, !dbg !7175
  %192 = load i64, ptr %end353, align 8, !dbg !7175, !tbaa !6731
  %193 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7175, !tbaa !3910
  %rkbuf_reader354 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %193, i32 0, i32 6, !dbg !7175
  %call355 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader354), !dbg !7175
  %sub356 = sub i64 %192, %call355, !dbg !7175
  %cmp357 = icmp ugt i64 %190, %sub356, !dbg !7175
  %conv358 = zext i1 %cmp357 to i32, !dbg !7175
  %conv359 = sext i32 %conv358 to i64, !dbg !7175
  %expval360 = call i64 @llvm.expect.i64(i64 %conv359, i64 0), !dbg !7175
  %tobool361 = icmp ne i64 %expval360, 0, !dbg !7175
  br i1 %tobool361, label %if.then362, label %if.end429, !dbg !7174

if.then362:                                       ; preds = %do.body351
  br label %do.body363, !dbg !7176

do.body363:                                       ; preds = %if.then362
  %194 = load i32, ptr %log_decode_errors, align 4, !dbg !7177, !tbaa !3959
  %cmp364 = icmp sgt i32 %194, 0, !dbg !7177
  br i1 %cmp364, label %land.lhs.true366, label %if.end425, !dbg !7177

land.lhs.true366:                                 ; preds = %do.body363
  %195 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7177, !tbaa !3910
  %rkbuf_rkb367 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %195, i32 0, i32 20, !dbg !7177
  %196 = load ptr, ptr %rkbuf_rkb367, align 8, !dbg !7177, !tbaa !5424
  %tobool368 = icmp ne ptr %196, null, !dbg !7177
  br i1 %tobool368, label %if.then369, label %if.end425, !dbg !7178

if.then369:                                       ; preds = %land.lhs.true366
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr370) #16, !dbg !7179
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr370, metadata !7056, metadata !DIExpression()), !dbg !7179
  %arraydecay371 = getelementptr inbounds [256 x i8], ptr %__tmpstr370, i64 0, i64 0, !dbg !7179
  %call372 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay371, i64 noundef 256, ptr noundef @.str.32) #16, !dbg !7179
  %arraydecay373 = getelementptr inbounds [256 x i8], ptr %__tmpstr370, i64 0, i64 0, !dbg !7180
  %call374 = call i64 @strlen(ptr noundef %arraydecay373) #19, !dbg !7180
  %cmp375 = icmp eq i64 %call374, 2, !dbg !7180
  br i1 %cmp375, label %if.then377, label %if.end379, !dbg !7179

if.then377:                                       ; preds = %if.then369
  %arrayidx378 = getelementptr inbounds [256 x i8], ptr %__tmpstr370, i64 0, i64 0, !dbg !7180
  store i8 0, ptr %arrayidx378, align 16, !dbg !7180, !tbaa !4126
  br label %if.end379, !dbg !7180

if.end379:                                        ; preds = %if.then377, %if.then369
  br label %do.body380, !dbg !7179

do.body380:                                       ; preds = %if.end379
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname381) #16, !dbg !7182
  tail call void @llvm.dbg.declare(metadata ptr %_logname381, metadata !7062, metadata !DIExpression()), !dbg !7182
  %197 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_rkb382 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %197, i32 0, i32 20, !dbg !7182
  %198 = load ptr, ptr %rkbuf_rkb382, align 8, !dbg !7182, !tbaa !5424
  %rkb_logname_lock383 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %198, i32 0, i32 49, !dbg !7182
  %call384 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock383), !dbg !7182
  %arraydecay385 = getelementptr inbounds [256 x i8], ptr %_logname381, i64 0, i64 0, !dbg !7182
  %199 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_rkb386 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %199, i32 0, i32 20, !dbg !7182
  %200 = load ptr, ptr %rkbuf_rkb386, align 8, !dbg !7182, !tbaa !5424
  %rkb_logname387 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %200, i32 0, i32 48, !dbg !7182
  %201 = load ptr, ptr %rkb_logname387, align 8, !dbg !7182, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay385, ptr noundef %201, i64 noundef 256), !dbg !7182
  %202 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_rkb388 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %202, i32 0, i32 20, !dbg !7182
  %203 = load ptr, ptr %rkbuf_rkb388, align 8, !dbg !7182, !tbaa !5424
  %rkb_logname_lock389 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %203, i32 0, i32 49, !dbg !7182
  %call390 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock389), !dbg !7182
  %204 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_rkb391 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %204, i32 0, i32 20, !dbg !7182
  %205 = load ptr, ptr %rkbuf_rkb391, align 8, !dbg !7182, !tbaa !5424
  %rkb_rk392 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %205, i32 0, i32 32, !dbg !7182
  %206 = load ptr, ptr %rkb_rk392, align 8, !dbg !7182, !tbaa !4139
  %rk_conf393 = getelementptr inbounds %struct.rd_kafka_s, ptr %206, i32 0, i32 18, !dbg !7182
  %207 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_rkb394 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %207, i32 0, i32 20, !dbg !7182
  %208 = load ptr, ptr %rkbuf_rkb394, align 8, !dbg !7182, !tbaa !5424
  %rkb_rk395 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %208, i32 0, i32 32, !dbg !7182
  %209 = load ptr, ptr %rkb_rk395, align 8, !dbg !7182, !tbaa !4139
  %arraydecay396 = getelementptr inbounds [256 x i8], ptr %_logname381, i64 0, i64 0, !dbg !7182
  %210 = load i32, ptr %log_decode_errors, align 4, !dbg !7182, !tbaa !3959
  %211 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_reqhdr397 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %211, i32 0, i32 10, !dbg !7182
  %ApiKey398 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr397, i32 0, i32 1, !dbg !7182
  %212 = load i16, ptr %ApiKey398, align 4, !dbg !7182, !tbaa !5392
  %call399 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %212), !dbg !7182
  %213 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_reqhdr400 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %213, i32 0, i32 10, !dbg !7182
  %ApiVersion401 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr400, i32 0, i32 2, !dbg !7182
  %214 = load i16, ptr %ApiVersion401, align 2, !dbg !7182, !tbaa !5272
  %conv402 = sext i16 %214 to i32, !dbg !7182
  %215 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_reader403 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %215, i32 0, i32 6, !dbg !7182
  %call404 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader403), !dbg !7182
  %216 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_reader405 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %216, i32 0, i32 6, !dbg !7182
  %end406 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader405, i32 0, i32 4, !dbg !7182
  %217 = load i64, ptr %end406, align 8, !dbg !7182, !tbaa !6731
  %218 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_reader407 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %218, i32 0, i32 6, !dbg !7182
  %start408 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader407, i32 0, i32 3, !dbg !7182
  %219 = load i64, ptr %start408, align 8, !dbg !7182, !tbaa !6739
  %sub409 = sub i64 %217, %219, !dbg !7182
  %220 = load i64, ptr %__len0, align 8, !dbg !7182, !tbaa !4039
  %221 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_reader410 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %221, i32 0, i32 6, !dbg !7182
  %end411 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader410, i32 0, i32 4, !dbg !7182
  %222 = load i64, ptr %end411, align 8, !dbg !7182, !tbaa !6731
  %223 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_reader412 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %223, i32 0, i32 6, !dbg !7182
  %call413 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader412), !dbg !7182
  %sub414 = sub i64 %222, %call413, !dbg !7182
  %224 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_uflow_mitigation415 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %224, i32 0, i32 36, !dbg !7182
  %225 = load ptr, ptr %rkbuf_uflow_mitigation415, align 8, !dbg !7182, !tbaa !6740
  %tobool416 = icmp ne ptr %225, null, !dbg !7182
  br i1 %tobool416, label %cond.true417, label %cond.false419, !dbg !7182

cond.true417:                                     ; preds = %do.body380
  %226 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7182, !tbaa !3910
  %rkbuf_uflow_mitigation418 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %226, i32 0, i32 36, !dbg !7182
  %227 = load ptr, ptr %rkbuf_uflow_mitigation418, align 8, !dbg !7182, !tbaa !6740
  br label %cond.end420, !dbg !7182

cond.false419:                                    ; preds = %do.body380
  br label %cond.end420, !dbg !7182

cond.end420:                                      ; preds = %cond.false419, %cond.true417
  %cond421 = phi ptr [ %227, %cond.true417 ], [ @.str.35, %cond.false419 ], !dbg !7182
  %arraydecay422 = getelementptr inbounds [256 x i8], ptr %__tmpstr370, i64 0, i64 0, !dbg !7182
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf393, ptr noundef %209, ptr noundef %arraydecay396, i32 noundef %210, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call399, i32 noundef %conv402, i64 noundef %call404, i64 noundef %sub409, ptr noundef @__FUNCTION__.rd_kafka_req_response, i32 noundef 1893, i64 noundef %220, i64 noundef %sub414, ptr noundef %cond421, ptr noundef %arraydecay422), !dbg !7182
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname381) #16, !dbg !7179
  br label %do.cond423, !dbg !7182

do.cond423:                                       ; preds = %cond.end420
  br label %do.end424, !dbg !7182

do.end424:                                        ; preds = %do.cond423
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr370) #16, !dbg !7177
  br label %if.end425, !dbg !7179

if.end425:                                        ; preds = %do.end424, %land.lhs.true366, %do.body363
  %228 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7178, !tbaa !3910
  %rkbuf_err426 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %228, i32 0, i32 34, !dbg !7178
  store i32 -155, ptr %rkbuf_err426, align 8, !dbg !7178, !tbaa !6741
  store i32 22, ptr %cleanup.dest.slot, align 4
  br label %cleanup430, !dbg !7178

do.cond427:                                       ; No predecessors!
  br label %do.end428, !dbg !7178

do.end428:                                        ; preds = %do.cond427
  br label %if.end429, !dbg !7176

if.end429:                                        ; preds = %do.end428, %do.body351
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7173
  br label %cleanup430, !dbg !7173

cleanup430:                                       ; preds = %if.end425, %if.end429
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len0) #16, !dbg !7173
  %cleanup.dest431 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest431, label %cleanup436 [
    i32 0, label %cleanup.cont432
  ]

cleanup.cont432:                                  ; preds = %cleanup430
  br label %do.cond433, !dbg !7174

do.cond433:                                       ; preds = %cleanup.cont432
  br label %do.end434, !dbg !7174

do.end434:                                        ; preds = %do.cond433
  br label %if.end435, !dbg !7174

if.end435:                                        ; preds = %do.end434, %land.lhs.true346, %do.body344
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7171
  br label %cleanup436, !dbg !7171

cleanup436:                                       ; preds = %if.end435, %cleanup430
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len1) #16, !dbg !7171
  %cleanup.dest437 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest437, label %cleanup442 [
    i32 0, label %cleanup.cont438
  ]

cleanup.cont438:                                  ; preds = %cleanup436
  br label %do.cond439, !dbg !7172

do.cond439:                                       ; preds = %cleanup.cont438
  br label %do.end440, !dbg !7172

do.end440:                                        ; preds = %do.cond439
  br label %if.end441, !dbg !7172

if.end441:                                        ; preds = %do.end440, %do.end340
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7143
  br label %cleanup442, !dbg !7143

cleanup442:                                       ; preds = %if.end441, %cleanup436, %cleanup334, %cleanup248
  call void @llvm.lifetime.end.p0(i64 8, ptr %_taglen) #16, !dbg !7143
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tagtype) #16, !dbg !7143
  %cleanup.dest444 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest444, label %cleanup446 [
    i32 0, label %cleanup.cont445
  ]

cleanup.cont445:                                  ; preds = %cleanup442
  br label %while.cond, !dbg !7143, !llvm.loop !7183

while.end:                                        ; preds = %while.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7142
  br label %cleanup446, !dbg !7142

cleanup446:                                       ; preds = %while.end, %cleanup442, %cleanup, %if.then97
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tagcnt) #16, !dbg !7142
  %cleanup.dest447 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest447, label %cleanup479 [
    i32 0, label %cleanup.cont448
    i32 14, label %do.end450
    i32 22, label %err_parse
  ]

cleanup.cont448:                                  ; preds = %cleanup446
  br label %do.cond449, !dbg !7143

do.cond449:                                       ; preds = %cleanup.cont448
  br label %do.end450, !dbg !7143

do.end450:                                        ; preds = %do.cond449, %cleanup446
  br label %if.end451, !dbg !7143

if.end451:                                        ; preds = %do.end450, %do.end77
  %229 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7184, !tbaa !3910
  %rkbuf_rkb452 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %229, i32 0, i32 20, !dbg !7186
  %230 = load ptr, ptr %rkbuf_rkb452, align 8, !dbg !7186, !tbaa !5424
  %tobool453 = icmp ne ptr %230, null, !dbg !7184
  br i1 %tobool453, label %if.else, label %if.then454, !dbg !7187

if.then454:                                       ; preds = %if.end451
  %231 = load ptr, ptr %rkb.addr, align 8, !dbg !7188, !tbaa !3910
  %232 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7190, !tbaa !3910
  %rkbuf_rkb455 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %232, i32 0, i32 20, !dbg !7191
  store ptr %231, ptr %rkbuf_rkb455, align 8, !dbg !7192, !tbaa !5424
  %233 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7193, !tbaa !3910
  %rkbuf_rkb456 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %233, i32 0, i32 20, !dbg !7193
  %234 = load ptr, ptr %rkbuf_rkb456, align 8, !dbg !7193, !tbaa !5424
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %234, i32 0, i32 31, !dbg !7193
  %call457 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !7193
  br label %if.end464, !dbg !7194

if.else:                                          ; preds = %if.end451
  %235 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7195, !tbaa !3910
  %rkbuf_rkb458 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %235, i32 0, i32 20, !dbg !7195
  %236 = load ptr, ptr %rkbuf_rkb458, align 8, !dbg !7195, !tbaa !5424
  %237 = load ptr, ptr %rkb.addr, align 8, !dbg !7195, !tbaa !3910
  %cmp459 = icmp eq ptr %236, %237, !dbg !7195
  br i1 %cmp459, label %if.then461, label %if.else462, !dbg !7198

if.then461:                                       ; preds = %if.else
  br label %if.end463, !dbg !7198

if.else462:                                       ; preds = %if.else
  call void @__assert_fail(ptr noundef @.str.27, ptr noundef @.str.20, i32 noundef 1899, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_req_response) #18, !dbg !7195
  unreachable, !dbg !7195

if.end463:                                        ; preds = %if.then461
  br label %if.end464

if.end464:                                        ; preds = %if.end463, %if.then454
  %238 = load ptr, ptr %rkb.addr, align 8, !dbg !7199, !tbaa !3910
  %rkb_rk465 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %238, i32 0, i32 32, !dbg !7200
  %239 = load ptr, ptr %rkb_rk465, align 8, !dbg !7200, !tbaa !4139
  %240 = load ptr, ptr %rkb.addr, align 8, !dbg !7201, !tbaa !3910
  %241 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7202, !tbaa !3910
  %242 = load ptr, ptr %req, align 8, !dbg !7203, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %239, ptr noundef %240, i32 noundef 0, ptr noundef %241, ptr noundef %242), !dbg !7204
  store i32 0, ptr %retval, align 4, !dbg !7205
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup479, !dbg !7205

err_parse:                                        ; preds = %cleanup446
  tail call void @llvm.dbg.label(metadata !7064), !dbg !7206
  %243 = load ptr, ptr %rkb.addr, align 8, !dbg !7207, !tbaa !3910
  %rkb_c466 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %243, i32 0, i32 28, !dbg !7208
  %rx_err = getelementptr inbounds %struct.anon.2, ptr %rkb_c466, i32 0, i32 7, !dbg !7209
  %call467 = call i64 @rd_atomic64_add(ptr noundef %rx_err, i64 noundef 1), !dbg !7210
  %244 = load ptr, ptr %rkb.addr, align 8, !dbg !7211, !tbaa !3910
  %rkb_rk468 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %244, i32 0, i32 32, !dbg !7212
  %245 = load ptr, ptr %rkb_rk468, align 8, !dbg !7212, !tbaa !4139
  %246 = load ptr, ptr %rkb.addr, align 8, !dbg !7213, !tbaa !3910
  %247 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7214, !tbaa !3910
  %rkbuf_err469 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %247, i32 0, i32 34, !dbg !7215
  %248 = load i32, ptr %rkbuf_err469, align 8, !dbg !7215, !tbaa !6741
  %249 = load ptr, ptr %req, align 8, !dbg !7216, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %245, ptr noundef %246, i32 noundef %248, ptr noundef null, ptr noundef %249), !dbg !7217
  br label %do.body470, !dbg !7218

do.body470:                                       ; preds = %err_parse
  %250 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7219, !tbaa !3910
  %rkbuf_refcnt471 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %250, i32 0, i32 21, !dbg !7219
  %call472 = call i32 @rd_refcnt_sub0(ptr noundef %rkbuf_refcnt471), !dbg !7219
  %cmp473 = icmp sgt i32 %call472, 0, !dbg !7219
  br i1 %cmp473, label %if.then475, label %if.end476, !dbg !7222

if.then475:                                       ; preds = %do.body470
  br label %do.end478, !dbg !7219

if.end476:                                        ; preds = %do.body470
  %251 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7222, !tbaa !3910
  call void @rd_kafka_buf_destroy_final(ptr noundef %251), !dbg !7222
  br label %do.cond477, !dbg !7222

do.cond477:                                       ; preds = %if.end476
  br label %do.end478, !dbg !7222

do.end478:                                        ; preds = %do.cond477, %if.then475
  store i32 -1, ptr %retval, align 4, !dbg !7223
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup479, !dbg !7223

cleanup479:                                       ; preds = %do.end478, %if.end464, %cleanup446, %do.end42
  call void @llvm.lifetime.end.p0(i64 4, ptr %log_decode_errors) #16, !dbg !7224
  call void @llvm.lifetime.end.p0(i64 8, ptr %req) #16, !dbg !7224
  %252 = load i32, ptr %retval, align 4, !dbg !7224
  ret i32 %252, !dbg !7224
}

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !7225 i32 @strcmp(ptr noundef, ptr noundef) #10

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_socket_cb_linux(i32 noundef %domain, i32 noundef %type, i32 noundef %protocol, ptr noundef %opaque) #0 !dbg !7228 {
entry:
  %domain.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %protocol.addr = alloca i32, align 4
  %opaque.addr = alloca ptr, align 8
  store i32 %domain, ptr %domain.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %domain.addr, metadata !7230, metadata !DIExpression()), !dbg !7234
  store i32 %type, ptr %type.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !7231, metadata !DIExpression()), !dbg !7235
  store i32 %protocol, ptr %protocol.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %protocol.addr, metadata !7232, metadata !DIExpression()), !dbg !7236
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !7233, metadata !DIExpression()), !dbg !7237
  %0 = load i32, ptr %domain.addr, align 4, !dbg !7238, !tbaa !3959
  %1 = load i32, ptr %type.addr, align 4, !dbg !7239, !tbaa !3959
  %or = or i32 %1, 524288, !dbg !7240
  %2 = load i32, ptr %protocol.addr, align 4, !dbg !7241, !tbaa !3959
  %call = call i32 @socket(i32 noundef %0, i32 noundef %or, i32 noundef %2) #16, !dbg !7242
  ret i32 %call, !dbg !7243
}

; Function Attrs: nounwind
declare !dbg !7244 i32 @socket(i32 noundef, i32 noundef, i32 noundef) #9

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_socket_cb_generic(i32 noundef %domain, i32 noundef %type, i32 noundef %protocol, ptr noundef %opaque) #0 !dbg !7248 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %protocol.addr = alloca i32, align 4
  %opaque.addr = alloca ptr, align 8
  %s = alloca i32, align 4
  %on = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %domain, ptr %domain.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %domain.addr, metadata !7250, metadata !DIExpression()), !dbg !7256
  store i32 %type, ptr %type.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !7251, metadata !DIExpression()), !dbg !7257
  store i32 %protocol, ptr %protocol.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %protocol.addr, metadata !7252, metadata !DIExpression()), !dbg !7258
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !7253, metadata !DIExpression()), !dbg !7259
  call void @llvm.lifetime.start.p0(i64 4, ptr %s) #16, !dbg !7260
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !7254, metadata !DIExpression()), !dbg !7261
  call void @llvm.lifetime.start.p0(i64 4, ptr %on) #16, !dbg !7262
  tail call void @llvm.dbg.declare(metadata ptr %on, metadata !7255, metadata !DIExpression()), !dbg !7263
  store i32 1, ptr %on, align 4, !dbg !7263, !tbaa !3959
  %0 = load i32, ptr %domain.addr, align 4, !dbg !7264, !tbaa !3959
  %1 = load i32, ptr %type.addr, align 4, !dbg !7265, !tbaa !3959
  %2 = load i32, ptr %protocol.addr, align 4, !dbg !7266, !tbaa !3959
  %call = call i32 @socket(i32 noundef %0, i32 noundef %1, i32 noundef %2) #16, !dbg !7267
  store i32 %call, ptr %s, align 4, !dbg !7268, !tbaa !3959
  %3 = load i32, ptr %s, align 4, !dbg !7269, !tbaa !3959
  %cmp = icmp eq i32 %3, -1, !dbg !7271
  br i1 %cmp, label %if.then, label %if.end, !dbg !7272

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !7273
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7273

if.end:                                           ; preds = %entry
  %4 = load i32, ptr %s, align 4, !dbg !7274, !tbaa !3959
  %call1 = call i32 (i32, i32, ...) @fcntl(i32 noundef %4, i32 noundef 2, i32 noundef 1, ptr noundef %on), !dbg !7276
  %cmp2 = icmp eq i32 %call1, -1, !dbg !7277
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !7278

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr @stderr, align 8, !dbg !7279, !tbaa !3910
  %call4 = call ptr @__errno_location() #20, !dbg !7280
  %6 = load i32, ptr %call4, align 4, !dbg !7280, !tbaa !3959
  %call5 = call ptr @rd_strerror(i32 noundef %6), !dbg !7281
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.39, ptr noundef @__FUNCTION__.rd_kafka_socket_cb_generic, ptr noundef %call5), !dbg !7282
  br label %if.end7, !dbg !7282

if.end7:                                          ; preds = %if.then3, %if.end
  %7 = load i32, ptr %s, align 4, !dbg !7283, !tbaa !3959
  store i32 %7, ptr %retval, align 4, !dbg !7284
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7284

cleanup:                                          ; preds = %if.end7, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %on) #16, !dbg !7285
  call void @llvm.lifetime.end.p0(i64 4, ptr %s) #16, !dbg !7285
  %8 = load i32, ptr %retval, align 4, !dbg !7285
  ret i32 %8, !dbg !7285
}

declare !dbg !7286 i32 @fcntl(i32 noundef, i32 noundef, ...) #3

declare !dbg !7290 i32 @fprintf(ptr noundef, ptr noundef, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_strerror(i32 noundef %err) #4 !dbg !3515 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, ptr %err.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !3519, metadata !DIExpression()), !dbg !7294
  %0 = load i32, ptr %err.addr, align 4, !dbg !7295, !tbaa !3959
  %1 = call align 16 ptr @llvm.threadlocal.address.p0(ptr align 16 @rd_strerror.ret), !dbg !7296
  %arraydecay = getelementptr inbounds [128 x i8], ptr %1, i64 0, i64 0, !dbg !7296
  %call = call ptr @strerror_r(i32 noundef %0, ptr noundef %arraydecay, i64 noundef 128) #16, !dbg !7297
  ret ptr %call, !dbg !7298
}

; Function Attrs: nounwind willreturn memory(none)
declare !dbg !7299 ptr @__errno_location() #11

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_connect_up(ptr noundef %rkb) #0 !dbg !7303 {
entry:
  %rkb.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !7305, metadata !DIExpression()), !dbg !7306
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !7307, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !7308
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !7308, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 18, !dbg !7309
  %max_inflight = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 5, !dbg !7310
  %2 = load i32, ptr %max_inflight, align 8, !dbg !7310, !tbaa !7311
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !7312, !tbaa !3910
  %rkb_max_inflight = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 34, !dbg !7313
  store i32 %2, ptr %rkb_max_inflight, align 8, !dbg !7314, !tbaa !7315
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !7316, !tbaa !3910
  %rkb_reauth_in_progress = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 54, !dbg !7317
  store i8 0, ptr %rkb_reauth_in_progress, align 8, !dbg !7318, !tbaa !4559
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !7319, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 9, !dbg !7319
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !7319
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !7320, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %6, i32 noundef 6), !dbg !7321
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !7322, !tbaa !3910
  %rkb_lock1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 9, !dbg !7322
  %call2 = call i32 @mtx_unlock(ptr noundef %rkb_lock1), !dbg !7322
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !7323, !tbaa !3910
  %call3 = call i32 @rd_kafka_metadata_refresh_known_topics(ptr noundef null, ptr noundef %8, i8 noundef zeroext 0, ptr noundef @.str.40), !dbg !7325
  %cmp = icmp eq i32 %call3, -188, !dbg !7326
  br i1 %cmp, label %if.then, label %if.end, !dbg !7327

if.then:                                          ; preds = %entry
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !7328, !tbaa !3910
  %call4 = call i32 @rd_kafka_metadata_refresh_brokers(ptr noundef null, ptr noundef %9, ptr noundef @.str.40), !dbg !7329
  br label %if.end, !dbg !7329

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7330
}

declare !dbg !7331 i32 @rd_kafka_metadata_refresh_brokers(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_connect_done(ptr noundef %rkb, ptr noundef %errstr) #0 !dbg !7334 {
entry:
  %rkb.addr = alloca ptr, align 8
  %errstr.addr = alloca ptr, align 8
  %_logname = alloca [256 x i8], align 16
  %.compoundliteral = alloca %struct.rd_kafka_replyq_s, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !7338, metadata !DIExpression()), !dbg !7345
  store ptr %errstr, ptr %errstr.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %errstr.addr, metadata !7339, metadata !DIExpression()), !dbg !7346
  %0 = load ptr, ptr %errstr.addr, align 8, !dbg !7347, !tbaa !3910
  %tobool = icmp ne ptr %0, null, !dbg !7347
  br i1 %tobool, label %if.then, label %if.end, !dbg !7349

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !7350, !tbaa !3910
  %2 = load ptr, ptr %errstr.addr, align 8, !dbg !7352, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %1, i32 noundef 3, i32 noundef -195, ptr noundef @.str.26, ptr noundef %2), !dbg !7353
  br label %if.end33, !dbg !7354

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !7355, !tbaa !3910
  %rkb_connid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 7, !dbg !7356
  %4 = load i32, ptr %rkb_connid, align 4, !dbg !7357, !tbaa !7358
  %inc = add nsw i32 %4, 1, !dbg !7357
  store i32 %inc, ptr %rkb_connid, align 4, !dbg !7357, !tbaa !7358
  br label %do.body, !dbg !7359

do.body:                                          ; preds = %if.end
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !7360, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 32, !dbg !7360
  %6 = load ptr, ptr %rkb_rk, align 8, !dbg !7360, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 18, !dbg !7360
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !7360
  %7 = load i32, ptr %debug, align 8, !dbg !7360, !tbaa !4140
  %and = and i32 %7, 130, !dbg !7360
  %conv = sext i32 %and to i64, !dbg !7360
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7360
  %tobool1 = icmp ne i64 %expval, 0, !dbg !7360
  br i1 %tobool1, label %if.then2, label %if.end11, !dbg !7361

if.then2:                                         ; preds = %do.body
  br label %do.body3, !dbg !7362

do.body3:                                         ; preds = %if.then2
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !7363
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !7340, metadata !DIExpression()), !dbg !7363
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !7363, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 49, !dbg !7363
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !7363
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7363
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !7363, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 48, !dbg !7363
  %10 = load ptr, ptr %rkb_logname, align 8, !dbg !7363, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %10, i64 noundef 256), !dbg !7363
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !7363, !tbaa !3910
  %rkb_logname_lock4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 49, !dbg !7363
  %call5 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock4), !dbg !7363
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !7363, !tbaa !3910
  %rkb_rk6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 32, !dbg !7363
  %13 = load ptr, ptr %rkb_rk6, align 8, !dbg !7363, !tbaa !4139
  %rk_conf7 = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !7363
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !7363, !tbaa !3910
  %rkb_rk8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 32, !dbg !7363
  %15 = load ptr, ptr %rkb_rk8, align 8, !dbg !7363, !tbaa !4139
  %arraydecay9 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7363
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !7363, !tbaa !3910
  %rkb_connid10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 7, !dbg !7363
  %17 = load i32, ptr %rkb_connid10, align 4, !dbg !7363, !tbaa !7358
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf7, ptr noundef %15, ptr noundef %arraydecay9, i32 noundef 7, i32 noundef 130, ptr noundef @.str.41, ptr noundef @.str.42, i32 noundef %17), !dbg !7363
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !7362
  br label %do.end, !dbg !7363

do.end:                                           ; preds = %do.body3
  br label %if.end11, !dbg !7362

if.end11:                                         ; preds = %do.end, %do.body
  br label %do.end12, !dbg !7361

do.end12:                                         ; preds = %if.end11
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !7364, !tbaa !3910
  %rkb_max_inflight = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 34, !dbg !7365
  store i32 1, ptr %rkb_max_inflight, align 8, !dbg !7366, !tbaa !7315
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !7367, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 5, !dbg !7368
  %20 = load ptr, ptr %rkb_transport, align 8, !dbg !7368, !tbaa !4518
  call void @rd_kafka_transport_poll_set(ptr noundef %20, i32 noundef 1), !dbg !7369
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !7370, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 9, !dbg !7370
  %call13 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !7370
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !7371, !tbaa !3910
  %rkb_rk14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 32, !dbg !7373
  %23 = load ptr, ptr %rkb_rk14, align 8, !dbg !7373, !tbaa !4139
  %rk_conf15 = getelementptr inbounds %struct.rd_kafka_s, ptr %23, i32 0, i32 18, !dbg !7374
  %api_version_request = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf15, i32 0, i32 34, !dbg !7375
  %24 = load i32, ptr %api_version_request, align 4, !dbg !7375, !tbaa !7376
  %tobool16 = icmp ne i32 %24, 0, !dbg !7371
  br i1 %tobool16, label %land.lhs.true, label %if.end20, !dbg !7377

land.lhs.true:                                    ; preds = %do.end12
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !7378, !tbaa !3910
  %rkb_ApiVersion_fail_intvl = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 26, !dbg !7378
  %call17 = call i64 @rd_interval0(ptr noundef %rkb_ApiVersion_fail_intvl, i64 noundef 0, i64 noundef 0, i32 noundef 1), !dbg !7378
  %cmp = icmp sgt i64 %call17, 0, !dbg !7379
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !7380

if.then19:                                        ; preds = %land.lhs.true
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !7381, !tbaa !3910
  call void @rd_kafka_broker_feature_enable(ptr noundef %26, i32 noundef 2), !dbg !7383
  br label %if.end20, !dbg !7384

if.end20:                                         ; preds = %if.then19, %land.lhs.true, %do.end12
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !7385, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 23, !dbg !7387
  %28 = load i32, ptr %rkb_features, align 4, !dbg !7387, !tbaa !3938
  %and21 = and i32 %28, 2, !dbg !7388
  %tobool22 = icmp ne i32 %and21, 0, !dbg !7388
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !7389

if.then23:                                        ; preds = %if.end20
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !7390, !tbaa !3910
  call void @rd_kafka_broker_set_api_versions(ptr noundef %29, ptr noundef null, i64 noundef 0), !dbg !7392
  br label %if.end24, !dbg !7393

if.end24:                                         ; preds = %if.then23, %if.end20
  %30 = load ptr, ptr %rkb.addr, align 8, !dbg !7394, !tbaa !3910
  %rkb_features25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %30, i32 0, i32 23, !dbg !7396
  %31 = load i32, ptr %rkb_features25, align 4, !dbg !7396, !tbaa !3938
  %and26 = and i32 %31, 2, !dbg !7397
  %tobool27 = icmp ne i32 %and26, 0, !dbg !7397
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !7398

if.then28:                                        ; preds = %if.end24
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !7399, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %32, i32 noundef 8), !dbg !7401
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !7402, !tbaa !3910
  %rkb_lock29 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 9, !dbg !7402
  %call30 = call i32 @mtx_unlock(ptr noundef %rkb_lock29), !dbg !7402
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !7403, !tbaa !3910
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %.compoundliteral, i32 0, i32 0, !dbg !7404
  store ptr null, ptr %q, align 8, !dbg !7404, !tbaa !7405
  %version = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %.compoundliteral, i32 0, i32 1, !dbg !7404
  store i32 0, ptr %version, align 8, !dbg !7404, !tbaa !7406
  %35 = getelementptr inbounds { ptr, i32 }, ptr %.compoundliteral, i32 0, i32 0, !dbg !7407
  %36 = load ptr, ptr %35, align 8, !dbg !7407
  %37 = getelementptr inbounds { ptr, i32 }, ptr %.compoundliteral, i32 0, i32 1, !dbg !7407
  %38 = load i32, ptr %37, align 8, !dbg !7407
  call void @rd_kafka_ApiVersionRequest(ptr noundef %34, i16 noundef signext -1, ptr %36, i32 %38, ptr noundef @rd_kafka_broker_handle_ApiVersion, ptr noundef null), !dbg !7407
  br label %if.end33, !dbg !7408

if.else:                                          ; preds = %if.end24
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !7409, !tbaa !3910
  %rkb_lock31 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 9, !dbg !7409
  %call32 = call i32 @mtx_unlock(ptr noundef %rkb_lock31), !dbg !7409
  %40 = load ptr, ptr %rkb.addr, align 8, !dbg !7411, !tbaa !3910
  call void @rd_kafka_broker_connect_auth(ptr noundef %40), !dbg !7412
  br label %if.end33

if.end33:                                         ; preds = %if.then, %if.else, %if.then28
  ret void, !dbg !7413
}

declare !dbg !7414 void @rd_kafka_transport_poll_set(ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_interval0(ptr noundef %ri, i64 noundef %interval_us, i64 noundef %now, i32 noundef %immediate) #4 !dbg !7417 {
entry:
  %ri.addr = alloca ptr, align 8
  %interval_us.addr = alloca i64, align 8
  %now.addr = alloca i64, align 8
  %immediate.addr = alloca i32, align 4
  %diff = alloca i64, align 8
  store ptr %ri, ptr %ri.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ri.addr, metadata !7422, metadata !DIExpression()), !dbg !7427
  store i64 %interval_us, ptr %interval_us.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %interval_us.addr, metadata !7423, metadata !DIExpression()), !dbg !7428
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !7424, metadata !DIExpression()), !dbg !7429
  store i32 %immediate, ptr %immediate.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %immediate.addr, metadata !7425, metadata !DIExpression()), !dbg !7430
  call void @llvm.lifetime.start.p0(i64 8, ptr %diff) #16, !dbg !7431
  tail call void @llvm.dbg.declare(metadata ptr %diff, metadata !7426, metadata !DIExpression()), !dbg !7432
  %0 = load i64, ptr %now.addr, align 8, !dbg !7433, !tbaa !4039
  %tobool = icmp ne i64 %0, 0, !dbg !7433
  br i1 %tobool, label %if.end, label %if.then, !dbg !7435

if.then:                                          ; preds = %entry
  %call = call i64 @rd_clock(), !dbg !7436
  store i64 %call, ptr %now.addr, align 8, !dbg !7437, !tbaa !4039
  br label %if.end, !dbg !7438

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, ptr %interval_us.addr, align 8, !dbg !7439, !tbaa !4039
  %tobool1 = icmp ne i64 %1, 0, !dbg !7439
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !7441

if.then2:                                         ; preds = %if.end
  %2 = load ptr, ptr %ri.addr, align 8, !dbg !7442, !tbaa !3910
  %ri_fixed = getelementptr inbounds %struct.rd_interval_s, ptr %2, i32 0, i32 1, !dbg !7443
  %3 = load i64, ptr %ri_fixed, align 8, !dbg !7443, !tbaa !7444
  store i64 %3, ptr %interval_us.addr, align 8, !dbg !7445, !tbaa !4039
  br label %if.end3, !dbg !7446

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load ptr, ptr %ri.addr, align 8, !dbg !7447, !tbaa !3910
  %ri_ts_last = getelementptr inbounds %struct.rd_interval_s, ptr %4, i32 0, i32 0, !dbg !7449
  %5 = load i64, ptr %ri_ts_last, align 8, !dbg !7449, !tbaa !7450
  %tobool4 = icmp ne i64 %5, 0, !dbg !7447
  br i1 %tobool4, label %if.then6, label %lor.lhs.false, !dbg !7451

lor.lhs.false:                                    ; preds = %if.end3
  %6 = load i32, ptr %immediate.addr, align 4, !dbg !7452, !tbaa !3959
  %tobool5 = icmp ne i32 %6, 0, !dbg !7452
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !7453

if.then6:                                         ; preds = %lor.lhs.false, %if.end3
  %7 = load i64, ptr %now.addr, align 8, !dbg !7454, !tbaa !4039
  %8 = load ptr, ptr %ri.addr, align 8, !dbg !7456, !tbaa !3910
  %ri_ts_last7 = getelementptr inbounds %struct.rd_interval_s, ptr %8, i32 0, i32 0, !dbg !7457
  %9 = load i64, ptr %ri_ts_last7, align 8, !dbg !7457, !tbaa !7450
  %10 = load i64, ptr %interval_us.addr, align 8, !dbg !7458, !tbaa !4039
  %add = add nsw i64 %9, %10, !dbg !7459
  %11 = load ptr, ptr %ri.addr, align 8, !dbg !7460, !tbaa !3910
  %ri_backoff = getelementptr inbounds %struct.rd_interval_s, ptr %11, i32 0, i32 2, !dbg !7461
  %12 = load i32, ptr %ri_backoff, align 8, !dbg !7461, !tbaa !7462
  %conv = sext i32 %12 to i64, !dbg !7460
  %add8 = add nsw i64 %add, %conv, !dbg !7463
  %sub = sub nsw i64 %7, %add8, !dbg !7464
  store i64 %sub, ptr %diff, align 8, !dbg !7465, !tbaa !4039
  br label %if.end9, !dbg !7466

if.else:                                          ; preds = %lor.lhs.false
  store i64 1, ptr %diff, align 8, !dbg !7467, !tbaa !4039
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %13 = load i64, ptr %diff, align 8, !dbg !7468, !tbaa !4039
  %cmp = icmp sgt i64 %13, 0, !dbg !7468
  %conv10 = zext i1 %cmp to i32, !dbg !7468
  %conv11 = sext i32 %conv10 to i64, !dbg !7468
  %expval = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !7468
  %tobool12 = icmp ne i64 %expval, 0, !dbg !7468
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !7470

if.then13:                                        ; preds = %if.end9
  %14 = load i64, ptr %now.addr, align 8, !dbg !7471, !tbaa !4039
  %15 = load ptr, ptr %ri.addr, align 8, !dbg !7473, !tbaa !3910
  %ri_ts_last14 = getelementptr inbounds %struct.rd_interval_s, ptr %15, i32 0, i32 0, !dbg !7474
  store i64 %14, ptr %ri_ts_last14, align 8, !dbg !7475, !tbaa !7450
  %16 = load ptr, ptr %ri.addr, align 8, !dbg !7476, !tbaa !3910
  %ri_backoff15 = getelementptr inbounds %struct.rd_interval_s, ptr %16, i32 0, i32 2, !dbg !7477
  store i32 0, ptr %ri_backoff15, align 8, !dbg !7478, !tbaa !7462
  br label %if.end16, !dbg !7479

if.end16:                                         ; preds = %if.then13, %if.end9
  %17 = load i64, ptr %diff, align 8, !dbg !7480, !tbaa !4039
  call void @llvm.lifetime.end.p0(i64 8, ptr %diff) #16, !dbg !7481
  ret i64 %17, !dbg !7482
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_feature_enable(ptr noundef %rkb, i32 noundef %features) #0 !dbg !7483 {
entry:
  %rkb.addr = alloca ptr, align 8
  %features.addr = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !7485, metadata !DIExpression()), !dbg !7492
  store i32 %features, ptr %features.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %features.addr, metadata !7486, metadata !DIExpression()), !dbg !7493
  %0 = load i32, ptr %features.addr, align 4, !dbg !7494, !tbaa !3959
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !7496, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 23, !dbg !7497
  %2 = load i32, ptr %rkb_features, align 4, !dbg !7497, !tbaa !3938
  %and = and i32 %0, %2, !dbg !7498
  %tobool = icmp ne i32 %and, 0, !dbg !7498
  br i1 %tobool, label %if.then, label %if.end, !dbg !7499

if.then:                                          ; preds = %entry
  br label %do.end16, !dbg !7500

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %features.addr, align 4, !dbg !7501, !tbaa !3959
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !7502, !tbaa !3910
  %rkb_features1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 23, !dbg !7503
  %5 = load i32, ptr %rkb_features1, align 4, !dbg !7504, !tbaa !3938
  %or = or i32 %5, %3, !dbg !7504
  store i32 %or, ptr %rkb_features1, align 4, !dbg !7504, !tbaa !3938
  br label %do.body, !dbg !7505

do.body:                                          ; preds = %if.end
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !7506, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 32, !dbg !7506
  %7 = load ptr, ptr %rkb_rk, align 8, !dbg !7506, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 18, !dbg !7506
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !7506
  %8 = load i32, ptr %debug, align 8, !dbg !7506, !tbaa !4140
  %and2 = and i32 %8, 146, !dbg !7506
  %conv = sext i32 %and2 to i64, !dbg !7506
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7506
  %tobool3 = icmp ne i64 %expval, 0, !dbg !7506
  br i1 %tobool3, label %if.then4, label %if.end15, !dbg !7507

if.then4:                                         ; preds = %do.body
  br label %do.body5, !dbg !7508

do.body5:                                         ; preds = %if.then4
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !7509
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !7487, metadata !DIExpression()), !dbg !7509
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !7509, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 49, !dbg !7509
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !7509
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7509
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !7509, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 48, !dbg !7509
  %11 = load ptr, ptr %rkb_logname, align 8, !dbg !7509, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %11, i64 noundef 256), !dbg !7509
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !7509, !tbaa !3910
  %rkb_logname_lock6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 49, !dbg !7509
  %call7 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock6), !dbg !7509
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !7509, !tbaa !3910
  %rkb_rk8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 32, !dbg !7509
  %14 = load ptr, ptr %rkb_rk8, align 8, !dbg !7509, !tbaa !4139
  %rk_conf9 = getelementptr inbounds %struct.rd_kafka_s, ptr %14, i32 0, i32 18, !dbg !7509
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !7509, !tbaa !3910
  %rkb_rk10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 32, !dbg !7509
  %16 = load ptr, ptr %rkb_rk10, align 8, !dbg !7509, !tbaa !4139
  %arraydecay11 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7509
  %17 = load i32, ptr %features.addr, align 4, !dbg !7509, !tbaa !3959
  %call12 = call ptr @rd_kafka_features2str(i32 noundef %17), !dbg !7509
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !7509, !tbaa !3910
  %rkb_features13 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 23, !dbg !7509
  %19 = load i32, ptr %rkb_features13, align 4, !dbg !7509, !tbaa !3938
  %call14 = call ptr @rd_kafka_features2str(i32 noundef %19), !dbg !7509
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf9, ptr noundef %16, ptr noundef %arraydecay11, i32 noundef 7, i32 noundef 146, ptr noundef @.str.111, ptr noundef @.str.198, ptr noundef %call12, ptr noundef %call14), !dbg !7509
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !7508
  br label %do.end, !dbg !7509

do.end:                                           ; preds = %do.body5
  br label %if.end15, !dbg !7508

if.end15:                                         ; preds = %do.end, %do.body
  br label %do.end16, !dbg !7507

do.end16:                                         ; preds = %if.then, %if.end15
  ret void, !dbg !7510
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_set_api_versions(ptr noundef %rkb, ptr noundef %apis, i64 noundef %api_cnt) #0 !dbg !7511 {
entry:
  %rkb.addr = alloca ptr, align 8
  %apis.addr = alloca ptr, align 8
  %api_cnt.addr = alloca i64, align 8
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !7515, metadata !DIExpression()), !dbg !7525
  store ptr %apis, ptr %apis.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %apis.addr, metadata !7516, metadata !DIExpression()), !dbg !7526
  store i64 %api_cnt, ptr %api_cnt.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %api_cnt.addr, metadata !7517, metadata !DIExpression()), !dbg !7527
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !7528, !tbaa !3910
  %rkb_ApiVersions = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 24, !dbg !7530
  %1 = load ptr, ptr %rkb_ApiVersions, align 8, !dbg !7530, !tbaa !3972
  %tobool = icmp ne ptr %1, null, !dbg !7528
  br i1 %tobool, label %if.then, label %if.end, !dbg !7531

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !7532, !tbaa !3910
  %rkb_ApiVersions1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 24, !dbg !7533
  %3 = load ptr, ptr %rkb_ApiVersions1, align 8, !dbg !7533, !tbaa !3972
  call void @rd_free(ptr noundef %3), !dbg !7534
  br label %if.end, !dbg !7534

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %apis.addr, align 8, !dbg !7535, !tbaa !3910
  %tobool2 = icmp ne ptr %4, null, !dbg !7535
  br i1 %tobool2, label %if.end24, label %if.then3, !dbg !7536

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !7537

do.body:                                          ; preds = %if.then3
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !7538, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 32, !dbg !7538
  %6 = load ptr, ptr %rkb_rk, align 8, !dbg !7538, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 18, !dbg !7538
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !7538
  %7 = load i32, ptr %debug, align 8, !dbg !7538, !tbaa !4140
  %and = and i32 %7, 130, !dbg !7538
  %conv = sext i32 %and to i64, !dbg !7538
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7538
  %tobool4 = icmp ne i64 %expval, 0, !dbg !7538
  br i1 %tobool4, label %if.then5, label %if.end15, !dbg !7539

if.then5:                                         ; preds = %do.body
  br label %do.body6, !dbg !7540

do.body6:                                         ; preds = %if.then5
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !7541
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !7518, metadata !DIExpression()), !dbg !7541
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !7541, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 49, !dbg !7541
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !7541
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7541
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !7541, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 48, !dbg !7541
  %10 = load ptr, ptr %rkb_logname, align 8, !dbg !7541, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %10, i64 noundef 256), !dbg !7541
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !7541, !tbaa !3910
  %rkb_logname_lock7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 49, !dbg !7541
  %call8 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock7), !dbg !7541
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !7541, !tbaa !3910
  %rkb_rk9 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 32, !dbg !7541
  %13 = load ptr, ptr %rkb_rk9, align 8, !dbg !7541, !tbaa !4139
  %rk_conf10 = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !7541
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !7541, !tbaa !3910
  %rkb_rk11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 32, !dbg !7541
  %15 = load ptr, ptr %rkb_rk11, align 8, !dbg !7541, !tbaa !4139
  %arraydecay12 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7541
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !7541, !tbaa !3910
  %rkb_rk13 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 32, !dbg !7541
  %17 = load ptr, ptr %rkb_rk13, align 8, !dbg !7541, !tbaa !4139
  %rk_conf14 = getelementptr inbounds %struct.rd_kafka_s, ptr %17, i32 0, i32 18, !dbg !7541
  %broker_version_fallback = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf14, i32 0, i32 37, !dbg !7541
  %18 = load ptr, ptr %broker_version_fallback, align 8, !dbg !7541, !tbaa !7542
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf10, ptr noundef %15, ptr noundef %arraydecay12, i32 noundef 7, i32 noundef 130, ptr noundef @.str.199, ptr noundef @.str.200, ptr noundef %18), !dbg !7541
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !7540
  br label %do.end, !dbg !7541

do.end:                                           ; preds = %do.body6
  br label %if.end15, !dbg !7540

if.end15:                                         ; preds = %do.end, %do.body
  br label %do.end16, !dbg !7539

do.end16:                                         ; preds = %if.end15
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !7543, !tbaa !3910
  %rkb_rk17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 32, !dbg !7544
  %20 = load ptr, ptr %rkb_rk17, align 8, !dbg !7544, !tbaa !4139
  %rk_conf18 = getelementptr inbounds %struct.rd_kafka_s, ptr %20, i32 0, i32 18, !dbg !7545
  %broker_version_fallback19 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf18, i32 0, i32 37, !dbg !7546
  %21 = load ptr, ptr %broker_version_fallback19, align 8, !dbg !7546, !tbaa !7542
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !7547, !tbaa !3910
  %rkb_rk20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 32, !dbg !7548
  %23 = load ptr, ptr %rkb_rk20, align 8, !dbg !7548, !tbaa !4139
  %rk_conf21 = getelementptr inbounds %struct.rd_kafka_s, ptr %23, i32 0, i32 18, !dbg !7549
  %broker_version_fallback22 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf21, i32 0, i32 37, !dbg !7550
  %24 = load ptr, ptr %broker_version_fallback22, align 8, !dbg !7550, !tbaa !7542
  %call23 = call i32 @rd_kafka_get_legacy_ApiVersions(ptr noundef %21, ptr noundef %apis.addr, ptr noundef %api_cnt.addr, ptr noundef %24), !dbg !7551
  %25 = load ptr, ptr %apis.addr, align 8, !dbg !7552, !tbaa !3910
  %26 = load i64, ptr %api_cnt.addr, align 8, !dbg !7553, !tbaa !4039
  call void @rd_kafka_ApiVersions_copy(ptr noundef %25, i64 noundef %26, ptr noundef %apis.addr, ptr noundef %api_cnt.addr), !dbg !7554
  br label %if.end24, !dbg !7555

if.end24:                                         ; preds = %do.end16, %if.end
  %27 = load ptr, ptr %apis.addr, align 8, !dbg !7556, !tbaa !3910
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !7557, !tbaa !3910
  %rkb_ApiVersions25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 24, !dbg !7558
  store ptr %27, ptr %rkb_ApiVersions25, align 8, !dbg !7559, !tbaa !3972
  %29 = load i64, ptr %api_cnt.addr, align 8, !dbg !7560, !tbaa !4039
  %30 = load ptr, ptr %rkb.addr, align 8, !dbg !7561, !tbaa !3910
  %rkb_ApiVersions_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %30, i32 0, i32 25, !dbg !7562
  store i64 %29, ptr %rkb_ApiVersions_cnt, align 8, !dbg !7563, !tbaa !3975
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !7564, !tbaa !3910
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !7565, !tbaa !3910
  %33 = load ptr, ptr %apis.addr, align 8, !dbg !7566, !tbaa !3910
  %34 = load i64, ptr %api_cnt.addr, align 8, !dbg !7567, !tbaa !4039
  %call26 = call i32 @rd_kafka_features_check(ptr noundef %32, ptr noundef %33, i64 noundef %34), !dbg !7568
  call void @rd_kafka_broker_features_set(ptr noundef %31, i32 noundef %call26), !dbg !7569
  ret void, !dbg !7570
}

declare !dbg !7571 void @rd_kafka_ApiVersionRequest(ptr noundef, i16 noundef signext, ptr, i32, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_handle_ApiVersion(ptr noundef %rk, ptr noundef %rkb, i32 noundef %err, ptr noundef %rkbuf, ptr noundef %request, ptr noundef %opaque) #0 !dbg !7575 {
entry:
  %rk.addr = alloca ptr, align 8
  %rkb.addr = alloca ptr, align 8
  %err.addr = alloca i32, align 4
  %rkbuf.addr = alloca ptr, align 8
  %request.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  %apis = alloca ptr, align 8
  %api_cnt = alloca i64, align 8
  %retry_ApiVersion = alloca i16, align 2
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %_logname = alloca [256 x i8], align 16
  %_logname60 = alloca [256 x i8], align 16
  %.compoundliteral = alloca %struct.rd_kafka_replyq_s, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !7577, metadata !DIExpression()), !dbg !7600
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !7578, metadata !DIExpression()), !dbg !7601
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !7579, metadata !DIExpression()), !dbg !7602
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !7580, metadata !DIExpression()), !dbg !7603
  store ptr %request, ptr %request.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %request.addr, metadata !7581, metadata !DIExpression()), !dbg !7604
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !7582, metadata !DIExpression()), !dbg !7605
  call void @llvm.lifetime.start.p0(i64 8, ptr %apis) #16, !dbg !7606
  tail call void @llvm.dbg.declare(metadata ptr %apis, metadata !7583, metadata !DIExpression()), !dbg !7607
  store ptr null, ptr %apis, align 8, !dbg !7607, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %api_cnt) #16, !dbg !7608
  tail call void @llvm.dbg.declare(metadata ptr %api_cnt, metadata !7584, metadata !DIExpression()), !dbg !7609
  store i64 0, ptr %api_cnt, align 8, !dbg !7609, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 2, ptr %retry_ApiVersion) #16, !dbg !7610
  tail call void @llvm.dbg.declare(metadata ptr %retry_ApiVersion, metadata !7585, metadata !DIExpression()), !dbg !7611
  store i16 -1, ptr %retry_ApiVersion, align 2, !dbg !7611, !tbaa !3915
  %0 = load i32, ptr %err.addr, align 4, !dbg !7612, !tbaa !4126
  %cmp = icmp eq i32 %0, -197, !dbg !7614
  br i1 %cmp, label %if.then, label %if.end, !dbg !7615

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7616

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !7617, !tbaa !3910
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !7618, !tbaa !3910
  %3 = load i32, ptr %err.addr, align 4, !dbg !7619, !tbaa !4126
  %4 = load ptr, ptr %rkbuf.addr, align 8, !dbg !7620, !tbaa !3910
  %5 = load ptr, ptr %request.addr, align 8, !dbg !7621, !tbaa !3910
  %call = call i32 @rd_kafka_handle_ApiVersion(ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %apis, ptr noundef %api_cnt), !dbg !7622
  store i32 %call, ptr %err.addr, align 4, !dbg !7623, !tbaa !4126
  %6 = load i32, ptr %err.addr, align 4, !dbg !7624, !tbaa !4126
  %cmp1 = icmp eq i32 %6, 35, !dbg !7625
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !7626

if.then2:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #16, !dbg !7627
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !7586, metadata !DIExpression()), !dbg !7628
  store i64 0, ptr %i, align 8, !dbg !7629, !tbaa !4039
  br label %for.cond, !dbg !7631

for.cond:                                         ; preds = %for.inc, %if.then2
  %7 = load i64, ptr %i, align 8, !dbg !7632, !tbaa !4039
  %8 = load i64, ptr %api_cnt, align 8, !dbg !7634, !tbaa !4039
  %cmp3 = icmp ult i64 %7, %8, !dbg !7635
  br i1 %cmp3, label %for.body, label %for.end, !dbg !7636

for.body:                                         ; preds = %for.cond
  %9 = load ptr, ptr %apis, align 8, !dbg !7637, !tbaa !3910
  %10 = load i64, ptr %i, align 8, !dbg !7640, !tbaa !4039
  %arrayidx = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %9, i64 %10, !dbg !7637
  %ApiKey = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %arrayidx, i32 0, i32 0, !dbg !7641
  %11 = load i16, ptr %ApiKey, align 2, !dbg !7641, !tbaa !3925
  %conv = sext i16 %11 to i32, !dbg !7637
  %cmp4 = icmp eq i32 %conv, 18, !dbg !7642
  br i1 %cmp4, label %if.then6, label %if.end20, !dbg !7643

if.then6:                                         ; preds = %for.body
  %12 = load ptr, ptr %request.addr, align 8, !dbg !7644, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %12, i32 0, i32 10, !dbg !7644
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 2, !dbg !7644
  %13 = load i16, ptr %ApiVersion, align 2, !dbg !7644, !tbaa !5272
  %conv7 = sext i16 %13 to i32, !dbg !7644
  %sub = sub nsw i32 %conv7, 1, !dbg !7644
  %14 = load ptr, ptr %apis, align 8, !dbg !7644, !tbaa !3910
  %15 = load i64, ptr %i, align 8, !dbg !7644, !tbaa !4039
  %arrayidx8 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %14, i64 %15, !dbg !7644
  %MaxVer = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %arrayidx8, i32 0, i32 2, !dbg !7644
  %16 = load i16, ptr %MaxVer, align 2, !dbg !7644, !tbaa !3928
  %conv9 = sext i16 %16 to i32, !dbg !7644
  %cmp10 = icmp slt i32 %sub, %conv9, !dbg !7644
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !7644

cond.true:                                        ; preds = %if.then6
  %17 = load ptr, ptr %request.addr, align 8, !dbg !7644, !tbaa !3910
  %rkbuf_reqhdr12 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %17, i32 0, i32 10, !dbg !7644
  %ApiVersion13 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr12, i32 0, i32 2, !dbg !7644
  %18 = load i16, ptr %ApiVersion13, align 2, !dbg !7644, !tbaa !5272
  %conv14 = sext i16 %18 to i32, !dbg !7644
  %sub15 = sub nsw i32 %conv14, 1, !dbg !7644
  br label %cond.end, !dbg !7644

cond.false:                                       ; preds = %if.then6
  %19 = load ptr, ptr %apis, align 8, !dbg !7644, !tbaa !3910
  %20 = load i64, ptr %i, align 8, !dbg !7644, !tbaa !4039
  %arrayidx16 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %19, i64 %20, !dbg !7644
  %MaxVer17 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %arrayidx16, i32 0, i32 2, !dbg !7644
  %21 = load i16, ptr %MaxVer17, align 2, !dbg !7644, !tbaa !3928
  %conv18 = sext i16 %21 to i32, !dbg !7644
  br label %cond.end, !dbg !7644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub15, %cond.true ], [ %conv18, %cond.false ], !dbg !7644
  %conv19 = trunc i32 %cond to i16, !dbg !7644
  store i16 %conv19, ptr %retry_ApiVersion, align 2, !dbg !7646, !tbaa !3915
  br label %for.end, !dbg !7647

if.end20:                                         ; preds = %for.body
  br label %for.inc, !dbg !7648

for.inc:                                          ; preds = %if.end20
  %22 = load i64, ptr %i, align 8, !dbg !7649, !tbaa !4039
  %inc = add i64 %22, 1, !dbg !7649
  store i64 %inc, ptr %i, align 8, !dbg !7649, !tbaa !4039
  br label %for.cond, !dbg !7650, !llvm.loop !7651

for.end:                                          ; preds = %cond.end, %for.cond
  %23 = load i64, ptr %i, align 8, !dbg !7653, !tbaa !4039
  %24 = load i64, ptr %api_cnt, align 8, !dbg !7655, !tbaa !4039
  %cmp21 = icmp eq i64 %23, %24, !dbg !7656
  br i1 %cmp21, label %land.lhs.true, label %if.end29, !dbg !7657

land.lhs.true:                                    ; preds = %for.end
  %25 = load ptr, ptr %request.addr, align 8, !dbg !7658, !tbaa !3910
  %rkbuf_reqhdr23 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %25, i32 0, i32 10, !dbg !7659
  %ApiVersion24 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr23, i32 0, i32 2, !dbg !7660
  %26 = load i16, ptr %ApiVersion24, align 2, !dbg !7660, !tbaa !5272
  %conv25 = sext i16 %26 to i32, !dbg !7658
  %cmp26 = icmp sgt i32 %conv25, 0, !dbg !7661
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !7662

if.then28:                                        ; preds = %land.lhs.true
  store i16 0, ptr %retry_ApiVersion, align 2, !dbg !7663, !tbaa !3915
  br label %if.end29, !dbg !7664

if.end29:                                         ; preds = %if.then28, %land.lhs.true, %for.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #16, !dbg !7665
  br label %if.end44, !dbg !7666

if.else:                                          ; preds = %if.end
  %27 = load i32, ptr %err.addr, align 4, !dbg !7667, !tbaa !4126
  %cmp30 = icmp eq i32 %27, 42, !dbg !7668
  br i1 %cmp30, label %if.then32, label %if.end43, !dbg !7669

if.then32:                                        ; preds = %if.else
  br label %do.body, !dbg !7670

do.body:                                          ; preds = %if.then32
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !7671
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !7589, metadata !DIExpression()), !dbg !7671
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !7671, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 49, !dbg !7671
  %call33 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !7671
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7671
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !7671, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 48, !dbg !7671
  %30 = load ptr, ptr %rkb_logname, align 8, !dbg !7671, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %30, i64 noundef 256), !dbg !7671
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !7671, !tbaa !3910
  %rkb_logname_lock34 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 49, !dbg !7671
  %call35 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock34), !dbg !7671
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !7671, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 32, !dbg !7671
  %33 = load ptr, ptr %rkb_rk, align 8, !dbg !7671, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %33, i32 0, i32 18, !dbg !7671
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !7671, !tbaa !3910
  %rkb_rk36 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 32, !dbg !7671
  %35 = load ptr, ptr %rkb_rk36, align 8, !dbg !7671, !tbaa !4139
  %arraydecay37 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7671
  %36 = load ptr, ptr %request.addr, align 8, !dbg !7671, !tbaa !3910
  %rkbuf_reqhdr38 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %36, i32 0, i32 10, !dbg !7671
  %ApiVersion39 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr38, i32 0, i32 2, !dbg !7671
  %37 = load i16, ptr %ApiVersion39, align 2, !dbg !7671, !tbaa !5272
  %conv40 = sext i16 %37 to i32, !dbg !7671
  %38 = load ptr, ptr %rk.addr, align 8, !dbg !7671, !tbaa !3910
  %rk_conf41 = getelementptr inbounds %struct.rd_kafka_s, ptr %38, i32 0, i32 18, !dbg !7671
  %sw_name = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf41, i32 0, i32 114, !dbg !7671
  %39 = load ptr, ptr %sw_name, align 8, !dbg !7671, !tbaa !7672
  %40 = load ptr, ptr %rk.addr, align 8, !dbg !7671, !tbaa !3910
  %rk_conf42 = getelementptr inbounds %struct.rd_kafka_s, ptr %40, i32 0, i32 18, !dbg !7671
  %sw_version = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf42, i32 0, i32 115, !dbg !7671
  %41 = load ptr, ptr %sw_version, align 8, !dbg !7671, !tbaa !7673
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf, ptr noundef %35, ptr noundef %arraydecay37, i32 noundef 3, i32 noundef 0, ptr noundef @.str.199, ptr noundef @.str.202, i32 noundef %conv40, ptr noundef %39, ptr noundef %41), !dbg !7671
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !7670
  br label %do.cond, !dbg !7671

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !7671

do.end:                                           ; preds = %do.cond
  store i16 0, ptr %retry_ApiVersion, align 2, !dbg !7674, !tbaa !3915
  br label %if.end43, !dbg !7675

if.end43:                                         ; preds = %do.end, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %42 = load i32, ptr %err.addr, align 4, !dbg !7676, !tbaa !4126
  %tobool = icmp ne i32 %42, 0, !dbg !7676
  br i1 %tobool, label %land.lhs.true45, label %if.end48, !dbg !7678

land.lhs.true45:                                  ; preds = %if.end44
  %43 = load ptr, ptr %apis, align 8, !dbg !7679, !tbaa !3910
  %tobool46 = icmp ne ptr %43, null, !dbg !7679
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7680

if.then47:                                        ; preds = %land.lhs.true45
  %44 = load ptr, ptr %apis, align 8, !dbg !7681, !tbaa !3910
  call void @rd_free(ptr noundef %44), !dbg !7682
  br label %if.end48, !dbg !7682

if.end48:                                         ; preds = %if.then47, %land.lhs.true45, %if.end44
  %45 = load i16, ptr %retry_ApiVersion, align 2, !dbg !7683, !tbaa !3915
  %conv49 = sext i16 %45 to i32, !dbg !7683
  %cmp50 = icmp ne i32 %conv49, -1, !dbg !7684
  br i1 %cmp50, label %if.then52, label %if.end81, !dbg !7685

if.then52:                                        ; preds = %if.end48
  br label %do.body53, !dbg !7686

do.body53:                                        ; preds = %if.then52
  %46 = load ptr, ptr %rkb.addr, align 8, !dbg !7687, !tbaa !3910
  %rkb_rk54 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %46, i32 0, i32 32, !dbg !7687
  %47 = load ptr, ptr %rkb_rk54, align 8, !dbg !7687, !tbaa !4139
  %rk_conf55 = getelementptr inbounds %struct.rd_kafka_s, ptr %47, i32 0, i32 18, !dbg !7687
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf55, i32 0, i32 13, !dbg !7687
  %48 = load i32, ptr %debug, align 8, !dbg !7687, !tbaa !4140
  %and = and i32 %48, 146, !dbg !7687
  %conv56 = sext i32 %and to i64, !dbg !7687
  %expval = call i64 @llvm.expect.i64(i64 %conv56, i64 0), !dbg !7687
  %tobool57 = icmp ne i64 %expval, 0, !dbg !7687
  br i1 %tobool57, label %if.then58, label %if.end78, !dbg !7688

if.then58:                                        ; preds = %do.body53
  br label %do.body59, !dbg !7689

do.body59:                                        ; preds = %if.then58
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname60) #16, !dbg !7690
  tail call void @llvm.dbg.declare(metadata ptr %_logname60, metadata !7593, metadata !DIExpression()), !dbg !7690
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !7690, !tbaa !3910
  %rkb_logname_lock61 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 49, !dbg !7690
  %call62 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock61), !dbg !7690
  %arraydecay63 = getelementptr inbounds [256 x i8], ptr %_logname60, i64 0, i64 0, !dbg !7690
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !7690, !tbaa !3910
  %rkb_logname64 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 48, !dbg !7690
  %51 = load ptr, ptr %rkb_logname64, align 8, !dbg !7690, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay63, ptr noundef %51, i64 noundef 256), !dbg !7690
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !7690, !tbaa !3910
  %rkb_logname_lock65 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 49, !dbg !7690
  %call66 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock65), !dbg !7690
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !7690, !tbaa !3910
  %rkb_rk67 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %53, i32 0, i32 32, !dbg !7690
  %54 = load ptr, ptr %rkb_rk67, align 8, !dbg !7690, !tbaa !4139
  %rk_conf68 = getelementptr inbounds %struct.rd_kafka_s, ptr %54, i32 0, i32 18, !dbg !7690
  %55 = load ptr, ptr %rkb.addr, align 8, !dbg !7690, !tbaa !3910
  %rkb_rk69 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %55, i32 0, i32 32, !dbg !7690
  %56 = load ptr, ptr %rkb_rk69, align 8, !dbg !7690, !tbaa !4139
  %arraydecay70 = getelementptr inbounds [256 x i8], ptr %_logname60, i64 0, i64 0, !dbg !7690
  %57 = load ptr, ptr %request.addr, align 8, !dbg !7690, !tbaa !3910
  %rkbuf_reqhdr71 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %57, i32 0, i32 10, !dbg !7690
  %ApiVersion72 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr71, i32 0, i32 2, !dbg !7690
  %58 = load i16, ptr %ApiVersion72, align 2, !dbg !7690, !tbaa !5272
  %conv73 = sext i16 %58 to i32, !dbg !7690
  %59 = load i32, ptr %err.addr, align 4, !dbg !7690, !tbaa !4126
  %call74 = call ptr @rd_kafka_err2name(i32 noundef %59), !dbg !7690
  %60 = load i16, ptr %retry_ApiVersion, align 2, !dbg !7690, !tbaa !3915
  %conv75 = sext i16 %60 to i32, !dbg !7690
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf68, ptr noundef %56, ptr noundef %arraydecay70, i32 noundef 7, i32 noundef 146, ptr noundef @.str.199, ptr noundef @.str.203, i32 noundef %conv73, ptr noundef %call74, i32 noundef %conv75), !dbg !7690
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname60) #16, !dbg !7689
  br label %do.cond76, !dbg !7690

do.cond76:                                        ; preds = %do.body59
  br label %do.end77, !dbg !7690

do.end77:                                         ; preds = %do.cond76
  br label %if.end78, !dbg !7689

if.end78:                                         ; preds = %do.end77, %do.body53
  br label %do.cond79, !dbg !7688

do.cond79:                                        ; preds = %if.end78
  br label %do.end80, !dbg !7688

do.end80:                                         ; preds = %do.cond79
  %61 = load ptr, ptr %rkb.addr, align 8, !dbg !7691, !tbaa !3910
  %62 = load i16, ptr %retry_ApiVersion, align 2, !dbg !7692, !tbaa !3915
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %.compoundliteral, i32 0, i32 0, !dbg !7693
  store ptr null, ptr %q, align 8, !dbg !7693, !tbaa !7405
  %version = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %.compoundliteral, i32 0, i32 1, !dbg !7693
  store i32 0, ptr %version, align 8, !dbg !7693, !tbaa !7406
  %63 = getelementptr inbounds { ptr, i32 }, ptr %.compoundliteral, i32 0, i32 0, !dbg !7694
  %64 = load ptr, ptr %63, align 8, !dbg !7694
  %65 = getelementptr inbounds { ptr, i32 }, ptr %.compoundliteral, i32 0, i32 1, !dbg !7694
  %66 = load i32, ptr %65, align 8, !dbg !7694
  call void @rd_kafka_ApiVersionRequest(ptr noundef %61, i16 noundef signext %62, ptr %64, i32 %66, ptr noundef @rd_kafka_broker_handle_ApiVersion, ptr noundef null), !dbg !7694
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7695

if.end81:                                         ; preds = %if.end48
  %67 = load i32, ptr %err.addr, align 4, !dbg !7696, !tbaa !4126
  %tobool82 = icmp ne i32 %67, 0, !dbg !7696
  br i1 %tobool82, label %if.then83, label %if.end88, !dbg !7698

if.then83:                                        ; preds = %if.end81
  %68 = load ptr, ptr %rkb.addr, align 8, !dbg !7699, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %68, i32 0, i32 5, !dbg !7702
  %69 = load ptr, ptr %rkb_transport, align 8, !dbg !7702, !tbaa !4518
  %tobool84 = icmp ne ptr %69, null, !dbg !7699
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !7703

if.then85:                                        ; preds = %if.then83
  %70 = load ptr, ptr %rkb.addr, align 8, !dbg !7704, !tbaa !3910
  %71 = load i32, ptr %err.addr, align 4, !dbg !7705, !tbaa !4126
  %call86 = call ptr @rd_kafka_err2str(i32 noundef %71), !dbg !7706
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %70, i32 noundef 4, i32 noundef -195, ptr noundef @.str.204, ptr noundef %call86), !dbg !7707
  br label %if.end87, !dbg !7707

if.end87:                                         ; preds = %if.then85, %if.then83
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7708

if.end88:                                         ; preds = %if.end81
  %72 = load ptr, ptr %rkb.addr, align 8, !dbg !7709, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %72, i32 0, i32 9, !dbg !7709
  %call89 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !7709
  %73 = load ptr, ptr %rkb.addr, align 8, !dbg !7710, !tbaa !3910
  %74 = load ptr, ptr %apis, align 8, !dbg !7711, !tbaa !3910
  %75 = load i64, ptr %api_cnt, align 8, !dbg !7712, !tbaa !4039
  call void @rd_kafka_broker_set_api_versions(ptr noundef %73, ptr noundef %74, i64 noundef %75), !dbg !7713
  %76 = load ptr, ptr %rkb.addr, align 8, !dbg !7714, !tbaa !3910
  %rkb_lock90 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %76, i32 0, i32 9, !dbg !7714
  %call91 = call i32 @mtx_unlock(ptr noundef %rkb_lock90), !dbg !7714
  %77 = load ptr, ptr %rkb.addr, align 8, !dbg !7715, !tbaa !3910
  call void @rd_kafka_broker_connect_auth(ptr noundef %77), !dbg !7716
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7717
  br label %cleanup, !dbg !7717

cleanup:                                          ; preds = %if.end88, %if.end87, %do.end80, %if.then
  call void @llvm.lifetime.end.p0(i64 2, ptr %retry_ApiVersion) #16, !dbg !7717
  call void @llvm.lifetime.end.p0(i64 8, ptr %api_cnt) #16, !dbg !7717
  call void @llvm.lifetime.end.p0(i64 8, ptr %apis) #16, !dbg !7717
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !7717

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_connect_auth(ptr noundef %rkb) #0 !dbg !7718 {
entry:
  %rkb.addr = alloca ptr, align 8
  %_logname = alloca [256 x i8], align 16
  %.compoundliteral = alloca %struct.rd_kafka_replyq_s, align 8
  %sasl_errstr = alloca [512 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !7720, metadata !DIExpression()), !dbg !7731
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !7732, !tbaa !3910
  %rkb_proto = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 58, !dbg !7733
  %1 = load i32, ptr %rkb_proto, align 8, !dbg !7733, !tbaa !4314
  %cmp = icmp eq i32 %1, 2, !dbg !7734
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7735

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !7736, !tbaa !3910
  %rkb_proto1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 58, !dbg !7737
  %3 = load i32, ptr %rkb_proto1, align 8, !dbg !7737, !tbaa !4314
  %cmp2 = icmp eq i32 %3, 3, !dbg !7738
  br i1 %cmp2, label %if.then, label %if.end42, !dbg !7739

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !7740

do.body:                                          ; preds = %if.then
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !7741, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 32, !dbg !7741
  %5 = load ptr, ptr %rkb_rk, align 8, !dbg !7741, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 18, !dbg !7741
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !7741
  %6 = load i32, ptr %debug, align 8, !dbg !7741, !tbaa !4140
  %and = and i32 %6, 514, !dbg !7741
  %conv = sext i32 %and to i64, !dbg !7741
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7741
  %tobool = icmp ne i64 %expval, 0, !dbg !7741
  br i1 %tobool, label %if.then3, label %if.end, !dbg !7742

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !7743

do.body4:                                         ; preds = %if.then3
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !7744
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !7721, metadata !DIExpression()), !dbg !7744
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !7744, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 49, !dbg !7744
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !7744
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7744
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !7744, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 48, !dbg !7744
  %9 = load ptr, ptr %rkb_logname, align 8, !dbg !7744, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %9, i64 noundef 256), !dbg !7744
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !7744, !tbaa !3910
  %rkb_logname_lock5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 49, !dbg !7744
  %call6 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock5), !dbg !7744
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !7744, !tbaa !3910
  %rkb_rk7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 32, !dbg !7744
  %12 = load ptr, ptr %rkb_rk7, align 8, !dbg !7744, !tbaa !4139
  %rk_conf8 = getelementptr inbounds %struct.rd_kafka_s, ptr %12, i32 0, i32 18, !dbg !7744
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !7744, !tbaa !3910
  %rkb_rk9 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 32, !dbg !7744
  %14 = load ptr, ptr %rkb_rk9, align 8, !dbg !7744, !tbaa !4139
  %arraydecay10 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7744
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !7744, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 19, !dbg !7744
  %16 = load i32, ptr %rkb_state, align 4, !dbg !7744, !tbaa !4130
  %idxprom = zext i32 %16 to i64, !dbg !7744
  %arrayidx = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom, !dbg !7744
  %17 = load ptr, ptr %arrayidx, align 8, !dbg !7744, !tbaa !3910
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !7744, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 23, !dbg !7744
  %19 = load i32, ptr %rkb_features, align 4, !dbg !7744, !tbaa !3938
  %and11 = and i32 %19, 32, !dbg !7744
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7744
  %20 = zext i1 %tobool12 to i64, !dbg !7744
  %cond = select i1 %tobool12, ptr @.str.85, ptr @.str.207, !dbg !7744
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf8, ptr noundef %14, ptr noundef %arraydecay10, i32 noundef 7, i32 noundef 514, ptr noundef @.str.205, ptr noundef @.str.206, ptr noundef %17, ptr noundef %cond), !dbg !7744
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !7743
  br label %do.end, !dbg !7744

do.end:                                           ; preds = %do.body4
  br label %if.end, !dbg !7743

if.end:                                           ; preds = %do.end, %do.body
  br label %do.end13, !dbg !7742

do.end13:                                         ; preds = %if.end
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !7745, !tbaa !3910
  %rkb_state14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 19, !dbg !7746
  %22 = load i32, ptr %rkb_state14, align 4, !dbg !7746, !tbaa !4130
  %cmp15 = icmp ne i32 %22, 9, !dbg !7747
  br i1 %cmp15, label %land.lhs.true, label %if.else, !dbg !7748

land.lhs.true:                                    ; preds = %do.end13
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !7749, !tbaa !3910
  %rkb_features17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 23, !dbg !7750
  %24 = load i32, ptr %rkb_features17, align 4, !dbg !7750, !tbaa !3938
  %and18 = and i32 %24, 32, !dbg !7751
  %tobool19 = icmp ne i32 %and18, 0, !dbg !7751
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !7752

if.then20:                                        ; preds = %land.lhs.true
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !7753, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 9, !dbg !7753
  %call21 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !7753
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !7755, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %26, i32 noundef 9), !dbg !7756
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !7757, !tbaa !3910
  %rkb_lock22 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 9, !dbg !7757
  %call23 = call i32 @mtx_unlock(ptr noundef %rkb_lock22), !dbg !7757
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !7758, !tbaa !3910
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !7759, !tbaa !3910
  %rkb_rk24 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 32, !dbg !7760
  %30 = load ptr, ptr %rkb_rk24, align 8, !dbg !7760, !tbaa !4139
  %rk_conf25 = getelementptr inbounds %struct.rd_kafka_s, ptr %30, i32 0, i32 18, !dbg !7761
  %sasl = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf25, i32 0, i32 41, !dbg !7762
  %mechanisms = getelementptr inbounds %struct.anon.15, ptr %sasl, i32 0, i32 2, !dbg !7763
  %31 = load ptr, ptr %mechanisms, align 8, !dbg !7763, !tbaa !7764
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %.compoundliteral, i32 0, i32 0, !dbg !7765
  store ptr null, ptr %q, align 8, !dbg !7765, !tbaa !7405
  %version = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %.compoundliteral, i32 0, i32 1, !dbg !7765
  store i32 0, ptr %version, align 8, !dbg !7765, !tbaa !7406
  %32 = getelementptr inbounds { ptr, i32 }, ptr %.compoundliteral, i32 0, i32 0, !dbg !7766
  %33 = load ptr, ptr %32, align 8, !dbg !7766
  %34 = getelementptr inbounds { ptr, i32 }, ptr %.compoundliteral, i32 0, i32 1, !dbg !7766
  %35 = load i32, ptr %34, align 8, !dbg !7766
  call void @rd_kafka_SaslHandshakeRequest(ptr noundef %28, ptr noundef %31, ptr %33, i32 %35, ptr noundef @rd_kafka_broker_handle_SaslHandshake, ptr noundef null), !dbg !7766
  br label %if.end41, !dbg !7767

if.else:                                          ; preds = %land.lhs.true, %do.end13
  call void @llvm.lifetime.start.p0(i64 512, ptr %sasl_errstr) #16, !dbg !7768
  tail call void @llvm.dbg.declare(metadata ptr %sasl_errstr, metadata !7728, metadata !DIExpression()), !dbg !7769
  %36 = load ptr, ptr %rkb.addr, align 8, !dbg !7770, !tbaa !3910
  %rkb_lock26 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 9, !dbg !7770
  %call27 = call i32 @mtx_lock(ptr noundef %rkb_lock26), !dbg !7770
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !7771, !tbaa !3910
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !7772, !tbaa !3910
  %rkb_features28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 23, !dbg !7773
  %39 = load i32, ptr %rkb_features28, align 4, !dbg !7773, !tbaa !3938
  %and29 = and i32 %39, 4096, !dbg !7774
  %tobool30 = icmp ne i32 %and29, 0, !dbg !7775
  %40 = zext i1 %tobool30 to i64, !dbg !7775
  %cond31 = select i1 %tobool30, i32 10, i32 5, !dbg !7775
  call void @rd_kafka_broker_set_state(ptr noundef %37, i32 noundef %cond31), !dbg !7776
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !7777, !tbaa !3910
  %rkb_lock32 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 9, !dbg !7777
  %call33 = call i32 @mtx_unlock(ptr noundef %rkb_lock32), !dbg !7777
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !7778, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 5, !dbg !7780
  %43 = load ptr, ptr %rkb_transport, align 8, !dbg !7780, !tbaa !4518
  %arraydecay34 = getelementptr inbounds [512 x i8], ptr %sasl_errstr, i64 0, i64 0, !dbg !7781
  %call35 = call i32 @rd_kafka_sasl_client_new(ptr noundef %43, ptr noundef %arraydecay34, i64 noundef 512), !dbg !7782
  %cmp36 = icmp eq i32 %call35, -1, !dbg !7783
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !7784

if.then38:                                        ; preds = %if.else
  %44 = load ptr, ptr %rkb.addr, align 8, !dbg !7785, !tbaa !3910
  %arraydecay39 = getelementptr inbounds [512 x i8], ptr %sasl_errstr, i64 0, i64 0, !dbg !7787
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %44, i32 noundef 3, i32 noundef -169, ptr noundef @.str.208, ptr noundef %arraydecay39), !dbg !7788
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7789

if.end40:                                         ; preds = %if.else
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7790
  br label %cleanup, !dbg !7790

cleanup:                                          ; preds = %if.end40, %if.then38
  call void @llvm.lifetime.end.p0(i64 512, ptr %sasl_errstr) #16, !dbg !7790
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end41

if.end41:                                         ; preds = %cleanup.cont, %if.then20
  br label %return, !dbg !7791

if.end42:                                         ; preds = %lor.lhs.false
  %45 = load ptr, ptr %rkb.addr, align 8, !dbg !7792, !tbaa !3910
  call void @rd_kafka_broker_connect_up(ptr noundef %45), !dbg !7793
  br label %return, !dbg !7794

return:                                           ; preds = %if.end42, %if.end41, %cleanup
  ret void, !dbg !7794

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_send(ptr noundef %rkb) #0 !dbg !7795 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %rkbuf = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %r = alloca i64, align 8
  %pre_of = alloca i64, align 8
  %now = alloca i64, align 8
  %err = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %_logname74 = alloca [256 x i8], align 16
  %_logname156 = alloca [256 x i8], align 16
  %_logname194 = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !7797, metadata !DIExpression()), !dbg !7833
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkbuf) #16, !dbg !7834
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf, metadata !7798, metadata !DIExpression()), !dbg !7835
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !7836
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !7799, metadata !DIExpression()), !dbg !7837
  store i32 0, ptr %cnt, align 4, !dbg !7837, !tbaa !3959
  br label %do.body, !dbg !7838

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !7839, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !7839
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !7839, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %1), !dbg !7839
  %tobool = icmp ne i32 %call, 0, !dbg !7839
  %lnot = xor i1 %tobool, true, !dbg !7839
  %lnot.ext = zext i1 %lnot to i32, !dbg !7839
  %conv = sext i32 %lnot.ext to i64, !dbg !7839
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7839
  %tobool1 = icmp ne i64 %expval, 0, !dbg !7839
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7842

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !7839, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !7839
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !7839, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 2658, ptr noundef @__FUNCTION__.rd_kafka_send, ptr noundef %3, ptr noundef @.str.21) #17, !dbg !7839
  unreachable, !dbg !7839

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !7842

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7842

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !7843

while.cond:                                       ; preds = %cleanup.cont260, %cleanup256, %do.end
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !7844, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 19, !dbg !7845
  %5 = load i32, ptr %rkb_state, align 4, !dbg !7845, !tbaa !4130
  %cmp = icmp uge i32 %5, 6, !dbg !7846
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7847

land.lhs.true:                                    ; preds = %while.cond
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !7848, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 36, !dbg !7848
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_waitresps, i32 0, i32 1, !dbg !7848
  %call3 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !7848
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !7849, !tbaa !3910
  %rkb_max_inflight = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 34, !dbg !7850
  %8 = load i32, ptr %rkb_max_inflight, align 8, !dbg !7850, !tbaa !7315
  %cmp4 = icmp slt i32 %call3, %8, !dbg !7851
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !7852

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !7853, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 35, !dbg !7853
  %rkbq_bufs = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs, i32 0, i32 0, !dbg !7853
  %tqh_first = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs, i32 0, i32 0, !dbg !7853
  %10 = load ptr, ptr %tqh_first, align 8, !dbg !7853, !tbaa !5348
  store ptr %10, ptr %rkbuf, align 8, !dbg !7854, !tbaa !3910
  %tobool6 = icmp ne ptr %10, null, !dbg !7852
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %tobool6, %land.rhs ], !dbg !7855
  br i1 %11, label %while.body, label %while.end, !dbg !7843

while.body:                                       ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #16, !dbg !7856
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !7800, metadata !DIExpression()), !dbg !7857
  call void @llvm.lifetime.start.p0(i64 8, ptr %pre_of) #16, !dbg !7858
  tail call void @llvm.dbg.declare(metadata ptr %pre_of, metadata !7802, metadata !DIExpression()), !dbg !7859
  %12 = load ptr, ptr %rkbuf, align 8, !dbg !7860, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %12, i32 0, i32 6, !dbg !7861
  %call7 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader), !dbg !7862
  store i64 %call7, ptr %pre_of, align 8, !dbg !7859, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !7863
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !7803, metadata !DIExpression()), !dbg !7864
  %13 = load ptr, ptr %rkbuf, align 8, !dbg !7865, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %13, i32 0, i32 3, !dbg !7865
  %14 = load i32, ptr %rkbuf_flags, align 8, !dbg !7865, !tbaa !5243
  %and = and i32 %14, 128, !dbg !7865
  %conv8 = sext i32 %and to i64, !dbg !7865
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0), !dbg !7865
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !7865
  br i1 %tobool10, label %if.then11, label %if.end54, !dbg !7866

if.then11:                                        ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %err) #16, !dbg !7867
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !7804, metadata !DIExpression()), !dbg !7868
  %15 = load ptr, ptr %rkbuf, align 8, !dbg !7869, !tbaa !3910
  %rkbuf_make_req_cb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %15, i32 0, i32 17, !dbg !7870
  %16 = load ptr, ptr %rkbuf_make_req_cb, align 8, !dbg !7870, !tbaa !7871
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !7872, !tbaa !3910
  %18 = load ptr, ptr %rkbuf, align 8, !dbg !7873, !tbaa !3910
  %19 = load ptr, ptr %rkbuf, align 8, !dbg !7874, !tbaa !3910
  %rkbuf_make_opaque = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %19, i32 0, i32 18, !dbg !7875
  %20 = load ptr, ptr %rkbuf_make_opaque, align 8, !dbg !7875, !tbaa !7876
  %call12 = call i32 %16(ptr noundef %17, ptr noundef %18, ptr noundef %20), !dbg !7869
  store i32 %call12, ptr %err, align 4, !dbg !7877, !tbaa !4126
  %21 = load ptr, ptr %rkbuf, align 8, !dbg !7878, !tbaa !3910
  %rkbuf_flags13 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %21, i32 0, i32 3, !dbg !7879
  %22 = load i32, ptr %rkbuf_flags13, align 8, !dbg !7880, !tbaa !5243
  %and14 = and i32 %22, -129, !dbg !7880
  store i32 %and14, ptr %rkbuf_flags13, align 8, !dbg !7880, !tbaa !5243
  %23 = load ptr, ptr %rkbuf, align 8, !dbg !7881, !tbaa !3910
  %rkbuf_free_make_opaque_cb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %23, i32 0, i32 19, !dbg !7883
  %24 = load ptr, ptr %rkbuf_free_make_opaque_cb, align 8, !dbg !7883, !tbaa !7884
  %tobool15 = icmp ne ptr %24, null, !dbg !7881
  br i1 %tobool15, label %land.lhs.true16, label %if.end23, !dbg !7885

land.lhs.true16:                                  ; preds = %if.then11
  %25 = load ptr, ptr %rkbuf, align 8, !dbg !7886, !tbaa !3910
  %rkbuf_make_opaque17 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %25, i32 0, i32 18, !dbg !7887
  %26 = load ptr, ptr %rkbuf_make_opaque17, align 8, !dbg !7887, !tbaa !7876
  %tobool18 = icmp ne ptr %26, null, !dbg !7886
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !7888

if.then19:                                        ; preds = %land.lhs.true16
  %27 = load ptr, ptr %rkbuf, align 8, !dbg !7889, !tbaa !3910
  %rkbuf_free_make_opaque_cb20 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %27, i32 0, i32 19, !dbg !7891
  %28 = load ptr, ptr %rkbuf_free_make_opaque_cb20, align 8, !dbg !7891, !tbaa !7884
  %29 = load ptr, ptr %rkbuf, align 8, !dbg !7892, !tbaa !3910
  %rkbuf_make_opaque21 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %29, i32 0, i32 18, !dbg !7893
  %30 = load ptr, ptr %rkbuf_make_opaque21, align 8, !dbg !7893, !tbaa !7876
  call void %28(ptr noundef %30), !dbg !7889
  %31 = load ptr, ptr %rkbuf, align 8, !dbg !7894, !tbaa !3910
  %rkbuf_make_opaque22 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %31, i32 0, i32 18, !dbg !7895
  store ptr null, ptr %rkbuf_make_opaque22, align 8, !dbg !7896, !tbaa !7876
  br label %if.end23, !dbg !7897

if.end23:                                         ; preds = %if.then19, %land.lhs.true16, %if.then11
  %32 = load i32, ptr %err, align 4, !dbg !7898, !tbaa !4126
  %conv24 = sext i32 %32 to i64, !dbg !7898
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0), !dbg !7898
  %tobool26 = icmp ne i64 %expval25, 0, !dbg !7898
  br i1 %tobool26, label %if.then27, label %if.end52, !dbg !7899

if.then27:                                        ; preds = %if.end23
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !7900, !tbaa !3910
  %rkb_outbufs28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 35, !dbg !7901
  %34 = load ptr, ptr %rkbuf, align 8, !dbg !7902, !tbaa !3910
  call void @rd_kafka_bufq_deq(ptr noundef %rkb_outbufs28, ptr noundef %34), !dbg !7903
  br label %do.body29, !dbg !7904

do.body29:                                        ; preds = %if.then27
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !7905, !tbaa !3910
  %rkb_rk30 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 32, !dbg !7905
  %36 = load ptr, ptr %rkb_rk30, align 8, !dbg !7905, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %36, i32 0, i32 18, !dbg !7905
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !7905
  %37 = load i32, ptr %debug, align 8, !dbg !7905, !tbaa !4140
  %and31 = and i32 %37, 130, !dbg !7905
  %conv32 = sext i32 %and31 to i64, !dbg !7905
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !7905
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !7905
  br i1 %tobool34, label %if.then35, label %if.end48, !dbg !7906

if.then35:                                        ; preds = %do.body29
  br label %do.body36, !dbg !7907

do.body36:                                        ; preds = %if.then35
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !7908
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !7807, metadata !DIExpression()), !dbg !7908
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !7908, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 49, !dbg !7908
  %call37 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !7908
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7908
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !7908, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 48, !dbg !7908
  %40 = load ptr, ptr %rkb_logname, align 8, !dbg !7908, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %40, i64 noundef 256), !dbg !7908
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !7908, !tbaa !3910
  %rkb_logname_lock38 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 49, !dbg !7908
  %call39 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock38), !dbg !7908
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !7908, !tbaa !3910
  %rkb_rk40 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 32, !dbg !7908
  %43 = load ptr, ptr %rkb_rk40, align 8, !dbg !7908, !tbaa !4139
  %rk_conf41 = getelementptr inbounds %struct.rd_kafka_s, ptr %43, i32 0, i32 18, !dbg !7908
  %44 = load ptr, ptr %rkb.addr, align 8, !dbg !7908, !tbaa !3910
  %rkb_rk42 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %44, i32 0, i32 32, !dbg !7908
  %45 = load ptr, ptr %rkb_rk42, align 8, !dbg !7908, !tbaa !4139
  %arraydecay43 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !7908
  %46 = load ptr, ptr %rkbuf, align 8, !dbg !7908, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %46, i32 0, i32 10, !dbg !7908
  %ApiKey = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !7908
  %47 = load i16, ptr %ApiKey, align 4, !dbg !7908, !tbaa !5392
  %call44 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %47), !dbg !7908
  %48 = load i32, ptr %err, align 4, !dbg !7908, !tbaa !4126
  %call45 = call ptr @rd_kafka_err2str(i32 noundef %48), !dbg !7908
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf41, ptr noundef %45, ptr noundef %arraydecay43, i32 noundef 7, i32 noundef 130, ptr noundef @.str.43, ptr noundef @.str.44, ptr noundef %call44, ptr noundef %call45), !dbg !7908
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !7907
  br label %do.cond46, !dbg !7908

do.cond46:                                        ; preds = %do.body36
  br label %do.end47, !dbg !7908

do.end47:                                         ; preds = %do.cond46
  br label %if.end48, !dbg !7907

if.end48:                                         ; preds = %do.end47, %do.body29
  br label %do.cond49, !dbg !7906

do.cond49:                                        ; preds = %if.end48
  br label %do.end50, !dbg !7906

do.end50:                                         ; preds = %do.cond49
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !7909, !tbaa !3910
  %rkb_rk51 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 32, !dbg !7910
  %50 = load ptr, ptr %rkb_rk51, align 8, !dbg !7910, !tbaa !4139
  %51 = load ptr, ptr %rkb.addr, align 8, !dbg !7911, !tbaa !3910
  %52 = load i32, ptr %err, align 4, !dbg !7912, !tbaa !4126
  %53 = load ptr, ptr %rkbuf, align 8, !dbg !7913, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %50, ptr noundef %51, i32 noundef %52, ptr noundef null, ptr noundef %53), !dbg !7914
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7915, !llvm.loop !7916

if.end52:                                         ; preds = %if.end23
  %54 = load ptr, ptr %rkb.addr, align 8, !dbg !7918, !tbaa !3910
  %rkb_rk53 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %54, i32 0, i32 32, !dbg !7919
  %55 = load ptr, ptr %rkb_rk53, align 8, !dbg !7919, !tbaa !4139
  %56 = load ptr, ptr %rkbuf, align 8, !dbg !7920, !tbaa !3910
  call void @rd_kafka_buf_finalize(ptr noundef %55, ptr noundef %56), !dbg !7921
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7922
  br label %cleanup, !dbg !7922

cleanup:                                          ; preds = %if.end52, %do.end50
  call void @llvm.lifetime.end.p0(i64 4, ptr %err) #16, !dbg !7922
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup256 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end54, !dbg !7923

if.end54:                                         ; preds = %cleanup.cont, %while.body
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !7924, !tbaa !3910
  %58 = load ptr, ptr %rkbuf, align 8, !dbg !7924, !tbaa !3910
  %call55 = call i32 @rd_kafka_broker_request_supported(ptr noundef %57, ptr noundef %58), !dbg !7924
  %tobool56 = icmp ne i32 %call55, 0, !dbg !7924
  %lnot57 = xor i1 %tobool56, true, !dbg !7924
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !7924
  %conv59 = sext i32 %lnot.ext58 to i64, !dbg !7924
  %expval60 = call i64 @llvm.expect.i64(i64 %conv59, i64 0), !dbg !7924
  %tobool61 = icmp ne i64 %expval60, 0, !dbg !7924
  br i1 %tobool61, label %if.then62, label %if.end96, !dbg !7925

if.then62:                                        ; preds = %if.end54
  %59 = load ptr, ptr %rkb.addr, align 8, !dbg !7926, !tbaa !3910
  %rkb_outbufs63 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 35, !dbg !7927
  %60 = load ptr, ptr %rkbuf, align 8, !dbg !7928, !tbaa !3910
  call void @rd_kafka_bufq_deq(ptr noundef %rkb_outbufs63, ptr noundef %60), !dbg !7929
  br label %do.body64, !dbg !7930

do.body64:                                        ; preds = %if.then62
  %61 = load ptr, ptr %rkb.addr, align 8, !dbg !7931, !tbaa !3910
  %rkb_rk65 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %61, i32 0, i32 32, !dbg !7931
  %62 = load ptr, ptr %rkb_rk65, align 8, !dbg !7931, !tbaa !4139
  %rk_conf66 = getelementptr inbounds %struct.rd_kafka_s, ptr %62, i32 0, i32 18, !dbg !7931
  %debug67 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf66, i32 0, i32 13, !dbg !7931
  %63 = load i32, ptr %debug67, align 8, !dbg !7931, !tbaa !4140
  %and68 = and i32 %63, 130, !dbg !7931
  %conv69 = sext i32 %and68 to i64, !dbg !7931
  %expval70 = call i64 @llvm.expect.i64(i64 %conv69, i64 0), !dbg !7931
  %tobool71 = icmp ne i64 %expval70, 0, !dbg !7931
  br i1 %tobool71, label %if.then72, label %if.end92, !dbg !7932

if.then72:                                        ; preds = %do.body64
  br label %do.body73, !dbg !7933

do.body73:                                        ; preds = %if.then72
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname74) #16, !dbg !7934
  tail call void @llvm.dbg.declare(metadata ptr %_logname74, metadata !7814, metadata !DIExpression()), !dbg !7934
  %64 = load ptr, ptr %rkb.addr, align 8, !dbg !7934, !tbaa !3910
  %rkb_logname_lock75 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %64, i32 0, i32 49, !dbg !7934
  %call76 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock75), !dbg !7934
  %arraydecay77 = getelementptr inbounds [256 x i8], ptr %_logname74, i64 0, i64 0, !dbg !7934
  %65 = load ptr, ptr %rkb.addr, align 8, !dbg !7934, !tbaa !3910
  %rkb_logname78 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %65, i32 0, i32 48, !dbg !7934
  %66 = load ptr, ptr %rkb_logname78, align 8, !dbg !7934, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay77, ptr noundef %66, i64 noundef 256), !dbg !7934
  %67 = load ptr, ptr %rkb.addr, align 8, !dbg !7934, !tbaa !3910
  %rkb_logname_lock79 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %67, i32 0, i32 49, !dbg !7934
  %call80 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock79), !dbg !7934
  %68 = load ptr, ptr %rkb.addr, align 8, !dbg !7934, !tbaa !3910
  %rkb_rk81 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %68, i32 0, i32 32, !dbg !7934
  %69 = load ptr, ptr %rkb_rk81, align 8, !dbg !7934, !tbaa !4139
  %rk_conf82 = getelementptr inbounds %struct.rd_kafka_s, ptr %69, i32 0, i32 18, !dbg !7934
  %70 = load ptr, ptr %rkb.addr, align 8, !dbg !7934, !tbaa !3910
  %rkb_rk83 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %70, i32 0, i32 32, !dbg !7934
  %71 = load ptr, ptr %rkb_rk83, align 8, !dbg !7934, !tbaa !4139
  %arraydecay84 = getelementptr inbounds [256 x i8], ptr %_logname74, i64 0, i64 0, !dbg !7934
  %72 = load ptr, ptr %rkbuf, align 8, !dbg !7934, !tbaa !3910
  %rkbuf_reqhdr85 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %72, i32 0, i32 10, !dbg !7934
  %ApiKey86 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr85, i32 0, i32 1, !dbg !7934
  %73 = load i16, ptr %ApiKey86, align 4, !dbg !7934, !tbaa !5392
  %call87 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %73), !dbg !7934
  %74 = load ptr, ptr %rkbuf, align 8, !dbg !7934, !tbaa !3910
  %rkbuf_reqhdr88 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %74, i32 0, i32 10, !dbg !7934
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr88, i32 0, i32 2, !dbg !7934
  %75 = load i16, ptr %ApiVersion, align 2, !dbg !7934, !tbaa !5272
  %conv89 = sext i16 %75 to i32, !dbg !7934
  %76 = load ptr, ptr %rkbuf, align 8, !dbg !7934, !tbaa !3910
  %rkbuf_totlen = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %76, i32 0, i32 8, !dbg !7934
  %77 = load i64, ptr %rkbuf_totlen, align 8, !dbg !7934, !tbaa !6704
  %78 = load ptr, ptr %rkbuf, align 8, !dbg !7934, !tbaa !3910
  %rkbuf_reshdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %78, i32 0, i32 11, !dbg !7934
  %CorrId = getelementptr inbounds %struct.rd_kafkap_reshdr, ptr %rkbuf_reshdr, i32 0, i32 1, !dbg !7934
  %79 = load i32, ptr %CorrId, align 4, !dbg !7934, !tbaa !7077
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf82, ptr noundef %71, ptr noundef %arraydecay84, i32 noundef 7, i32 noundef 130, ptr noundef @.str.45, ptr noundef @.str.46, ptr noundef %call87, i32 noundef %conv89, i64 noundef %77, i32 noundef %79), !dbg !7934
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname74) #16, !dbg !7933
  br label %do.cond90, !dbg !7934

do.cond90:                                        ; preds = %do.body73
  br label %do.end91, !dbg !7934

do.end91:                                         ; preds = %do.cond90
  br label %if.end92, !dbg !7933

if.end92:                                         ; preds = %do.end91, %do.body64
  br label %do.cond93, !dbg !7932

do.cond93:                                        ; preds = %if.end92
  br label %do.end94, !dbg !7932

do.end94:                                         ; preds = %do.cond93
  %80 = load ptr, ptr %rkb.addr, align 8, !dbg !7935, !tbaa !3910
  %rkb_rk95 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %80, i32 0, i32 32, !dbg !7936
  %81 = load ptr, ptr %rkb_rk95, align 8, !dbg !7936, !tbaa !4139
  %82 = load ptr, ptr %rkb.addr, align 8, !dbg !7937, !tbaa !3910
  %83 = load ptr, ptr %rkbuf, align 8, !dbg !7938, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %81, ptr noundef %82, i32 noundef -165, ptr noundef null, ptr noundef %83), !dbg !7939
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup256, !dbg !7940, !llvm.loop !7916

if.end96:                                         ; preds = %if.end54
  %84 = load ptr, ptr %rkbuf, align 8, !dbg !7941, !tbaa !3910
  %rkbuf_corrid = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %84, i32 0, i32 1, !dbg !7943
  %85 = load i32, ptr %rkbuf_corrid, align 8, !dbg !7943, !tbaa !5361
  %cmp97 = icmp eq i32 %85, 0, !dbg !7944
  br i1 %cmp97, label %if.then101, label %lor.lhs.false, !dbg !7945

lor.lhs.false:                                    ; preds = %if.end96
  %86 = load ptr, ptr %rkbuf, align 8, !dbg !7946, !tbaa !3910
  %rkbuf_connid = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %86, i32 0, i32 7, !dbg !7947
  %87 = load i32, ptr %rkbuf_connid, align 8, !dbg !7947, !tbaa !7948
  %88 = load ptr, ptr %rkb.addr, align 8, !dbg !7949, !tbaa !3910
  %rkb_connid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %88, i32 0, i32 7, !dbg !7950
  %89 = load i32, ptr %rkb_connid, align 4, !dbg !7950, !tbaa !7358
  %cmp99 = icmp ne i32 %87, %89, !dbg !7951
  br i1 %cmp99, label %if.then101, label %if.else112, !dbg !7952

if.then101:                                       ; preds = %lor.lhs.false, %if.end96
  %90 = load ptr, ptr %rkbuf, align 8, !dbg !7953, !tbaa !3910
  %rkbuf_reader102 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %90, i32 0, i32 6, !dbg !7953
  %call103 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader102), !dbg !7953
  %cmp104 = icmp eq i64 %call103, 0, !dbg !7953
  br i1 %cmp104, label %if.then106, label %if.else, !dbg !7957

if.then106:                                       ; preds = %if.then101
  br label %if.end107, !dbg !7957

if.else:                                          ; preds = %if.then101
  call void @__assert_fail(ptr noundef @.str.47, ptr noundef @.str.20, i32 noundef 2732, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_send) #18, !dbg !7953
  unreachable, !dbg !7953

if.end107:                                        ; preds = %if.then106
  %91 = load ptr, ptr %rkb.addr, align 8, !dbg !7958, !tbaa !3910
  %rkb_corrid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %91, i32 0, i32 6, !dbg !7959
  %92 = load i32, ptr %rkb_corrid, align 8, !dbg !7960, !tbaa !7961
  %inc = add i32 %92, 1, !dbg !7960
  store i32 %inc, ptr %rkb_corrid, align 8, !dbg !7960, !tbaa !7961
  %93 = load ptr, ptr %rkbuf, align 8, !dbg !7962, !tbaa !3910
  %rkbuf_corrid108 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %93, i32 0, i32 1, !dbg !7963
  store i32 %inc, ptr %rkbuf_corrid108, align 8, !dbg !7964, !tbaa !5361
  %94 = load ptr, ptr %rkbuf, align 8, !dbg !7965, !tbaa !3910
  %95 = load ptr, ptr %rkbuf, align 8, !dbg !7966, !tbaa !3910
  %rkbuf_corrid109 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %95, i32 0, i32 1, !dbg !7967
  %96 = load i32, ptr %rkbuf_corrid109, align 8, !dbg !7967, !tbaa !5361
  call void @rd_kafka_buf_update_i32(ptr noundef %94, i64 noundef 8, i32 noundef %96), !dbg !7968
  %97 = load ptr, ptr %rkb.addr, align 8, !dbg !7969, !tbaa !3910
  %rkb_connid110 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %97, i32 0, i32 7, !dbg !7970
  %98 = load i32, ptr %rkb_connid110, align 4, !dbg !7970, !tbaa !7358
  %99 = load ptr, ptr %rkbuf, align 8, !dbg !7971, !tbaa !3910
  %rkbuf_connid111 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %99, i32 0, i32 7, !dbg !7972
  store i32 %98, ptr %rkbuf_connid111, align 8, !dbg !7973, !tbaa !7948
  br label %if.end131, !dbg !7974

if.else112:                                       ; preds = %lor.lhs.false
  %100 = load i64, ptr %pre_of, align 8, !dbg !7975, !tbaa !4039
  %cmp113 = icmp ugt i64 %100, 12, !dbg !7977
  br i1 %cmp113, label %if.then115, label %if.end130, !dbg !7978

if.then115:                                       ; preds = %if.else112
  br label %do.body116, !dbg !7979

do.body116:                                       ; preds = %if.then115
  %101 = load ptr, ptr %rkbuf, align 8, !dbg !7981, !tbaa !3910
  %rkbuf_connid117 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %101, i32 0, i32 7, !dbg !7981
  %102 = load i32, ptr %rkbuf_connid117, align 8, !dbg !7981, !tbaa !7948
  %103 = load ptr, ptr %rkb.addr, align 8, !dbg !7981, !tbaa !3910
  %rkb_connid118 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %103, i32 0, i32 7, !dbg !7981
  %104 = load i32, ptr %rkb_connid118, align 4, !dbg !7981, !tbaa !7358
  %cmp119 = icmp eq i32 %102, %104, !dbg !7981
  %lnot121 = xor i1 %cmp119, true, !dbg !7981
  %lnot.ext122 = zext i1 %lnot121 to i32, !dbg !7981
  %conv123 = sext i32 %lnot.ext122 to i64, !dbg !7981
  %expval124 = call i64 @llvm.expect.i64(i64 %conv123, i64 0), !dbg !7981
  %tobool125 = icmp ne i64 %expval124, 0, !dbg !7981
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !7984

if.then126:                                       ; preds = %do.body116
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 2739, ptr noundef @__FUNCTION__.rd_kafka_send, ptr noundef null, ptr noundef @.str.48) #17, !dbg !7981
  unreachable, !dbg !7981

if.end127:                                        ; preds = %do.body116
  br label %do.cond128, !dbg !7984

do.cond128:                                       ; preds = %if.end127
  br label %do.end129, !dbg !7984

do.end129:                                        ; preds = %do.cond128
  br label %if.end130, !dbg !7985

if.end130:                                        ; preds = %do.end129, %if.else112
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.end107
  %105 = load ptr, ptr %rkb.addr, align 8, !dbg !7986, !tbaa !3910
  %106 = load ptr, ptr %rkbuf, align 8, !dbg !7988, !tbaa !3910
  %rkbuf_reader132 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %106, i32 0, i32 6, !dbg !7989
  %call133 = call i64 @rd_kafka_broker_send(ptr noundef %105, ptr noundef %rkbuf_reader132), !dbg !7990
  store i64 %call133, ptr %r, align 8, !dbg !7991, !tbaa !4039
  %cmp134 = icmp eq i64 %call133, -1, !dbg !7992
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !7993

if.then136:                                       ; preds = %if.end131
  store i32 -1, ptr %retval, align 4, !dbg !7994
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup256, !dbg !7994

if.end137:                                        ; preds = %if.end131
  %call138 = call i64 @rd_clock(), !dbg !7995
  store i64 %call138, ptr %now, align 8, !dbg !7996, !tbaa !4039
  %107 = load ptr, ptr %rkb.addr, align 8, !dbg !7997, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %107, i32 0, i32 28, !dbg !7998
  %ts_send = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 16, !dbg !7999
  %108 = load i64, ptr %now, align 8, !dbg !8000, !tbaa !4039
  %call139 = call i64 @rd_atomic64_set(ptr noundef %ts_send, i64 noundef %108), !dbg !8001
  %109 = load ptr, ptr %rkbuf, align 8, !dbg !8002, !tbaa !3910
  %rkbuf_reader140 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %109, i32 0, i32 6, !dbg !8002
  %end = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader140, i32 0, i32 4, !dbg !8002
  %110 = load i64, ptr %end, align 8, !dbg !8002, !tbaa !6731
  %111 = load ptr, ptr %rkbuf, align 8, !dbg !8002, !tbaa !3910
  %rkbuf_reader141 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %111, i32 0, i32 6, !dbg !8002
  %call142 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader141), !dbg !8002
  %sub = sub i64 %110, %call142, !dbg !8002
  %cmp143 = icmp ugt i64 %sub, 0, !dbg !8003
  br i1 %cmp143, label %if.then145, label %if.end183, !dbg !8004

if.then145:                                       ; preds = %if.end137
  br label %do.body146, !dbg !8005

do.body146:                                       ; preds = %if.then145
  %112 = load ptr, ptr %rkb.addr, align 8, !dbg !8006, !tbaa !3910
  %rkb_rk147 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %112, i32 0, i32 32, !dbg !8006
  %113 = load ptr, ptr %rkb_rk147, align 8, !dbg !8006, !tbaa !4139
  %rk_conf148 = getelementptr inbounds %struct.rd_kafka_s, ptr %113, i32 0, i32 18, !dbg !8006
  %debug149 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf148, i32 0, i32 13, !dbg !8006
  %114 = load i32, ptr %debug149, align 8, !dbg !8006, !tbaa !4140
  %and150 = and i32 %114, 128, !dbg !8006
  %conv151 = sext i32 %and150 to i64, !dbg !8006
  %expval152 = call i64 @llvm.expect.i64(i64 %conv151, i64 0), !dbg !8006
  %tobool153 = icmp ne i64 %expval152, 0, !dbg !8006
  br i1 %tobool153, label %if.then154, label %if.end180, !dbg !8007

if.then154:                                       ; preds = %do.body146
  br label %do.body155, !dbg !8008

do.body155:                                       ; preds = %if.then154
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname156) #16, !dbg !8009
  tail call void @llvm.dbg.declare(metadata ptr %_logname156, metadata !7821, metadata !DIExpression()), !dbg !8009
  %115 = load ptr, ptr %rkb.addr, align 8, !dbg !8009, !tbaa !3910
  %rkb_logname_lock157 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %115, i32 0, i32 49, !dbg !8009
  %call158 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock157), !dbg !8009
  %arraydecay159 = getelementptr inbounds [256 x i8], ptr %_logname156, i64 0, i64 0, !dbg !8009
  %116 = load ptr, ptr %rkb.addr, align 8, !dbg !8009, !tbaa !3910
  %rkb_logname160 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %116, i32 0, i32 48, !dbg !8009
  %117 = load ptr, ptr %rkb_logname160, align 8, !dbg !8009, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay159, ptr noundef %117, i64 noundef 256), !dbg !8009
  %118 = load ptr, ptr %rkb.addr, align 8, !dbg !8009, !tbaa !3910
  %rkb_logname_lock161 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %118, i32 0, i32 49, !dbg !8009
  %call162 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock161), !dbg !8009
  %119 = load ptr, ptr %rkb.addr, align 8, !dbg !8009, !tbaa !3910
  %rkb_rk163 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %119, i32 0, i32 32, !dbg !8009
  %120 = load ptr, ptr %rkb_rk163, align 8, !dbg !8009, !tbaa !4139
  %rk_conf164 = getelementptr inbounds %struct.rd_kafka_s, ptr %120, i32 0, i32 18, !dbg !8009
  %121 = load ptr, ptr %rkb.addr, align 8, !dbg !8009, !tbaa !3910
  %rkb_rk165 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %121, i32 0, i32 32, !dbg !8009
  %122 = load ptr, ptr %rkb_rk165, align 8, !dbg !8009, !tbaa !4139
  %arraydecay166 = getelementptr inbounds [256 x i8], ptr %_logname156, i64 0, i64 0, !dbg !8009
  %123 = load ptr, ptr %rkbuf, align 8, !dbg !8009, !tbaa !3910
  %rkbuf_reqhdr167 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %123, i32 0, i32 10, !dbg !8009
  %ApiKey168 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr167, i32 0, i32 1, !dbg !8009
  %124 = load i16, ptr %ApiKey168, align 4, !dbg !8009, !tbaa !5392
  %call169 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %124), !dbg !8009
  %125 = load ptr, ptr %rkbuf, align 8, !dbg !8009, !tbaa !3910
  %rkbuf_reqhdr170 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %125, i32 0, i32 10, !dbg !8009
  %ApiVersion171 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr170, i32 0, i32 2, !dbg !8009
  %126 = load i16, ptr %ApiVersion171, align 2, !dbg !8009, !tbaa !5272
  %conv172 = sext i16 %126 to i32, !dbg !8009
  %127 = load i64, ptr %pre_of, align 8, !dbg !8009, !tbaa !4039
  %128 = load i64, ptr %r, align 8, !dbg !8009, !tbaa !4039
  %129 = load ptr, ptr %rkbuf, align 8, !dbg !8009, !tbaa !3910
  %rkbuf_reader173 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %129, i32 0, i32 6, !dbg !8009
  %end174 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader173, i32 0, i32 4, !dbg !8009
  %130 = load i64, ptr %end174, align 8, !dbg !8009, !tbaa !6731
  %131 = load ptr, ptr %rkbuf, align 8, !dbg !8009, !tbaa !3910
  %rkbuf_reader175 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %131, i32 0, i32 6, !dbg !8009
  %start = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader175, i32 0, i32 3, !dbg !8009
  %132 = load i64, ptr %start, align 8, !dbg !8009, !tbaa !6739
  %sub176 = sub i64 %130, %132, !dbg !8009
  %133 = load ptr, ptr %rkbuf, align 8, !dbg !8009, !tbaa !3910
  %rkbuf_corrid177 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %133, i32 0, i32 1, !dbg !8009
  %134 = load i32, ptr %rkbuf_corrid177, align 8, !dbg !8009, !tbaa !5361
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf164, ptr noundef %122, ptr noundef %arraydecay166, i32 noundef 7, i32 noundef 128, ptr noundef @.str.49, ptr noundef @.str.50, ptr noundef %call169, i32 noundef %conv172, i64 noundef %127, i64 noundef %128, i64 noundef %sub176, i32 noundef %134), !dbg !8009
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname156) #16, !dbg !8008
  br label %do.cond178, !dbg !8009

do.cond178:                                       ; preds = %do.body155
  br label %do.end179, !dbg !8009

do.end179:                                        ; preds = %do.cond178
  br label %if.end180, !dbg !8008

if.end180:                                        ; preds = %do.end179, %do.body146
  br label %do.cond181, !dbg !8007

do.cond181:                                       ; preds = %if.end180
  br label %do.end182, !dbg !8007

do.end182:                                        ; preds = %do.cond181
  store i32 0, ptr %retval, align 4, !dbg !8010
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup256, !dbg !8010

if.end183:                                        ; preds = %if.end137
  br label %do.body184, !dbg !8011

do.body184:                                       ; preds = %if.end183
  %135 = load ptr, ptr %rkb.addr, align 8, !dbg !8012, !tbaa !3910
  %rkb_rk185 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %135, i32 0, i32 32, !dbg !8012
  %136 = load ptr, ptr %rkb_rk185, align 8, !dbg !8012, !tbaa !4139
  %rk_conf186 = getelementptr inbounds %struct.rd_kafka_s, ptr %136, i32 0, i32 18, !dbg !8012
  %debug187 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf186, i32 0, i32 13, !dbg !8012
  %137 = load i32, ptr %debug187, align 8, !dbg !8012, !tbaa !4140
  %and188 = and i32 %137, 128, !dbg !8012
  %conv189 = sext i32 %and188 to i64, !dbg !8012
  %expval190 = call i64 @llvm.expect.i64(i64 %conv189, i64 0), !dbg !8012
  %tobool191 = icmp ne i64 %expval190, 0, !dbg !8012
  br i1 %tobool191, label %if.then192, label %if.end219, !dbg !8013

if.then192:                                       ; preds = %do.body184
  br label %do.body193, !dbg !8014

do.body193:                                       ; preds = %if.then192
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname194) #16, !dbg !8015
  tail call void @llvm.dbg.declare(metadata ptr %_logname194, metadata !7828, metadata !DIExpression()), !dbg !8015
  %138 = load ptr, ptr %rkb.addr, align 8, !dbg !8015, !tbaa !3910
  %rkb_logname_lock195 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %138, i32 0, i32 49, !dbg !8015
  %call196 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock195), !dbg !8015
  %arraydecay197 = getelementptr inbounds [256 x i8], ptr %_logname194, i64 0, i64 0, !dbg !8015
  %139 = load ptr, ptr %rkb.addr, align 8, !dbg !8015, !tbaa !3910
  %rkb_logname198 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %139, i32 0, i32 48, !dbg !8015
  %140 = load ptr, ptr %rkb_logname198, align 8, !dbg !8015, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay197, ptr noundef %140, i64 noundef 256), !dbg !8015
  %141 = load ptr, ptr %rkb.addr, align 8, !dbg !8015, !tbaa !3910
  %rkb_logname_lock199 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %141, i32 0, i32 49, !dbg !8015
  %call200 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock199), !dbg !8015
  %142 = load ptr, ptr %rkb.addr, align 8, !dbg !8015, !tbaa !3910
  %rkb_rk201 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %142, i32 0, i32 32, !dbg !8015
  %143 = load ptr, ptr %rkb_rk201, align 8, !dbg !8015, !tbaa !4139
  %rk_conf202 = getelementptr inbounds %struct.rd_kafka_s, ptr %143, i32 0, i32 18, !dbg !8015
  %144 = load ptr, ptr %rkb.addr, align 8, !dbg !8015, !tbaa !3910
  %rkb_rk203 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %144, i32 0, i32 32, !dbg !8015
  %145 = load ptr, ptr %rkb_rk203, align 8, !dbg !8015, !tbaa !4139
  %arraydecay204 = getelementptr inbounds [256 x i8], ptr %_logname194, i64 0, i64 0, !dbg !8015
  %146 = load ptr, ptr %rkbuf, align 8, !dbg !8015, !tbaa !3910
  %rkbuf_reqhdr205 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %146, i32 0, i32 10, !dbg !8015
  %ApiKey206 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr205, i32 0, i32 1, !dbg !8015
  %147 = load i16, ptr %ApiKey206, align 4, !dbg !8015, !tbaa !5392
  %call207 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %147), !dbg !8015
  %148 = load ptr, ptr %rkbuf, align 8, !dbg !8015, !tbaa !3910
  %rkbuf_reqhdr208 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %148, i32 0, i32 10, !dbg !8015
  %ApiVersion209 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr208, i32 0, i32 2, !dbg !8015
  %149 = load i16, ptr %ApiVersion209, align 2, !dbg !8015, !tbaa !5272
  %conv210 = sext i16 %149 to i32, !dbg !8015
  %150 = load ptr, ptr %rkbuf, align 8, !dbg !8015, !tbaa !3910
  %rkbuf_reader211 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %150, i32 0, i32 6, !dbg !8015
  %end212 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader211, i32 0, i32 4, !dbg !8015
  %151 = load i64, ptr %end212, align 8, !dbg !8015, !tbaa !6731
  %152 = load ptr, ptr %rkbuf, align 8, !dbg !8015, !tbaa !3910
  %rkbuf_reader213 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %152, i32 0, i32 6, !dbg !8015
  %start214 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader213, i32 0, i32 3, !dbg !8015
  %153 = load i64, ptr %start214, align 8, !dbg !8015, !tbaa !6739
  %sub215 = sub i64 %151, %153, !dbg !8015
  %154 = load i64, ptr %pre_of, align 8, !dbg !8015, !tbaa !4039
  %155 = load ptr, ptr %rkbuf, align 8, !dbg !8015, !tbaa !3910
  %rkbuf_corrid216 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %155, i32 0, i32 1, !dbg !8015
  %156 = load i32, ptr %rkbuf_corrid216, align 8, !dbg !8015, !tbaa !5361
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf202, ptr noundef %145, ptr noundef %arraydecay204, i32 noundef 7, i32 noundef 128, ptr noundef @.str.49, ptr noundef @.str.51, ptr noundef %call207, i32 noundef %conv210, i64 noundef %sub215, i64 noundef %154, i32 noundef %156), !dbg !8015
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname194) #16, !dbg !8014
  br label %do.cond217, !dbg !8015

do.cond217:                                       ; preds = %do.body193
  br label %do.end218, !dbg !8015

do.end218:                                        ; preds = %do.cond217
  br label %if.end219, !dbg !8014

if.end219:                                        ; preds = %do.end218, %do.body184
  br label %do.cond220, !dbg !8013

do.cond220:                                       ; preds = %if.end219
  br label %do.end221, !dbg !8013

do.end221:                                        ; preds = %do.cond220
  %157 = load ptr, ptr %rkb.addr, align 8, !dbg !8016, !tbaa !3910
  %rkb_c222 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %157, i32 0, i32 28, !dbg !8017
  %reqtype = getelementptr inbounds %struct.anon.2, ptr %rkb_c222, i32 0, i32 15, !dbg !8018
  %158 = load ptr, ptr %rkbuf, align 8, !dbg !8019, !tbaa !3910
  %rkbuf_reqhdr223 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %158, i32 0, i32 10, !dbg !8020
  %ApiKey224 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr223, i32 0, i32 1, !dbg !8021
  %159 = load i16, ptr %ApiKey224, align 4, !dbg !8021, !tbaa !5392
  %idxprom = sext i16 %159 to i64, !dbg !8016
  %arrayidx = getelementptr inbounds [68 x %struct.rd_atomic64_t], ptr %reqtype, i64 0, i64 %idxprom, !dbg !8016
  %call225 = call i64 @rd_atomic64_add(ptr noundef %arrayidx, i64 noundef 1), !dbg !8022
  %160 = load ptr, ptr %rkb.addr, align 8, !dbg !8023, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %160, i32 0, i32 5, !dbg !8023
  %161 = load ptr, ptr %rkb_transport, align 8, !dbg !8023, !tbaa !4518
  %cmp226 = icmp ne ptr %161, null, !dbg !8023
  %conv227 = zext i1 %cmp226 to i32, !dbg !8023
  %conv228 = sext i32 %conv227 to i64, !dbg !8023
  %expval229 = call i64 @llvm.expect.i64(i64 %conv228, i64 1), !dbg !8023
  %tobool230 = icmp ne i64 %expval229, 0, !dbg !8023
  br i1 %tobool230, label %if.then231, label %if.end232, !dbg !8025

if.then231:                                       ; preds = %do.end221
  %162 = load ptr, ptr %rkb.addr, align 8, !dbg !8026, !tbaa !3910
  %163 = load ptr, ptr %rkbuf, align 8, !dbg !8027, !tbaa !3910
  call void @rd_kafka_transport_request_sent(ptr noundef %162, ptr noundef %163), !dbg !8028
  br label %if.end232, !dbg !8028

if.end232:                                        ; preds = %if.then231, %do.end221
  %164 = load ptr, ptr %rkb.addr, align 8, !dbg !8029, !tbaa !3910
  %rkb_outbufs233 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %164, i32 0, i32 35, !dbg !8030
  %165 = load ptr, ptr %rkbuf, align 8, !dbg !8031, !tbaa !3910
  call void @rd_kafka_bufq_deq(ptr noundef %rkb_outbufs233, ptr noundef %165), !dbg !8032
  %166 = load ptr, ptr %rkbuf, align 8, !dbg !8033, !tbaa !3910
  %rkbuf_flags234 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %166, i32 0, i32 3, !dbg !8034
  %167 = load i32, ptr %rkbuf_flags234, align 8, !dbg !8035, !tbaa !5243
  %or = or i32 %167, 32, !dbg !8035
  store i32 %or, ptr %rkbuf_flags234, align 8, !dbg !8035, !tbaa !5243
  %168 = load i64, ptr %now, align 8, !dbg !8036, !tbaa !4039
  %169 = load ptr, ptr %rkbuf, align 8, !dbg !8037, !tbaa !3910
  %rkbuf_ts_sent = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %169, i32 0, i32 27, !dbg !8038
  store i64 %168, ptr %rkbuf_ts_sent, align 8, !dbg !8039, !tbaa !7111
  %170 = load ptr, ptr %rkb.addr, align 8, !dbg !8040, !tbaa !3910
  %rkb_avg_outbuf_latency = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %170, i32 0, i32 39, !dbg !8041
  %171 = load ptr, ptr %rkbuf, align 8, !dbg !8042, !tbaa !3910
  %rkbuf_ts_sent235 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %171, i32 0, i32 27, !dbg !8043
  %172 = load i64, ptr %rkbuf_ts_sent235, align 8, !dbg !8043, !tbaa !7111
  %173 = load ptr, ptr %rkbuf, align 8, !dbg !8044, !tbaa !3910
  %rkbuf_ts_enq = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %173, i32 0, i32 26, !dbg !8045
  %174 = load i64, ptr %rkbuf_ts_enq, align 8, !dbg !8045, !tbaa !5323
  %sub236 = sub nsw i64 %172, %174, !dbg !8046
  call void @rd_avg_add(ptr noundef %rkb_avg_outbuf_latency, i64 noundef %sub236), !dbg !8047
  %175 = load ptr, ptr %rkbuf, align 8, !dbg !8048, !tbaa !3910
  %rkbuf_flags237 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %175, i32 0, i32 3, !dbg !8050
  %176 = load i32, ptr %rkbuf_flags237, align 8, !dbg !8050, !tbaa !5243
  %and238 = and i32 %176, 8, !dbg !8051
  %tobool239 = icmp ne i32 %and238, 0, !dbg !8051
  br i1 %tobool239, label %land.lhs.true240, label %if.end246, !dbg !8052

land.lhs.true240:                                 ; preds = %if.end232
  %177 = load ptr, ptr %rkb.addr, align 8, !dbg !8053, !tbaa !3910
  %rkb_blocking_request_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %177, i32 0, i32 22, !dbg !8054
  %call241 = call i32 @rd_atomic32_add(ptr noundef %rkb_blocking_request_cnt, i32 noundef 1), !dbg !8055
  %cmp242 = icmp eq i32 %call241, 1, !dbg !8056
  br i1 %cmp242, label %if.then244, label %if.end246, !dbg !8057

if.then244:                                       ; preds = %land.lhs.true240
  %178 = load ptr, ptr %rkb.addr, align 8, !dbg !8058, !tbaa !3910
  %rkb_rk245 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %178, i32 0, i32 32, !dbg !8059
  %179 = load ptr, ptr %rkb_rk245, align 8, !dbg !8059, !tbaa !4139
  call void @rd_kafka_brokers_broadcast_state_change(ptr noundef %179), !dbg !8060
  br label %if.end246, !dbg !8060

if.end246:                                        ; preds = %if.then244, %land.lhs.true240, %if.end232
  %180 = load ptr, ptr %rkbuf, align 8, !dbg !8061, !tbaa !3910
  %rkbuf_flags247 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %180, i32 0, i32 3, !dbg !8063
  %181 = load i32, ptr %rkbuf_flags247, align 8, !dbg !8063, !tbaa !5243
  %and248 = and i32 %181, 2, !dbg !8064
  %tobool249 = icmp ne i32 %and248, 0, !dbg !8064
  br i1 %tobool249, label %if.else252, label %if.then250, !dbg !8065

if.then250:                                       ; preds = %if.end246
  %182 = load ptr, ptr %rkb.addr, align 8, !dbg !8066, !tbaa !3910
  %rkb_waitresps251 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %182, i32 0, i32 36, !dbg !8067
  %183 = load ptr, ptr %rkbuf, align 8, !dbg !8068, !tbaa !3910
  call void @rd_kafka_bufq_enq(ptr noundef %rkb_waitresps251, ptr noundef %183), !dbg !8069
  br label %if.end254, !dbg !8069

if.else252:                                       ; preds = %if.end246
  %184 = load ptr, ptr %rkb.addr, align 8, !dbg !8070, !tbaa !3910
  %rkb_rk253 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %184, i32 0, i32 32, !dbg !8072
  %185 = load ptr, ptr %rkb_rk253, align 8, !dbg !8072, !tbaa !4139
  %186 = load ptr, ptr %rkb.addr, align 8, !dbg !8073, !tbaa !3910
  %187 = load ptr, ptr %rkbuf, align 8, !dbg !8074, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %185, ptr noundef %186, i32 noundef 0, ptr noundef null, ptr noundef %187), !dbg !8075
  br label %if.end254

if.end254:                                        ; preds = %if.else252, %if.then250
  %188 = load i32, ptr %cnt, align 4, !dbg !8076, !tbaa !3959
  %inc255 = add i32 %188, 1, !dbg !8076
  store i32 %inc255, ptr %cnt, align 4, !dbg !8076, !tbaa !3959
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7917
  br label %cleanup256, !dbg !7917

cleanup256:                                       ; preds = %if.end254, %do.end182, %if.then136, %do.end94, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !7917
  call void @llvm.lifetime.end.p0(i64 8, ptr %pre_of) #16, !dbg !7917
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #16, !dbg !7917
  %cleanup.dest259 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest259, label %cleanup261 [
    i32 0, label %cleanup.cont260
    i32 4, label %while.cond
  ]

cleanup.cont260:                                  ; preds = %cleanup256
  br label %while.cond, !dbg !7843, !llvm.loop !7916

while.end:                                        ; preds = %land.end
  %189 = load i32, ptr %cnt, align 4, !dbg !8077, !tbaa !3959
  store i32 %189, ptr %retval, align 4, !dbg !8078
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup261, !dbg !8078

cleanup261:                                       ; preds = %while.end, %cleanup256
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !8079
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkbuf) #16, !dbg !8079
  %190 = load i32, ptr %retval, align 4, !dbg !8079
  ret i32 %190, !dbg !8079
}

declare !dbg !8080 void @rd_kafka_bufq_deq(ptr noundef, ptr noundef) #3

declare !dbg !8083 ptr @rd_kafka_err2str(i32 noundef) #3

declare !dbg !8086 void @rd_kafka_buf_callback(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_broker_request_supported(ptr noundef %rkb, ptr noundef %rkbuf) #4 !dbg !8089 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  %skel = alloca %struct.rd_kafka_ApiVersion, align 2
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !8091, metadata !DIExpression()), !dbg !8095
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !8092, metadata !DIExpression()), !dbg !8096
  call void @llvm.lifetime.start.p0(i64 6, ptr %skel) #16, !dbg !8097
  tail call void @llvm.dbg.declare(metadata ptr %skel, metadata !8093, metadata !DIExpression()), !dbg !8098
  %ApiKey = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %skel, i32 0, i32 0, !dbg !8099
  %0 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8100, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %0, i32 0, i32 10, !dbg !8101
  %ApiKey1 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !8102
  %1 = load i16, ptr %ApiKey1, align 4, !dbg !8102, !tbaa !5392
  store i16 %1, ptr %ApiKey, align 2, !dbg !8099, !tbaa !3925
  %MinVer = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %skel, i32 0, i32 1, !dbg !8099
  store i16 0, ptr %MinVer, align 2, !dbg !8099, !tbaa !3927
  %MaxVer = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %skel, i32 0, i32 2, !dbg !8099
  store i16 0, ptr %MaxVer, align 2, !dbg !8099, !tbaa !3928
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #16, !dbg !8103
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !8094, metadata !DIExpression()), !dbg !8104
  %2 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8105, !tbaa !3910
  %rkbuf_reqhdr2 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %2, i32 0, i32 10, !dbg !8105
  %ApiKey3 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr2, i32 0, i32 1, !dbg !8105
  %3 = load i16, ptr %ApiKey3, align 4, !dbg !8105, !tbaa !5392
  %conv = sext i16 %3 to i32, !dbg !8105
  %cmp = icmp eq i32 %conv, 18, !dbg !8105
  %conv4 = zext i1 %cmp to i32, !dbg !8105
  %conv5 = sext i32 %conv4 to i64, !dbg !8105
  %expval = call i64 @llvm.expect.i64(i64 %conv5, i64 0), !dbg !8105
  %tobool = icmp ne i64 %expval, 0, !dbg !8105
  br i1 %tobool, label %if.then, label %if.end, !dbg !8107

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !8108
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8108

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8109, !tbaa !3910
  %rkbuf_features = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %4, i32 0, i32 25, !dbg !8111
  %5 = load i32, ptr %rkbuf_features, align 8, !dbg !8111, !tbaa !8112
  %tobool6 = icmp ne i32 %5, 0, !dbg !8109
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !8113

if.then7:                                         ; preds = %if.end
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !8114, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 23, !dbg !8115
  %7 = load i32, ptr %rkb_features, align 4, !dbg !8115, !tbaa !3938
  %8 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8116, !tbaa !3910
  %rkbuf_features8 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %8, i32 0, i32 25, !dbg !8117
  %9 = load i32, ptr %rkbuf_features8, align 8, !dbg !8117, !tbaa !8112
  %and = and i32 %7, %9, !dbg !8118
  %10 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8119, !tbaa !3910
  %rkbuf_features9 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %10, i32 0, i32 25, !dbg !8120
  %11 = load i32, ptr %rkbuf_features9, align 8, !dbg !8120, !tbaa !8112
  %cmp10 = icmp eq i32 %and, %11, !dbg !8121
  %conv11 = zext i1 %cmp10 to i32, !dbg !8121
  store i32 %conv11, ptr %retval, align 4, !dbg !8122
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8122

if.end12:                                         ; preds = %if.end
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !8123, !tbaa !3910
  %rkb_ApiVersions = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 24, !dbg !8124
  %13 = load ptr, ptr %rkb_ApiVersions, align 8, !dbg !8124, !tbaa !3972
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !8125, !tbaa !3910
  %rkb_ApiVersions_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 25, !dbg !8126
  %15 = load i64, ptr %rkb_ApiVersions_cnt, align 8, !dbg !8126, !tbaa !3975
  %call = call ptr @bsearch(ptr noundef %skel, ptr noundef %13, i64 noundef %15, i64 noundef 6, ptr noundef @rd_kafka_ApiVersion_key_cmp), !dbg !8127
  store ptr %call, ptr %ret, align 8, !dbg !8128, !tbaa !3910
  %16 = load ptr, ptr %ret, align 8, !dbg !8129, !tbaa !3910
  %tobool13 = icmp ne ptr %16, null, !dbg !8129
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !8131

if.then14:                                        ; preds = %if.end12
  store i32 0, ptr %retval, align 4, !dbg !8132
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8132

if.end15:                                         ; preds = %if.end12
  %17 = load ptr, ptr %ret, align 8, !dbg !8133, !tbaa !3910
  %MinVer16 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %17, i32 0, i32 1, !dbg !8134
  %18 = load i16, ptr %MinVer16, align 2, !dbg !8134, !tbaa !3927
  %conv17 = sext i16 %18 to i32, !dbg !8133
  %19 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8135, !tbaa !3910
  %rkbuf_reqhdr18 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %19, i32 0, i32 10, !dbg !8136
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr18, i32 0, i32 2, !dbg !8137
  %20 = load i16, ptr %ApiVersion, align 2, !dbg !8137, !tbaa !5272
  %conv19 = sext i16 %20 to i32, !dbg !8135
  %cmp20 = icmp sle i32 %conv17, %conv19, !dbg !8138
  br i1 %cmp20, label %land.rhs, label %land.end, !dbg !8139

land.rhs:                                         ; preds = %if.end15
  %21 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8140, !tbaa !3910
  %rkbuf_reqhdr22 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %21, i32 0, i32 10, !dbg !8141
  %ApiVersion23 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr22, i32 0, i32 2, !dbg !8142
  %22 = load i16, ptr %ApiVersion23, align 2, !dbg !8142, !tbaa !5272
  %conv24 = sext i16 %22 to i32, !dbg !8140
  %23 = load ptr, ptr %ret, align 8, !dbg !8143, !tbaa !3910
  %MaxVer25 = getelementptr inbounds %struct.rd_kafka_ApiVersion, ptr %23, i32 0, i32 2, !dbg !8144
  %24 = load i16, ptr %MaxVer25, align 2, !dbg !8144, !tbaa !3928
  %conv26 = sext i16 %24 to i32, !dbg !8143
  %cmp27 = icmp sle i32 %conv24, %conv26, !dbg !8145
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end15
  %25 = phi i1 [ false, %if.end15 ], [ %cmp27, %land.rhs ], !dbg !8146
  %land.ext = zext i1 %25 to i32, !dbg !8139
  store i32 %land.ext, ptr %retval, align 4, !dbg !8147
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8147

cleanup:                                          ; preds = %land.end, %if.then14, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #16, !dbg !8148
  call void @llvm.lifetime.end.p0(i64 6, ptr %skel) #16, !dbg !8148
  %26 = load i32, ptr %retval, align 4, !dbg !8148
  ret i32 %26, !dbg !8148
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_buf_update_i32(ptr noundef %rkbuf, i64 noundef %of, i32 noundef %v) #4 !dbg !8149 {
entry:
  %rkbuf.addr = alloca ptr, align 8
  %of.addr = alloca i64, align 8
  %v.addr = alloca i32, align 4
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !8153, metadata !DIExpression()), !dbg !8156
  store i64 %of, ptr %of.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %of.addr, metadata !8154, metadata !DIExpression()), !dbg !8157
  store i32 %v, ptr %v.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !8155, metadata !DIExpression()), !dbg !8158
  %0 = load i32, ptr %v.addr, align 4, !dbg !8159, !tbaa !3959
  %call = call i32 @__bswap_32(i32 noundef %0), !dbg !8159
  store i32 %call, ptr %v.addr, align 4, !dbg !8160, !tbaa !3959
  %1 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8161, !tbaa !3910
  %2 = load i64, ptr %of.addr, align 8, !dbg !8162, !tbaa !4039
  call void @rd_kafka_buf_update(ptr noundef %1, i64 noundef %2, ptr noundef %v.addr, i64 noundef 4), !dbg !8163
  ret void, !dbg !8164
}

; Function Attrs: nounwind uwtable
define internal i64 @rd_kafka_broker_send(ptr noundef %rkb, ptr noundef %slice) #0 !dbg !8165 {
entry:
  %retval = alloca i64, align 8
  %rkb.addr = alloca ptr, align 8
  %slice.addr = alloca ptr, align 8
  %r = alloca i64, align 8
  %errstr = alloca [128 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !8169, metadata !DIExpression()), !dbg !8173
  store ptr %slice, ptr %slice.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %slice.addr, metadata !8170, metadata !DIExpression()), !dbg !8174
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #16, !dbg !8175
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !8171, metadata !DIExpression()), !dbg !8176
  call void @llvm.lifetime.start.p0(i64 128, ptr %errstr) #16, !dbg !8177
  tail call void @llvm.dbg.declare(metadata ptr %errstr, metadata !8172, metadata !DIExpression()), !dbg !8178
  br label %do.body, !dbg !8179

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !8180, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 19, !dbg !8180
  %1 = load i32, ptr %rkb_state, align 4, !dbg !8180, !tbaa !4130
  %cmp = icmp uge i32 %1, 6, !dbg !8180
  %lnot = xor i1 %cmp, true, !dbg !8180
  %lnot.ext = zext i1 %lnot to i32, !dbg !8180
  %conv = sext i32 %lnot.ext to i64, !dbg !8180
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8180
  %tobool = icmp ne i64 %expval, 0, !dbg !8180
  br i1 %tobool, label %if.then, label %if.end, !dbg !8183

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !8180, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !8180
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !8180, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 967, ptr noundef @__FUNCTION__.rd_kafka_broker_send, ptr noundef %3, ptr noundef @.str.219) #17, !dbg !8180
  unreachable, !dbg !8180

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !8183

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !8183

do.end:                                           ; preds = %do.cond
  br label %do.body1, !dbg !8184

do.body1:                                         ; preds = %do.end
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !8185, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 5, !dbg !8185
  %5 = load ptr, ptr %rkb_transport, align 8, !dbg !8185, !tbaa !4518
  %tobool2 = icmp ne ptr %5, null, !dbg !8185
  %lnot3 = xor i1 %tobool2, true, !dbg !8185
  %lnot.ext4 = zext i1 %lnot3 to i32, !dbg !8185
  %conv5 = sext i32 %lnot.ext4 to i64, !dbg !8185
  %expval6 = call i64 @llvm.expect.i64(i64 %conv5, i64 0), !dbg !8185
  %tobool7 = icmp ne i64 %expval6, 0, !dbg !8185
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !8188

if.then8:                                         ; preds = %do.body1
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !8185, !tbaa !3910
  %rkb_rk9 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 32, !dbg !8185
  %7 = load ptr, ptr %rkb_rk9, align 8, !dbg !8185, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 968, ptr noundef @__FUNCTION__.rd_kafka_broker_send, ptr noundef %7, ptr noundef @.str.220) #17, !dbg !8185
  unreachable, !dbg !8185

if.end10:                                         ; preds = %do.body1
  br label %do.cond11, !dbg !8188

do.cond11:                                        ; preds = %if.end10
  br label %do.end12, !dbg !8188

do.end12:                                         ; preds = %do.cond11
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !8189, !tbaa !3910
  %rkb_transport13 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 5, !dbg !8190
  %9 = load ptr, ptr %rkb_transport13, align 8, !dbg !8190, !tbaa !4518
  %10 = load ptr, ptr %slice.addr, align 8, !dbg !8191, !tbaa !3910
  %arraydecay = getelementptr inbounds [128 x i8], ptr %errstr, i64 0, i64 0, !dbg !8192
  %call = call i64 @rd_kafka_transport_send(ptr noundef %9, ptr noundef %10, ptr noundef %arraydecay, i64 noundef 128), !dbg !8193
  store i64 %call, ptr %r, align 8, !dbg !8194, !tbaa !4039
  %11 = load i64, ptr %r, align 8, !dbg !8195, !tbaa !4039
  %cmp14 = icmp eq i64 %11, -1, !dbg !8197
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !8198

if.then16:                                        ; preds = %do.end12
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !8199, !tbaa !3910
  %arraydecay17 = getelementptr inbounds [128 x i8], ptr %errstr, i64 0, i64 0, !dbg !8201
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %12, i32 noundef 3, i32 noundef -195, ptr noundef @.str.221, ptr noundef %arraydecay17), !dbg !8202
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !8203, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 28, !dbg !8204
  %tx_err = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 2, !dbg !8205
  %call18 = call i64 @rd_atomic64_add(ptr noundef %tx_err, i64 noundef 1), !dbg !8206
  store i64 -1, ptr %retval, align 8, !dbg !8207
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8207

if.end19:                                         ; preds = %do.end12
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !8208, !tbaa !3910
  %rkb_c20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 28, !dbg !8209
  %tx_bytes = getelementptr inbounds %struct.anon.2, ptr %rkb_c20, i32 0, i32 0, !dbg !8210
  %15 = load i64, ptr %r, align 8, !dbg !8211, !tbaa !4039
  %call21 = call i64 @rd_atomic64_add(ptr noundef %tx_bytes, i64 noundef %15), !dbg !8212
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !8213, !tbaa !3910
  %rkb_c22 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 28, !dbg !8214
  %tx = getelementptr inbounds %struct.anon.2, ptr %rkb_c22, i32 0, i32 1, !dbg !8215
  %call23 = call i64 @rd_atomic64_add(ptr noundef %tx, i64 noundef 1), !dbg !8216
  %17 = load i64, ptr %r, align 8, !dbg !8217, !tbaa !4039
  store i64 %17, ptr %retval, align 8, !dbg !8218
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8218

cleanup:                                          ; preds = %if.end19, %if.then16
  call void @llvm.lifetime.end.p0(i64 128, ptr %errstr) #16, !dbg !8219
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #16, !dbg !8219
  %18 = load i64, ptr %retval, align 8, !dbg !8219
  ret i64 %18, !dbg !8219
}

declare !dbg !8220 void @rd_kafka_transport_request_sent(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_avg_add(ptr noundef %ra, i64 noundef %v) #0 !dbg !8221 {
entry:
  %ra.addr = alloca ptr, align 8
  %v.addr = alloca i64, align 8
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !8226, metadata !DIExpression()), !dbg !8228
  store i64 %v, ptr %v.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !8227, metadata !DIExpression()), !dbg !8229
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !8230, !tbaa !3910
  %ra_lock = getelementptr inbounds %struct.rd_avg_s, ptr %0, i32 0, i32 1, !dbg !8231
  %call = call i32 @mtx_lock(ptr noundef %ra_lock), !dbg !8232
  %1 = load ptr, ptr %ra.addr, align 8, !dbg !8233, !tbaa !3910
  %ra_enabled = getelementptr inbounds %struct.rd_avg_s, ptr %1, i32 0, i32 2, !dbg !8235
  %2 = load i32, ptr %ra_enabled, align 8, !dbg !8235, !tbaa !8236
  %tobool = icmp ne i32 %2, 0, !dbg !8233
  br i1 %tobool, label %if.end, label %if.then, !dbg !8237

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %ra.addr, align 8, !dbg !8238, !tbaa !3910
  %ra_lock1 = getelementptr inbounds %struct.rd_avg_s, ptr %3, i32 0, i32 1, !dbg !8240
  %call2 = call i32 @mtx_unlock(ptr noundef %ra_lock1), !dbg !8241
  br label %return, !dbg !8242

if.end:                                           ; preds = %entry
  %4 = load i64, ptr %v.addr, align 8, !dbg !8243, !tbaa !4039
  %5 = load ptr, ptr %ra.addr, align 8, !dbg !8245, !tbaa !3910
  %ra_v = getelementptr inbounds %struct.rd_avg_s, ptr %5, i32 0, i32 0, !dbg !8246
  %maxv = getelementptr inbounds %struct.anon.4, ptr %ra_v, i32 0, i32 0, !dbg !8247
  %6 = load i64, ptr %maxv, align 8, !dbg !8247, !tbaa !8248
  %cmp = icmp sgt i64 %4, %6, !dbg !8249
  br i1 %cmp, label %if.then3, label %if.end6, !dbg !8250

if.then3:                                         ; preds = %if.end
  %7 = load i64, ptr %v.addr, align 8, !dbg !8251, !tbaa !4039
  %8 = load ptr, ptr %ra.addr, align 8, !dbg !8252, !tbaa !3910
  %ra_v4 = getelementptr inbounds %struct.rd_avg_s, ptr %8, i32 0, i32 0, !dbg !8253
  %maxv5 = getelementptr inbounds %struct.anon.4, ptr %ra_v4, i32 0, i32 0, !dbg !8254
  store i64 %7, ptr %maxv5, align 8, !dbg !8255, !tbaa !8248
  br label %if.end6, !dbg !8252

if.end6:                                          ; preds = %if.then3, %if.end
  %9 = load ptr, ptr %ra.addr, align 8, !dbg !8256, !tbaa !3910
  %ra_v7 = getelementptr inbounds %struct.rd_avg_s, ptr %9, i32 0, i32 0, !dbg !8258
  %minv = getelementptr inbounds %struct.anon.4, ptr %ra_v7, i32 0, i32 1, !dbg !8259
  %10 = load i64, ptr %minv, align 8, !dbg !8259, !tbaa !8260
  %cmp8 = icmp eq i64 %10, 0, !dbg !8261
  br i1 %cmp8, label %if.then12, label %lor.lhs.false, !dbg !8262

lor.lhs.false:                                    ; preds = %if.end6
  %11 = load i64, ptr %v.addr, align 8, !dbg !8263, !tbaa !4039
  %12 = load ptr, ptr %ra.addr, align 8, !dbg !8264, !tbaa !3910
  %ra_v9 = getelementptr inbounds %struct.rd_avg_s, ptr %12, i32 0, i32 0, !dbg !8265
  %minv10 = getelementptr inbounds %struct.anon.4, ptr %ra_v9, i32 0, i32 1, !dbg !8266
  %13 = load i64, ptr %minv10, align 8, !dbg !8266, !tbaa !8260
  %cmp11 = icmp slt i64 %11, %13, !dbg !8267
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !8268

if.then12:                                        ; preds = %lor.lhs.false, %if.end6
  %14 = load i64, ptr %v.addr, align 8, !dbg !8269, !tbaa !4039
  %15 = load ptr, ptr %ra.addr, align 8, !dbg !8270, !tbaa !3910
  %ra_v13 = getelementptr inbounds %struct.rd_avg_s, ptr %15, i32 0, i32 0, !dbg !8271
  %minv14 = getelementptr inbounds %struct.anon.4, ptr %ra_v13, i32 0, i32 1, !dbg !8272
  store i64 %14, ptr %minv14, align 8, !dbg !8273, !tbaa !8260
  br label %if.end15, !dbg !8270

if.end15:                                         ; preds = %if.then12, %lor.lhs.false
  %16 = load i64, ptr %v.addr, align 8, !dbg !8274, !tbaa !4039
  %17 = load ptr, ptr %ra.addr, align 8, !dbg !8275, !tbaa !3910
  %ra_v16 = getelementptr inbounds %struct.rd_avg_s, ptr %17, i32 0, i32 0, !dbg !8276
  %sum = getelementptr inbounds %struct.anon.4, ptr %ra_v16, i32 0, i32 3, !dbg !8277
  %18 = load i64, ptr %sum, align 8, !dbg !8278, !tbaa !8279
  %add = add nsw i64 %18, %16, !dbg !8278
  store i64 %add, ptr %sum, align 8, !dbg !8278, !tbaa !8279
  %19 = load ptr, ptr %ra.addr, align 8, !dbg !8280, !tbaa !3910
  %ra_v17 = getelementptr inbounds %struct.rd_avg_s, ptr %19, i32 0, i32 0, !dbg !8281
  %cnt = getelementptr inbounds %struct.anon.4, ptr %ra_v17, i32 0, i32 4, !dbg !8282
  %20 = load i32, ptr %cnt, align 8, !dbg !8283, !tbaa !8284
  %inc = add nsw i32 %20, 1, !dbg !8283
  store i32 %inc, ptr %cnt, align 8, !dbg !8283, !tbaa !8284
  %21 = load ptr, ptr %ra.addr, align 8, !dbg !8285, !tbaa !3910
  %ra_hdr = getelementptr inbounds %struct.rd_avg_s, ptr %21, i32 0, i32 4, !dbg !8286
  %22 = load ptr, ptr %ra_hdr, align 8, !dbg !8286, !tbaa !8287
  %23 = load i64, ptr %v.addr, align 8, !dbg !8288, !tbaa !4039
  %call18 = call i32 @rd_hdr_histogram_record(ptr noundef %22, i64 noundef %23), !dbg !8289
  %24 = load ptr, ptr %ra.addr, align 8, !dbg !8290, !tbaa !3910
  %ra_lock19 = getelementptr inbounds %struct.rd_avg_s, ptr %24, i32 0, i32 1, !dbg !8291
  %call20 = call i32 @mtx_unlock(ptr noundef %ra_lock19), !dbg !8292
  br label %return, !dbg !8293

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !8293
}

declare !dbg !8294 void @rd_kafka_bufq_enq(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_buf_retry(ptr noundef %rkb, ptr noundef %rkbuf) #0 !dbg !8295 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rkbuf.addr = alloca ptr, align 8
  %rko = alloca ptr, align 8
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !8297, metadata !DIExpression()), !dbg !8307
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !8298, metadata !DIExpression()), !dbg !8308
  %0 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8309, !tbaa !3910
  %rkbuf_replyq = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %0, i32 0, i32 13, !dbg !8311
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %rkbuf_replyq, i32 0, i32 0, !dbg !8312
  %1 = load ptr, ptr %q, align 8, !dbg !8312, !tbaa !8313
  %tobool = icmp ne ptr %1, null, !dbg !8309
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8314

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8315, !tbaa !3910
  %rkbuf_orig_replyq = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %2, i32 0, i32 14, !dbg !8316
  %q1 = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %rkbuf_orig_replyq, i32 0, i32 0, !dbg !8317
  %3 = load ptr, ptr %q1, align 8, !dbg !8317, !tbaa !8318
  %tobool2 = icmp ne ptr %3, null, !dbg !8315
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8319

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8320, !tbaa !3910
  %rkbuf_replyq3 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %4, i32 0, i32 13, !dbg !8322
  %5 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8323, !tbaa !3910
  %rkbuf_orig_replyq4 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %5, i32 0, i32 14, !dbg !8324
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %rkbuf_replyq3, ptr align 8 %rkbuf_orig_replyq4, i64 16, i1 false), !dbg !8324, !tbaa.struct !5433
  %6 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8325, !tbaa !3910
  %rkbuf_orig_replyq5 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %6, i32 0, i32 14, !dbg !8326
  call void @rd_kafka_replyq_clear(ptr noundef %rkbuf_orig_replyq5), !dbg !8327
  br label %if.end, !dbg !8328

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !8329, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 30, !dbg !8330
  %8 = load i64, ptr %rkb_thread, align 8, !dbg !8330, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %8), !dbg !8331
  %tobool6 = icmp ne i32 %call, 0, !dbg !8331
  br i1 %tobool6, label %if.end11, label %if.then7, !dbg !8332

if.then7:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !8333
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !8299, metadata !DIExpression()), !dbg !8334
  %call8 = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 10), !dbg !8335
  store ptr %call8, ptr %rko, align 8, !dbg !8334, !tbaa !3910
  %9 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8336, !tbaa !3910
  %10 = load ptr, ptr %rko, align 8, !dbg !8337, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %10, i32 0, i32 15, !dbg !8338
  %rkbuf9 = getelementptr inbounds %struct.anon.65, ptr %rko_u, i32 0, i32 0, !dbg !8339
  store ptr %9, ptr %rkbuf9, align 8, !dbg !8340, !tbaa !4126
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !8341, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 8, !dbg !8342
  %12 = load ptr, ptr %rkb_ops, align 8, !dbg !8342, !tbaa !5475
  %13 = load ptr, ptr %rko, align 8, !dbg !8343, !tbaa !3910
  %call10 = call i32 @rd_kafka_q_enq(ptr noundef %12, ptr noundef %13), !dbg !8344
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !8345
  br label %return

if.end11:                                         ; preds = %if.end
  br label %do.body, !dbg !8346

do.body:                                          ; preds = %if.end11
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !8347, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 32, !dbg !8347
  %15 = load ptr, ptr %rkb_rk, align 8, !dbg !8347, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %15, i32 0, i32 18, !dbg !8347
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !8347
  %16 = load i32, ptr %debug, align 8, !dbg !8347, !tbaa !4140
  %and = and i32 %16, 128, !dbg !8347
  %conv = sext i32 %and to i64, !dbg !8347
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8347
  %tobool12 = icmp ne i64 %expval, 0, !dbg !8347
  br i1 %tobool12, label %if.then13, label %if.end28, !dbg !8348

if.then13:                                        ; preds = %do.body
  br label %do.body14, !dbg !8349

do.body14:                                        ; preds = %if.then13
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !8350
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !8302, metadata !DIExpression()), !dbg !8350
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !8350, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 49, !dbg !8350
  %call15 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !8350
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !8350
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !8350, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 48, !dbg !8350
  %19 = load ptr, ptr %rkb_logname, align 8, !dbg !8350, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %19, i64 noundef 256), !dbg !8350
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !8350, !tbaa !3910
  %rkb_logname_lock16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 49, !dbg !8350
  %call17 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock16), !dbg !8350
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !8350, !tbaa !3910
  %rkb_rk18 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 32, !dbg !8350
  %22 = load ptr, ptr %rkb_rk18, align 8, !dbg !8350, !tbaa !4139
  %rk_conf19 = getelementptr inbounds %struct.rd_kafka_s, ptr %22, i32 0, i32 18, !dbg !8350
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !8350, !tbaa !3910
  %rkb_rk20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 32, !dbg !8350
  %24 = load ptr, ptr %rkb_rk20, align 8, !dbg !8350, !tbaa !4139
  %arraydecay21 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !8350
  %25 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8350, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %25, i32 0, i32 10, !dbg !8350
  %ApiKey = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !8350
  %26 = load i16, ptr %ApiKey, align 4, !dbg !8350, !tbaa !5392
  %call22 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %26), !dbg !8350
  %27 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8350, !tbaa !3910
  %rkbuf_reqhdr23 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %27, i32 0, i32 10, !dbg !8350
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr23, i32 0, i32 2, !dbg !8350
  %28 = load i16, ptr %ApiVersion, align 2, !dbg !8350, !tbaa !5272
  %conv24 = sext i16 %28 to i32, !dbg !8350
  %29 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8350, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %29, i32 0, i32 6, !dbg !8350
  %end = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader, i32 0, i32 4, !dbg !8350
  %30 = load i64, ptr %end, align 8, !dbg !8350, !tbaa !6731
  %31 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8350, !tbaa !3910
  %rkbuf_reader25 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %31, i32 0, i32 6, !dbg !8350
  %start = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader25, i32 0, i32 3, !dbg !8350
  %32 = load i64, ptr %start, align 8, !dbg !8350, !tbaa !6739
  %sub = sub i64 %30, %32, !dbg !8350
  %33 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8350, !tbaa !3910
  %rkbuf_retries = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %33, i32 0, i32 24, !dbg !8350
  %34 = load i32, ptr %rkbuf_retries, align 4, !dbg !8350, !tbaa !8351
  %35 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8350, !tbaa !3910
  %rkbuf_max_retries = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %35, i32 0, i32 23, !dbg !8350
  %36 = load i32, ptr %rkbuf_max_retries, align 8, !dbg !8350, !tbaa !8352
  %37 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8350, !tbaa !3910
  %rkbuf_corrid = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %37, i32 0, i32 1, !dbg !8350
  %38 = load i32, ptr %rkbuf_corrid, align 8, !dbg !8350, !tbaa !5361
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !8350, !tbaa !3910
  %rkb_rk26 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 32, !dbg !8350
  %40 = load ptr, ptr %rkb_rk26, align 8, !dbg !8350, !tbaa !4139
  %rk_conf27 = getelementptr inbounds %struct.rd_kafka_s, ptr %40, i32 0, i32 18, !dbg !8350
  %retry_backoff_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf27, i32 0, i32 85, !dbg !8350
  %41 = load i32, ptr %retry_backoff_ms, align 8, !dbg !8350, !tbaa !8353
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf19, ptr noundef %24, ptr noundef %arraydecay21, i32 noundef 7, i32 noundef 128, ptr noundef @.str.52, ptr noundef @.str.53, ptr noundef %call22, i32 noundef %conv24, i64 noundef %sub, i32 noundef %34, i32 noundef %36, i32 noundef %38, i32 noundef %41), !dbg !8350
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !8349
  br label %do.end, !dbg !8350

do.end:                                           ; preds = %do.body14
  br label %if.end28, !dbg !8349

if.end28:                                         ; preds = %do.end, %do.body
  br label %do.end29, !dbg !8348

do.end29:                                         ; preds = %if.end28
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !8354, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 28, !dbg !8355
  %tx_retries = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 3, !dbg !8356
  %call30 = call i64 @rd_atomic64_add(ptr noundef %tx_retries, i64 noundef 1), !dbg !8357
  %call31 = call i64 @rd_clock(), !dbg !8358
  %43 = load ptr, ptr %rkb.addr, align 8, !dbg !8359, !tbaa !3910
  %rkb_rk32 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %43, i32 0, i32 32, !dbg !8360
  %44 = load ptr, ptr %rkb_rk32, align 8, !dbg !8360, !tbaa !4139
  %rk_conf33 = getelementptr inbounds %struct.rd_kafka_s, ptr %44, i32 0, i32 18, !dbg !8361
  %retry_backoff_ms34 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf33, i32 0, i32 85, !dbg !8362
  %45 = load i32, ptr %retry_backoff_ms34, align 8, !dbg !8362, !tbaa !8353
  %mul = mul nsw i32 %45, 1000, !dbg !8363
  %conv35 = sext i32 %mul to i64, !dbg !8364
  %add = add nsw i64 %call31, %conv35, !dbg !8365
  %46 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8366, !tbaa !3910
  %rkbuf_ts_retry = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %46, i32 0, i32 2, !dbg !8367
  store i64 %add, ptr %rkbuf_ts_retry, align 8, !dbg !8368, !tbaa !8369
  %47 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8370, !tbaa !3910
  %rkbuf_ts_retry36 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %47, i32 0, i32 2, !dbg !8371
  %48 = load i64, ptr %rkbuf_ts_retry36, align 8, !dbg !8371, !tbaa !8369
  %add37 = add nsw i64 %48, 5000000, !dbg !8372
  %49 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8373, !tbaa !3910
  %rkbuf_ts_timeout = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %49, i32 0, i32 28, !dbg !8374
  store i64 %add37, ptr %rkbuf_ts_timeout, align 8, !dbg !8375, !tbaa !8376
  %50 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8377, !tbaa !3910
  %rkbuf_reader38 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %50, i32 0, i32 6, !dbg !8378
  %call39 = call i32 @rd_slice_seek(ptr noundef %rkbuf_reader38, i64 noundef 0), !dbg !8379
  %51 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8380, !tbaa !3910
  %rkbuf_corrid40 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %51, i32 0, i32 1, !dbg !8381
  store i32 0, ptr %rkbuf_corrid40, align 8, !dbg !8382, !tbaa !5361
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !8383, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 37, !dbg !8384
  %53 = load ptr, ptr %rkbuf.addr, align 8, !dbg !8385, !tbaa !3910
  call void @rd_kafka_bufq_enq(ptr noundef %rkb_retrybufs, ptr noundef %53), !dbg !8386
  br label %return, !dbg !8387

return:                                           ; preds = %do.end29, %if.then7
  ret void, !dbg !8387
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_replyq_clear(ptr noundef %replyq) #4 !dbg !8388 {
entry:
  %replyq.addr = alloca ptr, align 8
  store ptr %replyq, ptr %replyq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %replyq.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load ptr, ptr %replyq.addr, align 8, !dbg !8395, !tbaa !3910
  call void @llvm.memset.p0.i64(ptr align 8 %0, i8 0, i64 16, i1 false), !dbg !8396
  ret void, !dbg !8397
}

declare !dbg !8398 i32 @rd_slice_seek(ptr noundef, i64 noundef) #3

; Function Attrs: nounwind uwtable
define void @rd_kafka_dr_msgq(ptr noundef %rkt, ptr noundef %rkmq, i32 noundef %err) #0 !dbg !8401 {
entry:
  %rkt.addr = alloca ptr, align 8
  %rkmq.addr = alloca ptr, align 8
  %err.addr = alloca i32, align 4
  %rk = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %rko = alloca ptr, align 8
  store ptr %rkt, ptr %rkt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkt.addr, metadata !8406, metadata !DIExpression()), !dbg !8413
  store ptr %rkmq, ptr %rkmq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkmq.addr, metadata !8407, metadata !DIExpression()), !dbg !8414
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !8408, metadata !DIExpression()), !dbg !8415
  call void @llvm.lifetime.start.p0(i64 8, ptr %rk) #16, !dbg !8416
  tail call void @llvm.dbg.declare(metadata ptr %rk, metadata !8409, metadata !DIExpression()), !dbg !8417
  %0 = load ptr, ptr %rkt.addr, align 8, !dbg !8418, !tbaa !3910
  %rkt_rk = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %0, i32 0, i32 18, !dbg !8419
  %1 = load ptr, ptr %rkt_rk, align 8, !dbg !8419, !tbaa !8420
  store ptr %1, ptr %rk, align 8, !dbg !8417, !tbaa !3910
  %2 = load ptr, ptr %rkmq.addr, align 8, !dbg !8423, !tbaa !3910
  %call = call i32 @rd_kafka_msgq_len(ptr noundef %2), !dbg !8423
  %cmp = icmp eq i32 %call, 0, !dbg !8423
  %conv = zext i1 %cmp to i32, !dbg !8423
  %conv1 = sext i32 %conv to i64, !dbg !8423
  %expval = call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !8423
  %tobool = icmp ne i64 %expval, 0, !dbg !8423
  br i1 %tobool, label %if.then, label %if.end, !dbg !8425

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8426

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %err.addr, align 4, !dbg !8427, !tbaa !4126
  %tobool2 = icmp ne i32 %3, 0, !dbg !8427
  br i1 %tobool2, label %land.lhs.true, label %if.end9, !dbg !8429

land.lhs.true:                                    ; preds = %if.end
  %4 = load ptr, ptr %rk, align 8, !dbg !8430, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 18, !dbg !8430
  %eos = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 78, !dbg !8430
  %transactional_id = getelementptr inbounds %struct.anon.18, ptr %eos, i32 0, i32 2, !dbg !8430
  %5 = load ptr, ptr %transactional_id, align 8, !dbg !8430, !tbaa !8431
  %cmp3 = icmp ne ptr %5, null, !dbg !8430
  br i1 %cmp3, label %if.then5, label %if.end9, !dbg !8432

if.then5:                                         ; preds = %land.lhs.true
  %6 = load ptr, ptr %rk, align 8, !dbg !8433, !tbaa !3910
  %rk_eos = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 38, !dbg !8434
  %txn_dr_fails = getelementptr inbounds %struct.anon.25, ptr %rk_eos, i32 0, i32 21, !dbg !8435
  %7 = load ptr, ptr %rkmq.addr, align 8, !dbg !8436, !tbaa !3910
  %call6 = call i32 @rd_kafka_msgq_len(ptr noundef %7), !dbg !8437
  %conv7 = sext i32 %call6 to i64, !dbg !8437
  %call8 = call i64 @rd_atomic64_add(ptr noundef %txn_dr_fails, i64 noundef %conv7), !dbg !8438
  br label %if.end9, !dbg !8438

if.end9:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %8 = load ptr, ptr %rk, align 8, !dbg !8439, !tbaa !3910
  %9 = load ptr, ptr %rkmq.addr, align 8, !dbg !8440, !tbaa !3910
  %10 = load i32, ptr %err.addr, align 4, !dbg !8441, !tbaa !4126
  call void @rd_kafka_interceptors_on_acknowledgement_queue(ptr noundef %8, ptr noundef %9, i32 noundef %10), !dbg !8442
  %11 = load ptr, ptr %rk, align 8, !dbg !8443, !tbaa !3910
  %rk_drmode = getelementptr inbounds %struct.rd_kafka_s, ptr %11, i32 0, i32 36, !dbg !8444
  %12 = load i32, ptr %rk_drmode, align 4, !dbg !8444, !tbaa !8445
  %cmp10 = icmp ne i32 %12, 0, !dbg !8446
  br i1 %cmp10, label %land.lhs.true12, label %if.else, !dbg !8447

land.lhs.true12:                                  ; preds = %if.end9
  %13 = load ptr, ptr %rk, align 8, !dbg !8448, !tbaa !3910
  %rk_conf13 = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !8449
  %dr_err_only = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf13, i32 0, i32 89, !dbg !8450
  %14 = load i32, ptr %dr_err_only, align 8, !dbg !8450, !tbaa !8451
  %tobool14 = icmp ne i32 %14, 0, !dbg !8448
  br i1 %tobool14, label %lor.lhs.false, label %if.then16, !dbg !8452

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %15 = load i32, ptr %err.addr, align 4, !dbg !8453, !tbaa !4126
  %tobool15 = icmp ne i32 %15, 0, !dbg !8453
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !8454

if.then16:                                        ; preds = %lor.lhs.false, %land.lhs.true12
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !8455
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !8410, metadata !DIExpression()), !dbg !8456
  %call17 = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 4), !dbg !8457
  store ptr %call17, ptr %rko, align 8, !dbg !8458, !tbaa !3910
  %16 = load i32, ptr %err.addr, align 4, !dbg !8459, !tbaa !4126
  %17 = load ptr, ptr %rko, align 8, !dbg !8460, !tbaa !3910
  %rko_err = getelementptr inbounds %struct.rd_kafka_op_s, ptr %17, i32 0, i32 5, !dbg !8461
  store i32 %16, ptr %rko_err, align 8, !dbg !8462, !tbaa !8463
  %18 = load ptr, ptr %rkt.addr, align 8, !dbg !8465, !tbaa !3910
  %call18 = call ptr @rd_kafka_topic_keep(ptr noundef %18), !dbg !8466
  %19 = load ptr, ptr %rko, align 8, !dbg !8467, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %19, i32 0, i32 15, !dbg !8468
  %rkt19 = getelementptr inbounds %struct.anon.67, ptr %rko_u, i32 0, i32 0, !dbg !8469
  store ptr %call18, ptr %rkt19, align 8, !dbg !8470, !tbaa !4126
  %20 = load ptr, ptr %rko, align 8, !dbg !8471, !tbaa !3910
  %rko_u20 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %20, i32 0, i32 15, !dbg !8472
  %msgq = getelementptr inbounds %struct.anon.67, ptr %rko_u20, i32 0, i32 1, !dbg !8473
  call void @rd_kafka_msgq_init(ptr noundef %msgq), !dbg !8474
  %21 = load ptr, ptr %rko, align 8, !dbg !8475, !tbaa !3910
  %rko_u21 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %21, i32 0, i32 15, !dbg !8476
  %msgq22 = getelementptr inbounds %struct.anon.67, ptr %rko_u21, i32 0, i32 1, !dbg !8477
  %22 = load ptr, ptr %rkmq.addr, align 8, !dbg !8478, !tbaa !3910
  call void @rd_kafka_msgq_move(ptr noundef %msgq22, ptr noundef %22), !dbg !8479
  %23 = load ptr, ptr %rk, align 8, !dbg !8480, !tbaa !3910
  %rk_rep = getelementptr inbounds %struct.rd_kafka_s, ptr %23, i32 0, i32 0, !dbg !8481
  %24 = load ptr, ptr %rk_rep, align 8, !dbg !8481, !tbaa !4216
  %25 = load ptr, ptr %rko, align 8, !dbg !8482, !tbaa !3910
  %call23 = call i32 @rd_kafka_q_enq(ptr noundef %24, ptr noundef %25), !dbg !8483
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !8484
  br label %if.end24, !dbg !8485

if.else:                                          ; preds = %lor.lhs.false, %if.end9
  %26 = load ptr, ptr %rk, align 8, !dbg !8486, !tbaa !3910
  %27 = load ptr, ptr %rkmq.addr, align 8, !dbg !8488, !tbaa !3910
  call void @rd_kafka_msgq_purge(ptr noundef %26, ptr noundef %27), !dbg !8489
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then16
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8490
  br label %cleanup, !dbg !8490

cleanup:                                          ; preds = %if.end24, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %rk) #16, !dbg !8490
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !8490

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_msgq_len(ptr noundef %rkmq) #4 !dbg !8491 {
entry:
  %rkmq.addr = alloca ptr, align 8
  store ptr %rkmq, ptr %rkmq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkmq.addr, metadata !8497, metadata !DIExpression()), !dbg !8498
  %0 = load ptr, ptr %rkmq.addr, align 8, !dbg !8499, !tbaa !3910
  %rkmq_msg_cnt = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %0, i32 0, i32 1, !dbg !8500
  %1 = load i32, ptr %rkmq_msg_cnt, align 8, !dbg !8500, !tbaa !8501
  ret i32 %1, !dbg !8502
}

declare !dbg !8503 void @rd_kafka_interceptors_on_acknowledgement_queue(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_kafka_topic_keep(ptr noundef %rkt) #4 !dbg !8506 {
entry:
  %rkt.addr = alloca ptr, align 8
  %lrkt = alloca ptr, align 8
  store ptr %rkt, ptr %rkt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkt.addr, metadata !8510, metadata !DIExpression()), !dbg !8512
  call void @llvm.lifetime.start.p0(i64 8, ptr %lrkt) #16, !dbg !8513
  tail call void @llvm.dbg.declare(metadata ptr %lrkt, metadata !8511, metadata !DIExpression()), !dbg !8514
  %0 = load ptr, ptr %rkt.addr, align 8, !dbg !8515, !tbaa !3910
  %call = call ptr @rd_kafka_rkt_get_lw(ptr noundef %0), !dbg !8515
  store ptr %call, ptr %lrkt, align 8, !dbg !8515, !tbaa !3910
  %cmp = icmp ne ptr %call, null, !dbg !8515
  %conv = zext i1 %cmp to i32, !dbg !8515
  %conv1 = sext i32 %conv to i64, !dbg !8515
  %expval = call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !8515
  %tobool = icmp ne i64 %expval, 0, !dbg !8515
  br i1 %tobool, label %if.then, label %if.else, !dbg !8517

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %lrkt, align 8, !dbg !8518, !tbaa !3910
  call void @rd_kafka_lwtopic_keep(ptr noundef %1), !dbg !8519
  br label %if.end, !dbg !8519

if.else:                                          ; preds = %entry
  %2 = load ptr, ptr %rkt.addr, align 8, !dbg !8520, !tbaa !3910
  %rkt_refcnt = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %2, i32 0, i32 2, !dbg !8520
  %call2 = call i32 @rd_atomic32_add(ptr noundef %rkt_refcnt, i32 noundef 1), !dbg !8520
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load ptr, ptr %rkt.addr, align 8, !dbg !8521, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %lrkt) #16, !dbg !8522
  ret ptr %3, !dbg !8523
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_msgq_init(ptr noundef %rkmq) #4 !dbg !8524 {
entry:
  %rkmq.addr = alloca ptr, align 8
  store ptr %rkmq, ptr %rkmq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkmq.addr, metadata !8528, metadata !DIExpression()), !dbg !8529
  br label %do.body, !dbg !8530

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkmq.addr, align 8, !dbg !8531, !tbaa !3910
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %0, i32 0, i32 0, !dbg !8531
  %tqh_first = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 0, !dbg !8531
  store ptr null, ptr %tqh_first, align 8, !dbg !8531, !tbaa !8533
  %1 = load ptr, ptr %rkmq.addr, align 8, !dbg !8531, !tbaa !3910
  %rkmq_msgs1 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %1, i32 0, i32 0, !dbg !8531
  %tqh_first2 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs1, i32 0, i32 0, !dbg !8531
  %2 = load ptr, ptr %rkmq.addr, align 8, !dbg !8531, !tbaa !3910
  %rkmq_msgs3 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %2, i32 0, i32 0, !dbg !8531
  %tqh_last = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs3, i32 0, i32 1, !dbg !8531
  store ptr %tqh_first2, ptr %tqh_last, align 8, !dbg !8531, !tbaa !8534
  br label %do.end, !dbg !8531

do.end:                                           ; preds = %do.body
  %3 = load ptr, ptr %rkmq.addr, align 8, !dbg !8535, !tbaa !3910
  %rkmq_msg_cnt = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %3, i32 0, i32 1, !dbg !8536
  store i32 0, ptr %rkmq_msg_cnt, align 8, !dbg !8537, !tbaa !8501
  %4 = load ptr, ptr %rkmq.addr, align 8, !dbg !8538, !tbaa !3910
  %rkmq_msg_bytes = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %4, i32 0, i32 2, !dbg !8539
  store i64 0, ptr %rkmq_msg_bytes, align 8, !dbg !8540, !tbaa !8541
  ret void, !dbg !8542
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_msgq_move(ptr noundef %dst, ptr noundef %src) #4 !dbg !8543 {
entry:
  %dst.addr = alloca ptr, align 8
  %src.addr = alloca ptr, align 8
  store ptr %dst, ptr %dst.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %dst.addr, metadata !8547, metadata !DIExpression()), !dbg !8549
  store ptr %src, ptr %src.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %src.addr, metadata !8548, metadata !DIExpression()), !dbg !8550
  br label %do.body, !dbg !8551

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %src.addr, align 8, !dbg !8552, !tbaa !3910
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %0, i32 0, i32 0, !dbg !8552
  %tqh_first = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 0, !dbg !8552
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !8552, !tbaa !8533
  %tobool = icmp ne ptr %1, null, !dbg !8552
  br i1 %tobool, label %if.then, label %if.else, !dbg !8555

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %dst.addr, align 8, !dbg !8556, !tbaa !3910
  %rkmq_msgs1 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %2, i32 0, i32 0, !dbg !8556
  %tqh_first2 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs1, i32 0, i32 0, !dbg !8556
  %3 = load ptr, ptr %src.addr, align 8, !dbg !8556, !tbaa !3910
  %rkmq_msgs3 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %3, i32 0, i32 0, !dbg !8556
  %tqh_first4 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs3, i32 0, i32 0, !dbg !8556
  %4 = load ptr, ptr %tqh_first4, align 8, !dbg !8556, !tbaa !8533
  %rkm_link = getelementptr inbounds %struct.rd_kafka_msg_s, ptr %4, i32 0, i32 1, !dbg !8556
  %tqe_prev = getelementptr inbounds %struct.anon.51, ptr %rkm_link, i32 0, i32 1, !dbg !8556
  store ptr %tqh_first2, ptr %tqe_prev, align 8, !dbg !8556, !tbaa !8558
  %5 = load ptr, ptr %src.addr, align 8, !dbg !8556, !tbaa !3910
  %rkmq_msgs5 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %5, i32 0, i32 0, !dbg !8556
  %tqh_first6 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs5, i32 0, i32 0, !dbg !8556
  %6 = load ptr, ptr %tqh_first6, align 8, !dbg !8556, !tbaa !8533
  %7 = load ptr, ptr %dst.addr, align 8, !dbg !8556, !tbaa !3910
  %rkmq_msgs7 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %7, i32 0, i32 0, !dbg !8556
  %tqh_first8 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs7, i32 0, i32 0, !dbg !8556
  store ptr %6, ptr %tqh_first8, align 8, !dbg !8556, !tbaa !8533
  %8 = load ptr, ptr %src.addr, align 8, !dbg !8556, !tbaa !3910
  %rkmq_msgs9 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %8, i32 0, i32 0, !dbg !8556
  %tqh_last = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs9, i32 0, i32 1, !dbg !8556
  %9 = load ptr, ptr %tqh_last, align 8, !dbg !8556, !tbaa !8534
  %10 = load ptr, ptr %dst.addr, align 8, !dbg !8556, !tbaa !3910
  %rkmq_msgs10 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %10, i32 0, i32 0, !dbg !8556
  %tqh_last11 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs10, i32 0, i32 1, !dbg !8556
  store ptr %9, ptr %tqh_last11, align 8, !dbg !8556, !tbaa !8534
  br label %do.body12, !dbg !8556

do.body12:                                        ; preds = %if.then
  %11 = load ptr, ptr %src.addr, align 8, !dbg !8561, !tbaa !3910
  %rkmq_msgs13 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %11, i32 0, i32 0, !dbg !8561
  %tqh_first14 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs13, i32 0, i32 0, !dbg !8561
  store ptr null, ptr %tqh_first14, align 8, !dbg !8561, !tbaa !8533
  %12 = load ptr, ptr %src.addr, align 8, !dbg !8561, !tbaa !3910
  %rkmq_msgs15 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %12, i32 0, i32 0, !dbg !8561
  %tqh_first16 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs15, i32 0, i32 0, !dbg !8561
  %13 = load ptr, ptr %src.addr, align 8, !dbg !8561, !tbaa !3910
  %rkmq_msgs17 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %13, i32 0, i32 0, !dbg !8561
  %tqh_last18 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs17, i32 0, i32 1, !dbg !8561
  store ptr %tqh_first16, ptr %tqh_last18, align 8, !dbg !8561, !tbaa !8534
  br label %do.end, !dbg !8561

do.end:                                           ; preds = %do.body12
  br label %if.end, !dbg !8556

if.else:                                          ; preds = %do.body
  br label %do.body19, !dbg !8552

do.body19:                                        ; preds = %if.else
  %14 = load ptr, ptr %dst.addr, align 8, !dbg !8563, !tbaa !3910
  %rkmq_msgs20 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %14, i32 0, i32 0, !dbg !8563
  %tqh_first21 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs20, i32 0, i32 0, !dbg !8563
  store ptr null, ptr %tqh_first21, align 8, !dbg !8563, !tbaa !8533
  %15 = load ptr, ptr %dst.addr, align 8, !dbg !8563, !tbaa !3910
  %rkmq_msgs22 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %15, i32 0, i32 0, !dbg !8563
  %tqh_first23 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs22, i32 0, i32 0, !dbg !8563
  %16 = load ptr, ptr %dst.addr, align 8, !dbg !8563, !tbaa !3910
  %rkmq_msgs24 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %16, i32 0, i32 0, !dbg !8563
  %tqh_last25 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs24, i32 0, i32 1, !dbg !8563
  store ptr %tqh_first23, ptr %tqh_last25, align 8, !dbg !8563, !tbaa !8534
  br label %do.end26, !dbg !8563

do.end26:                                         ; preds = %do.body19
  br label %if.end

if.end:                                           ; preds = %do.end26, %do.end
  br label %do.end27, !dbg !8555

do.end27:                                         ; preds = %if.end
  %17 = load ptr, ptr %src.addr, align 8, !dbg !8565, !tbaa !3910
  %rkmq_msg_cnt = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %17, i32 0, i32 1, !dbg !8566
  %18 = load i32, ptr %rkmq_msg_cnt, align 8, !dbg !8566, !tbaa !8501
  %19 = load ptr, ptr %dst.addr, align 8, !dbg !8567, !tbaa !3910
  %rkmq_msg_cnt28 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %19, i32 0, i32 1, !dbg !8568
  store i32 %18, ptr %rkmq_msg_cnt28, align 8, !dbg !8569, !tbaa !8501
  %20 = load ptr, ptr %src.addr, align 8, !dbg !8570, !tbaa !3910
  %rkmq_msg_bytes = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %20, i32 0, i32 2, !dbg !8571
  %21 = load i64, ptr %rkmq_msg_bytes, align 8, !dbg !8571, !tbaa !8541
  %22 = load ptr, ptr %dst.addr, align 8, !dbg !8572, !tbaa !3910
  %rkmq_msg_bytes29 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %22, i32 0, i32 2, !dbg !8573
  store i64 %21, ptr %rkmq_msg_bytes29, align 8, !dbg !8574, !tbaa !8541
  %23 = load ptr, ptr %src.addr, align 8, !dbg !8575, !tbaa !3910
  call void @rd_kafka_msgq_init(ptr noundef %23), !dbg !8576
  br label %do.body30, !dbg !8577

do.body30:                                        ; preds = %do.end27
  br label %do.end31, !dbg !8578

do.end31:                                         ; preds = %do.body30
  ret void, !dbg !8580
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_msgq_purge(ptr noundef %rk, ptr noundef %rkmq) #4 !dbg !8581 {
entry:
  %rk.addr = alloca ptr, align 8
  %rkmq.addr = alloca ptr, align 8
  %rkm = alloca ptr, align 8
  %next = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !8585, metadata !DIExpression()), !dbg !8590
  store ptr %rkmq, ptr %rkmq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkmq.addr, metadata !8586, metadata !DIExpression()), !dbg !8591
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkm) #16, !dbg !8592
  tail call void @llvm.dbg.declare(metadata ptr %rkm, metadata !8587, metadata !DIExpression()), !dbg !8593
  call void @llvm.lifetime.start.p0(i64 8, ptr %next) #16, !dbg !8592
  tail call void @llvm.dbg.declare(metadata ptr %next, metadata !8589, metadata !DIExpression()), !dbg !8594
  %0 = load ptr, ptr %rkmq.addr, align 8, !dbg !8595, !tbaa !3910
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %0, i32 0, i32 0, !dbg !8595
  %tqh_first = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 0, !dbg !8595
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !8595, !tbaa !8533
  store ptr %1, ptr %next, align 8, !dbg !8596, !tbaa !3910
  br label %while.cond, !dbg !8597

while.cond:                                       ; preds = %while.body, %entry
  %2 = load ptr, ptr %next, align 8, !dbg !8598, !tbaa !3910
  %tobool = icmp ne ptr %2, null, !dbg !8597
  br i1 %tobool, label %while.body, label %while.end, !dbg !8597

while.body:                                       ; preds = %while.cond
  %3 = load ptr, ptr %next, align 8, !dbg !8599, !tbaa !3910
  store ptr %3, ptr %rkm, align 8, !dbg !8601, !tbaa !3910
  %4 = load ptr, ptr %next, align 8, !dbg !8602, !tbaa !3910
  %rkm_link = getelementptr inbounds %struct.rd_kafka_msg_s, ptr %4, i32 0, i32 1, !dbg !8602
  %tqe_next = getelementptr inbounds %struct.anon.51, ptr %rkm_link, i32 0, i32 0, !dbg !8602
  %5 = load ptr, ptr %tqe_next, align 8, !dbg !8602, !tbaa !8603
  store ptr %5, ptr %next, align 8, !dbg !8604, !tbaa !3910
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !8605, !tbaa !3910
  %7 = load ptr, ptr %rkm, align 8, !dbg !8606, !tbaa !3910
  call void @rd_kafka_msg_destroy(ptr noundef %6, ptr noundef %7), !dbg !8607
  br label %while.cond, !dbg !8597, !llvm.loop !8608

while.end:                                        ; preds = %while.cond
  %8 = load ptr, ptr %rkmq.addr, align 8, !dbg !8610, !tbaa !3910
  call void @rd_kafka_msgq_init(ptr noundef %8), !dbg !8611
  call void @llvm.lifetime.end.p0(i64 8, ptr %next) #16, !dbg !8612
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkm) #16, !dbg !8612
  ret void, !dbg !8612
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_dr_implicit_ack(ptr noundef %rkb, ptr noundef %rktp, i64 noundef %last_msgid) #0 !dbg !8613 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rktp.addr = alloca ptr, align 8
  %last_msgid.addr = alloca i64, align 8
  %acked = alloca %struct.rd_kafka_msgq_s, align 8
  %acked2 = alloca %struct.rd_kafka_msgq_s, align 8
  %status = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !8617, metadata !DIExpression()), !dbg !8628
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !8618, metadata !DIExpression()), !dbg !8629
  store i64 %last_msgid, ptr %last_msgid.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %last_msgid.addr, metadata !8619, metadata !DIExpression()), !dbg !8630
  call void @llvm.lifetime.start.p0(i64 64, ptr %acked) #16, !dbg !8631
  tail call void @llvm.dbg.declare(metadata ptr %acked, metadata !8620, metadata !DIExpression()), !dbg !8632
  call void @llvm.memset.p0.i64(ptr align 8 %acked, i8 0, i64 64, i1 false), !dbg !8632
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %acked, i32 0, i32 0, !dbg !8633
  %tqh_last = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 1, !dbg !8633
  %rkmq_msgs1 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %acked, i32 0, i32 0, !dbg !8633
  %tqh_first = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs1, i32 0, i32 0, !dbg !8633
  store ptr %tqh_first, ptr %tqh_last, align 8, !dbg !8633, !tbaa !8634
  call void @llvm.lifetime.start.p0(i64 64, ptr %acked2) #16, !dbg !8635
  tail call void @llvm.dbg.declare(metadata ptr %acked2, metadata !8621, metadata !DIExpression()), !dbg !8636
  call void @llvm.memset.p0.i64(ptr align 8 %acked2, i8 0, i64 64, i1 false), !dbg !8636
  %rkmq_msgs2 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %acked2, i32 0, i32 0, !dbg !8637
  %tqh_last4 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs2, i32 0, i32 1, !dbg !8637
  %rkmq_msgs5 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %acked2, i32 0, i32 0, !dbg !8637
  %tqh_first6 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs5, i32 0, i32 0, !dbg !8637
  store ptr %tqh_first6, ptr %tqh_last4, align 8, !dbg !8637, !tbaa !8634
  call void @llvm.lifetime.start.p0(i64 4, ptr %status) #16, !dbg !8638
  tail call void @llvm.dbg.declare(metadata ptr %status, metadata !8622, metadata !DIExpression()), !dbg !8639
  store i32 1, ptr %status, align 4, !dbg !8639, !tbaa !4126
  %0 = load ptr, ptr %rktp.addr, align 8, !dbg !8640, !tbaa !3910
  %rktp_rkt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %0, i32 0, i32 6, !dbg !8642
  %1 = load ptr, ptr %rktp_rkt, align 8, !dbg !8642, !tbaa !8643
  %rkt_conf = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %1, i32 0, i32 21, !dbg !8644
  %required_acks = getelementptr inbounds %struct.rd_kafka_topic_conf_s, ptr %rkt_conf, i32 0, i32 1, !dbg !8645
  %2 = load i32, ptr %required_acks, align 8, !dbg !8645, !tbaa !8646
  %cmp = icmp ne i32 %2, 0, !dbg !8647
  br i1 %cmp, label %if.then, label %if.end, !dbg !8648

if.then:                                          ; preds = %entry
  store i32 2, ptr %status, align 4, !dbg !8649, !tbaa !4126
  br label %if.end, !dbg !8650

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %rktp.addr, align 8, !dbg !8651, !tbaa !3910
  %rktp_xmit_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %3, i32 0, i32 17, !dbg !8652
  %4 = load i64, ptr %last_msgid.addr, align 8, !dbg !8653, !tbaa !4039
  %5 = load i32, ptr %status, align 4, !dbg !8654, !tbaa !4126
  call void @rd_kafka_msgq_move_acked(ptr noundef %acked, ptr noundef %rktp_xmit_msgq, i64 noundef %4, i32 noundef %5), !dbg !8655
  %6 = load ptr, ptr %rktp.addr, align 8, !dbg !8656, !tbaa !3910
  %rktp_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %6, i32 0, i32 16, !dbg !8657
  %7 = load i64, ptr %last_msgid.addr, align 8, !dbg !8658, !tbaa !4039
  %8 = load i32, ptr %status, align 4, !dbg !8659, !tbaa !4126
  call void @rd_kafka_msgq_move_acked(ptr noundef %acked2, ptr noundef %rktp_msgq, i64 noundef %7, i32 noundef %8), !dbg !8660
  %9 = load ptr, ptr %rktp.addr, align 8, !dbg !8661, !tbaa !3910
  %rktp_rkt7 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %9, i32 0, i32 6, !dbg !8662
  %10 = load ptr, ptr %rktp_rkt7, align 8, !dbg !8662, !tbaa !8643
  %rkt_conf8 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %10, i32 0, i32 21, !dbg !8663
  %msg_order_cmp = getelementptr inbounds %struct.rd_kafka_topic_conf_s, ptr %rkt_conf8, i32 0, i32 8, !dbg !8664
  %11 = load ptr, ptr %msg_order_cmp, align 8, !dbg !8664, !tbaa !8665
  call void @rd_kafka_msgq_insert_msgq(ptr noundef %acked, ptr noundef %acked2, ptr noundef %11), !dbg !8666
  %call = call i32 @rd_kafka_msgq_len(ptr noundef %acked), !dbg !8667
  %tobool = icmp ne i32 %call, 0, !dbg !8667
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !8669

if.then9:                                         ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8670

if.end10:                                         ; preds = %if.end
  br label %do.body, !dbg !8671

do.body:                                          ; preds = %if.end10
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !8672, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 32, !dbg !8672
  %13 = load ptr, ptr %rkb_rk, align 8, !dbg !8672, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !8672
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !8672
  %14 = load i32, ptr %debug, align 8, !dbg !8672, !tbaa !4140
  %and = and i32 %14, 32832, !dbg !8672
  %conv = sext i32 %and to i64, !dbg !8672
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8672
  %tobool11 = icmp ne i64 %expval, 0, !dbg !8672
  br i1 %tobool11, label %if.then12, label %if.end34, !dbg !8673

if.then12:                                        ; preds = %do.body
  br label %do.body13, !dbg !8674

do.body13:                                        ; preds = %if.then12
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !8675
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !8623, metadata !DIExpression()), !dbg !8675
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !8675, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 49, !dbg !8675
  %call14 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !8675
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !8675
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !8675, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 48, !dbg !8675
  %17 = load ptr, ptr %rkb_logname, align 8, !dbg !8675, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %17, i64 noundef 256), !dbg !8675
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !8675, !tbaa !3910
  %rkb_logname_lock15 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 49, !dbg !8675
  %call16 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock15), !dbg !8675
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !8675, !tbaa !3910
  %rkb_rk17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 32, !dbg !8675
  %20 = load ptr, ptr %rkb_rk17, align 8, !dbg !8675, !tbaa !4139
  %rk_conf18 = getelementptr inbounds %struct.rd_kafka_s, ptr %20, i32 0, i32 18, !dbg !8675
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !8675, !tbaa !3910
  %rkb_rk19 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 32, !dbg !8675
  %22 = load ptr, ptr %rkb_rk19, align 8, !dbg !8675, !tbaa !4139
  %arraydecay20 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !8675
  %23 = load ptr, ptr %rktp.addr, align 8, !dbg !8675, !tbaa !3910
  %rktp_rkt21 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %23, i32 0, i32 6, !dbg !8675
  %24 = load ptr, ptr %rktp_rkt21, align 8, !dbg !8675, !tbaa !8643
  %rkt_topic = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %24, i32 0, i32 4, !dbg !8675
  %25 = load ptr, ptr %rkt_topic, align 8, !dbg !8675, !tbaa !8676
  %len = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %25, i32 0, i32 0, !dbg !8675
  %26 = load i32, ptr %len, align 8, !dbg !8675, !tbaa !8677
  %cmp22 = icmp eq i32 %26, -1, !dbg !8675
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !8675

cond.true:                                        ; preds = %do.body13
  br label %cond.end, !dbg !8675

cond.false:                                       ; preds = %do.body13
  %27 = load ptr, ptr %rktp.addr, align 8, !dbg !8675, !tbaa !3910
  %rktp_rkt24 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %27, i32 0, i32 6, !dbg !8675
  %28 = load ptr, ptr %rktp_rkt24, align 8, !dbg !8675, !tbaa !8643
  %rkt_topic25 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %28, i32 0, i32 4, !dbg !8675
  %29 = load ptr, ptr %rkt_topic25, align 8, !dbg !8675, !tbaa !8676
  %len26 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %29, i32 0, i32 0, !dbg !8675
  %30 = load i32, ptr %len26, align 8, !dbg !8675, !tbaa !8677
  br label %cond.end, !dbg !8675

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %30, %cond.false ], !dbg !8675
  %31 = load ptr, ptr %rktp.addr, align 8, !dbg !8675, !tbaa !3910
  %rktp_rkt27 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %31, i32 0, i32 6, !dbg !8675
  %32 = load ptr, ptr %rktp_rkt27, align 8, !dbg !8675, !tbaa !8643
  %rkt_topic28 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %32, i32 0, i32 4, !dbg !8675
  %33 = load ptr, ptr %rkt_topic28, align 8, !dbg !8675, !tbaa !8676
  %str = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %33, i32 0, i32 1, !dbg !8675
  %34 = load ptr, ptr %str, align 8, !dbg !8675, !tbaa !8679
  %35 = load ptr, ptr %rktp.addr, align 8, !dbg !8675, !tbaa !3910
  %rktp_partition = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %35, i32 0, i32 7, !dbg !8675
  %36 = load i32, ptr %rktp_partition, align 8, !dbg !8675, !tbaa !8680
  %call29 = call i32 @rd_kafka_msgq_len(ptr noundef %acked), !dbg !8675
  %call30 = call ptr @rd_kafka_msgq_first(ptr noundef %acked), !dbg !8675
  %rkm_u = getelementptr inbounds %struct.rd_kafka_msg_s, ptr %call30, i32 0, i32 8, !dbg !8675
  %msgid = getelementptr inbounds %struct.anon.53, ptr %rkm_u, i32 0, i32 3, !dbg !8675
  %37 = load i64, ptr %msgid, align 8, !dbg !8675, !tbaa !4126
  %call31 = call ptr @rd_kafka_msgq_last(ptr noundef %acked), !dbg !8675
  %rkm_u32 = getelementptr inbounds %struct.rd_kafka_msg_s, ptr %call31, i32 0, i32 8, !dbg !8675
  %msgid33 = getelementptr inbounds %struct.anon.53, ptr %rkm_u32, i32 0, i32 3, !dbg !8675
  %38 = load i64, ptr %msgid33, align 8, !dbg !8675, !tbaa !4126
  %39 = load i64, ptr %last_msgid.addr, align 8, !dbg !8675, !tbaa !4039
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf18, ptr noundef %22, ptr noundef %arraydecay20, i32 noundef 7, i32 noundef 32832, ptr noundef @.str.54, ptr noundef @.str.55, i32 noundef %cond, ptr noundef %34, i32 noundef %36, i32 noundef %call29, i64 noundef %37, i64 noundef %38, i64 noundef %39), !dbg !8675
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !8674
  br label %do.cond, !dbg !8675

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !8675

do.end:                                           ; preds = %do.cond
  br label %if.end34, !dbg !8674

if.end34:                                         ; preds = %do.end, %do.body
  br label %do.cond35, !dbg !8673

do.cond35:                                        ; preds = %if.end34
  br label %do.end36, !dbg !8673

do.end36:                                         ; preds = %do.cond35
  %40 = load ptr, ptr %rktp.addr, align 8, !dbg !8681, !tbaa !3910
  %rktp_rkt37 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %40, i32 0, i32 6, !dbg !8682
  %41 = load ptr, ptr %rktp_rkt37, align 8, !dbg !8682, !tbaa !8643
  call void @rd_kafka_dr_msgq(ptr noundef %41, ptr noundef %acked, i32 noundef 0), !dbg !8683
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8684
  br label %cleanup, !dbg !8684

cleanup:                                          ; preds = %do.end36, %if.then9
  call void @llvm.lifetime.end.p0(i64 4, ptr %status) #16, !dbg !8684
  call void @llvm.lifetime.end.p0(i64 64, ptr %acked2) #16, !dbg !8684
  call void @llvm.lifetime.end.p0(i64 64, ptr %acked) #16, !dbg !8684
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !8684

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !8685 void @rd_kafka_msgq_move_acked(ptr noundef, ptr noundef, i64 noundef, i32 noundef) #3

declare !dbg !8688 void @rd_kafka_msgq_insert_msgq(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_kafka_msgq_first(ptr noundef %rkmq) #4 !dbg !8691 {
entry:
  %rkmq.addr = alloca ptr, align 8
  store ptr %rkmq, ptr %rkmq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkmq.addr, metadata !8695, metadata !DIExpression()), !dbg !8696
  %0 = load ptr, ptr %rkmq.addr, align 8, !dbg !8697, !tbaa !3910
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %0, i32 0, i32 0, !dbg !8697
  %tqh_first = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 0, !dbg !8697
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !8697, !tbaa !8533
  ret ptr %1, !dbg !8698
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_kafka_msgq_last(ptr noundef %rkmq) #4 !dbg !8699 {
entry:
  %rkmq.addr = alloca ptr, align 8
  store ptr %rkmq, ptr %rkmq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkmq.addr, metadata !8701, metadata !DIExpression()), !dbg !8702
  %0 = load ptr, ptr %rkmq.addr, align 8, !dbg !8703, !tbaa !3910
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %0, i32 0, i32 0, !dbg !8703
  %tqh_last = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 1, !dbg !8703
  %1 = load ptr, ptr %tqh_last, align 8, !dbg !8703, !tbaa !8534
  %tqh_last1 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %1, i32 0, i32 1, !dbg !8703
  %2 = load ptr, ptr %tqh_last1, align 8, !dbg !8703, !tbaa !8634
  %3 = load ptr, ptr %2, align 8, !dbg !8703, !tbaa !3910
  ret ptr %3, !dbg !8704
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_destroy_final(ptr noundef %rkb) #0 !dbg !8705 {
entry:
  %rkb.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !8707, metadata !DIExpression()), !dbg !8708
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !8709, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !8709
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !8709, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %1), !dbg !8709
  %tobool = icmp ne i32 %call, 0, !dbg !8709
  br i1 %tobool, label %if.then, label %if.else, !dbg !8712

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !8712

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.56, ptr noundef @.str.20, i32 noundef 4680, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_destroy_final) #18, !dbg !8709
  unreachable, !dbg !8709

if.end:                                           ; preds = %if.then
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !8713, !tbaa !3910
  %rkb_monitors = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 56, !dbg !8713
  %tqh_first = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors, i32 0, i32 0, !dbg !8713
  %3 = load ptr, ptr %tqh_first, align 8, !dbg !8713, !tbaa !4403
  %cmp = icmp eq ptr %3, null, !dbg !8713
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !8716

if.then1:                                         ; preds = %if.end
  br label %if.end3, !dbg !8716

if.else2:                                         ; preds = %if.end
  call void @__assert_fail(ptr noundef @.str.57, ptr noundef @.str.20, i32 noundef 4681, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_destroy_final) #18, !dbg !8713
  unreachable, !dbg !8713

if.end3:                                          ; preds = %if.then1
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !8717, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 35, !dbg !8717
  %rkbq_bufs = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs, i32 0, i32 0, !dbg !8717
  %tqh_first4 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs, i32 0, i32 0, !dbg !8717
  %5 = load ptr, ptr %tqh_first4, align 8, !dbg !8717, !tbaa !5348
  %cmp5 = icmp eq ptr %5, null, !dbg !8717
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !8720

if.then6:                                         ; preds = %if.end3
  br label %if.end8, !dbg !8720

if.else7:                                         ; preds = %if.end3
  call void @__assert_fail(ptr noundef @.str.58, ptr noundef @.str.20, i32 noundef 4682, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_destroy_final) #18, !dbg !8717
  unreachable, !dbg !8717

if.end8:                                          ; preds = %if.then6
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !8721, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 36, !dbg !8721
  %rkbq_bufs9 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_waitresps, i32 0, i32 0, !dbg !8721
  %tqh_first10 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs9, i32 0, i32 0, !dbg !8721
  %7 = load ptr, ptr %tqh_first10, align 8, !dbg !8721, !tbaa !8724
  %cmp11 = icmp eq ptr %7, null, !dbg !8721
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !8725

if.then12:                                        ; preds = %if.end8
  br label %if.end14, !dbg !8725

if.else13:                                        ; preds = %if.end8
  call void @__assert_fail(ptr noundef @.str.59, ptr noundef @.str.20, i32 noundef 4683, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_destroy_final) #18, !dbg !8721
  unreachable, !dbg !8721

if.end14:                                         ; preds = %if.then12
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !8726, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 37, !dbg !8726
  %rkbq_bufs15 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_retrybufs, i32 0, i32 0, !dbg !8726
  %tqh_first16 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs15, i32 0, i32 0, !dbg !8726
  %9 = load ptr, ptr %tqh_first16, align 8, !dbg !8726, !tbaa !8729
  %cmp17 = icmp eq ptr %9, null, !dbg !8726
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !8730

if.then18:                                        ; preds = %if.end14
  br label %if.end20, !dbg !8730

if.else19:                                        ; preds = %if.end14
  call void @__assert_fail(ptr noundef @.str.60, ptr noundef @.str.20, i32 noundef 4684, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_destroy_final) #18, !dbg !8726
  unreachable, !dbg !8726

if.end20:                                         ; preds = %if.then18
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !8731, !tbaa !3910
  %rkb_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 11, !dbg !8731
  %tqh_first21 = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars, i32 0, i32 0, !dbg !8731
  %11 = load ptr, ptr %tqh_first21, align 8, !dbg !8731, !tbaa !4637
  %cmp22 = icmp eq ptr %11, null, !dbg !8731
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !8734

if.then23:                                        ; preds = %if.end20
  br label %if.end25, !dbg !8734

if.else24:                                        ; preds = %if.end20
  call void @__assert_fail(ptr noundef @.str.61, ptr noundef @.str.20, i32 noundef 4685, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_destroy_final) #18, !dbg !8731
  unreachable, !dbg !8731

if.end25:                                         ; preds = %if.then23
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !8735, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 27, !dbg !8737
  %13 = load i32, ptr %rkb_source, align 8, !dbg !8737, !tbaa !4174
  %cmp26 = icmp ne i32 %13, 2, !dbg !8738
  br i1 %cmp26, label %land.lhs.true, label %if.end33, !dbg !8739

land.lhs.true:                                    ; preds = %if.end25
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !8740, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 32, !dbg !8741
  %15 = load ptr, ptr %rkb_rk, align 8, !dbg !8741, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %15, i32 0, i32 18, !dbg !8742
  %security_protocol = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 38, !dbg !8743
  %16 = load i32, ptr %security_protocol, align 8, !dbg !8743, !tbaa !4852
  %cmp27 = icmp eq i32 %16, 2, !dbg !8744
  br i1 %cmp27, label %if.then32, label %lor.lhs.false, !dbg !8745

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !8746, !tbaa !3910
  %rkb_rk28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 32, !dbg !8747
  %18 = load ptr, ptr %rkb_rk28, align 8, !dbg !8747, !tbaa !4139
  %rk_conf29 = getelementptr inbounds %struct.rd_kafka_s, ptr %18, i32 0, i32 18, !dbg !8748
  %security_protocol30 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf29, i32 0, i32 38, !dbg !8749
  %19 = load i32, ptr %security_protocol30, align 8, !dbg !8749, !tbaa !4852
  %cmp31 = icmp eq i32 %19, 3, !dbg !8750
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !8751

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !8752, !tbaa !3910
  call void @rd_kafka_sasl_broker_term(ptr noundef %20), !dbg !8753
  br label %if.end33, !dbg !8753

if.end33:                                         ; preds = %if.then32, %lor.lhs.false, %if.end25
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !8754, !tbaa !3910
  %rkb_wakeup_fd = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 50, !dbg !8756
  %arrayidx = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd, i64 0, i64 0, !dbg !8754
  %22 = load i32, ptr %arrayidx, align 8, !dbg !8754, !tbaa !3959
  %cmp34 = icmp ne i32 %22, -1, !dbg !8757
  br i1 %cmp34, label %if.then35, label %if.end39, !dbg !8758

if.then35:                                        ; preds = %if.end33
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !8759, !tbaa !3910
  %rkb_wakeup_fd36 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 50, !dbg !8759
  %arrayidx37 = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd36, i64 0, i64 0, !dbg !8759
  %24 = load i32, ptr %arrayidx37, align 8, !dbg !8759, !tbaa !3959
  %call38 = call i32 @close(i32 noundef %24), !dbg !8759
  br label %if.end39, !dbg !8759

if.end39:                                         ; preds = %if.then35, %if.end33
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !8760, !tbaa !3910
  %rkb_wakeup_fd40 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 50, !dbg !8762
  %arrayidx41 = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd40, i64 0, i64 1, !dbg !8760
  %26 = load i32, ptr %arrayidx41, align 4, !dbg !8760, !tbaa !3959
  %cmp42 = icmp ne i32 %26, -1, !dbg !8763
  br i1 %cmp42, label %if.then43, label %if.end47, !dbg !8764

if.then43:                                        ; preds = %if.end39
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !8765, !tbaa !3910
  %rkb_wakeup_fd44 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 50, !dbg !8765
  %arrayidx45 = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd44, i64 0, i64 1, !dbg !8765
  %28 = load i32, ptr %arrayidx45, align 4, !dbg !8765, !tbaa !3959
  %call46 = call i32 @close(i32 noundef %28), !dbg !8765
  br label %if.end47, !dbg !8765

if.end47:                                         ; preds = %if.then43, %if.end39
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !8766, !tbaa !3910
  %rkb_recv_buf = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 33, !dbg !8768
  %30 = load ptr, ptr %rkb_recv_buf, align 8, !dbg !8768, !tbaa !4544
  %tobool48 = icmp ne ptr %30, null, !dbg !8766
  br i1 %tobool48, label %if.then49, label %if.end56, !dbg !8769

if.then49:                                        ; preds = %if.end47
  br label %do.body, !dbg !8770

do.body:                                          ; preds = %if.then49
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !8771, !tbaa !3910
  %rkb_recv_buf50 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 33, !dbg !8771
  %32 = load ptr, ptr %rkb_recv_buf50, align 8, !dbg !8771, !tbaa !4544
  %rkbuf_refcnt = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %32, i32 0, i32 21, !dbg !8771
  %call51 = call i32 @rd_refcnt_sub0(ptr noundef %rkbuf_refcnt), !dbg !8771
  %cmp52 = icmp sgt i32 %call51, 0, !dbg !8771
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !8774

if.then53:                                        ; preds = %do.body
  br label %do.end, !dbg !8771

if.end54:                                         ; preds = %do.body
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !8774, !tbaa !3910
  %rkb_recv_buf55 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 33, !dbg !8774
  %34 = load ptr, ptr %rkb_recv_buf55, align 8, !dbg !8774, !tbaa !4544
  call void @rd_kafka_buf_destroy_final(ptr noundef %34), !dbg !8774
  br label %do.end, !dbg !8774

do.end:                                           ; preds = %if.end54, %if.then53
  br label %if.end56, !dbg !8774

if.end56:                                         ; preds = %do.end, %if.end47
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !8775, !tbaa !3910
  %rkb_rsal = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 2, !dbg !8777
  %36 = load ptr, ptr %rkb_rsal, align 8, !dbg !8777, !tbaa !8778
  %tobool57 = icmp ne ptr %36, null, !dbg !8775
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !8779

if.then58:                                        ; preds = %if.end56
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !8780, !tbaa !3910
  %rkb_rsal59 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 2, !dbg !8781
  %38 = load ptr, ptr %rkb_rsal59, align 8, !dbg !8781, !tbaa !8778
  call void @rd_sockaddr_list_destroy(ptr noundef %38), !dbg !8782
  br label %if.end60, !dbg !8782

if.end60:                                         ; preds = %if.then58, %if.end56
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !8783, !tbaa !3910
  %rkb_ApiVersions = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 24, !dbg !8785
  %40 = load ptr, ptr %rkb_ApiVersions, align 8, !dbg !8785, !tbaa !3972
  %tobool61 = icmp ne ptr %40, null, !dbg !8783
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !8786

if.then62:                                        ; preds = %if.end60
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !8787, !tbaa !3910
  %rkb_ApiVersions63 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 24, !dbg !8788
  %42 = load ptr, ptr %rkb_ApiVersions63, align 8, !dbg !8788, !tbaa !3972
  call void @rd_free(ptr noundef %42), !dbg !8789
  br label %if.end64, !dbg !8789

if.end64:                                         ; preds = %if.then62, %if.end60
  %43 = load ptr, ptr %rkb.addr, align 8, !dbg !8790, !tbaa !3910
  %rkb_origname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %43, i32 0, i32 45, !dbg !8791
  %44 = load ptr, ptr %rkb_origname, align 8, !dbg !8791, !tbaa !4318
  call void @rd_free(ptr noundef %44), !dbg !8792
  %45 = load ptr, ptr %rkb.addr, align 8, !dbg !8793, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %45, i32 0, i32 8, !dbg !8793
  %46 = load ptr, ptr %rkb_ops, align 8, !dbg !8793, !tbaa !5475
  %call65 = call i32 @rd_kafka_q_purge0(ptr noundef %46, i32 noundef 1), !dbg !8793
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !8794, !tbaa !3910
  %rkb_ops66 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 8, !dbg !8795
  %48 = load ptr, ptr %rkb_ops66, align 8, !dbg !8795, !tbaa !5475
  call void @rd_kafka_q_destroy_owner(ptr noundef %48), !dbg !8796
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !8797, !tbaa !3910
  %rkb_avg_int_latency = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 38, !dbg !8798
  call void @rd_avg_destroy(ptr noundef %rkb_avg_int_latency), !dbg !8799
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !8800, !tbaa !3910
  %rkb_avg_outbuf_latency = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 39, !dbg !8801
  call void @rd_avg_destroy(ptr noundef %rkb_avg_outbuf_latency), !dbg !8802
  %51 = load ptr, ptr %rkb.addr, align 8, !dbg !8803, !tbaa !3910
  %rkb_avg_rtt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %51, i32 0, i32 40, !dbg !8804
  call void @rd_avg_destroy(ptr noundef %rkb_avg_rtt), !dbg !8805
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !8806, !tbaa !3910
  %rkb_avg_throttle = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 41, !dbg !8807
  call void @rd_avg_destroy(ptr noundef %rkb_avg_throttle), !dbg !8808
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !8809, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %53, i32 0, i32 49, !dbg !8810
  %call67 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !8811
  %54 = load ptr, ptr %rkb.addr, align 8, !dbg !8812, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %54, i32 0, i32 48, !dbg !8813
  %55 = load ptr, ptr %rkb_logname, align 8, !dbg !8813, !tbaa !4628
  call void @rd_free(ptr noundef %55), !dbg !8814
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !8815, !tbaa !3910
  %rkb_logname68 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 48, !dbg !8816
  store ptr null, ptr %rkb_logname68, align 8, !dbg !8817, !tbaa !4628
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !8818, !tbaa !3910
  %rkb_logname_lock69 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %57, i32 0, i32 49, !dbg !8819
  %call70 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock69), !dbg !8820
  %58 = load ptr, ptr %rkb.addr, align 8, !dbg !8821, !tbaa !3910
  %rkb_logname_lock71 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %58, i32 0, i32 49, !dbg !8822
  call void @mtx_destroy(ptr noundef %rkb_logname_lock71), !dbg !8823
  %59 = load ptr, ptr %rkb.addr, align 8, !dbg !8824, !tbaa !3910
  %rkb_rk72 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 32, !dbg !8825
  %60 = load ptr, ptr %rkb_rk72, align 8, !dbg !8825, !tbaa !4139
  %rk_timers = getelementptr inbounds %struct.rd_kafka_s, ptr %60, i32 0, i32 44, !dbg !8826
  %61 = load ptr, ptr %rkb.addr, align 8, !dbg !8827, !tbaa !3910
  %rkb_sasl_reauth_tmr = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %61, i32 0, i32 62, !dbg !8828
  %call73 = call i32 @rd_kafka_timer_stop(ptr noundef %rk_timers, ptr noundef %rkb_sasl_reauth_tmr, i32 noundef 1), !dbg !8829
  %62 = load ptr, ptr %rkb.addr, align 8, !dbg !8830, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %62, i32 0, i32 9, !dbg !8831
  call void @mtx_destroy(ptr noundef %rkb_lock), !dbg !8832
  br label %do.body74, !dbg !8833

do.body74:                                        ; preds = %if.end64
  br label %do.end75, !dbg !8834

do.end75:                                         ; preds = %do.body74
  %63 = load ptr, ptr %rkb.addr, align 8, !dbg !8836, !tbaa !3910
  call void @rd_free(ptr noundef %63), !dbg !8837
  ret void, !dbg !8838
}

declare !dbg !8839 void @rd_kafka_sasl_broker_term(ptr noundef) #3

declare !dbg !8841 i32 @close(i32 noundef) #3

declare !dbg !8842 void @rd_sockaddr_list_destroy(ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_free(ptr noundef %ptr) #4 !dbg !8845 {
entry:
  %ptr.addr = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !8847, metadata !DIExpression()), !dbg !8848
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !8849, !tbaa !3910
  call void @free(ptr noundef %0) #16, !dbg !8850
  ret void, !dbg !8851
}

declare !dbg !8852 i32 @rd_kafka_q_purge0(ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_q_destroy_owner(ptr noundef %rkq) #4 !dbg !8855 {
entry:
  %rkq.addr = alloca ptr, align 8
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !8859, metadata !DIExpression()), !dbg !8860
  %0 = load ptr, ptr %rkq.addr, align 8, !dbg !8861, !tbaa !3910
  call void @rd_kafka_q_destroy0(ptr noundef %0, i32 noundef 1), !dbg !8862
  ret void, !dbg !8863
}

; Function Attrs: nounwind uwtable
define internal void @rd_avg_destroy(ptr noundef %ra) #0 !dbg !8864 {
entry:
  %ra.addr = alloca ptr, align 8
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !8870, !tbaa !3910
  %ra_hdr = getelementptr inbounds %struct.rd_avg_s, ptr %0, i32 0, i32 4, !dbg !8872
  %1 = load ptr, ptr %ra_hdr, align 8, !dbg !8872, !tbaa !8287
  %tobool = icmp ne ptr %1, null, !dbg !8870
  br i1 %tobool, label %if.then, label %if.end, !dbg !8873

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ra.addr, align 8, !dbg !8874, !tbaa !3910
  %ra_hdr1 = getelementptr inbounds %struct.rd_avg_s, ptr %2, i32 0, i32 4, !dbg !8875
  %3 = load ptr, ptr %ra_hdr1, align 8, !dbg !8875, !tbaa !8287
  call void @rd_hdr_histogram_destroy(ptr noundef %3), !dbg !8876
  br label %if.end, !dbg !8876

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %ra.addr, align 8, !dbg !8877, !tbaa !3910
  %ra_lock = getelementptr inbounds %struct.rd_avg_s, ptr %4, i32 0, i32 1, !dbg !8878
  call void @mtx_destroy(ptr noundef %ra_lock), !dbg !8879
  ret void, !dbg !8880
}

declare !dbg !8881 void @mtx_destroy(ptr noundef) #3

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_internal(ptr noundef %rk) #0 !dbg !8884 {
entry:
  %rk.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !8888, metadata !DIExpression()), !dbg !8890
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !8891
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !8889, metadata !DIExpression()), !dbg !8892
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !8893, !tbaa !3910
  %rk_internal_rkb_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 9, !dbg !8894
  %call = call i32 @mtx_lock(ptr noundef %rk_internal_rkb_lock), !dbg !8895
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !8896, !tbaa !3910
  %rk_internal_rkb = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 10, !dbg !8897
  %2 = load ptr, ptr %rk_internal_rkb, align 8, !dbg !8897, !tbaa !8898
  store ptr %2, ptr %rkb, align 8, !dbg !8899, !tbaa !3910
  %3 = load ptr, ptr %rkb, align 8, !dbg !8900, !tbaa !3910
  %tobool = icmp ne ptr %3, null, !dbg !8900
  br i1 %tobool, label %if.then, label %if.end, !dbg !8902

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %rkb, align 8, !dbg !8903, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 31, !dbg !8903
  %call1 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !8903
  br label %if.end, !dbg !8903

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !8904, !tbaa !3910
  %rk_internal_rkb_lock2 = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 9, !dbg !8905
  %call3 = call i32 @mtx_unlock(ptr noundef %rk_internal_rkb_lock2), !dbg !8906
  %6 = load ptr, ptr %rkb, align 8, !dbg !8907, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !8908
  ret ptr %6, !dbg !8909
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_add(ptr noundef %rk, i32 noundef %source, i32 noundef %proto, ptr noundef %name, i16 noundef zeroext %port, i32 noundef %nodeid) #0 !dbg !8910 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %source.addr = alloca i32, align 4
  %proto.addr = alloca i32, align 4
  %name.addr = alloca ptr, align 8
  %port.addr = alloca i16, align 2
  %nodeid.addr = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %r = alloca i32, align 4
  %newset = alloca %struct.__sigset_t, align 8
  %oldset = alloca %struct.__sigset_t, align 8
  %_logname = alloca [256 x i8], align 16
  %onebyte = alloca i8, align 1
  %_logname104 = alloca [256 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %_logname213 = alloca [256 x i8], align 16
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !8914, metadata !DIExpression()), !dbg !8951
  store i32 %source, ptr %source.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %source.addr, metadata !8915, metadata !DIExpression()), !dbg !8952
  store i32 %proto, ptr %proto.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %proto.addr, metadata !8916, metadata !DIExpression()), !dbg !8953
  store ptr %name, ptr %name.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !8917, metadata !DIExpression()), !dbg !8954
  store i16 %port, ptr %port.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %port.addr, metadata !8918, metadata !DIExpression()), !dbg !8955
  store i32 %nodeid, ptr %nodeid.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %nodeid.addr, metadata !8919, metadata !DIExpression()), !dbg !8956
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !8957
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !8920, metadata !DIExpression()), !dbg !8958
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !8959
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !8921, metadata !DIExpression()), !dbg !8960
  call void @llvm.lifetime.start.p0(i64 128, ptr %newset) #16, !dbg !8961
  tail call void @llvm.dbg.declare(metadata ptr %newset, metadata !8922, metadata !DIExpression()), !dbg !8962
  call void @llvm.lifetime.start.p0(i64 128, ptr %oldset) #16, !dbg !8961
  tail call void @llvm.dbg.declare(metadata ptr %oldset, metadata !8931, metadata !DIExpression()), !dbg !8963
  %call = call ptr @rd_calloc(i64 noundef 1, i64 noundef 3184), !dbg !8964
  store ptr %call, ptr %rkb, align 8, !dbg !8965, !tbaa !3910
  %0 = load i32, ptr %source.addr, align 4, !dbg !8966, !tbaa !4126
  %cmp = icmp ne i32 %0, 3, !dbg !8968
  br i1 %cmp, label %if.then, label %if.else, !dbg !8969

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkb, align 8, !dbg !8970, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 43, !dbg !8972
  %arraydecay = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !8970
  %2 = load ptr, ptr %name.addr, align 8, !dbg !8973, !tbaa !3910
  %3 = load i16, ptr %port.addr, align 2, !dbg !8974, !tbaa !3915
  call void @rd_kafka_mk_nodename(ptr noundef %arraydecay, i64 noundef 256, ptr noundef %2, i16 noundef zeroext %3), !dbg !8975
  %4 = load ptr, ptr %rkb, align 8, !dbg !8976, !tbaa !3910
  %rkb_name = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 42, !dbg !8977
  %arraydecay1 = getelementptr inbounds [256 x i8], ptr %rkb_name, i64 0, i64 0, !dbg !8976
  %5 = load i32, ptr %proto.addr, align 4, !dbg !8978, !tbaa !4126
  %6 = load ptr, ptr %rkb, align 8, !dbg !8979, !tbaa !3910
  %rkb_nodename2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 43, !dbg !8980
  %arraydecay3 = getelementptr inbounds [256 x i8], ptr %rkb_nodename2, i64 0, i64 0, !dbg !8979
  %7 = load i32, ptr %nodeid.addr, align 4, !dbg !8981, !tbaa !3959
  %8 = load i32, ptr %source.addr, align 4, !dbg !8982, !tbaa !4126
  call void @rd_kafka_mk_brokername(ptr noundef %arraydecay1, i64 noundef 256, i32 noundef %5, ptr noundef %arraydecay3, i32 noundef %7, i32 noundef %8), !dbg !8983
  br label %if.end, !dbg !8984

if.else:                                          ; preds = %entry
  %9 = load ptr, ptr %rkb, align 8, !dbg !8985, !tbaa !3910
  %rkb_name4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 42, !dbg !8985
  %arraydecay5 = getelementptr inbounds [256 x i8], ptr %rkb_name4, i64 0, i64 0, !dbg !8985
  %10 = load ptr, ptr %name.addr, align 8, !dbg !8985, !tbaa !3910
  %call6 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay5, i64 noundef 256, ptr noundef @.str.26, ptr noundef %10) #16, !dbg !8985
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, ptr %source.addr, align 4, !dbg !8987, !tbaa !4126
  %12 = load ptr, ptr %rkb, align 8, !dbg !8988, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 27, !dbg !8989
  store i32 %11, ptr %rkb_source, align 8, !dbg !8990, !tbaa !4174
  %13 = load ptr, ptr %rk.addr, align 8, !dbg !8991, !tbaa !3910
  %14 = load ptr, ptr %rkb, align 8, !dbg !8992, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 32, !dbg !8993
  store ptr %13, ptr %rkb_rk, align 8, !dbg !8994, !tbaa !4139
  %call7 = call i64 @rd_clock(), !dbg !8995
  %15 = load ptr, ptr %rkb, align 8, !dbg !8996, !tbaa !3910
  %rkb_ts_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 20, !dbg !8997
  store i64 %call7, ptr %rkb_ts_state, align 8, !dbg !8998, !tbaa !4301
  %16 = load i32, ptr %nodeid.addr, align 4, !dbg !8999, !tbaa !3959
  %17 = load ptr, ptr %rkb, align 8, !dbg !9000, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 1, !dbg !9001
  store i32 %16, ptr %rkb_nodeid, align 8, !dbg !9002, !tbaa !4311
  %18 = load i32, ptr %proto.addr, align 4, !dbg !9003, !tbaa !4126
  %19 = load ptr, ptr %rkb, align 8, !dbg !9004, !tbaa !3910
  %rkb_proto = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 58, !dbg !9005
  store i32 %18, ptr %rkb_proto, align 8, !dbg !9006, !tbaa !4314
  %20 = load i16, ptr %port.addr, align 2, !dbg !9007, !tbaa !3915
  %21 = load ptr, ptr %rkb, align 8, !dbg !9008, !tbaa !3910
  %rkb_port = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 44, !dbg !9009
  store i16 %20, ptr %rkb_port, align 8, !dbg !9010, !tbaa !4321
  %22 = load ptr, ptr %name.addr, align 8, !dbg !9011, !tbaa !3910
  %call8 = call ptr @rd_strdup(ptr noundef %22), !dbg !9012
  %23 = load ptr, ptr %rkb, align 8, !dbg !9013, !tbaa !3910
  %rkb_origname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 45, !dbg !9014
  store ptr %call8, ptr %rkb_origname, align 8, !dbg !9015, !tbaa !4318
  %24 = load ptr, ptr %rkb, align 8, !dbg !9016, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 9, !dbg !9017
  %call9 = call i32 @mtx_init(ptr noundef %rkb_lock, i32 noundef 0), !dbg !9018
  %25 = load ptr, ptr %rkb, align 8, !dbg !9019, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 49, !dbg !9020
  %call10 = call i32 @mtx_init(ptr noundef %rkb_logname_lock, i32 noundef 0), !dbg !9021
  %26 = load ptr, ptr %rkb, align 8, !dbg !9022, !tbaa !3910
  %rkb_name11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 42, !dbg !9023
  %arraydecay12 = getelementptr inbounds [256 x i8], ptr %rkb_name11, i64 0, i64 0, !dbg !9022
  %call13 = call ptr @rd_strdup(ptr noundef %arraydecay12), !dbg !9024
  %27 = load ptr, ptr %rkb, align 8, !dbg !9025, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 48, !dbg !9026
  store ptr %call13, ptr %rkb_logname, align 8, !dbg !9027, !tbaa !4628
  br label %do.body, !dbg !9028

do.body:                                          ; preds = %if.end
  %28 = load ptr, ptr %rkb, align 8, !dbg !9029, !tbaa !3910
  %rkb_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 11, !dbg !9029
  %tqh_first = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars, i32 0, i32 0, !dbg !9029
  store ptr null, ptr %tqh_first, align 8, !dbg !9029, !tbaa !4637
  %29 = load ptr, ptr %rkb, align 8, !dbg !9029, !tbaa !3910
  %rkb_toppars14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 11, !dbg !9029
  %tqh_first15 = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars14, i32 0, i32 0, !dbg !9029
  %30 = load ptr, ptr %rkb, align 8, !dbg !9029, !tbaa !3910
  %rkb_toppars16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %30, i32 0, i32 11, !dbg !9029
  %tqh_last = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars16, i32 0, i32 1, !dbg !9029
  store ptr %tqh_first15, ptr %tqh_last, align 8, !dbg !9029, !tbaa !9031
  br label %do.cond, !dbg !9029

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !9029

do.end:                                           ; preds = %do.cond
  br label %do.body17, !dbg !9032

do.body17:                                        ; preds = %do.end
  %31 = load ptr, ptr %rkb, align 8, !dbg !9033, !tbaa !3910
  %rkb_active_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 13, !dbg !9033
  %32 = load ptr, ptr %rkb, align 8, !dbg !9033, !tbaa !3910
  %rkb_active_toppars18 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 13, !dbg !9033
  %cqh_first = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars18, i32 0, i32 0, !dbg !9033
  store ptr %rkb_active_toppars, ptr %cqh_first, align 8, !dbg !9033, !tbaa !9035
  %33 = load ptr, ptr %rkb, align 8, !dbg !9033, !tbaa !3910
  %rkb_active_toppars19 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 13, !dbg !9033
  %34 = load ptr, ptr %rkb, align 8, !dbg !9033, !tbaa !3910
  %rkb_active_toppars20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 13, !dbg !9033
  %cqh_last = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars20, i32 0, i32 1, !dbg !9033
  store ptr %rkb_active_toppars19, ptr %cqh_last, align 8, !dbg !9033, !tbaa !9036
  br label %do.cond21, !dbg !9033

do.cond21:                                        ; preds = %do.body17
  br label %do.end22, !dbg !9033

do.end22:                                         ; preds = %do.cond21
  br label %do.body23, !dbg !9037

do.body23:                                        ; preds = %do.end22
  %35 = load ptr, ptr %rkb, align 8, !dbg !9038, !tbaa !3910
  %rkb_monitors = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 56, !dbg !9038
  %tqh_first24 = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors, i32 0, i32 0, !dbg !9038
  store ptr null, ptr %tqh_first24, align 8, !dbg !9038, !tbaa !4403
  %36 = load ptr, ptr %rkb, align 8, !dbg !9038, !tbaa !3910
  %rkb_monitors25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 56, !dbg !9038
  %tqh_first26 = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors25, i32 0, i32 0, !dbg !9038
  %37 = load ptr, ptr %rkb, align 8, !dbg !9038, !tbaa !3910
  %rkb_monitors27 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 56, !dbg !9038
  %tqh_last28 = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors27, i32 0, i32 1, !dbg !9038
  store ptr %tqh_first26, ptr %tqh_last28, align 8, !dbg !9038, !tbaa !9040
  br label %do.cond29, !dbg !9038

do.cond29:                                        ; preds = %do.body23
  br label %do.end30, !dbg !9038

do.end30:                                         ; preds = %do.cond29
  %38 = load ptr, ptr %rkb, align 8, !dbg !9041, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 35, !dbg !9042
  call void @rd_kafka_bufq_init(ptr noundef %rkb_outbufs), !dbg !9043
  %39 = load ptr, ptr %rkb, align 8, !dbg !9044, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 36, !dbg !9045
  call void @rd_kafka_bufq_init(ptr noundef %rkb_waitresps), !dbg !9046
  %40 = load ptr, ptr %rkb, align 8, !dbg !9047, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %40, i32 0, i32 37, !dbg !9048
  call void @rd_kafka_bufq_init(ptr noundef %rkb_retrybufs), !dbg !9049
  %41 = load ptr, ptr %rk.addr, align 8, !dbg !9050, !tbaa !3910
  %call31 = call ptr @rd_kafka_q_new0(ptr noundef %41, i8 noundef zeroext 0, ptr noundef @__FUNCTION__.rd_kafka_broker_add, i32 noundef 4800), !dbg !9050
  %42 = load ptr, ptr %rkb, align 8, !dbg !9051, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 8, !dbg !9052
  store ptr %call31, ptr %rkb_ops, align 8, !dbg !9053, !tbaa !5475
  %43 = load ptr, ptr %rkb, align 8, !dbg !9054, !tbaa !3910
  %rkb_avg_int_latency = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %43, i32 0, i32 38, !dbg !9055
  %44 = load ptr, ptr %rk.addr, align 8, !dbg !9056, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %44, i32 0, i32 18, !dbg !9057
  %stats_interval_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 25, !dbg !9058
  %45 = load i32, ptr %stats_interval_ms, align 8, !dbg !9058, !tbaa !9059
  %tobool = icmp ne i32 %45, 0, !dbg !9056
  %46 = zext i1 %tobool to i64, !dbg !9056
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !9056
  call void @rd_avg_init(ptr noundef %rkb_avg_int_latency, i32 noundef 0, i64 noundef 0, i64 noundef 100000, i32 noundef 2, i32 noundef %cond), !dbg !9060
  %47 = load ptr, ptr %rkb, align 8, !dbg !9061, !tbaa !3910
  %rkb_avg_outbuf_latency = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 39, !dbg !9062
  %48 = load ptr, ptr %rk.addr, align 8, !dbg !9063, !tbaa !3910
  %rk_conf32 = getelementptr inbounds %struct.rd_kafka_s, ptr %48, i32 0, i32 18, !dbg !9064
  %stats_interval_ms33 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf32, i32 0, i32 25, !dbg !9065
  %49 = load i32, ptr %stats_interval_ms33, align 8, !dbg !9065, !tbaa !9059
  %tobool34 = icmp ne i32 %49, 0, !dbg !9063
  %50 = zext i1 %tobool34 to i64, !dbg !9063
  %cond35 = select i1 %tobool34, i32 1, i32 0, !dbg !9063
  call void @rd_avg_init(ptr noundef %rkb_avg_outbuf_latency, i32 noundef 0, i64 noundef 0, i64 noundef 100000, i32 noundef 2, i32 noundef %cond35), !dbg !9066
  %51 = load ptr, ptr %rkb, align 8, !dbg !9067, !tbaa !3910
  %rkb_avg_rtt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %51, i32 0, i32 40, !dbg !9068
  %52 = load ptr, ptr %rk.addr, align 8, !dbg !9069, !tbaa !3910
  %rk_conf36 = getelementptr inbounds %struct.rd_kafka_s, ptr %52, i32 0, i32 18, !dbg !9070
  %stats_interval_ms37 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf36, i32 0, i32 25, !dbg !9071
  %53 = load i32, ptr %stats_interval_ms37, align 8, !dbg !9071, !tbaa !9059
  %tobool38 = icmp ne i32 %53, 0, !dbg !9069
  %54 = zext i1 %tobool38 to i64, !dbg !9069
  %cond39 = select i1 %tobool38, i32 1, i32 0, !dbg !9069
  call void @rd_avg_init(ptr noundef %rkb_avg_rtt, i32 noundef 0, i64 noundef 0, i64 noundef 500000, i32 noundef 2, i32 noundef %cond39), !dbg !9072
  %55 = load ptr, ptr %rkb, align 8, !dbg !9073, !tbaa !3910
  %rkb_avg_throttle = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %55, i32 0, i32 41, !dbg !9074
  %56 = load ptr, ptr %rk.addr, align 8, !dbg !9075, !tbaa !3910
  %rk_conf40 = getelementptr inbounds %struct.rd_kafka_s, ptr %56, i32 0, i32 18, !dbg !9076
  %stats_interval_ms41 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf40, i32 0, i32 25, !dbg !9077
  %57 = load i32, ptr %stats_interval_ms41, align 8, !dbg !9077, !tbaa !9059
  %tobool42 = icmp ne i32 %57, 0, !dbg !9075
  %58 = zext i1 %tobool42 to i64, !dbg !9075
  %cond43 = select i1 %tobool42, i32 1, i32 0, !dbg !9075
  call void @rd_avg_init(ptr noundef %rkb_avg_throttle, i32 noundef 0, i64 noundef 0, i64 noundef 5000000, i32 noundef 2, i32 noundef %cond43), !dbg !9078
  %59 = load ptr, ptr %rkb, align 8, !dbg !9079, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 31, !dbg !9079
  call void @rd_atomic32_init(ptr noundef %rkb_refcnt, i32 noundef 0), !dbg !9079
  %60 = load ptr, ptr %rkb, align 8, !dbg !9080, !tbaa !3910
  %rkb_refcnt44 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %60, i32 0, i32 31, !dbg !9080
  %call45 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt44, i32 noundef 1), !dbg !9080
  %61 = load ptr, ptr %rk.addr, align 8, !dbg !9081, !tbaa !3910
  %rk_conf46 = getelementptr inbounds %struct.rd_kafka_s, ptr %61, i32 0, i32 18, !dbg !9082
  %reconnect_backoff_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf46, i32 0, i32 27, !dbg !9083
  %62 = load i32, ptr %reconnect_backoff_ms, align 8, !dbg !9083, !tbaa !9084
  %63 = load ptr, ptr %rkb, align 8, !dbg !9085, !tbaa !3910
  %rkb_reconnect_backoff_ms = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %63, i32 0, i32 51, !dbg !9086
  store i32 %62, ptr %rkb_reconnect_backoff_ms, align 8, !dbg !9087, !tbaa !9088
  %64 = load ptr, ptr %rkb, align 8, !dbg !9089, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %64, i32 0, i32 55, !dbg !9090
  %coord = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 1, !dbg !9091
  call void @rd_atomic32_init(ptr noundef %coord, i32 noundef 0), !dbg !9092
  %65 = load ptr, ptr %rkb, align 8, !dbg !9093, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %65, i32 0, i32 28, !dbg !9094
  %ts_send = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 16, !dbg !9095
  call void @rd_atomic64_init(ptr noundef %ts_send, i64 noundef 0), !dbg !9096
  %66 = load ptr, ptr %rkb, align 8, !dbg !9097, !tbaa !3910
  %rkb_c47 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %66, i32 0, i32 28, !dbg !9098
  %ts_recv = getelementptr inbounds %struct.anon.2, ptr %rkb_c47, i32 0, i32 17, !dbg !9099
  call void @rd_atomic64_init(ptr noundef %ts_recv, i64 noundef 0), !dbg !9100
  %67 = load ptr, ptr %rkb, align 8, !dbg !9101, !tbaa !3910
  %rkb_rk48 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %67, i32 0, i32 32, !dbg !9103
  %68 = load ptr, ptr %rkb_rk48, align 8, !dbg !9103, !tbaa !4139
  %rk_conf49 = getelementptr inbounds %struct.rd_kafka_s, ptr %68, i32 0, i32 18, !dbg !9104
  %api_version_request = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf49, i32 0, i32 34, !dbg !9105
  %69 = load i32, ptr %api_version_request, align 4, !dbg !9105, !tbaa !7376
  %tobool50 = icmp ne i32 %69, 0, !dbg !9101
  br i1 %tobool50, label %if.then51, label %if.end55, !dbg !9106

if.then51:                                        ; preds = %do.end30
  %70 = load ptr, ptr %rkb, align 8, !dbg !9107, !tbaa !3910
  %rkb_ApiVersion_fail_intvl = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %70, i32 0, i32 26, !dbg !9109
  call void @rd_interval_init(ptr noundef %rkb_ApiVersion_fail_intvl), !dbg !9110
  %71 = load ptr, ptr %rkb, align 8, !dbg !9111, !tbaa !3910
  %rkb_ApiVersion_fail_intvl52 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %71, i32 0, i32 26, !dbg !9112
  %72 = load ptr, ptr %rkb, align 8, !dbg !9113, !tbaa !3910
  %rkb_rk53 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %72, i32 0, i32 32, !dbg !9114
  %73 = load ptr, ptr %rkb_rk53, align 8, !dbg !9114, !tbaa !4139
  %rk_conf54 = getelementptr inbounds %struct.rd_kafka_s, ptr %73, i32 0, i32 18, !dbg !9115
  %api_version_fallback_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf54, i32 0, i32 36, !dbg !9116
  %74 = load i32, ptr %api_version_fallback_ms, align 4, !dbg !9116, !tbaa !9117
  %conv = sext i32 %74 to i64, !dbg !9118
  %mul = mul nsw i64 %conv, 1000, !dbg !9119
  call void @rd_interval_fixed(ptr noundef %rkb_ApiVersion_fail_intvl52, i64 noundef %mul), !dbg !9120
  br label %if.end55, !dbg !9121

if.end55:                                         ; preds = %if.then51, %do.end30
  %75 = load ptr, ptr %rkb, align 8, !dbg !9122, !tbaa !3910
  %rkb_suppress = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %75, i32 0, i32 60, !dbg !9123
  %unsupported_compression = getelementptr inbounds %struct.anon.9, ptr %rkb_suppress, i32 0, i32 0, !dbg !9124
  call void @rd_interval_init(ptr noundef %unsupported_compression), !dbg !9125
  %76 = load ptr, ptr %rkb, align 8, !dbg !9126, !tbaa !3910
  %rkb_suppress56 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %76, i32 0, i32 60, !dbg !9127
  %unsupported_kip62 = getelementptr inbounds %struct.anon.9, ptr %rkb_suppress56, i32 0, i32 1, !dbg !9128
  call void @rd_interval_init(ptr noundef %unsupported_kip62), !dbg !9129
  %77 = load ptr, ptr %rkb, align 8, !dbg !9130, !tbaa !3910
  %rkb_suppress57 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %77, i32 0, i32 60, !dbg !9131
  %fail_error = getelementptr inbounds %struct.anon.9, ptr %rkb_suppress57, i32 0, i32 3, !dbg !9132
  call void @rd_interval_init(ptr noundef %fail_error), !dbg !9133
  %call58 = call i32 @sigemptyset(ptr noundef %oldset) #16, !dbg !9134
  %call59 = call i32 @sigfillset(ptr noundef %newset) #16, !dbg !9135
  %78 = load ptr, ptr %rkb, align 8, !dbg !9136, !tbaa !3910
  %rkb_rk60 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %78, i32 0, i32 32, !dbg !9138
  %79 = load ptr, ptr %rkb_rk60, align 8, !dbg !9138, !tbaa !4139
  %rk_conf61 = getelementptr inbounds %struct.rd_kafka_s, ptr %79, i32 0, i32 18, !dbg !9139
  %term_sig = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf61, i32 0, i32 26, !dbg !9140
  %80 = load i32, ptr %term_sig, align 4, !dbg !9140, !tbaa !9141
  %tobool62 = icmp ne i32 %80, 0, !dbg !9136
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !9142

if.then63:                                        ; preds = %if.end55
  %81 = load ptr, ptr %rkb, align 8, !dbg !9143, !tbaa !3910
  %rkb_rk64 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %81, i32 0, i32 32, !dbg !9144
  %82 = load ptr, ptr %rkb_rk64, align 8, !dbg !9144, !tbaa !4139
  %rk_conf65 = getelementptr inbounds %struct.rd_kafka_s, ptr %82, i32 0, i32 18, !dbg !9145
  %term_sig66 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf65, i32 0, i32 26, !dbg !9146
  %83 = load i32, ptr %term_sig66, align 4, !dbg !9146, !tbaa !9141
  %call67 = call i32 @sigdelset(ptr noundef %newset, i32 noundef %83) #16, !dbg !9147
  br label %if.end68, !dbg !9147

if.end68:                                         ; preds = %if.then63, %if.end55
  %call69 = call i32 @pthread_sigmask(i32 noundef 2, ptr noundef %newset, ptr noundef %oldset) #16, !dbg !9148
  %84 = load ptr, ptr %rkb, align 8, !dbg !9149, !tbaa !3910
  %rkb_wakeup_fd = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %84, i32 0, i32 50, !dbg !9150
  %arrayidx = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd, i64 0, i64 0, !dbg !9149
  store i32 -1, ptr %arrayidx, align 8, !dbg !9151, !tbaa !3959
  %85 = load ptr, ptr %rkb, align 8, !dbg !9152, !tbaa !3910
  %rkb_wakeup_fd70 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %85, i32 0, i32 50, !dbg !9153
  %arrayidx71 = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd70, i64 0, i64 1, !dbg !9152
  store i32 -1, ptr %arrayidx71, align 4, !dbg !9154, !tbaa !3959
  %86 = load ptr, ptr %rkb, align 8, !dbg !9155, !tbaa !3910
  %rkb_wakeup_fd72 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %86, i32 0, i32 50, !dbg !9156
  %arraydecay73 = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd72, i64 0, i64 0, !dbg !9155
  %call74 = call i32 @rd_pipe_nonblocking(ptr noundef %arraydecay73), !dbg !9157
  store i32 %call74, ptr %r, align 4, !dbg !9158, !tbaa !3959
  %cmp75 = icmp eq i32 %call74, -1, !dbg !9159
  br i1 %cmp75, label %if.then77, label %if.else92, !dbg !9160

if.then77:                                        ; preds = %if.end68
  br label %do.body78, !dbg !9161

do.body78:                                        ; preds = %if.then77
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !9162
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !8932, metadata !DIExpression()), !dbg !9162
  %87 = load ptr, ptr %rkb, align 8, !dbg !9162, !tbaa !3910
  %rkb_logname_lock79 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %87, i32 0, i32 49, !dbg !9162
  %call80 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock79), !dbg !9162
  %arraydecay81 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !9162
  %88 = load ptr, ptr %rkb, align 8, !dbg !9162, !tbaa !3910
  %rkb_logname82 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %88, i32 0, i32 48, !dbg !9162
  %89 = load ptr, ptr %rkb_logname82, align 8, !dbg !9162, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay81, ptr noundef %89, i64 noundef 256), !dbg !9162
  %90 = load ptr, ptr %rkb, align 8, !dbg !9162, !tbaa !3910
  %rkb_logname_lock83 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %90, i32 0, i32 49, !dbg !9162
  %call84 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock83), !dbg !9162
  %91 = load ptr, ptr %rkb, align 8, !dbg !9162, !tbaa !3910
  %rkb_rk85 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %91, i32 0, i32 32, !dbg !9162
  %92 = load ptr, ptr %rkb_rk85, align 8, !dbg !9162, !tbaa !4139
  %rk_conf86 = getelementptr inbounds %struct.rd_kafka_s, ptr %92, i32 0, i32 18, !dbg !9162
  %93 = load ptr, ptr %rkb, align 8, !dbg !9162, !tbaa !3910
  %rkb_rk87 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %93, i32 0, i32 32, !dbg !9162
  %94 = load ptr, ptr %rkb_rk87, align 8, !dbg !9162, !tbaa !4139
  %arraydecay88 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !9162
  %95 = load i32, ptr %r, align 4, !dbg !9162, !tbaa !3959
  %call89 = call ptr @rd_strerror(i32 noundef %95), !dbg !9162
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf86, ptr noundef %94, ptr noundef %arraydecay88, i32 noundef 3, i32 noundef 0, ptr noundef @.str.62, ptr noundef @.str.63, ptr noundef %call89), !dbg !9162
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !9161
  br label %do.cond90, !dbg !9162

do.cond90:                                        ; preds = %do.body78
  br label %do.end91, !dbg !9162

do.end91:                                         ; preds = %do.cond90
  br label %if.end124, !dbg !9163

if.else92:                                        ; preds = %if.end68
  %96 = load i32, ptr %source.addr, align 4, !dbg !9164, !tbaa !4126
  %cmp93 = icmp eq i32 %96, 2, !dbg !9165
  br i1 %cmp93, label %if.then95, label %if.else96, !dbg !9166

if.then95:                                        ; preds = %if.else92
  br label %if.end123, !dbg !9167

if.else96:                                        ; preds = %if.else92
  call void @llvm.lifetime.start.p0(i64 1, ptr %onebyte) #16, !dbg !9169
  tail call void @llvm.dbg.declare(metadata ptr %onebyte, metadata !8936, metadata !DIExpression()), !dbg !9170
  store i8 1, ptr %onebyte, align 1, !dbg !9170, !tbaa !4126
  br label %do.body97, !dbg !9171

do.body97:                                        ; preds = %if.else96
  %97 = load ptr, ptr %rkb, align 8, !dbg !9172, !tbaa !3910
  %rkb_rk98 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %97, i32 0, i32 32, !dbg !9172
  %98 = load ptr, ptr %rkb_rk98, align 8, !dbg !9172, !tbaa !4139
  %rk_conf99 = getelementptr inbounds %struct.rd_kafka_s, ptr %98, i32 0, i32 18, !dbg !9172
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf99, i32 0, i32 13, !dbg !9172
  %99 = load i32, ptr %debug, align 8, !dbg !9172, !tbaa !4140
  %and = and i32 %99, 32, !dbg !9172
  %conv100 = sext i32 %and to i64, !dbg !9172
  %expval = call i64 @llvm.expect.i64(i64 %conv100, i64 0), !dbg !9172
  %tobool101 = icmp ne i64 %expval, 0, !dbg !9172
  br i1 %tobool101, label %if.then102, label %if.end117, !dbg !9173

if.then102:                                       ; preds = %do.body97
  br label %do.body103, !dbg !9174

do.body103:                                       ; preds = %if.then102
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname104) #16, !dbg !9175
  tail call void @llvm.dbg.declare(metadata ptr %_logname104, metadata !8939, metadata !DIExpression()), !dbg !9175
  %100 = load ptr, ptr %rkb, align 8, !dbg !9175, !tbaa !3910
  %rkb_logname_lock105 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %100, i32 0, i32 49, !dbg !9175
  %call106 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock105), !dbg !9175
  %arraydecay107 = getelementptr inbounds [256 x i8], ptr %_logname104, i64 0, i64 0, !dbg !9175
  %101 = load ptr, ptr %rkb, align 8, !dbg !9175, !tbaa !3910
  %rkb_logname108 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %101, i32 0, i32 48, !dbg !9175
  %102 = load ptr, ptr %rkb_logname108, align 8, !dbg !9175, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay107, ptr noundef %102, i64 noundef 256), !dbg !9175
  %103 = load ptr, ptr %rkb, align 8, !dbg !9175, !tbaa !3910
  %rkb_logname_lock109 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %103, i32 0, i32 49, !dbg !9175
  %call110 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock109), !dbg !9175
  %104 = load ptr, ptr %rkb, align 8, !dbg !9175, !tbaa !3910
  %rkb_rk111 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %104, i32 0, i32 32, !dbg !9175
  %105 = load ptr, ptr %rkb_rk111, align 8, !dbg !9175, !tbaa !4139
  %rk_conf112 = getelementptr inbounds %struct.rd_kafka_s, ptr %105, i32 0, i32 18, !dbg !9175
  %106 = load ptr, ptr %rkb, align 8, !dbg !9175, !tbaa !3910
  %rkb_rk113 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %106, i32 0, i32 32, !dbg !9175
  %107 = load ptr, ptr %rkb_rk113, align 8, !dbg !9175, !tbaa !4139
  %arraydecay114 = getelementptr inbounds [256 x i8], ptr %_logname104, i64 0, i64 0, !dbg !9175
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf112, ptr noundef %107, ptr noundef %arraydecay114, i32 noundef 7, i32 noundef 32, ptr noundef @.str.62, ptr noundef @.str.64), !dbg !9175
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname104) #16, !dbg !9174
  br label %do.cond115, !dbg !9175

do.cond115:                                       ; preds = %do.body103
  br label %do.end116, !dbg !9175

do.end116:                                        ; preds = %do.cond115
  br label %if.end117, !dbg !9174

if.end117:                                        ; preds = %do.end116, %do.body97
  br label %do.cond118, !dbg !9173

do.cond118:                                       ; preds = %if.end117
  br label %do.end119, !dbg !9173

do.end119:                                        ; preds = %do.cond118
  %108 = load ptr, ptr %rkb, align 8, !dbg !9176, !tbaa !3910
  %rkb_ops120 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %108, i32 0, i32 8, !dbg !9177
  %109 = load ptr, ptr %rkb_ops120, align 8, !dbg !9177, !tbaa !5475
  %110 = load ptr, ptr %rkb, align 8, !dbg !9178, !tbaa !3910
  %rkb_wakeup_fd121 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %110, i32 0, i32 50, !dbg !9179
  %arrayidx122 = getelementptr inbounds [2 x i32], ptr %rkb_wakeup_fd121, i64 0, i64 1, !dbg !9178
  %111 = load i32, ptr %arrayidx122, align 4, !dbg !9178, !tbaa !3959
  call void @rd_kafka_q_io_event_enable(ptr noundef %109, i32 noundef %111, ptr noundef %onebyte, i64 noundef 1), !dbg !9180
  call void @llvm.lifetime.end.p0(i64 1, ptr %onebyte) #16, !dbg !9181
  br label %if.end123

if.end123:                                        ; preds = %do.end119, %if.then95
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %do.end91
  %112 = load ptr, ptr %rkb, align 8, !dbg !9182, !tbaa !3910
  %rkb_lock125 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %112, i32 0, i32 9, !dbg !9182
  %call126 = call i32 @mtx_lock(ptr noundef %rkb_lock125), !dbg !9182
  %113 = load ptr, ptr %rkb, align 8, !dbg !9183, !tbaa !3910
  %rkb_refcnt127 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %113, i32 0, i32 31, !dbg !9183
  %call128 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt127, i32 noundef 1), !dbg !9183
  %114 = load ptr, ptr %rkb, align 8, !dbg !9184, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %114, i32 0, i32 30, !dbg !9186
  %115 = load ptr, ptr %rkb, align 8, !dbg !9187, !tbaa !3910
  %call129 = call i32 @thrd_create(ptr noundef %rkb_thread, ptr noundef @rd_kafka_broker_thread_main, ptr noundef %115), !dbg !9188
  %cmp130 = icmp ne i32 %call129, 0, !dbg !9189
  br i1 %cmp130, label %if.then132, label %if.end146, !dbg !9190

if.then132:                                       ; preds = %if.end124
  %116 = load ptr, ptr %rkb, align 8, !dbg !9191, !tbaa !3910
  %rkb_lock133 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %116, i32 0, i32 9, !dbg !9191
  %call134 = call i32 @mtx_unlock(ptr noundef %rkb_lock133), !dbg !9191
  %117 = load ptr, ptr %rk.addr, align 8, !dbg !9193, !tbaa !3910
  %rk_conf135 = getelementptr inbounds %struct.rd_kafka_s, ptr %117, i32 0, i32 18, !dbg !9193
  %118 = load ptr, ptr %rk.addr, align 8, !dbg !9193, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf135, ptr noundef %118, ptr noundef null, i32 noundef 2, i32 noundef 0, ptr noundef @.str.65, ptr noundef @.str.66), !dbg !9193
  br label %do.body136, !dbg !9194

do.body136:                                       ; preds = %if.then132
  %119 = load ptr, ptr %rk.addr, align 8, !dbg !9195, !tbaa !3910
  %rk_conf137 = getelementptr inbounds %struct.rd_kafka_s, ptr %119, i32 0, i32 18, !dbg !9195
  %enabled_events = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf137, i32 0, i32 1, !dbg !9195
  %120 = load i32, ptr %enabled_events, align 8, !dbg !9195, !tbaa !4212
  %and138 = and i32 %120, 8, !dbg !9195
  %tobool139 = icmp ne i32 %and138, 0, !dbg !9195
  br i1 %tobool139, label %if.end142, label %if.then140, !dbg !9198

if.then140:                                       ; preds = %do.body136
  %121 = load ptr, ptr %rk.addr, align 8, !dbg !9199, !tbaa !3910
  %rk_conf141 = getelementptr inbounds %struct.rd_kafka_s, ptr %121, i32 0, i32 18, !dbg !9199
  %122 = load ptr, ptr %rk.addr, align 8, !dbg !9199, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf141, ptr noundef %122, ptr noundef null, i32 noundef 3, i32 noundef 0, ptr noundef @.str.18, ptr noundef @.str.66), !dbg !9199
  br label %do.end144, !dbg !9199

if.end142:                                        ; preds = %do.body136
  %123 = load ptr, ptr %rk.addr, align 8, !dbg !9198, !tbaa !3910
  %rk_rep = getelementptr inbounds %struct.rd_kafka_s, ptr %123, i32 0, i32 0, !dbg !9198
  %124 = load ptr, ptr %rk_rep, align 8, !dbg !9198, !tbaa !4216
  call void (ptr, i32, ptr, ...) @rd_kafka_q_op_err(ptr noundef %124, i32 noundef -194, ptr noundef @.str.66), !dbg !9198
  br label %do.cond143, !dbg !9198

do.cond143:                                       ; preds = %if.end142
  br label %do.end144, !dbg !9198

do.end144:                                        ; preds = %do.cond143, %if.then140
  %125 = load ptr, ptr %rkb, align 8, !dbg !9201, !tbaa !3910
  call void @rd_free(ptr noundef %125), !dbg !9202
  %call145 = call i32 @pthread_sigmask(i32 noundef 2, ptr noundef %oldset, ptr noundef null) #16, !dbg !9203
  store ptr null, ptr %retval, align 8, !dbg !9204
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9204

if.end146:                                        ; preds = %if.end124
  %126 = load ptr, ptr %rkb, align 8, !dbg !9205, !tbaa !3910
  %rkb_source147 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %126, i32 0, i32 27, !dbg !9206
  %127 = load i32, ptr %rkb_source147, align 8, !dbg !9206, !tbaa !4174
  %cmp148 = icmp ne i32 %127, 2, !dbg !9207
  br i1 %cmp148, label %if.then150, label %if.end230, !dbg !9208

if.then150:                                       ; preds = %if.end146
  %128 = load ptr, ptr %rk.addr, align 8, !dbg !9209, !tbaa !3910
  %rk_conf151 = getelementptr inbounds %struct.rd_kafka_s, ptr %128, i32 0, i32 18, !dbg !9211
  %security_protocol = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf151, i32 0, i32 38, !dbg !9212
  %129 = load i32, ptr %security_protocol, align 8, !dbg !9212, !tbaa !4852
  %cmp152 = icmp eq i32 %129, 2, !dbg !9213
  br i1 %cmp152, label %if.then158, label %lor.lhs.false, !dbg !9214

lor.lhs.false:                                    ; preds = %if.then150
  %130 = load ptr, ptr %rk.addr, align 8, !dbg !9215, !tbaa !3910
  %rk_conf154 = getelementptr inbounds %struct.rd_kafka_s, ptr %130, i32 0, i32 18, !dbg !9216
  %security_protocol155 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf154, i32 0, i32 38, !dbg !9217
  %131 = load i32, ptr %security_protocol155, align 8, !dbg !9217, !tbaa !4852
  %cmp156 = icmp eq i32 %131, 3, !dbg !9218
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !9219

if.then158:                                       ; preds = %lor.lhs.false, %if.then150
  %132 = load ptr, ptr %rkb, align 8, !dbg !9220, !tbaa !3910
  call void @rd_kafka_sasl_broker_init(ptr noundef %132), !dbg !9221
  br label %if.end159, !dbg !9221

if.end159:                                        ; preds = %if.then158, %lor.lhs.false
  br label %do.body160, !dbg !9222

do.body160:                                       ; preds = %if.end159
  %133 = load ptr, ptr %rkb, align 8, !dbg !9223, !tbaa !3910
  %rkb_rk161 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %133, i32 0, i32 32, !dbg !9223
  %134 = load ptr, ptr %rkb_rk161, align 8, !dbg !9223, !tbaa !4139
  %rk_brokers = getelementptr inbounds %struct.rd_kafka_s, ptr %134, i32 0, i32 2, !dbg !9223
  %tqh_first162 = getelementptr inbounds %struct.anon.12, ptr %rk_brokers, i32 0, i32 0, !dbg !9223
  %135 = load ptr, ptr %tqh_first162, align 8, !dbg !9223, !tbaa !5741
  %136 = load ptr, ptr %rkb, align 8, !dbg !9223, !tbaa !3910
  %rkb_link = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %136, i32 0, i32 0, !dbg !9223
  %tqe_next = getelementptr inbounds %struct.anon, ptr %rkb_link, i32 0, i32 0, !dbg !9223
  store ptr %135, ptr %tqe_next, align 8, !dbg !9223, !tbaa !5799
  %cmp163 = icmp ne ptr %135, null, !dbg !9223
  br i1 %cmp163, label %if.then165, label %if.else172, !dbg !9226

if.then165:                                       ; preds = %do.body160
  %137 = load ptr, ptr %rkb, align 8, !dbg !9223, !tbaa !3910
  %rkb_link166 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %137, i32 0, i32 0, !dbg !9223
  %tqe_next167 = getelementptr inbounds %struct.anon, ptr %rkb_link166, i32 0, i32 0, !dbg !9223
  %138 = load ptr, ptr %rkb, align 8, !dbg !9223, !tbaa !3910
  %rkb_rk168 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %138, i32 0, i32 32, !dbg !9223
  %139 = load ptr, ptr %rkb_rk168, align 8, !dbg !9223, !tbaa !4139
  %rk_brokers169 = getelementptr inbounds %struct.rd_kafka_s, ptr %139, i32 0, i32 2, !dbg !9223
  %tqh_first170 = getelementptr inbounds %struct.anon.12, ptr %rk_brokers169, i32 0, i32 0, !dbg !9223
  %140 = load ptr, ptr %tqh_first170, align 8, !dbg !9223, !tbaa !5741
  %rkb_link171 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %140, i32 0, i32 0, !dbg !9223
  %tqe_prev = getelementptr inbounds %struct.anon, ptr %rkb_link171, i32 0, i32 1, !dbg !9223
  store ptr %tqe_next167, ptr %tqe_prev, align 8, !dbg !9223, !tbaa !9227
  br label %if.end178, !dbg !9223

if.else172:                                       ; preds = %do.body160
  %141 = load ptr, ptr %rkb, align 8, !dbg !9223, !tbaa !3910
  %rkb_link173 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %141, i32 0, i32 0, !dbg !9223
  %tqe_next174 = getelementptr inbounds %struct.anon, ptr %rkb_link173, i32 0, i32 0, !dbg !9223
  %142 = load ptr, ptr %rkb, align 8, !dbg !9223, !tbaa !3910
  %rkb_rk175 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %142, i32 0, i32 32, !dbg !9223
  %143 = load ptr, ptr %rkb_rk175, align 8, !dbg !9223, !tbaa !4139
  %rk_brokers176 = getelementptr inbounds %struct.rd_kafka_s, ptr %143, i32 0, i32 2, !dbg !9223
  %tqh_last177 = getelementptr inbounds %struct.anon.12, ptr %rk_brokers176, i32 0, i32 1, !dbg !9223
  store ptr %tqe_next174, ptr %tqh_last177, align 8, !dbg !9223, !tbaa !9228
  br label %if.end178

if.end178:                                        ; preds = %if.else172, %if.then165
  %144 = load ptr, ptr %rkb, align 8, !dbg !9226, !tbaa !3910
  %145 = load ptr, ptr %rkb, align 8, !dbg !9226, !tbaa !3910
  %rkb_rk179 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %145, i32 0, i32 32, !dbg !9226
  %146 = load ptr, ptr %rkb_rk179, align 8, !dbg !9226, !tbaa !4139
  %rk_brokers180 = getelementptr inbounds %struct.rd_kafka_s, ptr %146, i32 0, i32 2, !dbg !9226
  %tqh_first181 = getelementptr inbounds %struct.anon.12, ptr %rk_brokers180, i32 0, i32 0, !dbg !9226
  store ptr %144, ptr %tqh_first181, align 8, !dbg !9226, !tbaa !5741
  %147 = load ptr, ptr %rkb, align 8, !dbg !9226, !tbaa !3910
  %rkb_rk182 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %147, i32 0, i32 32, !dbg !9226
  %148 = load ptr, ptr %rkb_rk182, align 8, !dbg !9226, !tbaa !4139
  %rk_brokers183 = getelementptr inbounds %struct.rd_kafka_s, ptr %148, i32 0, i32 2, !dbg !9226
  %tqh_first184 = getelementptr inbounds %struct.anon.12, ptr %rk_brokers183, i32 0, i32 0, !dbg !9226
  %149 = load ptr, ptr %rkb, align 8, !dbg !9226, !tbaa !3910
  %rkb_link185 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %149, i32 0, i32 0, !dbg !9226
  %tqe_prev186 = getelementptr inbounds %struct.anon, ptr %rkb_link185, i32 0, i32 1, !dbg !9226
  store ptr %tqh_first184, ptr %tqe_prev186, align 8, !dbg !9226, !tbaa !9227
  br label %do.cond187, !dbg !9226

do.cond187:                                       ; preds = %if.end178
  br label %do.end188, !dbg !9226

do.end188:                                        ; preds = %do.cond187
  %150 = load ptr, ptr %rkb, align 8, !dbg !9229, !tbaa !3910
  %rkb_rk189 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %150, i32 0, i32 32, !dbg !9230
  %151 = load ptr, ptr %rkb_rk189, align 8, !dbg !9230, !tbaa !4139
  %rk_broker_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %151, i32 0, i32 4, !dbg !9231
  %call190 = call i32 @rd_atomic32_add(ptr noundef %rk_broker_cnt, i32 noundef 1), !dbg !9232
  %152 = load ptr, ptr %rkb, align 8, !dbg !9233, !tbaa !3910
  %rkb_nodeid191 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %152, i32 0, i32 1, !dbg !9235
  %153 = load i32, ptr %rkb_nodeid191, align 8, !dbg !9235, !tbaa !4311
  %cmp192 = icmp ne i32 %153, -1, !dbg !9236
  br i1 %cmp192, label %land.lhs.true, label %if.end202, !dbg !9237

land.lhs.true:                                    ; preds = %do.end188
  %154 = load ptr, ptr %rkb, align 8, !dbg !9238, !tbaa !3910
  %rkb_source194 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %154, i32 0, i32 27, !dbg !9238
  %155 = load i32, ptr %rkb_source194, align 8, !dbg !9238, !tbaa !4174
  %cmp195 = icmp eq i32 %155, 3, !dbg !9238
  br i1 %cmp195, label %if.end202, label %if.then197, !dbg !9239

if.then197:                                       ; preds = %land.lhs.true
  %156 = load ptr, ptr %rkb, align 8, !dbg !9240, !tbaa !3910
  %rkb_rk198 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %156, i32 0, i32 32, !dbg !9242
  %157 = load ptr, ptr %rkb_rk198, align 8, !dbg !9242, !tbaa !4139
  %rk_broker_by_id = getelementptr inbounds %struct.rd_kafka_s, ptr %157, i32 0, i32 3, !dbg !9243
  %158 = load ptr, ptr %rkb, align 8, !dbg !9244, !tbaa !3910
  %call199 = call ptr @rd_list_add(ptr noundef %rk_broker_by_id, ptr noundef %158), !dbg !9245
  %159 = load ptr, ptr %rkb, align 8, !dbg !9246, !tbaa !3910
  %rkb_rk200 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %159, i32 0, i32 32, !dbg !9247
  %160 = load ptr, ptr %rkb_rk200, align 8, !dbg !9247, !tbaa !4139
  %rk_broker_by_id201 = getelementptr inbounds %struct.rd_kafka_s, ptr %160, i32 0, i32 3, !dbg !9248
  call void @rd_list_sort(ptr noundef %rk_broker_by_id201, ptr noundef @rd_kafka_broker_cmp_by_id), !dbg !9249
  br label %if.end202, !dbg !9250

if.end202:                                        ; preds = %if.then197, %land.lhs.true, %do.end188
  br label %do.body203, !dbg !9251

do.body203:                                       ; preds = %if.end202
  %161 = load ptr, ptr %rkb, align 8, !dbg !9252, !tbaa !3910
  %rkb_rk204 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %161, i32 0, i32 32, !dbg !9252
  %162 = load ptr, ptr %rkb_rk204, align 8, !dbg !9252, !tbaa !4139
  %rk_conf205 = getelementptr inbounds %struct.rd_kafka_s, ptr %162, i32 0, i32 18, !dbg !9252
  %debug206 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf205, i32 0, i32 13, !dbg !9252
  %163 = load i32, ptr %debug206, align 8, !dbg !9252, !tbaa !4140
  %and207 = and i32 %163, 2, !dbg !9252
  %conv208 = sext i32 %and207 to i64, !dbg !9252
  %expval209 = call i64 @llvm.expect.i64(i64 %conv208, i64 0), !dbg !9252
  %tobool210 = icmp ne i64 %expval209, 0, !dbg !9252
  br i1 %tobool210, label %if.then211, label %if.end227, !dbg !9253

if.then211:                                       ; preds = %do.body203
  br label %do.body212, !dbg !9254

do.body212:                                       ; preds = %if.then211
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname213) #16, !dbg !9255
  tail call void @llvm.dbg.declare(metadata ptr %_logname213, metadata !8944, metadata !DIExpression()), !dbg !9255
  %164 = load ptr, ptr %rkb, align 8, !dbg !9255, !tbaa !3910
  %rkb_logname_lock214 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %164, i32 0, i32 49, !dbg !9255
  %call215 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock214), !dbg !9255
  %arraydecay216 = getelementptr inbounds [256 x i8], ptr %_logname213, i64 0, i64 0, !dbg !9255
  %165 = load ptr, ptr %rkb, align 8, !dbg !9255, !tbaa !3910
  %rkb_logname217 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %165, i32 0, i32 48, !dbg !9255
  %166 = load ptr, ptr %rkb_logname217, align 8, !dbg !9255, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay216, ptr noundef %166, i64 noundef 256), !dbg !9255
  %167 = load ptr, ptr %rkb, align 8, !dbg !9255, !tbaa !3910
  %rkb_logname_lock218 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %167, i32 0, i32 49, !dbg !9255
  %call219 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock218), !dbg !9255
  %168 = load ptr, ptr %rkb, align 8, !dbg !9255, !tbaa !3910
  %rkb_rk220 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %168, i32 0, i32 32, !dbg !9255
  %169 = load ptr, ptr %rkb_rk220, align 8, !dbg !9255, !tbaa !4139
  %rk_conf221 = getelementptr inbounds %struct.rd_kafka_s, ptr %169, i32 0, i32 18, !dbg !9255
  %170 = load ptr, ptr %rkb, align 8, !dbg !9255, !tbaa !3910
  %rkb_rk222 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %170, i32 0, i32 32, !dbg !9255
  %171 = load ptr, ptr %rkb_rk222, align 8, !dbg !9255, !tbaa !4139
  %arraydecay223 = getelementptr inbounds [256 x i8], ptr %_logname213, i64 0, i64 0, !dbg !9255
  %172 = load ptr, ptr %rkb, align 8, !dbg !9255, !tbaa !3910
  %rkb_nodeid224 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %172, i32 0, i32 1, !dbg !9255
  %173 = load i32, ptr %rkb_nodeid224, align 8, !dbg !9255, !tbaa !4311
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf221, ptr noundef %171, ptr noundef %arraydecay223, i32 noundef 7, i32 noundef 2, ptr noundef @.str.67, ptr noundef @.str.68, i32 noundef %173), !dbg !9255
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname213) #16, !dbg !9254
  br label %do.cond225, !dbg !9255

do.cond225:                                       ; preds = %do.body212
  br label %do.end226, !dbg !9255

do.end226:                                        ; preds = %do.cond225
  br label %if.end227, !dbg !9254

if.end227:                                        ; preds = %do.end226, %do.body203
  br label %do.cond228, !dbg !9253

do.cond228:                                       ; preds = %if.end227
  br label %do.end229, !dbg !9253

do.end229:                                        ; preds = %do.cond228
  br label %if.end230, !dbg !9256

if.end230:                                        ; preds = %do.end229, %if.end146
  %174 = load ptr, ptr %rk.addr, align 8, !dbg !9257, !tbaa !3910
  %175 = load ptr, ptr %rkb, align 8, !dbg !9258, !tbaa !3910
  %rkb_nodeid231 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %175, i32 0, i32 1, !dbg !9259
  %176 = load i32, ptr %rkb_nodeid231, align 8, !dbg !9259, !tbaa !4311
  %177 = load ptr, ptr %rkb, align 8, !dbg !9260, !tbaa !3910
  %rkb_proto232 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %177, i32 0, i32 58, !dbg !9261
  %178 = load i32, ptr %rkb_proto232, align 8, !dbg !9261, !tbaa !4314
  %idxprom = zext i32 %178 to i64, !dbg !9262
  %arrayidx233 = getelementptr inbounds [5 x ptr], ptr @rd_kafka_secproto_names, i64 0, i64 %idxprom, !dbg !9262
  %179 = load ptr, ptr %arrayidx233, align 8, !dbg !9262, !tbaa !3910
  %180 = load ptr, ptr %rkb, align 8, !dbg !9263, !tbaa !3910
  %rkb_origname234 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %180, i32 0, i32 45, !dbg !9264
  %181 = load ptr, ptr %rkb_origname234, align 8, !dbg !9264, !tbaa !4318
  %182 = load ptr, ptr %rkb, align 8, !dbg !9265, !tbaa !3910
  %rkb_port235 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %182, i32 0, i32 44, !dbg !9266
  %183 = load i16, ptr %rkb_port235, align 8, !dbg !9266, !tbaa !4321
  %conv236 = zext i16 %183 to i32, !dbg !9265
  %184 = load ptr, ptr %rkb, align 8, !dbg !9267, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %184, i32 0, i32 19, !dbg !9268
  %185 = load i32, ptr %rkb_state, align 4, !dbg !9268, !tbaa !4130
  %idxprom237 = zext i32 %185 to i64, !dbg !9269
  %arrayidx238 = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom237, !dbg !9269
  %186 = load ptr, ptr %arrayidx238, align 8, !dbg !9269, !tbaa !3910
  call void @rd_kafka_interceptors_on_broker_state_change(ptr noundef %174, i32 noundef %176, ptr noundef %179, ptr noundef %181, i32 noundef %conv236, ptr noundef %186), !dbg !9270
  %187 = load ptr, ptr %rkb, align 8, !dbg !9271, !tbaa !3910
  %rkb_lock239 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %187, i32 0, i32 9, !dbg !9271
  %call240 = call i32 @mtx_unlock(ptr noundef %rkb_lock239), !dbg !9271
  %188 = load ptr, ptr %rkb, align 8, !dbg !9272, !tbaa !3910
  %rkb_coord_monitor = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %188, i32 0, i32 57, !dbg !9273
  %189 = load ptr, ptr %rkb, align 8, !dbg !9274, !tbaa !3910
  %190 = load ptr, ptr %rk.addr, align 8, !dbg !9275, !tbaa !3910
  %rk_ops = getelementptr inbounds %struct.rd_kafka_s, ptr %190, i32 0, i32 1, !dbg !9276
  %191 = load ptr, ptr %rk_ops, align 8, !dbg !9276, !tbaa !9277
  call void @rd_kafka_broker_monitor_add(ptr noundef %rkb_coord_monitor, ptr noundef %189, ptr noundef %191, ptr noundef @rd_kafka_coord_rkb_monitor_cb), !dbg !9278
  %call241 = call i32 @pthread_sigmask(i32 noundef 2, ptr noundef %oldset, ptr noundef null) #16, !dbg !9279
  %192 = load ptr, ptr %rkb, align 8, !dbg !9280, !tbaa !3910
  store ptr %192, ptr %retval, align 8, !dbg !9281
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9281

cleanup:                                          ; preds = %if.end230, %do.end144
  call void @llvm.lifetime.end.p0(i64 128, ptr %oldset) #16, !dbg !9282
  call void @llvm.lifetime.end.p0(i64 128, ptr %newset) #16, !dbg !9282
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !9282
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !9282
  %193 = load ptr, ptr %retval, align 8, !dbg !9282
  ret ptr %193, !dbg !9282
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_calloc(i64 noundef %num, i64 noundef %sz) #4 !dbg !9283 {
entry:
  %num.addr = alloca i64, align 8
  %sz.addr = alloca i64, align 8
  %p = alloca ptr, align 8
  store i64 %num, ptr %num.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %num.addr, metadata !9287, metadata !DIExpression()), !dbg !9290
  store i64 %sz, ptr %sz.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %sz.addr, metadata !9288, metadata !DIExpression()), !dbg !9291
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #16, !dbg !9292
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !9289, metadata !DIExpression()), !dbg !9293
  %0 = load i64, ptr %num.addr, align 8, !dbg !9294, !tbaa !4039
  %1 = load i64, ptr %sz.addr, align 8, !dbg !9295, !tbaa !4039
  %call = call noalias ptr @calloc(i64 noundef %0, i64 noundef %1) #21, !dbg !9296
  store ptr %call, ptr %p, align 8, !dbg !9293, !tbaa !3910
  %2 = load ptr, ptr %p, align 8, !dbg !9297, !tbaa !3910
  %tobool = icmp ne ptr %2, null, !dbg !9297
  br i1 %tobool, label %if.then, label %if.else, !dbg !9300

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !9300

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.223, ptr noundef @.str.98, i32 noundef 134, ptr noundef @__PRETTY_FUNCTION__.rd_calloc) #18, !dbg !9297
  unreachable, !dbg !9297

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr %p, align 8, !dbg !9301, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #16, !dbg !9302
  ret ptr %3, !dbg !9303
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_mk_nodename(ptr noundef %dest, i64 noundef %dsize, ptr noundef %name, i16 noundef zeroext %port) #0 !dbg !9304 {
entry:
  %dest.addr = alloca ptr, align 8
  %dsize.addr = alloca i64, align 8
  %name.addr = alloca ptr, align 8
  %port.addr = alloca i16, align 2
  store ptr %dest, ptr %dest.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %dest.addr, metadata !9308, metadata !DIExpression()), !dbg !9312
  store i64 %dsize, ptr %dsize.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %dsize.addr, metadata !9309, metadata !DIExpression()), !dbg !9313
  store ptr %name, ptr %name.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !9310, metadata !DIExpression()), !dbg !9314
  store i16 %port, ptr %port.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %port.addr, metadata !9311, metadata !DIExpression()), !dbg !9315
  %0 = load ptr, ptr %dest.addr, align 8, !dbg !9316, !tbaa !3910
  %1 = load i64, ptr %dsize.addr, align 8, !dbg !9316, !tbaa !4039
  %2 = load ptr, ptr %name.addr, align 8, !dbg !9316, !tbaa !3910
  %3 = load i16, ptr %port.addr, align 2, !dbg !9316, !tbaa !3915
  %conv = zext i16 %3 to i32, !dbg !9316
  %call = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %0, i64 noundef %1, ptr noundef @.str.224, ptr noundef %2, i32 noundef %conv) #16, !dbg !9316
  ret void, !dbg !9317
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_mk_brokername(ptr noundef %dest, i64 noundef %dsize, i32 noundef %proto, ptr noundef %nodename, i32 noundef %nodeid, i32 noundef %source) #0 !dbg !9318 {
entry:
  %dest.addr = alloca ptr, align 8
  %dsize.addr = alloca i64, align 8
  %proto.addr = alloca i32, align 4
  %nodename.addr = alloca ptr, align 8
  %nodeid.addr = alloca i32, align 4
  %source.addr = alloca i32, align 4
  %r = alloca i32, align 4
  store ptr %dest, ptr %dest.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %dest.addr, metadata !9322, metadata !DIExpression()), !dbg !9331
  store i64 %dsize, ptr %dsize.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %dsize.addr, metadata !9323, metadata !DIExpression()), !dbg !9332
  store i32 %proto, ptr %proto.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %proto.addr, metadata !9324, metadata !DIExpression()), !dbg !9333
  store ptr %nodename, ptr %nodename.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %nodename.addr, metadata !9325, metadata !DIExpression()), !dbg !9334
  store i32 %nodeid, ptr %nodeid.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %nodeid.addr, metadata !9326, metadata !DIExpression()), !dbg !9335
  store i32 %source, ptr %source.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %source.addr, metadata !9327, metadata !DIExpression()), !dbg !9336
  %0 = load i32, ptr %proto.addr, align 4, !dbg !9337, !tbaa !4126
  %cmp = icmp ne i32 %0, 0, !dbg !9338
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !9339

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, ptr %source.addr, align 4, !dbg !9340, !tbaa !4126
  %cmp1 = icmp ne i32 %1, 3, !dbg !9341
  br i1 %cmp1, label %if.then, label %if.end6, !dbg !9342

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !9343
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !9328, metadata !DIExpression()), !dbg !9344
  %2 = load ptr, ptr %dest.addr, align 8, !dbg !9345, !tbaa !3910
  %3 = load i64, ptr %dsize.addr, align 8, !dbg !9345, !tbaa !4039
  %4 = load i32, ptr %proto.addr, align 4, !dbg !9345, !tbaa !4126
  %idxprom = zext i32 %4 to i64, !dbg !9345
  %arrayidx = getelementptr inbounds [5 x ptr], ptr @rd_kafka_secproto_names, i64 0, i64 %idxprom, !dbg !9345
  %5 = load ptr, ptr %arrayidx, align 8, !dbg !9345, !tbaa !3910
  %call = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %2, i64 noundef %3, ptr noundef @.str.225, ptr noundef %5) #16, !dbg !9345
  store i32 %call, ptr %r, align 4, !dbg !9344, !tbaa !3959
  %6 = load i32, ptr %r, align 4, !dbg !9346, !tbaa !3959
  %7 = load i64, ptr %dsize.addr, align 8, !dbg !9348, !tbaa !4039
  %conv = trunc i64 %7 to i32, !dbg !9349
  %cmp2 = icmp sge i32 %6, %conv, !dbg !9350
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !9351

if.then4:                                         ; preds = %if.then
  store i32 0, ptr %r, align 4, !dbg !9352, !tbaa !3959
  br label %if.end, !dbg !9353

if.end:                                           ; preds = %if.then4, %if.then
  %8 = load i32, ptr %r, align 4, !dbg !9354, !tbaa !3959
  %9 = load ptr, ptr %dest.addr, align 8, !dbg !9355, !tbaa !3910
  %idx.ext = sext i32 %8 to i64, !dbg !9355
  %add.ptr = getelementptr inbounds i8, ptr %9, i64 %idx.ext, !dbg !9355
  store ptr %add.ptr, ptr %dest.addr, align 8, !dbg !9355, !tbaa !3910
  %10 = load i32, ptr %r, align 4, !dbg !9356, !tbaa !3959
  %conv5 = sext i32 %10 to i64, !dbg !9356
  %11 = load i64, ptr %dsize.addr, align 8, !dbg !9357, !tbaa !4039
  %sub = sub i64 %11, %conv5, !dbg !9357
  store i64 %sub, ptr %dsize.addr, align 8, !dbg !9357, !tbaa !4039
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !9358
  br label %if.end6, !dbg !9359

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  %12 = load i32, ptr %nodeid.addr, align 4, !dbg !9360, !tbaa !3959
  %cmp7 = icmp eq i32 %12, -1, !dbg !9362
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !9363

if.then9:                                         ; preds = %if.end6
  %13 = load ptr, ptr %dest.addr, align 8, !dbg !9364, !tbaa !3910
  %14 = load i64, ptr %dsize.addr, align 8, !dbg !9364, !tbaa !4039
  %15 = load ptr, ptr %nodename.addr, align 8, !dbg !9364, !tbaa !3910
  %16 = load i32, ptr %source.addr, align 4, !dbg !9364, !tbaa !4126
  %cmp10 = icmp eq i32 %16, 3, !dbg !9364
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !9364

cond.true:                                        ; preds = %if.then9
  br label %cond.end, !dbg !9364

cond.false:                                       ; preds = %if.then9
  %17 = load i32, ptr %source.addr, align 4, !dbg !9364, !tbaa !4126
  %cmp12 = icmp eq i32 %17, 2, !dbg !9364
  %18 = zext i1 %cmp12 to i64, !dbg !9364
  %cond = select i1 %cmp12, ptr @.str.227, ptr @.str.228, !dbg !9364
  br label %cond.end, !dbg !9364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi ptr [ @.str.85, %cond.true ], [ %cond, %cond.false ], !dbg !9364
  %call15 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %13, i64 noundef %14, ptr noundef @.str.226, ptr noundef %15, ptr noundef %cond14) #16, !dbg !9364
  br label %if.end17, !dbg !9364

if.else:                                          ; preds = %if.end6
  %19 = load ptr, ptr %dest.addr, align 8, !dbg !9365, !tbaa !3910
  %20 = load i64, ptr %dsize.addr, align 8, !dbg !9365, !tbaa !4039
  %21 = load ptr, ptr %nodename.addr, align 8, !dbg !9365, !tbaa !3910
  %22 = load i32, ptr %nodeid.addr, align 4, !dbg !9365, !tbaa !3959
  %call16 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %19, i64 noundef %20, ptr noundef @.str.229, ptr noundef %21, i32 noundef %22) #16, !dbg !9365
  br label %if.end17

if.end17:                                         ; preds = %if.else, %cond.end
  ret void, !dbg !9366
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_strdup(ptr noundef %s) #4 !dbg !9367 {
entry:
  %s.addr = alloca ptr, align 8
  %n = alloca ptr, align 8
  store ptr %s, ptr %s.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !9371, metadata !DIExpression()), !dbg !9373
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #16, !dbg !9374
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !9372, metadata !DIExpression()), !dbg !9375
  %0 = load ptr, ptr %s.addr, align 8, !dbg !9376, !tbaa !3910
  %call = call noalias ptr @strdup(ptr noundef %0) #16, !dbg !9377
  store ptr %call, ptr %n, align 8, !dbg !9375, !tbaa !3910
  %1 = load ptr, ptr %n, align 8, !dbg !9378, !tbaa !3910
  %tobool = icmp ne ptr %1, null, !dbg !9378
  br i1 %tobool, label %if.then, label %if.else, !dbg !9381

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !9381

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.230, ptr noundef @.str.98, i32 noundef 160, ptr noundef @__PRETTY_FUNCTION__.rd_strdup) #18, !dbg !9378
  unreachable, !dbg !9378

if.end:                                           ; preds = %if.then
  %2 = load ptr, ptr %n, align 8, !dbg !9382, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #16, !dbg !9383
  ret ptr %2, !dbg !9384
}

declare !dbg !9385 i32 @mtx_init(ptr noundef, i32 noundef) #3

declare !dbg !9388 ptr @rd_kafka_q_new0(ptr noundef, i8 noundef zeroext, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_avg_init(ptr noundef %ra, i32 noundef %type, i64 noundef %exp_min, i64 noundef %exp_max, i32 noundef %sigfigs, i32 noundef %enable) #0 !dbg !9391 {
entry:
  %ra.addr = alloca ptr, align 8
  %type.addr = alloca i32, align 4
  %exp_min.addr = alloca i64, align 8
  %exp_max.addr = alloca i64, align 8
  %sigfigs.addr = alloca i32, align 4
  %enable.addr = alloca i32, align 4
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !9395, metadata !DIExpression()), !dbg !9401
  store i32 %type, ptr %type.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !9396, metadata !DIExpression()), !dbg !9402
  store i64 %exp_min, ptr %exp_min.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %exp_min.addr, metadata !9397, metadata !DIExpression()), !dbg !9403
  store i64 %exp_max, ptr %exp_max.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %exp_max.addr, metadata !9398, metadata !DIExpression()), !dbg !9404
  store i32 %sigfigs, ptr %sigfigs.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %sigfigs.addr, metadata !9399, metadata !DIExpression()), !dbg !9405
  store i32 %enable, ptr %enable.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %enable.addr, metadata !9400, metadata !DIExpression()), !dbg !9406
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !9407, !tbaa !3910
  call void @llvm.memset.p0.i64(ptr align 8 %0, i8 0, i64 184, i1 false), !dbg !9408
  %1 = load ptr, ptr %ra.addr, align 8, !dbg !9409, !tbaa !3910
  %ra_lock = getelementptr inbounds %struct.rd_avg_s, ptr %1, i32 0, i32 1, !dbg !9410
  %call = call i32 @mtx_init(ptr noundef %ra_lock, i32 noundef 0), !dbg !9411
  %2 = load i32, ptr %enable.addr, align 4, !dbg !9412, !tbaa !3959
  %3 = load ptr, ptr %ra.addr, align 8, !dbg !9413, !tbaa !3910
  %ra_enabled = getelementptr inbounds %struct.rd_avg_s, ptr %3, i32 0, i32 2, !dbg !9414
  store i32 %2, ptr %ra_enabled, align 8, !dbg !9415, !tbaa !8236
  %4 = load i32, ptr %enable.addr, align 4, !dbg !9416, !tbaa !3959
  %tobool = icmp ne i32 %4, 0, !dbg !9416
  br i1 %tobool, label %if.end, label %if.then, !dbg !9418

if.then:                                          ; preds = %entry
  br label %return, !dbg !9419

if.end:                                           ; preds = %entry
  %5 = load i32, ptr %type.addr, align 4, !dbg !9420, !tbaa !3959
  %6 = load ptr, ptr %ra.addr, align 8, !dbg !9421, !tbaa !3910
  %ra_type = getelementptr inbounds %struct.rd_avg_s, ptr %6, i32 0, i32 3, !dbg !9422
  store i32 %5, ptr %ra_type, align 4, !dbg !9423, !tbaa !9424
  %call1 = call i64 @rd_clock(), !dbg !9425
  %7 = load ptr, ptr %ra.addr, align 8, !dbg !9426, !tbaa !3910
  %ra_v = getelementptr inbounds %struct.rd_avg_s, ptr %7, i32 0, i32 0, !dbg !9427
  %start = getelementptr inbounds %struct.anon.4, ptr %ra_v, i32 0, i32 5, !dbg !9428
  store i64 %call1, ptr %start, align 8, !dbg !9429, !tbaa !9430
  %8 = load i64, ptr %exp_min.addr, align 8, !dbg !9431, !tbaa !4039
  %9 = load i64, ptr %exp_max.addr, align 8, !dbg !9432, !tbaa !4039
  %10 = load i32, ptr %sigfigs.addr, align 4, !dbg !9433, !tbaa !3959
  %call2 = call ptr @rd_hdr_histogram_new(i64 noundef %8, i64 noundef %9, i32 noundef %10), !dbg !9434
  %11 = load ptr, ptr %ra.addr, align 8, !dbg !9435, !tbaa !3910
  %ra_hdr = getelementptr inbounds %struct.rd_avg_s, ptr %11, i32 0, i32 4, !dbg !9436
  store ptr %call2, ptr %ra_hdr, align 8, !dbg !9437, !tbaa !8287
  br label %return, !dbg !9438

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9438
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_atomic64_init(ptr noundef %ra, i64 noundef %v) #4 !dbg !9439 {
entry:
  %ra.addr = alloca ptr, align 8
  %v.addr = alloca i64, align 8
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !9443, metadata !DIExpression()), !dbg !9445
  store i64 %v, ptr %v.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !9444, metadata !DIExpression()), !dbg !9446
  %0 = load i64, ptr %v.addr, align 8, !dbg !9447, !tbaa !4039
  %1 = load ptr, ptr %ra.addr, align 8, !dbg !9448, !tbaa !3910
  %val = getelementptr inbounds %struct.rd_atomic64_t, ptr %1, i32 0, i32 0, !dbg !9449
  store i64 %0, ptr %val, align 8, !dbg !9450, !tbaa !9451
  ret void, !dbg !9452
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_interval_init(ptr noundef %ri) #4 !dbg !9453 {
entry:
  %ri.addr = alloca ptr, align 8
  store ptr %ri, ptr %ri.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ri.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  %0 = load ptr, ptr %ri.addr, align 8, !dbg !9459, !tbaa !3910
  call void @llvm.memset.p0.i64(ptr align 8 %0, i8 0, i64 24, i1 false), !dbg !9460
  ret void, !dbg !9461
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_interval_fixed(ptr noundef %ri, i64 noundef %fixed_us) #4 !dbg !9462 {
entry:
  %ri.addr = alloca ptr, align 8
  %fixed_us.addr = alloca i64, align 8
  store ptr %ri, ptr %ri.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ri.addr, metadata !9466, metadata !DIExpression()), !dbg !9468
  store i64 %fixed_us, ptr %fixed_us.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %fixed_us.addr, metadata !9467, metadata !DIExpression()), !dbg !9469
  %0 = load i64, ptr %fixed_us.addr, align 8, !dbg !9470, !tbaa !4039
  %1 = load ptr, ptr %ri.addr, align 8, !dbg !9471, !tbaa !3910
  %ri_fixed = getelementptr inbounds %struct.rd_interval_s, ptr %1, i32 0, i32 1, !dbg !9472
  store i64 %0, ptr %ri_fixed, align 8, !dbg !9473, !tbaa !7444
  ret void, !dbg !9474
}

; Function Attrs: nounwind
declare !dbg !9475 i32 @sigemptyset(ptr noundef) #9

; Function Attrs: nounwind
declare !dbg !9480 i32 @sigfillset(ptr noundef) #9

; Function Attrs: nounwind
declare !dbg !9481 i32 @sigdelset(ptr noundef, i32 noundef) #9

; Function Attrs: nounwind
declare !dbg !9484 i32 @pthread_sigmask(i32 noundef, ptr noundef, ptr noundef) #9

; Function Attrs: nounwind uwtable
define internal i32 @rd_pipe_nonblocking(ptr noundef %fds) #0 !dbg !9493 {
entry:
  %retval = alloca i32, align 4
  %fds.addr = alloca ptr, align 8
  store ptr %fds, ptr %fds.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %fds.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  %0 = load ptr, ptr %fds.addr, align 8, !dbg !9500, !tbaa !3910
  %call = call i32 @pipe(ptr noundef %0) #16, !dbg !9502
  %cmp = icmp eq i32 %call, -1, !dbg !9503
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9504

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %fds.addr, align 8, !dbg !9505, !tbaa !3910
  %arrayidx = getelementptr inbounds i32, ptr %1, i64 0, !dbg !9505
  %2 = load i32, ptr %arrayidx, align 4, !dbg !9505, !tbaa !3959
  %call1 = call i32 @rd_fd_set_nonblocking(i32 noundef %2), !dbg !9506
  %cmp2 = icmp eq i32 %call1, -1, !dbg !9507
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !9508

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load ptr, ptr %fds.addr, align 8, !dbg !9509, !tbaa !3910
  %arrayidx4 = getelementptr inbounds i32, ptr %3, i64 1, !dbg !9509
  %4 = load i32, ptr %arrayidx4, align 4, !dbg !9509, !tbaa !3959
  %call5 = call i32 @rd_fd_set_nonblocking(i32 noundef %4), !dbg !9510
  %tobool = icmp ne i32 %call5, 0, !dbg !9510
  br i1 %tobool, label %if.then, label %if.end, !dbg !9511

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %call6 = call ptr @__errno_location() #20, !dbg !9512
  %5 = load i32, ptr %call6, align 4, !dbg !9512, !tbaa !3959
  store i32 %5, ptr %retval, align 4, !dbg !9513
  br label %return, !dbg !9513

if.end:                                           ; preds = %lor.lhs.false3
  %6 = load ptr, ptr %fds.addr, align 8, !dbg !9514, !tbaa !3910
  %arrayidx7 = getelementptr inbounds i32, ptr %6, i64 0, !dbg !9514
  %7 = load i32, ptr %arrayidx7, align 4, !dbg !9514, !tbaa !3959
  %call8 = call i32 (i32, i32, ...) @fcntl(i32 noundef %7, i32 noundef 1031, i32 noundef 100), !dbg !9515
  %8 = load ptr, ptr %fds.addr, align 8, !dbg !9516, !tbaa !3910
  %arrayidx9 = getelementptr inbounds i32, ptr %8, i64 1, !dbg !9516
  %9 = load i32, ptr %arrayidx9, align 4, !dbg !9516, !tbaa !3959
  %call10 = call i32 (i32, i32, ...) @fcntl(i32 noundef %9, i32 noundef 1031, i32 noundef 100), !dbg !9517
  store i32 0, ptr %retval, align 4, !dbg !9518
  br label %return, !dbg !9518

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, ptr %retval, align 4, !dbg !9519
  ret i32 %10, !dbg !9519
}

declare !dbg !9520 void @rd_kafka_q_io_event_enable(ptr noundef, i32 noundef, ptr noundef, i64 noundef) #3

declare !dbg !9523 i32 @thrd_create(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_thread_main(ptr noundef %arg) #0 !dbg !9531 {
entry:
  %arg.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  %rk = alloca ptr, align 8
  %_logname = alloca [256 x i8], align 16
  %backoff = alloca i32, align 4
  %r = alloca i32, align 4
  %orig_state = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %_logname74 = alloca [256 x i8], align 16
  %_logname170 = alloca [256 x i8], align 16
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !9533, metadata !DIExpression()), !dbg !9561
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !9562
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !9534, metadata !DIExpression()), !dbg !9563
  %0 = load ptr, ptr %arg.addr, align 8, !dbg !9564, !tbaa !3910
  store ptr %0, ptr %rkb, align 8, !dbg !9563, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %rk) #16, !dbg !9565
  tail call void @llvm.dbg.declare(metadata ptr %rk, metadata !9535, metadata !DIExpression()), !dbg !9566
  %1 = load ptr, ptr %rkb, align 8, !dbg !9567, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 32, !dbg !9568
  %2 = load ptr, ptr %rkb_rk, align 8, !dbg !9568, !tbaa !4139
  store ptr %2, ptr %rk, align 8, !dbg !9566, !tbaa !3910
  %3 = load ptr, ptr %rkb, align 8, !dbg !9569, !tbaa !3910
  %rkb_name = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 42, !dbg !9570
  %arraydecay = getelementptr inbounds [256 x i8], ptr %rkb_name, i64 0, i64 0, !dbg !9569
  call void (ptr, ...) @rd_kafka_set_thread_name(ptr noundef @.str.26, ptr noundef %arraydecay), !dbg !9571
  %4 = load ptr, ptr %rkb, align 8, !dbg !9572, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 1, !dbg !9573
  %5 = load i32, ptr %rkb_nodeid, align 8, !dbg !9573, !tbaa !4311
  call void (ptr, ...) @rd_kafka_set_thread_sysname(ptr noundef @.str.231, i32 noundef %5), !dbg !9574
  %6 = load ptr, ptr %rk, align 8, !dbg !9575, !tbaa !3910
  call void @rd_kafka_interceptors_on_thread_start(ptr noundef %6, i32 noundef 2), !dbg !9576
  %call = call i32 @rd_atomic32_add(ptr noundef @rd_kafka_thread_cnt_curr, i32 noundef 1), !dbg !9577
  %7 = load ptr, ptr %rkb, align 8, !dbg !9578, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 9, !dbg !9578
  %call1 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !9578
  %8 = load ptr, ptr %rkb, align 8, !dbg !9579, !tbaa !3910
  %rkb_lock2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 9, !dbg !9579
  %call3 = call i32 @mtx_unlock(ptr noundef %rkb_lock2), !dbg !9579
  br label %do.body, !dbg !9580

do.body:                                          ; preds = %entry
  %9 = load ptr, ptr %rkb, align 8, !dbg !9581, !tbaa !3910
  %rkb_rk4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 32, !dbg !9581
  %10 = load ptr, ptr %rkb_rk4, align 8, !dbg !9581, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %10, i32 0, i32 18, !dbg !9581
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !9581
  %11 = load i32, ptr %debug, align 8, !dbg !9581, !tbaa !4140
  %and = and i32 %11, 2, !dbg !9581
  %conv = sext i32 %and to i64, !dbg !9581
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9581
  %tobool = icmp ne i64 %expval, 0, !dbg !9581
  br i1 %tobool, label %if.then, label %if.end, !dbg !9582

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !9583

do.body5:                                         ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !9584
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !9536, metadata !DIExpression()), !dbg !9584
  %12 = load ptr, ptr %rkb, align 8, !dbg !9584, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 49, !dbg !9584
  %call6 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !9584
  %arraydecay7 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !9584
  %13 = load ptr, ptr %rkb, align 8, !dbg !9584, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 48, !dbg !9584
  %14 = load ptr, ptr %rkb_logname, align 8, !dbg !9584, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay7, ptr noundef %14, i64 noundef 256), !dbg !9584
  %15 = load ptr, ptr %rkb, align 8, !dbg !9584, !tbaa !3910
  %rkb_logname_lock8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 49, !dbg !9584
  %call9 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock8), !dbg !9584
  %16 = load ptr, ptr %rkb, align 8, !dbg !9584, !tbaa !3910
  %rkb_rk10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 32, !dbg !9584
  %17 = load ptr, ptr %rkb_rk10, align 8, !dbg !9584, !tbaa !4139
  %rk_conf11 = getelementptr inbounds %struct.rd_kafka_s, ptr %17, i32 0, i32 18, !dbg !9584
  %18 = load ptr, ptr %rkb, align 8, !dbg !9584, !tbaa !3910
  %rkb_rk12 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 32, !dbg !9584
  %19 = load ptr, ptr %rkb_rk12, align 8, !dbg !9584, !tbaa !4139
  %arraydecay13 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !9584
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf11, ptr noundef %19, ptr noundef %arraydecay13, i32 noundef 7, i32 noundef 2, ptr noundef @.str.232, ptr noundef @.str.233), !dbg !9584
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !9583
  br label %do.cond, !dbg !9584

do.cond:                                          ; preds = %do.body5
  br label %do.end, !dbg !9584

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !9583

if.end:                                           ; preds = %do.end, %do.body
  br label %do.cond14, !dbg !9582

do.cond14:                                        ; preds = %if.end
  br label %do.end15, !dbg !9582

do.end15:                                         ; preds = %do.cond14
  br label %while.cond, !dbg !9585

while.cond:                                       ; preds = %cleanup.cont, %cleanup, %do.end15
  %20 = load ptr, ptr %rkb, align 8, !dbg !9586, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 31, !dbg !9586
  %call16 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt), !dbg !9586
  %cmp = icmp sle i32 %call16, 1, !dbg !9586
  %lnot = xor i1 %cmp, true, !dbg !9587
  br i1 %lnot, label %while.body, label %while.end, !dbg !9585

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %backoff) #16, !dbg !9588
  tail call void @llvm.dbg.declare(metadata ptr %backoff, metadata !9541, metadata !DIExpression()), !dbg !9589
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !9590
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !9543, metadata !DIExpression()), !dbg !9591
  call void @llvm.lifetime.start.p0(i64 4, ptr %orig_state) #16, !dbg !9592
  tail call void @llvm.dbg.declare(metadata ptr %orig_state, metadata !9544, metadata !DIExpression()), !dbg !9593
  br label %redo, !dbg !9592

redo:                                             ; preds = %if.end34, %if.end22, %while.body
  tail call void @llvm.dbg.label(metadata !9545), !dbg !9594
  %21 = load ptr, ptr %rkb, align 8, !dbg !9595, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 19, !dbg !9596
  %22 = load i32, ptr %rkb_state, align 4, !dbg !9596, !tbaa !4130
  store i32 %22, ptr %orig_state, align 4, !dbg !9597, !tbaa !4126
  %23 = load ptr, ptr %rkb, align 8, !dbg !9598, !tbaa !3910
  %rkb_state18 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 19, !dbg !9599
  %24 = load i32, ptr %rkb_state18, align 4, !dbg !9599, !tbaa !4130
  switch i32 %24, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb27
    i32 2, label %sw.bb37
    i32 3, label %sw.bb106
    i32 4, label %sw.bb106
    i32 5, label %sw.bb106
    i32 10, label %sw.bb106
    i32 9, label %sw.bb106
    i32 8, label %sw.bb106
    i32 11, label %sw.bb133
    i32 7, label %sw.bb141
    i32 6, label %sw.bb141
  ], !dbg !9600

sw.bb:                                            ; preds = %redo
  %25 = load ptr, ptr %rkb, align 8, !dbg !9601, !tbaa !3910
  %call19 = call i32 @rd_kafka_broker_needs_connection(ptr noundef %25), !dbg !9603
  %tobool20 = icmp ne i32 %call19, 0, !dbg !9603
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !9604

if.then21:                                        ; preds = %sw.bb
  %26 = load ptr, ptr %rkb, align 8, !dbg !9605, !tbaa !3910
  call void @rd_kafka_broker_serve(ptr noundef %26, i32 noundef 1000), !dbg !9607
  br label %sw.epilog, !dbg !9608

if.end22:                                         ; preds = %sw.bb
  %27 = load ptr, ptr %rkb, align 8, !dbg !9609, !tbaa !3910
  %rkb_lock23 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 9, !dbg !9609
  %call24 = call i32 @mtx_lock(ptr noundef %rkb_lock23), !dbg !9609
  %28 = load ptr, ptr %rkb, align 8, !dbg !9610, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %28, i32 noundef 2), !dbg !9611
  %29 = load ptr, ptr %rkb, align 8, !dbg !9612, !tbaa !3910
  %rkb_lock25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 9, !dbg !9612
  %call26 = call i32 @mtx_unlock(ptr noundef %rkb_lock25), !dbg !9612
  br label %redo, !dbg !9613

sw.bb27:                                          ; preds = %redo
  %30 = load ptr, ptr %rkb, align 8, !dbg !9614, !tbaa !3910
  %rkb_lock28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %30, i32 0, i32 9, !dbg !9614
  %call29 = call i32 @mtx_lock(ptr noundef %rkb_lock28), !dbg !9614
  %31 = load ptr, ptr %rkb, align 8, !dbg !9615, !tbaa !3910
  %rkb_rk30 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 32, !dbg !9617
  %32 = load ptr, ptr %rkb_rk30, align 8, !dbg !9617, !tbaa !4139
  %rk_conf31 = getelementptr inbounds %struct.rd_kafka_s, ptr %32, i32 0, i32 18, !dbg !9618
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf31, i32 0, i32 32, !dbg !9619
  %33 = load i32, ptr %sparse_connections, align 4, !dbg !9619, !tbaa !5300
  %tobool32 = icmp ne i32 %33, 0, !dbg !9615
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !9620

if.then33:                                        ; preds = %sw.bb27
  %34 = load ptr, ptr %rkb, align 8, !dbg !9621, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %34, i32 noundef 0), !dbg !9622
  br label %if.end34, !dbg !9622

if.else:                                          ; preds = %sw.bb27
  %35 = load ptr, ptr %rkb, align 8, !dbg !9623, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %35, i32 noundef 2), !dbg !9624
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then33
  %36 = load ptr, ptr %rkb, align 8, !dbg !9625, !tbaa !3910
  %rkb_lock35 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 9, !dbg !9625
  %call36 = call i32 @mtx_unlock(ptr noundef %rkb_lock35), !dbg !9625
  br label %redo, !dbg !9626

sw.bb37:                                          ; preds = %redo
  %37 = load ptr, ptr %rkb, align 8, !dbg !9627, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 27, !dbg !9629
  %38 = load i32, ptr %rkb_source, align 8, !dbg !9629, !tbaa !4174
  %cmp38 = icmp eq i32 %38, 2, !dbg !9630
  br i1 %cmp38, label %if.then40, label %if.end45, !dbg !9631

if.then40:                                        ; preds = %sw.bb37
  %39 = load ptr, ptr %rkb, align 8, !dbg !9632, !tbaa !3910
  %rkb_lock41 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 9, !dbg !9632
  %call42 = call i32 @mtx_lock(ptr noundef %rkb_lock41), !dbg !9632
  %40 = load ptr, ptr %rkb, align 8, !dbg !9634, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %40, i32 noundef 6), !dbg !9635
  %41 = load ptr, ptr %rkb, align 8, !dbg !9636, !tbaa !3910
  %rkb_lock43 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 9, !dbg !9636
  %call44 = call i32 @mtx_unlock(ptr noundef %rkb_lock43), !dbg !9636
  br label %sw.epilog, !dbg !9637

if.end45:                                         ; preds = %sw.bb37
  %42 = load ptr, ptr %rkb, align 8, !dbg !9638, !tbaa !3910
  %rkb_rk46 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 32, !dbg !9638
  %43 = load ptr, ptr %rkb_rk46, align 8, !dbg !9638, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %43, i32 0, i32 23, !dbg !9638
  %call47 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !9638
  %and48 = and i32 %call47, 1, !dbg !9638
  %conv49 = sext i32 %and48 to i64, !dbg !9638
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0), !dbg !9638
  %tobool51 = icmp ne i64 %expval50, 0, !dbg !9638
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !9640

if.then52:                                        ; preds = %if.end45
  %44 = load ptr, ptr %rkb, align 8, !dbg !9641, !tbaa !3910
  call void @rd_kafka_broker_serve(ptr noundef %44, i32 noundef 1000), !dbg !9642
  br label %if.end53, !dbg !9642

if.end53:                                         ; preds = %if.then52, %if.end45
  %45 = load ptr, ptr %rkb, align 8, !dbg !9643, !tbaa !3910
  %rkb_rk54 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %45, i32 0, i32 32, !dbg !9645
  %46 = load ptr, ptr %rkb_rk54, align 8, !dbg !9645, !tbaa !4139
  %call55 = call zeroext i8 @rd_kafka_sasl_ready(ptr noundef %46), !dbg !9646
  %tobool56 = icmp ne i8 %call55, 0, !dbg !9646
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !9647

if.then57:                                        ; preds = %if.end53
  %47 = load ptr, ptr %rkb, align 8, !dbg !9648, !tbaa !3910
  call void @rd_kafka_broker_serve(ptr noundef %47, i32 noundef 1000), !dbg !9650
  store i32 6, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9651, !llvm.loop !9652

if.end58:                                         ; preds = %if.end53
  %48 = load ptr, ptr %rkb, align 8, !dbg !9654, !tbaa !3910
  %call59 = call i64 @rd_clock(), !dbg !9655
  %call60 = call i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %48, i64 noundef %call59), !dbg !9656
  store i32 %call60, ptr %backoff, align 4, !dbg !9657, !tbaa !3959
  %49 = load i32, ptr %backoff, align 4, !dbg !9658, !tbaa !3959
  %cmp61 = icmp sgt i32 %49, 0, !dbg !9659
  br i1 %cmp61, label %if.then63, label %if.end90, !dbg !9660

if.then63:                                        ; preds = %if.end58
  br label %do.body64, !dbg !9661

do.body64:                                        ; preds = %if.then63
  %50 = load ptr, ptr %rkb, align 8, !dbg !9662, !tbaa !3910
  %rkb_rk65 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 32, !dbg !9662
  %51 = load ptr, ptr %rkb_rk65, align 8, !dbg !9662, !tbaa !4139
  %rk_conf66 = getelementptr inbounds %struct.rd_kafka_s, ptr %51, i32 0, i32 18, !dbg !9662
  %debug67 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf66, i32 0, i32 13, !dbg !9662
  %52 = load i32, ptr %debug67, align 8, !dbg !9662, !tbaa !4140
  %and68 = and i32 %52, 2, !dbg !9662
  %conv69 = sext i32 %and68 to i64, !dbg !9662
  %expval70 = call i64 @llvm.expect.i64(i64 %conv69, i64 0), !dbg !9662
  %tobool71 = icmp ne i64 %expval70, 0, !dbg !9662
  br i1 %tobool71, label %if.then72, label %if.end87, !dbg !9663

if.then72:                                        ; preds = %do.body64
  br label %do.body73, !dbg !9664

do.body73:                                        ; preds = %if.then72
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname74) #16, !dbg !9665
  tail call void @llvm.dbg.declare(metadata ptr %_logname74, metadata !9546, metadata !DIExpression()), !dbg !9665
  %53 = load ptr, ptr %rkb, align 8, !dbg !9665, !tbaa !3910
  %rkb_logname_lock75 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %53, i32 0, i32 49, !dbg !9665
  %call76 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock75), !dbg !9665
  %arraydecay77 = getelementptr inbounds [256 x i8], ptr %_logname74, i64 0, i64 0, !dbg !9665
  %54 = load ptr, ptr %rkb, align 8, !dbg !9665, !tbaa !3910
  %rkb_logname78 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %54, i32 0, i32 48, !dbg !9665
  %55 = load ptr, ptr %rkb_logname78, align 8, !dbg !9665, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay77, ptr noundef %55, i64 noundef 256), !dbg !9665
  %56 = load ptr, ptr %rkb, align 8, !dbg !9665, !tbaa !3910
  %rkb_logname_lock79 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 49, !dbg !9665
  %call80 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock79), !dbg !9665
  %57 = load ptr, ptr %rkb, align 8, !dbg !9665, !tbaa !3910
  %rkb_rk81 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %57, i32 0, i32 32, !dbg !9665
  %58 = load ptr, ptr %rkb_rk81, align 8, !dbg !9665, !tbaa !4139
  %rk_conf82 = getelementptr inbounds %struct.rd_kafka_s, ptr %58, i32 0, i32 18, !dbg !9665
  %59 = load ptr, ptr %rkb, align 8, !dbg !9665, !tbaa !3910
  %rkb_rk83 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 32, !dbg !9665
  %60 = load ptr, ptr %rkb_rk83, align 8, !dbg !9665, !tbaa !4139
  %arraydecay84 = getelementptr inbounds [256 x i8], ptr %_logname74, i64 0, i64 0, !dbg !9665
  %61 = load i32, ptr %backoff, align 4, !dbg !9665, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf82, ptr noundef %60, ptr noundef %arraydecay84, i32 noundef 7, i32 noundef 2, ptr noundef @.str.234, ptr noundef @.str.235, i32 noundef %61), !dbg !9665
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname74) #16, !dbg !9664
  br label %do.cond85, !dbg !9665

do.cond85:                                        ; preds = %do.body73
  br label %do.end86, !dbg !9665

do.end86:                                         ; preds = %do.cond85
  br label %if.end87, !dbg !9664

if.end87:                                         ; preds = %do.end86, %do.body64
  br label %do.cond88, !dbg !9663

do.cond88:                                        ; preds = %if.end87
  br label %do.end89, !dbg !9663

do.end89:                                         ; preds = %do.cond88
  %62 = load ptr, ptr %rkb, align 8, !dbg !9666, !tbaa !3910
  %63 = load i32, ptr %backoff, align 4, !dbg !9667, !tbaa !3959
  call void @rd_kafka_broker_serve(ptr noundef %62, i32 noundef %63), !dbg !9668
  store i32 6, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9669, !llvm.loop !9652

if.end90:                                         ; preds = %if.end58
  %64 = load ptr, ptr %rkb, align 8, !dbg !9670, !tbaa !3910
  %call91 = call i32 @rd_kafka_broker_connect(ptr noundef %64), !dbg !9671
  store i32 %call91, ptr %r, align 4, !dbg !9672, !tbaa !3959
  %65 = load i32, ptr %r, align 4, !dbg !9673, !tbaa !3959
  %cmp92 = icmp eq i32 %65, -1, !dbg !9675
  br i1 %cmp92, label %if.then94, label %if.else99, !dbg !9676

if.then94:                                        ; preds = %if.end90
  %66 = load ptr, ptr %rkb, align 8, !dbg !9677, !tbaa !3910
  %call95 = call zeroext i8 @rd_kafka_broker_addresses_exhausted(ptr noundef %66), !dbg !9680
  %tobool96 = icmp ne i8 %call95, 0, !dbg !9680
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !9681

if.then97:                                        ; preds = %if.then94
  %67 = load ptr, ptr %rkb, align 8, !dbg !9682, !tbaa !3910
  call void @rd_kafka_broker_serve(ptr noundef %67, i32 noundef 1000), !dbg !9683
  br label %if.end98, !dbg !9683

if.end98:                                         ; preds = %if.then97, %if.then94
  br label %if.end105, !dbg !9684

if.else99:                                        ; preds = %if.end90
  %68 = load i32, ptr %r, align 4, !dbg !9685, !tbaa !3959
  %cmp100 = icmp eq i32 %68, 0, !dbg !9687
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !9688

if.then102:                                       ; preds = %if.else99
  %69 = load ptr, ptr %rkb, align 8, !dbg !9689, !tbaa !3910
  call void @rd_kafka_broker_serve(ptr noundef %69, i32 noundef 1000), !dbg !9691
  br label %if.end104, !dbg !9692

if.else103:                                       ; preds = %if.else99
  br label %if.end104

if.end104:                                        ; preds = %if.else103, %if.then102
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end98
  br label %sw.epilog, !dbg !9693

sw.bb106:                                         ; preds = %redo, %redo, %redo, %redo, %redo, %redo
  %70 = load ptr, ptr %rkb, align 8, !dbg !9694, !tbaa !3910
  call void @rd_kafka_broker_serve(ptr noundef %70, i32 noundef 1000), !dbg !9695
  %71 = load ptr, ptr %rkb, align 8, !dbg !9696, !tbaa !3910
  %rkb_state107 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %71, i32 0, i32 19, !dbg !9698
  %72 = load i32, ptr %rkb_state107, align 4, !dbg !9698, !tbaa !4130
  %cmp108 = icmp eq i32 %72, 1, !dbg !9699
  br i1 %cmp108, label %land.lhs.true, label %if.else117, !dbg !9700

land.lhs.true:                                    ; preds = %sw.bb106
  %73 = load ptr, ptr %rkb, align 8, !dbg !9701, !tbaa !3910
  %call110 = call zeroext i8 @rd_kafka_broker_addresses_exhausted(ptr noundef %73), !dbg !9702
  %conv111 = zext i8 %call110 to i32, !dbg !9702
  %tobool112 = icmp ne i32 %conv111, 0, !dbg !9702
  br i1 %tobool112, label %if.then113, label %if.else117, !dbg !9703

if.then113:                                       ; preds = %land.lhs.true
  %74 = load ptr, ptr %rkb, align 8, !dbg !9704, !tbaa !3910
  %75 = load ptr, ptr %rkb, align 8, !dbg !9705, !tbaa !3910
  %rkb_rk114 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %75, i32 0, i32 32, !dbg !9706
  %76 = load ptr, ptr %rkb_rk114, align 8, !dbg !9706, !tbaa !4139
  %rk_conf115 = getelementptr inbounds %struct.rd_kafka_s, ptr %76, i32 0, i32 18, !dbg !9707
  %call116 = call i64 @rd_clock(), !dbg !9708
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %74, ptr noundef %rk_conf115, i64 noundef %call116), !dbg !9709
  br label %if.end132, !dbg !9709

if.else117:                                       ; preds = %land.lhs.true, %sw.bb106
  %77 = load ptr, ptr %rkb, align 8, !dbg !9710, !tbaa !3910
  %rkb_state118 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %77, i32 0, i32 19, !dbg !9712
  %78 = load i32, ptr %rkb_state118, align 4, !dbg !9712, !tbaa !4130
  %79 = load i32, ptr %orig_state, align 4, !dbg !9713, !tbaa !4126
  %cmp119 = icmp eq i32 %78, %79, !dbg !9714
  br i1 %cmp119, label %land.lhs.true121, label %if.end131, !dbg !9715

land.lhs.true121:                                 ; preds = %if.else117
  %80 = load ptr, ptr %rkb, align 8, !dbg !9716, !tbaa !3910
  %rkb_reauth_in_progress = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %80, i32 0, i32 54, !dbg !9717
  %81 = load i8, ptr %rkb_reauth_in_progress, align 8, !dbg !9717, !tbaa !4559
  %tobool122 = icmp ne i8 %81, 0, !dbg !9716
  br i1 %tobool122, label %if.end131, label %land.lhs.true123, !dbg !9718

land.lhs.true123:                                 ; preds = %land.lhs.true121
  %call124 = call i64 @rd_clock(), !dbg !9719
  %82 = load ptr, ptr %rkb, align 8, !dbg !9720, !tbaa !3910
  %rkb_ts_connect = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %82, i32 0, i32 53, !dbg !9721
  %83 = load i64, ptr %rkb_ts_connect, align 8, !dbg !9721, !tbaa !9722
  %84 = load ptr, ptr %rk, align 8, !dbg !9723, !tbaa !3910
  %rk_conf125 = getelementptr inbounds %struct.rd_kafka_s, ptr %84, i32 0, i32 18, !dbg !9724
  %socket_connection_setup_timeout_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf125, i32 0, i32 30, !dbg !9725
  %85 = load i32, ptr %socket_connection_setup_timeout_ms, align 4, !dbg !9725, !tbaa !9726
  %conv126 = sext i32 %85 to i64, !dbg !9727
  %mul = mul nsw i64 %conv126, 1000, !dbg !9728
  %add = add nsw i64 %83, %mul, !dbg !9729
  %cmp127 = icmp sge i64 %call124, %add, !dbg !9730
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !9731

if.then129:                                       ; preds = %land.lhs.true123
  %86 = load ptr, ptr %rkb, align 8, !dbg !9732, !tbaa !3910
  %87 = load ptr, ptr %rkb, align 8, !dbg !9733, !tbaa !3910
  %rkb_state130 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %87, i32 0, i32 19, !dbg !9734
  %88 = load i32, ptr %rkb_state130, align 4, !dbg !9734, !tbaa !4130
  %idxprom = zext i32 %88 to i64, !dbg !9735
  %arrayidx = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom, !dbg !9735
  %89 = load ptr, ptr %arrayidx, align 8, !dbg !9735, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %86, i32 noundef 4, i32 noundef -195, ptr noundef @.str.236, ptr noundef %89), !dbg !9736
  br label %if.end131, !dbg !9736

if.end131:                                        ; preds = %if.then129, %land.lhs.true123, %land.lhs.true121, %if.else117
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then113
  br label %sw.epilog, !dbg !9737

sw.bb133:                                         ; preds = %redo
  %90 = load ptr, ptr %rkb, align 8, !dbg !9738, !tbaa !3910
  %rkb_rk134 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %90, i32 0, i32 32, !dbg !9738
  %91 = load ptr, ptr %rkb_rk134, align 8, !dbg !9738, !tbaa !4139
  %call135 = call zeroext i8 @rd_kafka_sasl_ready(ptr noundef %91), !dbg !9738
  %tobool136 = icmp ne i8 %call135, 0, !dbg !9738
  br i1 %tobool136, label %if.then137, label %if.else138, !dbg !9741

if.then137:                                       ; preds = %sw.bb133
  br label %if.end139, !dbg !9741

if.else138:                                       ; preds = %sw.bb133
  call void @__assert_fail(ptr noundef @.str.237, ptr noundef @.str.20, i32 noundef 4581, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_thread_main) #18, !dbg !9738
  unreachable, !dbg !9738

if.end139:                                        ; preds = %if.then137
  %92 = load ptr, ptr %rkb, align 8, !dbg !9742, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %92, i32 0, i32 5, !dbg !9743
  %93 = load ptr, ptr %rkb_transport, align 8, !dbg !9743, !tbaa !4518
  call void @rd_kafka_sasl_close(ptr noundef %93), !dbg !9744
  %94 = load ptr, ptr %rkb, align 8, !dbg !9745, !tbaa !3910
  %rkb_reauth_in_progress140 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %94, i32 0, i32 54, !dbg !9746
  store i8 1, ptr %rkb_reauth_in_progress140, align 8, !dbg !9747, !tbaa !4559
  %95 = load ptr, ptr %rkb, align 8, !dbg !9748, !tbaa !3910
  call void @rd_kafka_broker_connect_auth(ptr noundef %95), !dbg !9749
  br label %sw.epilog, !dbg !9750

sw.bb141:                                         ; preds = %redo, %redo
  %96 = load ptr, ptr %rkb, align 8, !dbg !9751, !tbaa !3910
  call void @rd_kafka_broker_serve(ptr noundef %96, i32 noundef 1000), !dbg !9752
  %97 = load ptr, ptr %rkb, align 8, !dbg !9753, !tbaa !3910
  %rkb_state142 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %97, i32 0, i32 19, !dbg !9755
  %98 = load i32, ptr %rkb_state142, align 4, !dbg !9755, !tbaa !4130
  %cmp143 = icmp eq i32 %98, 7, !dbg !9756
  br i1 %cmp143, label %if.then145, label %if.end150, !dbg !9757

if.then145:                                       ; preds = %sw.bb141
  %99 = load ptr, ptr %rkb, align 8, !dbg !9758, !tbaa !3910
  %rkb_lock146 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %99, i32 0, i32 9, !dbg !9758
  %call147 = call i32 @mtx_lock(ptr noundef %rkb_lock146), !dbg !9758
  %100 = load ptr, ptr %rkb, align 8, !dbg !9760, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %100, i32 noundef 6), !dbg !9761
  %101 = load ptr, ptr %rkb, align 8, !dbg !9762, !tbaa !3910
  %rkb_lock148 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %101, i32 0, i32 9, !dbg !9762
  %call149 = call i32 @mtx_unlock(ptr noundef %rkb_lock148), !dbg !9762
  br label %if.end150, !dbg !9763

if.end150:                                        ; preds = %if.then145, %sw.bb141
  br label %sw.epilog, !dbg !9764

sw.epilog:                                        ; preds = %redo, %if.end150, %if.end139, %if.end132, %if.end105, %if.then40, %if.then21
  %102 = load ptr, ptr %rkb, align 8, !dbg !9765, !tbaa !3910
  %rkb_rk151 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %102, i32 0, i32 32, !dbg !9765
  %103 = load ptr, ptr %rkb_rk151, align 8, !dbg !9765, !tbaa !4139
  %rk_terminate152 = getelementptr inbounds %struct.rd_kafka_s, ptr %103, i32 0, i32 23, !dbg !9765
  %call153 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate152), !dbg !9765
  %and154 = and i32 %call153, 1, !dbg !9765
  %tobool155 = icmp ne i32 %and154, 0, !dbg !9765
  br i1 %tobool155, label %if.then156, label %if.end199, !dbg !9766

if.then156:                                       ; preds = %sw.epilog
  %104 = load ptr, ptr %rkb, align 8, !dbg !9767, !tbaa !3910
  %105 = load ptr, ptr %rkb, align 8, !dbg !9768, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %105, i32 0, i32 35, !dbg !9769
  %call157 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %104, i32 noundef 0, ptr noundef %rkb_outbufs, ptr noundef null, i16 noundef signext -1, i32 noundef -197, i64 noundef 0, ptr noundef null, i32 noundef 0), !dbg !9770
  store i32 %call157, ptr %r, align 4, !dbg !9771, !tbaa !3959
  %106 = load ptr, ptr %rkb, align 8, !dbg !9772, !tbaa !3910
  %107 = load ptr, ptr %rkb, align 8, !dbg !9773, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %107, i32 0, i32 37, !dbg !9774
  %call158 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %106, i32 noundef 0, ptr noundef %rkb_retrybufs, ptr noundef null, i16 noundef signext -1, i32 noundef -197, i64 noundef 0, ptr noundef null, i32 noundef 0), !dbg !9775
  %108 = load i32, ptr %r, align 4, !dbg !9776, !tbaa !3959
  %add159 = add nsw i32 %108, %call158, !dbg !9776
  store i32 %add159, ptr %r, align 4, !dbg !9776, !tbaa !3959
  br label %do.body160, !dbg !9777

do.body160:                                       ; preds = %if.then156
  %109 = load ptr, ptr %rkb, align 8, !dbg !9778, !tbaa !3910
  %rkb_rk161 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %109, i32 0, i32 32, !dbg !9778
  %110 = load ptr, ptr %rkb_rk161, align 8, !dbg !9778, !tbaa !4139
  %rk_conf162 = getelementptr inbounds %struct.rd_kafka_s, ptr %110, i32 0, i32 18, !dbg !9778
  %debug163 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf162, i32 0, i32 13, !dbg !9778
  %111 = load i32, ptr %debug163, align 8, !dbg !9778, !tbaa !4140
  %and164 = and i32 %111, 2, !dbg !9778
  %conv165 = sext i32 %and164 to i64, !dbg !9778
  %expval166 = call i64 @llvm.expect.i64(i64 %conv165, i64 0), !dbg !9778
  %tobool167 = icmp ne i64 %expval166, 0, !dbg !9778
  br i1 %tobool167, label %if.then168, label %if.end196, !dbg !9779

if.then168:                                       ; preds = %do.body160
  br label %do.body169, !dbg !9780

do.body169:                                       ; preds = %if.then168
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname170) #16, !dbg !9781
  tail call void @llvm.dbg.declare(metadata ptr %_logname170, metadata !9554, metadata !DIExpression()), !dbg !9781
  %112 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_logname_lock171 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %112, i32 0, i32 49, !dbg !9781
  %call172 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock171), !dbg !9781
  %arraydecay173 = getelementptr inbounds [256 x i8], ptr %_logname170, i64 0, i64 0, !dbg !9781
  %113 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_logname174 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %113, i32 0, i32 48, !dbg !9781
  %114 = load ptr, ptr %rkb_logname174, align 8, !dbg !9781, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay173, ptr noundef %114, i64 noundef 256), !dbg !9781
  %115 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_logname_lock175 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %115, i32 0, i32 49, !dbg !9781
  %call176 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock175), !dbg !9781
  %116 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_rk177 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %116, i32 0, i32 32, !dbg !9781
  %117 = load ptr, ptr %rkb_rk177, align 8, !dbg !9781, !tbaa !4139
  %rk_conf178 = getelementptr inbounds %struct.rd_kafka_s, ptr %117, i32 0, i32 18, !dbg !9781
  %118 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_rk179 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %118, i32 0, i32 32, !dbg !9781
  %119 = load ptr, ptr %rkb_rk179, align 8, !dbg !9781, !tbaa !4139
  %arraydecay180 = getelementptr inbounds [256 x i8], ptr %_logname170, i64 0, i64 0, !dbg !9781
  %120 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_state181 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %120, i32 0, i32 19, !dbg !9781
  %121 = load i32, ptr %rkb_state181, align 4, !dbg !9781, !tbaa !4130
  %idxprom182 = zext i32 %121 to i64, !dbg !9781
  %arrayidx183 = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom182, !dbg !9781
  %122 = load ptr, ptr %arrayidx183, align 8, !dbg !9781, !tbaa !3910
  %123 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_refcnt184 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %123, i32 0, i32 31, !dbg !9781
  %call185 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt184), !dbg !9781
  %124 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_refcnt186 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %124, i32 0, i32 31, !dbg !9781
  %125 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_toppar_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %125, i32 0, i32 12, !dbg !9781
  %126 = load i32, ptr %rkb_toppar_cnt, align 8, !dbg !9781, !tbaa !4629
  %127 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_active_toppar_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %127, i32 0, i32 14, !dbg !9781
  %128 = load i32, ptr %rkb_active_toppar_cnt, align 8, !dbg !9781, !tbaa !9782
  %129 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_outbufs187 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %129, i32 0, i32 35, !dbg !9781
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs187, i32 0, i32 1, !dbg !9781
  %call188 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !9781
  %130 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %130, i32 0, i32 36, !dbg !9781
  %rkbq_cnt189 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_waitresps, i32 0, i32 1, !dbg !9781
  %call190 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt189), !dbg !9781
  %131 = load ptr, ptr %rkb, align 8, !dbg !9781, !tbaa !3910
  %rkb_retrybufs191 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %131, i32 0, i32 37, !dbg !9781
  %rkbq_cnt192 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_retrybufs191, i32 0, i32 1, !dbg !9781
  %call193 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt192), !dbg !9781
  %132 = load i32, ptr %r, align 4, !dbg !9781, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf178, ptr noundef %119, ptr noundef %arraydecay180, i32 noundef 7, i32 noundef 2, ptr noundef @.str.238, ptr noundef @.str.239, ptr noundef %122, i32 noundef %call185, ptr noundef %rkb_refcnt186, i32 noundef %126, i32 noundef %128, i32 noundef %call188, i32 noundef %call190, i32 noundef %call193, i32 noundef %132), !dbg !9781
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname170) #16, !dbg !9780
  br label %do.cond194, !dbg !9781

do.cond194:                                       ; preds = %do.body169
  br label %do.end195, !dbg !9781

do.end195:                                        ; preds = %do.cond194
  br label %if.end196, !dbg !9780

if.end196:                                        ; preds = %do.end195, %do.body160
  br label %do.cond197, !dbg !9779

do.cond197:                                       ; preds = %if.end196
  br label %do.end198, !dbg !9779

do.end198:                                        ; preds = %do.cond197
  br label %if.end199, !dbg !9783

if.end199:                                        ; preds = %do.end198, %sw.epilog
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9653
  br label %cleanup, !dbg !9653

cleanup:                                          ; preds = %if.end199, %do.end89, %if.then57
  call void @llvm.lifetime.end.p0(i64 4, ptr %orig_state) #16, !dbg !9653
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !9653
  call void @llvm.lifetime.end.p0(i64 4, ptr %backoff) #16, !dbg !9653
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 6, label %while.cond
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !9585, !llvm.loop !9652

while.end:                                        ; preds = %while.cond
  %133 = load ptr, ptr %rkb, align 8, !dbg !9784, !tbaa !3910
  %rkb_source202 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %133, i32 0, i32 27, !dbg !9786
  %134 = load i32, ptr %rkb_source202, align 8, !dbg !9786, !tbaa !4174
  %cmp203 = icmp ne i32 %134, 2, !dbg !9787
  br i1 %cmp203, label %if.then205, label %if.end244, !dbg !9788

if.then205:                                       ; preds = %while.end
  %135 = load ptr, ptr %rkb, align 8, !dbg !9789, !tbaa !3910
  %rkb_rk206 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %135, i32 0, i32 32, !dbg !9789
  %136 = load ptr, ptr %rkb_rk206, align 8, !dbg !9789, !tbaa !4139
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %136, i32 0, i32 24, !dbg !9789
  %call207 = call i32 @rwlock_wrlock(ptr noundef %rk_lock), !dbg !9789
  br label %do.body208, !dbg !9791

do.body208:                                       ; preds = %if.then205
  %137 = load ptr, ptr %rkb, align 8, !dbg !9792, !tbaa !3910
  %rkb_link = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %137, i32 0, i32 0, !dbg !9792
  %tqe_next = getelementptr inbounds %struct.anon, ptr %rkb_link, i32 0, i32 0, !dbg !9792
  %138 = load ptr, ptr %tqe_next, align 8, !dbg !9792, !tbaa !5799
  %cmp209 = icmp ne ptr %138, null, !dbg !9792
  br i1 %cmp209, label %if.then211, label %if.else217, !dbg !9795

if.then211:                                       ; preds = %do.body208
  %139 = load ptr, ptr %rkb, align 8, !dbg !9792, !tbaa !3910
  %rkb_link212 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %139, i32 0, i32 0, !dbg !9792
  %tqe_prev = getelementptr inbounds %struct.anon, ptr %rkb_link212, i32 0, i32 1, !dbg !9792
  %140 = load ptr, ptr %tqe_prev, align 8, !dbg !9792, !tbaa !9227
  %141 = load ptr, ptr %rkb, align 8, !dbg !9792, !tbaa !3910
  %rkb_link213 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %141, i32 0, i32 0, !dbg !9792
  %tqe_next214 = getelementptr inbounds %struct.anon, ptr %rkb_link213, i32 0, i32 0, !dbg !9792
  %142 = load ptr, ptr %tqe_next214, align 8, !dbg !9792, !tbaa !5799
  %rkb_link215 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %142, i32 0, i32 0, !dbg !9792
  %tqe_prev216 = getelementptr inbounds %struct.anon, ptr %rkb_link215, i32 0, i32 1, !dbg !9792
  store ptr %140, ptr %tqe_prev216, align 8, !dbg !9792, !tbaa !9227
  br label %if.end221, !dbg !9792

if.else217:                                       ; preds = %do.body208
  %143 = load ptr, ptr %rkb, align 8, !dbg !9792, !tbaa !3910
  %rkb_link218 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %143, i32 0, i32 0, !dbg !9792
  %tqe_prev219 = getelementptr inbounds %struct.anon, ptr %rkb_link218, i32 0, i32 1, !dbg !9792
  %144 = load ptr, ptr %tqe_prev219, align 8, !dbg !9792, !tbaa !9227
  %145 = load ptr, ptr %rkb, align 8, !dbg !9792, !tbaa !3910
  %rkb_rk220 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %145, i32 0, i32 32, !dbg !9792
  %146 = load ptr, ptr %rkb_rk220, align 8, !dbg !9792, !tbaa !4139
  %rk_brokers = getelementptr inbounds %struct.rd_kafka_s, ptr %146, i32 0, i32 2, !dbg !9792
  %tqh_last = getelementptr inbounds %struct.anon.12, ptr %rk_brokers, i32 0, i32 1, !dbg !9792
  store ptr %144, ptr %tqh_last, align 8, !dbg !9792, !tbaa !9228
  br label %if.end221

if.end221:                                        ; preds = %if.else217, %if.then211
  %147 = load ptr, ptr %rkb, align 8, !dbg !9795, !tbaa !3910
  %rkb_link222 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %147, i32 0, i32 0, !dbg !9795
  %tqe_next223 = getelementptr inbounds %struct.anon, ptr %rkb_link222, i32 0, i32 0, !dbg !9795
  %148 = load ptr, ptr %tqe_next223, align 8, !dbg !9795, !tbaa !5799
  %149 = load ptr, ptr %rkb, align 8, !dbg !9795, !tbaa !3910
  %rkb_link224 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %149, i32 0, i32 0, !dbg !9795
  %tqe_prev225 = getelementptr inbounds %struct.anon, ptr %rkb_link224, i32 0, i32 1, !dbg !9795
  %150 = load ptr, ptr %tqe_prev225, align 8, !dbg !9795, !tbaa !9227
  store ptr %148, ptr %150, align 8, !dbg !9795, !tbaa !3910
  br label %do.cond226, !dbg !9795

do.cond226:                                       ; preds = %if.end221
  br label %do.end227, !dbg !9795

do.end227:                                        ; preds = %do.cond226
  %151 = load ptr, ptr %rkb, align 8, !dbg !9796, !tbaa !3910
  %rkb_nodeid228 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %151, i32 0, i32 1, !dbg !9798
  %152 = load i32, ptr %rkb_nodeid228, align 8, !dbg !9798, !tbaa !4311
  %cmp229 = icmp ne i32 %152, -1, !dbg !9799
  br i1 %cmp229, label %land.lhs.true231, label %if.end238, !dbg !9800

land.lhs.true231:                                 ; preds = %do.end227
  %153 = load ptr, ptr %rkb, align 8, !dbg !9801, !tbaa !3910
  %rkb_source232 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %153, i32 0, i32 27, !dbg !9801
  %154 = load i32, ptr %rkb_source232, align 8, !dbg !9801, !tbaa !4174
  %cmp233 = icmp eq i32 %154, 3, !dbg !9801
  br i1 %cmp233, label %if.end238, label %if.then235, !dbg !9802

if.then235:                                       ; preds = %land.lhs.true231
  %155 = load ptr, ptr %rkb, align 8, !dbg !9803, !tbaa !3910
  %rkb_rk236 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %155, i32 0, i32 32, !dbg !9804
  %156 = load ptr, ptr %rkb_rk236, align 8, !dbg !9804, !tbaa !4139
  %rk_broker_by_id = getelementptr inbounds %struct.rd_kafka_s, ptr %156, i32 0, i32 3, !dbg !9805
  %157 = load ptr, ptr %rkb, align 8, !dbg !9806, !tbaa !3910
  %call237 = call ptr @rd_list_remove(ptr noundef %rk_broker_by_id, ptr noundef %157), !dbg !9807
  br label %if.end238, !dbg !9807

if.end238:                                        ; preds = %if.then235, %land.lhs.true231, %do.end227
  %158 = load ptr, ptr %rkb, align 8, !dbg !9808, !tbaa !3910
  %rkb_rk239 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %158, i32 0, i32 32, !dbg !9809
  %159 = load ptr, ptr %rkb_rk239, align 8, !dbg !9809, !tbaa !4139
  %rk_broker_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %159, i32 0, i32 4, !dbg !9810
  %call240 = call i32 @rd_atomic32_sub(ptr noundef %rk_broker_cnt, i32 noundef 1), !dbg !9811
  %160 = load ptr, ptr %rkb, align 8, !dbg !9812, !tbaa !3910
  %rkb_rk241 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %160, i32 0, i32 32, !dbg !9812
  %161 = load ptr, ptr %rkb_rk241, align 8, !dbg !9812, !tbaa !4139
  %rk_lock242 = getelementptr inbounds %struct.rd_kafka_s, ptr %161, i32 0, i32 24, !dbg !9812
  %call243 = call i32 @rwlock_wrunlock(ptr noundef %rk_lock242), !dbg !9812
  br label %if.end244, !dbg !9813

if.end244:                                        ; preds = %if.end238, %while.end
  %162 = load ptr, ptr %rkb, align 8, !dbg !9814, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %162, i32 noundef 7, i32 noundef -197, ptr noundef @.str.240), !dbg !9815
  %163 = load ptr, ptr %rkb, align 8, !dbg !9816, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %163, i32 0, i32 8, !dbg !9816
  %164 = load ptr, ptr %rkb_ops, align 8, !dbg !9816, !tbaa !5475
  call void @rd_kafka_q_disable0(ptr noundef %164, i32 noundef 1), !dbg !9816
  br label %while.cond245, !dbg !9817

while.cond245:                                    ; preds = %while.body248, %if.end244
  %165 = load ptr, ptr %rkb, align 8, !dbg !9818, !tbaa !3910
  %call246 = call i32 @rd_kafka_broker_ops_serve(ptr noundef %165, i64 noundef 0), !dbg !9819
  %tobool247 = icmp ne i32 %call246, 0, !dbg !9817
  br i1 %tobool247, label %while.body248, label %while.end249, !dbg !9817

while.body248:                                    ; preds = %while.cond245
  br label %while.cond245, !dbg !9817, !llvm.loop !9820

while.end249:                                     ; preds = %while.cond245
  br label %do.body250, !dbg !9822

do.body250:                                       ; preds = %while.end249
  %166 = load ptr, ptr %rkb, align 8, !dbg !9823, !tbaa !3910
  %rkb_refcnt251 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %166, i32 0, i32 31, !dbg !9823
  %call252 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt251), !dbg !9823
  %cmp253 = icmp sgt i32 %call252, 0, !dbg !9823
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !9826

if.then255:                                       ; preds = %do.body250
  br label %do.end258, !dbg !9823

if.end256:                                        ; preds = %do.body250
  %167 = load ptr, ptr %rkb, align 8, !dbg !9826, !tbaa !3910
  call void @rd_kafka_broker_destroy_final(ptr noundef %167), !dbg !9826
  br label %do.cond257, !dbg !9826

do.cond257:                                       ; preds = %if.end256
  br label %do.end258, !dbg !9826

do.end258:                                        ; preds = %do.cond257, %if.then255
  %168 = load ptr, ptr %rk, align 8, !dbg !9827, !tbaa !3910
  call void @rd_kafka_interceptors_on_thread_exit(ptr noundef %168, i32 noundef 2), !dbg !9828
  %call259 = call i32 @rd_atomic32_sub(ptr noundef @rd_kafka_thread_cnt_curr, i32 noundef 1), !dbg !9829
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %rk) #16, !dbg !9830
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !9830
  ret i32 0, !dbg !9831

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !9832 void @rd_kafka_sasl_broker_init(ptr noundef) #3

declare !dbg !9833 void @rd_list_sort(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_cmp_by_id(ptr noundef %_a, ptr noundef %_b) #0 !dbg !9836 {
entry:
  %_a.addr = alloca ptr, align 8
  %_b.addr = alloca ptr, align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  store ptr %_a, ptr %_a.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %_a.addr, metadata !9838, metadata !DIExpression()), !dbg !9844
  store ptr %_b, ptr %_b.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %_b.addr, metadata !9839, metadata !DIExpression()), !dbg !9845
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #16, !dbg !9846
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !9840, metadata !DIExpression()), !dbg !9847
  %0 = load ptr, ptr %_a.addr, align 8, !dbg !9848, !tbaa !3910
  store ptr %0, ptr %a, align 8, !dbg !9847, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #16, !dbg !9846
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !9843, metadata !DIExpression()), !dbg !9849
  %1 = load ptr, ptr %_b.addr, align 8, !dbg !9850, !tbaa !3910
  store ptr %1, ptr %b, align 8, !dbg !9849, !tbaa !3910
  %2 = load ptr, ptr %a, align 8, !dbg !9851, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 1, !dbg !9851
  %3 = load i32, ptr %rkb_nodeid, align 8, !dbg !9851, !tbaa !4311
  %4 = load ptr, ptr %b, align 8, !dbg !9851, !tbaa !3910
  %rkb_nodeid1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 1, !dbg !9851
  %5 = load i32, ptr %rkb_nodeid1, align 8, !dbg !9851, !tbaa !4311
  %cmp = icmp slt i32 %3, %5, !dbg !9851
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9851

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9851

cond.false:                                       ; preds = %entry
  %6 = load ptr, ptr %a, align 8, !dbg !9851, !tbaa !3910
  %rkb_nodeid2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 1, !dbg !9851
  %7 = load i32, ptr %rkb_nodeid2, align 8, !dbg !9851, !tbaa !4311
  %8 = load ptr, ptr %b, align 8, !dbg !9851, !tbaa !3910
  %rkb_nodeid3 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 1, !dbg !9851
  %9 = load i32, ptr %rkb_nodeid3, align 8, !dbg !9851, !tbaa !4311
  %cmp4 = icmp sgt i32 %7, %9, !dbg !9851
  %conv = zext i1 %cmp4 to i32, !dbg !9851
  br label %cond.end, !dbg !9851

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !9851
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #16, !dbg !9852
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #16, !dbg !9852
  ret i32 %cond, !dbg !9853
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_monitor_add(ptr noundef %rkbmon, ptr noundef %rkb, ptr noundef %rkq, ptr noundef %callback) #0 !dbg !9854 {
entry:
  %rkbmon.addr = alloca ptr, align 8
  %rkb.addr = alloca ptr, align 8
  %rkq.addr = alloca ptr, align 8
  %callback.addr = alloca ptr, align 8
  store ptr %rkbmon, ptr %rkbmon.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbmon.addr, metadata !9858, metadata !DIExpression()), !dbg !9862
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !9859, metadata !DIExpression()), !dbg !9863
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !9860, metadata !DIExpression()), !dbg !9864
  store ptr %callback, ptr %callback.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %callback.addr, metadata !9861, metadata !DIExpression()), !dbg !9865
  %0 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9866, !tbaa !3910
  %rkbmon_rkb = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %0, i32 0, i32 1, !dbg !9866
  %1 = load ptr, ptr %rkbmon_rkb, align 8, !dbg !9866, !tbaa !9869
  %tobool = icmp ne ptr %1, null, !dbg !9866
  br i1 %tobool, label %if.else, label %if.then, !dbg !9870

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !9870

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.96, ptr noundef @.str.20, i32 noundef 5917, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_monitor_add) #18, !dbg !9866
  unreachable, !dbg !9866

if.end:                                           ; preds = %if.then
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !9871, !tbaa !3910
  %3 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9872, !tbaa !3910
  %rkbmon_rkb1 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %3, i32 0, i32 1, !dbg !9873
  store ptr %2, ptr %rkbmon_rkb1, align 8, !dbg !9874, !tbaa !9869
  %4 = load ptr, ptr %rkq.addr, align 8, !dbg !9875, !tbaa !3910
  %5 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9876, !tbaa !3910
  %rkbmon_q = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %5, i32 0, i32 2, !dbg !9877
  store ptr %4, ptr %rkbmon_q, align 8, !dbg !9878, !tbaa !4425
  %6 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9879, !tbaa !3910
  %rkbmon_q2 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %6, i32 0, i32 2, !dbg !9880
  %7 = load ptr, ptr %rkbmon_q2, align 8, !dbg !9880, !tbaa !4425
  %call = call ptr @rd_kafka_q_keep(ptr noundef %7), !dbg !9881
  %8 = load ptr, ptr %callback.addr, align 8, !dbg !9882, !tbaa !3910
  %9 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9883, !tbaa !3910
  %rkbmon_cb = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %9, i32 0, i32 3, !dbg !9884
  store ptr %8, ptr %rkbmon_cb, align 8, !dbg !9885, !tbaa !4418
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !9886, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 31, !dbg !9886
  %call3 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !9886
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !9887, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 9, !dbg !9887
  %call4 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !9887
  br label %do.body, !dbg !9888

do.body:                                          ; preds = %if.end
  %12 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9889, !tbaa !3910
  %rkbmon_link = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %12, i32 0, i32 0, !dbg !9889
  %tqe_next = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link, i32 0, i32 0, !dbg !9889
  store ptr null, ptr %tqe_next, align 8, !dbg !9889, !tbaa !4430
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !9889, !tbaa !3910
  %rkb_monitors = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 56, !dbg !9889
  %tqh_last = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors, i32 0, i32 1, !dbg !9889
  %14 = load ptr, ptr %tqh_last, align 8, !dbg !9889, !tbaa !9040
  %15 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9889, !tbaa !3910
  %rkbmon_link5 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %15, i32 0, i32 0, !dbg !9889
  %tqe_prev = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link5, i32 0, i32 1, !dbg !9889
  store ptr %14, ptr %tqe_prev, align 8, !dbg !9889, !tbaa !9891
  %16 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9889, !tbaa !3910
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !9889, !tbaa !3910
  %rkb_monitors6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 56, !dbg !9889
  %tqh_last7 = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors6, i32 0, i32 1, !dbg !9889
  %18 = load ptr, ptr %tqh_last7, align 8, !dbg !9889, !tbaa !9040
  store ptr %16, ptr %18, align 8, !dbg !9889, !tbaa !3910
  %19 = load ptr, ptr %rkbmon.addr, align 8, !dbg !9889, !tbaa !3910
  %rkbmon_link8 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %19, i32 0, i32 0, !dbg !9889
  %tqe_next9 = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link8, i32 0, i32 0, !dbg !9889
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !9889, !tbaa !3910
  %rkb_monitors10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 56, !dbg !9889
  %tqh_last11 = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors10, i32 0, i32 1, !dbg !9889
  store ptr %tqe_next9, ptr %tqh_last11, align 8, !dbg !9889, !tbaa !9040
  br label %do.end, !dbg !9889

do.end:                                           ; preds = %do.body
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !9892, !tbaa !3910
  %rkb_lock12 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 9, !dbg !9892
  %call13 = call i32 @mtx_unlock(ptr noundef %rkb_lock12), !dbg !9892
  ret void, !dbg !9893
}

declare void @rd_kafka_coord_rkb_monitor_cb(ptr noundef) #3

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_add_logical(ptr noundef %rk, ptr noundef %name) #0 !dbg !9894 {
entry:
  %rk.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !9898, metadata !DIExpression()), !dbg !9901
  store ptr %name, ptr %name.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !9899, metadata !DIExpression()), !dbg !9902
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !9903
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !9900, metadata !DIExpression()), !dbg !9904
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !9905, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 24, !dbg !9905
  %call = call i32 @rwlock_wrlock(ptr noundef %rk_lock), !dbg !9905
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !9906, !tbaa !3910
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !9907, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 18, !dbg !9908
  %security_protocol = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 38, !dbg !9909
  %3 = load i32, ptr %security_protocol, align 8, !dbg !9909, !tbaa !4852
  %4 = load ptr, ptr %name.addr, align 8, !dbg !9910, !tbaa !3910
  %call1 = call ptr @rd_kafka_broker_add(ptr noundef %1, i32 noundef 3, i32 noundef %3, ptr noundef %4, i16 noundef zeroext 0, i32 noundef -1), !dbg !9911
  store ptr %call1, ptr %rkb, align 8, !dbg !9912, !tbaa !3910
  %5 = load ptr, ptr %rkb, align 8, !dbg !9913, !tbaa !3910
  %tobool = icmp ne ptr %5, null, !dbg !9913
  br i1 %tobool, label %if.then, label %if.else, !dbg !9916

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !9916

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.69, ptr noundef @.str.20, i32 noundef 4979, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_add_logical) #18, !dbg !9913
  unreachable, !dbg !9913

if.end:                                           ; preds = %if.then
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !9917, !tbaa !3910
  %rk_lock2 = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 24, !dbg !9917
  %call3 = call i32 @rwlock_wrunlock(ptr noundef %rk_lock2), !dbg !9917
  %7 = load ptr, ptr %rk.addr, align 8, !dbg !9918, !tbaa !3910
  %rk_broker_addrless_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 8, !dbg !9919
  %call4 = call i32 @rd_atomic32_add(ptr noundef %rk_broker_addrless_cnt, i32 noundef 1), !dbg !9920
  br label %do.body, !dbg !9921

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !9922

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !9922

do.end:                                           ; preds = %do.cond
  %8 = load ptr, ptr %rkb, align 8, !dbg !9924, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 31, !dbg !9924
  %call5 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !9924
  %9 = load ptr, ptr %rkb, align 8, !dbg !9925, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !9926
  ret ptr %9, !dbg !9927
}

declare !dbg !9928 i32 @rwlock_wrlock(ptr noundef) #3

declare !dbg !9929 i32 @rwlock_wrunlock(ptr noundef) #3

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_set_nodename(ptr noundef %rkb, ptr noundef %from_rkb) #0 !dbg !9930 {
entry:
  %rkb.addr = alloca ptr, align 8
  %from_rkb.addr = alloca ptr, align 8
  %nodename = alloca [256 x i8], align 16
  %brokername = alloca [256 x i8], align 16
  %nodeid = alloca i32, align 4
  %changed = alloca i8, align 1
  %_logname = alloca [256 x i8], align 16
  %_logname55 = alloca [256 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !9934, metadata !DIExpression()), !dbg !9954
  store ptr %from_rkb, ptr %from_rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %from_rkb.addr, metadata !9935, metadata !DIExpression()), !dbg !9955
  call void @llvm.lifetime.start.p0(i64 256, ptr %nodename) #16, !dbg !9956
  tail call void @llvm.dbg.declare(metadata ptr %nodename, metadata !9936, metadata !DIExpression()), !dbg !9957
  call void @llvm.lifetime.start.p0(i64 256, ptr %brokername) #16, !dbg !9958
  tail call void @llvm.dbg.declare(metadata ptr %brokername, metadata !9937, metadata !DIExpression()), !dbg !9959
  call void @llvm.lifetime.start.p0(i64 4, ptr %nodeid) #16, !dbg !9960
  tail call void @llvm.dbg.declare(metadata ptr %nodeid, metadata !9938, metadata !DIExpression()), !dbg !9961
  call void @llvm.lifetime.start.p0(i64 1, ptr %changed) #16, !dbg !9962
  tail call void @llvm.dbg.declare(metadata ptr %changed, metadata !9939, metadata !DIExpression()), !dbg !9963
  store i8 0, ptr %changed, align 1, !dbg !9963, !tbaa !4126
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !9964, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 27, !dbg !9964
  %1 = load i32, ptr %rkb_source, align 8, !dbg !9964, !tbaa !4174
  %cmp = icmp eq i32 %1, 3, !dbg !9964
  br i1 %cmp, label %if.then, label %if.else, !dbg !9967

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !9967

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.70, ptr noundef @.str.20, i32 noundef 5015, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_set_nodename) #18, !dbg !9964
  unreachable, !dbg !9964

if.end:                                           ; preds = %if.then
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !9968, !tbaa !3910
  %3 = load ptr, ptr %from_rkb.addr, align 8, !dbg !9968, !tbaa !3910
  %cmp1 = icmp ne ptr %2, %3, !dbg !9968
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !9971

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !9971

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(ptr noundef @.str.71, ptr noundef @.str.20, i32 noundef 5017, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_set_nodename) #18, !dbg !9968
  unreachable, !dbg !9968

if.end4:                                          ; preds = %if.then2
  %4 = load ptr, ptr %from_rkb.addr, align 8, !dbg !9972, !tbaa !3910
  %tobool = icmp ne ptr %4, null, !dbg !9972
  br i1 %tobool, label %if.then5, label %if.else9, !dbg !9974

if.then5:                                         ; preds = %if.end4
  %5 = load ptr, ptr %from_rkb.addr, align 8, !dbg !9975, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 9, !dbg !9975
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !9975
  %arraydecay = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !9977
  %6 = load ptr, ptr %from_rkb.addr, align 8, !dbg !9978, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 43, !dbg !9979
  %arraydecay6 = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !9978
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %arraydecay6, i64 noundef 256), !dbg !9980
  %7 = load ptr, ptr %from_rkb.addr, align 8, !dbg !9981, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 1, !dbg !9982
  %8 = load i32, ptr %rkb_nodeid, align 8, !dbg !9982, !tbaa !4311
  store i32 %8, ptr %nodeid, align 4, !dbg !9983, !tbaa !3959
  %9 = load ptr, ptr %from_rkb.addr, align 8, !dbg !9984, !tbaa !3910
  %rkb_lock7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 9, !dbg !9984
  %call8 = call i32 @mtx_unlock(ptr noundef %rkb_lock7), !dbg !9984
  br label %if.end11, !dbg !9985

if.else9:                                         ; preds = %if.end4
  %arraydecay10 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !9986
  store i8 0, ptr %arraydecay10, align 16, !dbg !9988, !tbaa !4126
  store i32 -1, ptr %nodeid, align 4, !dbg !9989, !tbaa !3959
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.then5
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !9990, !tbaa !3910
  %rkb_lock12 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 9, !dbg !9990
  %call13 = call i32 @mtx_lock(ptr noundef %rkb_lock12), !dbg !9990
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !9991, !tbaa !3910
  %rkb_nodename14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 43, !dbg !9992
  %arraydecay15 = getelementptr inbounds [256 x i8], ptr %rkb_nodename14, i64 0, i64 0, !dbg !9991
  %arraydecay16 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !9993
  %call17 = call i32 @strcmp(ptr noundef %arraydecay15, ptr noundef %arraydecay16) #19, !dbg !9994
  %tobool18 = icmp ne i32 %call17, 0, !dbg !9994
  br i1 %tobool18, label %if.then19, label %if.end40, !dbg !9995

if.then19:                                        ; preds = %if.end11
  br label %do.body, !dbg !9996

do.body:                                          ; preds = %if.then19
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !9997, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 32, !dbg !9997
  %13 = load ptr, ptr %rkb_rk, align 8, !dbg !9997, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !9997
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !9997
  %14 = load i32, ptr %debug, align 8, !dbg !9997, !tbaa !4140
  %and = and i32 %14, 2, !dbg !9997
  %conv = sext i32 %and to i64, !dbg !9997
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9997
  %tobool20 = icmp ne i64 %expval, 0, !dbg !9997
  br i1 %tobool20, label %if.then21, label %if.end34, !dbg !9998

if.then21:                                        ; preds = %do.body
  br label %do.body22, !dbg !9999

do.body22:                                        ; preds = %if.then21
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !10000
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !9940, metadata !DIExpression()), !dbg !10000
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !10000, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 49, !dbg !10000
  %call23 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !10000
  %arraydecay24 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !10000
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !10000, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 48, !dbg !10000
  %17 = load ptr, ptr %rkb_logname, align 8, !dbg !10000, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay24, ptr noundef %17, i64 noundef 256), !dbg !10000
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !10000, !tbaa !3910
  %rkb_logname_lock25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 49, !dbg !10000
  %call26 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock25), !dbg !10000
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !10000, !tbaa !3910
  %rkb_rk27 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 32, !dbg !10000
  %20 = load ptr, ptr %rkb_rk27, align 8, !dbg !10000, !tbaa !4139
  %rk_conf28 = getelementptr inbounds %struct.rd_kafka_s, ptr %20, i32 0, i32 18, !dbg !10000
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !10000, !tbaa !3910
  %rkb_rk29 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 32, !dbg !10000
  %22 = load ptr, ptr %rkb_rk29, align 8, !dbg !10000, !tbaa !4139
  %arraydecay30 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !10000
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !10000, !tbaa !3910
  %rkb_nodename31 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 43, !dbg !10000
  %arraydecay32 = getelementptr inbounds [256 x i8], ptr %rkb_nodename31, i64 0, i64 0, !dbg !10000
  %arraydecay33 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !10000
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf28, ptr noundef %22, ptr noundef %arraydecay30, i32 noundef 7, i32 noundef 2, ptr noundef @.str.72, ptr noundef @.str.73, ptr noundef %arraydecay32, ptr noundef %arraydecay33), !dbg !10000
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !9999
  br label %do.cond, !dbg !10000

do.cond:                                          ; preds = %do.body22
  br label %do.end, !dbg !10000

do.end:                                           ; preds = %do.cond
  br label %if.end34, !dbg !9999

if.end34:                                         ; preds = %do.end, %do.body
  br label %do.cond35, !dbg !9998

do.cond35:                                        ; preds = %if.end34
  br label %do.end36, !dbg !9998

do.end36:                                         ; preds = %do.cond35
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !10001, !tbaa !3910
  %rkb_nodename37 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 43, !dbg !10002
  %arraydecay38 = getelementptr inbounds [256 x i8], ptr %rkb_nodename37, i64 0, i64 0, !dbg !10001
  %arraydecay39 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !10003
  call void @rd_strlcpy(ptr noundef %arraydecay38, ptr noundef %arraydecay39, i64 noundef 256), !dbg !10004
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !10005, !tbaa !3910
  %rkb_nodename_epoch = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 46, !dbg !10006
  %26 = load i32, ptr %rkb_nodename_epoch, align 8, !dbg !10007, !tbaa !10008
  %inc = add nsw i32 %26, 1, !dbg !10007
  store i32 %inc, ptr %rkb_nodename_epoch, align 8, !dbg !10007, !tbaa !10008
  store i8 1, ptr %changed, align 1, !dbg !10009, !tbaa !4126
  br label %if.end40, !dbg !10010

if.end40:                                         ; preds = %do.end36, %if.end11
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !10011, !tbaa !3910
  %rkb_nodeid41 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 1, !dbg !10012
  %28 = load i32, ptr %rkb_nodeid41, align 8, !dbg !10012, !tbaa !4311
  %29 = load i32, ptr %nodeid, align 4, !dbg !10013, !tbaa !3959
  %cmp42 = icmp ne i32 %28, %29, !dbg !10014
  br i1 %cmp42, label %if.then44, label %if.end73, !dbg !10015

if.then44:                                        ; preds = %if.end40
  br label %do.body45, !dbg !10016

do.body45:                                        ; preds = %if.then44
  %30 = load ptr, ptr %rkb.addr, align 8, !dbg !10017, !tbaa !3910
  %rkb_rk46 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %30, i32 0, i32 32, !dbg !10017
  %31 = load ptr, ptr %rkb_rk46, align 8, !dbg !10017, !tbaa !4139
  %rk_conf47 = getelementptr inbounds %struct.rd_kafka_s, ptr %31, i32 0, i32 18, !dbg !10017
  %debug48 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf47, i32 0, i32 13, !dbg !10017
  %32 = load i32, ptr %debug48, align 8, !dbg !10017, !tbaa !4140
  %and49 = and i32 %32, 2, !dbg !10017
  %conv50 = sext i32 %and49 to i64, !dbg !10017
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 0), !dbg !10017
  %tobool52 = icmp ne i64 %expval51, 0, !dbg !10017
  br i1 %tobool52, label %if.then53, label %if.end69, !dbg !10018

if.then53:                                        ; preds = %do.body45
  br label %do.body54, !dbg !10019

do.body54:                                        ; preds = %if.then53
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname55) #16, !dbg !10020
  tail call void @llvm.dbg.declare(metadata ptr %_logname55, metadata !9947, metadata !DIExpression()), !dbg !10020
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !10020, !tbaa !3910
  %rkb_logname_lock56 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 49, !dbg !10020
  %call57 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock56), !dbg !10020
  %arraydecay58 = getelementptr inbounds [256 x i8], ptr %_logname55, i64 0, i64 0, !dbg !10020
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !10020, !tbaa !3910
  %rkb_logname59 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 48, !dbg !10020
  %35 = load ptr, ptr %rkb_logname59, align 8, !dbg !10020, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay58, ptr noundef %35, i64 noundef 256), !dbg !10020
  %36 = load ptr, ptr %rkb.addr, align 8, !dbg !10020, !tbaa !3910
  %rkb_logname_lock60 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 49, !dbg !10020
  %call61 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock60), !dbg !10020
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !10020, !tbaa !3910
  %rkb_rk62 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 32, !dbg !10020
  %38 = load ptr, ptr %rkb_rk62, align 8, !dbg !10020, !tbaa !4139
  %rk_conf63 = getelementptr inbounds %struct.rd_kafka_s, ptr %38, i32 0, i32 18, !dbg !10020
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !10020, !tbaa !3910
  %rkb_rk64 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 32, !dbg !10020
  %40 = load ptr, ptr %rkb_rk64, align 8, !dbg !10020, !tbaa !4139
  %arraydecay65 = getelementptr inbounds [256 x i8], ptr %_logname55, i64 0, i64 0, !dbg !10020
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !10020, !tbaa !3910
  %rkb_nodeid66 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 1, !dbg !10020
  %42 = load i32, ptr %rkb_nodeid66, align 8, !dbg !10020, !tbaa !4311
  %43 = load i32, ptr %nodeid, align 4, !dbg !10020, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf63, ptr noundef %40, ptr noundef %arraydecay65, i32 noundef 7, i32 noundef 2, ptr noundef @.str.74, ptr noundef @.str.75, i32 noundef %42, i32 noundef %43), !dbg !10020
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname55) #16, !dbg !10019
  br label %do.cond67, !dbg !10020

do.cond67:                                        ; preds = %do.body54
  br label %do.end68, !dbg !10020

do.end68:                                         ; preds = %do.cond67
  br label %if.end69, !dbg !10019

if.end69:                                         ; preds = %do.end68, %do.body45
  br label %do.cond70, !dbg !10018

do.cond70:                                        ; preds = %if.end69
  br label %do.end71, !dbg !10018

do.end71:                                         ; preds = %do.cond70
  %44 = load i32, ptr %nodeid, align 4, !dbg !10021, !tbaa !3959
  %45 = load ptr, ptr %rkb.addr, align 8, !dbg !10022, !tbaa !3910
  %rkb_nodeid72 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %45, i32 0, i32 1, !dbg !10023
  store i32 %44, ptr %rkb_nodeid72, align 8, !dbg !10024, !tbaa !4311
  br label %if.end73, !dbg !10025

if.end73:                                         ; preds = %do.end71, %if.end40
  %46 = load ptr, ptr %rkb.addr, align 8, !dbg !10026, !tbaa !3910
  %rkb_lock74 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %46, i32 0, i32 9, !dbg !10026
  %call75 = call i32 @mtx_unlock(ptr noundef %rkb_lock74), !dbg !10026
  %arraydecay76 = getelementptr inbounds [256 x i8], ptr %brokername, i64 0, i64 0, !dbg !10027
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !10028, !tbaa !3910
  %rkb_proto = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 58, !dbg !10029
  %48 = load i32, ptr %rkb_proto, align 8, !dbg !10029, !tbaa !4314
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !10030, !tbaa !3910
  %rkb_name = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 42, !dbg !10031
  %arraydecay77 = getelementptr inbounds [256 x i8], ptr %rkb_name, i64 0, i64 0, !dbg !10030
  %50 = load i32, ptr %nodeid, align 4, !dbg !10032, !tbaa !3959
  %51 = load ptr, ptr %rkb.addr, align 8, !dbg !10033, !tbaa !3910
  %rkb_source78 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %51, i32 0, i32 27, !dbg !10034
  %52 = load i32, ptr %rkb_source78, align 8, !dbg !10034, !tbaa !4174
  call void @rd_kafka_mk_brokername(ptr noundef %arraydecay76, i64 noundef 256, i32 noundef %48, ptr noundef %arraydecay77, i32 noundef %50, i32 noundef %52), !dbg !10035
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !10036, !tbaa !3910
  %arraydecay79 = getelementptr inbounds [256 x i8], ptr %brokername, i64 0, i64 0, !dbg !10037
  call void @rd_kafka_broker_set_logname(ptr noundef %53, ptr noundef %arraydecay79), !dbg !10038
  %54 = load i8, ptr %changed, align 1, !dbg !10039, !tbaa !4126
  %tobool80 = icmp ne i8 %54, 0, !dbg !10039
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !10041

if.then81:                                        ; preds = %if.end73
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10042

if.end82:                                         ; preds = %if.end73
  %55 = load ptr, ptr %rkb.addr, align 8, !dbg !10043, !tbaa !3910
  %rkb_nodename83 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %55, i32 0, i32 43, !dbg !10043
  %arraydecay84 = getelementptr inbounds [256 x i8], ptr %rkb_nodename83, i64 0, i64 0, !dbg !10043
  %56 = load i8, ptr %arraydecay84, align 8, !dbg !10043, !tbaa !4126
  %conv85 = sext i8 %56 to i32, !dbg !10043
  %cmp86 = icmp eq i32 %conv85, 0, !dbg !10043
  br i1 %cmp86, label %if.else91, label %if.then88, !dbg !10045

if.then88:                                        ; preds = %if.end82
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !10046, !tbaa !3910
  %rkb_rk89 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %57, i32 0, i32 32, !dbg !10047
  %58 = load ptr, ptr %rkb_rk89, align 8, !dbg !10047, !tbaa !4139
  %rk_broker_addrless_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %58, i32 0, i32 8, !dbg !10048
  %call90 = call i32 @rd_atomic32_sub(ptr noundef %rk_broker_addrless_cnt, i32 noundef 1), !dbg !10049
  br label %if.end95, !dbg !10049

if.else91:                                        ; preds = %if.end82
  %59 = load ptr, ptr %rkb.addr, align 8, !dbg !10050, !tbaa !3910
  %rkb_rk92 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 32, !dbg !10051
  %60 = load ptr, ptr %rkb_rk92, align 8, !dbg !10051, !tbaa !4139
  %rk_broker_addrless_cnt93 = getelementptr inbounds %struct.rd_kafka_s, ptr %60, i32 0, i32 8, !dbg !10052
  %call94 = call i32 @rd_atomic32_add(ptr noundef %rk_broker_addrless_cnt93, i32 noundef 1), !dbg !10053
  br label %if.end95

if.end95:                                         ; preds = %if.else91, %if.then88
  %61 = load ptr, ptr %rkb.addr, align 8, !dbg !10054, !tbaa !3910
  call void @rd_kafka_broker_schedule_connection(ptr noundef %61), !dbg !10055
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10056
  br label %cleanup, !dbg !10056

cleanup:                                          ; preds = %if.end95, %if.then81
  call void @llvm.lifetime.end.p0(i64 1, ptr %changed) #16, !dbg !10056
  call void @llvm.lifetime.end.p0(i64 4, ptr %nodeid) #16, !dbg !10056
  call void @llvm.lifetime.end.p0(i64 256, ptr %brokername) #16, !dbg !10056
  call void @llvm.lifetime.end.p0(i64 256, ptr %nodename) #16, !dbg !10056
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !10056

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_set_logname(ptr noundef %rkb, ptr noundef %logname) #0 !dbg !10057 {
entry:
  %rkb.addr = alloca ptr, align 8
  %logname.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10059, metadata !DIExpression()), !dbg !10061
  store ptr %logname, ptr %logname.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %logname.addr, metadata !10060, metadata !DIExpression()), !dbg !10062
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !10063, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 49, !dbg !10064
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !10065
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !10066, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 48, !dbg !10068
  %2 = load ptr, ptr %rkb_logname, align 8, !dbg !10068, !tbaa !4628
  %tobool = icmp ne ptr %2, null, !dbg !10066
  br i1 %tobool, label %if.then, label %if.end, !dbg !10069

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !10070, !tbaa !3910
  %rkb_logname1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 48, !dbg !10071
  %4 = load ptr, ptr %rkb_logname1, align 8, !dbg !10071, !tbaa !4628
  call void @rd_free(ptr noundef %4), !dbg !10072
  br label %if.end, !dbg !10072

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %logname.addr, align 8, !dbg !10073, !tbaa !3910
  %call2 = call ptr @rd_strdup(ptr noundef %5), !dbg !10074
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !10075, !tbaa !3910
  %rkb_logname3 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 48, !dbg !10076
  store ptr %call2, ptr %rkb_logname3, align 8, !dbg !10077, !tbaa !4628
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !10078, !tbaa !3910
  %rkb_logname_lock4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 49, !dbg !10079
  %call5 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock4), !dbg !10080
  ret void, !dbg !10081
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_schedule_connection(ptr noundef %rkb) #0 !dbg !10082 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rko = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10084, metadata !DIExpression()), !dbg !10086
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !10087
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !10085, metadata !DIExpression()), !dbg !10088
  %call = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 51), !dbg !10089
  store ptr %call, ptr %rko, align 8, !dbg !10090, !tbaa !3910
  %0 = load ptr, ptr %rko, align 8, !dbg !10091, !tbaa !3910
  %rko_prio = getelementptr inbounds %struct.rd_kafka_op_s, ptr %0, i32 0, i32 8, !dbg !10091
  store i32 3, ptr %rko_prio, align 4, !dbg !10091, !tbaa !10092
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !10093, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 8, !dbg !10094
  %2 = load ptr, ptr %rkb_ops, align 8, !dbg !10094, !tbaa !5475
  %3 = load ptr, ptr %rko, align 8, !dbg !10095, !tbaa !3910
  %call1 = call i32 @rd_kafka_q_enq(ptr noundef %2, ptr noundef %3), !dbg !10096
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !10097
  ret void, !dbg !10097
}

declare !dbg !10098 ptr @rd_list_find(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_brokers_add0(ptr noundef %rk, ptr noundef %brokerlist, i8 noundef zeroext %is_bootstrap_server_list) #0 !dbg !10101 {
entry:
  %rk.addr = alloca ptr, align 8
  %brokerlist.addr = alloca ptr, align 8
  %is_bootstrap_server_list.addr = alloca i8, align 1
  %s_copy = alloca ptr, align 8
  %s = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %pre_cnt = alloca i32, align 4
  %sinx = alloca ptr, align 8
  %sockaddr_list = alloca ptr, align 8
  %port = alloca i16, align 2
  %host = alloca ptr, align 8
  %err_str = alloca ptr, align 8
  %resolved_FQDN = alloca ptr, align 8
  %proto = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !10105, metadata !DIExpression()), !dbg !10121
  store ptr %brokerlist, ptr %brokerlist.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %brokerlist.addr, metadata !10106, metadata !DIExpression()), !dbg !10122
  store i8 %is_bootstrap_server_list, ptr %is_bootstrap_server_list.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %is_bootstrap_server_list.addr, metadata !10107, metadata !DIExpression()), !dbg !10123
  call void @llvm.lifetime.start.p0(i64 8, ptr %s_copy) #16, !dbg !10124
  tail call void @llvm.dbg.declare(metadata ptr %s_copy, metadata !10108, metadata !DIExpression()), !dbg !10125
  %0 = load ptr, ptr %brokerlist.addr, align 8, !dbg !10126, !tbaa !3910
  %call = call ptr @rd_strdup(ptr noundef %0), !dbg !10127
  store ptr %call, ptr %s_copy, align 8, !dbg !10125, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %s) #16, !dbg !10128
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !10109, metadata !DIExpression()), !dbg !10129
  %1 = load ptr, ptr %s_copy, align 8, !dbg !10130, !tbaa !3910
  store ptr %1, ptr %s, align 8, !dbg !10129, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !10131
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !10110, metadata !DIExpression()), !dbg !10132
  store i32 0, ptr %cnt, align 4, !dbg !10132, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %pre_cnt) #16, !dbg !10133
  tail call void @llvm.dbg.declare(metadata ptr %pre_cnt, metadata !10111, metadata !DIExpression()), !dbg !10134
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !10135, !tbaa !3910
  %rk_broker_cnt = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 4, !dbg !10136
  %call1 = call i32 @rd_atomic32_get(ptr noundef %rk_broker_cnt), !dbg !10137
  store i32 %call1, ptr %pre_cnt, align 4, !dbg !10134, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %sinx) #16, !dbg !10138
  tail call void @llvm.dbg.declare(metadata ptr %sinx, metadata !10112, metadata !DIExpression()), !dbg !10139
  call void @llvm.lifetime.start.p0(i64 8, ptr %sockaddr_list) #16, !dbg !10140
  tail call void @llvm.dbg.declare(metadata ptr %sockaddr_list, metadata !10114, metadata !DIExpression()), !dbg !10141
  br label %while.cond, !dbg !10142

while.cond:                                       ; preds = %cleanup.cont, %cleanup, %entry
  %3 = load ptr, ptr %s, align 8, !dbg !10143, !tbaa !3910
  %4 = load i8, ptr %3, align 1, !dbg !10144, !tbaa !4126
  %tobool = icmp ne i8 %4, 0, !dbg !10142
  br i1 %tobool, label %while.body, label %while.end, !dbg !10142

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 2, ptr %port) #16, !dbg !10145
  tail call void @llvm.dbg.declare(metadata ptr %port, metadata !10115, metadata !DIExpression()), !dbg !10146
  call void @llvm.lifetime.start.p0(i64 8, ptr %host) #16, !dbg !10147
  tail call void @llvm.dbg.declare(metadata ptr %host, metadata !10117, metadata !DIExpression()), !dbg !10148
  call void @llvm.lifetime.start.p0(i64 8, ptr %err_str) #16, !dbg !10149
  tail call void @llvm.dbg.declare(metadata ptr %err_str, metadata !10118, metadata !DIExpression()), !dbg !10150
  call void @llvm.lifetime.start.p0(i64 8, ptr %resolved_FQDN) #16, !dbg !10151
  tail call void @llvm.dbg.declare(metadata ptr %resolved_FQDN, metadata !10119, metadata !DIExpression()), !dbg !10152
  call void @llvm.lifetime.start.p0(i64 4, ptr %proto) #16, !dbg !10153
  tail call void @llvm.dbg.declare(metadata ptr %proto, metadata !10120, metadata !DIExpression()), !dbg !10154
  %5 = load ptr, ptr %s, align 8, !dbg !10155, !tbaa !3910
  %6 = load i8, ptr %5, align 1, !dbg !10157, !tbaa !4126
  %conv = sext i8 %6 to i32, !dbg !10157
  %cmp = icmp eq i32 %conv, 44, !dbg !10158
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10159

lor.lhs.false:                                    ; preds = %while.body
  %7 = load ptr, ptr %s, align 8, !dbg !10160, !tbaa !3910
  %8 = load i8, ptr %7, align 1, !dbg !10161, !tbaa !4126
  %conv3 = sext i8 %8 to i32, !dbg !10161
  %cmp4 = icmp eq i32 %conv3, 32, !dbg !10162
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10163

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %9 = load ptr, ptr %s, align 8, !dbg !10164, !tbaa !3910
  %incdec.ptr = getelementptr inbounds i8, ptr %9, i32 1, !dbg !10164
  store ptr %incdec.ptr, ptr %s, align 8, !dbg !10164, !tbaa !3910
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10166, !llvm.loop !10167

if.end:                                           ; preds = %lor.lhs.false
  %10 = load ptr, ptr %rk.addr, align 8, !dbg !10169, !tbaa !3910
  %call6 = call i32 @rd_kafka_broker_name_parse(ptr noundef %10, ptr noundef %s, ptr noundef %proto, ptr noundef %host, ptr noundef %port), !dbg !10171
  %cmp7 = icmp eq i32 %call6, -1, !dbg !10172
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10173

if.then9:                                         ; preds = %if.end
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10174

if.end10:                                         ; preds = %if.end
  %11 = load ptr, ptr %rk.addr, align 8, !dbg !10175, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %11, i32 0, i32 24, !dbg !10175
  %call11 = call i32 @rwlock_wrlock(ptr noundef %rk_lock), !dbg !10175
  %12 = load i8, ptr %is_bootstrap_server_list.addr, align 1, !dbg !10176, !tbaa !4126
  %conv12 = zext i8 %12 to i32, !dbg !10176
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !10176
  br i1 %tobool13, label %land.lhs.true, label %if.else, !dbg !10178

land.lhs.true:                                    ; preds = %if.end10
  %13 = load ptr, ptr %rk.addr, align 8, !dbg !10179, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !10180
  %client_dns_lookup = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 39, !dbg !10181
  %14 = load i32, ptr %client_dns_lookup, align 4, !dbg !10181, !tbaa !10182
  %cmp14 = icmp eq i32 %14, 1, !dbg !10183
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !10184

if.then16:                                        ; preds = %land.lhs.true
  br label %do.body, !dbg !10185

do.body:                                          ; preds = %if.then16
  %15 = load ptr, ptr %rk.addr, align 8, !dbg !10187, !tbaa !3910
  %rk_conf17 = getelementptr inbounds %struct.rd_kafka_s, ptr %15, i32 0, i32 18, !dbg !10187
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf17, i32 0, i32 13, !dbg !10187
  %16 = load i32, ptr %debug, align 8, !dbg !10187, !tbaa !4140
  %and = and i32 %16, 1048575, !dbg !10187
  %conv18 = sext i32 %and to i64, !dbg !10187
  %expval = call i64 @llvm.expect.i64(i64 %conv18, i64 0), !dbg !10187
  %tobool19 = icmp ne i64 %expval, 0, !dbg !10187
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !10190

if.then20:                                        ; preds = %do.body
  %17 = load ptr, ptr %rk.addr, align 8, !dbg !10187, !tbaa !3910
  %rk_conf21 = getelementptr inbounds %struct.rd_kafka_s, ptr %17, i32 0, i32 18, !dbg !10187
  %18 = load ptr, ptr %rk.addr, align 8, !dbg !10187, !tbaa !3910
  %19 = load ptr, ptr %host, align 8, !dbg !10187, !tbaa !3910
  %20 = load i16, ptr %port, align 2, !dbg !10187, !tbaa !3915
  %conv22 = zext i16 %20 to i32, !dbg !10187
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf21, ptr noundef %18, ptr noundef null, i32 noundef 7, i32 noundef 1048575, ptr noundef @.str, ptr noundef @.str.76, ptr noundef %19, i32 noundef %conv22), !dbg !10187
  br label %if.end23, !dbg !10187

if.end23:                                         ; preds = %if.then20, %do.body
  br label %do.cond, !dbg !10190

do.cond:                                          ; preds = %if.end23
  br label %do.end, !dbg !10190

do.end:                                           ; preds = %do.cond
  %21 = load ptr, ptr %host, align 8, !dbg !10191, !tbaa !3910
  %22 = load ptr, ptr %rk.addr, align 8, !dbg !10192, !tbaa !3910
  %rk_conf24 = getelementptr inbounds %struct.rd_kafka_s, ptr %22, i32 0, i32 18, !dbg !10193
  %broker_addr_family = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf24, i32 0, i32 15, !dbg !10194
  %23 = load i32, ptr %broker_addr_family, align 8, !dbg !10194, !tbaa !10195
  %24 = load ptr, ptr %rk.addr, align 8, !dbg !10196, !tbaa !3910
  %rk_conf25 = getelementptr inbounds %struct.rd_kafka_s, ptr %24, i32 0, i32 18, !dbg !10197
  %resolve_cb = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf25, i32 0, i32 107, !dbg !10198
  %25 = load ptr, ptr %resolve_cb, align 8, !dbg !10198, !tbaa !10199
  %26 = load ptr, ptr %rk.addr, align 8, !dbg !10200, !tbaa !3910
  %rk_conf26 = getelementptr inbounds %struct.rd_kafka_s, ptr %26, i32 0, i32 18, !dbg !10201
  %opaque = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf26, i32 0, i32 109, !dbg !10202
  %27 = load ptr, ptr %opaque, align 8, !dbg !10202, !tbaa !10203
  %call27 = call ptr @rd_getaddrinfo(ptr noundef %21, ptr noundef @.str.77, i32 noundef 32, i32 noundef %23, i32 noundef 1, i32 noundef 6, ptr noundef %25, ptr noundef %27, ptr noundef %err_str), !dbg !10204
  store ptr %call27, ptr %sockaddr_list, align 8, !dbg !10205, !tbaa !3910
  %28 = load ptr, ptr %sockaddr_list, align 8, !dbg !10206, !tbaa !3910
  %tobool28 = icmp ne ptr %28, null, !dbg !10206
  br i1 %tobool28, label %if.end33, label %if.then29, !dbg !10208

if.then29:                                        ; preds = %do.end
  %29 = load ptr, ptr %rk.addr, align 8, !dbg !10209, !tbaa !3910
  %rk_conf30 = getelementptr inbounds %struct.rd_kafka_s, ptr %29, i32 0, i32 18, !dbg !10209
  %30 = load ptr, ptr %rk.addr, align 8, !dbg !10209, !tbaa !3910
  %31 = load ptr, ptr %host, align 8, !dbg !10209, !tbaa !3910
  %32 = load ptr, ptr %err_str, align 8, !dbg !10209, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf30, ptr noundef %30, ptr noundef null, i32 noundef 4, i32 noundef 0, ptr noundef @.str.67, ptr noundef @.str.78, ptr noundef %31, ptr noundef %32), !dbg !10209
  %33 = load ptr, ptr %rk.addr, align 8, !dbg !10211, !tbaa !3910
  %rk_lock31 = getelementptr inbounds %struct.rd_kafka_s, ptr %33, i32 0, i32 24, !dbg !10211
  %call32 = call i32 @rwlock_wrunlock(ptr noundef %rk_lock31), !dbg !10211
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10212, !llvm.loop !10167

if.end33:                                         ; preds = %do.end
  %34 = load ptr, ptr %sockaddr_list, align 8, !dbg !10213, !tbaa !3910
  %rsal_addr = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %34, i32 0, i32 2, !dbg !10213
  %arrayidx = getelementptr inbounds [0 x %union.rd_sockaddr_inx_t], ptr %rsal_addr, i64 0, i64 0, !dbg !10213
  store ptr %arrayidx, ptr %sinx, align 8, !dbg !10213, !tbaa !3910
  br label %for.cond, !dbg !10213

for.cond:                                         ; preds = %for.inc, %if.end33
  %35 = load ptr, ptr %sinx, align 8, !dbg !10215, !tbaa !3910
  %36 = load ptr, ptr %sockaddr_list, align 8, !dbg !10215, !tbaa !3910
  %rsal_addr34 = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %36, i32 0, i32 2, !dbg !10215
  %37 = load ptr, ptr %sockaddr_list, align 8, !dbg !10215, !tbaa !3910
  %rsal_cnt = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %37, i32 0, i32 0, !dbg !10215
  %38 = load i32, ptr %rsal_cnt, align 4, !dbg !10215, !tbaa !3959
  %idxprom = sext i32 %38 to i64, !dbg !10215
  %arrayidx35 = getelementptr inbounds [0 x %union.rd_sockaddr_inx_t], ptr %rsal_addr34, i64 0, i64 %idxprom, !dbg !10215
  %cmp36 = icmp ult ptr %35, %arrayidx35, !dbg !10215
  br i1 %cmp36, label %for.body, label %for.end, !dbg !10213

for.body:                                         ; preds = %for.cond
  %39 = load ptr, ptr %sinx, align 8, !dbg !10217, !tbaa !3910
  %call38 = call ptr @rd_sockaddr2str(ptr noundef %39, i32 noundef 2), !dbg !10219
  store ptr %call38, ptr %resolved_FQDN, align 8, !dbg !10220, !tbaa !3910
  br label %do.body39, !dbg !10221

do.body39:                                        ; preds = %for.body
  %40 = load ptr, ptr %rk.addr, align 8, !dbg !10222, !tbaa !3910
  %rk_conf40 = getelementptr inbounds %struct.rd_kafka_s, ptr %40, i32 0, i32 18, !dbg !10222
  %debug41 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf40, i32 0, i32 13, !dbg !10222
  %41 = load i32, ptr %debug41, align 8, !dbg !10222, !tbaa !4140
  %and42 = and i32 %41, 1048575, !dbg !10222
  %conv43 = sext i32 %and42 to i64, !dbg !10222
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0), !dbg !10222
  %tobool45 = icmp ne i64 %expval44, 0, !dbg !10222
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !10225

if.then46:                                        ; preds = %do.body39
  %42 = load ptr, ptr %rk.addr, align 8, !dbg !10222, !tbaa !3910
  %rk_conf47 = getelementptr inbounds %struct.rd_kafka_s, ptr %42, i32 0, i32 18, !dbg !10222
  %43 = load ptr, ptr %rk.addr, align 8, !dbg !10222, !tbaa !3910
  %44 = load ptr, ptr %resolved_FQDN, align 8, !dbg !10222, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf47, ptr noundef %43, ptr noundef null, i32 noundef 7, i32 noundef 1048575, ptr noundef @.str, ptr noundef @.str.79, ptr noundef %44), !dbg !10222
  br label %if.end48, !dbg !10222

if.end48:                                         ; preds = %if.then46, %do.body39
  br label %do.cond49, !dbg !10225

do.cond49:                                        ; preds = %if.end48
  br label %do.end50, !dbg !10225

do.end50:                                         ; preds = %do.cond49
  %45 = load ptr, ptr %rk.addr, align 8, !dbg !10226, !tbaa !3910
  %46 = load i32, ptr %proto, align 4, !dbg !10227, !tbaa !4126
  %47 = load ptr, ptr %resolved_FQDN, align 8, !dbg !10228, !tbaa !3910
  %48 = load i16, ptr %port, align 2, !dbg !10229, !tbaa !3915
  call void @rd_kafka_find_or_add_broker(ptr noundef %45, i32 noundef %46, ptr noundef %47, i16 noundef zeroext %48, ptr noundef %cnt), !dbg !10230
  br label %for.inc, !dbg !10231

for.inc:                                          ; preds = %do.end50
  %49 = load ptr, ptr %sinx, align 8, !dbg !10215, !tbaa !3910
  %incdec.ptr51 = getelementptr inbounds %union.rd_sockaddr_inx_t, ptr %49, i32 1, !dbg !10215
  store ptr %incdec.ptr51, ptr %sinx, align 8, !dbg !10215, !tbaa !3910
  br label %for.cond, !dbg !10215, !llvm.loop !10232

for.end:                                          ; preds = %for.cond
  %50 = load ptr, ptr %sockaddr_list, align 8, !dbg !10234, !tbaa !3910
  call void @rd_sockaddr_list_destroy(ptr noundef %50), !dbg !10235
  br label %if.end52, !dbg !10236

if.else:                                          ; preds = %land.lhs.true, %if.end10
  %51 = load ptr, ptr %rk.addr, align 8, !dbg !10237, !tbaa !3910
  %52 = load i32, ptr %proto, align 4, !dbg !10239, !tbaa !4126
  %53 = load ptr, ptr %host, align 8, !dbg !10240, !tbaa !3910
  %54 = load i16, ptr %port, align 2, !dbg !10241, !tbaa !3915
  call void @rd_kafka_find_or_add_broker(ptr noundef %51, i32 noundef %52, ptr noundef %53, i16 noundef zeroext %54, ptr noundef %cnt), !dbg !10242
  br label %if.end52

if.end52:                                         ; preds = %if.else, %for.end
  %55 = load ptr, ptr %rk.addr, align 8, !dbg !10243, !tbaa !3910
  %rk_lock53 = getelementptr inbounds %struct.rd_kafka_s, ptr %55, i32 0, i32 24, !dbg !10243
  %call54 = call i32 @rwlock_wrunlock(ptr noundef %rk_lock53), !dbg !10243
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10168
  br label %cleanup, !dbg !10168

cleanup:                                          ; preds = %if.end52, %if.then29, %if.then9, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %proto) #16, !dbg !10168
  call void @llvm.lifetime.end.p0(i64 8, ptr %resolved_FQDN) #16, !dbg !10168
  call void @llvm.lifetime.end.p0(i64 8, ptr %err_str) #16, !dbg !10168
  call void @llvm.lifetime.end.p0(i64 8, ptr %host) #16, !dbg !10168
  call void @llvm.lifetime.end.p0(i64 2, ptr %port) #16, !dbg !10168
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %while.cond
    i32 3, label %while.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !10142, !llvm.loop !10167

while.end:                                        ; preds = %cleanup, %while.cond
  %56 = load ptr, ptr %s_copy, align 8, !dbg !10244, !tbaa !3910
  call void @rd_free(ptr noundef %56), !dbg !10245
  %57 = load ptr, ptr %rk.addr, align 8, !dbg !10246, !tbaa !3910
  %rk_conf59 = getelementptr inbounds %struct.rd_kafka_s, ptr %57, i32 0, i32 18, !dbg !10248
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf59, i32 0, i32 32, !dbg !10249
  %58 = load i32, ptr %sparse_connections, align 4, !dbg !10249, !tbaa !5300
  %tobool60 = icmp ne i32 %58, 0, !dbg !10246
  br i1 %tobool60, label %land.lhs.true61, label %if.end72, !dbg !10250

land.lhs.true61:                                  ; preds = %while.end
  %59 = load i32, ptr %cnt, align 4, !dbg !10251, !tbaa !3959
  %cmp62 = icmp sgt i32 %59, 0, !dbg !10252
  br i1 %cmp62, label %land.lhs.true64, label %if.end72, !dbg !10253

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %60 = load i32, ptr %pre_cnt, align 4, !dbg !10254, !tbaa !3959
  %cmp65 = icmp eq i32 %60, 0, !dbg !10255
  br i1 %cmp65, label %if.then67, label %if.end72, !dbg !10256

if.then67:                                        ; preds = %land.lhs.true64
  %61 = load ptr, ptr %rk.addr, align 8, !dbg !10257, !tbaa !3910
  %rk_lock68 = getelementptr inbounds %struct.rd_kafka_s, ptr %61, i32 0, i32 24, !dbg !10257
  %call69 = call i32 @rwlock_rdlock(ptr noundef %rk_lock68), !dbg !10257
  %62 = load ptr, ptr %rk.addr, align 8, !dbg !10259, !tbaa !3910
  call void @rd_kafka_connect_any(ptr noundef %62, ptr noundef @.str.80), !dbg !10260
  %63 = load ptr, ptr %rk.addr, align 8, !dbg !10261, !tbaa !3910
  %rk_lock70 = getelementptr inbounds %struct.rd_kafka_s, ptr %63, i32 0, i32 24, !dbg !10261
  %call71 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock70), !dbg !10261
  br label %if.end72, !dbg !10262

if.end72:                                         ; preds = %if.then67, %land.lhs.true64, %land.lhs.true61, %while.end
  %64 = load i32, ptr %cnt, align 4, !dbg !10263, !tbaa !3959
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %sockaddr_list) #16, !dbg !10264
  call void @llvm.lifetime.end.p0(i64 8, ptr %sinx) #16, !dbg !10264
  call void @llvm.lifetime.end.p0(i64 4, ptr %pre_cnt) #16, !dbg !10264
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !10264
  call void @llvm.lifetime.end.p0(i64 8, ptr %s) #16, !dbg !10264
  call void @llvm.lifetime.end.p0(i64 8, ptr %s_copy) #16, !dbg !10264
  ret i32 %64, !dbg !10265

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_name_parse(ptr noundef %rk, ptr noundef %name, ptr noundef %proto, ptr noundef %host, ptr noundef %port) #0 !dbg !10266 {
entry:
  %retval = alloca i32, align 4
  %rk.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %proto.addr = alloca ptr, align 8
  %host.addr = alloca ptr, align 8
  %port.addr = alloca ptr, align 8
  %s = alloca ptr, align 8
  %orig = alloca ptr, align 8
  %n = alloca ptr, align 8
  %t = alloca ptr, align 8
  %t2 = alloca ptr, align 8
  %__old = alloca ptr, align 8
  %__len = alloca i64, align 8
  %__new = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %__res = alloca i32, align 4
  %tmp11 = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !10273, metadata !DIExpression()), !dbg !10294
  store ptr %name, ptr %name.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !10274, metadata !DIExpression()), !dbg !10295
  store ptr %proto, ptr %proto.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %proto.addr, metadata !10275, metadata !DIExpression()), !dbg !10296
  store ptr %host, ptr %host.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %host.addr, metadata !10276, metadata !DIExpression()), !dbg !10297
  store ptr %port, ptr %port.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %port.addr, metadata !10277, metadata !DIExpression()), !dbg !10298
  call void @llvm.lifetime.start.p0(i64 8, ptr %s) #16, !dbg !10299
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !10278, metadata !DIExpression()), !dbg !10300
  %0 = load ptr, ptr %name.addr, align 8, !dbg !10301, !tbaa !3910
  %1 = load ptr, ptr %0, align 8, !dbg !10302, !tbaa !3910
  store ptr %1, ptr %s, align 8, !dbg !10300, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %orig) #16, !dbg !10303
  tail call void @llvm.dbg.declare(metadata ptr %orig, metadata !10279, metadata !DIExpression()), !dbg !10304
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #16, !dbg !10305
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !10280, metadata !DIExpression()), !dbg !10306
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #16, !dbg !10305
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !10281, metadata !DIExpression()), !dbg !10307
  call void @llvm.lifetime.start.p0(i64 8, ptr %t2) #16, !dbg !10305
  tail call void @llvm.dbg.declare(metadata ptr %t2, metadata !10282, metadata !DIExpression()), !dbg !10308
  call void @llvm.lifetime.start.p0(i64 8, ptr %__old) #16, !dbg !10309
  tail call void @llvm.dbg.declare(metadata ptr %__old, metadata !10283, metadata !DIExpression()), !dbg !10309
  %2 = load ptr, ptr %name.addr, align 8, !dbg !10309, !tbaa !3910
  %3 = load ptr, ptr %2, align 8, !dbg !10309, !tbaa !3910
  store ptr %3, ptr %__old, align 8, !dbg !10309, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len) #16, !dbg !10309
  tail call void @llvm.dbg.declare(metadata ptr %__len, metadata !10285, metadata !DIExpression()), !dbg !10309
  %4 = load ptr, ptr %__old, align 8, !dbg !10309, !tbaa !3910
  %call = call i64 @strlen(ptr noundef %4) #19, !dbg !10309
  %add = add i64 %call, 1, !dbg !10309
  store i64 %add, ptr %__len, align 8, !dbg !10309, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %__new) #16, !dbg !10309
  tail call void @llvm.dbg.declare(metadata ptr %__new, metadata !10286, metadata !DIExpression()), !dbg !10309
  %5 = load i64, ptr %__len, align 8, !dbg !10309, !tbaa !4039
  %6 = alloca i8, i64 %5, align 16, !dbg !10309
  store ptr %6, ptr %__new, align 8, !dbg !10309, !tbaa !3910
  %7 = load ptr, ptr %__new, align 8, !dbg !10309, !tbaa !3910
  %8 = load ptr, ptr %__old, align 8, !dbg !10309, !tbaa !3910
  %9 = load i64, ptr %__len, align 8, !dbg !10309, !tbaa !4039
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %7, ptr align 1 %8, i64 %9, i1 false), !dbg !10309
  store ptr %7, ptr %tmp, align 8, !dbg !10309, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %__new) #16, !dbg !10310
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len) #16, !dbg !10310
  call void @llvm.lifetime.end.p0(i64 8, ptr %__old) #16, !dbg !10310
  %10 = load ptr, ptr %tmp, align 8, !dbg !10309, !tbaa !3910
  store ptr %10, ptr %orig, align 8, !dbg !10310, !tbaa !3910
  %11 = load ptr, ptr %s, align 8, !dbg !10311, !tbaa !3910
  %call1 = call ptr @strchr(ptr noundef %11, i32 noundef 44) #19, !dbg !10313
  store ptr %call1, ptr %n, align 8, !dbg !10314, !tbaa !3910
  %tobool = icmp ne ptr %call1, null, !dbg !10314
  br i1 %tobool, label %if.then, label %if.else, !dbg !10315

if.then:                                          ; preds = %entry
  %12 = load ptr, ptr %n, align 8, !dbg !10316, !tbaa !3910
  store i8 0, ptr %12, align 1, !dbg !10317, !tbaa !4126
  br label %if.end, !dbg !10318

if.else:                                          ; preds = %entry
  %13 = load ptr, ptr %s, align 8, !dbg !10319, !tbaa !3910
  %14 = load ptr, ptr %s, align 8, !dbg !10320, !tbaa !3910
  %call2 = call i64 @strlen(ptr noundef %14) #19, !dbg !10321
  %add.ptr = getelementptr inbounds i8, ptr %13, i64 %call2, !dbg !10322
  %add.ptr3 = getelementptr inbounds i8, ptr %add.ptr, i64 -1, !dbg !10323
  store ptr %add.ptr3, ptr %n, align 8, !dbg !10324, !tbaa !3910
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load ptr, ptr %s, align 8, !dbg !10325, !tbaa !3910
  %call4 = call ptr @strstr(ptr noundef %15, ptr noundef @.str.308) #19, !dbg !10326
  store ptr %call4, ptr %t, align 8, !dbg !10327, !tbaa !3910
  %tobool5 = icmp ne ptr %call4, null, !dbg !10327
  br i1 %tobool5, label %if.then6, label %if.else45, !dbg !10328

if.then6:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #16, !dbg !10329
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !10287, metadata !DIExpression()), !dbg !10330
  %16 = load ptr, ptr %t, align 8, !dbg !10331, !tbaa !3910
  %17 = load ptr, ptr %s, align 8, !dbg !10333, !tbaa !3910
  %cmp = icmp eq ptr %16, %17, !dbg !10334
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !10335

if.then7:                                         ; preds = %if.then6
  %18 = load ptr, ptr %rk.addr, align 8, !dbg !10336, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %18, i32 0, i32 18, !dbg !10336
  %19 = load ptr, ptr %rk.addr, align 8, !dbg !10336, !tbaa !3910
  %20 = load ptr, ptr %orig, align 8, !dbg !10336, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf, ptr noundef %19, ptr noundef null, i32 noundef 4, i32 noundef 0, ptr noundef @.str.67, ptr noundef @.str.309, ptr noundef %20), !dbg !10336
  store i32 -1, ptr %retval, align 4, !dbg !10338
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10338

if.end8:                                          ; preds = %if.then6
  %21 = load ptr, ptr %s, align 8, !dbg !10339, !tbaa !3910
  store ptr %21, ptr %t2, align 8, !dbg !10340, !tbaa !3910
  br label %for.cond, !dbg !10341

for.cond:                                         ; preds = %for.inc, %if.end8
  %22 = load ptr, ptr %t2, align 8, !dbg !10342, !tbaa !3910
  %23 = load ptr, ptr %t, align 8, !dbg !10343, !tbaa !3910
  %cmp9 = icmp ult ptr %22, %23, !dbg !10344
  br i1 %cmp9, label %for.body, label %for.end, !dbg !10345

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %__res) #16, !dbg !10346
  tail call void @llvm.dbg.declare(metadata ptr %__res, metadata !10290, metadata !DIExpression()), !dbg !10346
  %call10 = call ptr @__ctype_toupper_loc() #20, !dbg !10347
  %24 = load ptr, ptr %call10, align 8, !dbg !10347, !tbaa !3910
  %25 = load ptr, ptr %t2, align 8, !dbg !10347, !tbaa !3910
  %26 = load i8, ptr %25, align 1, !dbg !10347, !tbaa !4126
  %conv = sext i8 %26 to i32, !dbg !10347
  %idxprom = sext i32 %conv to i64, !dbg !10347
  %arrayidx = getelementptr inbounds i32, ptr %24, i64 %idxprom, !dbg !10347
  %27 = load i32, ptr %arrayidx, align 4, !dbg !10347, !tbaa !3959
  store i32 %27, ptr %__res, align 4, !dbg !10347, !tbaa !3959
  %28 = load i32, ptr %__res, align 4, !dbg !10346, !tbaa !3959
  store i32 %28, ptr %tmp11, align 4, !dbg !10347, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %__res) #16, !dbg !10349
  %29 = load i32, ptr %tmp11, align 4, !dbg !10346, !tbaa !3959
  %conv12 = trunc i32 %29 to i8, !dbg !10349
  %30 = load ptr, ptr %t2, align 8, !dbg !10350, !tbaa !3910
  store i8 %conv12, ptr %30, align 1, !dbg !10351, !tbaa !4126
  br label %for.inc, !dbg !10352

for.inc:                                          ; preds = %for.body
  %31 = load ptr, ptr %t2, align 8, !dbg !10353, !tbaa !3910
  %incdec.ptr = getelementptr inbounds i8, ptr %31, i32 1, !dbg !10353
  store ptr %incdec.ptr, ptr %t2, align 8, !dbg !10353, !tbaa !3910
  br label %for.cond, !dbg !10354, !llvm.loop !10355

for.end:                                          ; preds = %for.cond
  %32 = load ptr, ptr %t, align 8, !dbg !10357, !tbaa !3910
  store i8 0, ptr %32, align 1, !dbg !10358, !tbaa !4126
  store i32 0, ptr %i, align 4, !dbg !10359, !tbaa !3959
  br label %for.cond13, !dbg !10361

for.cond13:                                       ; preds = %for.inc23, %for.end
  %33 = load i32, ptr %i, align 4, !dbg !10362, !tbaa !3959
  %cmp14 = icmp slt i32 %33, 4, !dbg !10364
  br i1 %cmp14, label %for.body16, label %for.end24, !dbg !10365

for.body16:                                       ; preds = %for.cond13
  %34 = load ptr, ptr %s, align 8, !dbg !10366, !tbaa !3910
  %35 = load i32, ptr %i, align 4, !dbg !10366, !tbaa !3959
  %idxprom17 = sext i32 %35 to i64, !dbg !10366
  %arrayidx18 = getelementptr inbounds [5 x ptr], ptr @rd_kafka_secproto_names, i64 0, i64 %idxprom17, !dbg !10366
  %36 = load ptr, ptr %arrayidx18, align 8, !dbg !10366, !tbaa !3910
  %call19 = call i32 @strcasecmp(ptr noundef %34, ptr noundef %36) #19, !dbg !10366
  %tobool20 = icmp ne i32 %call19, 0, !dbg !10366
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !10368

if.then21:                                        ; preds = %for.body16
  br label %for.end24, !dbg !10369

if.end22:                                         ; preds = %for.body16
  br label %for.inc23, !dbg !10366

for.inc23:                                        ; preds = %if.end22
  %37 = load i32, ptr %i, align 4, !dbg !10370, !tbaa !3959
  %inc = add nsw i32 %37, 1, !dbg !10370
  store i32 %inc, ptr %i, align 4, !dbg !10370, !tbaa !3959
  br label %for.cond13, !dbg !10371, !llvm.loop !10372

for.end24:                                        ; preds = %if.then21, %for.cond13
  %38 = load i32, ptr %i, align 4, !dbg !10374, !tbaa !3959
  %cmp25 = icmp eq i32 %38, 4, !dbg !10376
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !10377

if.then27:                                        ; preds = %for.end24
  %39 = load ptr, ptr %rk.addr, align 8, !dbg !10378, !tbaa !3910
  %rk_conf28 = getelementptr inbounds %struct.rd_kafka_s, ptr %39, i32 0, i32 18, !dbg !10378
  %40 = load ptr, ptr %rk.addr, align 8, !dbg !10378, !tbaa !3910
  %41 = load ptr, ptr %orig, align 8, !dbg !10378, !tbaa !3910
  %42 = load ptr, ptr %s, align 8, !dbg !10378, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf28, ptr noundef %40, ptr noundef null, i32 noundef 4, i32 noundef 0, ptr noundef @.str.67, ptr noundef @.str.310, ptr noundef %41, ptr noundef %42), !dbg !10378
  store i32 -1, ptr %retval, align 4, !dbg !10380
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10380

if.end29:                                         ; preds = %for.end24
  %43 = load i32, ptr %i, align 4, !dbg !10381, !tbaa !3959
  %44 = load ptr, ptr %proto.addr, align 8, !dbg !10382, !tbaa !3910
  store i32 %43, ptr %44, align 4, !dbg !10383, !tbaa !4126
  %45 = load ptr, ptr %rk.addr, align 8, !dbg !10384, !tbaa !3910
  %rk_conf30 = getelementptr inbounds %struct.rd_kafka_s, ptr %45, i32 0, i32 18, !dbg !10386
  %security_protocol = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf30, i32 0, i32 38, !dbg !10387
  %46 = load i32, ptr %security_protocol, align 8, !dbg !10387, !tbaa !4852
  %47 = load ptr, ptr %proto.addr, align 8, !dbg !10388, !tbaa !3910
  %48 = load i32, ptr %47, align 4, !dbg !10389, !tbaa !4126
  %cmp31 = icmp ne i32 %46, %48, !dbg !10390
  br i1 %cmp31, label %if.then33, label %if.end39, !dbg !10391

if.then33:                                        ; preds = %if.end29
  %49 = load ptr, ptr %rk.addr, align 8, !dbg !10392, !tbaa !3910
  %rk_conf34 = getelementptr inbounds %struct.rd_kafka_s, ptr %49, i32 0, i32 18, !dbg !10392
  %50 = load ptr, ptr %rk.addr, align 8, !dbg !10392, !tbaa !3910
  %51 = load ptr, ptr %orig, align 8, !dbg !10392, !tbaa !3910
  %52 = load ptr, ptr %s, align 8, !dbg !10392, !tbaa !3910
  %53 = load ptr, ptr %rk.addr, align 8, !dbg !10392, !tbaa !3910
  %rk_conf35 = getelementptr inbounds %struct.rd_kafka_s, ptr %53, i32 0, i32 18, !dbg !10392
  %security_protocol36 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf35, i32 0, i32 38, !dbg !10392
  %54 = load i32, ptr %security_protocol36, align 8, !dbg !10392, !tbaa !4852
  %idxprom37 = zext i32 %54 to i64, !dbg !10392
  %arrayidx38 = getelementptr inbounds [5 x ptr], ptr @rd_kafka_secproto_names, i64 0, i64 %idxprom37, !dbg !10392
  %55 = load ptr, ptr %arrayidx38, align 8, !dbg !10392, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf34, ptr noundef %50, ptr noundef null, i32 noundef 4, i32 noundef 0, ptr noundef @.str.67, ptr noundef @.str.311, ptr noundef %51, ptr noundef %52, ptr noundef %55), !dbg !10392
  store i32 -1, ptr %retval, align 4, !dbg !10394
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10394

if.end39:                                         ; preds = %if.end29
  %56 = load ptr, ptr %t, align 8, !dbg !10395, !tbaa !3910
  %add.ptr40 = getelementptr inbounds i8, ptr %56, i64 3, !dbg !10396
  store ptr %add.ptr40, ptr %s, align 8, !dbg !10397, !tbaa !3910
  %57 = load ptr, ptr %s, align 8, !dbg !10398, !tbaa !3910
  %call41 = call ptr @strchr(ptr noundef %57, i32 noundef 47) #19, !dbg !10400
  store ptr %call41, ptr %t, align 8, !dbg !10401, !tbaa !3910
  %tobool42 = icmp ne ptr %call41, null, !dbg !10401
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !10402

if.then43:                                        ; preds = %if.end39
  %58 = load ptr, ptr %t, align 8, !dbg !10403, !tbaa !3910
  store i8 0, ptr %58, align 1, !dbg !10404, !tbaa !4126
  br label %if.end44, !dbg !10405

if.end44:                                         ; preds = %if.then43, %if.end39
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10406
  br label %cleanup, !dbg !10406

cleanup:                                          ; preds = %if.end44, %if.then33, %if.then27, %if.then7
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #16, !dbg !10406
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup67 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end48, !dbg !10407

if.else45:                                        ; preds = %if.end
  %59 = load ptr, ptr %rk.addr, align 8, !dbg !10408, !tbaa !3910
  %rk_conf46 = getelementptr inbounds %struct.rd_kafka_s, ptr %59, i32 0, i32 18, !dbg !10409
  %security_protocol47 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf46, i32 0, i32 38, !dbg !10410
  %60 = load i32, ptr %security_protocol47, align 8, !dbg !10410, !tbaa !4852
  %61 = load ptr, ptr %proto.addr, align 8, !dbg !10411, !tbaa !3910
  store i32 %60, ptr %61, align 4, !dbg !10412, !tbaa !4126
  br label %if.end48

if.end48:                                         ; preds = %if.else45, %cleanup.cont
  %62 = load ptr, ptr %port.addr, align 8, !dbg !10413, !tbaa !3910
  store i16 9092, ptr %62, align 2, !dbg !10414, !tbaa !3915
  %63 = load ptr, ptr %s, align 8, !dbg !10415, !tbaa !3910
  %call49 = call ptr @strrchr(ptr noundef %63, i32 noundef 58) #19, !dbg !10417
  store ptr %call49, ptr %t, align 8, !dbg !10418, !tbaa !3910
  %tobool50 = icmp ne ptr %call49, null, !dbg !10418
  br i1 %tobool50, label %land.lhs.true, label %if.end62, !dbg !10419

land.lhs.true:                                    ; preds = %if.end48
  %64 = load ptr, ptr %s, align 8, !dbg !10420, !tbaa !3910
  %call51 = call ptr @strchr(ptr noundef %64, i32 noundef 58) #19, !dbg !10421
  store ptr %call51, ptr %t2, align 8, !dbg !10422, !tbaa !3910
  %65 = load ptr, ptr %t, align 8, !dbg !10423, !tbaa !3910
  %cmp52 = icmp eq ptr %call51, %65, !dbg !10424
  br i1 %cmp52, label %if.then58, label %lor.lhs.false, !dbg !10425

lor.lhs.false:                                    ; preds = %land.lhs.true
  %66 = load ptr, ptr %t, align 8, !dbg !10426, !tbaa !3910
  %add.ptr54 = getelementptr inbounds i8, ptr %66, i64 -1, !dbg !10427
  %67 = load i8, ptr %add.ptr54, align 1, !dbg !10428, !tbaa !4126
  %conv55 = sext i8 %67 to i32, !dbg !10428
  %cmp56 = icmp eq i32 %conv55, 93, !dbg !10429
  br i1 %cmp56, label %if.then58, label %if.end62, !dbg !10430

if.then58:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %68 = load ptr, ptr %t, align 8, !dbg !10431, !tbaa !3910
  store i8 0, ptr %68, align 1, !dbg !10433, !tbaa !4126
  %69 = load ptr, ptr %t, align 8, !dbg !10434, !tbaa !3910
  %add.ptr59 = getelementptr inbounds i8, ptr %69, i64 1, !dbg !10435
  %call60 = call i32 @atoi(ptr noundef %add.ptr59) #19, !dbg !10436
  %conv61 = trunc i32 %call60 to i16, !dbg !10436
  %70 = load ptr, ptr %port.addr, align 8, !dbg !10437, !tbaa !3910
  store i16 %conv61, ptr %70, align 2, !dbg !10438, !tbaa !3915
  br label %if.end62, !dbg !10439

if.end62:                                         ; preds = %if.then58, %lor.lhs.false, %if.end48
  %71 = load ptr, ptr %s, align 8, !dbg !10440, !tbaa !3910
  %72 = load i8, ptr %71, align 1, !dbg !10442, !tbaa !4126
  %tobool63 = icmp ne i8 %72, 0, !dbg !10442
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !10443

if.then64:                                        ; preds = %if.end62
  store ptr @.str.312, ptr %s, align 8, !dbg !10444, !tbaa !3910
  br label %if.end65, !dbg !10445

if.end65:                                         ; preds = %if.then64, %if.end62
  %73 = load ptr, ptr %s, align 8, !dbg !10446, !tbaa !3910
  %74 = load ptr, ptr %host.addr, align 8, !dbg !10447, !tbaa !3910
  store ptr %73, ptr %74, align 8, !dbg !10448, !tbaa !3910
  %75 = load ptr, ptr %n, align 8, !dbg !10449, !tbaa !3910
  %add.ptr66 = getelementptr inbounds i8, ptr %75, i64 1, !dbg !10450
  %76 = load ptr, ptr %name.addr, align 8, !dbg !10451, !tbaa !3910
  store ptr %add.ptr66, ptr %76, align 8, !dbg !10452, !tbaa !3910
  store i32 0, ptr %retval, align 4, !dbg !10453
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !10453

cleanup67:                                        ; preds = %if.end65, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %t2) #16, !dbg !10454
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #16, !dbg !10454
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #16, !dbg !10454
  call void @llvm.lifetime.end.p0(i64 8, ptr %orig) #16, !dbg !10454
  call void @llvm.lifetime.end.p0(i64 8, ptr %s) #16, !dbg !10454
  %77 = load i32, ptr %retval, align 4, !dbg !10454
  ret i32 %77, !dbg !10454
}

declare !dbg !10455 ptr @rd_getaddrinfo(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) #3

declare !dbg !10458 ptr @rd_sockaddr2str(ptr noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_find_or_add_broker(ptr noundef %rk, i32 noundef %proto, ptr noundef %host, i16 noundef zeroext %port, ptr noundef %cnt) #0 !dbg !10461 {
entry:
  %rk.addr = alloca ptr, align 8
  %proto.addr = alloca i32, align 4
  %host.addr = alloca ptr, align 8
  %port.addr = alloca i16, align 2
  %cnt.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !10465, metadata !DIExpression()), !dbg !10471
  store i32 %proto, ptr %proto.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %proto.addr, metadata !10466, metadata !DIExpression()), !dbg !10472
  store ptr %host, ptr %host.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %host.addr, metadata !10467, metadata !DIExpression()), !dbg !10473
  store i16 %port, ptr %port.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %port.addr, metadata !10468, metadata !DIExpression()), !dbg !10474
  store ptr %cnt, ptr %cnt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %cnt.addr, metadata !10469, metadata !DIExpression()), !dbg !10475
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !10476
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !10470, metadata !DIExpression()), !dbg !10477
  store ptr null, ptr %rkb, align 8, !dbg !10477, !tbaa !3910
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !10478, !tbaa !3910
  %1 = load i32, ptr %proto.addr, align 4, !dbg !10480, !tbaa !4126
  %2 = load ptr, ptr %host.addr, align 8, !dbg !10481, !tbaa !3910
  %3 = load i16, ptr %port.addr, align 2, !dbg !10482, !tbaa !3915
  %call = call ptr @rd_kafka_broker_find(ptr noundef %0, i32 noundef %1, ptr noundef %2, i16 noundef zeroext %3), !dbg !10483
  store ptr %call, ptr %rkb, align 8, !dbg !10484, !tbaa !3910
  %tobool = icmp ne ptr %call, null, !dbg !10484
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10485

land.lhs.true:                                    ; preds = %entry
  %4 = load ptr, ptr %rkb, align 8, !dbg !10486, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 27, !dbg !10487
  %5 = load i32, ptr %rkb_source, align 8, !dbg !10487, !tbaa !4174
  %cmp = icmp eq i32 %5, 0, !dbg !10488
  br i1 %cmp, label %if.then, label %if.else, !dbg !10489

if.then:                                          ; preds = %land.lhs.true
  %6 = load ptr, ptr %cnt.addr, align 8, !dbg !10490, !tbaa !3910
  %7 = load i32, ptr %6, align 4, !dbg !10492, !tbaa !3959
  %inc = add nsw i32 %7, 1, !dbg !10492
  store i32 %inc, ptr %6, align 4, !dbg !10492, !tbaa !3959
  br label %if.end5, !dbg !10493

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load ptr, ptr %rk.addr, align 8, !dbg !10494, !tbaa !3910
  %9 = load i32, ptr %proto.addr, align 4, !dbg !10496, !tbaa !4126
  %10 = load ptr, ptr %host.addr, align 8, !dbg !10497, !tbaa !3910
  %11 = load i16, ptr %port.addr, align 2, !dbg !10498, !tbaa !3915
  %call1 = call ptr @rd_kafka_broker_add(ptr noundef %8, i32 noundef 0, i32 noundef %9, ptr noundef %10, i16 noundef zeroext %11, i32 noundef -1), !dbg !10499
  %cmp2 = icmp ne ptr %call1, null, !dbg !10500
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !10501

if.then3:                                         ; preds = %if.else
  %12 = load ptr, ptr %cnt.addr, align 8, !dbg !10502, !tbaa !3910
  %13 = load i32, ptr %12, align 4, !dbg !10503, !tbaa !3959
  %inc4 = add nsw i32 %13, 1, !dbg !10503
  store i32 %inc4, ptr %12, align 4, !dbg !10503, !tbaa !3959
  br label %if.end, !dbg !10504

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %14 = load ptr, ptr %rkb, align 8, !dbg !10505, !tbaa !3910
  %tobool6 = icmp ne ptr %14, null, !dbg !10505
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !10507

if.then7:                                         ; preds = %if.end5
  br label %do.body, !dbg !10508

do.body:                                          ; preds = %if.then7
  %15 = load ptr, ptr %rkb, align 8, !dbg !10509, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 31, !dbg !10509
  %call8 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt), !dbg !10509
  %cmp9 = icmp sgt i32 %call8, 0, !dbg !10509
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10512

if.then10:                                        ; preds = %do.body
  br label %do.end, !dbg !10509

if.end11:                                         ; preds = %do.body
  %16 = load ptr, ptr %rkb, align 8, !dbg !10512, !tbaa !3910
  call void @rd_kafka_broker_destroy_final(ptr noundef %16), !dbg !10512
  br label %do.cond, !dbg !10512

do.cond:                                          ; preds = %if.end11
  br label %do.end, !dbg !10512

do.end:                                           ; preds = %do.cond, %if.then10
  br label %if.end12, !dbg !10512

if.end12:                                         ; preds = %do.end, %if.end5
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !10513
  ret void, !dbg !10513
}

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_brokers_add(ptr noundef %rk, ptr noundef %brokerlist) #0 !dbg !10514 {
entry:
  %rk.addr = alloca ptr, align 8
  %brokerlist.addr = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !10518, metadata !DIExpression()), !dbg !10520
  store ptr %brokerlist, ptr %brokerlist.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %brokerlist.addr, metadata !10519, metadata !DIExpression()), !dbg !10521
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !10522, !tbaa !3910
  %1 = load ptr, ptr %brokerlist.addr, align 8, !dbg !10523, !tbaa !3910
  %call = call i32 @rd_kafka_brokers_add0(ptr noundef %0, ptr noundef %1, i8 noundef zeroext 0), !dbg !10524
  ret i32 %call, !dbg !10525
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_update(ptr noundef %rk, i32 noundef %proto, ptr noundef %mdb, ptr noundef %rkbp) #0 !dbg !10526 {
entry:
  %rk.addr = alloca ptr, align 8
  %proto.addr = alloca i32, align 4
  %mdb.addr = alloca ptr, align 8
  %rkbp.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  %nodename = alloca [256 x i8], align 16
  %needs_update = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %rko = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !10533, metadata !DIExpression()), !dbg !10545
  store i32 %proto, ptr %proto.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %proto.addr, metadata !10534, metadata !DIExpression()), !dbg !10546
  store ptr %mdb, ptr %mdb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %mdb.addr, metadata !10535, metadata !DIExpression()), !dbg !10547
  store ptr %rkbp, ptr %rkbp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbp.addr, metadata !10536, metadata !DIExpression()), !dbg !10548
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !10549
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !10537, metadata !DIExpression()), !dbg !10550
  call void @llvm.lifetime.start.p0(i64 256, ptr %nodename) #16, !dbg !10551
  tail call void @llvm.dbg.declare(metadata ptr %nodename, metadata !10538, metadata !DIExpression()), !dbg !10552
  call void @llvm.lifetime.start.p0(i64 4, ptr %needs_update) #16, !dbg !10553
  tail call void @llvm.dbg.declare(metadata ptr %needs_update, metadata !10539, metadata !DIExpression()), !dbg !10554
  store i32 0, ptr %needs_update, align 4, !dbg !10554, !tbaa !3959
  %arraydecay = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !10555
  %0 = load ptr, ptr %mdb.addr, align 8, !dbg !10556, !tbaa !3910
  %host = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %0, i32 0, i32 1, !dbg !10557
  %1 = load ptr, ptr %host, align 8, !dbg !10557, !tbaa !10558
  %2 = load ptr, ptr %mdb.addr, align 8, !dbg !10560, !tbaa !3910
  %port = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %2, i32 0, i32 2, !dbg !10561
  %3 = load i32, ptr %port, align 8, !dbg !10561, !tbaa !10562
  %conv = trunc i32 %3 to i16, !dbg !10560
  call void @rd_kafka_mk_nodename(ptr noundef %arraydecay, i64 noundef 256, ptr noundef %1, i16 noundef zeroext %conv), !dbg !10563
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !10564, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 24, !dbg !10564
  %call = call i32 @rwlock_wrlock(ptr noundef %rk_lock), !dbg !10564
  %5 = load ptr, ptr %rk.addr, align 8, !dbg !10565, !tbaa !3910
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 23, !dbg !10565
  %call1 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !10565
  %and = and i32 %call1, 1, !dbg !10565
  %conv2 = sext i32 %and to i64, !dbg !10565
  %expval = call i64 @llvm.expect.i64(i64 %conv2, i64 0), !dbg !10565
  %tobool = icmp ne i64 %expval, 0, !dbg !10565
  br i1 %tobool, label %if.then, label %if.end7, !dbg !10567

if.then:                                          ; preds = %entry
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !10568, !tbaa !3910
  %rk_lock3 = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 24, !dbg !10568
  %call4 = call i32 @rwlock_wrunlock(ptr noundef %rk_lock3), !dbg !10568
  %7 = load ptr, ptr %rkbp.addr, align 8, !dbg !10570, !tbaa !3910
  %tobool5 = icmp ne ptr %7, null, !dbg !10570
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10572

if.then6:                                         ; preds = %if.then
  %8 = load ptr, ptr %rkbp.addr, align 8, !dbg !10573, !tbaa !3910
  store ptr null, ptr %8, align 8, !dbg !10574, !tbaa !3910
  br label %if.end, !dbg !10575

if.end:                                           ; preds = %if.then6, %if.then
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10576

if.end7:                                          ; preds = %entry
  %9 = load ptr, ptr %rk.addr, align 8, !dbg !10577, !tbaa !3910
  %10 = load ptr, ptr %mdb.addr, align 8, !dbg !10577, !tbaa !3910
  %id = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %10, i32 0, i32 0, !dbg !10577
  %11 = load i32, ptr %id, align 8, !dbg !10577, !tbaa !10579
  %call8 = call ptr @rd_kafka_broker_find_by_nodeid0_fl(ptr noundef @__FUNCTION__.rd_kafka_broker_update, i32 noundef 5412, ptr noundef %9, i32 noundef %11, i32 noundef -1, i8 noundef zeroext 0), !dbg !10577
  store ptr %call8, ptr %rkb, align 8, !dbg !10580, !tbaa !3910
  %tobool9 = icmp ne ptr %call8, null, !dbg !10580
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !10581

if.then10:                                        ; preds = %if.end7
  %12 = load ptr, ptr %rkb, align 8, !dbg !10582, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 43, !dbg !10585
  %arraydecay11 = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !10582
  %arraydecay12 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !10586
  %call13 = call i32 @strcmp(ptr noundef %arraydecay11, ptr noundef %arraydecay12) #19, !dbg !10587
  %tobool14 = icmp ne i32 %call13, 0, !dbg !10587
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10588

if.then15:                                        ; preds = %if.then10
  store i32 1, ptr %needs_update, align 4, !dbg !10589, !tbaa !3959
  br label %if.end16, !dbg !10590

if.end16:                                         ; preds = %if.then15, %if.then10
  br label %if.end34, !dbg !10591

if.else:                                          ; preds = %if.end7
  %13 = load ptr, ptr %rk.addr, align 8, !dbg !10592, !tbaa !3910
  %14 = load i32, ptr %proto.addr, align 4, !dbg !10594, !tbaa !4126
  %15 = load ptr, ptr %mdb.addr, align 8, !dbg !10595, !tbaa !3910
  %host17 = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %15, i32 0, i32 1, !dbg !10596
  %16 = load ptr, ptr %host17, align 8, !dbg !10596, !tbaa !10558
  %17 = load ptr, ptr %mdb.addr, align 8, !dbg !10597, !tbaa !3910
  %port18 = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %17, i32 0, i32 2, !dbg !10598
  %18 = load i32, ptr %port18, align 8, !dbg !10598, !tbaa !10562
  %conv19 = trunc i32 %18 to i16, !dbg !10597
  %call20 = call ptr @rd_kafka_broker_find(ptr noundef %13, i32 noundef %14, ptr noundef %16, i16 noundef zeroext %conv19), !dbg !10599
  store ptr %call20, ptr %rkb, align 8, !dbg !10600, !tbaa !3910
  %tobool21 = icmp ne ptr %call20, null, !dbg !10600
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !10601

if.then22:                                        ; preds = %if.else
  store i32 1, ptr %needs_update, align 4, !dbg !10602, !tbaa !3959
  br label %if.end33, !dbg !10604

if.else23:                                        ; preds = %if.else
  %19 = load ptr, ptr %rk.addr, align 8, !dbg !10605, !tbaa !3910
  %20 = load i32, ptr %proto.addr, align 4, !dbg !10607, !tbaa !4126
  %21 = load ptr, ptr %mdb.addr, align 8, !dbg !10608, !tbaa !3910
  %host24 = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %21, i32 0, i32 1, !dbg !10609
  %22 = load ptr, ptr %host24, align 8, !dbg !10609, !tbaa !10558
  %23 = load ptr, ptr %mdb.addr, align 8, !dbg !10610, !tbaa !3910
  %port25 = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %23, i32 0, i32 2, !dbg !10611
  %24 = load i32, ptr %port25, align 8, !dbg !10611, !tbaa !10562
  %conv26 = trunc i32 %24 to i16, !dbg !10610
  %25 = load ptr, ptr %mdb.addr, align 8, !dbg !10612, !tbaa !3910
  %id27 = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %25, i32 0, i32 0, !dbg !10613
  %26 = load i32, ptr %id27, align 8, !dbg !10613, !tbaa !10579
  %call28 = call ptr @rd_kafka_broker_add(ptr noundef %19, i32 noundef 1, i32 noundef %20, ptr noundef %22, i16 noundef zeroext %conv26, i32 noundef %26), !dbg !10614
  store ptr %call28, ptr %rkb, align 8, !dbg !10615, !tbaa !3910
  %tobool29 = icmp ne ptr %call28, null, !dbg !10615
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !10616

if.then30:                                        ; preds = %if.else23
  %27 = load ptr, ptr %rkb, align 8, !dbg !10617, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 31, !dbg !10617
  %call31 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !10617
  br label %if.end32, !dbg !10619

if.end32:                                         ; preds = %if.then30, %if.else23
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then22
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end16
  %28 = load ptr, ptr %rk.addr, align 8, !dbg !10620, !tbaa !3910
  %rk_lock35 = getelementptr inbounds %struct.rd_kafka_s, ptr %28, i32 0, i32 24, !dbg !10620
  %call36 = call i32 @rwlock_wrunlock(ptr noundef %rk_lock35), !dbg !10620
  %29 = load ptr, ptr %rkb, align 8, !dbg !10621, !tbaa !3910
  %tobool37 = icmp ne ptr %29, null, !dbg !10621
  br i1 %tobool37, label %if.then38, label %if.end50, !dbg !10622

if.then38:                                        ; preds = %if.end34
  %30 = load i32, ptr %needs_update, align 4, !dbg !10623, !tbaa !3959
  %tobool39 = icmp ne i32 %30, 0, !dbg !10623
  br i1 %tobool39, label %if.then40, label %if.end49, !dbg !10624

if.then40:                                        ; preds = %if.then38
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !10625
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !10540, metadata !DIExpression()), !dbg !10626
  %call41 = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 7), !dbg !10627
  store ptr %call41, ptr %rko, align 8, !dbg !10628, !tbaa !3910
  %31 = load ptr, ptr %rko, align 8, !dbg !10629, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %31, i32 0, i32 15, !dbg !10630
  %nodename42 = getelementptr inbounds %struct.anon.68, ptr %rko_u, i32 0, i32 1, !dbg !10631
  %arraydecay43 = getelementptr inbounds [256 x i8], ptr %nodename42, i64 0, i64 0, !dbg !10629
  %arraydecay44 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !10632
  call void @rd_strlcpy(ptr noundef %arraydecay43, ptr noundef %arraydecay44, i64 noundef 256), !dbg !10633
  %32 = load ptr, ptr %mdb.addr, align 8, !dbg !10634, !tbaa !3910
  %id45 = getelementptr inbounds %struct.rd_kafka_metadata_broker, ptr %32, i32 0, i32 0, !dbg !10635
  %33 = load i32, ptr %id45, align 8, !dbg !10635, !tbaa !10579
  %34 = load ptr, ptr %rko, align 8, !dbg !10636, !tbaa !3910
  %rko_u46 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %34, i32 0, i32 15, !dbg !10637
  %nodeid = getelementptr inbounds %struct.anon.68, ptr %rko_u46, i32 0, i32 0, !dbg !10638
  store i32 %33, ptr %nodeid, align 8, !dbg !10639, !tbaa !4126
  %35 = load ptr, ptr %rkb, align 8, !dbg !10640, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 8, !dbg !10641
  %36 = load ptr, ptr %rkb_ops, align 8, !dbg !10641, !tbaa !5475
  %37 = load ptr, ptr %rko, align 8, !dbg !10642, !tbaa !3910
  %call47 = call ptr @rd_kafka_op_req(ptr noundef %36, ptr noundef %37, i32 noundef -1), !dbg !10643
  %call48 = call i32 @rd_kafka_op_err_destroy(ptr noundef %call47), !dbg !10644
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !10645
  br label %if.end49, !dbg !10646

if.end49:                                         ; preds = %if.then40, %if.then38
  br label %if.end50, !dbg !10647

if.end50:                                         ; preds = %if.end49, %if.end34
  %38 = load ptr, ptr %rkbp.addr, align 8, !dbg !10648, !tbaa !3910
  %tobool51 = icmp ne ptr %38, null, !dbg !10648
  br i1 %tobool51, label %if.then52, label %if.else53, !dbg !10650

if.then52:                                        ; preds = %if.end50
  %39 = load ptr, ptr %rkb, align 8, !dbg !10651, !tbaa !3910
  %40 = load ptr, ptr %rkbp.addr, align 8, !dbg !10652, !tbaa !3910
  store ptr %39, ptr %40, align 8, !dbg !10653, !tbaa !3910
  br label %if.end62, !dbg !10654

if.else53:                                        ; preds = %if.end50
  %41 = load ptr, ptr %rkb, align 8, !dbg !10655, !tbaa !3910
  %tobool54 = icmp ne ptr %41, null, !dbg !10655
  br i1 %tobool54, label %if.then55, label %if.end61, !dbg !10657

if.then55:                                        ; preds = %if.else53
  br label %do.body, !dbg !10658

do.body:                                          ; preds = %if.then55
  %42 = load ptr, ptr %rkb, align 8, !dbg !10659, !tbaa !3910
  %rkb_refcnt56 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 31, !dbg !10659
  %call57 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt56), !dbg !10659
  %cmp = icmp sgt i32 %call57, 0, !dbg !10659
  br i1 %cmp, label %if.then59, label %if.end60, !dbg !10662

if.then59:                                        ; preds = %do.body
  br label %do.end, !dbg !10659

if.end60:                                         ; preds = %do.body
  %43 = load ptr, ptr %rkb, align 8, !dbg !10662, !tbaa !3910
  call void @rd_kafka_broker_destroy_final(ptr noundef %43), !dbg !10662
  br label %do.cond, !dbg !10662

do.cond:                                          ; preds = %if.end60
  br label %do.end, !dbg !10662

do.end:                                           ; preds = %do.cond, %if.then59
  br label %if.end61, !dbg !10662

if.end61:                                         ; preds = %do.end, %if.else53
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then52
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10663
  br label %cleanup, !dbg !10663

cleanup:                                          ; preds = %if.end62, %if.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %needs_update) #16, !dbg !10663
  call void @llvm.lifetime.end.p0(i64 256, ptr %nodename) #16, !dbg !10663
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !10663
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !10663

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @rd_kafka_broker_find(ptr noundef %rk, i32 noundef %proto, ptr noundef %name, i16 noundef zeroext %port) #0 !dbg !10664 {
entry:
  %retval = alloca ptr, align 8
  %rk.addr = alloca ptr, align 8
  %proto.addr = alloca i32, align 4
  %name.addr = alloca ptr, align 8
  %port.addr = alloca i16, align 2
  %rkb = alloca ptr, align 8
  %nodename = alloca [256 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !10668, metadata !DIExpression()), !dbg !10674
  store i32 %proto, ptr %proto.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %proto.addr, metadata !10669, metadata !DIExpression()), !dbg !10675
  store ptr %name, ptr %name.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !10670, metadata !DIExpression()), !dbg !10676
  store i16 %port, ptr %port.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %port.addr, metadata !10671, metadata !DIExpression()), !dbg !10677
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !10678
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !10672, metadata !DIExpression()), !dbg !10679
  call void @llvm.lifetime.start.p0(i64 256, ptr %nodename) #16, !dbg !10680
  tail call void @llvm.dbg.declare(metadata ptr %nodename, metadata !10673, metadata !DIExpression()), !dbg !10681
  %arraydecay = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !10682
  %0 = load ptr, ptr %name.addr, align 8, !dbg !10683, !tbaa !3910
  %1 = load i16, ptr %port.addr, align 2, !dbg !10684, !tbaa !3915
  call void @rd_kafka_mk_nodename(ptr noundef %arraydecay, i64 noundef 256, ptr noundef %0, i16 noundef zeroext %1), !dbg !10685
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !10686, !tbaa !3910
  %rk_brokers = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 2, !dbg !10686
  %tqh_first = getelementptr inbounds %struct.anon.12, ptr %rk_brokers, i32 0, i32 0, !dbg !10686
  %3 = load ptr, ptr %tqh_first, align 8, !dbg !10686, !tbaa !5741
  store ptr %3, ptr %rkb, align 8, !dbg !10686, !tbaa !3910
  br label %for.cond, !dbg !10686

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load ptr, ptr %rkb, align 8, !dbg !10688, !tbaa !3910
  %cmp = icmp ne ptr %4, null, !dbg !10688
  br i1 %cmp, label %for.body, label %for.end, !dbg !10686

for.body:                                         ; preds = %for.cond
  %5 = load ptr, ptr %rkb, align 8, !dbg !10690, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 27, !dbg !10690
  %6 = load i32, ptr %rkb_source, align 8, !dbg !10690, !tbaa !4174
  %cmp1 = icmp eq i32 %6, 3, !dbg !10690
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10693

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10694

if.end:                                           ; preds = %for.body
  %7 = load ptr, ptr %rkb, align 8, !dbg !10695, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 9, !dbg !10695
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !10695
  %8 = load ptr, ptr %rk.addr, align 8, !dbg !10696, !tbaa !3910
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %8, i32 0, i32 23, !dbg !10696
  %call2 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !10696
  %and = and i32 %call2, 1, !dbg !10696
  %tobool = icmp ne i32 %and, 0, !dbg !10696
  br i1 %tobool, label %if.end13, label %land.lhs.true, !dbg !10698

land.lhs.true:                                    ; preds = %if.end
  %9 = load ptr, ptr %rkb, align 8, !dbg !10699, !tbaa !3910
  %rkb_proto = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 58, !dbg !10700
  %10 = load i32, ptr %rkb_proto, align 8, !dbg !10700, !tbaa !4314
  %11 = load i32, ptr %proto.addr, align 4, !dbg !10701, !tbaa !4126
  %cmp3 = icmp eq i32 %10, %11, !dbg !10702
  br i1 %cmp3, label %land.lhs.true4, label %if.end13, !dbg !10703

land.lhs.true4:                                   ; preds = %land.lhs.true
  %12 = load ptr, ptr %rkb, align 8, !dbg !10704, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 43, !dbg !10705
  %arraydecay5 = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !10704
  %arraydecay6 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !10706
  %call7 = call i32 @strcmp(ptr noundef %arraydecay5, ptr noundef %arraydecay6) #19, !dbg !10707
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10707
  br i1 %tobool8, label %if.end13, label %if.then9, !dbg !10708

if.then9:                                         ; preds = %land.lhs.true4
  %13 = load ptr, ptr %rkb, align 8, !dbg !10709, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 31, !dbg !10709
  %call10 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt, i32 noundef 1), !dbg !10709
  %14 = load ptr, ptr %rkb, align 8, !dbg !10711, !tbaa !3910
  %rkb_lock11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 9, !dbg !10711
  %call12 = call i32 @mtx_unlock(ptr noundef %rkb_lock11), !dbg !10711
  %15 = load ptr, ptr %rkb, align 8, !dbg !10712, !tbaa !3910
  store ptr %15, ptr %retval, align 8, !dbg !10713
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10713

if.end13:                                         ; preds = %land.lhs.true4, %land.lhs.true, %if.end
  %16 = load ptr, ptr %rkb, align 8, !dbg !10714, !tbaa !3910
  %rkb_lock14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 9, !dbg !10714
  %call15 = call i32 @mtx_unlock(ptr noundef %rkb_lock14), !dbg !10714
  br label %for.inc, !dbg !10715

for.inc:                                          ; preds = %if.end13, %if.then
  %17 = load ptr, ptr %rkb, align 8, !dbg !10688, !tbaa !3910
  %rkb_link = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 0, !dbg !10688
  %tqe_next = getelementptr inbounds %struct.anon, ptr %rkb_link, i32 0, i32 0, !dbg !10688
  %18 = load ptr, ptr %tqe_next, align 8, !dbg !10688, !tbaa !5799
  store ptr %18, ptr %rkb, align 8, !dbg !10688, !tbaa !3910
  br label %for.cond, !dbg !10688, !llvm.loop !10716

for.end:                                          ; preds = %for.cond
  store ptr null, ptr %retval, align 8, !dbg !10718
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10718

cleanup:                                          ; preds = %for.end, %if.then9
  call void @llvm.lifetime.end.p0(i64 256, ptr %nodename) #16, !dbg !10719
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !10719
  %19 = load ptr, ptr %retval, align 8, !dbg !10719
  ret ptr %19, !dbg !10719
}

declare !dbg !10720 i32 @rd_kafka_op_err_destroy(ptr noundef) #3

declare !dbg !10723 ptr @rd_kafka_op_req(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_broker_id(ptr noundef %rkb) #0 !dbg !10726 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %broker_id = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10730, metadata !DIExpression()), !dbg !10732
  call void @llvm.lifetime.start.p0(i64 4, ptr %broker_id) #16, !dbg !10733
  tail call void @llvm.dbg.declare(metadata ptr %broker_id, metadata !10731, metadata !DIExpression()), !dbg !10734
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !10735, !tbaa !3910
  %tobool = icmp ne ptr %0, null, !dbg !10735
  %lnot = xor i1 %tobool, true, !dbg !10735
  %lnot.ext = zext i1 %lnot to i32, !dbg !10735
  %conv = sext i32 %lnot.ext to i64, !dbg !10735
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10735
  %tobool1 = icmp ne i64 %expval, 0, !dbg !10735
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10737

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !10738
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10738

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !10739, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 30, !dbg !10741
  %2 = load i64, ptr %rkb_thread, align 8, !dbg !10741, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %2), !dbg !10742
  %tobool2 = icmp ne i32 %call, 0, !dbg !10742
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10743

if.then3:                                         ; preds = %if.end
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !10744, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 1, !dbg !10745
  %4 = load i32, ptr %rkb_nodeid, align 8, !dbg !10745, !tbaa !4311
  store i32 %4, ptr %retval, align 4, !dbg !10746
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10746

if.end4:                                          ; preds = %if.end
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !10747, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 9, !dbg !10747
  %call5 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !10747
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !10748, !tbaa !3910
  %rkb_nodeid6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 1, !dbg !10749
  %7 = load i32, ptr %rkb_nodeid6, align 8, !dbg !10749, !tbaa !4311
  store i32 %7, ptr %broker_id, align 4, !dbg !10750, !tbaa !3959
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !10751, !tbaa !3910
  %rkb_lock7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 9, !dbg !10751
  %call8 = call i32 @mtx_unlock(ptr noundef %rkb_lock7), !dbg !10751
  %9 = load i32, ptr %broker_id, align 4, !dbg !10752, !tbaa !3959
  store i32 %9, ptr %retval, align 4, !dbg !10753
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10753

cleanup:                                          ; preds = %if.end4, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %broker_id) #16, !dbg !10754
  %10 = load i32, ptr %retval, align 4, !dbg !10754
  ret i32 %10, !dbg !10754
}

; Function Attrs: nounwind uwtable
define ptr @rd_kafka_broker_name(ptr noundef %rkb) #0 !dbg !3179 {
entry:
  %rkb.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !3183, metadata !DIExpression()), !dbg !10755
  %0 = call align 4 ptr @llvm.threadlocal.address.p0(ptr align 4 @rd_kafka_broker_name.reti), !dbg !10756
  %1 = load i32, ptr %0, align 4, !dbg !10756, !tbaa !3959
  %add = add nsw i32 %1, 1, !dbg !10757
  %rem = srem i32 %add, 4, !dbg !10758
  %2 = call align 4 ptr @llvm.threadlocal.address.p0(ptr align 4 @rd_kafka_broker_name.reti), !dbg !10759
  store i32 %rem, ptr %2, align 4, !dbg !10760, !tbaa !3959
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !10761, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 49, !dbg !10762
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !10763
  %4 = call align 16 ptr @llvm.threadlocal.address.p0(ptr align 16 @rd_kafka_broker_name.ret), !dbg !10764
  %5 = call align 4 ptr @llvm.threadlocal.address.p0(ptr align 4 @rd_kafka_broker_name.reti), !dbg !10764
  %6 = load i32, ptr %5, align 4, !dbg !10764, !tbaa !3959
  %idxprom = sext i32 %6 to i64, !dbg !10764
  %arrayidx = getelementptr inbounds [4 x [256 x i8]], ptr %4, i64 0, i64 %idxprom, !dbg !10764
  %arraydecay = getelementptr inbounds [256 x i8], ptr %arrayidx, i64 0, i64 0, !dbg !10764
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !10764, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 48, !dbg !10764
  %8 = load ptr, ptr %rkb_logname, align 8, !dbg !10764, !tbaa !4628
  %call1 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay, i64 noundef 256, ptr noundef @.str.26, ptr noundef %8) #16, !dbg !10764
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !10765, !tbaa !3910
  %rkb_logname_lock2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 49, !dbg !10766
  %call3 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock2), !dbg !10767
  %10 = call align 16 ptr @llvm.threadlocal.address.p0(ptr align 16 @rd_kafka_broker_name.ret), !dbg !10768
  %11 = call align 4 ptr @llvm.threadlocal.address.p0(ptr align 4 @rd_kafka_broker_name.reti), !dbg !10769
  %12 = load i32, ptr %11, align 4, !dbg !10769, !tbaa !3959
  %idxprom4 = sext i32 %12 to i64, !dbg !10768
  %arrayidx5 = getelementptr inbounds [4 x [256 x i8]], ptr %10, i64 0, i64 %idxprom4, !dbg !10768
  %arraydecay6 = getelementptr inbounds [256 x i8], ptr %arrayidx5, i64 0, i64 0, !dbg !10768
  ret ptr %arraydecay6, !dbg !10770
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare nonnull ptr @llvm.threadlocal.address.p0(ptr nonnull) #12

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_wakeup(ptr noundef %rkb, ptr noundef %reason) #0 !dbg !10771 {
entry:
  %rkb.addr = alloca ptr, align 8
  %reason.addr = alloca ptr, align 8
  %rko = alloca ptr, align 8
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10773, metadata !DIExpression()), !dbg !10781
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !10774, metadata !DIExpression()), !dbg !10782
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !10783
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !10775, metadata !DIExpression()), !dbg !10784
  %call = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 31), !dbg !10785
  store ptr %call, ptr %rko, align 8, !dbg !10784, !tbaa !3910
  %0 = load ptr, ptr %rko, align 8, !dbg !10786, !tbaa !3910
  %rko_prio = getelementptr inbounds %struct.rd_kafka_op_s, ptr %0, i32 0, i32 8, !dbg !10786
  store i32 3, ptr %rko_prio, align 4, !dbg !10786, !tbaa !10092
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !10787, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 8, !dbg !10788
  %2 = load ptr, ptr %rkb_ops, align 8, !dbg !10788, !tbaa !5475
  %3 = load ptr, ptr %rko, align 8, !dbg !10789, !tbaa !3910
  %call1 = call i32 @rd_kafka_q_enq(ptr noundef %2, ptr noundef %3), !dbg !10790
  br label %do.body, !dbg !10791

do.body:                                          ; preds = %entry
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !10792, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 32, !dbg !10792
  %5 = load ptr, ptr %rkb_rk, align 8, !dbg !10792, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %5, i32 0, i32 18, !dbg !10792
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !10792
  %6 = load i32, ptr %debug, align 8, !dbg !10792, !tbaa !4140
  %and = and i32 %6, 32, !dbg !10792
  %conv = sext i32 %and to i64, !dbg !10792
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10792
  %tobool = icmp ne i64 %expval, 0, !dbg !10792
  br i1 %tobool, label %if.then, label %if.end, !dbg !10793

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !10794

do.body2:                                         ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !10795
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !10776, metadata !DIExpression()), !dbg !10795
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !10795, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 49, !dbg !10795
  %call3 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !10795
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !10795
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !10795, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 48, !dbg !10795
  %9 = load ptr, ptr %rkb_logname, align 8, !dbg !10795, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %9, i64 noundef 256), !dbg !10795
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !10795, !tbaa !3910
  %rkb_logname_lock4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 49, !dbg !10795
  %call5 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock4), !dbg !10795
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !10795, !tbaa !3910
  %rkb_rk6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 32, !dbg !10795
  %12 = load ptr, ptr %rkb_rk6, align 8, !dbg !10795, !tbaa !4139
  %rk_conf7 = getelementptr inbounds %struct.rd_kafka_s, ptr %12, i32 0, i32 18, !dbg !10795
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !10795, !tbaa !3910
  %rkb_rk8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 32, !dbg !10795
  %14 = load ptr, ptr %rkb_rk8, align 8, !dbg !10795, !tbaa !4139
  %arraydecay9 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !10795
  %15 = load ptr, ptr %reason.addr, align 8, !dbg !10795, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf7, ptr noundef %14, ptr noundef %arraydecay9, i32 noundef 7, i32 noundef 32, ptr noundef @.str.81, ptr noundef @.str.82, ptr noundef %15), !dbg !10795
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !10794
  br label %do.cond, !dbg !10795

do.cond:                                          ; preds = %do.body2
  br label %do.end, !dbg !10795

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !10794

if.end:                                           ; preds = %do.end, %do.body
  br label %do.cond10, !dbg !10793

do.cond10:                                        ; preds = %if.end
  br label %do.end11, !dbg !10793

do.end11:                                         ; preds = %do.cond10
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !10796
  ret void, !dbg !10796
}

; Function Attrs: nounwind uwtable
define i32 @rd_kafka_all_brokers_wakeup(ptr noundef %rk, i32 noundef %min_state, ptr noundef %reason) #0 !dbg !10797 {
entry:
  %rk.addr = alloca ptr, align 8
  %min_state.addr = alloca i32, align 4
  %reason.addr = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %rkb = alloca ptr, align 8
  %do_wakeup = alloca i32, align 4
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !10801, metadata !DIExpression()), !dbg !10810
  store i32 %min_state, ptr %min_state.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %min_state.addr, metadata !10802, metadata !DIExpression()), !dbg !10811
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !10803, metadata !DIExpression()), !dbg !10812
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !10813
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !10804, metadata !DIExpression()), !dbg !10814
  store i32 0, ptr %cnt, align 4, !dbg !10814, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !10815
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !10805, metadata !DIExpression()), !dbg !10816
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !10817, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 24, !dbg !10817
  %call = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !10817
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !10818, !tbaa !3910
  %rk_brokers = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 2, !dbg !10818
  %tqh_first = getelementptr inbounds %struct.anon.12, ptr %rk_brokers, i32 0, i32 0, !dbg !10818
  %2 = load ptr, ptr %tqh_first, align 8, !dbg !10818, !tbaa !5741
  store ptr %2, ptr %rkb, align 8, !dbg !10818, !tbaa !3910
  br label %for.cond, !dbg !10818

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load ptr, ptr %rkb, align 8, !dbg !10819, !tbaa !3910
  %cmp = icmp ne ptr %3, null, !dbg !10819
  br i1 %cmp, label %for.body, label %for.end, !dbg !10818

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %do_wakeup) #16, !dbg !10820
  tail call void @llvm.dbg.declare(metadata ptr %do_wakeup, metadata !10806, metadata !DIExpression()), !dbg !10821
  %4 = load ptr, ptr %rkb, align 8, !dbg !10822, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 9, !dbg !10822
  %call1 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !10822
  %5 = load ptr, ptr %rkb, align 8, !dbg !10823, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 19, !dbg !10824
  %6 = load i32, ptr %rkb_state, align 4, !dbg !10824, !tbaa !4130
  %7 = load i32, ptr %min_state.addr, align 4, !dbg !10825, !tbaa !3959
  %cmp2 = icmp sge i32 %6, %7, !dbg !10826
  %conv = zext i1 %cmp2 to i32, !dbg !10826
  store i32 %conv, ptr %do_wakeup, align 4, !dbg !10827, !tbaa !3959
  %8 = load ptr, ptr %rkb, align 8, !dbg !10828, !tbaa !3910
  %rkb_lock3 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 9, !dbg !10828
  %call4 = call i32 @mtx_unlock(ptr noundef %rkb_lock3), !dbg !10828
  %9 = load i32, ptr %do_wakeup, align 4, !dbg !10829, !tbaa !3959
  %tobool = icmp ne i32 %9, 0, !dbg !10829
  br i1 %tobool, label %if.then, label %if.end, !dbg !10831

if.then:                                          ; preds = %for.body
  %10 = load ptr, ptr %rkb, align 8, !dbg !10832, !tbaa !3910
  %11 = load ptr, ptr %reason.addr, align 8, !dbg !10834, !tbaa !3910
  call void @rd_kafka_broker_wakeup(ptr noundef %10, ptr noundef %11), !dbg !10835
  %12 = load i32, ptr %cnt, align 4, !dbg !10836, !tbaa !3959
  %add = add nsw i32 %12, 1, !dbg !10836
  store i32 %add, ptr %cnt, align 4, !dbg !10836, !tbaa !3959
  br label %if.end, !dbg !10837

if.end:                                           ; preds = %if.then, %for.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %do_wakeup) #16, !dbg !10838
  br label %for.inc, !dbg !10839

for.inc:                                          ; preds = %if.end
  %13 = load ptr, ptr %rkb, align 8, !dbg !10819, !tbaa !3910
  %rkb_link = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 0, !dbg !10819
  %tqe_next = getelementptr inbounds %struct.anon, ptr %rkb_link, i32 0, i32 0, !dbg !10819
  %14 = load ptr, ptr %tqe_next, align 8, !dbg !10819, !tbaa !5799
  store ptr %14, ptr %rkb, align 8, !dbg !10819, !tbaa !3910
  br label %for.cond, !dbg !10819, !llvm.loop !10840

for.end:                                          ; preds = %for.cond
  %15 = load ptr, ptr %rk.addr, align 8, !dbg !10842, !tbaa !3910
  %rk_lock5 = getelementptr inbounds %struct.rd_kafka_s, ptr %15, i32 0, i32 24, !dbg !10842
  %call6 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock5), !dbg !10842
  %16 = load i32, ptr %cnt, align 4, !dbg !10843, !tbaa !3959
  %cmp7 = icmp sgt i32 %16, 0, !dbg !10845
  br i1 %cmp7, label %if.then9, label %if.end17, !dbg !10846

if.then9:                                         ; preds = %for.end
  br label %do.body, !dbg !10847

do.body:                                          ; preds = %if.then9
  %17 = load ptr, ptr %rk.addr, align 8, !dbg !10848, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %17, i32 0, i32 18, !dbg !10848
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !10848
  %18 = load i32, ptr %debug, align 8, !dbg !10848, !tbaa !4140
  %and = and i32 %18, 34, !dbg !10848
  %conv10 = sext i32 %and to i64, !dbg !10848
  %expval = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !10848
  %tobool11 = icmp ne i64 %expval, 0, !dbg !10848
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !10851

if.then12:                                        ; preds = %do.body
  %19 = load ptr, ptr %rk.addr, align 8, !dbg !10848, !tbaa !3910
  %rk_conf13 = getelementptr inbounds %struct.rd_kafka_s, ptr %19, i32 0, i32 18, !dbg !10848
  %20 = load ptr, ptr %rk.addr, align 8, !dbg !10848, !tbaa !3910
  %21 = load i32, ptr %cnt, align 4, !dbg !10848, !tbaa !3959
  %22 = load i32, ptr %cnt, align 4, !dbg !10848, !tbaa !3959
  %cmp14 = icmp sgt i32 %22, 1, !dbg !10848
  %23 = zext i1 %cmp14 to i64, !dbg !10848
  %cond = select i1 %cmp14, ptr @.str.84, ptr @.str.85, !dbg !10848
  %24 = load i32, ptr %min_state.addr, align 4, !dbg !10848, !tbaa !3959
  %idxprom = sext i32 %24 to i64, !dbg !10848
  %arrayidx = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom, !dbg !10848
  %25 = load ptr, ptr %arrayidx, align 8, !dbg !10848, !tbaa !3910
  %26 = load ptr, ptr %reason.addr, align 8, !dbg !10848, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf13, ptr noundef %20, ptr noundef null, i32 noundef 7, i32 noundef 34, ptr noundef @.str.81, ptr noundef @.str.83, i32 noundef %21, ptr noundef %cond, ptr noundef %25, ptr noundef %26), !dbg !10848
  br label %if.end16, !dbg !10848

if.end16:                                         ; preds = %if.then12, %do.body
  br label %do.cond, !dbg !10851

do.cond:                                          ; preds = %if.end16
  br label %do.end, !dbg !10851

do.end:                                           ; preds = %do.cond
  br label %if.end17, !dbg !10851

if.end17:                                         ; preds = %do.end, %for.end
  %27 = load i32, ptr %cnt, align 4, !dbg !10852, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !10853
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !10853
  ret i32 %27, !dbg !10854
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_filter_never_connected(ptr noundef %rkb, ptr noundef %opaque) #0 !dbg !10855 {
entry:
  %rkb.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10857, metadata !DIExpression()), !dbg !10859
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !10858, metadata !DIExpression()), !dbg !10860
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !10861, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 28, !dbg !10862
  %connects = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 13, !dbg !10863
  %call = call i32 @rd_atomic32_get(ptr noundef %connects), !dbg !10864
  ret i32 %call, !dbg !10865
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_purge_queues(ptr noundef %rkb, i32 noundef %purge_flags, ptr %replyq.coerce0, i32 %replyq.coerce1) #0 !dbg !10866 {
entry:
  %replyq = alloca %struct.rd_kafka_replyq_s, align 8
  %rkb.addr = alloca ptr, align 8
  %purge_flags.addr = alloca i32, align 4
  %rko = alloca ptr, align 8
  %0 = getelementptr inbounds { ptr, i32 }, ptr %replyq, i32 0, i32 0
  store ptr %replyq.coerce0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i32 }, ptr %replyq, i32 0, i32 1
  store i32 %replyq.coerce1, ptr %1, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10870, metadata !DIExpression()), !dbg !10874
  store i32 %purge_flags, ptr %purge_flags.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %purge_flags.addr, metadata !10871, metadata !DIExpression()), !dbg !10875
  tail call void @llvm.dbg.declare(metadata ptr %replyq, metadata !10872, metadata !DIExpression()), !dbg !10876
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !10877
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !10873, metadata !DIExpression()), !dbg !10878
  %call = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 50), !dbg !10879
  store ptr %call, ptr %rko, align 8, !dbg !10878, !tbaa !3910
  %2 = load ptr, ptr %rko, align 8, !dbg !10880, !tbaa !3910
  %rko_prio = getelementptr inbounds %struct.rd_kafka_op_s, ptr %2, i32 0, i32 8, !dbg !10880
  store i32 3, ptr %rko_prio, align 4, !dbg !10880, !tbaa !10092
  %3 = load ptr, ptr %rko, align 8, !dbg !10881, !tbaa !3910
  %rko_replyq = getelementptr inbounds %struct.rd_kafka_op_s, ptr %3, i32 0, i32 10, !dbg !10882
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %rko_replyq, ptr align 8 %replyq, i64 16, i1 false), !dbg !10883, !tbaa.struct !5433
  %4 = load i32, ptr %purge_flags.addr, align 4, !dbg !10884, !tbaa !3959
  %5 = load ptr, ptr %rko, align 8, !dbg !10885, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %5, i32 0, i32 15, !dbg !10886
  %flags = getelementptr inbounds %struct.anon.79, ptr %rko_u, i32 0, i32 0, !dbg !10887
  store i32 %4, ptr %flags, align 8, !dbg !10888, !tbaa !4126
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !10889, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 8, !dbg !10890
  %7 = load ptr, ptr %rkb_ops, align 8, !dbg !10890, !tbaa !5475
  %8 = load ptr, ptr %rko, align 8, !dbg !10891, !tbaa !3910
  %call1 = call i32 @rd_kafka_q_enq(ptr noundef %7, ptr noundef %8), !dbg !10892
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !10893
  ret void, !dbg !10893
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_active_toppar_add(ptr noundef %rkb, ptr noundef %rktp, ptr noundef %reason) #0 !dbg !10894 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rktp.addr = alloca ptr, align 8
  %reason.addr = alloca ptr, align 8
  %is_consumer = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10898, metadata !DIExpression()), !dbg !10907
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !10899, metadata !DIExpression()), !dbg !10908
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !10900, metadata !DIExpression()), !dbg !10909
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_consumer) #16, !dbg !10910
  tail call void @llvm.dbg.declare(metadata ptr %is_consumer, metadata !10901, metadata !DIExpression()), !dbg !10911
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !10912, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !10913
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !10913, !tbaa !4139
  %rk_type = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 25, !dbg !10914
  %2 = load i32, ptr %rk_type, align 8, !dbg !10914, !tbaa !10915
  %cmp = icmp eq i32 %2, 1, !dbg !10916
  %conv = zext i1 %cmp to i32, !dbg !10916
  store i32 %conv, ptr %is_consumer, align 4, !dbg !10911, !tbaa !3959
  %3 = load i32, ptr %is_consumer, align 4, !dbg !10917, !tbaa !3959
  %tobool = icmp ne i32 %3, 0, !dbg !10917
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10919

land.lhs.true:                                    ; preds = %entry
  %4 = load ptr, ptr %rktp.addr, align 8, !dbg !10920, !tbaa !3910
  %rktp_fetch = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %4, i32 0, i32 18, !dbg !10921
  %5 = load i32, ptr %rktp_fetch, align 8, !dbg !10921, !tbaa !10922
  %tobool1 = icmp ne i32 %5, 0, !dbg !10920
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10923

if.then:                                          ; preds = %land.lhs.true
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10924

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %do.body, !dbg !10925

do.body:                                          ; preds = %if.end
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !10926, !tbaa !3910
  %rkb_active_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 13, !dbg !10926
  %7 = load ptr, ptr %rktp.addr, align 8, !dbg !10926, !tbaa !3910
  %rktp_activelink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %7, i32 0, i32 2, !dbg !10926
  %cqe_next = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink, i32 0, i32 0, !dbg !10926
  store ptr %rkb_active_toppars, ptr %cqe_next, align 8, !dbg !10926, !tbaa !10928
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !10926, !tbaa !3910
  %rkb_active_toppars2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 13, !dbg !10926
  %cqh_last = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars2, i32 0, i32 1, !dbg !10926
  %9 = load ptr, ptr %cqh_last, align 8, !dbg !10926, !tbaa !9036
  %10 = load ptr, ptr %rktp.addr, align 8, !dbg !10926, !tbaa !3910
  %rktp_activelink3 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %10, i32 0, i32 2, !dbg !10926
  %cqe_prev = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink3, i32 0, i32 1, !dbg !10926
  store ptr %9, ptr %cqe_prev, align 8, !dbg !10926, !tbaa !10929
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !10930, !tbaa !3910
  %rkb_active_toppars4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 13, !dbg !10930
  %cqh_first = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars4, i32 0, i32 0, !dbg !10930
  %12 = load ptr, ptr %cqh_first, align 8, !dbg !10930, !tbaa !9035
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !10930, !tbaa !3910
  %rkb_active_toppars5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 13, !dbg !10930
  %call = call ptr @__launder_type(ptr noundef %rkb_active_toppars5), !dbg !10930
  %cmp6 = icmp eq ptr %12, %call, !dbg !10930
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !10926

if.then8:                                         ; preds = %do.body
  %14 = load ptr, ptr %rktp.addr, align 8, !dbg !10930, !tbaa !3910
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !10930, !tbaa !3910
  %rkb_active_toppars9 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 13, !dbg !10930
  %cqh_first10 = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars9, i32 0, i32 0, !dbg !10930
  store ptr %14, ptr %cqh_first10, align 8, !dbg !10930, !tbaa !9035
  br label %if.end15, !dbg !10930

if.else:                                          ; preds = %do.body
  %16 = load ptr, ptr %rktp.addr, align 8, !dbg !10930, !tbaa !3910
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !10930, !tbaa !3910
  %rkb_active_toppars11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 13, !dbg !10930
  %cqh_last12 = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars11, i32 0, i32 1, !dbg !10930
  %18 = load ptr, ptr %cqh_last12, align 8, !dbg !10930, !tbaa !9036
  %rktp_activelink13 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %18, i32 0, i32 2, !dbg !10930
  %cqe_next14 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink13, i32 0, i32 0, !dbg !10930
  store ptr %16, ptr %cqe_next14, align 8, !dbg !10930, !tbaa !10928
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  %19 = load ptr, ptr %rktp.addr, align 8, !dbg !10926, !tbaa !3910
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !10926, !tbaa !3910
  %rkb_active_toppars16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 13, !dbg !10926
  %cqh_last17 = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars16, i32 0, i32 1, !dbg !10926
  store ptr %19, ptr %cqh_last17, align 8, !dbg !10926, !tbaa !9036
  br label %do.cond, !dbg !10926

do.cond:                                          ; preds = %if.end15
  br label %do.end, !dbg !10926

do.end:                                           ; preds = %do.cond
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !10932, !tbaa !3910
  %rkb_active_toppar_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 14, !dbg !10933
  %22 = load i32, ptr %rkb_active_toppar_cnt, align 8, !dbg !10934, !tbaa !9782
  %inc = add nsw i32 %22, 1, !dbg !10934
  store i32 %inc, ptr %rkb_active_toppar_cnt, align 8, !dbg !10934, !tbaa !9782
  %23 = load i32, ptr %is_consumer, align 4, !dbg !10935, !tbaa !3959
  %tobool18 = icmp ne i32 %23, 0, !dbg !10935
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !10937

if.then19:                                        ; preds = %do.end
  %24 = load ptr, ptr %rktp.addr, align 8, !dbg !10938, !tbaa !3910
  %rktp_fetch20 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %24, i32 0, i32 18, !dbg !10939
  store i32 1, ptr %rktp_fetch20, align 8, !dbg !10940, !tbaa !10922
  br label %if.end21, !dbg !10938

if.end21:                                         ; preds = %if.then19, %do.end
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !10941, !tbaa !3910
  %rkb_active_toppar_cnt22 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 14, !dbg !10941
  %26 = load i32, ptr %rkb_active_toppar_cnt22, align 8, !dbg !10941, !tbaa !9782
  %cmp23 = icmp eq i32 %26, 1, !dbg !10941
  %conv24 = zext i1 %cmp23 to i32, !dbg !10941
  %conv25 = sext i32 %conv24 to i64, !dbg !10941
  %expval = call i64 @llvm.expect.i64(i64 %conv25, i64 0), !dbg !10941
  %tobool26 = icmp ne i64 %expval, 0, !dbg !10941
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !10943

if.then27:                                        ; preds = %if.end21
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !10944, !tbaa !3910
  %28 = load ptr, ptr %rktp.addr, align 8, !dbg !10945, !tbaa !3910
  call void @rd_kafka_broker_active_toppar_next(ptr noundef %27, ptr noundef %28), !dbg !10946
  br label %if.end28, !dbg !10946

if.end28:                                         ; preds = %if.then27, %if.end21
  br label %do.body29, !dbg !10947

do.body29:                                        ; preds = %if.end28
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !10948, !tbaa !3910
  %rkb_rk30 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 32, !dbg !10948
  %30 = load ptr, ptr %rkb_rk30, align 8, !dbg !10948, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %30, i32 0, i32 18, !dbg !10948
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !10948
  %31 = load i32, ptr %debug, align 8, !dbg !10948, !tbaa !4140
  %and = and i32 %31, 4, !dbg !10948
  %conv31 = sext i32 %and to i64, !dbg !10948
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0), !dbg !10948
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !10948
  br i1 %tobool33, label %if.then34, label %if.end56, !dbg !10949

if.then34:                                        ; preds = %do.body29
  br label %do.body35, !dbg !10950

do.body35:                                        ; preds = %if.then34
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !10951
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !10902, metadata !DIExpression()), !dbg !10951
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !10951, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 49, !dbg !10951
  %call36 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !10951
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !10951
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !10951, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 48, !dbg !10951
  %34 = load ptr, ptr %rkb_logname, align 8, !dbg !10951, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %34, i64 noundef 256), !dbg !10951
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !10951, !tbaa !3910
  %rkb_logname_lock37 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 49, !dbg !10951
  %call38 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock37), !dbg !10951
  %36 = load ptr, ptr %rkb.addr, align 8, !dbg !10951, !tbaa !3910
  %rkb_rk39 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 32, !dbg !10951
  %37 = load ptr, ptr %rkb_rk39, align 8, !dbg !10951, !tbaa !4139
  %rk_conf40 = getelementptr inbounds %struct.rd_kafka_s, ptr %37, i32 0, i32 18, !dbg !10951
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !10951, !tbaa !3910
  %rkb_rk41 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 32, !dbg !10951
  %39 = load ptr, ptr %rkb_rk41, align 8, !dbg !10951, !tbaa !4139
  %arraydecay42 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !10951
  %40 = load ptr, ptr %rktp.addr, align 8, !dbg !10951, !tbaa !3910
  %rktp_rkt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %40, i32 0, i32 6, !dbg !10951
  %41 = load ptr, ptr %rktp_rkt, align 8, !dbg !10951, !tbaa !8643
  %rkt_topic = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %41, i32 0, i32 4, !dbg !10951
  %42 = load ptr, ptr %rkt_topic, align 8, !dbg !10951, !tbaa !8676
  %len = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %42, i32 0, i32 0, !dbg !10951
  %43 = load i32, ptr %len, align 8, !dbg !10951, !tbaa !8677
  %cmp43 = icmp eq i32 %43, -1, !dbg !10951
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !10951

cond.true:                                        ; preds = %do.body35
  br label %cond.end, !dbg !10951

cond.false:                                       ; preds = %do.body35
  %44 = load ptr, ptr %rktp.addr, align 8, !dbg !10951, !tbaa !3910
  %rktp_rkt45 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %44, i32 0, i32 6, !dbg !10951
  %45 = load ptr, ptr %rktp_rkt45, align 8, !dbg !10951, !tbaa !8643
  %rkt_topic46 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %45, i32 0, i32 4, !dbg !10951
  %46 = load ptr, ptr %rkt_topic46, align 8, !dbg !10951, !tbaa !8676
  %len47 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %46, i32 0, i32 0, !dbg !10951
  %47 = load i32, ptr %len47, align 8, !dbg !10951, !tbaa !8677
  br label %cond.end, !dbg !10951

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %47, %cond.false ], !dbg !10951
  %48 = load ptr, ptr %rktp.addr, align 8, !dbg !10951, !tbaa !3910
  %rktp_rkt48 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %48, i32 0, i32 6, !dbg !10951
  %49 = load ptr, ptr %rktp_rkt48, align 8, !dbg !10951, !tbaa !8643
  %rkt_topic49 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %49, i32 0, i32 4, !dbg !10951
  %50 = load ptr, ptr %rkt_topic49, align 8, !dbg !10951, !tbaa !8676
  %str = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %50, i32 0, i32 1, !dbg !10951
  %51 = load ptr, ptr %str, align 8, !dbg !10951, !tbaa !8679
  %52 = load ptr, ptr %rktp.addr, align 8, !dbg !10951, !tbaa !3910
  %rktp_partition = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %52, i32 0, i32 7, !dbg !10951
  %53 = load i32, ptr %rktp_partition, align 8, !dbg !10951, !tbaa !8680
  %54 = load i32, ptr %is_consumer, align 4, !dbg !10951, !tbaa !3959
  %tobool50 = icmp ne i32 %54, 0, !dbg !10951
  %55 = zext i1 %tobool50 to i64, !dbg !10951
  %cond51 = select i1 %tobool50, ptr @.str.91, ptr @.str.92, !dbg !10951
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !10951, !tbaa !3910
  %rkb_active_toppar_cnt52 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 14, !dbg !10951
  %57 = load i32, ptr %rkb_active_toppar_cnt52, align 8, !dbg !10951, !tbaa !9782
  %58 = load ptr, ptr %rktp.addr, align 8, !dbg !10951, !tbaa !3910
  %rktp_fetch_version = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %58, i32 0, i32 26, !dbg !10951
  %59 = load i32, ptr %rktp_fetch_version, align 8, !dbg !10951, !tbaa !10952
  %60 = load ptr, ptr %rktp.addr, align 8, !dbg !10951, !tbaa !3910
  %rktp_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %60, i32 0, i32 16, !dbg !10951
  %call53 = call i32 @rd_kafka_msgq_len(ptr noundef %rktp_msgq), !dbg !10951
  %61 = load ptr, ptr %reason.addr, align 8, !dbg !10951, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf40, ptr noundef %39, ptr noundef %arraydecay42, i32 noundef 7, i32 noundef 4, ptr noundef @.str.89, ptr noundef @.str.90, i32 noundef %cond, ptr noundef %51, i32 noundef %53, ptr noundef %cond51, i32 noundef %57, i32 noundef %59, i32 noundef %call53, ptr noundef %61), !dbg !10951
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !10950
  br label %do.cond54, !dbg !10951

do.cond54:                                        ; preds = %cond.end
  br label %do.end55, !dbg !10951

do.end55:                                         ; preds = %do.cond54
  br label %if.end56, !dbg !10950

if.end56:                                         ; preds = %do.end55, %do.body29
  br label %do.cond57, !dbg !10949

do.cond57:                                        ; preds = %if.end56
  br label %do.end58, !dbg !10949

do.end58:                                         ; preds = %do.cond57
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10953
  br label %cleanup, !dbg !10953

cleanup:                                          ; preds = %do.end58, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_consumer) #16, !dbg !10953
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !10953

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__launder_type(ptr noundef %__x) #4 !dbg !10954 {
entry:
  %__x.addr = alloca ptr, align 8
  store ptr %__x, ptr %__x.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %__x.addr, metadata !10959, metadata !DIExpression()), !dbg !10960
  %0 = load ptr, ptr %__x.addr, align 8, !dbg !10961, !tbaa !3910
  %1 = call ptr asm sideeffect "", "=r,0,~{dirflag},~{fpsr},~{flags}"(ptr %0) #16, !dbg !10961, !srcloc !10962
  store ptr %1, ptr %__x.addr, align 8, !dbg !10961, !tbaa !3910
  %2 = load ptr, ptr %__x.addr, align 8, !dbg !10963, !tbaa !3910
  ret ptr %2, !dbg !10964
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_broker_active_toppar_next(ptr noundef %rkb, ptr noundef %sugg_next) #4 !dbg !10965 {
entry:
  %rkb.addr = alloca ptr, align 8
  %sugg_next.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10969, metadata !DIExpression()), !dbg !10971
  store ptr %sugg_next, ptr %sugg_next.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %sugg_next.addr, metadata !10970, metadata !DIExpression()), !dbg !10972
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !10973, !tbaa !3910
  %rkb_active_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 13, !dbg !10973
  %cqh_first = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars, i32 0, i32 0, !dbg !10973
  %1 = load ptr, ptr %cqh_first, align 8, !dbg !10973, !tbaa !9035
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !10973, !tbaa !3910
  %rkb_active_toppars1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 13, !dbg !10973
  %call = call ptr @__launder_type(ptr noundef %rkb_active_toppars1), !dbg !10973
  %cmp = icmp eq ptr %1, %call, !dbg !10973
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10975

lor.lhs.false:                                    ; preds = %entry
  %3 = load ptr, ptr %sugg_next.addr, align 8, !dbg !10976, !tbaa !3910
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !10977, !tbaa !3910
  %rkb_active_toppars2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 13, !dbg !10977
  %call3 = call ptr @__launder_type(ptr noundef %rkb_active_toppars2), !dbg !10977
  %cmp4 = icmp eq ptr %3, %call3, !dbg !10978
  br i1 %cmp4, label %if.then, label %if.else, !dbg !10979

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !10980, !tbaa !3910
  %rkb_active_toppar_next = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 15, !dbg !10981
  store ptr null, ptr %rkb_active_toppar_next, align 8, !dbg !10982, !tbaa !10983
  br label %if.end11, !dbg !10980

if.else:                                          ; preds = %lor.lhs.false
  %6 = load ptr, ptr %sugg_next.addr, align 8, !dbg !10984, !tbaa !3910
  %tobool = icmp ne ptr %6, null, !dbg !10984
  br i1 %tobool, label %if.then5, label %if.else7, !dbg !10986

if.then5:                                         ; preds = %if.else
  %7 = load ptr, ptr %sugg_next.addr, align 8, !dbg !10987, !tbaa !3910
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !10988, !tbaa !3910
  %rkb_active_toppar_next6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 15, !dbg !10989
  store ptr %7, ptr %rkb_active_toppar_next6, align 8, !dbg !10990, !tbaa !10983
  br label %if.end, !dbg !10988

if.else7:                                         ; preds = %if.else
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !10991, !tbaa !3910
  %rkb_active_toppars8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 13, !dbg !10991
  %cqh_first9 = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars8, i32 0, i32 0, !dbg !10991
  %10 = load ptr, ptr %cqh_first9, align 8, !dbg !10991, !tbaa !9035
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !10992, !tbaa !3910
  %rkb_active_toppar_next10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 15, !dbg !10993
  store ptr %10, ptr %rkb_active_toppar_next10, align 8, !dbg !10994, !tbaa !10983
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then5
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  ret void, !dbg !10995
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_active_toppar_del(ptr noundef %rkb, ptr noundef %rktp, ptr noundef %reason) #0 !dbg !10996 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rktp.addr = alloca ptr, align 8
  %reason.addr = alloca ptr, align 8
  %is_consumer = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !10998, metadata !DIExpression()), !dbg !11007
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !10999, metadata !DIExpression()), !dbg !11008
  store ptr %reason, ptr %reason.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %reason.addr, metadata !11000, metadata !DIExpression()), !dbg !11009
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_consumer) #16, !dbg !11010
  tail call void @llvm.dbg.declare(metadata ptr %is_consumer, metadata !11001, metadata !DIExpression()), !dbg !11011
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !11012, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !11013
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !11013, !tbaa !4139
  %rk_type = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 25, !dbg !11014
  %2 = load i32, ptr %rk_type, align 8, !dbg !11014, !tbaa !10915
  %cmp = icmp eq i32 %2, 1, !dbg !11015
  %conv = zext i1 %cmp to i32, !dbg !11015
  store i32 %conv, ptr %is_consumer, align 4, !dbg !11011, !tbaa !3959
  %3 = load i32, ptr %is_consumer, align 4, !dbg !11016, !tbaa !3959
  %tobool = icmp ne i32 %3, 0, !dbg !11016
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11018

land.lhs.true:                                    ; preds = %entry
  %4 = load ptr, ptr %rktp.addr, align 8, !dbg !11019, !tbaa !3910
  %rktp_fetch = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %4, i32 0, i32 18, !dbg !11020
  %5 = load i32, ptr %rktp_fetch, align 8, !dbg !11020, !tbaa !10922
  %tobool1 = icmp ne i32 %5, 0, !dbg !11019
  br i1 %tobool1, label %if.end, label %if.then, !dbg !11021

if.then:                                          ; preds = %land.lhs.true
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11022

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %do.body, !dbg !11023

do.body:                                          ; preds = %if.end
  %6 = load ptr, ptr %rktp.addr, align 8, !dbg !11024, !tbaa !3910
  %rktp_activelink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %6, i32 0, i32 2, !dbg !11024
  %cqe_next = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink, i32 0, i32 0, !dbg !11024
  %7 = load ptr, ptr %cqe_next, align 8, !dbg !11024, !tbaa !10928
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !11024, !tbaa !3910
  %rkb_active_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 13, !dbg !11024
  %call = call ptr @__launder_type(ptr noundef %rkb_active_toppars), !dbg !11024
  %cmp2 = icmp eq ptr %7, %call, !dbg !11024
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !11027

if.then4:                                         ; preds = %do.body
  %9 = load ptr, ptr %rktp.addr, align 8, !dbg !11024, !tbaa !3910
  %rktp_activelink5 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %9, i32 0, i32 2, !dbg !11024
  %cqe_prev = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink5, i32 0, i32 1, !dbg !11024
  %10 = load ptr, ptr %cqe_prev, align 8, !dbg !11024, !tbaa !10929
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !11024, !tbaa !3910
  %rkb_active_toppars6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 13, !dbg !11024
  %cqh_last = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars6, i32 0, i32 1, !dbg !11024
  store ptr %10, ptr %cqh_last, align 8, !dbg !11024, !tbaa !9036
  br label %if.end13, !dbg !11024

if.else:                                          ; preds = %do.body
  %12 = load ptr, ptr %rktp.addr, align 8, !dbg !11024, !tbaa !3910
  %rktp_activelink7 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %12, i32 0, i32 2, !dbg !11024
  %cqe_prev8 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink7, i32 0, i32 1, !dbg !11024
  %13 = load ptr, ptr %cqe_prev8, align 8, !dbg !11024, !tbaa !10929
  %14 = load ptr, ptr %rktp.addr, align 8, !dbg !11024, !tbaa !3910
  %rktp_activelink9 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %14, i32 0, i32 2, !dbg !11024
  %cqe_next10 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink9, i32 0, i32 0, !dbg !11024
  %15 = load ptr, ptr %cqe_next10, align 8, !dbg !11024, !tbaa !10928
  %rktp_activelink11 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %15, i32 0, i32 2, !dbg !11024
  %cqe_prev12 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink11, i32 0, i32 1, !dbg !11024
  store ptr %13, ptr %cqe_prev12, align 8, !dbg !11024, !tbaa !10929
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then4
  %16 = load ptr, ptr %rktp.addr, align 8, !dbg !11028, !tbaa !3910
  %rktp_activelink14 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %16, i32 0, i32 2, !dbg !11028
  %cqe_prev15 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink14, i32 0, i32 1, !dbg !11028
  %17 = load ptr, ptr %cqe_prev15, align 8, !dbg !11028, !tbaa !10929
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !11028, !tbaa !3910
  %rkb_active_toppars16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 13, !dbg !11028
  %call17 = call ptr @__launder_type(ptr noundef %rkb_active_toppars16), !dbg !11028
  %cmp18 = icmp eq ptr %17, %call17, !dbg !11028
  br i1 %cmp18, label %if.then20, label %if.else24, !dbg !11027

if.then20:                                        ; preds = %if.end13
  %19 = load ptr, ptr %rktp.addr, align 8, !dbg !11028, !tbaa !3910
  %rktp_activelink21 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %19, i32 0, i32 2, !dbg !11028
  %cqe_next22 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink21, i32 0, i32 0, !dbg !11028
  %20 = load ptr, ptr %cqe_next22, align 8, !dbg !11028, !tbaa !10928
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !11028, !tbaa !3910
  %rkb_active_toppars23 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 13, !dbg !11028
  %cqh_first = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars23, i32 0, i32 0, !dbg !11028
  store ptr %20, ptr %cqh_first, align 8, !dbg !11028, !tbaa !9035
  br label %if.end31, !dbg !11028

if.else24:                                        ; preds = %if.end13
  %22 = load ptr, ptr %rktp.addr, align 8, !dbg !11028, !tbaa !3910
  %rktp_activelink25 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %22, i32 0, i32 2, !dbg !11028
  %cqe_next26 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink25, i32 0, i32 0, !dbg !11028
  %23 = load ptr, ptr %cqe_next26, align 8, !dbg !11028, !tbaa !10928
  %24 = load ptr, ptr %rktp.addr, align 8, !dbg !11028, !tbaa !3910
  %rktp_activelink27 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %24, i32 0, i32 2, !dbg !11028
  %cqe_prev28 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink27, i32 0, i32 1, !dbg !11028
  %25 = load ptr, ptr %cqe_prev28, align 8, !dbg !11028, !tbaa !10929
  %rktp_activelink29 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %25, i32 0, i32 2, !dbg !11028
  %cqe_next30 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink29, i32 0, i32 0, !dbg !11028
  store ptr %23, ptr %cqe_next30, align 8, !dbg !11028, !tbaa !10928
  br label %if.end31

if.end31:                                         ; preds = %if.else24, %if.then20
  br label %do.cond, !dbg !11027

do.cond:                                          ; preds = %if.end31
  br label %do.end, !dbg !11027

do.end:                                           ; preds = %do.cond
  br label %do.body32, !dbg !11030

do.body32:                                        ; preds = %do.end
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !11031, !tbaa !3910
  %rkb_active_toppar_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 14, !dbg !11031
  %27 = load i32, ptr %rkb_active_toppar_cnt, align 8, !dbg !11031, !tbaa !9782
  %cmp33 = icmp sgt i32 %27, 0, !dbg !11031
  %lnot = xor i1 %cmp33, true, !dbg !11031
  %lnot.ext = zext i1 %lnot to i32, !dbg !11031
  %conv35 = sext i32 %lnot.ext to i64, !dbg !11031
  %expval = call i64 @llvm.expect.i64(i64 %conv35, i64 0), !dbg !11031
  %tobool36 = icmp ne i64 %expval, 0, !dbg !11031
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !11034

if.then37:                                        ; preds = %do.body32
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 5785, ptr noundef @__FUNCTION__.rd_kafka_broker_active_toppar_del, ptr noundef null, ptr noundef @.str.93) #17, !dbg !11031
  unreachable, !dbg !11031

if.end38:                                         ; preds = %do.body32
  br label %do.cond39, !dbg !11034

do.cond39:                                        ; preds = %if.end38
  br label %do.end40, !dbg !11034

do.end40:                                         ; preds = %do.cond39
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !11035, !tbaa !3910
  %rkb_active_toppar_cnt41 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 14, !dbg !11036
  %29 = load i32, ptr %rkb_active_toppar_cnt41, align 8, !dbg !11037, !tbaa !9782
  %dec = add nsw i32 %29, -1, !dbg !11037
  store i32 %dec, ptr %rkb_active_toppar_cnt41, align 8, !dbg !11037, !tbaa !9782
  %30 = load i32, ptr %is_consumer, align 4, !dbg !11038, !tbaa !3959
  %tobool42 = icmp ne i32 %30, 0, !dbg !11038
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !11040

if.then43:                                        ; preds = %do.end40
  %31 = load ptr, ptr %rktp.addr, align 8, !dbg !11041, !tbaa !3910
  %rktp_fetch44 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %31, i32 0, i32 18, !dbg !11042
  store i32 0, ptr %rktp_fetch44, align 8, !dbg !11043, !tbaa !10922
  br label %if.end45, !dbg !11041

if.end45:                                         ; preds = %if.then43, %do.end40
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !11044, !tbaa !3910
  %rkb_active_toppar_next = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 15, !dbg !11046
  %33 = load ptr, ptr %rkb_active_toppar_next, align 8, !dbg !11046, !tbaa !10983
  %34 = load ptr, ptr %rktp.addr, align 8, !dbg !11047, !tbaa !3910
  %cmp46 = icmp eq ptr %33, %34, !dbg !11048
  br i1 %cmp46, label %if.then48, label %if.end59, !dbg !11049

if.then48:                                        ; preds = %if.end45
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !11050, !tbaa !3910
  %36 = load ptr, ptr %rktp.addr, align 8, !dbg !11052, !tbaa !3910
  %rktp_activelink49 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %36, i32 0, i32 2, !dbg !11052
  %cqe_next50 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink49, i32 0, i32 0, !dbg !11052
  %37 = load ptr, ptr %cqe_next50, align 8, !dbg !11052, !tbaa !10928
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !11052, !tbaa !3910
  %rkb_active_toppars51 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 13, !dbg !11052
  %call52 = call ptr @__launder_type(ptr noundef %rkb_active_toppars51), !dbg !11052
  %cmp53 = icmp eq ptr %37, %call52, !dbg !11052
  br i1 %cmp53, label %cond.true, label %cond.false, !dbg !11052

cond.true:                                        ; preds = %if.then48
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !11052, !tbaa !3910
  %rkb_active_toppars55 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 13, !dbg !11052
  %cqh_first56 = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars55, i32 0, i32 0, !dbg !11052
  %40 = load ptr, ptr %cqh_first56, align 8, !dbg !11052, !tbaa !9035
  br label %cond.end, !dbg !11052

cond.false:                                       ; preds = %if.then48
  %41 = load ptr, ptr %rktp.addr, align 8, !dbg !11052, !tbaa !3910
  %rktp_activelink57 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %41, i32 0, i32 2, !dbg !11052
  %cqe_next58 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink57, i32 0, i32 0, !dbg !11052
  %42 = load ptr, ptr %cqe_next58, align 8, !dbg !11052, !tbaa !10928
  br label %cond.end, !dbg !11052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %40, %cond.true ], [ %42, %cond.false ], !dbg !11052
  call void @rd_kafka_broker_active_toppar_next(ptr noundef %35, ptr noundef %cond), !dbg !11053
  br label %if.end59, !dbg !11054

if.end59:                                         ; preds = %cond.end, %if.end45
  br label %do.body60, !dbg !11055

do.body60:                                        ; preds = %if.end59
  %43 = load ptr, ptr %rkb.addr, align 8, !dbg !11056, !tbaa !3910
  %rkb_rk61 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %43, i32 0, i32 32, !dbg !11056
  %44 = load ptr, ptr %rkb_rk61, align 8, !dbg !11056, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %44, i32 0, i32 18, !dbg !11056
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !11056
  %45 = load i32, ptr %debug, align 8, !dbg !11056, !tbaa !4140
  %and = and i32 %45, 4, !dbg !11056
  %conv62 = sext i32 %and to i64, !dbg !11056
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0), !dbg !11056
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !11056
  br i1 %tobool64, label %if.then65, label %if.end90, !dbg !11057

if.then65:                                        ; preds = %do.body60
  br label %do.body66, !dbg !11058

do.body66:                                        ; preds = %if.then65
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !11059
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !11002, metadata !DIExpression()), !dbg !11059
  %46 = load ptr, ptr %rkb.addr, align 8, !dbg !11059, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %46, i32 0, i32 49, !dbg !11059
  %call67 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !11059
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !11059
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !11059, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 48, !dbg !11059
  %48 = load ptr, ptr %rkb_logname, align 8, !dbg !11059, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %48, i64 noundef 256), !dbg !11059
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !11059, !tbaa !3910
  %rkb_logname_lock68 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 49, !dbg !11059
  %call69 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock68), !dbg !11059
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !11059, !tbaa !3910
  %rkb_rk70 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 32, !dbg !11059
  %51 = load ptr, ptr %rkb_rk70, align 8, !dbg !11059, !tbaa !4139
  %rk_conf71 = getelementptr inbounds %struct.rd_kafka_s, ptr %51, i32 0, i32 18, !dbg !11059
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !11059, !tbaa !3910
  %rkb_rk72 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 32, !dbg !11059
  %53 = load ptr, ptr %rkb_rk72, align 8, !dbg !11059, !tbaa !4139
  %arraydecay73 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !11059
  %54 = load ptr, ptr %rktp.addr, align 8, !dbg !11059, !tbaa !3910
  %rktp_rkt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %54, i32 0, i32 6, !dbg !11059
  %55 = load ptr, ptr %rktp_rkt, align 8, !dbg !11059, !tbaa !8643
  %rkt_topic = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %55, i32 0, i32 4, !dbg !11059
  %56 = load ptr, ptr %rkt_topic, align 8, !dbg !11059, !tbaa !8676
  %len = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %56, i32 0, i32 0, !dbg !11059
  %57 = load i32, ptr %len, align 8, !dbg !11059, !tbaa !8677
  %cmp74 = icmp eq i32 %57, -1, !dbg !11059
  br i1 %cmp74, label %cond.true76, label %cond.false77, !dbg !11059

cond.true76:                                      ; preds = %do.body66
  br label %cond.end81, !dbg !11059

cond.false77:                                     ; preds = %do.body66
  %58 = load ptr, ptr %rktp.addr, align 8, !dbg !11059, !tbaa !3910
  %rktp_rkt78 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %58, i32 0, i32 6, !dbg !11059
  %59 = load ptr, ptr %rktp_rkt78, align 8, !dbg !11059, !tbaa !8643
  %rkt_topic79 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %59, i32 0, i32 4, !dbg !11059
  %60 = load ptr, ptr %rkt_topic79, align 8, !dbg !11059, !tbaa !8676
  %len80 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %60, i32 0, i32 0, !dbg !11059
  %61 = load i32, ptr %len80, align 8, !dbg !11059, !tbaa !8677
  br label %cond.end81, !dbg !11059

cond.end81:                                       ; preds = %cond.false77, %cond.true76
  %cond82 = phi i32 [ 0, %cond.true76 ], [ %61, %cond.false77 ], !dbg !11059
  %62 = load ptr, ptr %rktp.addr, align 8, !dbg !11059, !tbaa !3910
  %rktp_rkt83 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %62, i32 0, i32 6, !dbg !11059
  %63 = load ptr, ptr %rktp_rkt83, align 8, !dbg !11059, !tbaa !8643
  %rkt_topic84 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %63, i32 0, i32 4, !dbg !11059
  %64 = load ptr, ptr %rkt_topic84, align 8, !dbg !11059, !tbaa !8676
  %str = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %64, i32 0, i32 1, !dbg !11059
  %65 = load ptr, ptr %str, align 8, !dbg !11059, !tbaa !8679
  %66 = load ptr, ptr %rktp.addr, align 8, !dbg !11059, !tbaa !3910
  %rktp_partition = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %66, i32 0, i32 7, !dbg !11059
  %67 = load i32, ptr %rktp_partition, align 8, !dbg !11059, !tbaa !8680
  %68 = load i32, ptr %is_consumer, align 4, !dbg !11059, !tbaa !3959
  %tobool85 = icmp ne i32 %68, 0, !dbg !11059
  %69 = zext i1 %tobool85 to i64, !dbg !11059
  %cond86 = select i1 %tobool85, ptr @.str.91, ptr @.str.92, !dbg !11059
  %70 = load ptr, ptr %rkb.addr, align 8, !dbg !11059, !tbaa !3910
  %rkb_active_toppar_cnt87 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %70, i32 0, i32 14, !dbg !11059
  %71 = load i32, ptr %rkb_active_toppar_cnt87, align 8, !dbg !11059, !tbaa !9782
  %72 = load ptr, ptr %rktp.addr, align 8, !dbg !11059, !tbaa !3910
  %rktp_fetch_version = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %72, i32 0, i32 26, !dbg !11059
  %73 = load i32, ptr %rktp_fetch_version, align 8, !dbg !11059, !tbaa !10952
  %74 = load ptr, ptr %reason.addr, align 8, !dbg !11059, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf71, ptr noundef %53, ptr noundef %arraydecay73, i32 noundef 7, i32 noundef 4, ptr noundef @.str.89, ptr noundef @.str.94, i32 noundef %cond82, ptr noundef %65, i32 noundef %67, ptr noundef %cond86, i32 noundef %71, i32 noundef %73, ptr noundef %74), !dbg !11059
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !11058
  br label %do.cond88, !dbg !11059

do.cond88:                                        ; preds = %cond.end81
  br label %do.end89, !dbg !11059

do.end89:                                         ; preds = %do.cond88
  br label %if.end90, !dbg !11058

if.end90:                                         ; preds = %do.end89, %do.body60
  br label %do.cond91, !dbg !11057

do.cond91:                                        ; preds = %if.end90
  br label %do.end92, !dbg !11057

do.end92:                                         ; preds = %do.cond91
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11060
  br label %cleanup, !dbg !11060

cleanup:                                          ; preds = %do.end92, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_consumer) #16, !dbg !11060
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !11060

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_persistent_connection_add(ptr noundef %rkb, ptr noundef %acntp) #0 !dbg !11061 {
entry:
  %rkb.addr = alloca ptr, align 8
  %acntp.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !11065, metadata !DIExpression()), !dbg !11067
  store ptr %acntp, ptr %acntp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %acntp.addr, metadata !11066, metadata !DIExpression()), !dbg !11068
  %0 = load ptr, ptr %acntp.addr, align 8, !dbg !11069, !tbaa !3910
  %call = call i32 @rd_atomic32_add(ptr noundef %0, i32 noundef 1), !dbg !11071
  %cmp = icmp eq i32 %call, 1, !dbg !11072
  br i1 %cmp, label %if.then, label %if.end, !dbg !11073

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !11074, !tbaa !3910
  call void @rd_kafka_broker_schedule_connection(ptr noundef %1), !dbg !11076
  br label %if.end, !dbg !11077

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11078
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_persistent_connection_del(ptr noundef %rkb, ptr noundef %acntp) #0 !dbg !11079 {
entry:
  %rkb.addr = alloca ptr, align 8
  %acntp.addr = alloca ptr, align 8
  %r = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !11081, metadata !DIExpression()), !dbg !11084
  store ptr %acntp, ptr %acntp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %acntp.addr, metadata !11082, metadata !DIExpression()), !dbg !11085
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !11086
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !11083, metadata !DIExpression()), !dbg !11087
  %0 = load ptr, ptr %acntp.addr, align 8, !dbg !11088, !tbaa !3910
  %call = call i32 @rd_atomic32_sub(ptr noundef %0, i32 noundef 1), !dbg !11089
  store i32 %call, ptr %r, align 4, !dbg !11087, !tbaa !3959
  %1 = load i32, ptr %r, align 4, !dbg !11090, !tbaa !3959
  %cmp = icmp sge i32 %1, 0, !dbg !11090
  br i1 %cmp, label %if.then, label %if.else, !dbg !11093

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !11093

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.95, ptr noundef @.str.20, i32 noundef 5853, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_persistent_connection_del) #18, !dbg !11090
  unreachable, !dbg !11090

if.end:                                           ; preds = %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !11094
  ret void, !dbg !11094
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_kafka_q_keep(ptr noundef %rkq) #4 !dbg !11095 {
entry:
  %rkq.addr = alloca ptr, align 8
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !11099, metadata !DIExpression()), !dbg !11100
  %0 = load ptr, ptr %rkq.addr, align 8, !dbg !11101, !tbaa !3910
  %rkq_lock = getelementptr inbounds %struct.rd_kafka_q_s, ptr %0, i32 0, i32 0, !dbg !11102
  %call = call i32 @mtx_lock(ptr noundef %rkq_lock), !dbg !11103
  %1 = load ptr, ptr %rkq.addr, align 8, !dbg !11104, !tbaa !3910
  %rkq_refcnt = getelementptr inbounds %struct.rd_kafka_q_s, ptr %1, i32 0, i32 6, !dbg !11105
  %2 = load i32, ptr %rkq_refcnt, align 8, !dbg !11106, !tbaa !11107
  %inc = add nsw i32 %2, 1, !dbg !11106
  store i32 %inc, ptr %rkq_refcnt, align 8, !dbg !11106, !tbaa !11107
  %3 = load ptr, ptr %rkq.addr, align 8, !dbg !11110, !tbaa !3910
  %rkq_lock1 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %3, i32 0, i32 0, !dbg !11111
  %call2 = call i32 @mtx_unlock(ptr noundef %rkq_lock1), !dbg !11112
  %4 = load ptr, ptr %rkq.addr, align 8, !dbg !11113, !tbaa !3910
  ret ptr %4, !dbg !11114
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_monitor_del(ptr noundef %rkbmon) #0 !dbg !11115 {
entry:
  %rkbmon.addr = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkbmon, ptr %rkbmon.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbmon.addr, metadata !11119, metadata !DIExpression()), !dbg !11121
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !11122
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !11120, metadata !DIExpression()), !dbg !11123
  %0 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11124, !tbaa !3910
  %rkbmon_rkb = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %0, i32 0, i32 1, !dbg !11125
  %1 = load ptr, ptr %rkbmon_rkb, align 8, !dbg !11125, !tbaa !9869
  store ptr %1, ptr %rkb, align 8, !dbg !11123, !tbaa !3910
  %2 = load ptr, ptr %rkb, align 8, !dbg !11126, !tbaa !3910
  %tobool = icmp ne ptr %2, null, !dbg !11126
  br i1 %tobool, label %if.end, label %if.then, !dbg !11128

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11129

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %rkb, align 8, !dbg !11130, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 9, !dbg !11130
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !11130
  %4 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11131, !tbaa !3910
  %rkbmon_rkb1 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %4, i32 0, i32 1, !dbg !11132
  store ptr null, ptr %rkbmon_rkb1, align 8, !dbg !11133, !tbaa !9869
  %5 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11134, !tbaa !3910
  %rkbmon_q = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %5, i32 0, i32 2, !dbg !11134
  %6 = load ptr, ptr %rkbmon_q, align 8, !dbg !11134, !tbaa !4425
  call void @rd_kafka_q_destroy0(ptr noundef %6, i32 noundef 0), !dbg !11134
  br label %do.body, !dbg !11135

do.body:                                          ; preds = %if.end
  %7 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11136, !tbaa !3910
  %rkbmon_link = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %7, i32 0, i32 0, !dbg !11136
  %tqe_next = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link, i32 0, i32 0, !dbg !11136
  %8 = load ptr, ptr %tqe_next, align 8, !dbg !11136, !tbaa !4430
  %cmp = icmp ne ptr %8, null, !dbg !11136
  br i1 %cmp, label %if.then2, label %if.else, !dbg !11139

if.then2:                                         ; preds = %do.body
  %9 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11136, !tbaa !3910
  %rkbmon_link3 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %9, i32 0, i32 0, !dbg !11136
  %tqe_prev = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link3, i32 0, i32 1, !dbg !11136
  %10 = load ptr, ptr %tqe_prev, align 8, !dbg !11136, !tbaa !9891
  %11 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11136, !tbaa !3910
  %rkbmon_link4 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %11, i32 0, i32 0, !dbg !11136
  %tqe_next5 = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link4, i32 0, i32 0, !dbg !11136
  %12 = load ptr, ptr %tqe_next5, align 8, !dbg !11136, !tbaa !4430
  %rkbmon_link6 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %12, i32 0, i32 0, !dbg !11136
  %tqe_prev7 = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link6, i32 0, i32 1, !dbg !11136
  store ptr %10, ptr %tqe_prev7, align 8, !dbg !11136, !tbaa !9891
  br label %if.end10, !dbg !11136

if.else:                                          ; preds = %do.body
  %13 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11136, !tbaa !3910
  %rkbmon_link8 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %13, i32 0, i32 0, !dbg !11136
  %tqe_prev9 = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link8, i32 0, i32 1, !dbg !11136
  %14 = load ptr, ptr %tqe_prev9, align 8, !dbg !11136, !tbaa !9891
  %15 = load ptr, ptr %rkb, align 8, !dbg !11136, !tbaa !3910
  %rkb_monitors = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 56, !dbg !11136
  %tqh_last = getelementptr inbounds %struct.anon.7, ptr %rkb_monitors, i32 0, i32 1, !dbg !11136
  store ptr %14, ptr %tqh_last, align 8, !dbg !11136, !tbaa !9040
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then2
  %16 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11139, !tbaa !3910
  %rkbmon_link11 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %16, i32 0, i32 0, !dbg !11139
  %tqe_next12 = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link11, i32 0, i32 0, !dbg !11139
  %17 = load ptr, ptr %tqe_next12, align 8, !dbg !11139, !tbaa !4430
  %18 = load ptr, ptr %rkbmon.addr, align 8, !dbg !11139, !tbaa !3910
  %rkbmon_link13 = getelementptr inbounds %struct.rd_kafka_broker_monitor_s, ptr %18, i32 0, i32 0, !dbg !11139
  %tqe_prev14 = getelementptr inbounds %struct.anon.8, ptr %rkbmon_link13, i32 0, i32 1, !dbg !11139
  %19 = load ptr, ptr %tqe_prev14, align 8, !dbg !11139, !tbaa !9891
  store ptr %17, ptr %19, align 8, !dbg !11139, !tbaa !3910
  br label %do.cond, !dbg !11139

do.cond:                                          ; preds = %if.end10
  br label %do.end, !dbg !11139

do.end:                                           ; preds = %do.cond
  %20 = load ptr, ptr %rkb, align 8, !dbg !11140, !tbaa !3910
  %rkb_lock15 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 9, !dbg !11140
  %call16 = call i32 @mtx_unlock(ptr noundef %rkb_lock15), !dbg !11140
  br label %do.body17, !dbg !11141

do.body17:                                        ; preds = %do.end
  %21 = load ptr, ptr %rkb, align 8, !dbg !11142, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 31, !dbg !11142
  %call18 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt), !dbg !11142
  %cmp19 = icmp sgt i32 %call18, 0, !dbg !11142
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11145

if.then20:                                        ; preds = %do.body17
  br label %do.end23, !dbg !11142

if.end21:                                         ; preds = %do.body17
  %22 = load ptr, ptr %rkb, align 8, !dbg !11145, !tbaa !3910
  call void @rd_kafka_broker_destroy_final(ptr noundef %22), !dbg !11145
  br label %do.cond22, !dbg !11145

do.cond22:                                        ; preds = %if.end21
  br label %do.end23, !dbg !11145

do.end23:                                         ; preds = %do.cond22, %if.then20
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11146
  br label %cleanup, !dbg !11146

cleanup:                                          ; preds = %do.end23, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !11146
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !11146

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_q_destroy0(ptr noundef %rkq, i32 noundef %disable) #4 !dbg !11147 {
entry:
  %rkq.addr = alloca ptr, align 8
  %disable.addr = alloca i32, align 4
  %do_delete = alloca i32, align 4
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !11151, metadata !DIExpression()), !dbg !11154
  store i32 %disable, ptr %disable.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %disable.addr, metadata !11152, metadata !DIExpression()), !dbg !11155
  call void @llvm.lifetime.start.p0(i64 4, ptr %do_delete) #16, !dbg !11156
  tail call void @llvm.dbg.declare(metadata ptr %do_delete, metadata !11153, metadata !DIExpression()), !dbg !11157
  store i32 0, ptr %do_delete, align 4, !dbg !11157, !tbaa !3959
  %0 = load i32, ptr %disable.addr, align 4, !dbg !11158, !tbaa !3959
  %tobool = icmp ne i32 %0, 0, !dbg !11158
  br i1 %tobool, label %if.then, label %if.end, !dbg !11160

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkq.addr, align 8, !dbg !11161, !tbaa !3910
  call void @rd_kafka_q_disable0(ptr noundef %1, i32 noundef 1), !dbg !11163
  %2 = load ptr, ptr %rkq.addr, align 8, !dbg !11164, !tbaa !3910
  %call = call i32 @rd_kafka_q_purge0(ptr noundef %2, i32 noundef 1), !dbg !11165
  br label %if.end, !dbg !11166

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %rkq.addr, align 8, !dbg !11167, !tbaa !3910
  %rkq_lock = getelementptr inbounds %struct.rd_kafka_q_s, ptr %3, i32 0, i32 0, !dbg !11168
  %call1 = call i32 @mtx_lock(ptr noundef %rkq_lock), !dbg !11169
  br label %do.body, !dbg !11170

do.body:                                          ; preds = %if.end
  %4 = load ptr, ptr %rkq.addr, align 8, !dbg !11171, !tbaa !3910
  %rkq_refcnt = getelementptr inbounds %struct.rd_kafka_q_s, ptr %4, i32 0, i32 6, !dbg !11171
  %5 = load i32, ptr %rkq_refcnt, align 8, !dbg !11171, !tbaa !11107
  %cmp = icmp sgt i32 %5, 0, !dbg !11171
  %lnot = xor i1 %cmp, true, !dbg !11171
  %lnot.ext = zext i1 %lnot to i32, !dbg !11171
  %conv = sext i32 %lnot.ext to i64, !dbg !11171
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11171
  %tobool2 = icmp ne i64 %expval, 0, !dbg !11171
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !11174

if.then3:                                         ; preds = %do.body
  call void @rd_kafka_crash(ptr noundef @.str.120, i32 noundef 227, ptr noundef @__FUNCTION__.rd_kafka_q_destroy0, ptr noundef null, ptr noundef @.str.313) #17, !dbg !11171
  unreachable, !dbg !11171

if.end4:                                          ; preds = %do.body
  br label %do.cond, !dbg !11174

do.cond:                                          ; preds = %if.end4
  br label %do.end, !dbg !11174

do.end:                                           ; preds = %do.cond
  %6 = load ptr, ptr %rkq.addr, align 8, !dbg !11175, !tbaa !3910
  %rkq_refcnt5 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %6, i32 0, i32 6, !dbg !11176
  %7 = load i32, ptr %rkq_refcnt5, align 8, !dbg !11177, !tbaa !11107
  %dec = add nsw i32 %7, -1, !dbg !11177
  store i32 %dec, ptr %rkq_refcnt5, align 8, !dbg !11177, !tbaa !11107
  %tobool6 = icmp ne i32 %dec, 0, !dbg !11178
  %lnot7 = xor i1 %tobool6, true, !dbg !11178
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11178
  store i32 %lnot.ext8, ptr %do_delete, align 4, !dbg !11179, !tbaa !3959
  %8 = load ptr, ptr %rkq.addr, align 8, !dbg !11180, !tbaa !3910
  %rkq_lock9 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %8, i32 0, i32 0, !dbg !11181
  %call10 = call i32 @mtx_unlock(ptr noundef %rkq_lock9), !dbg !11182
  %9 = load i32, ptr %do_delete, align 4, !dbg !11183, !tbaa !3959
  %conv11 = sext i32 %9 to i64, !dbg !11183
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !11183
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !11183
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11185

if.then14:                                        ; preds = %do.end
  %10 = load ptr, ptr %rkq.addr, align 8, !dbg !11186, !tbaa !3910
  call void @rd_kafka_q_destroy_final(ptr noundef %10), !dbg !11187
  br label %if.end15, !dbg !11187

if.end15:                                         ; preds = %if.then14, %do.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %do_delete) #16, !dbg !11188
  ret void, !dbg !11188
}

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_start_reauth_timer(ptr noundef %rkb, i64 noundef %connections_max_reauth_ms) #0 !dbg !11189 {
entry:
  %rkb.addr = alloca ptr, align 8
  %connections_max_reauth_ms.addr = alloca i64, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !11193, metadata !DIExpression()), !dbg !11195
  store i64 %connections_max_reauth_ms, ptr %connections_max_reauth_ms.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %connections_max_reauth_ms.addr, metadata !11194, metadata !DIExpression()), !dbg !11196
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !11197, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !11199
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !11199, !tbaa !4139
  %rk_timers = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 44, !dbg !11200
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !11201, !tbaa !3910
  %rkb_sasl_reauth_tmr = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 62, !dbg !11202
  %call = call zeroext i8 @rd_kafka_timer_is_started(ptr noundef %rk_timers, ptr noundef %rkb_sasl_reauth_tmr), !dbg !11203
  %tobool = icmp ne i8 %call, 0, !dbg !11203
  br i1 %tobool, label %if.then, label %if.end, !dbg !11204

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !11205, !tbaa !3910
  %rkb_rk1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 32, !dbg !11206
  %4 = load ptr, ptr %rkb_rk1, align 8, !dbg !11206, !tbaa !4139
  %rk_timers2 = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 44, !dbg !11207
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !11208, !tbaa !3910
  %rkb_sasl_reauth_tmr3 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 62, !dbg !11209
  %call4 = call i32 @rd_kafka_timer_stop(ptr noundef %rk_timers2, ptr noundef %rkb_sasl_reauth_tmr3, i32 noundef 1), !dbg !11210
  br label %if.end, !dbg !11210

if.end:                                           ; preds = %if.then, %entry
  %6 = load i64, ptr %connections_max_reauth_ms.addr, align 8, !dbg !11211, !tbaa !4039
  %cmp = icmp eq i64 %6, 0, !dbg !11213
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !11214

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !11215

if.end6:                                          ; preds = %if.end
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !11216, !tbaa !3910
  %rkb_rk7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 32, !dbg !11216
  %8 = load ptr, ptr %rkb_rk7, align 8, !dbg !11216, !tbaa !4139
  %rk_timers8 = getelementptr inbounds %struct.rd_kafka_s, ptr %8, i32 0, i32 44, !dbg !11216
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !11216, !tbaa !3910
  %rkb_sasl_reauth_tmr9 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 62, !dbg !11216
  %10 = load i64, ptr %connections_max_reauth_ms.addr, align 8, !dbg !11216, !tbaa !4039
  %mul = mul nsw i64 %10, 900, !dbg !11216
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !11216, !tbaa !3910
  call void @rd_kafka_timer_start0(ptr noundef %rk_timers8, ptr noundef %rkb_sasl_reauth_tmr9, i64 noundef %mul, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef @rd_kafka_broker_start_reauth_cb, ptr noundef %11), !dbg !11216
  br label %return, !dbg !11217

return:                                           ; preds = %if.end6, %if.then5
  ret void, !dbg !11217
}

declare !dbg !11218 zeroext i8 @rd_kafka_timer_is_started(ptr noundef, ptr noundef) #3

declare !dbg !11223 void @rd_kafka_timer_start0(ptr noundef, ptr noundef, i64 noundef, i8 noundef zeroext, i8 noundef zeroext, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define void @rd_kafka_broker_start_reauth_cb(ptr noundef %rkts, ptr noundef %_rkb) #0 !dbg !11226 {
entry:
  %rkts.addr = alloca ptr, align 8
  %_rkb.addr = alloca ptr, align 8
  %rko = alloca ptr, align 8
  %rkb = alloca ptr, align 8
  store ptr %rkts, ptr %rkts.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkts.addr, metadata !11228, metadata !DIExpression()), !dbg !11232
  store ptr %_rkb, ptr %_rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %_rkb.addr, metadata !11229, metadata !DIExpression()), !dbg !11233
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !11234
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !11230, metadata !DIExpression()), !dbg !11235
  store ptr null, ptr %rko, align 8, !dbg !11235, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkb) #16, !dbg !11236
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !11231, metadata !DIExpression()), !dbg !11237
  %0 = load ptr, ptr %_rkb.addr, align 8, !dbg !11238, !tbaa !3910
  store ptr %0, ptr %rkb, align 8, !dbg !11237, !tbaa !3910
  br label %do.body, !dbg !11239

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11240

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11240

do.end:                                           ; preds = %do.cond
  %call = call ptr @rd_kafka_op_new0(ptr noundef null, i32 noundef 59), !dbg !11242
  store ptr %call, ptr %rko, align 8, !dbg !11243, !tbaa !3910
  %1 = load ptr, ptr %rkb, align 8, !dbg !11244, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 8, !dbg !11245
  %2 = load ptr, ptr %rkb_ops, align 8, !dbg !11245, !tbaa !5475
  %3 = load ptr, ptr %rko, align 8, !dbg !11246, !tbaa !3910
  %call1 = call i32 @rd_kafka_q_enq(ptr noundef %2, ptr noundef %3), !dbg !11247
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkb) #16, !dbg !11248
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !11248
  ret void, !dbg !11248
}

; Function Attrs: nounwind uwtable
define i32 @unittest_broker() #0 !dbg !11249 {
entry:
  %fails = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %fails) #16, !dbg !11252
  tail call void @llvm.dbg.declare(metadata ptr %fails, metadata !11251, metadata !DIExpression()), !dbg !11253
  store i32 0, ptr %fails, align 4, !dbg !11253, !tbaa !3959
  %call = call i32 @rd_ut_reconnect_backoff(), !dbg !11254
  %0 = load i32, ptr %fails, align 4, !dbg !11255, !tbaa !3959
  %add = add nsw i32 %0, %call, !dbg !11255
  store i32 %add, ptr %fails, align 4, !dbg !11255, !tbaa !3959
  %1 = load i32, ptr %fails, align 4, !dbg !11256, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %fails) #16, !dbg !11257
  ret i32 %1, !dbg !11258
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_ut_reconnect_backoff() #0 !dbg !11259 {
entry:
  %retval = alloca i32, align 4
  %rkb = alloca %struct.rd_kafka_broker_s, align 8
  %conf = alloca %struct.rd_kafka_conf_s, align 8
  %now = alloca i64, align 8
  %backoff = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 3184, ptr %rkb) #16, !dbg !11265
  tail call void @llvm.dbg.declare(metadata ptr %rkb, metadata !11261, metadata !DIExpression()), !dbg !11266
  call void @llvm.memset.p0.i64(ptr align 8 %rkb, i8 0, i64 3184, i1 false), !dbg !11266
  call void @llvm.lifetime.start.p0(i64 2016, ptr %conf) #16, !dbg !11267
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !11262, metadata !DIExpression()), !dbg !11268
  call void @llvm.memset.p0.i64(ptr align 8 %conf, i8 0, i64 2016, i1 false), !dbg !11268
  %0 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 27, !dbg !11268
  store i32 10, ptr %0, align 8, !dbg !11268
  %1 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11268
  store i32 90, ptr %1, align 4, !dbg !11268
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !11269
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !11263, metadata !DIExpression()), !dbg !11270
  store i64 1000000, ptr %now, align 8, !dbg !11270, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 4, ptr %backoff) #16, !dbg !11271
  tail call void @llvm.dbg.declare(metadata ptr %backoff, metadata !11264, metadata !DIExpression()), !dbg !11272
  %reconnect_backoff_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 27, !dbg !11273
  %2 = load i32, ptr %reconnect_backoff_ms, align 8, !dbg !11273, !tbaa !11274
  %rkb_reconnect_backoff_ms = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %rkb, i32 0, i32 51, !dbg !11275
  store i32 %2, ptr %rkb_reconnect_backoff_ms, align 8, !dbg !11276, !tbaa !9088
  %3 = load i64, ptr %now, align 8, !dbg !11277, !tbaa !4039
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %rkb, ptr noundef %conf, i64 noundef %3), !dbg !11278
  %4 = load i64, ptr %now, align 8, !dbg !11279, !tbaa !4039
  %call = call i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %rkb, i64 noundef %4), !dbg !11280
  store i32 %call, ptr %backoff, align 4, !dbg !11281, !tbaa !3959
  br label %do.body, !dbg !11282

do.body:                                          ; preds = %entry
  %5 = load i32, ptr %backoff, align 4, !dbg !11283, !tbaa !3959
  %cmp = icmp sle i32 7, %5, !dbg !11283
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !11283

land.lhs.true:                                    ; preds = %do.body
  %6 = load i32, ptr %backoff, align 4, !dbg !11283, !tbaa !3959
  %cmp1 = icmp sge i32 15, %6, !dbg !11283
  br i1 %cmp1, label %if.end11, label %if.then, !dbg !11286

if.then:                                          ; preds = %land.lhs.true, %do.body
  %7 = load ptr, ptr @stderr, align 8, !dbg !11287, !tbaa !3910
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.314, ptr noundef @.str.20, i32 noundef 2148, ptr noundef @__FUNCTION__.rd_ut_reconnect_backoff), !dbg !11287
  %8 = load ptr, ptr @stderr, align 8, !dbg !11287, !tbaa !3910
  %9 = load i32, ptr %backoff, align 4, !dbg !11287, !tbaa !3959
  %call3 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.315, i32 noundef %9, i32 noundef 7, i32 noundef 15), !dbg !11287
  %10 = load ptr, ptr @stderr, align 8, !dbg !11287, !tbaa !3910
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef @.str.316), !dbg !11287
  %11 = load i8, ptr @rd_unittest_assert_on_failure, align 1, !dbg !11289, !tbaa !4126
  %tobool = icmp ne i8 %11, 0, !dbg !11289
  br i1 %tobool, label %if.then5, label %if.end10, !dbg !11287

if.then5:                                         ; preds = %if.then
  %12 = load i32, ptr %backoff, align 4, !dbg !11291, !tbaa !3959
  %cmp6 = icmp sle i32 7, %12, !dbg !11291
  br i1 %cmp6, label %land.lhs.true7, label %if.else, !dbg !11291

land.lhs.true7:                                   ; preds = %if.then5
  %13 = load i32, ptr %backoff, align 4, !dbg !11291, !tbaa !3959
  %cmp8 = icmp sge i32 15, %13, !dbg !11291
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !11294

if.then9:                                         ; preds = %land.lhs.true7
  br label %if.end, !dbg !11294

if.else:                                          ; preds = %land.lhs.true7, %if.then5
  call void @__assert_fail(ptr noundef @.str.317, ptr noundef @.str.20, i32 noundef 2148, ptr noundef @__PRETTY_FUNCTION__.rd_ut_reconnect_backoff) #18, !dbg !11291
  unreachable, !dbg !11291

if.end:                                           ; preds = %if.then9
  br label %if.end10, !dbg !11289

if.end10:                                         ; preds = %if.end, %if.then
  store i32 1, ptr %retval, align 4, !dbg !11287
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11287

if.end11:                                         ; preds = %land.lhs.true
  br label %do.cond, !dbg !11286

do.cond:                                          ; preds = %if.end11
  br label %do.end, !dbg !11286

do.end:                                           ; preds = %do.cond
  %14 = load i64, ptr %now, align 8, !dbg !11295, !tbaa !4039
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %rkb, ptr noundef %conf, i64 noundef %14), !dbg !11296
  %15 = load i64, ptr %now, align 8, !dbg !11297, !tbaa !4039
  %call12 = call i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %rkb, i64 noundef %15), !dbg !11298
  store i32 %call12, ptr %backoff, align 4, !dbg !11299, !tbaa !3959
  br label %do.body13, !dbg !11300

do.body13:                                        ; preds = %do.end
  %16 = load i32, ptr %backoff, align 4, !dbg !11301, !tbaa !3959
  %cmp14 = icmp sle i32 15, %16, !dbg !11301
  br i1 %cmp14, label %land.lhs.true15, label %if.then17, !dbg !11301

land.lhs.true15:                                  ; preds = %do.body13
  %17 = load i32, ptr %backoff, align 4, !dbg !11301, !tbaa !3959
  %cmp16 = icmp sge i32 30, %17, !dbg !11301
  br i1 %cmp16, label %if.end30, label %if.then17, !dbg !11304

if.then17:                                        ; preds = %land.lhs.true15, %do.body13
  %18 = load ptr, ptr @stderr, align 8, !dbg !11305, !tbaa !3910
  %call18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %18, ptr noundef @.str.318, ptr noundef @.str.20, i32 noundef 2153, ptr noundef @__FUNCTION__.rd_ut_reconnect_backoff), !dbg !11305
  %19 = load ptr, ptr @stderr, align 8, !dbg !11305, !tbaa !3910
  %20 = load i32, ptr %backoff, align 4, !dbg !11305, !tbaa !3959
  %call19 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %19, ptr noundef @.str.315, i32 noundef %20, i32 noundef 15, i32 noundef 30), !dbg !11305
  %21 = load ptr, ptr @stderr, align 8, !dbg !11305, !tbaa !3910
  %call20 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef @.str.316), !dbg !11305
  %22 = load i8, ptr @rd_unittest_assert_on_failure, align 1, !dbg !11307, !tbaa !4126
  %tobool21 = icmp ne i8 %22, 0, !dbg !11307
  br i1 %tobool21, label %if.then22, label %if.end29, !dbg !11305

if.then22:                                        ; preds = %if.then17
  %23 = load i32, ptr %backoff, align 4, !dbg !11309, !tbaa !3959
  %cmp23 = icmp sle i32 15, %23, !dbg !11309
  br i1 %cmp23, label %land.lhs.true24, label %if.else27, !dbg !11309

land.lhs.true24:                                  ; preds = %if.then22
  %24 = load i32, ptr %backoff, align 4, !dbg !11309, !tbaa !3959
  %cmp25 = icmp sge i32 30, %24, !dbg !11309
  br i1 %cmp25, label %if.then26, label %if.else27, !dbg !11312

if.then26:                                        ; preds = %land.lhs.true24
  br label %if.end28, !dbg !11312

if.else27:                                        ; preds = %land.lhs.true24, %if.then22
  call void @__assert_fail(ptr noundef @.str.319, ptr noundef @.str.20, i32 noundef 2153, ptr noundef @__PRETTY_FUNCTION__.rd_ut_reconnect_backoff) #18, !dbg !11309
  unreachable, !dbg !11309

if.end28:                                         ; preds = %if.then26
  br label %if.end29, !dbg !11307

if.end29:                                         ; preds = %if.end28, %if.then17
  store i32 1, ptr %retval, align 4, !dbg !11305
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11305

if.end30:                                         ; preds = %land.lhs.true15
  br label %do.cond31, !dbg !11304

do.cond31:                                        ; preds = %if.end30
  br label %do.end32, !dbg !11304

do.end32:                                         ; preds = %do.cond31
  %25 = load i64, ptr %now, align 8, !dbg !11313, !tbaa !4039
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %rkb, ptr noundef %conf, i64 noundef %25), !dbg !11314
  %26 = load i64, ptr %now, align 8, !dbg !11315, !tbaa !4039
  %call33 = call i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %rkb, i64 noundef %26), !dbg !11316
  store i32 %call33, ptr %backoff, align 4, !dbg !11317, !tbaa !3959
  br label %do.body34, !dbg !11318

do.body34:                                        ; preds = %do.end32
  %27 = load i32, ptr %backoff, align 4, !dbg !11319, !tbaa !3959
  %cmp35 = icmp sle i32 30, %27, !dbg !11319
  br i1 %cmp35, label %land.lhs.true36, label %if.then38, !dbg !11319

land.lhs.true36:                                  ; preds = %do.body34
  %28 = load i32, ptr %backoff, align 4, !dbg !11319, !tbaa !3959
  %cmp37 = icmp sge i32 60, %28, !dbg !11319
  br i1 %cmp37, label %if.end51, label %if.then38, !dbg !11322

if.then38:                                        ; preds = %land.lhs.true36, %do.body34
  %29 = load ptr, ptr @stderr, align 8, !dbg !11323, !tbaa !3910
  %call39 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %29, ptr noundef @.str.320, ptr noundef @.str.20, i32 noundef 2158, ptr noundef @__FUNCTION__.rd_ut_reconnect_backoff), !dbg !11323
  %30 = load ptr, ptr @stderr, align 8, !dbg !11323, !tbaa !3910
  %31 = load i32, ptr %backoff, align 4, !dbg !11323, !tbaa !3959
  %call40 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %30, ptr noundef @.str.315, i32 noundef %31, i32 noundef 30, i32 noundef 60), !dbg !11323
  %32 = load ptr, ptr @stderr, align 8, !dbg !11323, !tbaa !3910
  %call41 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %32, ptr noundef @.str.316), !dbg !11323
  %33 = load i8, ptr @rd_unittest_assert_on_failure, align 1, !dbg !11325, !tbaa !4126
  %tobool42 = icmp ne i8 %33, 0, !dbg !11325
  br i1 %tobool42, label %if.then43, label %if.end50, !dbg !11323

if.then43:                                        ; preds = %if.then38
  %34 = load i32, ptr %backoff, align 4, !dbg !11327, !tbaa !3959
  %cmp44 = icmp sle i32 30, %34, !dbg !11327
  br i1 %cmp44, label %land.lhs.true45, label %if.else48, !dbg !11327

land.lhs.true45:                                  ; preds = %if.then43
  %35 = load i32, ptr %backoff, align 4, !dbg !11327, !tbaa !3959
  %cmp46 = icmp sge i32 60, %35, !dbg !11327
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !11330

if.then47:                                        ; preds = %land.lhs.true45
  br label %if.end49, !dbg !11330

if.else48:                                        ; preds = %land.lhs.true45, %if.then43
  call void @__assert_fail(ptr noundef @.str.321, ptr noundef @.str.20, i32 noundef 2158, ptr noundef @__PRETTY_FUNCTION__.rd_ut_reconnect_backoff) #18, !dbg !11327
  unreachable, !dbg !11327

if.end49:                                         ; preds = %if.then47
  br label %if.end50, !dbg !11325

if.end50:                                         ; preds = %if.end49, %if.then38
  store i32 1, ptr %retval, align 4, !dbg !11323
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11323

if.end51:                                         ; preds = %land.lhs.true36
  br label %do.cond52, !dbg !11322

do.cond52:                                        ; preds = %if.end51
  br label %do.end53, !dbg !11322

do.end53:                                         ; preds = %do.cond52
  %36 = load i64, ptr %now, align 8, !dbg !11331, !tbaa !4039
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %rkb, ptr noundef %conf, i64 noundef %36), !dbg !11332
  %37 = load i64, ptr %now, align 8, !dbg !11333, !tbaa !4039
  %call54 = call i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %rkb, i64 noundef %37), !dbg !11334
  store i32 %call54, ptr %backoff, align 4, !dbg !11335, !tbaa !3959
  br label %do.body55, !dbg !11336

do.body55:                                        ; preds = %do.end53
  %38 = load i32, ptr %backoff, align 4, !dbg !11337, !tbaa !3959
  %cmp56 = icmp sle i32 60, %38, !dbg !11337
  br i1 %cmp56, label %land.lhs.true57, label %if.then59, !dbg !11337

land.lhs.true57:                                  ; preds = %do.body55
  %reconnect_backoff_max_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11337
  %39 = load i32, ptr %reconnect_backoff_max_ms, align 4, !dbg !11337, !tbaa !11340
  %40 = load i32, ptr %backoff, align 4, !dbg !11337, !tbaa !3959
  %cmp58 = icmp sge i32 %39, %40, !dbg !11337
  br i1 %cmp58, label %if.end74, label %if.then59, !dbg !11341

if.then59:                                        ; preds = %land.lhs.true57, %do.body55
  %41 = load ptr, ptr @stderr, align 8, !dbg !11342, !tbaa !3910
  %call60 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef @.str.322, ptr noundef @.str.20, i32 noundef 2163, ptr noundef @__FUNCTION__.rd_ut_reconnect_backoff), !dbg !11342
  %42 = load ptr, ptr @stderr, align 8, !dbg !11342, !tbaa !3910
  %43 = load i32, ptr %backoff, align 4, !dbg !11342, !tbaa !3959
  %reconnect_backoff_max_ms61 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11342
  %44 = load i32, ptr %reconnect_backoff_max_ms61, align 4, !dbg !11342, !tbaa !11340
  %call62 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %42, ptr noundef @.str.315, i32 noundef %43, i32 noundef 60, i32 noundef %44), !dbg !11342
  %45 = load ptr, ptr @stderr, align 8, !dbg !11342, !tbaa !3910
  %call63 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %45, ptr noundef @.str.316), !dbg !11342
  %46 = load i8, ptr @rd_unittest_assert_on_failure, align 1, !dbg !11344, !tbaa !4126
  %tobool64 = icmp ne i8 %46, 0, !dbg !11344
  br i1 %tobool64, label %if.then65, label %if.end73, !dbg !11342

if.then65:                                        ; preds = %if.then59
  %47 = load i32, ptr %backoff, align 4, !dbg !11346, !tbaa !3959
  %cmp66 = icmp sle i32 60, %47, !dbg !11346
  br i1 %cmp66, label %land.lhs.true67, label %if.else71, !dbg !11346

land.lhs.true67:                                  ; preds = %if.then65
  %reconnect_backoff_max_ms68 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11346
  %48 = load i32, ptr %reconnect_backoff_max_ms68, align 4, !dbg !11346, !tbaa !11340
  %49 = load i32, ptr %backoff, align 4, !dbg !11346, !tbaa !3959
  %cmp69 = icmp sge i32 %48, %49, !dbg !11346
  br i1 %cmp69, label %if.then70, label %if.else71, !dbg !11349

if.then70:                                        ; preds = %land.lhs.true67
  br label %if.end72, !dbg !11349

if.else71:                                        ; preds = %land.lhs.true67, %if.then65
  call void @__assert_fail(ptr noundef @.str.323, ptr noundef @.str.20, i32 noundef 2163, ptr noundef @__PRETTY_FUNCTION__.rd_ut_reconnect_backoff) #18, !dbg !11346
  unreachable, !dbg !11346

if.end72:                                         ; preds = %if.then70
  br label %if.end73, !dbg !11344

if.end73:                                         ; preds = %if.end72, %if.then59
  store i32 1, ptr %retval, align 4, !dbg !11342
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11342

if.end74:                                         ; preds = %land.lhs.true57
  br label %do.cond75, !dbg !11341

do.cond75:                                        ; preds = %if.end74
  br label %do.end76, !dbg !11341

do.end76:                                         ; preds = %do.cond75
  %50 = load i64, ptr %now, align 8, !dbg !11350, !tbaa !4039
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %rkb, ptr noundef %conf, i64 noundef %50), !dbg !11351
  %51 = load i64, ptr %now, align 8, !dbg !11352, !tbaa !4039
  %call77 = call i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %rkb, i64 noundef %51), !dbg !11353
  store i32 %call77, ptr %backoff, align 4, !dbg !11354, !tbaa !3959
  br label %do.body78, !dbg !11355

do.body78:                                        ; preds = %do.end76
  %52 = load i32, ptr %backoff, align 4, !dbg !11356, !tbaa !3959
  %cmp79 = icmp sle i32 67, %52, !dbg !11356
  br i1 %cmp79, label %land.lhs.true80, label %if.then83, !dbg !11356

land.lhs.true80:                                  ; preds = %do.body78
  %reconnect_backoff_max_ms81 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11356
  %53 = load i32, ptr %reconnect_backoff_max_ms81, align 4, !dbg !11356, !tbaa !11340
  %54 = load i32, ptr %backoff, align 4, !dbg !11356, !tbaa !3959
  %cmp82 = icmp sge i32 %53, %54, !dbg !11356
  br i1 %cmp82, label %if.end98, label %if.then83, !dbg !11359

if.then83:                                        ; preds = %land.lhs.true80, %do.body78
  %55 = load ptr, ptr @stderr, align 8, !dbg !11360, !tbaa !3910
  %call84 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef @.str.324, ptr noundef @.str.20, i32 noundef 2168, ptr noundef @__FUNCTION__.rd_ut_reconnect_backoff), !dbg !11360
  %56 = load ptr, ptr @stderr, align 8, !dbg !11360, !tbaa !3910
  %57 = load i32, ptr %backoff, align 4, !dbg !11360, !tbaa !3959
  %reconnect_backoff_max_ms85 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11360
  %58 = load i32, ptr %reconnect_backoff_max_ms85, align 4, !dbg !11360, !tbaa !11340
  %call86 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %56, ptr noundef @.str.315, i32 noundef %57, i32 noundef 67, i32 noundef %58), !dbg !11360
  %59 = load ptr, ptr @stderr, align 8, !dbg !11360, !tbaa !3910
  %call87 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %59, ptr noundef @.str.316), !dbg !11360
  %60 = load i8, ptr @rd_unittest_assert_on_failure, align 1, !dbg !11362, !tbaa !4126
  %tobool88 = icmp ne i8 %60, 0, !dbg !11362
  br i1 %tobool88, label %if.then89, label %if.end97, !dbg !11360

if.then89:                                        ; preds = %if.then83
  %61 = load i32, ptr %backoff, align 4, !dbg !11364, !tbaa !3959
  %cmp90 = icmp sle i32 67, %61, !dbg !11364
  br i1 %cmp90, label %land.lhs.true91, label %if.else95, !dbg !11364

land.lhs.true91:                                  ; preds = %if.then89
  %reconnect_backoff_max_ms92 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11364
  %62 = load i32, ptr %reconnect_backoff_max_ms92, align 4, !dbg !11364, !tbaa !11340
  %63 = load i32, ptr %backoff, align 4, !dbg !11364, !tbaa !3959
  %cmp93 = icmp sge i32 %62, %63, !dbg !11364
  br i1 %cmp93, label %if.then94, label %if.else95, !dbg !11367

if.then94:                                        ; preds = %land.lhs.true91
  br label %if.end96, !dbg !11367

if.else95:                                        ; preds = %land.lhs.true91, %if.then89
  call void @__assert_fail(ptr noundef @.str.325, ptr noundef @.str.20, i32 noundef 2168, ptr noundef @__PRETTY_FUNCTION__.rd_ut_reconnect_backoff) #18, !dbg !11364
  unreachable, !dbg !11364

if.end96:                                         ; preds = %if.then94
  br label %if.end97, !dbg !11362

if.end97:                                         ; preds = %if.end96, %if.then83
  store i32 1, ptr %retval, align 4, !dbg !11360
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11360

if.end98:                                         ; preds = %land.lhs.true80
  br label %do.cond99, !dbg !11359

do.cond99:                                        ; preds = %if.end98
  br label %do.end100, !dbg !11359

do.end100:                                        ; preds = %do.cond99
  %64 = load i64, ptr %now, align 8, !dbg !11368, !tbaa !4039
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %rkb, ptr noundef %conf, i64 noundef %64), !dbg !11369
  %65 = load i64, ptr %now, align 8, !dbg !11370, !tbaa !4039
  %call101 = call i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %rkb, i64 noundef %65), !dbg !11371
  store i32 %call101, ptr %backoff, align 4, !dbg !11372, !tbaa !3959
  br label %do.body102, !dbg !11373

do.body102:                                       ; preds = %do.end100
  %66 = load i32, ptr %backoff, align 4, !dbg !11374, !tbaa !3959
  %cmp103 = icmp sle i32 67, %66, !dbg !11374
  br i1 %cmp103, label %land.lhs.true104, label %if.then107, !dbg !11374

land.lhs.true104:                                 ; preds = %do.body102
  %reconnect_backoff_max_ms105 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11374
  %67 = load i32, ptr %reconnect_backoff_max_ms105, align 4, !dbg !11374, !tbaa !11340
  %68 = load i32, ptr %backoff, align 4, !dbg !11374, !tbaa !3959
  %cmp106 = icmp sge i32 %67, %68, !dbg !11374
  br i1 %cmp106, label %if.end122, label %if.then107, !dbg !11377

if.then107:                                       ; preds = %land.lhs.true104, %do.body102
  %69 = load ptr, ptr @stderr, align 8, !dbg !11378, !tbaa !3910
  %call108 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %69, ptr noundef @.str.324, ptr noundef @.str.20, i32 noundef 2173, ptr noundef @__FUNCTION__.rd_ut_reconnect_backoff), !dbg !11378
  %70 = load ptr, ptr @stderr, align 8, !dbg !11378, !tbaa !3910
  %71 = load i32, ptr %backoff, align 4, !dbg !11378, !tbaa !3959
  %reconnect_backoff_max_ms109 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11378
  %72 = load i32, ptr %reconnect_backoff_max_ms109, align 4, !dbg !11378, !tbaa !11340
  %call110 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %70, ptr noundef @.str.315, i32 noundef %71, i32 noundef 67, i32 noundef %72), !dbg !11378
  %73 = load ptr, ptr @stderr, align 8, !dbg !11378, !tbaa !3910
  %call111 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %73, ptr noundef @.str.316), !dbg !11378
  %74 = load i8, ptr @rd_unittest_assert_on_failure, align 1, !dbg !11380, !tbaa !4126
  %tobool112 = icmp ne i8 %74, 0, !dbg !11380
  br i1 %tobool112, label %if.then113, label %if.end121, !dbg !11378

if.then113:                                       ; preds = %if.then107
  %75 = load i32, ptr %backoff, align 4, !dbg !11382, !tbaa !3959
  %cmp114 = icmp sle i32 67, %75, !dbg !11382
  br i1 %cmp114, label %land.lhs.true115, label %if.else119, !dbg !11382

land.lhs.true115:                                 ; preds = %if.then113
  %reconnect_backoff_max_ms116 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %conf, i32 0, i32 28, !dbg !11382
  %76 = load i32, ptr %reconnect_backoff_max_ms116, align 4, !dbg !11382, !tbaa !11340
  %77 = load i32, ptr %backoff, align 4, !dbg !11382, !tbaa !3959
  %cmp117 = icmp sge i32 %76, %77, !dbg !11382
  br i1 %cmp117, label %if.then118, label %if.else119, !dbg !11385

if.then118:                                       ; preds = %land.lhs.true115
  br label %if.end120, !dbg !11385

if.else119:                                       ; preds = %land.lhs.true115, %if.then113
  call void @__assert_fail(ptr noundef @.str.325, ptr noundef @.str.20, i32 noundef 2173, ptr noundef @__PRETTY_FUNCTION__.rd_ut_reconnect_backoff) #18, !dbg !11382
  unreachable, !dbg !11382

if.end120:                                        ; preds = %if.then118
  br label %if.end121, !dbg !11380

if.end121:                                        ; preds = %if.end120, %if.then107
  store i32 1, ptr %retval, align 4, !dbg !11378
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11378

if.end122:                                        ; preds = %land.lhs.true104
  br label %do.cond123, !dbg !11377

do.cond123:                                       ; preds = %if.end122
  br label %do.end124, !dbg !11377

do.end124:                                        ; preds = %do.cond123
  br label %do.body125, !dbg !11386

do.body125:                                       ; preds = %do.end124
  %78 = load ptr, ptr @stderr, align 8, !dbg !11387, !tbaa !3910
  %call126 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %78, ptr noundef @.str.326, ptr noundef @.str.20, i32 noundef 2175, ptr noundef @__FUNCTION__.rd_ut_reconnect_backoff), !dbg !11387
  store i32 0, ptr %retval, align 4, !dbg !11387
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11387

do.cond127:                                       ; No predecessors!
  br label %do.end128, !dbg !11387

do.end128:                                        ; preds = %do.cond127
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11389
  br label %cleanup, !dbg !11389

cleanup:                                          ; preds = %do.end128, %do.body125, %if.end121, %if.end97, %if.end73, %if.end50, %if.end29, %if.end10
  call void @llvm.lifetime.end.p0(i64 4, ptr %backoff) #16, !dbg !11389
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !11389
  call void @llvm.lifetime.end.p0(i64 2016, ptr %conf) #16, !dbg !11389
  call void @llvm.lifetime.end.p0(i64 3184, ptr %rkb) #16, !dbg !11389
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  %79 = load i32, ptr %retval, align 4, !dbg !11389
  ret i32 %79, !dbg !11389

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
declare !dbg !11390 i32 @clock_gettime(i32 noundef, ptr noundef) #9

; Function Attrs: nounwind
declare !dbg !11398 i32 @vsnprintf(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #9

declare !dbg !11401 ptr @rd_kafka_err2name(i32 noundef) #3

declare !dbg !11402 ptr @rd_kafka_features2str(i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_kafka_buf_write_i8(ptr noundef %rkbuf, i8 noundef signext %v) #4 !dbg !11404 {
entry:
  %rkbuf.addr = alloca ptr, align 8
  %v.addr = alloca i8, align 1
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !11410, metadata !DIExpression()), !dbg !11412
  store i8 %v, ptr %v.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !11411, metadata !DIExpression()), !dbg !11413
  %0 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11414, !tbaa !3910
  %call = call i64 @rd_kafka_buf_write(ptr noundef %0, ptr noundef %v.addr, i64 noundef 1), !dbg !11415
  ret i64 %call, !dbg !11416
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_buf_len(ptr noundef %rbuf) #4 !dbg !11417 {
entry:
  %rbuf.addr = alloca ptr, align 8
  store ptr %rbuf, ptr %rbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rbuf.addr, metadata !11419, metadata !DIExpression()), !dbg !11420
  %0 = load ptr, ptr %rbuf.addr, align 8, !dbg !11421, !tbaa !3910
  %rbuf_len = getelementptr inbounds %struct.rd_buf_s, ptr %0, i32 0, i32 3, !dbg !11422
  %1 = load i64, ptr %rbuf_len, align 8, !dbg !11422, !tbaa !11423
  ret i64 %1, !dbg !11424
}

declare !dbg !11425 void @rd_slice_init_full(ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_buf_update_i16(ptr noundef %rkbuf, i64 noundef %of, i16 noundef signext %v) #4 !dbg !11428 {
entry:
  %rkbuf.addr = alloca ptr, align 8
  %of.addr = alloca i64, align 8
  %v.addr = alloca i16, align 2
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !11432, metadata !DIExpression()), !dbg !11435
  store i64 %of, ptr %of.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %of.addr, metadata !11433, metadata !DIExpression()), !dbg !11436
  store i16 %v, ptr %v.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !11434, metadata !DIExpression()), !dbg !11437
  %0 = load i16, ptr %v.addr, align 2, !dbg !11438, !tbaa !3915
  %call = call zeroext i16 @__bswap_16(i16 noundef zeroext %0), !dbg !11438
  store i16 %call, ptr %v.addr, align 2, !dbg !11439, !tbaa !3915
  %1 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11440, !tbaa !3910
  %2 = load i64, ptr %of.addr, align 8, !dbg !11441, !tbaa !4039
  call void @rd_kafka_buf_update(ptr noundef %1, i64 noundef %2, ptr noundef %v.addr, i64 noundef 2), !dbg !11442
  ret void, !dbg !11443
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_kafka_buf_write(ptr noundef %rkbuf, ptr noundef %data, i64 noundef %len) #4 !dbg !11444 {
entry:
  %rkbuf.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %len.addr = alloca i64, align 8
  %r = alloca i64, align 8
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !11448, metadata !DIExpression()), !dbg !11452
  store ptr %data, ptr %data.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !11449, metadata !DIExpression()), !dbg !11453
  store i64 %len, ptr %len.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %len.addr, metadata !11450, metadata !DIExpression()), !dbg !11454
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #16, !dbg !11455
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !11451, metadata !DIExpression()), !dbg !11456
  %0 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11457, !tbaa !3910
  %rkbuf_buf = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %0, i32 0, i32 5, !dbg !11458
  %1 = load ptr, ptr %data.addr, align 8, !dbg !11459, !tbaa !3910
  %2 = load i64, ptr %len.addr, align 8, !dbg !11460, !tbaa !4039
  %call = call i64 @rd_buf_write(ptr noundef %rkbuf_buf, ptr noundef %1, i64 noundef %2), !dbg !11461
  store i64 %call, ptr %r, align 8, !dbg !11462, !tbaa !4039
  %3 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11463, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %3, i32 0, i32 3, !dbg !11465
  %4 = load i32, ptr %rkbuf_flags, align 8, !dbg !11465, !tbaa !5243
  %and = and i32 %4, 4, !dbg !11466
  %tobool = icmp ne i32 %and, 0, !dbg !11466
  br i1 %tobool, label %if.then, label %if.end, !dbg !11467

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11468, !tbaa !3910
  %rkbuf_crc = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %5, i32 0, i32 9, !dbg !11469
  %6 = load i32, ptr %rkbuf_crc, align 8, !dbg !11469, !tbaa !11470
  %7 = load ptr, ptr %data.addr, align 8, !dbg !11471, !tbaa !3910
  %8 = load i64, ptr %len.addr, align 8, !dbg !11472, !tbaa !4039
  %call1 = call i32 @rd_crc32_update(i32 noundef %6, ptr noundef %7, i64 noundef %8), !dbg !11473
  %9 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11474, !tbaa !3910
  %rkbuf_crc2 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %9, i32 0, i32 9, !dbg !11475
  store i32 %call1, ptr %rkbuf_crc2, align 8, !dbg !11476, !tbaa !11470
  br label %if.end, !dbg !11474

if.end:                                           ; preds = %if.then, %entry
  %10 = load i64, ptr %r, align 8, !dbg !11477, !tbaa !4039
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #16, !dbg !11478
  ret i64 %10, !dbg !11479
}

declare !dbg !11480 i64 @rd_buf_write(ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_crc32_update(i32 noundef %crc, ptr noundef %data, i64 noundef %data_len) #4 !dbg !11483 {
entry:
  %crc.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %data_len.addr = alloca i64, align 8
  store i32 %crc, ptr %crc.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %crc.addr, metadata !11487, metadata !DIExpression()), !dbg !11490
  store ptr %data, ptr %data.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !11488, metadata !DIExpression()), !dbg !11491
  store i64 %data_len, ptr %data_len.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %data_len.addr, metadata !11489, metadata !DIExpression()), !dbg !11492
  %0 = load i64, ptr %data_len.addr, align 8, !dbg !11493, !tbaa !4039
  %cmp = icmp ule i64 %0, 4294967295, !dbg !11493
  br i1 %cmp, label %if.then, label %if.else, !dbg !11496

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !11496

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.114, ptr noundef @.str.115, i32 noundef 127, ptr noundef @__PRETTY_FUNCTION__.rd_crc32_update) #18, !dbg !11493
  unreachable, !dbg !11493

if.end:                                           ; preds = %if.then
  %1 = load i32, ptr %crc.addr, align 4, !dbg !11497, !tbaa !3959
  %conv = zext i32 %1 to i64, !dbg !11497
  %2 = load ptr, ptr %data.addr, align 8, !dbg !11498, !tbaa !3910
  %3 = load i64, ptr %data_len.addr, align 8, !dbg !11499, !tbaa !4039
  %conv1 = trunc i64 %3 to i32, !dbg !11500
  %call = call i64 @crc32(i64 noundef %conv, ptr noundef %2, i32 noundef %conv1), !dbg !11501
  %conv2 = trunc i64 %call to i32, !dbg !11501
  ret i32 %conv2, !dbg !11502
}

declare !dbg !11503 i64 @crc32(i64 noundef, ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @__bswap_16(i16 noundef zeroext %__bsx) #4 !dbg !11512 {
entry:
  %__bsx.addr = alloca i16, align 2
  store i16 %__bsx, ptr %__bsx.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %__bsx.addr, metadata !11516, metadata !DIExpression()), !dbg !11517
  %0 = load i16, ptr %__bsx.addr, align 2, !dbg !11518, !tbaa !3915
  %conv = zext i16 %0 to i32, !dbg !11518
  %shr = ashr i32 %conv, 8, !dbg !11518
  %and = and i32 %shr, 255, !dbg !11518
  %1 = load i16, ptr %__bsx.addr, align 2, !dbg !11518, !tbaa !3915
  %conv1 = zext i16 %1 to i32, !dbg !11518
  %and2 = and i32 %conv1, 255, !dbg !11518
  %shl = shl i32 %and2, 8, !dbg !11518
  %or = or i32 %and, %shl, !dbg !11518
  %conv3 = trunc i32 %or to i16, !dbg !11518
  ret i16 %conv3, !dbg !11519
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_buf_update(ptr noundef %rkbuf, i64 noundef %of, ptr noundef %data, i64 noundef %len) #4 !dbg !11520 {
entry:
  %rkbuf.addr = alloca ptr, align 8
  %of.addr = alloca i64, align 8
  %data.addr = alloca ptr, align 8
  %len.addr = alloca i64, align 8
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !11524, metadata !DIExpression()), !dbg !11528
  store i64 %of, ptr %of.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %of.addr, metadata !11525, metadata !DIExpression()), !dbg !11529
  store ptr %data, ptr %data.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !11526, metadata !DIExpression()), !dbg !11530
  store i64 %len, ptr %len.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %len.addr, metadata !11527, metadata !DIExpression()), !dbg !11531
  br label %do.body, !dbg !11532

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11533, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %0, i32 0, i32 3, !dbg !11533
  %1 = load i32, ptr %rkbuf_flags, align 8, !dbg !11533, !tbaa !5243
  %and = and i32 %1, 4, !dbg !11533
  %tobool = icmp ne i32 %and, 0, !dbg !11533
  %lnot = xor i1 %tobool, true, !dbg !11533
  %lnot1 = xor i1 %lnot, true, !dbg !11533
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11533
  %conv = sext i32 %lnot.ext to i64, !dbg !11533
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11533
  %tobool2 = icmp ne i64 %expval, 0, !dbg !11533
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11536

if.then:                                          ; preds = %do.body
  call void @rd_kafka_crash(ptr noundef @.str.116, i32 noundef 1020, ptr noundef @__FUNCTION__.rd_kafka_buf_update, ptr noundef null, ptr noundef @.str.117) #17, !dbg !11533
  unreachable, !dbg !11533

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !11536

do.end:                                           ; preds = %if.end
  %2 = load ptr, ptr %rkbuf.addr, align 8, !dbg !11537, !tbaa !3910
  %rkbuf_buf = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %2, i32 0, i32 5, !dbg !11538
  %3 = load i64, ptr %of.addr, align 8, !dbg !11539, !tbaa !4039
  %4 = load ptr, ptr %data.addr, align 8, !dbg !11540, !tbaa !3910
  %5 = load i64, ptr %len.addr, align 8, !dbg !11541, !tbaa !4039
  %call = call i64 @rd_buf_write_update(ptr noundef %rkbuf_buf, i64 noundef %3, ptr noundef %4, i64 noundef %5), !dbg !11542
  ret void, !dbg !11543
}

declare !dbg !11544 i64 @rd_buf_write_update(ptr noundef, i64 noundef, ptr noundef, i64 noundef) #3

declare !dbg !11547 void @rd_kafka_buf_calc_timeout(ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_q_enq1(ptr noundef %rkq, ptr noundef %rko, ptr noundef %orig_destq, i32 noundef %at_head, i32 noundef %do_lock) #4 !dbg !11550 {
entry:
  %retval = alloca i32, align 4
  %rkq.addr = alloca ptr, align 8
  %rko.addr = alloca ptr, align 8
  %orig_destq.addr = alloca ptr, align 8
  %at_head.addr = alloca i32, align 4
  %do_lock.addr = alloca i32, align 4
  %fwdq = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !11554, metadata !DIExpression()), !dbg !11560
  store ptr %rko, ptr %rko.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rko.addr, metadata !11555, metadata !DIExpression()), !dbg !11561
  store ptr %orig_destq, ptr %orig_destq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %orig_destq.addr, metadata !11556, metadata !DIExpression()), !dbg !11562
  store i32 %at_head, ptr %at_head.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %at_head.addr, metadata !11557, metadata !DIExpression()), !dbg !11563
  store i32 %do_lock, ptr %do_lock.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %do_lock.addr, metadata !11558, metadata !DIExpression()), !dbg !11564
  call void @llvm.lifetime.start.p0(i64 8, ptr %fwdq) #16, !dbg !11565
  tail call void @llvm.dbg.declare(metadata ptr %fwdq, metadata !11559, metadata !DIExpression()), !dbg !11566
  %0 = load i32, ptr %do_lock.addr, align 4, !dbg !11567, !tbaa !3959
  %tobool = icmp ne i32 %0, 0, !dbg !11567
  br i1 %tobool, label %if.then, label %if.end, !dbg !11569

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkq.addr, align 8, !dbg !11570, !tbaa !3910
  %rkq_lock = getelementptr inbounds %struct.rd_kafka_q_s, ptr %1, i32 0, i32 0, !dbg !11571
  %call = call i32 @mtx_lock(ptr noundef %rkq_lock), !dbg !11572
  br label %if.end, !dbg !11572

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !11573

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !11574

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11574

do.end:                                           ; preds = %do.cond
  %2 = load ptr, ptr %rkq.addr, align 8, !dbg !11576, !tbaa !3910
  %rkq_flags = getelementptr inbounds %struct.rd_kafka_q_s, ptr %2, i32 0, i32 7, !dbg !11576
  %3 = load i32, ptr %rkq_flags, align 4, !dbg !11576, !tbaa !11578
  %and = and i32 %3, 2, !dbg !11576
  %tobool1 = icmp ne i32 %and, 0, !dbg !11576
  %lnot = xor i1 %tobool1, true, !dbg !11576
  %lnot.ext = zext i1 %lnot to i32, !dbg !11576
  %conv = sext i32 %lnot.ext to i64, !dbg !11576
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11576
  %tobool2 = icmp ne i64 %expval, 0, !dbg !11576
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !11579

if.then3:                                         ; preds = %do.end
  %4 = load i32, ptr %do_lock.addr, align 4, !dbg !11580, !tbaa !3959
  %tobool4 = icmp ne i32 %4, 0, !dbg !11580
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !11583

if.then5:                                         ; preds = %if.then3
  %5 = load ptr, ptr %rkq.addr, align 8, !dbg !11584, !tbaa !3910
  %rkq_lock6 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %5, i32 0, i32 0, !dbg !11585
  %call7 = call i32 @mtx_unlock(ptr noundef %rkq_lock6), !dbg !11586
  br label %if.end8, !dbg !11586

if.end8:                                          ; preds = %if.then5, %if.then3
  %6 = load ptr, ptr %rko.addr, align 8, !dbg !11587, !tbaa !3910
  %call9 = call i32 @rd_kafka_op_reply(ptr noundef %6, i32 noundef -197), !dbg !11588
  store i32 %call9, ptr %retval, align 4, !dbg !11589
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11589

if.end10:                                         ; preds = %do.end
  %7 = load ptr, ptr %rkq.addr, align 8, !dbg !11590, !tbaa !3910
  %call11 = call ptr @rd_kafka_q_fwd_get(ptr noundef %7, i32 noundef 0), !dbg !11592
  store ptr %call11, ptr %fwdq, align 8, !dbg !11593, !tbaa !3910
  %tobool12 = icmp ne ptr %call11, null, !dbg !11593
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !11594

if.then13:                                        ; preds = %if.end10
  %8 = load ptr, ptr %rko.addr, align 8, !dbg !11595, !tbaa !3910
  %rko_serve = getelementptr inbounds %struct.rd_kafka_op_s, ptr %8, i32 0, i32 11, !dbg !11598
  %9 = load ptr, ptr %rko_serve, align 8, !dbg !11598, !tbaa !11599
  %tobool14 = icmp ne ptr %9, null, !dbg !11595
  br i1 %tobool14, label %if.end19, label %land.lhs.true, !dbg !11600

land.lhs.true:                                    ; preds = %if.then13
  %10 = load ptr, ptr %orig_destq.addr, align 8, !dbg !11601, !tbaa !3910
  %rkq_serve = getelementptr inbounds %struct.rd_kafka_q_s, ptr %10, i32 0, i32 10, !dbg !11602
  %11 = load ptr, ptr %rkq_serve, align 8, !dbg !11602, !tbaa !11603
  %tobool15 = icmp ne ptr %11, null, !dbg !11601
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !11604

if.then16:                                        ; preds = %land.lhs.true
  %12 = load ptr, ptr %orig_destq.addr, align 8, !dbg !11605, !tbaa !3910
  %rkq_serve17 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %12, i32 0, i32 10, !dbg !11607
  %13 = load ptr, ptr %rkq_serve17, align 8, !dbg !11607, !tbaa !11603
  %14 = load ptr, ptr %rko.addr, align 8, !dbg !11608, !tbaa !3910
  %rko_serve18 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %14, i32 0, i32 11, !dbg !11609
  store ptr %13, ptr %rko_serve18, align 8, !dbg !11610, !tbaa !11599
  %15 = load ptr, ptr %orig_destq.addr, align 8, !dbg !11611, !tbaa !3910
  %rkq_opaque = getelementptr inbounds %struct.rd_kafka_q_s, ptr %15, i32 0, i32 11, !dbg !11612
  %16 = load ptr, ptr %rkq_opaque, align 8, !dbg !11612, !tbaa !11613
  %17 = load ptr, ptr %rko.addr, align 8, !dbg !11614, !tbaa !3910
  %rko_serve_opaque = getelementptr inbounds %struct.rd_kafka_op_s, ptr %17, i32 0, i32 12, !dbg !11615
  store ptr %16, ptr %rko_serve_opaque, align 8, !dbg !11616, !tbaa !11617
  br label %if.end19, !dbg !11618

if.end19:                                         ; preds = %if.then16, %land.lhs.true, %if.then13
  %18 = load ptr, ptr %rkq.addr, align 8, !dbg !11619, !tbaa !3910
  %19 = load ptr, ptr %rko.addr, align 8, !dbg !11620, !tbaa !3910
  %20 = load i32, ptr %at_head.addr, align 4, !dbg !11621, !tbaa !3959
  call void @rd_kafka_q_enq0(ptr noundef %18, ptr noundef %19, i32 noundef %20), !dbg !11622
  %21 = load ptr, ptr %rkq.addr, align 8, !dbg !11623, !tbaa !3910
  %rkq_cond = getelementptr inbounds %struct.rd_kafka_q_s, ptr %21, i32 0, i32 1, !dbg !11624
  %call20 = call i32 @cnd_signal(ptr noundef %rkq_cond), !dbg !11625
  %22 = load ptr, ptr %rkq.addr, align 8, !dbg !11626, !tbaa !3910
  %rkq_qlen = getelementptr inbounds %struct.rd_kafka_q_s, ptr %22, i32 0, i32 4, !dbg !11628
  %23 = load i32, ptr %rkq_qlen, align 8, !dbg !11628, !tbaa !11629
  %cmp = icmp eq i32 %23, 1, !dbg !11630
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !11631

if.then22:                                        ; preds = %if.end19
  %24 = load ptr, ptr %rkq.addr, align 8, !dbg !11632, !tbaa !3910
  call void @rd_kafka_q_io_event(ptr noundef %24), !dbg !11633
  br label %if.end23, !dbg !11633

if.end23:                                         ; preds = %if.then22, %if.end19
  %25 = load i32, ptr %do_lock.addr, align 4, !dbg !11634, !tbaa !3959
  %tobool24 = icmp ne i32 %25, 0, !dbg !11634
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !11636

if.then25:                                        ; preds = %if.end23
  %26 = load ptr, ptr %rkq.addr, align 8, !dbg !11637, !tbaa !3910
  %rkq_lock26 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %26, i32 0, i32 0, !dbg !11638
  %call27 = call i32 @mtx_unlock(ptr noundef %rkq_lock26), !dbg !11639
  br label %if.end28, !dbg !11639

if.end28:                                         ; preds = %if.then25, %if.end23
  br label %if.end35, !dbg !11640

if.else:                                          ; preds = %if.end10
  %27 = load i32, ptr %do_lock.addr, align 4, !dbg !11641, !tbaa !3959
  %tobool29 = icmp ne i32 %27, 0, !dbg !11641
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !11644

if.then30:                                        ; preds = %if.else
  %28 = load ptr, ptr %rkq.addr, align 8, !dbg !11645, !tbaa !3910
  %rkq_lock31 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %28, i32 0, i32 0, !dbg !11646
  %call32 = call i32 @mtx_unlock(ptr noundef %rkq_lock31), !dbg !11647
  br label %if.end33, !dbg !11647

if.end33:                                         ; preds = %if.then30, %if.else
  %29 = load ptr, ptr %fwdq, align 8, !dbg !11648, !tbaa !3910
  %30 = load ptr, ptr %rko.addr, align 8, !dbg !11649, !tbaa !3910
  %31 = load ptr, ptr %orig_destq.addr, align 8, !dbg !11650, !tbaa !3910
  %32 = load i32, ptr %at_head.addr, align 4, !dbg !11651, !tbaa !3959
  %call34 = call i32 @rd_kafka_q_enq1(ptr noundef %29, ptr noundef %30, ptr noundef %31, i32 noundef %32, i32 noundef 1), !dbg !11652
  %33 = load ptr, ptr %fwdq, align 8, !dbg !11653, !tbaa !3910
  call void @rd_kafka_q_destroy0(ptr noundef %33, i32 noundef 0), !dbg !11653
  br label %if.end35

if.end35:                                         ; preds = %if.end33, %if.end28
  store i32 1, ptr %retval, align 4, !dbg !11654
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11654

cleanup:                                          ; preds = %if.end35, %if.end8
  call void @llvm.lifetime.end.p0(i64 8, ptr %fwdq) #16, !dbg !11655
  %34 = load i32, ptr %retval, align 4, !dbg !11655
  ret i32 %34, !dbg !11655
}

declare !dbg !11656 i32 @rd_kafka_op_reply(ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_kafka_q_fwd_get(ptr noundef %rkq, i32 noundef %do_lock) #4 !dbg !11659 {
entry:
  %rkq.addr = alloca ptr, align 8
  %do_lock.addr = alloca i32, align 4
  %fwdq = alloca ptr, align 8
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !11663, metadata !DIExpression()), !dbg !11666
  store i32 %do_lock, ptr %do_lock.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %do_lock.addr, metadata !11664, metadata !DIExpression()), !dbg !11667
  call void @llvm.lifetime.start.p0(i64 8, ptr %fwdq) #16, !dbg !11668
  tail call void @llvm.dbg.declare(metadata ptr %fwdq, metadata !11665, metadata !DIExpression()), !dbg !11669
  %0 = load i32, ptr %do_lock.addr, align 4, !dbg !11670, !tbaa !3959
  %tobool = icmp ne i32 %0, 0, !dbg !11670
  br i1 %tobool, label %if.then, label %if.end, !dbg !11672

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkq.addr, align 8, !dbg !11673, !tbaa !3910
  %rkq_lock = getelementptr inbounds %struct.rd_kafka_q_s, ptr %1, i32 0, i32 0, !dbg !11674
  %call = call i32 @mtx_lock(ptr noundef %rkq_lock), !dbg !11675
  br label %if.end, !dbg !11675

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr %rkq.addr, align 8, !dbg !11676, !tbaa !3910
  %rkq_fwdq = getelementptr inbounds %struct.rd_kafka_q_s, ptr %2, i32 0, i32 2, !dbg !11678
  %3 = load ptr, ptr %rkq_fwdq, align 8, !dbg !11678, !tbaa !11679
  store ptr %3, ptr %fwdq, align 8, !dbg !11680, !tbaa !3910
  %tobool1 = icmp ne ptr %3, null, !dbg !11680
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !11681

if.then2:                                         ; preds = %if.end
  %4 = load ptr, ptr %fwdq, align 8, !dbg !11682, !tbaa !3910
  %call3 = call ptr @rd_kafka_q_keep(ptr noundef %4), !dbg !11683
  br label %if.end4, !dbg !11683

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = load i32, ptr %do_lock.addr, align 4, !dbg !11684, !tbaa !3959
  %tobool5 = icmp ne i32 %5, 0, !dbg !11684
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !11686

if.then6:                                         ; preds = %if.end4
  %6 = load ptr, ptr %rkq.addr, align 8, !dbg !11687, !tbaa !3910
  %rkq_lock7 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %6, i32 0, i32 0, !dbg !11688
  %call8 = call i32 @mtx_unlock(ptr noundef %rkq_lock7), !dbg !11689
  br label %if.end9, !dbg !11689

if.end9:                                          ; preds = %if.then6, %if.end4
  %7 = load ptr, ptr %fwdq, align 8, !dbg !11690, !tbaa !3910
  call void @llvm.lifetime.end.p0(i64 8, ptr %fwdq) #16, !dbg !11691
  ret ptr %7, !dbg !11692
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_q_enq0(ptr noundef %rkq, ptr noundef %rko, i32 noundef %at_head) #4 !dbg !11693 {
entry:
  %rkq.addr = alloca ptr, align 8
  %rko.addr = alloca ptr, align 8
  %at_head.addr = alloca i32, align 4
  %_tmp = alloca ptr, align 8
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !11697, metadata !DIExpression()), !dbg !11706
  store ptr %rko, ptr %rko.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rko.addr, metadata !11698, metadata !DIExpression()), !dbg !11707
  store i32 %at_head, ptr %at_head.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %at_head.addr, metadata !11699, metadata !DIExpression()), !dbg !11708
  %0 = load ptr, ptr %rko.addr, align 8, !dbg !11709, !tbaa !3910
  %rko_prio = getelementptr inbounds %struct.rd_kafka_op_s, ptr %0, i32 0, i32 8, !dbg !11709
  %1 = load i32, ptr %rko_prio, align 4, !dbg !11709, !tbaa !10092
  %tobool = icmp ne i32 %1, 0, !dbg !11709
  %lnot = xor i1 %tobool, true, !dbg !11709
  %lnot.ext = zext i1 %lnot to i32, !dbg !11709
  %conv = sext i32 %lnot.ext to i64, !dbg !11709
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !11709
  %tobool1 = icmp ne i64 %expval, 0, !dbg !11709
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11710

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11711

do.body:                                          ; preds = %if.then
  %2 = load ptr, ptr %rko.addr, align 8, !dbg !11712, !tbaa !3910
  %rko_link = getelementptr inbounds %struct.rd_kafka_op_s, ptr %2, i32 0, i32 0, !dbg !11712
  %tqe_next = getelementptr inbounds %struct.anon.48, ptr %rko_link, i32 0, i32 0, !dbg !11712
  store ptr null, ptr %tqe_next, align 8, !dbg !11712, !tbaa !11714
  %3 = load ptr, ptr %rkq.addr, align 8, !dbg !11712, !tbaa !3910
  %rkq_q = getelementptr inbounds %struct.rd_kafka_q_s, ptr %3, i32 0, i32 3, !dbg !11712
  %tqh_last = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q, i32 0, i32 1, !dbg !11712
  %4 = load ptr, ptr %tqh_last, align 8, !dbg !11712, !tbaa !11715
  %5 = load ptr, ptr %rko.addr, align 8, !dbg !11712, !tbaa !3910
  %rko_link2 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %5, i32 0, i32 0, !dbg !11712
  %tqe_prev = getelementptr inbounds %struct.anon.48, ptr %rko_link2, i32 0, i32 1, !dbg !11712
  store ptr %4, ptr %tqe_prev, align 8, !dbg !11712, !tbaa !11716
  %6 = load ptr, ptr %rko.addr, align 8, !dbg !11712, !tbaa !3910
  %7 = load ptr, ptr %rkq.addr, align 8, !dbg !11712, !tbaa !3910
  %rkq_q3 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %7, i32 0, i32 3, !dbg !11712
  %tqh_last4 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q3, i32 0, i32 1, !dbg !11712
  %8 = load ptr, ptr %tqh_last4, align 8, !dbg !11712, !tbaa !11715
  store ptr %6, ptr %8, align 8, !dbg !11712, !tbaa !3910
  %9 = load ptr, ptr %rko.addr, align 8, !dbg !11712, !tbaa !3910
  %rko_link5 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %9, i32 0, i32 0, !dbg !11712
  %tqe_next6 = getelementptr inbounds %struct.anon.48, ptr %rko_link5, i32 0, i32 0, !dbg !11712
  %10 = load ptr, ptr %rkq.addr, align 8, !dbg !11712, !tbaa !3910
  %rkq_q7 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %10, i32 0, i32 3, !dbg !11712
  %tqh_last8 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q7, i32 0, i32 1, !dbg !11712
  store ptr %tqe_next6, ptr %tqh_last8, align 8, !dbg !11712, !tbaa !11715
  br label %do.end, !dbg !11712

do.end:                                           ; preds = %do.body
  br label %if.end131, !dbg !11712

if.else:                                          ; preds = %entry
  %11 = load i32, ptr %at_head.addr, align 4, !dbg !11717, !tbaa !3959
  %tobool9 = icmp ne i32 %11, 0, !dbg !11717
  br i1 %tobool9, label %if.then10, label %if.else35, !dbg !11718

if.then10:                                        ; preds = %if.else
  br label %do.body11, !dbg !11719

do.body11:                                        ; preds = %if.then10
  %12 = load ptr, ptr %rkq.addr, align 8, !dbg !11720, !tbaa !3910
  %rkq_q12 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %12, i32 0, i32 3, !dbg !11720
  %tqh_first = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q12, i32 0, i32 0, !dbg !11720
  %13 = load ptr, ptr %tqh_first, align 8, !dbg !11720, !tbaa !11723
  %14 = load ptr, ptr %rko.addr, align 8, !dbg !11720, !tbaa !3910
  %rko_link13 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %14, i32 0, i32 0, !dbg !11720
  %tqe_next14 = getelementptr inbounds %struct.anon.48, ptr %rko_link13, i32 0, i32 0, !dbg !11720
  store ptr %13, ptr %tqe_next14, align 8, !dbg !11720, !tbaa !11714
  %cmp = icmp ne ptr %13, null, !dbg !11720
  br i1 %cmp, label %if.then16, label %if.else23, !dbg !11724

if.then16:                                        ; preds = %do.body11
  %15 = load ptr, ptr %rko.addr, align 8, !dbg !11720, !tbaa !3910
  %rko_link17 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %15, i32 0, i32 0, !dbg !11720
  %tqe_next18 = getelementptr inbounds %struct.anon.48, ptr %rko_link17, i32 0, i32 0, !dbg !11720
  %16 = load ptr, ptr %rkq.addr, align 8, !dbg !11720, !tbaa !3910
  %rkq_q19 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %16, i32 0, i32 3, !dbg !11720
  %tqh_first20 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q19, i32 0, i32 0, !dbg !11720
  %17 = load ptr, ptr %tqh_first20, align 8, !dbg !11720, !tbaa !11723
  %rko_link21 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %17, i32 0, i32 0, !dbg !11720
  %tqe_prev22 = getelementptr inbounds %struct.anon.48, ptr %rko_link21, i32 0, i32 1, !dbg !11720
  store ptr %tqe_next18, ptr %tqe_prev22, align 8, !dbg !11720, !tbaa !11716
  br label %if.end, !dbg !11720

if.else23:                                        ; preds = %do.body11
  %18 = load ptr, ptr %rko.addr, align 8, !dbg !11720, !tbaa !3910
  %rko_link24 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %18, i32 0, i32 0, !dbg !11720
  %tqe_next25 = getelementptr inbounds %struct.anon.48, ptr %rko_link24, i32 0, i32 0, !dbg !11720
  %19 = load ptr, ptr %rkq.addr, align 8, !dbg !11720, !tbaa !3910
  %rkq_q26 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %19, i32 0, i32 3, !dbg !11720
  %tqh_last27 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q26, i32 0, i32 1, !dbg !11720
  store ptr %tqe_next25, ptr %tqh_last27, align 8, !dbg !11720, !tbaa !11715
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then16
  %20 = load ptr, ptr %rko.addr, align 8, !dbg !11724, !tbaa !3910
  %21 = load ptr, ptr %rkq.addr, align 8, !dbg !11724, !tbaa !3910
  %rkq_q28 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %21, i32 0, i32 3, !dbg !11724
  %tqh_first29 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q28, i32 0, i32 0, !dbg !11724
  store ptr %20, ptr %tqh_first29, align 8, !dbg !11724, !tbaa !11723
  %22 = load ptr, ptr %rkq.addr, align 8, !dbg !11724, !tbaa !3910
  %rkq_q30 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %22, i32 0, i32 3, !dbg !11724
  %tqh_first31 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q30, i32 0, i32 0, !dbg !11724
  %23 = load ptr, ptr %rko.addr, align 8, !dbg !11724, !tbaa !3910
  %rko_link32 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %23, i32 0, i32 0, !dbg !11724
  %tqe_prev33 = getelementptr inbounds %struct.anon.48, ptr %rko_link32, i32 0, i32 1, !dbg !11724
  store ptr %tqh_first31, ptr %tqe_prev33, align 8, !dbg !11724, !tbaa !11716
  br label %do.end34, !dbg !11724

do.end34:                                         ; preds = %if.end
  br label %if.end130, !dbg !11724

if.else35:                                        ; preds = %if.else
  br label %do.body36, !dbg !11725

do.body36:                                        ; preds = %if.else35
  %24 = load ptr, ptr %rkq.addr, align 8, !dbg !11726, !tbaa !3910
  %rkq_q37 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %24, i32 0, i32 3, !dbg !11726
  %tqh_first38 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q37, i32 0, i32 0, !dbg !11726
  %25 = load ptr, ptr %tqh_first38, align 8, !dbg !11726, !tbaa !11723
  %cmp39 = icmp eq ptr %25, null, !dbg !11726
  br i1 %cmp39, label %if.then41, label %if.else69, !dbg !11727

if.then41:                                        ; preds = %do.body36
  br label %do.body42, !dbg !11728

do.body42:                                        ; preds = %if.then41
  %26 = load ptr, ptr %rkq.addr, align 8, !dbg !11730, !tbaa !3910
  %rkq_q43 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %26, i32 0, i32 3, !dbg !11730
  %tqh_first44 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q43, i32 0, i32 0, !dbg !11730
  %27 = load ptr, ptr %tqh_first44, align 8, !dbg !11730, !tbaa !11723
  %28 = load ptr, ptr %rko.addr, align 8, !dbg !11730, !tbaa !3910
  %rko_link45 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %28, i32 0, i32 0, !dbg !11730
  %tqe_next46 = getelementptr inbounds %struct.anon.48, ptr %rko_link45, i32 0, i32 0, !dbg !11730
  store ptr %27, ptr %tqe_next46, align 8, !dbg !11730, !tbaa !11714
  %cmp47 = icmp ne ptr %27, null, !dbg !11730
  br i1 %cmp47, label %if.then49, label %if.else56, !dbg !11733

if.then49:                                        ; preds = %do.body42
  %29 = load ptr, ptr %rko.addr, align 8, !dbg !11730, !tbaa !3910
  %rko_link50 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %29, i32 0, i32 0, !dbg !11730
  %tqe_next51 = getelementptr inbounds %struct.anon.48, ptr %rko_link50, i32 0, i32 0, !dbg !11730
  %30 = load ptr, ptr %rkq.addr, align 8, !dbg !11730, !tbaa !3910
  %rkq_q52 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %30, i32 0, i32 3, !dbg !11730
  %tqh_first53 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q52, i32 0, i32 0, !dbg !11730
  %31 = load ptr, ptr %tqh_first53, align 8, !dbg !11730, !tbaa !11723
  %rko_link54 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %31, i32 0, i32 0, !dbg !11730
  %tqe_prev55 = getelementptr inbounds %struct.anon.48, ptr %rko_link54, i32 0, i32 1, !dbg !11730
  store ptr %tqe_next51, ptr %tqe_prev55, align 8, !dbg !11730, !tbaa !11716
  br label %if.end61, !dbg !11730

if.else56:                                        ; preds = %do.body42
  %32 = load ptr, ptr %rko.addr, align 8, !dbg !11730, !tbaa !3910
  %rko_link57 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %32, i32 0, i32 0, !dbg !11730
  %tqe_next58 = getelementptr inbounds %struct.anon.48, ptr %rko_link57, i32 0, i32 0, !dbg !11730
  %33 = load ptr, ptr %rkq.addr, align 8, !dbg !11730, !tbaa !3910
  %rkq_q59 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %33, i32 0, i32 3, !dbg !11730
  %tqh_last60 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q59, i32 0, i32 1, !dbg !11730
  store ptr %tqe_next58, ptr %tqh_last60, align 8, !dbg !11730, !tbaa !11715
  br label %if.end61

if.end61:                                         ; preds = %if.else56, %if.then49
  %34 = load ptr, ptr %rko.addr, align 8, !dbg !11733, !tbaa !3910
  %35 = load ptr, ptr %rkq.addr, align 8, !dbg !11733, !tbaa !3910
  %rkq_q62 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %35, i32 0, i32 3, !dbg !11733
  %tqh_first63 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q62, i32 0, i32 0, !dbg !11733
  store ptr %34, ptr %tqh_first63, align 8, !dbg !11733, !tbaa !11723
  %36 = load ptr, ptr %rkq.addr, align 8, !dbg !11733, !tbaa !3910
  %rkq_q64 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %36, i32 0, i32 3, !dbg !11733
  %tqh_first65 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q64, i32 0, i32 0, !dbg !11733
  %37 = load ptr, ptr %rko.addr, align 8, !dbg !11733, !tbaa !3910
  %rko_link66 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %37, i32 0, i32 0, !dbg !11733
  %tqe_prev67 = getelementptr inbounds %struct.anon.48, ptr %rko_link66, i32 0, i32 1, !dbg !11733
  store ptr %tqh_first65, ptr %tqe_prev67, align 8, !dbg !11733, !tbaa !11716
  br label %do.end68, !dbg !11733

do.end68:                                         ; preds = %if.end61
  br label %if.end127, !dbg !11728

if.else69:                                        ; preds = %do.body36
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp) #16, !dbg !11734
  tail call void @llvm.dbg.declare(metadata ptr %_tmp, metadata !11700, metadata !DIExpression()), !dbg !11734
  %38 = load ptr, ptr %rkq.addr, align 8, !dbg !11735, !tbaa !3910
  %rkq_q70 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %38, i32 0, i32 3, !dbg !11735
  %tqh_first71 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q70, i32 0, i32 0, !dbg !11735
  %39 = load ptr, ptr %tqh_first71, align 8, !dbg !11735, !tbaa !11723
  store ptr %39, ptr %_tmp, align 8, !dbg !11735, !tbaa !3910
  br label %for.cond, !dbg !11735

for.cond:                                         ; preds = %for.inc, %if.else69
  %40 = load ptr, ptr %_tmp, align 8, !dbg !11737, !tbaa !3910
  %cmp72 = icmp ne ptr %40, null, !dbg !11737
  br i1 %cmp72, label %for.body, label %for.end, !dbg !11735

for.body:                                         ; preds = %for.cond
  %41 = load ptr, ptr %rko.addr, align 8, !dbg !11739, !tbaa !3910
  %42 = load ptr, ptr %_tmp, align 8, !dbg !11739, !tbaa !3910
  %call = call i32 @rd_kafka_op_cmp_prio(ptr noundef %41, ptr noundef %42), !dbg !11739
  %cmp74 = icmp slt i32 %call, 0, !dbg !11739
  br i1 %cmp74, label %if.then76, label %if.end91, !dbg !11742

if.then76:                                        ; preds = %for.body
  br label %do.body77, !dbg !11743

do.body77:                                        ; preds = %if.then76
  %43 = load ptr, ptr %_tmp, align 8, !dbg !11745, !tbaa !3910
  %rko_link78 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %43, i32 0, i32 0, !dbg !11745
  %tqe_prev79 = getelementptr inbounds %struct.anon.48, ptr %rko_link78, i32 0, i32 1, !dbg !11745
  %44 = load ptr, ptr %tqe_prev79, align 8, !dbg !11745, !tbaa !11716
  %45 = load ptr, ptr %rko.addr, align 8, !dbg !11745, !tbaa !3910
  %rko_link80 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %45, i32 0, i32 0, !dbg !11745
  %tqe_prev81 = getelementptr inbounds %struct.anon.48, ptr %rko_link80, i32 0, i32 1, !dbg !11745
  store ptr %44, ptr %tqe_prev81, align 8, !dbg !11745, !tbaa !11716
  %46 = load ptr, ptr %_tmp, align 8, !dbg !11745, !tbaa !3910
  %47 = load ptr, ptr %rko.addr, align 8, !dbg !11745, !tbaa !3910
  %rko_link82 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %47, i32 0, i32 0, !dbg !11745
  %tqe_next83 = getelementptr inbounds %struct.anon.48, ptr %rko_link82, i32 0, i32 0, !dbg !11745
  store ptr %46, ptr %tqe_next83, align 8, !dbg !11745, !tbaa !11714
  %48 = load ptr, ptr %rko.addr, align 8, !dbg !11745, !tbaa !3910
  %49 = load ptr, ptr %_tmp, align 8, !dbg !11745, !tbaa !3910
  %rko_link84 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %49, i32 0, i32 0, !dbg !11745
  %tqe_prev85 = getelementptr inbounds %struct.anon.48, ptr %rko_link84, i32 0, i32 1, !dbg !11745
  %50 = load ptr, ptr %tqe_prev85, align 8, !dbg !11745, !tbaa !11716
  store ptr %48, ptr %50, align 8, !dbg !11745, !tbaa !3910
  %51 = load ptr, ptr %rko.addr, align 8, !dbg !11745, !tbaa !3910
  %rko_link86 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %51, i32 0, i32 0, !dbg !11745
  %tqe_next87 = getelementptr inbounds %struct.anon.48, ptr %rko_link86, i32 0, i32 0, !dbg !11745
  %52 = load ptr, ptr %_tmp, align 8, !dbg !11745, !tbaa !3910
  %rko_link88 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %52, i32 0, i32 0, !dbg !11745
  %tqe_prev89 = getelementptr inbounds %struct.anon.48, ptr %rko_link88, i32 0, i32 1, !dbg !11745
  store ptr %tqe_next87, ptr %tqe_prev89, align 8, !dbg !11745, !tbaa !11716
  br label %do.cond, !dbg !11745

do.cond:                                          ; preds = %do.body77
  br label %do.end90, !dbg !11745

do.end90:                                         ; preds = %do.cond
  br label %for.end, !dbg !11743

if.end91:                                         ; preds = %for.body
  %53 = load ptr, ptr %_tmp, align 8, !dbg !11747, !tbaa !3910
  %rko_link92 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %53, i32 0, i32 0, !dbg !11747
  %tqe_next93 = getelementptr inbounds %struct.anon.48, ptr %rko_link92, i32 0, i32 0, !dbg !11747
  %54 = load ptr, ptr %tqe_next93, align 8, !dbg !11747, !tbaa !11714
  %tobool94 = icmp ne ptr %54, null, !dbg !11747
  br i1 %tobool94, label %if.end124, label %if.then95, !dbg !11742

if.then95:                                        ; preds = %if.end91
  br label %do.body96, !dbg !11749

do.body96:                                        ; preds = %if.then95
  %55 = load ptr, ptr %_tmp, align 8, !dbg !11751, !tbaa !3910
  %rko_link97 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %55, i32 0, i32 0, !dbg !11751
  %tqe_next98 = getelementptr inbounds %struct.anon.48, ptr %rko_link97, i32 0, i32 0, !dbg !11751
  %56 = load ptr, ptr %tqe_next98, align 8, !dbg !11751, !tbaa !11714
  %57 = load ptr, ptr %rko.addr, align 8, !dbg !11751, !tbaa !3910
  %rko_link99 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %57, i32 0, i32 0, !dbg !11751
  %tqe_next100 = getelementptr inbounds %struct.anon.48, ptr %rko_link99, i32 0, i32 0, !dbg !11751
  store ptr %56, ptr %tqe_next100, align 8, !dbg !11751, !tbaa !11714
  %cmp101 = icmp ne ptr %56, null, !dbg !11751
  br i1 %cmp101, label %if.then103, label %if.else110, !dbg !11754

if.then103:                                       ; preds = %do.body96
  %58 = load ptr, ptr %rko.addr, align 8, !dbg !11751, !tbaa !3910
  %rko_link104 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %58, i32 0, i32 0, !dbg !11751
  %tqe_next105 = getelementptr inbounds %struct.anon.48, ptr %rko_link104, i32 0, i32 0, !dbg !11751
  %59 = load ptr, ptr %rko.addr, align 8, !dbg !11751, !tbaa !3910
  %rko_link106 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %59, i32 0, i32 0, !dbg !11751
  %tqe_next107 = getelementptr inbounds %struct.anon.48, ptr %rko_link106, i32 0, i32 0, !dbg !11751
  %60 = load ptr, ptr %tqe_next107, align 8, !dbg !11751, !tbaa !11714
  %rko_link108 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %60, i32 0, i32 0, !dbg !11751
  %tqe_prev109 = getelementptr inbounds %struct.anon.48, ptr %rko_link108, i32 0, i32 1, !dbg !11751
  store ptr %tqe_next105, ptr %tqe_prev109, align 8, !dbg !11751, !tbaa !11716
  br label %if.end115, !dbg !11751

if.else110:                                       ; preds = %do.body96
  %61 = load ptr, ptr %rko.addr, align 8, !dbg !11751, !tbaa !3910
  %rko_link111 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %61, i32 0, i32 0, !dbg !11751
  %tqe_next112 = getelementptr inbounds %struct.anon.48, ptr %rko_link111, i32 0, i32 0, !dbg !11751
  %62 = load ptr, ptr %rkq.addr, align 8, !dbg !11751, !tbaa !3910
  %rkq_q113 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %62, i32 0, i32 3, !dbg !11751
  %tqh_last114 = getelementptr inbounds %struct.rd_kafka_op_tailq, ptr %rkq_q113, i32 0, i32 1, !dbg !11751
  store ptr %tqe_next112, ptr %tqh_last114, align 8, !dbg !11751, !tbaa !11715
  br label %if.end115

if.end115:                                        ; preds = %if.else110, %if.then103
  %63 = load ptr, ptr %rko.addr, align 8, !dbg !11754, !tbaa !3910
  %64 = load ptr, ptr %_tmp, align 8, !dbg !11754, !tbaa !3910
  %rko_link116 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %64, i32 0, i32 0, !dbg !11754
  %tqe_next117 = getelementptr inbounds %struct.anon.48, ptr %rko_link116, i32 0, i32 0, !dbg !11754
  store ptr %63, ptr %tqe_next117, align 8, !dbg !11754, !tbaa !11714
  %65 = load ptr, ptr %_tmp, align 8, !dbg !11754, !tbaa !3910
  %rko_link118 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %65, i32 0, i32 0, !dbg !11754
  %tqe_next119 = getelementptr inbounds %struct.anon.48, ptr %rko_link118, i32 0, i32 0, !dbg !11754
  %66 = load ptr, ptr %rko.addr, align 8, !dbg !11754, !tbaa !3910
  %rko_link120 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %66, i32 0, i32 0, !dbg !11754
  %tqe_prev121 = getelementptr inbounds %struct.anon.48, ptr %rko_link120, i32 0, i32 1, !dbg !11754
  store ptr %tqe_next119, ptr %tqe_prev121, align 8, !dbg !11754, !tbaa !11716
  br label %do.cond122, !dbg !11754

do.cond122:                                       ; preds = %if.end115
  br label %do.end123, !dbg !11754

do.end123:                                        ; preds = %do.cond122
  br label %for.end, !dbg !11749

if.end124:                                        ; preds = %if.end91
  br label %for.inc, !dbg !11742

for.inc:                                          ; preds = %if.end124
  %67 = load ptr, ptr %_tmp, align 8, !dbg !11737, !tbaa !3910
  %rko_link125 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %67, i32 0, i32 0, !dbg !11737
  %tqe_next126 = getelementptr inbounds %struct.anon.48, ptr %rko_link125, i32 0, i32 0, !dbg !11737
  %68 = load ptr, ptr %tqe_next126, align 8, !dbg !11737, !tbaa !11714
  store ptr %68, ptr %_tmp, align 8, !dbg !11737, !tbaa !3910
  br label %for.cond, !dbg !11737, !llvm.loop !11755

for.end:                                          ; preds = %do.end123, %do.end90, %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp) #16, !dbg !11726
  br label %if.end127

if.end127:                                        ; preds = %for.end, %do.end68
  br label %do.end129, !dbg !11727

do.end129:                                        ; preds = %if.end127
  br label %if.end130

if.end130:                                        ; preds = %do.end129, %do.end34
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %do.end
  %69 = load ptr, ptr %rkq.addr, align 8, !dbg !11756, !tbaa !3910
  %rkq_qlen = getelementptr inbounds %struct.rd_kafka_q_s, ptr %69, i32 0, i32 4, !dbg !11757
  %70 = load i32, ptr %rkq_qlen, align 8, !dbg !11758, !tbaa !11629
  %inc = add nsw i32 %70, 1, !dbg !11758
  store i32 %inc, ptr %rkq_qlen, align 8, !dbg !11758, !tbaa !11629
  %71 = load ptr, ptr %rko.addr, align 8, !dbg !11759, !tbaa !3910
  %rko_len = getelementptr inbounds %struct.rd_kafka_op_s, ptr %71, i32 0, i32 7, !dbg !11760
  %72 = load i32, ptr %rko_len, align 8, !dbg !11760, !tbaa !11761
  %conv132 = sext i32 %72 to i64, !dbg !11759
  %73 = load ptr, ptr %rkq.addr, align 8, !dbg !11762, !tbaa !3910
  %rkq_qsize = getelementptr inbounds %struct.rd_kafka_q_s, ptr %73, i32 0, i32 5, !dbg !11763
  %74 = load i64, ptr %rkq_qsize, align 8, !dbg !11764, !tbaa !11765
  %add = add nsw i64 %74, %conv132, !dbg !11764
  store i64 %add, ptr %rkq_qsize, align 8, !dbg !11764, !tbaa !11765
  ret void, !dbg !11766
}

declare !dbg !11767 i32 @cnd_signal(ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_q_io_event(ptr noundef %rkq) #4 !dbg !11768 {
entry:
  %rkq.addr = alloca ptr, align 8
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !11770, metadata !DIExpression()), !dbg !11771
  %0 = load ptr, ptr %rkq.addr, align 8, !dbg !11772, !tbaa !3910
  %rkq_qio = getelementptr inbounds %struct.rd_kafka_q_s, ptr %0, i32 0, i32 9, !dbg !11772
  %1 = load ptr, ptr %rkq_qio, align 8, !dbg !11772, !tbaa !11774
  %tobool = icmp ne ptr %1, null, !dbg !11772
  %lnot = xor i1 %tobool, true, !dbg !11772
  %lnot.ext = zext i1 %lnot to i32, !dbg !11772
  %conv = sext i32 %lnot.ext to i64, !dbg !11772
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !11772
  %tobool1 = icmp ne i64 %expval, 0, !dbg !11772
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11775

if.then:                                          ; preds = %entry
  br label %if.end22, !dbg !11776

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %rkq.addr, align 8, !dbg !11777, !tbaa !3910
  %rkq_qio2 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %2, i32 0, i32 9, !dbg !11779
  %3 = load ptr, ptr %rkq_qio2, align 8, !dbg !11779, !tbaa !11774
  %event_cb = getelementptr inbounds %struct.rd_kafka_q_io, ptr %3, i32 0, i32 4, !dbg !11780
  %4 = load ptr, ptr %event_cb, align 8, !dbg !11780, !tbaa !11781
  %tobool3 = icmp ne ptr %4, null, !dbg !11777
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !11783

if.then4:                                         ; preds = %if.end
  %5 = load ptr, ptr %rkq.addr, align 8, !dbg !11784, !tbaa !3910
  %rkq_qio5 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %5, i32 0, i32 9, !dbg !11786
  %6 = load ptr, ptr %rkq_qio5, align 8, !dbg !11786, !tbaa !11774
  %event_cb6 = getelementptr inbounds %struct.rd_kafka_q_io, ptr %6, i32 0, i32 4, !dbg !11787
  %7 = load ptr, ptr %event_cb6, align 8, !dbg !11787, !tbaa !11781
  %8 = load ptr, ptr %rkq.addr, align 8, !dbg !11788, !tbaa !3910
  %rkq_rk = getelementptr inbounds %struct.rd_kafka_q_s, ptr %8, i32 0, i32 8, !dbg !11789
  %9 = load ptr, ptr %rkq_rk, align 8, !dbg !11789, !tbaa !11790
  %10 = load ptr, ptr %rkq.addr, align 8, !dbg !11791, !tbaa !3910
  %rkq_qio7 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %10, i32 0, i32 9, !dbg !11792
  %11 = load ptr, ptr %rkq_qio7, align 8, !dbg !11792, !tbaa !11774
  %event_cb_opaque = getelementptr inbounds %struct.rd_kafka_q_io, ptr %11, i32 0, i32 5, !dbg !11793
  %12 = load ptr, ptr %event_cb_opaque, align 8, !dbg !11793, !tbaa !11794
  call void %7(ptr noundef %9, ptr noundef %12), !dbg !11784
  br label %if.end22, !dbg !11795

if.end8:                                          ; preds = %if.end
  %13 = load ptr, ptr %rkq.addr, align 8, !dbg !11796, !tbaa !3910
  %rkq_qio9 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %13, i32 0, i32 9, !dbg !11798
  %14 = load ptr, ptr %rkq_qio9, align 8, !dbg !11798, !tbaa !11774
  %sent = getelementptr inbounds %struct.rd_kafka_q_io, ptr %14, i32 0, i32 3, !dbg !11799
  %15 = load i8, ptr %sent, align 8, !dbg !11799, !tbaa !11800
  %tobool10 = icmp ne i8 %15, 0, !dbg !11796
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !11801

if.then11:                                        ; preds = %if.end8
  br label %if.end22, !dbg !11802

if.end12:                                         ; preds = %if.end8
  %16 = load ptr, ptr %rkq.addr, align 8, !dbg !11803, !tbaa !3910
  %rkq_qio13 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %16, i32 0, i32 9, !dbg !11804
  %17 = load ptr, ptr %rkq_qio13, align 8, !dbg !11804, !tbaa !11774
  %sent14 = getelementptr inbounds %struct.rd_kafka_q_io, ptr %17, i32 0, i32 3, !dbg !11805
  store i8 1, ptr %sent14, align 8, !dbg !11806, !tbaa !11800
  %18 = load ptr, ptr %rkq.addr, align 8, !dbg !11807, !tbaa !3910
  %rkq_qio15 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %18, i32 0, i32 9, !dbg !11807
  %19 = load ptr, ptr %rkq_qio15, align 8, !dbg !11807, !tbaa !11774
  %fd = getelementptr inbounds %struct.rd_kafka_q_io, ptr %19, i32 0, i32 0, !dbg !11807
  %20 = load i32, ptr %fd, align 8, !dbg !11807, !tbaa !11809
  %21 = load ptr, ptr %rkq.addr, align 8, !dbg !11807, !tbaa !3910
  %rkq_qio16 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %21, i32 0, i32 9, !dbg !11807
  %22 = load ptr, ptr %rkq_qio16, align 8, !dbg !11807, !tbaa !11774
  %payload = getelementptr inbounds %struct.rd_kafka_q_io, ptr %22, i32 0, i32 1, !dbg !11807
  %23 = load ptr, ptr %payload, align 8, !dbg !11807, !tbaa !11810
  %24 = load ptr, ptr %rkq.addr, align 8, !dbg !11807, !tbaa !3910
  %rkq_qio17 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %24, i32 0, i32 9, !dbg !11807
  %25 = load ptr, ptr %rkq_qio17, align 8, !dbg !11807, !tbaa !11774
  %size = getelementptr inbounds %struct.rd_kafka_q_io, ptr %25, i32 0, i32 2, !dbg !11807
  %26 = load i64, ptr %size, align 8, !dbg !11807, !tbaa !11811
  %conv18 = trunc i64 %26 to i32, !dbg !11807
  %conv19 = sext i32 %conv18 to i64, !dbg !11807
  %call = call i64 @write(i32 noundef %20, ptr noundef %23, i64 noundef %conv19), !dbg !11807
  %cmp = icmp eq i64 %call, -1, !dbg !11812
  br i1 %cmp, label %if.then21, label %if.end22, !dbg !11813

if.then21:                                        ; preds = %if.end12
  br label %if.end22, !dbg !11813

if.end22:                                         ; preds = %if.then, %if.then4, %if.then11, %if.then21, %if.end12
  ret void, !dbg !11814
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_op_cmp_prio(ptr noundef %_a, ptr noundef %_b) #4 !dbg !11815 {
entry:
  %_a.addr = alloca ptr, align 8
  %_b.addr = alloca ptr, align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  store ptr %_a, ptr %_a.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %_a.addr, metadata !11817, metadata !DIExpression()), !dbg !11823
  store ptr %_b, ptr %_b.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %_b.addr, metadata !11818, metadata !DIExpression()), !dbg !11824
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #16, !dbg !11825
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !11819, metadata !DIExpression()), !dbg !11826
  %0 = load ptr, ptr %_a.addr, align 8, !dbg !11827, !tbaa !3910
  store ptr %0, ptr %a, align 8, !dbg !11826, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #16, !dbg !11825
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !11822, metadata !DIExpression()), !dbg !11828
  %1 = load ptr, ptr %_b.addr, align 8, !dbg !11829, !tbaa !3910
  store ptr %1, ptr %b, align 8, !dbg !11828, !tbaa !3910
  %2 = load ptr, ptr %b, align 8, !dbg !11830, !tbaa !3910
  %rko_prio = getelementptr inbounds %struct.rd_kafka_op_s, ptr %2, i32 0, i32 8, !dbg !11830
  %3 = load i32, ptr %rko_prio, align 4, !dbg !11830, !tbaa !10092
  %4 = load ptr, ptr %a, align 8, !dbg !11830, !tbaa !3910
  %rko_prio1 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %4, i32 0, i32 8, !dbg !11830
  %5 = load i32, ptr %rko_prio1, align 4, !dbg !11830, !tbaa !10092
  %cmp = icmp ult i32 %3, %5, !dbg !11830
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11830

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !11830

cond.false:                                       ; preds = %entry
  %6 = load ptr, ptr %b, align 8, !dbg !11830, !tbaa !3910
  %rko_prio2 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %6, i32 0, i32 8, !dbg !11830
  %7 = load i32, ptr %rko_prio2, align 4, !dbg !11830, !tbaa !10092
  %8 = load ptr, ptr %a, align 8, !dbg !11830, !tbaa !3910
  %rko_prio3 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %8, i32 0, i32 8, !dbg !11830
  %9 = load i32, ptr %rko_prio3, align 4, !dbg !11830, !tbaa !10092
  %cmp4 = icmp ugt i32 %7, %9, !dbg !11830
  %conv = zext i1 %cmp4 to i32, !dbg !11830
  br label %cond.end, !dbg !11830

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !11830
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #16, !dbg !11831
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #16, !dbg !11831
  ret i32 %cond, !dbg !11832
}

declare !dbg !11833 i64 @write(i32 noundef, ptr noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_enq_once_trigger(ptr noundef %eonce, i32 noundef %err, ptr noundef %srcdesc) #4 !dbg !11836 {
entry:
  %eonce.addr = alloca ptr, align 8
  %err.addr = alloca i32, align 4
  %srcdesc.addr = alloca ptr, align 8
  %do_destroy = alloca i32, align 4
  %rko = alloca ptr, align 8
  %replyq = alloca %struct.rd_kafka_replyq_s, align 8
  store ptr %eonce, ptr %eonce.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %eonce.addr, metadata !11840, metadata !DIExpression()), !dbg !11846
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !11841, metadata !DIExpression()), !dbg !11847
  store ptr %srcdesc, ptr %srcdesc.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %srcdesc.addr, metadata !11842, metadata !DIExpression()), !dbg !11848
  call void @llvm.lifetime.start.p0(i64 4, ptr %do_destroy) #16, !dbg !11849
  tail call void @llvm.dbg.declare(metadata ptr %do_destroy, metadata !11843, metadata !DIExpression()), !dbg !11850
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !11851
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !11844, metadata !DIExpression()), !dbg !11852
  store ptr null, ptr %rko, align 8, !dbg !11852, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 16, ptr %replyq) #16, !dbg !11853
  tail call void @llvm.dbg.declare(metadata ptr %replyq, metadata !11845, metadata !DIExpression()), !dbg !11854
  call void @llvm.memset.p0.i64(ptr align 8 %replyq, i8 0, i64 16, i1 false), !dbg !11854
  %0 = load ptr, ptr %eonce.addr, align 8, !dbg !11855, !tbaa !3910
  %lock = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %0, i32 0, i32 0, !dbg !11856
  %call = call i32 @mtx_lock(ptr noundef %lock), !dbg !11857
  %1 = load ptr, ptr %eonce.addr, align 8, !dbg !11858, !tbaa !3910
  %refcnt = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %1, i32 0, i32 1, !dbg !11858
  %2 = load i32, ptr %refcnt, align 8, !dbg !11858, !tbaa !5639
  %cmp = icmp sgt i32 %2, 0, !dbg !11858
  br i1 %cmp, label %if.then, label %if.else, !dbg !11861

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !11861

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.119, ptr noundef @.str.120, i32 noundef 1086, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_enq_once_trigger) #18, !dbg !11858
  unreachable, !dbg !11858

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr %eonce.addr, align 8, !dbg !11862, !tbaa !3910
  %refcnt1 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %3, i32 0, i32 1, !dbg !11863
  %4 = load i32, ptr %refcnt1, align 8, !dbg !11864, !tbaa !5639
  %dec = add nsw i32 %4, -1, !dbg !11864
  store i32 %dec, ptr %refcnt1, align 8, !dbg !11864, !tbaa !5639
  %5 = load ptr, ptr %eonce.addr, align 8, !dbg !11865, !tbaa !3910
  %refcnt2 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %5, i32 0, i32 1, !dbg !11866
  %6 = load i32, ptr %refcnt2, align 8, !dbg !11866, !tbaa !5639
  %cmp3 = icmp eq i32 %6, 0, !dbg !11867
  %conv = zext i1 %cmp3 to i32, !dbg !11867
  store i32 %conv, ptr %do_destroy, align 4, !dbg !11868, !tbaa !3959
  %7 = load ptr, ptr %eonce.addr, align 8, !dbg !11869, !tbaa !3910
  %rko4 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %7, i32 0, i32 2, !dbg !11871
  %8 = load ptr, ptr %rko4, align 8, !dbg !11871, !tbaa !11872
  %tobool = icmp ne ptr %8, null, !dbg !11869
  br i1 %tobool, label %if.then5, label %if.end10, !dbg !11873

if.then5:                                         ; preds = %if.end
  %9 = load ptr, ptr %eonce.addr, align 8, !dbg !11874, !tbaa !3910
  %rko6 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %9, i32 0, i32 2, !dbg !11876
  %10 = load ptr, ptr %rko6, align 8, !dbg !11876, !tbaa !11872
  store ptr %10, ptr %rko, align 8, !dbg !11877, !tbaa !3910
  %11 = load ptr, ptr %eonce.addr, align 8, !dbg !11878, !tbaa !3910
  %replyq7 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %11, i32 0, i32 3, !dbg !11879
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %replyq, ptr align 8 %replyq7, i64 16, i1 false), !dbg !11879, !tbaa.struct !5433
  %12 = load ptr, ptr %eonce.addr, align 8, !dbg !11880, !tbaa !3910
  %rko8 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %12, i32 0, i32 2, !dbg !11881
  store ptr null, ptr %rko8, align 8, !dbg !11882, !tbaa !11872
  %13 = load ptr, ptr %eonce.addr, align 8, !dbg !11883, !tbaa !3910
  %replyq9 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %13, i32 0, i32 3, !dbg !11884
  call void @rd_kafka_replyq_clear(ptr noundef %replyq9), !dbg !11885
  br label %if.end10, !dbg !11886

if.end10:                                         ; preds = %if.then5, %if.end
  %14 = load ptr, ptr %eonce.addr, align 8, !dbg !11887, !tbaa !3910
  %lock11 = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %14, i32 0, i32 0, !dbg !11888
  %call12 = call i32 @mtx_unlock(ptr noundef %lock11), !dbg !11889
  %15 = load i32, ptr %do_destroy, align 4, !dbg !11890, !tbaa !3959
  %tobool13 = icmp ne i32 %15, 0, !dbg !11890
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11892

if.then14:                                        ; preds = %if.end10
  %16 = load ptr, ptr %eonce.addr, align 8, !dbg !11893, !tbaa !3910
  call void @rd_kafka_enq_once_destroy0(ptr noundef %16), !dbg !11895
  br label %if.end15, !dbg !11896

if.end15:                                         ; preds = %if.then14, %if.end10
  %17 = load ptr, ptr %rko, align 8, !dbg !11897, !tbaa !3910
  %tobool16 = icmp ne ptr %17, null, !dbg !11897
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !11899

if.then17:                                        ; preds = %if.end15
  %18 = load i32, ptr %err.addr, align 4, !dbg !11900, !tbaa !4126
  %19 = load ptr, ptr %rko, align 8, !dbg !11902, !tbaa !3910
  %rko_err = getelementptr inbounds %struct.rd_kafka_op_s, ptr %19, i32 0, i32 5, !dbg !11903
  store i32 %18, ptr %rko_err, align 8, !dbg !11904, !tbaa !8463
  %20 = load ptr, ptr %rko, align 8, !dbg !11905, !tbaa !3910
  %version = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %replyq, i32 0, i32 1, !dbg !11906
  %21 = load i32, ptr %version, align 8, !dbg !11906, !tbaa !7406
  %call18 = call i32 @rd_kafka_replyq_enq(ptr noundef %replyq, ptr noundef %20, i32 noundef %21), !dbg !11907
  call void @rd_kafka_replyq_destroy(ptr noundef %replyq), !dbg !11908
  br label %if.end19, !dbg !11909

if.end19:                                         ; preds = %if.then17, %if.end15
  call void @llvm.lifetime.end.p0(i64 16, ptr %replyq) #16, !dbg !11910
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !11910
  call void @llvm.lifetime.end.p0(i64 4, ptr %do_destroy) #16, !dbg !11910
  ret void, !dbg !11910
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_enq_once_destroy0(ptr noundef %eonce) #4 !dbg !11911 {
entry:
  %eonce.addr = alloca ptr, align 8
  store ptr %eonce, ptr %eonce.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %eonce.addr, metadata !11915, metadata !DIExpression()), !dbg !11916
  %0 = load ptr, ptr %eonce.addr, align 8, !dbg !11917, !tbaa !3910
  %rko = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %0, i32 0, i32 2, !dbg !11917
  %1 = load ptr, ptr %rko, align 8, !dbg !11917, !tbaa !11872
  %tobool = icmp ne ptr %1, null, !dbg !11917
  br i1 %tobool, label %if.else, label %if.then, !dbg !11920

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !11920

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.121, ptr noundef @.str.120, i32 noundef 973, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_enq_once_destroy0) #18, !dbg !11917
  unreachable, !dbg !11917

if.end:                                           ; preds = %if.then
  %2 = load ptr, ptr %eonce.addr, align 8, !dbg !11921, !tbaa !3910
  %replyq = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %2, i32 0, i32 3, !dbg !11921
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %replyq, i32 0, i32 0, !dbg !11921
  %3 = load ptr, ptr %q, align 8, !dbg !11921, !tbaa !11924
  %tobool1 = icmp ne ptr %3, null, !dbg !11921
  br i1 %tobool1, label %if.else3, label %if.then2, !dbg !11925

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !11925

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(ptr noundef @.str.122, ptr noundef @.str.120, i32 noundef 974, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_enq_once_destroy0) #18, !dbg !11921
  unreachable, !dbg !11921

if.end4:                                          ; preds = %if.then2
  %4 = load ptr, ptr %eonce.addr, align 8, !dbg !11926, !tbaa !3910
  %refcnt = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %4, i32 0, i32 1, !dbg !11926
  %5 = load i32, ptr %refcnt, align 8, !dbg !11926, !tbaa !5639
  %cmp = icmp eq i32 %5, 0, !dbg !11926
  br i1 %cmp, label %if.then5, label %if.else6, !dbg !11929

if.then5:                                         ; preds = %if.end4
  br label %if.end7, !dbg !11929

if.else6:                                         ; preds = %if.end4
  call void @__assert_fail(ptr noundef @.str.123, ptr noundef @.str.120, i32 noundef 978, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_enq_once_destroy0) #18, !dbg !11926
  unreachable, !dbg !11926

if.end7:                                          ; preds = %if.then5
  %6 = load ptr, ptr %eonce.addr, align 8, !dbg !11930, !tbaa !3910
  %lock = getelementptr inbounds %struct.rd_kafka_enq_once_s, ptr %6, i32 0, i32 0, !dbg !11931
  call void @mtx_destroy(ptr noundef %lock), !dbg !11932
  %7 = load ptr, ptr %eonce.addr, align 8, !dbg !11933, !tbaa !3910
  call void @rd_free(ptr noundef %7), !dbg !11934
  ret void, !dbg !11935
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_replyq_enq(ptr noundef %replyq, ptr noundef %rko, i32 noundef %version) #4 !dbg !11936 {
entry:
  %replyq.addr = alloca ptr, align 8
  %rko.addr = alloca ptr, align 8
  %version.addr = alloca i32, align 4
  %rkq = alloca ptr, align 8
  %r = alloca i32, align 4
  store ptr %replyq, ptr %replyq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %replyq.addr, metadata !11940, metadata !DIExpression()), !dbg !11945
  store ptr %rko, ptr %rko.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rko.addr, metadata !11941, metadata !DIExpression()), !dbg !11946
  store i32 %version, ptr %version.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !11942, metadata !DIExpression()), !dbg !11947
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkq) #16, !dbg !11948
  tail call void @llvm.dbg.declare(metadata ptr %rkq, metadata !11943, metadata !DIExpression()), !dbg !11949
  %0 = load ptr, ptr %replyq.addr, align 8, !dbg !11950, !tbaa !3910
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %0, i32 0, i32 0, !dbg !11951
  %1 = load ptr, ptr %q, align 8, !dbg !11951, !tbaa !7405
  store ptr %1, ptr %rkq, align 8, !dbg !11949, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !11952
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !11944, metadata !DIExpression()), !dbg !11953
  %2 = load i32, ptr %version.addr, align 4, !dbg !11954, !tbaa !3959
  %tobool = icmp ne i32 %2, 0, !dbg !11954
  br i1 %tobool, label %if.then, label %if.else, !dbg !11956

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %version.addr, align 4, !dbg !11957, !tbaa !3959
  %4 = load ptr, ptr %rko.addr, align 8, !dbg !11958, !tbaa !3910
  %rko_version = getelementptr inbounds %struct.rd_kafka_op_s, ptr %4, i32 0, i32 4, !dbg !11959
  store i32 %3, ptr %rko_version, align 4, !dbg !11960, !tbaa !11961
  br label %if.end, !dbg !11958

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %replyq.addr, align 8, !dbg !11962, !tbaa !3910
  %version1 = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %5, i32 0, i32 1, !dbg !11963
  %6 = load i32, ptr %version1, align 8, !dbg !11963, !tbaa !7406
  %7 = load ptr, ptr %rko.addr, align 8, !dbg !11964, !tbaa !3910
  %rko_version2 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %7, i32 0, i32 4, !dbg !11965
  store i32 %6, ptr %rko_version2, align 4, !dbg !11966, !tbaa !11961
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load ptr, ptr %replyq.addr, align 8, !dbg !11967, !tbaa !3910
  %q3 = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %8, i32 0, i32 0, !dbg !11968
  store ptr null, ptr %q3, align 8, !dbg !11969, !tbaa !7405
  %9 = load ptr, ptr %rkq, align 8, !dbg !11970, !tbaa !3910
  %10 = load ptr, ptr %rko.addr, align 8, !dbg !11971, !tbaa !3910
  %call = call i32 @rd_kafka_q_enq(ptr noundef %9, ptr noundef %10), !dbg !11972
  store i32 %call, ptr %r, align 4, !dbg !11973, !tbaa !3959
  %11 = load ptr, ptr %rkq, align 8, !dbg !11974, !tbaa !3910
  call void @rd_kafka_q_destroy0(ptr noundef %11, i32 noundef 0), !dbg !11974
  %12 = load i32, ptr %r, align 4, !dbg !11975, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !11976
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkq) #16, !dbg !11976
  ret i32 %12, !dbg !11977
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_replyq_destroy(ptr noundef %replyq) #4 !dbg !11978 {
entry:
  %replyq.addr = alloca ptr, align 8
  store ptr %replyq, ptr %replyq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %replyq.addr, metadata !11980, metadata !DIExpression()), !dbg !11981
  %0 = load ptr, ptr %replyq.addr, align 8, !dbg !11982, !tbaa !3910
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %0, i32 0, i32 0, !dbg !11984
  %1 = load ptr, ptr %q, align 8, !dbg !11984, !tbaa !7405
  %tobool = icmp ne ptr %1, null, !dbg !11982
  br i1 %tobool, label %if.then, label %if.end, !dbg !11985

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %replyq.addr, align 8, !dbg !11986, !tbaa !3910
  %q1 = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %2, i32 0, i32 0, !dbg !11986
  %3 = load ptr, ptr %q1, align 8, !dbg !11986, !tbaa !7405
  call void @rd_kafka_q_destroy0(ptr noundef %3, i32 noundef 0), !dbg !11986
  br label %if.end, !dbg !11986

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %replyq.addr, align 8, !dbg !11987, !tbaa !3910
  call void @rd_kafka_replyq_clear(ptr noundef %4), !dbg !11988
  ret void, !dbg !11989
}

declare !dbg !11990 i32 @rd_jitter(i32 noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_timeout_ms(i64 noundef %timeout_us) #4 !dbg !11994 {
entry:
  %retval = alloca i32, align 4
  %timeout_us.addr = alloca i64, align 8
  store i64 %timeout_us, ptr %timeout_us.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %timeout_us.addr, metadata !11996, metadata !DIExpression()), !dbg !11997
  %0 = load i64, ptr %timeout_us.addr, align 8, !dbg !11998, !tbaa !4039
  %cmp = icmp sle i64 %0, 0, !dbg !12000
  br i1 %cmp, label %if.then, label %if.else, !dbg !12001

if.then:                                          ; preds = %entry
  %1 = load i64, ptr %timeout_us.addr, align 8, !dbg !12002, !tbaa !4039
  %conv = trunc i64 %1 to i32, !dbg !12003
  store i32 %conv, ptr %retval, align 4, !dbg !12004
  br label %return, !dbg !12004

if.else:                                          ; preds = %entry
  %2 = load i64, ptr %timeout_us.addr, align 8, !dbg !12005, !tbaa !4039
  %add = add nsw i64 %2, 999, !dbg !12006
  %div = sdiv i64 %add, 1000, !dbg !12007
  %conv1 = trunc i64 %div to i32, !dbg !12008
  store i32 %conv1, ptr %retval, align 4, !dbg !12009
  br label %return, !dbg !12009

return:                                           ; preds = %if.else, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !12010
  ret i32 %3, !dbg !12010
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @rd_timeout_remains_us(i64 noundef %abs_timeout) #4 !dbg !12011 {
entry:
  %retval = alloca i64, align 8
  %abs_timeout.addr = alloca i64, align 8
  %timeout_us = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %abs_timeout, ptr %abs_timeout.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout.addr, metadata !12015, metadata !DIExpression()), !dbg !12017
  call void @llvm.lifetime.start.p0(i64 8, ptr %timeout_us) #16, !dbg !12018
  tail call void @llvm.dbg.declare(metadata ptr %timeout_us, metadata !12016, metadata !DIExpression()), !dbg !12019
  %0 = load i64, ptr %abs_timeout.addr, align 8, !dbg !12020, !tbaa !4039
  %cmp = icmp eq i64 %0, -1, !dbg !12022
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12023

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, ptr %abs_timeout.addr, align 8, !dbg !12024, !tbaa !4039
  %cmp1 = icmp eq i64 %1, 0, !dbg !12025
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12026

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i64, ptr %abs_timeout.addr, align 8, !dbg !12027, !tbaa !4039
  store i64 %2, ptr %retval, align 8, !dbg !12028
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12028

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i64, ptr %abs_timeout.addr, align 8, !dbg !12029, !tbaa !4039
  %call = call i64 @rd_clock(), !dbg !12030
  %sub = sub nsw i64 %3, %call, !dbg !12031
  store i64 %sub, ptr %timeout_us, align 8, !dbg !12032, !tbaa !4039
  %4 = load i64, ptr %timeout_us, align 8, !dbg !12033, !tbaa !4039
  %cmp2 = icmp sle i64 %4, 0, !dbg !12035
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !12036

if.then3:                                         ; preds = %if.end
  store i64 0, ptr %retval, align 8, !dbg !12037
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12037

if.else:                                          ; preds = %if.end
  %5 = load i64, ptr %timeout_us, align 8, !dbg !12038, !tbaa !4039
  store i64 %5, ptr %retval, align 8, !dbg !12039
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12039

cleanup:                                          ; preds = %if.else, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %timeout_us) #16, !dbg !12040
  %6 = load i64, ptr %retval, align 8, !dbg !12040
  ret i64 %6, !dbg !12040
}

; Function Attrs: nounwind uwtable
define internal ptr @rd_kafka_waitresp_find(ptr noundef %rkb, i32 noundef %corrid) #0 !dbg !12041 {
entry:
  %retval = alloca ptr, align 8
  %rkb.addr = alloca ptr, align 8
  %corrid.addr = alloca i32, align 4
  %rkbuf = alloca ptr, align 8
  %now = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12045, metadata !DIExpression()), !dbg !12049
  store i32 %corrid, ptr %corrid.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %corrid.addr, metadata !12046, metadata !DIExpression()), !dbg !12050
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkbuf) #16, !dbg !12051
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf, metadata !12047, metadata !DIExpression()), !dbg !12052
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !12053
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !12048, metadata !DIExpression()), !dbg !12054
  %call = call i64 @rd_clock(), !dbg !12055
  store i64 %call, ptr %now, align 8, !dbg !12054, !tbaa !4039
  br label %do.body, !dbg !12056

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12057, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !12057
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !12057, !tbaa !4513
  %call1 = call i32 @thrd_is_current(i64 noundef %1), !dbg !12057
  %tobool = icmp ne i32 %call1, 0, !dbg !12057
  %lnot = xor i1 %tobool, true, !dbg !12057
  %lnot.ext = zext i1 %lnot to i32, !dbg !12057
  %conv = sext i32 %lnot.ext to i64, !dbg !12057
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12057
  %tobool2 = icmp ne i64 %expval, 0, !dbg !12057
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12060

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !12057, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !12057
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !12057, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 1821, ptr noundef @__FUNCTION__.rd_kafka_waitresp_find, ptr noundef %3, ptr noundef @.str.21) #17, !dbg !12057
  unreachable, !dbg !12057

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !12060

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !12060

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !12061, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 36, !dbg !12061
  %rkbq_bufs = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_waitresps, i32 0, i32 0, !dbg !12061
  %tqh_first = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs, i32 0, i32 0, !dbg !12061
  %5 = load ptr, ptr %tqh_first, align 8, !dbg !12061, !tbaa !8724
  store ptr %5, ptr %rkbuf, align 8, !dbg !12061, !tbaa !3910
  br label %for.cond, !dbg !12061

for.cond:                                         ; preds = %for.inc, %do.end
  %6 = load ptr, ptr %rkbuf, align 8, !dbg !12063, !tbaa !3910
  %cmp = icmp ne ptr %6, null, !dbg !12063
  br i1 %cmp, label %for.body, label %for.end, !dbg !12061

for.body:                                         ; preds = %for.cond
  %7 = load ptr, ptr %rkbuf, align 8, !dbg !12065, !tbaa !3910
  %rkbuf_corrid = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %7, i32 0, i32 1, !dbg !12067
  %8 = load i32, ptr %rkbuf_corrid, align 8, !dbg !12067, !tbaa !5361
  %9 = load i32, ptr %corrid.addr, align 4, !dbg !12068, !tbaa !3959
  %cmp4 = icmp eq i32 %8, %9, !dbg !12069
  br i1 %cmp4, label %if.then6, label %if.end17, !dbg !12070

if.then6:                                         ; preds = %for.body
  %10 = load i64, ptr %now, align 8, !dbg !12071, !tbaa !4039
  %11 = load ptr, ptr %rkbuf, align 8, !dbg !12073, !tbaa !3910
  %rkbuf_ts_sent = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %11, i32 0, i32 27, !dbg !12074
  %12 = load i64, ptr %rkbuf_ts_sent, align 8, !dbg !12074, !tbaa !7111
  %sub = sub nsw i64 %10, %12, !dbg !12075
  %13 = load ptr, ptr %rkbuf, align 8, !dbg !12076, !tbaa !3910
  %rkbuf_ts_sent7 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %13, i32 0, i32 27, !dbg !12077
  store i64 %sub, ptr %rkbuf_ts_sent7, align 8, !dbg !12078, !tbaa !7111
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !12079, !tbaa !3910
  %rkb_avg_rtt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 40, !dbg !12080
  %15 = load ptr, ptr %rkbuf, align 8, !dbg !12081, !tbaa !3910
  %rkbuf_ts_sent8 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %15, i32 0, i32 27, !dbg !12082
  %16 = load i64, ptr %rkbuf_ts_sent8, align 8, !dbg !12082, !tbaa !7111
  call void @rd_avg_add(ptr noundef %rkb_avg_rtt, i64 noundef %16), !dbg !12083
  %17 = load ptr, ptr %rkbuf, align 8, !dbg !12084, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %17, i32 0, i32 3, !dbg !12086
  %18 = load i32, ptr %rkbuf_flags, align 8, !dbg !12086, !tbaa !5243
  %and = and i32 %18, 8, !dbg !12087
  %tobool9 = icmp ne i32 %and, 0, !dbg !12087
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !12088

land.lhs.true:                                    ; preds = %if.then6
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !12089, !tbaa !3910
  %rkb_blocking_request_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 22, !dbg !12090
  %call10 = call i32 @rd_atomic32_sub(ptr noundef %rkb_blocking_request_cnt, i32 noundef 1), !dbg !12091
  %cmp11 = icmp eq i32 %call10, 1, !dbg !12092
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !12093

if.then13:                                        ; preds = %land.lhs.true
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !12094, !tbaa !3910
  %rkb_rk14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 32, !dbg !12095
  %21 = load ptr, ptr %rkb_rk14, align 8, !dbg !12095, !tbaa !4139
  call void @rd_kafka_brokers_broadcast_state_change(ptr noundef %21), !dbg !12096
  br label %if.end15, !dbg !12096

if.end15:                                         ; preds = %if.then13, %land.lhs.true, %if.then6
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !12097, !tbaa !3910
  %rkb_waitresps16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 36, !dbg !12098
  %23 = load ptr, ptr %rkbuf, align 8, !dbg !12099, !tbaa !3910
  call void @rd_kafka_bufq_deq(ptr noundef %rkb_waitresps16, ptr noundef %23), !dbg !12100
  %24 = load ptr, ptr %rkbuf, align 8, !dbg !12101, !tbaa !3910
  store ptr %24, ptr %retval, align 8, !dbg !12102
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12102

if.end17:                                         ; preds = %for.body
  br label %for.inc, !dbg !12068

for.inc:                                          ; preds = %if.end17
  %25 = load ptr, ptr %rkbuf, align 8, !dbg !12063, !tbaa !3910
  %rkbuf_link = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %25, i32 0, i32 0, !dbg !12063
  %tqe_next = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link, i32 0, i32 0, !dbg !12063
  %26 = load ptr, ptr %tqe_next, align 8, !dbg !12063, !tbaa !5339
  store ptr %26, ptr %rkbuf, align 8, !dbg !12063, !tbaa !3910
  br label %for.cond, !dbg !12063, !llvm.loop !12103

for.end:                                          ; preds = %for.cond
  store ptr null, ptr %retval, align 8, !dbg !12105
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12105

cleanup:                                          ; preds = %for.end, %if.end15
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !12106
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkbuf) #16, !dbg !12106
  %27 = load ptr, ptr %retval, align 8, !dbg !12106
  ret ptr %27, !dbg !12106
}

declare !dbg !12107 void @rd_kafka_interceptors_on_response_received(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i16 noundef signext, i16 noundef signext, i32 noundef, i64 noundef, i64 noundef, i32 noundef) #3

declare !dbg !12110 i64 @rd_slice_read_uvarint(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare !dbg !12113 ptr @strerror_r(i32 noundef, ptr noundef, i64 noundef) #9

declare !dbg !12116 i32 @rd_kafka_get_legacy_ApiVersions(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #3

declare !dbg !12121 void @rd_kafka_ApiVersions_copy(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_features_set(ptr noundef %rkb, i32 noundef %features) #0 !dbg !12124 {
entry:
  %rkb.addr = alloca ptr, align 8
  %features.addr = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12126, metadata !DIExpression()), !dbg !12133
  store i32 %features, ptr %features.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %features.addr, metadata !12127, metadata !DIExpression()), !dbg !12134
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12135, !tbaa !3910
  %rkb_features = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 23, !dbg !12137
  %1 = load i32, ptr %rkb_features, align 4, !dbg !12137, !tbaa !3938
  %2 = load i32, ptr %features.addr, align 4, !dbg !12138, !tbaa !3959
  %cmp = icmp eq i32 %1, %2, !dbg !12139
  br i1 %cmp, label %if.then, label %if.end, !dbg !12140

if.then:                                          ; preds = %entry
  br label %do.end13, !dbg !12141

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %features.addr, align 4, !dbg !12142, !tbaa !3959
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !12143, !tbaa !3910
  %rkb_features1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 23, !dbg !12144
  store i32 %3, ptr %rkb_features1, align 4, !dbg !12145, !tbaa !3938
  br label %do.body, !dbg !12146

do.body:                                          ; preds = %if.end
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !12147, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 32, !dbg !12147
  %6 = load ptr, ptr %rkb_rk, align 8, !dbg !12147, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 18, !dbg !12147
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !12147
  %7 = load i32, ptr %debug, align 8, !dbg !12147, !tbaa !4140
  %and = and i32 %7, 2, !dbg !12147
  %conv = sext i32 %and to i64, !dbg !12147
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12147
  %tobool = icmp ne i64 %expval, 0, !dbg !12147
  br i1 %tobool, label %if.then2, label %if.end12, !dbg !12148

if.then2:                                         ; preds = %do.body
  br label %do.body3, !dbg !12149

do.body3:                                         ; preds = %if.then2
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !12150
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !12128, metadata !DIExpression()), !dbg !12150
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !12150, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 49, !dbg !12150
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !12150
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12150
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !12150, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 48, !dbg !12150
  %10 = load ptr, ptr %rkb_logname, align 8, !dbg !12150, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %10, i64 noundef 256), !dbg !12150
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !12150, !tbaa !3910
  %rkb_logname_lock4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 49, !dbg !12150
  %call5 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock4), !dbg !12150
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !12150, !tbaa !3910
  %rkb_rk6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 32, !dbg !12150
  %13 = load ptr, ptr %rkb_rk6, align 8, !dbg !12150, !tbaa !4139
  %rk_conf7 = getelementptr inbounds %struct.rd_kafka_s, ptr %13, i32 0, i32 18, !dbg !12150
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !12150, !tbaa !3910
  %rkb_rk8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 32, !dbg !12150
  %15 = load ptr, ptr %rkb_rk8, align 8, !dbg !12150, !tbaa !4139
  %arraydecay9 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12150
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !12150, !tbaa !3910
  %rkb_features10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 23, !dbg !12150
  %17 = load i32, ptr %rkb_features10, align 4, !dbg !12150, !tbaa !3938
  %call11 = call ptr @rd_kafka_features2str(i32 noundef %17), !dbg !12150
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf7, ptr noundef %15, ptr noundef %arraydecay9, i32 noundef 7, i32 noundef 2, ptr noundef @.str.111, ptr noundef @.str.201, ptr noundef %call11), !dbg !12150
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !12149
  br label %do.end, !dbg !12150

do.end:                                           ; preds = %do.body3
  br label %if.end12, !dbg !12149

if.end12:                                         ; preds = %do.end, %do.body
  br label %do.end13, !dbg !12148

do.end13:                                         ; preds = %if.then, %if.end12
  ret void, !dbg !12151
}

declare !dbg !12152 i32 @rd_kafka_features_check(ptr noundef, ptr noundef, i64 noundef) #3

declare !dbg !12155 i32 @rd_kafka_handle_ApiVersion(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #3

declare !dbg !12158 void @rd_kafka_SaslHandshakeRequest(ptr noundef, ptr noundef, ptr, i32, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_handle_SaslHandshake(ptr noundef %rk, ptr noundef %rkb, i32 noundef %err, ptr noundef %rkbuf, ptr noundef %request, ptr noundef %opaque) #0 !dbg !12161 {
entry:
  %rk.addr = alloca ptr, align 8
  %rkb.addr = alloca ptr, align 8
  %err.addr = alloca i32, align 4
  %rkbuf.addr = alloca ptr, align 8
  %request.addr = alloca ptr, align 8
  %opaque.addr = alloca ptr, align 8
  %log_decode_errors = alloca i32, align 4
  %MechCnt = alloca i32, align 4
  %ErrorCode = alloca i16, align 2
  %i = alloca i32, align 4
  %mechs = alloca ptr, align 8
  %msz = alloca i64, align 8
  %mof = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_v = alloca i16, align 2
  %_vp = alloca ptr, align 8
  %__len2 = alloca i64, align 8
  %__len0 = alloca i64, align 8
  %__tmpstr = alloca [256 x i8], align 16
  %_logname = alloca [256 x i8], align 16
  %_v73 = alloca i32, align 4
  %_vp74 = alloca ptr, align 8
  %__len276 = alloca i64, align 8
  %__len082 = alloca i64, align 8
  %__tmpstr98 = alloca [256 x i8], align 16
  %_logname109 = alloca [256 x i8], align 16
  %_logname186 = alloca [256 x i8], align 16
  %_logname220 = alloca [256 x i8], align 16
  %mech = alloca %struct.rd_kafkap_str_s, align 8
  %_klen = alloca i32, align 4
  %_uva = alloca i64, align 8
  %_v260 = alloca i64, align 8
  %_vp261 = alloca ptr, align 8
  %_r = alloca i64, align 8
  %__tmpstr274 = alloca [256 x i8], align 16
  %_logname285 = alloca [256 x i8], align 16
  %_v348 = alloca i16, align 2
  %__len2350 = alloca i64, align 8
  %__len0356 = alloca i64, align 8
  %__tmpstr372 = alloca [256 x i8], align 16
  %_logname383 = alloca [256 x i8], align 16
  %__len0485 = alloca i64, align 8
  %__tmpstr502 = alloca [256 x i8], align 16
  %_logname513 = alloca [256 x i8], align 16
  %_logname606 = alloca [256 x i8], align 16
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !12163, metadata !DIExpression()), !dbg !12273
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12164, metadata !DIExpression()), !dbg !12274
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !12165, metadata !DIExpression()), !dbg !12275
  store ptr %rkbuf, ptr %rkbuf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf.addr, metadata !12166, metadata !DIExpression()), !dbg !12276
  store ptr %request, ptr %request.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %request.addr, metadata !12167, metadata !DIExpression()), !dbg !12277
  store ptr %opaque, ptr %opaque.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %opaque.addr, metadata !12168, metadata !DIExpression()), !dbg !12278
  call void @llvm.lifetime.start.p0(i64 4, ptr %log_decode_errors) #16, !dbg !12279
  tail call void @llvm.dbg.declare(metadata ptr %log_decode_errors, metadata !12169, metadata !DIExpression()), !dbg !12280
  store i32 3, ptr %log_decode_errors, align 4, !dbg !12280, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %MechCnt) #16, !dbg !12281
  tail call void @llvm.dbg.declare(metadata ptr %MechCnt, metadata !12170, metadata !DIExpression()), !dbg !12282
  call void @llvm.lifetime.start.p0(i64 2, ptr %ErrorCode) #16, !dbg !12283
  tail call void @llvm.dbg.declare(metadata ptr %ErrorCode, metadata !12171, metadata !DIExpression()), !dbg !12284
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #16, !dbg !12285
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !12172, metadata !DIExpression()), !dbg !12286
  store i32 0, ptr %i, align 4, !dbg !12286, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %mechs) #16, !dbg !12287
  tail call void @llvm.dbg.declare(metadata ptr %mechs, metadata !12173, metadata !DIExpression()), !dbg !12288
  store ptr @.str.209, ptr %mechs, align 8, !dbg !12288, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %msz) #16, !dbg !12289
  tail call void @llvm.dbg.declare(metadata ptr %msz, metadata !12174, metadata !DIExpression()), !dbg !12290
  call void @llvm.lifetime.start.p0(i64 8, ptr %mof) #16, !dbg !12289
  tail call void @llvm.dbg.declare(metadata ptr %mof, metadata !12175, metadata !DIExpression()), !dbg !12291
  store i64 0, ptr %mof, align 8, !dbg !12291, !tbaa !4039
  %0 = load i32, ptr %err.addr, align 4, !dbg !12292, !tbaa !4126
  %cmp = icmp eq i32 %0, -197, !dbg !12294
  br i1 %cmp, label %if.then, label %if.end, !dbg !12295

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup631, !dbg !12296

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %err.addr, align 4, !dbg !12297, !tbaa !4126
  %tobool = icmp ne i32 %1, 0, !dbg !12297
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !12299

if.then1:                                         ; preds = %if.end
  br label %err627, !dbg !12300

if.end2:                                          ; preds = %if.end
  br label %do.body, !dbg !12301

do.body:                                          ; preds = %if.end2
  call void @llvm.lifetime.start.p0(i64 2, ptr %_v) #16, !dbg !12302
  tail call void @llvm.dbg.declare(metadata ptr %_v, metadata !12176, metadata !DIExpression()), !dbg !12302
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp) #16, !dbg !12302
  tail call void @llvm.dbg.declare(metadata ptr %_vp, metadata !12178, metadata !DIExpression()), !dbg !12302
  store ptr %ErrorCode, ptr %_vp, align 8, !dbg !12302, !tbaa !3910
  br label %do.body3, !dbg !12302

do.body3:                                         ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len2) #16, !dbg !12303
  tail call void @llvm.dbg.declare(metadata ptr %__len2, metadata !12180, metadata !DIExpression()), !dbg !12303
  store i64 2, ptr %__len2, align 8, !dbg !12303, !tbaa !4039
  %2 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12304, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %2, i32 0, i32 6, !dbg !12304
  %3 = load i64, ptr %__len2, align 8, !dbg !12304, !tbaa !4039
  %call = call i64 @rd_slice_read(ptr noundef %rkbuf_reader, ptr noundef %_v, i64 noundef %3), !dbg !12304
  %tobool4 = icmp ne i64 %call, 0, !dbg !12304
  br i1 %tobool4, label %if.end59, label %if.then5, !dbg !12303

if.then5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !12304

do.body6:                                         ; preds = %if.then5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len0) #16, !dbg !12305
  tail call void @llvm.dbg.declare(metadata ptr %__len0, metadata !12182, metadata !DIExpression()), !dbg !12305
  %4 = load i64, ptr %__len2, align 8, !dbg !12305, !tbaa !4039
  store i64 %4, ptr %__len0, align 8, !dbg !12305, !tbaa !4039
  %5 = load i64, ptr %__len0, align 8, !dbg !12306, !tbaa !4039
  %6 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12306, !tbaa !3910
  %rkbuf_reader7 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %6, i32 0, i32 6, !dbg !12306
  %end = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader7, i32 0, i32 4, !dbg !12306
  %7 = load i64, ptr %end, align 8, !dbg !12306, !tbaa !6731
  %8 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12306, !tbaa !3910
  %rkbuf_reader8 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %8, i32 0, i32 6, !dbg !12306
  %call9 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader8), !dbg !12306
  %sub = sub i64 %7, %call9, !dbg !12306
  %cmp10 = icmp ugt i64 %5, %sub, !dbg !12306
  %conv = zext i1 %cmp10 to i32, !dbg !12306
  %conv11 = sext i32 %conv to i64, !dbg !12306
  %expval = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !12306
  %tobool12 = icmp ne i64 %expval, 0, !dbg !12306
  br i1 %tobool12, label %if.then13, label %if.end56, !dbg !12305

if.then13:                                        ; preds = %do.body6
  br label %do.body14, !dbg !12307

do.body14:                                        ; preds = %if.then13
  %9 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12308, !tbaa !3910
  %rkbuf_rkb = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %9, i32 0, i32 20, !dbg !12308
  %10 = load ptr, ptr %rkbuf_rkb, align 8, !dbg !12308, !tbaa !5424
  %tobool15 = icmp ne ptr %10, null, !dbg !12308
  br i1 %tobool15, label %if.then16, label %if.end53, !dbg !12309

if.then16:                                        ; preds = %do.body14
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr) #16, !dbg !12310
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr, metadata !12185, metadata !DIExpression()), !dbg !12310
  %arraydecay = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !12310
  %call17 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay, i64 noundef 256, ptr noundef @.str.32) #16, !dbg !12310
  %arraydecay18 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !12311
  %call19 = call i64 @strlen(ptr noundef %arraydecay18) #19, !dbg !12311
  %cmp20 = icmp eq i64 %call19, 2, !dbg !12311
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !12310

if.then22:                                        ; preds = %if.then16
  %arrayidx = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !12311
  store i8 0, ptr %arrayidx, align 16, !dbg !12311, !tbaa !4126
  br label %if.end23, !dbg !12311

if.end23:                                         ; preds = %if.then22, %if.then16
  br label %do.body24, !dbg !12310

do.body24:                                        ; preds = %if.end23
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !12313
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !12191, metadata !DIExpression()), !dbg !12313
  %11 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_rkb25 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %11, i32 0, i32 20, !dbg !12313
  %12 = load ptr, ptr %rkbuf_rkb25, align 8, !dbg !12313, !tbaa !5424
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 49, !dbg !12313
  %call26 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !12313
  %arraydecay27 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12313
  %13 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_rkb28 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %13, i32 0, i32 20, !dbg !12313
  %14 = load ptr, ptr %rkbuf_rkb28, align 8, !dbg !12313, !tbaa !5424
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 48, !dbg !12313
  %15 = load ptr, ptr %rkb_logname, align 8, !dbg !12313, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay27, ptr noundef %15, i64 noundef 256), !dbg !12313
  %16 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_rkb29 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %16, i32 0, i32 20, !dbg !12313
  %17 = load ptr, ptr %rkbuf_rkb29, align 8, !dbg !12313, !tbaa !5424
  %rkb_logname_lock30 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 49, !dbg !12313
  %call31 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock30), !dbg !12313
  %18 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_rkb32 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %18, i32 0, i32 20, !dbg !12313
  %19 = load ptr, ptr %rkbuf_rkb32, align 8, !dbg !12313, !tbaa !5424
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 32, !dbg !12313
  %20 = load ptr, ptr %rkb_rk, align 8, !dbg !12313, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %20, i32 0, i32 18, !dbg !12313
  %21 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_rkb33 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %21, i32 0, i32 20, !dbg !12313
  %22 = load ptr, ptr %rkbuf_rkb33, align 8, !dbg !12313, !tbaa !5424
  %rkb_rk34 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 32, !dbg !12313
  %23 = load ptr, ptr %rkb_rk34, align 8, !dbg !12313, !tbaa !4139
  %arraydecay35 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12313
  %24 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %24, i32 0, i32 10, !dbg !12313
  %ApiKey = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !12313
  %25 = load i16, ptr %ApiKey, align 4, !dbg !12313, !tbaa !5392
  %call36 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %25), !dbg !12313
  %26 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_reqhdr37 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %26, i32 0, i32 10, !dbg !12313
  %ApiVersion = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr37, i32 0, i32 2, !dbg !12313
  %27 = load i16, ptr %ApiVersion, align 2, !dbg !12313, !tbaa !5272
  %conv38 = sext i16 %27 to i32, !dbg !12313
  %28 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_reader39 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %28, i32 0, i32 6, !dbg !12313
  %call40 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader39), !dbg !12313
  %29 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_reader41 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %29, i32 0, i32 6, !dbg !12313
  %end42 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader41, i32 0, i32 4, !dbg !12313
  %30 = load i64, ptr %end42, align 8, !dbg !12313, !tbaa !6731
  %31 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_reader43 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %31, i32 0, i32 6, !dbg !12313
  %start = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader43, i32 0, i32 3, !dbg !12313
  %32 = load i64, ptr %start, align 8, !dbg !12313, !tbaa !6739
  %sub44 = sub i64 %30, %32, !dbg !12313
  %33 = load i64, ptr %__len0, align 8, !dbg !12313, !tbaa !4039
  %34 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_reader45 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %34, i32 0, i32 6, !dbg !12313
  %end46 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader45, i32 0, i32 4, !dbg !12313
  %35 = load i64, ptr %end46, align 8, !dbg !12313, !tbaa !6731
  %36 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_reader47 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %36, i32 0, i32 6, !dbg !12313
  %call48 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader47), !dbg !12313
  %sub49 = sub i64 %35, %call48, !dbg !12313
  %37 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_uflow_mitigation = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %37, i32 0, i32 36, !dbg !12313
  %38 = load ptr, ptr %rkbuf_uflow_mitigation, align 8, !dbg !12313, !tbaa !6740
  %tobool50 = icmp ne ptr %38, null, !dbg !12313
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !12313

cond.true:                                        ; preds = %do.body24
  %39 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12313, !tbaa !3910
  %rkbuf_uflow_mitigation51 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %39, i32 0, i32 36, !dbg !12313
  %40 = load ptr, ptr %rkbuf_uflow_mitigation51, align 8, !dbg !12313, !tbaa !6740
  br label %cond.end, !dbg !12313

cond.false:                                       ; preds = %do.body24
  br label %cond.end, !dbg !12313

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %40, %cond.true ], [ @.str.35, %cond.false ], !dbg !12313
  %arraydecay52 = getelementptr inbounds [256 x i8], ptr %__tmpstr, i64 0, i64 0, !dbg !12313
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf, ptr noundef %23, ptr noundef %arraydecay35, i32 noundef 3, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call36, i32 noundef %conv38, i64 noundef %call40, i64 noundef %sub44, ptr noundef @__FUNCTION__.rd_kafka_broker_handle_SaslHandshake, i32 noundef 2294, i64 noundef %33, i64 noundef %sub49, ptr noundef %cond, ptr noundef %arraydecay52), !dbg !12313
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !12310
  br label %do.cond, !dbg !12313

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !12313

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr) #16, !dbg !12308
  br label %if.end53, !dbg !12310

if.end53:                                         ; preds = %do.end, %do.body14
  %41 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12309, !tbaa !3910
  %rkbuf_err = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %41, i32 0, i32 34, !dbg !12309
  store i32 -155, ptr %rkbuf_err, align 8, !dbg !12309, !tbaa !6741
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12309

do.cond54:                                        ; No predecessors!
  br label %do.end55, !dbg !12309

do.end55:                                         ; preds = %do.cond54
  br label %if.end56, !dbg !12307

if.end56:                                         ; preds = %do.end55, %do.body6
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12304
  br label %cleanup, !dbg !12304

cleanup:                                          ; preds = %if.end53, %if.end56
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len0) #16, !dbg !12304
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup60 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond57, !dbg !12305

do.cond57:                                        ; preds = %cleanup.cont
  br label %do.end58, !dbg !12305

do.end58:                                         ; preds = %do.cond57
  br label %if.end59, !dbg !12305

if.end59:                                         ; preds = %do.end58, %do.body3
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12302
  br label %cleanup60, !dbg !12302

cleanup60:                                        ; preds = %if.end59, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len2) #16, !dbg !12302
  %cleanup.dest61 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest61, label %cleanup66 [
    i32 0, label %cleanup.cont62
  ]

cleanup.cont62:                                   ; preds = %cleanup60
  br label %do.cond63, !dbg !12303

do.cond63:                                        ; preds = %cleanup.cont62
  br label %do.end64, !dbg !12303

do.end64:                                         ; preds = %do.cond63
  %42 = load i16, ptr %_v, align 2, !dbg !12302, !tbaa !3915
  %call65 = call zeroext i16 @__bswap_16(i16 noundef zeroext %42), !dbg !12302
  %43 = load ptr, ptr %_vp, align 8, !dbg !12302, !tbaa !3910
  store i16 %call65, ptr %43, align 2, !dbg !12302, !tbaa !3915
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12301
  br label %cleanup66, !dbg !12301

cleanup66:                                        ; preds = %do.end64, %cleanup60
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp) #16, !dbg !12301
  call void @llvm.lifetime.end.p0(i64 2, ptr %_v) #16, !dbg !12301
  %cleanup.dest68 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest68, label %cleanup631 [
    i32 0, label %cleanup.cont69
    i32 13, label %err_parse
  ]

cleanup.cont69:                                   ; preds = %cleanup66
  br label %do.cond70, !dbg !12302

do.cond70:                                        ; preds = %cleanup.cont69
  br label %do.end71, !dbg !12302

do.end71:                                         ; preds = %do.cond70
  br label %do.body72, !dbg !12314

do.body72:                                        ; preds = %do.end71
  call void @llvm.lifetime.start.p0(i64 4, ptr %_v73) #16, !dbg !12315
  tail call void @llvm.dbg.declare(metadata ptr %_v73, metadata !12193, metadata !DIExpression()), !dbg !12315
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp74) #16, !dbg !12315
  tail call void @llvm.dbg.declare(metadata ptr %_vp74, metadata !12195, metadata !DIExpression()), !dbg !12315
  store ptr %MechCnt, ptr %_vp74, align 8, !dbg !12315, !tbaa !3910
  br label %do.body75, !dbg !12315

do.body75:                                        ; preds = %do.body72
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len276) #16, !dbg !12316
  tail call void @llvm.dbg.declare(metadata ptr %__len276, metadata !12196, metadata !DIExpression()), !dbg !12316
  store i64 4, ptr %__len276, align 8, !dbg !12316, !tbaa !4039
  %44 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12317, !tbaa !3910
  %rkbuf_reader77 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %44, i32 0, i32 6, !dbg !12317
  %45 = load i64, ptr %__len276, align 8, !dbg !12317, !tbaa !4039
  %call78 = call i64 @rd_slice_read(ptr noundef %rkbuf_reader77, ptr noundef %_v73, i64 noundef %45), !dbg !12317
  %tobool79 = icmp ne i64 %call78, 0, !dbg !12317
  br i1 %tobool79, label %if.end163, label %if.then80, !dbg !12316

if.then80:                                        ; preds = %do.body75
  br label %do.body81, !dbg !12317

do.body81:                                        ; preds = %if.then80
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len082) #16, !dbg !12318
  tail call void @llvm.dbg.declare(metadata ptr %__len082, metadata !12198, metadata !DIExpression()), !dbg !12318
  %46 = load i64, ptr %__len276, align 8, !dbg !12318, !tbaa !4039
  store i64 %46, ptr %__len082, align 8, !dbg !12318, !tbaa !4039
  %47 = load i64, ptr %__len082, align 8, !dbg !12319, !tbaa !4039
  %48 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12319, !tbaa !3910
  %rkbuf_reader83 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %48, i32 0, i32 6, !dbg !12319
  %end84 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader83, i32 0, i32 4, !dbg !12319
  %49 = load i64, ptr %end84, align 8, !dbg !12319, !tbaa !6731
  %50 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12319, !tbaa !3910
  %rkbuf_reader85 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %50, i32 0, i32 6, !dbg !12319
  %call86 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader85), !dbg !12319
  %sub87 = sub i64 %49, %call86, !dbg !12319
  %cmp88 = icmp ugt i64 %47, %sub87, !dbg !12319
  %conv89 = zext i1 %cmp88 to i32, !dbg !12319
  %conv90 = sext i32 %conv89 to i64, !dbg !12319
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 0), !dbg !12319
  %tobool92 = icmp ne i64 %expval91, 0, !dbg !12319
  br i1 %tobool92, label %if.then93, label %if.end157, !dbg !12318

if.then93:                                        ; preds = %do.body81
  br label %do.body94, !dbg !12320

do.body94:                                        ; preds = %if.then93
  %51 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12321, !tbaa !3910
  %rkbuf_rkb95 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %51, i32 0, i32 20, !dbg !12321
  %52 = load ptr, ptr %rkbuf_rkb95, align 8, !dbg !12321, !tbaa !5424
  %tobool96 = icmp ne ptr %52, null, !dbg !12321
  br i1 %tobool96, label %if.then97, label %if.end153, !dbg !12322

if.then97:                                        ; preds = %do.body94
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr98) #16, !dbg !12323
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr98, metadata !12201, metadata !DIExpression()), !dbg !12323
  %arraydecay99 = getelementptr inbounds [256 x i8], ptr %__tmpstr98, i64 0, i64 0, !dbg !12323
  %call100 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay99, i64 noundef 256, ptr noundef @.str.32) #16, !dbg !12323
  %arraydecay101 = getelementptr inbounds [256 x i8], ptr %__tmpstr98, i64 0, i64 0, !dbg !12324
  %call102 = call i64 @strlen(ptr noundef %arraydecay101) #19, !dbg !12324
  %cmp103 = icmp eq i64 %call102, 2, !dbg !12324
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !12323

if.then105:                                       ; preds = %if.then97
  %arrayidx106 = getelementptr inbounds [256 x i8], ptr %__tmpstr98, i64 0, i64 0, !dbg !12324
  store i8 0, ptr %arrayidx106, align 16, !dbg !12324, !tbaa !4126
  br label %if.end107, !dbg !12324

if.end107:                                        ; preds = %if.then105, %if.then97
  br label %do.body108, !dbg !12323

do.body108:                                       ; preds = %if.end107
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname109) #16, !dbg !12326
  tail call void @llvm.dbg.declare(metadata ptr %_logname109, metadata !12207, metadata !DIExpression()), !dbg !12326
  %53 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_rkb110 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %53, i32 0, i32 20, !dbg !12326
  %54 = load ptr, ptr %rkbuf_rkb110, align 8, !dbg !12326, !tbaa !5424
  %rkb_logname_lock111 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %54, i32 0, i32 49, !dbg !12326
  %call112 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock111), !dbg !12326
  %arraydecay113 = getelementptr inbounds [256 x i8], ptr %_logname109, i64 0, i64 0, !dbg !12326
  %55 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_rkb114 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %55, i32 0, i32 20, !dbg !12326
  %56 = load ptr, ptr %rkbuf_rkb114, align 8, !dbg !12326, !tbaa !5424
  %rkb_logname115 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 48, !dbg !12326
  %57 = load ptr, ptr %rkb_logname115, align 8, !dbg !12326, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay113, ptr noundef %57, i64 noundef 256), !dbg !12326
  %58 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_rkb116 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %58, i32 0, i32 20, !dbg !12326
  %59 = load ptr, ptr %rkbuf_rkb116, align 8, !dbg !12326, !tbaa !5424
  %rkb_logname_lock117 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 49, !dbg !12326
  %call118 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock117), !dbg !12326
  %60 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_rkb119 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %60, i32 0, i32 20, !dbg !12326
  %61 = load ptr, ptr %rkbuf_rkb119, align 8, !dbg !12326, !tbaa !5424
  %rkb_rk120 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %61, i32 0, i32 32, !dbg !12326
  %62 = load ptr, ptr %rkb_rk120, align 8, !dbg !12326, !tbaa !4139
  %rk_conf121 = getelementptr inbounds %struct.rd_kafka_s, ptr %62, i32 0, i32 18, !dbg !12326
  %63 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_rkb122 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %63, i32 0, i32 20, !dbg !12326
  %64 = load ptr, ptr %rkbuf_rkb122, align 8, !dbg !12326, !tbaa !5424
  %rkb_rk123 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %64, i32 0, i32 32, !dbg !12326
  %65 = load ptr, ptr %rkb_rk123, align 8, !dbg !12326, !tbaa !4139
  %arraydecay124 = getelementptr inbounds [256 x i8], ptr %_logname109, i64 0, i64 0, !dbg !12326
  %66 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_reqhdr125 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %66, i32 0, i32 10, !dbg !12326
  %ApiKey126 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr125, i32 0, i32 1, !dbg !12326
  %67 = load i16, ptr %ApiKey126, align 4, !dbg !12326, !tbaa !5392
  %call127 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %67), !dbg !12326
  %68 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_reqhdr128 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %68, i32 0, i32 10, !dbg !12326
  %ApiVersion129 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr128, i32 0, i32 2, !dbg !12326
  %69 = load i16, ptr %ApiVersion129, align 2, !dbg !12326, !tbaa !5272
  %conv130 = sext i16 %69 to i32, !dbg !12326
  %70 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_reader131 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %70, i32 0, i32 6, !dbg !12326
  %call132 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader131), !dbg !12326
  %71 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_reader133 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %71, i32 0, i32 6, !dbg !12326
  %end134 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader133, i32 0, i32 4, !dbg !12326
  %72 = load i64, ptr %end134, align 8, !dbg !12326, !tbaa !6731
  %73 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_reader135 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %73, i32 0, i32 6, !dbg !12326
  %start136 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader135, i32 0, i32 3, !dbg !12326
  %74 = load i64, ptr %start136, align 8, !dbg !12326, !tbaa !6739
  %sub137 = sub i64 %72, %74, !dbg !12326
  %75 = load i64, ptr %__len082, align 8, !dbg !12326, !tbaa !4039
  %76 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_reader138 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %76, i32 0, i32 6, !dbg !12326
  %end139 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader138, i32 0, i32 4, !dbg !12326
  %77 = load i64, ptr %end139, align 8, !dbg !12326, !tbaa !6731
  %78 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_reader140 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %78, i32 0, i32 6, !dbg !12326
  %call141 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader140), !dbg !12326
  %sub142 = sub i64 %77, %call141, !dbg !12326
  %79 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_uflow_mitigation143 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %79, i32 0, i32 36, !dbg !12326
  %80 = load ptr, ptr %rkbuf_uflow_mitigation143, align 8, !dbg !12326, !tbaa !6740
  %tobool144 = icmp ne ptr %80, null, !dbg !12326
  br i1 %tobool144, label %cond.true145, label %cond.false147, !dbg !12326

cond.true145:                                     ; preds = %do.body108
  %81 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12326, !tbaa !3910
  %rkbuf_uflow_mitigation146 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %81, i32 0, i32 36, !dbg !12326
  %82 = load ptr, ptr %rkbuf_uflow_mitigation146, align 8, !dbg !12326, !tbaa !6740
  br label %cond.end148, !dbg !12326

cond.false147:                                    ; preds = %do.body108
  br label %cond.end148, !dbg !12326

cond.end148:                                      ; preds = %cond.false147, %cond.true145
  %cond149 = phi ptr [ %82, %cond.true145 ], [ @.str.35, %cond.false147 ], !dbg !12326
  %arraydecay150 = getelementptr inbounds [256 x i8], ptr %__tmpstr98, i64 0, i64 0, !dbg !12326
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf121, ptr noundef %65, ptr noundef %arraydecay124, i32 noundef 3, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call127, i32 noundef %conv130, i64 noundef %call132, i64 noundef %sub137, ptr noundef @__FUNCTION__.rd_kafka_broker_handle_SaslHandshake, i32 noundef 2295, i64 noundef %75, i64 noundef %sub142, ptr noundef %cond149, ptr noundef %arraydecay150), !dbg !12326
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname109) #16, !dbg !12323
  br label %do.cond151, !dbg !12326

do.cond151:                                       ; preds = %cond.end148
  br label %do.end152, !dbg !12326

do.end152:                                        ; preds = %do.cond151
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr98) #16, !dbg !12321
  br label %if.end153, !dbg !12323

if.end153:                                        ; preds = %do.end152, %do.body94
  %83 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12322, !tbaa !3910
  %rkbuf_err154 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %83, i32 0, i32 34, !dbg !12322
  store i32 -155, ptr %rkbuf_err154, align 8, !dbg !12322, !tbaa !6741
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup158, !dbg !12322

do.cond155:                                       ; No predecessors!
  br label %do.end156, !dbg !12322

do.end156:                                        ; preds = %do.cond155
  br label %if.end157, !dbg !12320

if.end157:                                        ; preds = %do.end156, %do.body81
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12317
  br label %cleanup158, !dbg !12317

cleanup158:                                       ; preds = %if.end153, %if.end157
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len082) #16, !dbg !12317
  %cleanup.dest159 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest159, label %cleanup164 [
    i32 0, label %cleanup.cont160
  ]

cleanup.cont160:                                  ; preds = %cleanup158
  br label %do.cond161, !dbg !12318

do.cond161:                                       ; preds = %cleanup.cont160
  br label %do.end162, !dbg !12318

do.end162:                                        ; preds = %do.cond161
  br label %if.end163, !dbg !12318

if.end163:                                        ; preds = %do.end162, %do.body75
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12315
  br label %cleanup164, !dbg !12315

cleanup164:                                       ; preds = %if.end163, %cleanup158
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len276) #16, !dbg !12315
  %cleanup.dest165 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest165, label %cleanup170 [
    i32 0, label %cleanup.cont166
  ]

cleanup.cont166:                                  ; preds = %cleanup164
  br label %do.cond167, !dbg !12316

do.cond167:                                       ; preds = %cleanup.cont166
  br label %do.end168, !dbg !12316

do.end168:                                        ; preds = %do.cond167
  %84 = load i32, ptr %_v73, align 4, !dbg !12315, !tbaa !3959
  %call169 = call i32 @__bswap_32(i32 noundef %84), !dbg !12315
  %85 = load ptr, ptr %_vp74, align 8, !dbg !12315, !tbaa !3910
  store i32 %call169, ptr %85, align 4, !dbg !12315, !tbaa !3959
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12314
  br label %cleanup170, !dbg !12314

cleanup170:                                       ; preds = %do.end168, %cleanup164
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp74) #16, !dbg !12314
  call void @llvm.lifetime.end.p0(i64 4, ptr %_v73) #16, !dbg !12314
  %cleanup.dest172 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest172, label %cleanup631 [
    i32 0, label %cleanup.cont173
    i32 13, label %err_parse
  ]

cleanup.cont173:                                  ; preds = %cleanup170
  br label %do.cond174, !dbg !12315

do.cond174:                                       ; preds = %cleanup.cont173
  br label %do.end175, !dbg !12315

do.end175:                                        ; preds = %do.cond174
  %86 = load i32, ptr %MechCnt, align 4, !dbg !12327, !tbaa !3959
  %cmp176 = icmp slt i32 %86, 0, !dbg !12328
  br i1 %cmp176, label %if.then180, label %lor.lhs.false, !dbg !12329

lor.lhs.false:                                    ; preds = %do.end175
  %87 = load i32, ptr %MechCnt, align 4, !dbg !12330, !tbaa !3959
  %cmp178 = icmp sgt i32 %87, 100, !dbg !12331
  br i1 %cmp178, label %if.then180, label %if.end242, !dbg !12332

if.then180:                                       ; preds = %lor.lhs.false, %do.end175
  br label %do.body181, !dbg !12333

do.body181:                                       ; preds = %if.then180
  %88 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12334, !tbaa !3910
  %rkbuf_rkb182 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %88, i32 0, i32 20, !dbg !12334
  %89 = load ptr, ptr %rkbuf_rkb182, align 8, !dbg !12334, !tbaa !5424
  %tobool183 = icmp ne ptr %89, null, !dbg !12334
  br i1 %tobool183, label %if.then184, label %if.end238, !dbg !12335

if.then184:                                       ; preds = %do.body181
  br label %do.body185, !dbg !12336

do.body185:                                       ; preds = %if.then184
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname186) #16, !dbg !12337
  tail call void @llvm.dbg.declare(metadata ptr %_logname186, metadata !12209, metadata !DIExpression()), !dbg !12337
  %90 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_rkb187 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %90, i32 0, i32 20, !dbg !12337
  %91 = load ptr, ptr %rkbuf_rkb187, align 8, !dbg !12337, !tbaa !5424
  %rkb_logname_lock188 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %91, i32 0, i32 49, !dbg !12337
  %call189 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock188), !dbg !12337
  %arraydecay190 = getelementptr inbounds [256 x i8], ptr %_logname186, i64 0, i64 0, !dbg !12337
  %92 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_rkb191 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %92, i32 0, i32 20, !dbg !12337
  %93 = load ptr, ptr %rkbuf_rkb191, align 8, !dbg !12337, !tbaa !5424
  %rkb_logname192 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %93, i32 0, i32 48, !dbg !12337
  %94 = load ptr, ptr %rkb_logname192, align 8, !dbg !12337, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay190, ptr noundef %94, i64 noundef 256), !dbg !12337
  %95 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_rkb193 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %95, i32 0, i32 20, !dbg !12337
  %96 = load ptr, ptr %rkbuf_rkb193, align 8, !dbg !12337, !tbaa !5424
  %rkb_logname_lock194 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %96, i32 0, i32 49, !dbg !12337
  %call195 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock194), !dbg !12337
  %97 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_rkb196 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %97, i32 0, i32 20, !dbg !12337
  %98 = load ptr, ptr %rkbuf_rkb196, align 8, !dbg !12337, !tbaa !5424
  %rkb_rk197 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %98, i32 0, i32 32, !dbg !12337
  %99 = load ptr, ptr %rkb_rk197, align 8, !dbg !12337, !tbaa !4139
  %rk_conf198 = getelementptr inbounds %struct.rd_kafka_s, ptr %99, i32 0, i32 18, !dbg !12337
  %100 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_rkb199 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %100, i32 0, i32 20, !dbg !12337
  %101 = load ptr, ptr %rkbuf_rkb199, align 8, !dbg !12337, !tbaa !5424
  %rkb_rk200 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %101, i32 0, i32 32, !dbg !12337
  %102 = load ptr, ptr %rkb_rk200, align 8, !dbg !12337, !tbaa !4139
  %arraydecay201 = getelementptr inbounds [256 x i8], ptr %_logname186, i64 0, i64 0, !dbg !12337
  %103 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_reqhdr202 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %103, i32 0, i32 10, !dbg !12337
  %ApiKey203 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr202, i32 0, i32 1, !dbg !12337
  %104 = load i16, ptr %ApiKey203, align 4, !dbg !12337, !tbaa !5392
  %call204 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %104), !dbg !12337
  %105 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_reqhdr205 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %105, i32 0, i32 10, !dbg !12337
  %ApiVersion206 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr205, i32 0, i32 2, !dbg !12337
  %106 = load i16, ptr %ApiVersion206, align 2, !dbg !12337, !tbaa !5272
  %conv207 = sext i16 %106 to i32, !dbg !12337
  %107 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %107, i32 0, i32 3, !dbg !12337
  %108 = load i32, ptr %rkbuf_flags, align 8, !dbg !12337, !tbaa !5243
  %and = and i32 %108, 64, !dbg !12337
  %tobool208 = icmp ne i32 %and, 0, !dbg !12337
  %109 = zext i1 %tobool208 to i64, !dbg !12337
  %cond209 = select i1 %tobool208, ptr @.str.212, ptr @.str.85, !dbg !12337
  %110 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_reader210 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %110, i32 0, i32 6, !dbg !12337
  %call211 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader210), !dbg !12337
  %111 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_reader212 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %111, i32 0, i32 6, !dbg !12337
  %end213 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader212, i32 0, i32 4, !dbg !12337
  %112 = load i64, ptr %end213, align 8, !dbg !12337, !tbaa !6731
  %113 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12337, !tbaa !3910
  %rkbuf_reader214 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %113, i32 0, i32 6, !dbg !12337
  %start215 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader214, i32 0, i32 3, !dbg !12337
  %114 = load i64, ptr %start215, align 8, !dbg !12337, !tbaa !6739
  %sub216 = sub i64 %112, %114, !dbg !12337
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf198, ptr noundef %102, ptr noundef %arraydecay201, i32 noundef 3, i32 noundef 0, ptr noundef @.str.210, ptr noundef @.str.211, ptr noundef %call204, i32 noundef %conv207, ptr noundef %cond209, i64 noundef %call211, i64 noundef %sub216, ptr noundef @__FUNCTION__.rd_kafka_broker_handle_SaslHandshake, i32 noundef 2299), !dbg !12337
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname186) #16, !dbg !12336
  br label %do.cond217, !dbg !12337

do.cond217:                                       ; preds = %do.body185
  br label %do.end218, !dbg !12337

do.end218:                                        ; preds = %do.cond217
  br label %do.body219, !dbg !12336

do.body219:                                       ; preds = %do.end218
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname220) #16, !dbg !12338
  tail call void @llvm.dbg.declare(metadata ptr %_logname220, metadata !12215, metadata !DIExpression()), !dbg !12338
  %115 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12338, !tbaa !3910
  %rkbuf_rkb221 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %115, i32 0, i32 20, !dbg !12338
  %116 = load ptr, ptr %rkbuf_rkb221, align 8, !dbg !12338, !tbaa !5424
  %rkb_logname_lock222 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %116, i32 0, i32 49, !dbg !12338
  %call223 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock222), !dbg !12338
  %arraydecay224 = getelementptr inbounds [256 x i8], ptr %_logname220, i64 0, i64 0, !dbg !12338
  %117 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12338, !tbaa !3910
  %rkbuf_rkb225 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %117, i32 0, i32 20, !dbg !12338
  %118 = load ptr, ptr %rkbuf_rkb225, align 8, !dbg !12338, !tbaa !5424
  %rkb_logname226 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %118, i32 0, i32 48, !dbg !12338
  %119 = load ptr, ptr %rkb_logname226, align 8, !dbg !12338, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay224, ptr noundef %119, i64 noundef 256), !dbg !12338
  %120 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12338, !tbaa !3910
  %rkbuf_rkb227 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %120, i32 0, i32 20, !dbg !12338
  %121 = load ptr, ptr %rkbuf_rkb227, align 8, !dbg !12338, !tbaa !5424
  %rkb_logname_lock228 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %121, i32 0, i32 49, !dbg !12338
  %call229 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock228), !dbg !12338
  %122 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12338, !tbaa !3910
  %rkbuf_rkb230 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %122, i32 0, i32 20, !dbg !12338
  %123 = load ptr, ptr %rkbuf_rkb230, align 8, !dbg !12338, !tbaa !5424
  %rkb_rk231 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %123, i32 0, i32 32, !dbg !12338
  %124 = load ptr, ptr %rkb_rk231, align 8, !dbg !12338, !tbaa !4139
  %rk_conf232 = getelementptr inbounds %struct.rd_kafka_s, ptr %124, i32 0, i32 18, !dbg !12338
  %125 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12338, !tbaa !3910
  %rkbuf_rkb233 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %125, i32 0, i32 20, !dbg !12338
  %126 = load ptr, ptr %rkbuf_rkb233, align 8, !dbg !12338, !tbaa !5424
  %rkb_rk234 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %126, i32 0, i32 32, !dbg !12338
  %127 = load ptr, ptr %rkb_rk234, align 8, !dbg !12338, !tbaa !4139
  %arraydecay235 = getelementptr inbounds [256 x i8], ptr %_logname220, i64 0, i64 0, !dbg !12338
  %128 = load i32, ptr %MechCnt, align 4, !dbg !12338, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf232, ptr noundef %127, ptr noundef %arraydecay235, i32 noundef 3, i32 noundef 0, ptr noundef @.str.210, ptr noundef @.str.213, i32 noundef %128), !dbg !12338
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname220) #16, !dbg !12336
  br label %do.cond236, !dbg !12338

do.cond236:                                       ; preds = %do.body219
  br label %do.end237, !dbg !12338

do.end237:                                        ; preds = %do.cond236
  br label %if.end238, !dbg !12336

if.end238:                                        ; preds = %do.end237, %do.body181
  %129 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12335, !tbaa !3910
  %rkbuf_err239 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %129, i32 0, i32 34, !dbg !12335
  store i32 -199, ptr %rkbuf_err239, align 8, !dbg !12335, !tbaa !6741
  br label %err_parse, !dbg !12335

do.cond240:                                       ; No predecessors!
  br label %do.end241, !dbg !12335

do.end241:                                        ; preds = %do.cond240
  br label %if.end242, !dbg !12335

if.end242:                                        ; preds = %do.end241, %lor.lhs.false
  %130 = load i32, ptr %MechCnt, align 4, !dbg !12339, !tbaa !3959
  %mul = mul nsw i32 %130, 32, !dbg !12339
  %add = add nsw i32 1, %mul, !dbg !12339
  %cmp243 = icmp slt i32 511, %add, !dbg !12339
  br i1 %cmp243, label %cond.true245, label %cond.false246, !dbg !12339

cond.true245:                                     ; preds = %if.end242
  br label %cond.end249, !dbg !12339

cond.false246:                                    ; preds = %if.end242
  %131 = load i32, ptr %MechCnt, align 4, !dbg !12339, !tbaa !3959
  %mul247 = mul nsw i32 %131, 32, !dbg !12339
  %add248 = add nsw i32 1, %mul247, !dbg !12339
  br label %cond.end249, !dbg !12339

cond.end249:                                      ; preds = %cond.false246, %cond.true245
  %cond250 = phi i32 [ 511, %cond.true245 ], [ %add248, %cond.false246 ], !dbg !12339
  %conv251 = sext i32 %cond250 to i64, !dbg !12339
  store i64 %conv251, ptr %msz, align 8, !dbg !12340, !tbaa !4039
  %132 = load i64, ptr %msz, align 8, !dbg !12341, !tbaa !4039
  %133 = alloca i8, i64 %132, align 16, !dbg !12341
  store ptr %133, ptr %mechs, align 8, !dbg !12342, !tbaa !3910
  %134 = load ptr, ptr %mechs, align 8, !dbg !12343, !tbaa !3910
  store i8 0, ptr %134, align 1, !dbg !12344, !tbaa !4126
  store i32 0, ptr %i, align 4, !dbg !12345, !tbaa !3959
  br label %for.cond, !dbg !12346

for.cond:                                         ; preds = %for.inc, %cond.end249
  %135 = load i32, ptr %i, align 4, !dbg !12347, !tbaa !3959
  %136 = load i32, ptr %MechCnt, align 4, !dbg !12348, !tbaa !3959
  %cmp252 = icmp slt i32 %135, %136, !dbg !12349
  br i1 %cmp252, label %for.body, label %for.end, !dbg !12350

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 16, ptr %mech) #16, !dbg !12351
  tail call void @llvm.dbg.declare(metadata ptr %mech, metadata !12217, metadata !DIExpression()), !dbg !12352
  br label %do.body254, !dbg !12353

do.body254:                                       ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %_klen) #16, !dbg !12354
  tail call void @llvm.dbg.declare(metadata ptr %_klen, metadata !12221, metadata !DIExpression()), !dbg !12354
  %137 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12355, !tbaa !3910
  %rkbuf_flags255 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %137, i32 0, i32 3, !dbg !12355
  %138 = load i32, ptr %rkbuf_flags255, align 8, !dbg !12355, !tbaa !5243
  %and256 = and i32 %138, 64, !dbg !12355
  %tobool257 = icmp ne i32 %and256, 0, !dbg !12355
  br i1 %tobool257, label %if.then258, label %if.else, !dbg !12354

if.then258:                                       ; preds = %do.body254
  call void @llvm.lifetime.start.p0(i64 8, ptr %_uva) #16, !dbg !12356
  tail call void @llvm.dbg.declare(metadata ptr %_uva, metadata !12223, metadata !DIExpression()), !dbg !12356
  br label %do.body259, !dbg !12356

do.body259:                                       ; preds = %if.then258
  call void @llvm.lifetime.start.p0(i64 8, ptr %_v260) #16, !dbg !12357
  tail call void @llvm.dbg.declare(metadata ptr %_v260, metadata !12226, metadata !DIExpression()), !dbg !12357
  call void @llvm.lifetime.start.p0(i64 8, ptr %_vp261) #16, !dbg !12357
  tail call void @llvm.dbg.declare(metadata ptr %_vp261, metadata !12228, metadata !DIExpression()), !dbg !12357
  store ptr %_uva, ptr %_vp261, align 8, !dbg !12357, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %_r) #16, !dbg !12357
  tail call void @llvm.dbg.declare(metadata ptr %_r, metadata !12229, metadata !DIExpression()), !dbg !12357
  %139 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12357, !tbaa !3910
  %rkbuf_reader262 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %139, i32 0, i32 6, !dbg !12357
  %call263 = call i64 @rd_slice_read_uvarint(ptr noundef %rkbuf_reader262, ptr noundef %_v260), !dbg !12357
  store i64 %call263, ptr %_r, align 8, !dbg !12357, !tbaa !4039
  %140 = load i64, ptr %_r, align 8, !dbg !12358, !tbaa !4039
  %cmp264 = icmp eq i64 %140, 0, !dbg !12358
  %conv265 = zext i1 %cmp264 to i32, !dbg !12358
  %conv266 = sext i32 %conv265 to i64, !dbg !12358
  %expval267 = call i64 @llvm.expect.i64(i64 %conv266, i64 0), !dbg !12358
  %tobool268 = icmp ne i64 %expval267, 0, !dbg !12358
  br i1 %tobool268, label %if.then269, label %if.end333, !dbg !12357

if.then269:                                       ; preds = %do.body259
  br label %do.body270, !dbg !12358

do.body270:                                       ; preds = %if.then269
  %141 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12359, !tbaa !3910
  %rkbuf_rkb271 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %141, i32 0, i32 20, !dbg !12359
  %142 = load ptr, ptr %rkbuf_rkb271, align 8, !dbg !12359, !tbaa !5424
  %tobool272 = icmp ne ptr %142, null, !dbg !12359
  br i1 %tobool272, label %if.then273, label %if.end329, !dbg !12360

if.then273:                                       ; preds = %do.body270
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr274) #16, !dbg !12361
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr274, metadata !12230, metadata !DIExpression()), !dbg !12361
  %arraydecay275 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !12361
  %call276 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay275, i64 noundef 256, ptr noundef @.str.197) #16, !dbg !12361
  %arraydecay277 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !12362
  %call278 = call i64 @strlen(ptr noundef %arraydecay277) #19, !dbg !12362
  %cmp279 = icmp eq i64 %call278, 2, !dbg !12362
  br i1 %cmp279, label %if.then281, label %if.end283, !dbg !12361

if.then281:                                       ; preds = %if.then273
  %arrayidx282 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !12362
  store i8 0, ptr %arrayidx282, align 16, !dbg !12362, !tbaa !4126
  br label %if.end283, !dbg !12362

if.end283:                                        ; preds = %if.then281, %if.then273
  br label %do.body284, !dbg !12361

do.body284:                                       ; preds = %if.end283
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname285) #16, !dbg !12364
  tail call void @llvm.dbg.declare(metadata ptr %_logname285, metadata !12235, metadata !DIExpression()), !dbg !12364
  %143 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_rkb286 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %143, i32 0, i32 20, !dbg !12364
  %144 = load ptr, ptr %rkbuf_rkb286, align 8, !dbg !12364, !tbaa !5424
  %rkb_logname_lock287 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %144, i32 0, i32 49, !dbg !12364
  %call288 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock287), !dbg !12364
  %arraydecay289 = getelementptr inbounds [256 x i8], ptr %_logname285, i64 0, i64 0, !dbg !12364
  %145 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_rkb290 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %145, i32 0, i32 20, !dbg !12364
  %146 = load ptr, ptr %rkbuf_rkb290, align 8, !dbg !12364, !tbaa !5424
  %rkb_logname291 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %146, i32 0, i32 48, !dbg !12364
  %147 = load ptr, ptr %rkb_logname291, align 8, !dbg !12364, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay289, ptr noundef %147, i64 noundef 256), !dbg !12364
  %148 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_rkb292 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %148, i32 0, i32 20, !dbg !12364
  %149 = load ptr, ptr %rkbuf_rkb292, align 8, !dbg !12364, !tbaa !5424
  %rkb_logname_lock293 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %149, i32 0, i32 49, !dbg !12364
  %call294 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock293), !dbg !12364
  %150 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_rkb295 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %150, i32 0, i32 20, !dbg !12364
  %151 = load ptr, ptr %rkbuf_rkb295, align 8, !dbg !12364, !tbaa !5424
  %rkb_rk296 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %151, i32 0, i32 32, !dbg !12364
  %152 = load ptr, ptr %rkb_rk296, align 8, !dbg !12364, !tbaa !4139
  %rk_conf297 = getelementptr inbounds %struct.rd_kafka_s, ptr %152, i32 0, i32 18, !dbg !12364
  %153 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_rkb298 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %153, i32 0, i32 20, !dbg !12364
  %154 = load ptr, ptr %rkbuf_rkb298, align 8, !dbg !12364, !tbaa !5424
  %rkb_rk299 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %154, i32 0, i32 32, !dbg !12364
  %155 = load ptr, ptr %rkb_rk299, align 8, !dbg !12364, !tbaa !4139
  %arraydecay300 = getelementptr inbounds [256 x i8], ptr %_logname285, i64 0, i64 0, !dbg !12364
  %156 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_reqhdr301 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %156, i32 0, i32 10, !dbg !12364
  %ApiKey302 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr301, i32 0, i32 1, !dbg !12364
  %157 = load i16, ptr %ApiKey302, align 4, !dbg !12364, !tbaa !5392
  %call303 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %157), !dbg !12364
  %158 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_reqhdr304 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %158, i32 0, i32 10, !dbg !12364
  %ApiVersion305 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr304, i32 0, i32 2, !dbg !12364
  %159 = load i16, ptr %ApiVersion305, align 2, !dbg !12364, !tbaa !5272
  %conv306 = sext i16 %159 to i32, !dbg !12364
  %160 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_reader307 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %160, i32 0, i32 6, !dbg !12364
  %call308 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader307), !dbg !12364
  %161 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_reader309 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %161, i32 0, i32 6, !dbg !12364
  %end310 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader309, i32 0, i32 4, !dbg !12364
  %162 = load i64, ptr %end310, align 8, !dbg !12364, !tbaa !6731
  %163 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_reader311 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %163, i32 0, i32 6, !dbg !12364
  %start312 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader311, i32 0, i32 3, !dbg !12364
  %164 = load i64, ptr %start312, align 8, !dbg !12364, !tbaa !6739
  %sub313 = sub i64 %162, %164, !dbg !12364
  %165 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_reader314 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %165, i32 0, i32 6, !dbg !12364
  %end315 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader314, i32 0, i32 4, !dbg !12364
  %166 = load i64, ptr %end315, align 8, !dbg !12364, !tbaa !6731
  %167 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_reader316 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %167, i32 0, i32 6, !dbg !12364
  %call317 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader316), !dbg !12364
  %sub318 = sub i64 %166, %call317, !dbg !12364
  %168 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_uflow_mitigation319 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %168, i32 0, i32 36, !dbg !12364
  %169 = load ptr, ptr %rkbuf_uflow_mitigation319, align 8, !dbg !12364, !tbaa !6740
  %tobool320 = icmp ne ptr %169, null, !dbg !12364
  br i1 %tobool320, label %cond.true321, label %cond.false323, !dbg !12364

cond.true321:                                     ; preds = %do.body284
  %170 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12364, !tbaa !3910
  %rkbuf_uflow_mitigation322 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %170, i32 0, i32 36, !dbg !12364
  %171 = load ptr, ptr %rkbuf_uflow_mitigation322, align 8, !dbg !12364, !tbaa !6740
  br label %cond.end324, !dbg !12364

cond.false323:                                    ; preds = %do.body284
  br label %cond.end324, !dbg !12364

cond.end324:                                      ; preds = %cond.false323, %cond.true321
  %cond325 = phi ptr [ %171, %cond.true321 ], [ @.str.35, %cond.false323 ], !dbg !12364
  %arraydecay326 = getelementptr inbounds [256 x i8], ptr %__tmpstr274, i64 0, i64 0, !dbg !12364
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf297, ptr noundef %155, ptr noundef %arraydecay300, i32 noundef 3, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call303, i32 noundef %conv306, i64 noundef %call308, i64 noundef %sub313, ptr noundef @__FUNCTION__.rd_kafka_broker_handle_SaslHandshake, i32 noundef 2308, i64 noundef 0, i64 noundef %sub318, ptr noundef %cond325, ptr noundef %arraydecay326), !dbg !12364
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname285) #16, !dbg !12361
  br label %do.cond327, !dbg !12364

do.cond327:                                       ; preds = %cond.end324
  br label %do.end328, !dbg !12364

do.end328:                                        ; preds = %do.cond327
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr274) #16, !dbg !12359
  br label %if.end329, !dbg !12361

if.end329:                                        ; preds = %do.end328, %do.body270
  %172 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12360, !tbaa !3910
  %rkbuf_err330 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %172, i32 0, i32 34, !dbg !12360
  store i32 -155, ptr %rkbuf_err330, align 8, !dbg !12360, !tbaa !6741
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup334, !dbg !12360

do.cond331:                                       ; No predecessors!
  br label %do.end332, !dbg !12360

do.end332:                                        ; preds = %do.cond331
  br label %if.end333, !dbg !12360

if.end333:                                        ; preds = %do.end332, %do.body259
  %173 = load i64, ptr %_v260, align 8, !dbg !12357, !tbaa !4039
  %174 = load ptr, ptr %_vp261, align 8, !dbg !12357, !tbaa !3910
  store i64 %173, ptr %174, align 8, !dbg !12357, !tbaa !4039
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12356
  br label %cleanup334, !dbg !12356

cleanup334:                                       ; preds = %if.end329, %if.end333
  call void @llvm.lifetime.end.p0(i64 8, ptr %_r) #16, !dbg !12356
  call void @llvm.lifetime.end.p0(i64 8, ptr %_vp261) #16, !dbg !12356
  call void @llvm.lifetime.end.p0(i64 8, ptr %_v260) #16, !dbg !12356
  %cleanup.dest337 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest337, label %cleanup344 [
    i32 0, label %cleanup.cont338
  ]

cleanup.cont338:                                  ; preds = %cleanup334
  br label %do.cond339, !dbg !12357

do.cond339:                                       ; preds = %cleanup.cont338
  br label %do.end340, !dbg !12357

do.end340:                                        ; preds = %do.cond339
  %175 = load i64, ptr %_uva, align 8, !dbg !12356, !tbaa !4039
  %conv341 = trunc i64 %175 to i32, !dbg !12356
  %sub342 = sub nsw i32 %conv341, 1, !dbg !12356
  %len = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12356
  store i32 %sub342, ptr %len, align 8, !dbg !12356, !tbaa !8677
  %len343 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12356
  %176 = load i32, ptr %len343, align 8, !dbg !12356, !tbaa !8677
  store i32 %176, ptr %_klen, align 4, !dbg !12356, !tbaa !3959
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12355
  br label %cleanup344, !dbg !12355

cleanup344:                                       ; preds = %do.end340, %cleanup334
  call void @llvm.lifetime.end.p0(i64 8, ptr %_uva) #16, !dbg !12355
  %cleanup.dest345 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest345, label %cleanup570 [
    i32 0, label %cleanup.cont346
  ]

cleanup.cont346:                                  ; preds = %cleanup344
  br label %if.end459, !dbg !12356

if.else:                                          ; preds = %do.body254
  br label %do.body347, !dbg !12365

do.body347:                                       ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 2, ptr %_v348) #16, !dbg !12366
  tail call void @llvm.dbg.declare(metadata ptr %_v348, metadata !12237, metadata !DIExpression()), !dbg !12366
  br label %do.body349, !dbg !12366

do.body349:                                       ; preds = %do.body347
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len2350) #16, !dbg !12367
  tail call void @llvm.dbg.declare(metadata ptr %__len2350, metadata !12240, metadata !DIExpression()), !dbg !12367
  store i64 2, ptr %__len2350, align 8, !dbg !12367, !tbaa !4039
  %177 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12368, !tbaa !3910
  %rkbuf_reader351 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %177, i32 0, i32 6, !dbg !12368
  %178 = load i64, ptr %__len2350, align 8, !dbg !12368, !tbaa !4039
  %call352 = call i64 @rd_slice_read(ptr noundef %rkbuf_reader351, ptr noundef %_v348, i64 noundef %178), !dbg !12368
  %tobool353 = icmp ne i64 %call352, 0, !dbg !12368
  br i1 %tobool353, label %if.end437, label %if.then354, !dbg !12367

if.then354:                                       ; preds = %do.body349
  br label %do.body355, !dbg !12368

do.body355:                                       ; preds = %if.then354
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len0356) #16, !dbg !12369
  tail call void @llvm.dbg.declare(metadata ptr %__len0356, metadata !12242, metadata !DIExpression()), !dbg !12369
  %179 = load i64, ptr %__len2350, align 8, !dbg !12369, !tbaa !4039
  store i64 %179, ptr %__len0356, align 8, !dbg !12369, !tbaa !4039
  %180 = load i64, ptr %__len0356, align 8, !dbg !12370, !tbaa !4039
  %181 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12370, !tbaa !3910
  %rkbuf_reader357 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %181, i32 0, i32 6, !dbg !12370
  %end358 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader357, i32 0, i32 4, !dbg !12370
  %182 = load i64, ptr %end358, align 8, !dbg !12370, !tbaa !6731
  %183 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12370, !tbaa !3910
  %rkbuf_reader359 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %183, i32 0, i32 6, !dbg !12370
  %call360 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader359), !dbg !12370
  %sub361 = sub i64 %182, %call360, !dbg !12370
  %cmp362 = icmp ugt i64 %180, %sub361, !dbg !12370
  %conv363 = zext i1 %cmp362 to i32, !dbg !12370
  %conv364 = sext i32 %conv363 to i64, !dbg !12370
  %expval365 = call i64 @llvm.expect.i64(i64 %conv364, i64 0), !dbg !12370
  %tobool366 = icmp ne i64 %expval365, 0, !dbg !12370
  br i1 %tobool366, label %if.then367, label %if.end431, !dbg !12369

if.then367:                                       ; preds = %do.body355
  br label %do.body368, !dbg !12371

do.body368:                                       ; preds = %if.then367
  %184 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12372, !tbaa !3910
  %rkbuf_rkb369 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %184, i32 0, i32 20, !dbg !12372
  %185 = load ptr, ptr %rkbuf_rkb369, align 8, !dbg !12372, !tbaa !5424
  %tobool370 = icmp ne ptr %185, null, !dbg !12372
  br i1 %tobool370, label %if.then371, label %if.end427, !dbg !12373

if.then371:                                       ; preds = %do.body368
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr372) #16, !dbg !12374
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr372, metadata !12245, metadata !DIExpression()), !dbg !12374
  %arraydecay373 = getelementptr inbounds [256 x i8], ptr %__tmpstr372, i64 0, i64 0, !dbg !12374
  %call374 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay373, i64 noundef 256, ptr noundef @.str.32) #16, !dbg !12374
  %arraydecay375 = getelementptr inbounds [256 x i8], ptr %__tmpstr372, i64 0, i64 0, !dbg !12375
  %call376 = call i64 @strlen(ptr noundef %arraydecay375) #19, !dbg !12375
  %cmp377 = icmp eq i64 %call376, 2, !dbg !12375
  br i1 %cmp377, label %if.then379, label %if.end381, !dbg !12374

if.then379:                                       ; preds = %if.then371
  %arrayidx380 = getelementptr inbounds [256 x i8], ptr %__tmpstr372, i64 0, i64 0, !dbg !12375
  store i8 0, ptr %arrayidx380, align 16, !dbg !12375, !tbaa !4126
  br label %if.end381, !dbg !12375

if.end381:                                        ; preds = %if.then379, %if.then371
  br label %do.body382, !dbg !12374

do.body382:                                       ; preds = %if.end381
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname383) #16, !dbg !12377
  tail call void @llvm.dbg.declare(metadata ptr %_logname383, metadata !12251, metadata !DIExpression()), !dbg !12377
  %186 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_rkb384 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %186, i32 0, i32 20, !dbg !12377
  %187 = load ptr, ptr %rkbuf_rkb384, align 8, !dbg !12377, !tbaa !5424
  %rkb_logname_lock385 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %187, i32 0, i32 49, !dbg !12377
  %call386 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock385), !dbg !12377
  %arraydecay387 = getelementptr inbounds [256 x i8], ptr %_logname383, i64 0, i64 0, !dbg !12377
  %188 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_rkb388 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %188, i32 0, i32 20, !dbg !12377
  %189 = load ptr, ptr %rkbuf_rkb388, align 8, !dbg !12377, !tbaa !5424
  %rkb_logname389 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %189, i32 0, i32 48, !dbg !12377
  %190 = load ptr, ptr %rkb_logname389, align 8, !dbg !12377, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay387, ptr noundef %190, i64 noundef 256), !dbg !12377
  %191 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_rkb390 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %191, i32 0, i32 20, !dbg !12377
  %192 = load ptr, ptr %rkbuf_rkb390, align 8, !dbg !12377, !tbaa !5424
  %rkb_logname_lock391 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %192, i32 0, i32 49, !dbg !12377
  %call392 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock391), !dbg !12377
  %193 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_rkb393 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %193, i32 0, i32 20, !dbg !12377
  %194 = load ptr, ptr %rkbuf_rkb393, align 8, !dbg !12377, !tbaa !5424
  %rkb_rk394 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %194, i32 0, i32 32, !dbg !12377
  %195 = load ptr, ptr %rkb_rk394, align 8, !dbg !12377, !tbaa !4139
  %rk_conf395 = getelementptr inbounds %struct.rd_kafka_s, ptr %195, i32 0, i32 18, !dbg !12377
  %196 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_rkb396 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %196, i32 0, i32 20, !dbg !12377
  %197 = load ptr, ptr %rkbuf_rkb396, align 8, !dbg !12377, !tbaa !5424
  %rkb_rk397 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %197, i32 0, i32 32, !dbg !12377
  %198 = load ptr, ptr %rkb_rk397, align 8, !dbg !12377, !tbaa !4139
  %arraydecay398 = getelementptr inbounds [256 x i8], ptr %_logname383, i64 0, i64 0, !dbg !12377
  %199 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_reqhdr399 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %199, i32 0, i32 10, !dbg !12377
  %ApiKey400 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr399, i32 0, i32 1, !dbg !12377
  %200 = load i16, ptr %ApiKey400, align 4, !dbg !12377, !tbaa !5392
  %call401 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %200), !dbg !12377
  %201 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_reqhdr402 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %201, i32 0, i32 10, !dbg !12377
  %ApiVersion403 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr402, i32 0, i32 2, !dbg !12377
  %202 = load i16, ptr %ApiVersion403, align 2, !dbg !12377, !tbaa !5272
  %conv404 = sext i16 %202 to i32, !dbg !12377
  %203 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_reader405 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %203, i32 0, i32 6, !dbg !12377
  %call406 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader405), !dbg !12377
  %204 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_reader407 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %204, i32 0, i32 6, !dbg !12377
  %end408 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader407, i32 0, i32 4, !dbg !12377
  %205 = load i64, ptr %end408, align 8, !dbg !12377, !tbaa !6731
  %206 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_reader409 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %206, i32 0, i32 6, !dbg !12377
  %start410 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader409, i32 0, i32 3, !dbg !12377
  %207 = load i64, ptr %start410, align 8, !dbg !12377, !tbaa !6739
  %sub411 = sub i64 %205, %207, !dbg !12377
  %208 = load i64, ptr %__len0356, align 8, !dbg !12377, !tbaa !4039
  %209 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_reader412 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %209, i32 0, i32 6, !dbg !12377
  %end413 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader412, i32 0, i32 4, !dbg !12377
  %210 = load i64, ptr %end413, align 8, !dbg !12377, !tbaa !6731
  %211 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_reader414 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %211, i32 0, i32 6, !dbg !12377
  %call415 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader414), !dbg !12377
  %sub416 = sub i64 %210, %call415, !dbg !12377
  %212 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_uflow_mitigation417 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %212, i32 0, i32 36, !dbg !12377
  %213 = load ptr, ptr %rkbuf_uflow_mitigation417, align 8, !dbg !12377, !tbaa !6740
  %tobool418 = icmp ne ptr %213, null, !dbg !12377
  br i1 %tobool418, label %cond.true419, label %cond.false421, !dbg !12377

cond.true419:                                     ; preds = %do.body382
  %214 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12377, !tbaa !3910
  %rkbuf_uflow_mitigation420 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %214, i32 0, i32 36, !dbg !12377
  %215 = load ptr, ptr %rkbuf_uflow_mitigation420, align 8, !dbg !12377, !tbaa !6740
  br label %cond.end422, !dbg !12377

cond.false421:                                    ; preds = %do.body382
  br label %cond.end422, !dbg !12377

cond.end422:                                      ; preds = %cond.false421, %cond.true419
  %cond423 = phi ptr [ %215, %cond.true419 ], [ @.str.35, %cond.false421 ], !dbg !12377
  %arraydecay424 = getelementptr inbounds [256 x i8], ptr %__tmpstr372, i64 0, i64 0, !dbg !12377
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf395, ptr noundef %198, ptr noundef %arraydecay398, i32 noundef 3, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call401, i32 noundef %conv404, i64 noundef %call406, i64 noundef %sub411, ptr noundef @__FUNCTION__.rd_kafka_broker_handle_SaslHandshake, i32 noundef 2308, i64 noundef %208, i64 noundef %sub416, ptr noundef %cond423, ptr noundef %arraydecay424), !dbg !12377
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname383) #16, !dbg !12374
  br label %do.cond425, !dbg !12377

do.cond425:                                       ; preds = %cond.end422
  br label %do.end426, !dbg !12377

do.end426:                                        ; preds = %do.cond425
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr372) #16, !dbg !12372
  br label %if.end427, !dbg !12374

if.end427:                                        ; preds = %do.end426, %do.body368
  %216 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12373, !tbaa !3910
  %rkbuf_err428 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %216, i32 0, i32 34, !dbg !12373
  store i32 -155, ptr %rkbuf_err428, align 8, !dbg !12373, !tbaa !6741
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup432, !dbg !12373

do.cond429:                                       ; No predecessors!
  br label %do.end430, !dbg !12373

do.end430:                                        ; preds = %do.cond429
  br label %if.end431, !dbg !12371

if.end431:                                        ; preds = %do.end430, %do.body355
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12368
  br label %cleanup432, !dbg !12368

cleanup432:                                       ; preds = %if.end427, %if.end431
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len0356) #16, !dbg !12368
  %cleanup.dest433 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest433, label %cleanup438 [
    i32 0, label %cleanup.cont434
  ]

cleanup.cont434:                                  ; preds = %cleanup432
  br label %do.cond435, !dbg !12369

do.cond435:                                       ; preds = %cleanup.cont434
  br label %do.end436, !dbg !12369

do.end436:                                        ; preds = %do.cond435
  br label %if.end437, !dbg !12369

if.end437:                                        ; preds = %do.end436, %do.body349
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12366
  br label %cleanup438, !dbg !12366

cleanup438:                                       ; preds = %if.end437, %cleanup432
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len2350) #16, !dbg !12366
  %cleanup.dest439 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest439, label %cleanup446 [
    i32 0, label %cleanup.cont440
  ]

cleanup.cont440:                                  ; preds = %cleanup438
  br label %do.cond441, !dbg !12367

do.cond441:                                       ; preds = %cleanup.cont440
  br label %do.end442, !dbg !12367

do.end442:                                        ; preds = %do.cond441
  %217 = load i16, ptr %_v348, align 2, !dbg !12366, !tbaa !3915
  %call443 = call zeroext i16 @__bswap_16(i16 noundef zeroext %217), !dbg !12366
  %conv444 = sext i16 %call443 to i32, !dbg !12366
  %len445 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12366
  store i32 %conv444, ptr %len445, align 8, !dbg !12366, !tbaa !8677
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12365
  br label %cleanup446, !dbg !12365

cleanup446:                                       ; preds = %do.end442, %cleanup438
  call void @llvm.lifetime.end.p0(i64 2, ptr %_v348) #16, !dbg !12365
  %cleanup.dest447 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest447, label %cleanup570 [
    i32 0, label %cleanup.cont448
  ]

cleanup.cont448:                                  ; preds = %cleanup446
  br label %do.cond449, !dbg !12366

do.cond449:                                       ; preds = %cleanup.cont448
  br label %do.end450, !dbg !12366

do.end450:                                        ; preds = %do.cond449
  %len451 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12365
  %218 = load i32, ptr %len451, align 8, !dbg !12365, !tbaa !8677
  %cmp452 = icmp eq i32 %218, -1, !dbg !12365
  br i1 %cmp452, label %cond.true454, label %cond.false455, !dbg !12365

cond.true454:                                     ; preds = %do.end450
  br label %cond.end457, !dbg !12365

cond.false455:                                    ; preds = %do.end450
  %len456 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12365
  %219 = load i32, ptr %len456, align 8, !dbg !12365, !tbaa !8677
  br label %cond.end457, !dbg !12365

cond.end457:                                      ; preds = %cond.false455, %cond.true454
  %cond458 = phi i32 [ 0, %cond.true454 ], [ %219, %cond.false455 ], !dbg !12365
  store i32 %cond458, ptr %_klen, align 4, !dbg !12365, !tbaa !3959
  br label %if.end459

if.end459:                                        ; preds = %cond.end457, %cleanup.cont346
  %len460 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12378
  %220 = load i32, ptr %len460, align 8, !dbg !12378, !tbaa !8677
  %cmp461 = icmp eq i32 %220, -1, !dbg !12378
  br i1 %cmp461, label %if.then463, label %if.else464, !dbg !12354

if.then463:                                       ; preds = %if.end459
  %str = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 1, !dbg !12378
  store ptr null, ptr %str, align 8, !dbg !12378, !tbaa !8679
  br label %if.end569, !dbg !12378

if.else464:                                       ; preds = %if.end459
  %len465 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12379
  %221 = load i32, ptr %len465, align 8, !dbg !12379, !tbaa !8677
  %cmp466 = icmp eq i32 %221, -1, !dbg !12379
  br i1 %cmp466, label %cond.true468, label %cond.false469, !dbg !12379

cond.true468:                                     ; preds = %if.else464
  br label %cond.end471, !dbg !12379

cond.false469:                                    ; preds = %if.else464
  %len470 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12379
  %222 = load i32, ptr %len470, align 8, !dbg !12379, !tbaa !8677
  br label %cond.end471, !dbg !12379

cond.end471:                                      ; preds = %cond.false469, %cond.true468
  %cond472 = phi i32 [ 0, %cond.true468 ], [ %222, %cond.false469 ], !dbg !12379
  %cmp473 = icmp eq i32 %cond472, 0, !dbg !12379
  br i1 %cmp473, label %if.then475, label %if.else477, !dbg !12378

if.then475:                                       ; preds = %cond.end471
  %str476 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 1, !dbg !12379
  store ptr @.str.85, ptr %str476, align 8, !dbg !12379, !tbaa !8679
  br label %if.end568, !dbg !12379

if.else477:                                       ; preds = %cond.end471
  %223 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12380, !tbaa !3910
  %rkbuf_reader478 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %223, i32 0, i32 6, !dbg !12380
  %224 = load i32, ptr %_klen, align 4, !dbg !12380, !tbaa !3959
  %conv479 = sext i32 %224 to i64, !dbg !12380
  %call480 = call ptr @rd_slice_ensure_contig(ptr noundef %rkbuf_reader478, i64 noundef %conv479), !dbg !12380
  %str481 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 1, !dbg !12380
  store ptr %call480, ptr %str481, align 8, !dbg !12380, !tbaa !8679
  %tobool482 = icmp ne ptr %call480, null, !dbg !12380
  br i1 %tobool482, label %if.end567, label %if.then483, !dbg !12379

if.then483:                                       ; preds = %if.else477
  br label %do.body484, !dbg !12380

do.body484:                                       ; preds = %if.then483
  call void @llvm.lifetime.start.p0(i64 8, ptr %__len0485) #16, !dbg !12381
  tail call void @llvm.dbg.declare(metadata ptr %__len0485, metadata !12253, metadata !DIExpression()), !dbg !12381
  %225 = load i32, ptr %_klen, align 4, !dbg !12381, !tbaa !3959
  %conv486 = sext i32 %225 to i64, !dbg !12381
  store i64 %conv486, ptr %__len0485, align 8, !dbg !12381, !tbaa !4039
  %226 = load i64, ptr %__len0485, align 8, !dbg !12382, !tbaa !4039
  %227 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12382, !tbaa !3910
  %rkbuf_reader487 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %227, i32 0, i32 6, !dbg !12382
  %end488 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader487, i32 0, i32 4, !dbg !12382
  %228 = load i64, ptr %end488, align 8, !dbg !12382, !tbaa !6731
  %229 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12382, !tbaa !3910
  %rkbuf_reader489 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %229, i32 0, i32 6, !dbg !12382
  %call490 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader489), !dbg !12382
  %sub491 = sub i64 %228, %call490, !dbg !12382
  %cmp492 = icmp ugt i64 %226, %sub491, !dbg !12382
  %conv493 = zext i1 %cmp492 to i32, !dbg !12382
  %conv494 = sext i32 %conv493 to i64, !dbg !12382
  %expval495 = call i64 @llvm.expect.i64(i64 %conv494, i64 0), !dbg !12382
  %tobool496 = icmp ne i64 %expval495, 0, !dbg !12382
  br i1 %tobool496, label %if.then497, label %if.end561, !dbg !12381

if.then497:                                       ; preds = %do.body484
  br label %do.body498, !dbg !12383

do.body498:                                       ; preds = %if.then497
  %230 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12384, !tbaa !3910
  %rkbuf_rkb499 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %230, i32 0, i32 20, !dbg !12384
  %231 = load ptr, ptr %rkbuf_rkb499, align 8, !dbg !12384, !tbaa !5424
  %tobool500 = icmp ne ptr %231, null, !dbg !12384
  br i1 %tobool500, label %if.then501, label %if.end557, !dbg !12385

if.then501:                                       ; preds = %do.body498
  call void @llvm.lifetime.start.p0(i64 256, ptr %__tmpstr502) #16, !dbg !12386
  tail call void @llvm.dbg.declare(metadata ptr %__tmpstr502, metadata !12258, metadata !DIExpression()), !dbg !12386
  %arraydecay503 = getelementptr inbounds [256 x i8], ptr %__tmpstr502, i64 0, i64 0, !dbg !12386
  %call504 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay503, i64 noundef 256, ptr noundef @.str.32) #16, !dbg !12386
  %arraydecay505 = getelementptr inbounds [256 x i8], ptr %__tmpstr502, i64 0, i64 0, !dbg !12387
  %call506 = call i64 @strlen(ptr noundef %arraydecay505) #19, !dbg !12387
  %cmp507 = icmp eq i64 %call506, 2, !dbg !12387
  br i1 %cmp507, label %if.then509, label %if.end511, !dbg !12386

if.then509:                                       ; preds = %if.then501
  %arrayidx510 = getelementptr inbounds [256 x i8], ptr %__tmpstr502, i64 0, i64 0, !dbg !12387
  store i8 0, ptr %arrayidx510, align 16, !dbg !12387, !tbaa !4126
  br label %if.end511, !dbg !12387

if.end511:                                        ; preds = %if.then509, %if.then501
  br label %do.body512, !dbg !12386

do.body512:                                       ; preds = %if.end511
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname513) #16, !dbg !12389
  tail call void @llvm.dbg.declare(metadata ptr %_logname513, metadata !12264, metadata !DIExpression()), !dbg !12389
  %232 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_rkb514 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %232, i32 0, i32 20, !dbg !12389
  %233 = load ptr, ptr %rkbuf_rkb514, align 8, !dbg !12389, !tbaa !5424
  %rkb_logname_lock515 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %233, i32 0, i32 49, !dbg !12389
  %call516 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock515), !dbg !12389
  %arraydecay517 = getelementptr inbounds [256 x i8], ptr %_logname513, i64 0, i64 0, !dbg !12389
  %234 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_rkb518 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %234, i32 0, i32 20, !dbg !12389
  %235 = load ptr, ptr %rkbuf_rkb518, align 8, !dbg !12389, !tbaa !5424
  %rkb_logname519 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %235, i32 0, i32 48, !dbg !12389
  %236 = load ptr, ptr %rkb_logname519, align 8, !dbg !12389, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay517, ptr noundef %236, i64 noundef 256), !dbg !12389
  %237 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_rkb520 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %237, i32 0, i32 20, !dbg !12389
  %238 = load ptr, ptr %rkbuf_rkb520, align 8, !dbg !12389, !tbaa !5424
  %rkb_logname_lock521 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %238, i32 0, i32 49, !dbg !12389
  %call522 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock521), !dbg !12389
  %239 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_rkb523 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %239, i32 0, i32 20, !dbg !12389
  %240 = load ptr, ptr %rkbuf_rkb523, align 8, !dbg !12389, !tbaa !5424
  %rkb_rk524 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %240, i32 0, i32 32, !dbg !12389
  %241 = load ptr, ptr %rkb_rk524, align 8, !dbg !12389, !tbaa !4139
  %rk_conf525 = getelementptr inbounds %struct.rd_kafka_s, ptr %241, i32 0, i32 18, !dbg !12389
  %242 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_rkb526 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %242, i32 0, i32 20, !dbg !12389
  %243 = load ptr, ptr %rkbuf_rkb526, align 8, !dbg !12389, !tbaa !5424
  %rkb_rk527 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %243, i32 0, i32 32, !dbg !12389
  %244 = load ptr, ptr %rkb_rk527, align 8, !dbg !12389, !tbaa !4139
  %arraydecay528 = getelementptr inbounds [256 x i8], ptr %_logname513, i64 0, i64 0, !dbg !12389
  %245 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_reqhdr529 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %245, i32 0, i32 10, !dbg !12389
  %ApiKey530 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr529, i32 0, i32 1, !dbg !12389
  %246 = load i16, ptr %ApiKey530, align 4, !dbg !12389, !tbaa !5392
  %call531 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %246), !dbg !12389
  %247 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_reqhdr532 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %247, i32 0, i32 10, !dbg !12389
  %ApiVersion533 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr532, i32 0, i32 2, !dbg !12389
  %248 = load i16, ptr %ApiVersion533, align 2, !dbg !12389, !tbaa !5272
  %conv534 = sext i16 %248 to i32, !dbg !12389
  %249 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_reader535 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %249, i32 0, i32 6, !dbg !12389
  %call536 = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader535), !dbg !12389
  %250 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_reader537 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %250, i32 0, i32 6, !dbg !12389
  %end538 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader537, i32 0, i32 4, !dbg !12389
  %251 = load i64, ptr %end538, align 8, !dbg !12389, !tbaa !6731
  %252 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_reader539 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %252, i32 0, i32 6, !dbg !12389
  %start540 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader539, i32 0, i32 3, !dbg !12389
  %253 = load i64, ptr %start540, align 8, !dbg !12389, !tbaa !6739
  %sub541 = sub i64 %251, %253, !dbg !12389
  %254 = load i64, ptr %__len0485, align 8, !dbg !12389, !tbaa !4039
  %255 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_reader542 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %255, i32 0, i32 6, !dbg !12389
  %end543 = getelementptr inbounds %struct.rd_slice_s, ptr %rkbuf_reader542, i32 0, i32 4, !dbg !12389
  %256 = load i64, ptr %end543, align 8, !dbg !12389, !tbaa !6731
  %257 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_reader544 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %257, i32 0, i32 6, !dbg !12389
  %call545 = call i64 @rd_slice_abs_offset(ptr noundef %rkbuf_reader544), !dbg !12389
  %sub546 = sub i64 %256, %call545, !dbg !12389
  %258 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_uflow_mitigation547 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %258, i32 0, i32 36, !dbg !12389
  %259 = load ptr, ptr %rkbuf_uflow_mitigation547, align 8, !dbg !12389, !tbaa !6740
  %tobool548 = icmp ne ptr %259, null, !dbg !12389
  br i1 %tobool548, label %cond.true549, label %cond.false551, !dbg !12389

cond.true549:                                     ; preds = %do.body512
  %260 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12389, !tbaa !3910
  %rkbuf_uflow_mitigation550 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %260, i32 0, i32 36, !dbg !12389
  %261 = load ptr, ptr %rkbuf_uflow_mitigation550, align 8, !dbg !12389, !tbaa !6740
  br label %cond.end552, !dbg !12389

cond.false551:                                    ; preds = %do.body512
  br label %cond.end552, !dbg !12389

cond.end552:                                      ; preds = %cond.false551, %cond.true549
  %cond553 = phi ptr [ %261, %cond.true549 ], [ @.str.35, %cond.false551 ], !dbg !12389
  %arraydecay554 = getelementptr inbounds [256 x i8], ptr %__tmpstr502, i64 0, i64 0, !dbg !12389
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf525, ptr noundef %244, ptr noundef %arraydecay528, i32 noundef 3, i32 noundef 0, ptr noundef @.str.33, ptr noundef @.str.34, ptr noundef %call531, i32 noundef %conv534, i64 noundef %call536, i64 noundef %sub541, ptr noundef @__FUNCTION__.rd_kafka_broker_handle_SaslHandshake, i32 noundef 2308, i64 noundef %254, i64 noundef %sub546, ptr noundef %cond553, ptr noundef %arraydecay554), !dbg !12389
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname513) #16, !dbg !12386
  br label %do.cond555, !dbg !12389

do.cond555:                                       ; preds = %cond.end552
  br label %do.end556, !dbg !12389

do.end556:                                        ; preds = %do.cond555
  call void @llvm.lifetime.end.p0(i64 256, ptr %__tmpstr502) #16, !dbg !12384
  br label %if.end557, !dbg !12386

if.end557:                                        ; preds = %do.end556, %do.body498
  %262 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12385, !tbaa !3910
  %rkbuf_err558 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %262, i32 0, i32 34, !dbg !12385
  store i32 -155, ptr %rkbuf_err558, align 8, !dbg !12385, !tbaa !6741
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup562, !dbg !12385

do.cond559:                                       ; No predecessors!
  br label %do.end560, !dbg !12385

do.end560:                                        ; preds = %do.cond559
  br label %if.end561, !dbg !12383

if.end561:                                        ; preds = %do.end560, %do.body484
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12380
  br label %cleanup562, !dbg !12380

cleanup562:                                       ; preds = %if.end557, %if.end561
  call void @llvm.lifetime.end.p0(i64 8, ptr %__len0485) #16, !dbg !12380
  %cleanup.dest563 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest563, label %cleanup570 [
    i32 0, label %cleanup.cont564
  ]

cleanup.cont564:                                  ; preds = %cleanup562
  br label %do.cond565, !dbg !12381

do.cond565:                                       ; preds = %cleanup.cont564
  br label %do.end566, !dbg !12381

do.end566:                                        ; preds = %do.cond565
  br label %if.end567, !dbg !12381

if.end567:                                        ; preds = %do.end566, %if.else477
  br label %if.end568

if.end568:                                        ; preds = %if.end567, %if.then475
  br label %if.end569

if.end569:                                        ; preds = %if.end568, %if.then463
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12353
  br label %cleanup570, !dbg !12353

cleanup570:                                       ; preds = %if.end569, %cleanup562, %cleanup446, %cleanup344
  call void @llvm.lifetime.end.p0(i64 4, ptr %_klen) #16, !dbg !12353
  %cleanup.dest571 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest571, label %cleanup594 [
    i32 0, label %cleanup.cont572
  ]

cleanup.cont572:                                  ; preds = %cleanup570
  br label %do.cond573, !dbg !12354

do.cond573:                                       ; preds = %cleanup.cont572
  br label %do.end574, !dbg !12354

do.end574:                                        ; preds = %do.cond573
  %263 = load ptr, ptr %mechs, align 8, !dbg !12390, !tbaa !3910
  %264 = load i64, ptr %mof, align 8, !dbg !12390, !tbaa !4039
  %add.ptr = getelementptr inbounds i8, ptr %263, i64 %264, !dbg !12390
  %265 = load i64, ptr %msz, align 8, !dbg !12390, !tbaa !4039
  %266 = load i64, ptr %mof, align 8, !dbg !12390, !tbaa !4039
  %sub575 = sub i64 %265, %266, !dbg !12390
  %267 = load i32, ptr %i, align 4, !dbg !12390, !tbaa !3959
  %tobool576 = icmp ne i32 %267, 0, !dbg !12390
  %268 = zext i1 %tobool576 to i64, !dbg !12390
  %cond577 = select i1 %tobool576, ptr @.str.215, ptr @.str.85, !dbg !12390
  %len578 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12390
  %269 = load i32, ptr %len578, align 8, !dbg !12390, !tbaa !8677
  %cmp579 = icmp eq i32 %269, -1, !dbg !12390
  br i1 %cmp579, label %cond.true581, label %cond.false582, !dbg !12390

cond.true581:                                     ; preds = %do.end574
  br label %cond.end584, !dbg !12390

cond.false582:                                    ; preds = %do.end574
  %len583 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 0, !dbg !12390
  %270 = load i32, ptr %len583, align 8, !dbg !12390, !tbaa !8677
  br label %cond.end584, !dbg !12390

cond.end584:                                      ; preds = %cond.false582, %cond.true581
  %cond585 = phi i32 [ 0, %cond.true581 ], [ %270, %cond.false582 ], !dbg !12390
  %str586 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %mech, i32 0, i32 1, !dbg !12390
  %271 = load ptr, ptr %str586, align 8, !dbg !12390, !tbaa !8679
  %call587 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %add.ptr, i64 noundef %sub575, ptr noundef @.str.214, ptr noundef %cond577, i32 noundef %cond585, ptr noundef %271) #16, !dbg !12390
  %conv588 = sext i32 %call587 to i64, !dbg !12390
  %272 = load i64, ptr %mof, align 8, !dbg !12391, !tbaa !4039
  %add589 = add i64 %272, %conv588, !dbg !12391
  store i64 %add589, ptr %mof, align 8, !dbg !12391, !tbaa !4039
  %273 = load i64, ptr %mof, align 8, !dbg !12392, !tbaa !4039
  %274 = load i64, ptr %msz, align 8, !dbg !12394, !tbaa !4039
  %cmp590 = icmp uge i64 %273, %274, !dbg !12395
  br i1 %cmp590, label %if.then592, label %if.end593, !dbg !12396

if.then592:                                       ; preds = %cond.end584
  store i32 30, ptr %cleanup.dest.slot, align 4
  br label %cleanup594, !dbg !12397

if.end593:                                        ; preds = %cond.end584
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12398
  br label %cleanup594, !dbg !12398

cleanup594:                                       ; preds = %if.end593, %if.then592, %cleanup570
  call void @llvm.lifetime.end.p0(i64 16, ptr %mech) #16, !dbg !12398
  %cleanup.dest595 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest595, label %cleanup631 [
    i32 0, label %cleanup.cont596
    i32 30, label %for.end
    i32 13, label %err_parse
  ]

cleanup.cont596:                                  ; preds = %cleanup594
  br label %for.inc, !dbg !12399

for.inc:                                          ; preds = %cleanup.cont596
  %275 = load i32, ptr %i, align 4, !dbg !12400, !tbaa !3959
  %inc = add nsw i32 %275, 1, !dbg !12400
  store i32 %inc, ptr %i, align 4, !dbg !12400, !tbaa !3959
  br label %for.cond, !dbg !12401, !llvm.loop !12402

for.end:                                          ; preds = %cleanup594, %for.cond
  br label %do.body597, !dbg !12404

do.body597:                                       ; preds = %for.end
  %276 = load ptr, ptr %rkb.addr, align 8, !dbg !12405, !tbaa !3910
  %rkb_rk598 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %276, i32 0, i32 32, !dbg !12405
  %277 = load ptr, ptr %rkb_rk598, align 8, !dbg !12405, !tbaa !4139
  %rk_conf599 = getelementptr inbounds %struct.rd_kafka_s, ptr %277, i32 0, i32 18, !dbg !12405
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf599, i32 0, i32 13, !dbg !12405
  %278 = load i32, ptr %debug, align 8, !dbg !12405, !tbaa !4140
  %and600 = and i32 %278, 642, !dbg !12405
  %conv601 = sext i32 %and600 to i64, !dbg !12405
  %expval602 = call i64 @llvm.expect.i64(i64 %conv601, i64 0), !dbg !12405
  %tobool603 = icmp ne i64 %expval602, 0, !dbg !12405
  br i1 %tobool603, label %if.then604, label %if.end619, !dbg !12406

if.then604:                                       ; preds = %do.body597
  br label %do.body605, !dbg !12407

do.body605:                                       ; preds = %if.then604
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname606) #16, !dbg !12408
  tail call void @llvm.dbg.declare(metadata ptr %_logname606, metadata !12266, metadata !DIExpression()), !dbg !12408
  %279 = load ptr, ptr %rkb.addr, align 8, !dbg !12408, !tbaa !3910
  %rkb_logname_lock607 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %279, i32 0, i32 49, !dbg !12408
  %call608 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock607), !dbg !12408
  %arraydecay609 = getelementptr inbounds [256 x i8], ptr %_logname606, i64 0, i64 0, !dbg !12408
  %280 = load ptr, ptr %rkb.addr, align 8, !dbg !12408, !tbaa !3910
  %rkb_logname610 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %280, i32 0, i32 48, !dbg !12408
  %281 = load ptr, ptr %rkb_logname610, align 8, !dbg !12408, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay609, ptr noundef %281, i64 noundef 256), !dbg !12408
  %282 = load ptr, ptr %rkb.addr, align 8, !dbg !12408, !tbaa !3910
  %rkb_logname_lock611 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %282, i32 0, i32 49, !dbg !12408
  %call612 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock611), !dbg !12408
  %283 = load ptr, ptr %rkb.addr, align 8, !dbg !12408, !tbaa !3910
  %rkb_rk613 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %283, i32 0, i32 32, !dbg !12408
  %284 = load ptr, ptr %rkb_rk613, align 8, !dbg !12408, !tbaa !4139
  %rk_conf614 = getelementptr inbounds %struct.rd_kafka_s, ptr %284, i32 0, i32 18, !dbg !12408
  %285 = load ptr, ptr %rkb.addr, align 8, !dbg !12408, !tbaa !3910
  %rkb_rk615 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %285, i32 0, i32 32, !dbg !12408
  %286 = load ptr, ptr %rkb_rk615, align 8, !dbg !12408, !tbaa !4139
  %arraydecay616 = getelementptr inbounds [256 x i8], ptr %_logname606, i64 0, i64 0, !dbg !12408
  %287 = load ptr, ptr %mechs, align 8, !dbg !12408, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf614, ptr noundef %286, ptr noundef %arraydecay616, i32 noundef 7, i32 noundef 642, ptr noundef @.str.216, ptr noundef @.str.217, ptr noundef %287), !dbg !12408
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname606) #16, !dbg !12407
  br label %do.cond617, !dbg !12408

do.cond617:                                       ; preds = %do.body605
  br label %do.end618, !dbg !12408

do.end618:                                        ; preds = %do.cond617
  br label %if.end619, !dbg !12407

if.end619:                                        ; preds = %do.end618, %do.body597
  br label %do.cond620, !dbg !12406

do.cond620:                                       ; preds = %if.end619
  br label %do.end621, !dbg !12406

do.end621:                                        ; preds = %do.cond620
  %288 = load i16, ptr %ErrorCode, align 2, !dbg !12409, !tbaa !3915
  %tobool622 = icmp ne i16 %288, 0, !dbg !12409
  br i1 %tobool622, label %if.then623, label %if.end625, !dbg !12411

if.then623:                                       ; preds = %do.end621
  %289 = load i16, ptr %ErrorCode, align 2, !dbg !12412, !tbaa !3915
  %conv624 = sext i16 %289 to i32, !dbg !12412
  store i32 %conv624, ptr %err.addr, align 4, !dbg !12414, !tbaa !4126
  br label %err627, !dbg !12415

if.end625:                                        ; preds = %do.end621
  %290 = load ptr, ptr %rkb.addr, align 8, !dbg !12416, !tbaa !3910
  call void @rd_kafka_broker_connect_auth(ptr noundef %290), !dbg !12417
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup631, !dbg !12418

err_parse:                                        ; preds = %cleanup594, %cleanup170, %cleanup66, %if.end238
  tail call void @llvm.dbg.label(metadata !12271), !dbg !12419
  %291 = load ptr, ptr %rkbuf.addr, align 8, !dbg !12420, !tbaa !3910
  %rkbuf_err626 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %291, i32 0, i32 34, !dbg !12421
  %292 = load i32, ptr %rkbuf_err626, align 8, !dbg !12421, !tbaa !6741
  store i32 %292, ptr %err.addr, align 4, !dbg !12422, !tbaa !4126
  br label %err627, !dbg !12423

err627:                                           ; preds = %err_parse, %if.then623, %if.then1
  tail call void @llvm.dbg.label(metadata !12272), !dbg !12424
  %293 = load ptr, ptr %rkb.addr, align 8, !dbg !12425, !tbaa !3910
  %294 = load ptr, ptr %rkb.addr, align 8, !dbg !12426, !tbaa !3910
  %rkb_rk628 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %294, i32 0, i32 32, !dbg !12427
  %295 = load ptr, ptr %rkb_rk628, align 8, !dbg !12427, !tbaa !4139
  %rk_conf629 = getelementptr inbounds %struct.rd_kafka_s, ptr %295, i32 0, i32 18, !dbg !12428
  %sasl = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf629, i32 0, i32 41, !dbg !12429
  %mechanisms = getelementptr inbounds %struct.anon.15, ptr %sasl, i32 0, i32 2, !dbg !12430
  %296 = load ptr, ptr %mechanisms, align 8, !dbg !12430, !tbaa !7764
  %297 = load i32, ptr %err.addr, align 4, !dbg !12431, !tbaa !4126
  %call630 = call ptr @rd_kafka_err2str(i32 noundef %297), !dbg !12432
  %298 = load ptr, ptr %mechs, align 8, !dbg !12433, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %293, i32 noundef 3, i32 noundef -169, ptr noundef @.str.218, ptr noundef %296, ptr noundef %call630, ptr noundef %298), !dbg !12434
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12435
  br label %cleanup631, !dbg !12435

cleanup631:                                       ; preds = %err627, %if.end625, %cleanup594, %cleanup170, %cleanup66, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mof) #16, !dbg !12435
  call void @llvm.lifetime.end.p0(i64 8, ptr %msz) #16, !dbg !12435
  call void @llvm.lifetime.end.p0(i64 8, ptr %mechs) #16, !dbg !12435
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #16, !dbg !12435
  call void @llvm.lifetime.end.p0(i64 2, ptr %ErrorCode) #16, !dbg !12435
  call void @llvm.lifetime.end.p0(i64 4, ptr %MechCnt) #16, !dbg !12435
  call void @llvm.lifetime.end.p0(i64 4, ptr %log_decode_errors) #16, !dbg !12435
  %cleanup.dest638 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest638, label %unreachable [
    i32 0, label %cleanup.cont639
    i32 1, label %cleanup.cont639
  ]

cleanup.cont639:                                  ; preds = %cleanup631, %cleanup631
  ret void, !dbg !12435

unreachable:                                      ; preds = %cleanup631
  unreachable
}

declare !dbg !12436 i32 @rd_kafka_sasl_client_new(ptr noundef, ptr noundef, i64 noundef) #3

declare !dbg !12439 ptr @rd_slice_ensure_contig(ptr noundef, i64 noundef) #3

declare !dbg !12442 i64 @rd_kafka_transport_send(ptr noundef, ptr noundef, ptr noundef, i64 noundef) #3

declare !dbg !12445 i32 @rd_hdr_histogram_record(ptr noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_kafka_rkt_get_lw(ptr noundef %rkt) #4 !dbg !12448 {
entry:
  %retval = alloca ptr, align 8
  %rkt.addr = alloca ptr, align 8
  store ptr %rkt, ptr %rkt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkt.addr, metadata !12452, metadata !DIExpression()), !dbg !12453
  %0 = load ptr, ptr %rkt.addr, align 8, !dbg !12454, !tbaa !3910
  %call = call zeroext i8 @rd_kafka_rkt_is_lw(ptr noundef %0), !dbg !12456
  %tobool = icmp ne i8 %call, 0, !dbg !12456
  br i1 %tobool, label %if.then, label %if.end, !dbg !12457

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkt.addr, align 8, !dbg !12458, !tbaa !3910
  store ptr %1, ptr %retval, align 8, !dbg !12459
  br label %return, !dbg !12459

if.end:                                           ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !12460
  br label %return, !dbg !12460

return:                                           ; preds = %if.end, %if.then
  %2 = load ptr, ptr %retval, align 8, !dbg !12461
  ret ptr %2, !dbg !12461
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_lwtopic_keep(ptr noundef %lrkt) #4 !dbg !12462 {
entry:
  %lrkt.addr = alloca ptr, align 8
  store ptr %lrkt, ptr %lrkt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %lrkt.addr, metadata !12466, metadata !DIExpression()), !dbg !12467
  %0 = load ptr, ptr %lrkt.addr, align 8, !dbg !12468, !tbaa !3910
  %lrkt_refcnt = getelementptr inbounds %struct.rd_kafka_lwtopic_s, ptr %0, i32 0, i32 2, !dbg !12468
  %call = call i32 @rd_atomic32_add(ptr noundef %lrkt_refcnt, i32 noundef 1), !dbg !12468
  ret void, !dbg !12469
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @rd_kafka_rkt_is_lw(ptr noundef %app_rkt) #4 !dbg !12470 {
entry:
  %app_rkt.addr = alloca ptr, align 8
  %lrkt = alloca ptr, align 8
  store ptr %app_rkt, ptr %app_rkt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %app_rkt.addr, metadata !12474, metadata !DIExpression()), !dbg !12476
  call void @llvm.lifetime.start.p0(i64 8, ptr %lrkt) #16, !dbg !12477
  tail call void @llvm.dbg.declare(metadata ptr %lrkt, metadata !12475, metadata !DIExpression()), !dbg !12478
  %0 = load ptr, ptr %app_rkt.addr, align 8, !dbg !12479, !tbaa !3910
  store ptr %0, ptr %lrkt, align 8, !dbg !12478, !tbaa !3910
  %1 = load ptr, ptr %lrkt, align 8, !dbg !12480, !tbaa !3910
  %lrkt_magic = getelementptr inbounds %struct.rd_kafka_lwtopic_s, ptr %1, i32 0, i32 0, !dbg !12481
  %arraydecay = getelementptr inbounds [4 x i8], ptr %lrkt_magic, i64 0, i64 0, !dbg !12480
  %call = call i32 @memcmp(ptr noundef %arraydecay, ptr noundef @.str.222, i64 noundef 4) #19, !dbg !12482
  %tobool = icmp ne i32 %call, 0, !dbg !12483
  %lnot = xor i1 %tobool, true, !dbg !12483
  %lnot.ext = zext i1 %lnot to i32, !dbg !12483
  %conv = trunc i32 %lnot.ext to i8, !dbg !12483
  call void @llvm.lifetime.end.p0(i64 8, ptr %lrkt) #16, !dbg !12484
  ret i8 %conv, !dbg !12485
}

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !12486 i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) #10

declare !dbg !12489 void @rd_kafka_msg_destroy(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare !dbg !12492 void @free(ptr noundef) #9

declare !dbg !12493 void @rd_hdr_histogram_destroy(ptr noundef) #3

; Function Attrs: nounwind allocsize(0,1)
declare !dbg !12496 noalias ptr @calloc(i64 noundef, i64 noundef) #13

; Function Attrs: nounwind
declare !dbg !12497 noalias ptr @strdup(ptr noundef) #9

declare !dbg !12498 ptr @rd_hdr_histogram_new(i64 noundef, i64 noundef, i32 noundef) #3

; Function Attrs: nounwind
declare !dbg !12501 i32 @pipe(ptr noundef) #9

; Function Attrs: nounwind uwtable
define internal i32 @rd_fd_set_nonblocking(i32 noundef %fd) #0 !dbg !12504 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %fl = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %fd, ptr %fd.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %fd.addr, metadata !12506, metadata !DIExpression()), !dbg !12508
  call void @llvm.lifetime.start.p0(i64 4, ptr %fl) #16, !dbg !12509
  tail call void @llvm.dbg.declare(metadata ptr %fl, metadata !12507, metadata !DIExpression()), !dbg !12510
  %0 = load i32, ptr %fd.addr, align 4, !dbg !12511, !tbaa !3959
  %call = call i32 (i32, i32, ...) @fcntl(i32 noundef %0, i32 noundef 3, i32 noundef 0), !dbg !12512
  store i32 %call, ptr %fl, align 4, !dbg !12510, !tbaa !3959
  %1 = load i32, ptr %fl, align 4, !dbg !12513, !tbaa !3959
  %cmp = icmp eq i32 %1, -1, !dbg !12515
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12516

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, ptr %fd.addr, align 4, !dbg !12517, !tbaa !3959
  %3 = load i32, ptr %fl, align 4, !dbg !12518, !tbaa !3959
  %or = or i32 %3, 2048, !dbg !12519
  %call1 = call i32 (i32, i32, ...) @fcntl(i32 noundef %2, i32 noundef 4, i32 noundef %or), !dbg !12520
  %cmp2 = icmp eq i32 %call1, -1, !dbg !12521
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12522

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call ptr @__errno_location() #20, !dbg !12523
  %4 = load i32, ptr %call3, align 4, !dbg !12523, !tbaa !3959
  store i32 %4, ptr %retval, align 4, !dbg !12524
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12524

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, ptr %retval, align 4, !dbg !12525
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12525

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %fl) #16, !dbg !12526
  %5 = load i32, ptr %retval, align 4, !dbg !12526
  ret i32 %5, !dbg !12526
}

declare !dbg !12527 void @rd_kafka_set_thread_name(ptr noundef, ...) #3

declare !dbg !12530 void @rd_kafka_set_thread_sysname(ptr noundef, ...) #3

declare !dbg !12531 void @rd_kafka_interceptors_on_thread_start(ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_broker_needs_connection(ptr noundef %rkb) #4 !dbg !12535 {
entry:
  %rkb.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12537, metadata !DIExpression()), !dbg !12538
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12539, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 19, !dbg !12540
  %1 = load i32, ptr %rkb_state, align 4, !dbg !12540, !tbaa !4130
  %cmp = icmp eq i32 %1, 0, !dbg !12541
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12542

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !12543, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !12543
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !12543, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 23, !dbg !12543
  %call = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !12543
  %and = and i32 %call, 1, !dbg !12543
  %tobool = icmp ne i32 %and, 0, !dbg !12543
  br i1 %tobool, label %land.end, label %land.lhs.true1, !dbg !12544

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !12545, !tbaa !3910
  %rkb_rk2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 32, !dbg !12546
  %5 = load ptr, ptr %rkb_rk2, align 8, !dbg !12546, !tbaa !4139
  %call3 = call i32 @rd_kafka_fatal_error_code(ptr noundef %5), !dbg !12547
  %tobool4 = icmp ne i32 %call3, 0, !dbg !12547
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !12548

land.rhs:                                         ; preds = %land.lhs.true1
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !12549, !tbaa !3910
  %rkb_rk5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 32, !dbg !12550
  %7 = load ptr, ptr %rkb_rk5, align 8, !dbg !12550, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 18, !dbg !12551
  %sparse_connections = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 32, !dbg !12552
  %8 = load i32, ptr %sparse_connections, align 4, !dbg !12552, !tbaa !5300
  %tobool6 = icmp ne i32 %8, 0, !dbg !12549
  br i1 %tobool6, label %lor.rhs, label %lor.end, !dbg !12553

lor.rhs:                                          ; preds = %land.rhs
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !12554, !tbaa !3910
  %call7 = call zeroext i8 @rd_kafka_broker_needs_persistent_connection(ptr noundef %9), !dbg !12555
  %conv = zext i8 %call7 to i32, !dbg !12555
  %tobool8 = icmp ne i32 %conv, 0, !dbg !12553
  br label %lor.end, !dbg !12553

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.rhs ], [ %tobool8, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true1, %land.lhs.true, %entry
  %11 = phi i1 [ false, %land.lhs.true1 ], [ false, %land.lhs.true ], [ false, %entry ], [ %10, %lor.end ], !dbg !12556
  %land.ext = zext i1 %11 to i32, !dbg !12548
  ret i32 %land.ext, !dbg !12557
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_serve(ptr noundef %rkb, i32 noundef %timeout_ms) #0 !dbg !12558 {
entry:
  %rkb.addr = alloca ptr, align 8
  %timeout_ms.addr = alloca i32, align 4
  %abs_timeout = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12560, metadata !DIExpression()), !dbg !12563
  store i32 %timeout_ms, ptr %timeout_ms.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %timeout_ms.addr, metadata !12561, metadata !DIExpression()), !dbg !12564
  call void @llvm.lifetime.start.p0(i64 8, ptr %abs_timeout) #16, !dbg !12565
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout, metadata !12562, metadata !DIExpression()), !dbg !12566
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12567, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !12567
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !12567, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 23, !dbg !12567
  %call = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !12567
  %and = and i32 %call, 1, !dbg !12567
  %tobool = icmp ne i32 %and, 0, !dbg !12567
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !12567

lor.rhs:                                          ; preds = %entry
  %2 = load i32, ptr %timeout_ms.addr, align 4, !dbg !12567, !tbaa !3959
  %cmp = icmp eq i32 %2, 0, !dbg !12567
  br label %lor.end, !dbg !12567

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32, !dbg !12567
  %conv = sext i32 %lor.ext to i64, !dbg !12567
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12567
  %tobool1 = icmp ne i64 %expval, 0, !dbg !12567
  br i1 %tobool1, label %if.then, label %if.else, !dbg !12569

if.then:                                          ; preds = %lor.end
  store i32 1, ptr %timeout_ms.addr, align 4, !dbg !12570, !tbaa !3959
  br label %if.end5, !dbg !12571

if.else:                                          ; preds = %lor.end
  %4 = load i32, ptr %timeout_ms.addr, align 4, !dbg !12572, !tbaa !3959
  %cmp2 = icmp eq i32 %4, -1, !dbg !12574
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !12575

if.then4:                                         ; preds = %if.else
  store i32 1000, ptr %timeout_ms.addr, align 4, !dbg !12576, !tbaa !3959
  br label %if.end, !dbg !12577

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %5 = load i32, ptr %timeout_ms.addr, align 4, !dbg !12578, !tbaa !3959
  %call6 = call i64 @rd_timeout_init(i32 noundef %5), !dbg !12579
  store i64 %call6, ptr %abs_timeout, align 8, !dbg !12580, !tbaa !4039
  %6 = load i64, ptr %abs_timeout, align 8, !dbg !12581, !tbaa !4039
  %cmp7 = icmp sgt i64 %6, 0, !dbg !12581
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !12584

if.then9:                                         ; preds = %if.end5
  br label %if.end11, !dbg !12584

if.else10:                                        ; preds = %if.end5
  call void @__assert_fail(ptr noundef @.str.241, ptr noundef @.str.20, i32 noundef 4378, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_serve) #18, !dbg !12581
  unreachable, !dbg !12581

if.end11:                                         ; preds = %if.then9
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !12585, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 35, !dbg !12586
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs, i32 0, i32 1, !dbg !12587
  %call12 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !12588
  %cmp13 = icmp sgt i32 %call12, 0, !dbg !12589
  %conv14 = zext i1 %cmp13 to i32, !dbg !12589
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !12590, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 55, !dbg !12591
  %internal = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 0, !dbg !12592
  store i32 %conv14, ptr %internal, align 4, !dbg !12593, !tbaa !5311
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !12594, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 27, !dbg !12596
  %10 = load i32, ptr %rkb_source, align 8, !dbg !12596, !tbaa !4174
  %cmp15 = icmp eq i32 %10, 2, !dbg !12597
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !12598

if.then17:                                        ; preds = %if.end11
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !12599, !tbaa !3910
  %12 = load i64, ptr %abs_timeout, align 8, !dbg !12601, !tbaa !4039
  call void @rd_kafka_broker_internal_serve(ptr noundef %11, i64 noundef %12), !dbg !12602
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12603

if.end18:                                         ; preds = %if.end11
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !12604, !tbaa !3910
  %rkb_rk19 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 32, !dbg !12606
  %14 = load ptr, ptr %rkb_rk19, align 8, !dbg !12606, !tbaa !4139
  %rk_type = getelementptr inbounds %struct.rd_kafka_s, ptr %14, i32 0, i32 25, !dbg !12607
  %15 = load i32, ptr %rk_type, align 8, !dbg !12607, !tbaa !10915
  %cmp20 = icmp eq i32 %15, 0, !dbg !12608
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !12609

if.then22:                                        ; preds = %if.end18
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !12610, !tbaa !3910
  %17 = load i64, ptr %abs_timeout, align 8, !dbg !12611, !tbaa !4039
  call void @rd_kafka_broker_producer_serve(ptr noundef %16, i64 noundef %17), !dbg !12612
  br label %if.end30, !dbg !12612

if.else23:                                        ; preds = %if.end18
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !12613, !tbaa !3910
  %rkb_rk24 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 32, !dbg !12615
  %19 = load ptr, ptr %rkb_rk24, align 8, !dbg !12615, !tbaa !4139
  %rk_type25 = getelementptr inbounds %struct.rd_kafka_s, ptr %19, i32 0, i32 25, !dbg !12616
  %20 = load i32, ptr %rk_type25, align 8, !dbg !12616, !tbaa !10915
  %cmp26 = icmp eq i32 %20, 1, !dbg !12617
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !12618

if.then28:                                        ; preds = %if.else23
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !12619, !tbaa !3910
  %22 = load i64, ptr %abs_timeout, align 8, !dbg !12620, !tbaa !4039
  call void @rd_kafka_broker_consumer_serve(ptr noundef %21, i64 noundef %22), !dbg !12621
  br label %if.end29, !dbg !12621

if.end29:                                         ; preds = %if.then28, %if.else23
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then22
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !12622, !tbaa !3910
  %rkb_rk31 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 32, !dbg !12624
  %24 = load ptr, ptr %rkb_rk31, align 8, !dbg !12624, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %24, i32 0, i32 18, !dbg !12625
  %connections_max_idle_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 31, !dbg !12626
  %25 = load i32, ptr %connections_max_idle_ms, align 8, !dbg !12626, !tbaa !12627
  %tobool32 = icmp ne i32 %25, 0, !dbg !12622
  br i1 %tobool32, label %land.lhs.true, label %if.end36, !dbg !12628

land.lhs.true:                                    ; preds = %if.end30
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !12629, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 19, !dbg !12630
  %27 = load i32, ptr %rkb_state, align 4, !dbg !12630, !tbaa !4130
  %cmp33 = icmp eq i32 %27, 6, !dbg !12631
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !12632

if.then35:                                        ; preds = %land.lhs.true
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !12633, !tbaa !3910
  call void @rd_kafka_broker_idle_check(ptr noundef %28), !dbg !12634
  br label %if.end36, !dbg !12634

if.end36:                                         ; preds = %if.then35, %land.lhs.true, %if.end30
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12635
  br label %cleanup, !dbg !12635

cleanup:                                          ; preds = %if.end36, %if.then17
  call void @llvm.lifetime.end.p0(i64 8, ptr %abs_timeout) #16, !dbg !12635
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !12635

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !12636 zeroext i8 @rd_kafka_sasl_ready(ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_broker_reconnect_backoff(ptr noundef %rkb, i64 noundef %now) #4 !dbg !12639 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %remains = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12643, metadata !DIExpression()), !dbg !12646
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !12644, metadata !DIExpression()), !dbg !12647
  call void @llvm.lifetime.start.p0(i64 8, ptr %remains) #16, !dbg !12648
  tail call void @llvm.dbg.declare(metadata ptr %remains, metadata !12645, metadata !DIExpression()), !dbg !12649
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12650, !tbaa !3910
  %rkb_ts_reconnect = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 52, !dbg !12650
  %1 = load i64, ptr %rkb_ts_reconnect, align 8, !dbg !12650, !tbaa !12652
  %cmp = icmp eq i64 %1, 0, !dbg !12650
  %conv = zext i1 %cmp to i32, !dbg !12650
  %conv1 = sext i32 %conv to i64, !dbg !12650
  %expval = call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !12650
  %tobool = icmp ne i64 %expval, 0, !dbg !12650
  br i1 %tobool, label %if.then, label %if.end, !dbg !12653

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !12654
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12654

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !12655, !tbaa !3910
  %rkb_ts_reconnect2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 52, !dbg !12656
  %3 = load i64, ptr %rkb_ts_reconnect2, align 8, !dbg !12656, !tbaa !12652
  %4 = load i64, ptr %now.addr, align 8, !dbg !12657, !tbaa !4039
  %sub = sub nsw i64 %3, %4, !dbg !12658
  store i64 %sub, ptr %remains, align 8, !dbg !12659, !tbaa !4039
  %5 = load i64, ptr %remains, align 8, !dbg !12660, !tbaa !4039
  %cmp3 = icmp sle i64 %5, 0, !dbg !12662
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !12663

if.then5:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !12664
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12664

if.end6:                                          ; preds = %if.end
  %6 = load i64, ptr %remains, align 8, !dbg !12665, !tbaa !4039
  %div = sdiv i64 %6, 1000, !dbg !12666
  %conv7 = trunc i64 %div to i32, !dbg !12667
  store i32 %conv7, ptr %retval, align 4, !dbg !12668
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12668

cleanup:                                          ; preds = %if.end6, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %remains) #16, !dbg !12669
  %7 = load i32, ptr %retval, align 4, !dbg !12669
  ret i32 %7, !dbg !12669
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_connect(ptr noundef %rkb) #0 !dbg !12670 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %sinx = alloca ptr, align 8
  %errstr = alloca [512 x i8], align 16
  %nodename = alloca [256 x i8], align 16
  %reset_cached_addr = alloca i8, align 1
  %_logname = alloca [256 x i8], align 16
  %_logname37 = alloca [256 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12672, metadata !DIExpression()), !dbg !12689
  call void @llvm.lifetime.start.p0(i64 8, ptr %sinx) #16, !dbg !12690
  tail call void @llvm.dbg.declare(metadata ptr %sinx, metadata !12673, metadata !DIExpression()), !dbg !12691
  call void @llvm.lifetime.start.p0(i64 512, ptr %errstr) #16, !dbg !12692
  tail call void @llvm.dbg.declare(metadata ptr %errstr, metadata !12674, metadata !DIExpression()), !dbg !12693
  call void @llvm.lifetime.start.p0(i64 256, ptr %nodename) #16, !dbg !12694
  tail call void @llvm.dbg.declare(metadata ptr %nodename, metadata !12675, metadata !DIExpression()), !dbg !12695
  call void @llvm.lifetime.start.p0(i64 1, ptr %reset_cached_addr) #16, !dbg !12696
  tail call void @llvm.dbg.declare(metadata ptr %reset_cached_addr, metadata !12676, metadata !DIExpression()), !dbg !12697
  store i8 0, ptr %reset_cached_addr, align 1, !dbg !12697, !tbaa !4126
  br label %do.body, !dbg !12698

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12699, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !12699
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !12699, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 18, !dbg !12699
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !12699
  %2 = load i32, ptr %debug, align 8, !dbg !12699, !tbaa !4140
  %and = and i32 %2, 2, !dbg !12699
  %conv = sext i32 %and to i64, !dbg !12699
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12699
  %tobool = icmp ne i64 %expval, 0, !dbg !12699
  br i1 %tobool, label %if.then, label %if.end, !dbg !12700

if.then:                                          ; preds = %do.body
  br label %do.body1, !dbg !12701

do.body1:                                         ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !12702
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !12677, metadata !DIExpression()), !dbg !12702
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !12702, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 49, !dbg !12702
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !12702
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12702
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !12702, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 48, !dbg !12702
  %5 = load ptr, ptr %rkb_logname, align 8, !dbg !12702, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %5, i64 noundef 256), !dbg !12702
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !12702, !tbaa !3910
  %rkb_logname_lock2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 49, !dbg !12702
  %call3 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock2), !dbg !12702
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !12702, !tbaa !3910
  %rkb_rk4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 32, !dbg !12702
  %8 = load ptr, ptr %rkb_rk4, align 8, !dbg !12702, !tbaa !4139
  %rk_conf5 = getelementptr inbounds %struct.rd_kafka_s, ptr %8, i32 0, i32 18, !dbg !12702
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !12702, !tbaa !3910
  %rkb_rk6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 32, !dbg !12702
  %10 = load ptr, ptr %rkb_rk6, align 8, !dbg !12702, !tbaa !4139
  %arraydecay7 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12702
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !12702, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 19, !dbg !12702
  %12 = load i32, ptr %rkb_state, align 4, !dbg !12702, !tbaa !4130
  %idxprom = zext i32 %12 to i64, !dbg !12702
  %arrayidx = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom, !dbg !12702
  %13 = load ptr, ptr %arrayidx, align 8, !dbg !12702, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf5, ptr noundef %10, ptr noundef %arraydecay7, i32 noundef 7, i32 noundef 2, ptr noundef @.str.3, ptr noundef @.str.263, ptr noundef %13), !dbg !12702
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !12701
  br label %do.cond, !dbg !12702

do.cond:                                          ; preds = %do.body1
  br label %do.end, !dbg !12702

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !12701

if.end:                                           ; preds = %do.end, %do.body
  br label %do.cond8, !dbg !12700

do.cond8:                                         ; preds = %if.end
  br label %do.end9, !dbg !12700

do.end9:                                          ; preds = %do.cond8
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !12703, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 28, !dbg !12704
  %connects = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 13, !dbg !12705
  %call10 = call i32 @rd_atomic32_add(ptr noundef %connects, i32 noundef 1), !dbg !12706
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !12707, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 9, !dbg !12707
  %call11 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !12707
  %arraydecay12 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !12708
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !12709, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 43, !dbg !12710
  %arraydecay13 = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !12709
  call void @rd_strlcpy(ptr noundef %arraydecay12, ptr noundef %arraydecay13, i64 noundef 256), !dbg !12711
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !12712, !tbaa !3910
  %rkb_connect_epoch = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 47, !dbg !12713
  %18 = load i32, ptr %rkb_connect_epoch, align 4, !dbg !12713, !tbaa !12714
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !12715, !tbaa !3910
  %rkb_nodename_epoch = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 46, !dbg !12716
  %20 = load i32, ptr %rkb_nodename_epoch, align 8, !dbg !12716, !tbaa !10008
  %cmp = icmp ne i32 %18, %20, !dbg !12717
  %conv14 = zext i1 %cmp to i32, !dbg !12717
  %conv15 = trunc i32 %conv14 to i8, !dbg !12718
  store i8 %conv15, ptr %reset_cached_addr, align 1, !dbg !12719, !tbaa !4126
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !12720, !tbaa !3910
  %rkb_nodename_epoch16 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 46, !dbg !12721
  %22 = load i32, ptr %rkb_nodename_epoch16, align 8, !dbg !12721, !tbaa !10008
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !12722, !tbaa !3910
  %rkb_connect_epoch17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 47, !dbg !12723
  store i32 %22, ptr %rkb_connect_epoch17, align 4, !dbg !12724, !tbaa !12714
  %arraydecay18 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !12725
  %24 = load i8, ptr %arraydecay18, align 16, !dbg !12725, !tbaa !4126
  %tobool19 = icmp ne i8 %24, 0, !dbg !12725
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !12727

if.then20:                                        ; preds = %do.end9
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !12728, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %25, i32 noundef 3), !dbg !12729
  br label %if.end21, !dbg !12729

if.end21:                                         ; preds = %if.then20, %do.end9
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !12730, !tbaa !3910
  %rkb_lock22 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 9, !dbg !12730
  %call23 = call i32 @mtx_unlock(ptr noundef %rkb_lock22), !dbg !12730
  %arraydecay24 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !12731
  %27 = load i8, ptr %arraydecay24, align 16, !dbg !12731, !tbaa !4126
  %tobool25 = icmp ne i8 %27, 0, !dbg !12731
  br i1 %tobool25, label %if.end53, label %if.then26, !dbg !12732

if.then26:                                        ; preds = %if.end21
  br label %do.body27, !dbg !12733

do.body27:                                        ; preds = %if.then26
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !12734, !tbaa !3910
  %rkb_rk28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 32, !dbg !12734
  %29 = load ptr, ptr %rkb_rk28, align 8, !dbg !12734, !tbaa !4139
  %rk_conf29 = getelementptr inbounds %struct.rd_kafka_s, ptr %29, i32 0, i32 18, !dbg !12734
  %debug30 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf29, i32 0, i32 13, !dbg !12734
  %30 = load i32, ptr %debug30, align 8, !dbg !12734, !tbaa !4140
  %and31 = and i32 %30, 2, !dbg !12734
  %conv32 = sext i32 %and31 to i64, !dbg !12734
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !12734
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !12734
  br i1 %tobool34, label %if.then35, label %if.end50, !dbg !12735

if.then35:                                        ; preds = %do.body27
  br label %do.body36, !dbg !12736

do.body36:                                        ; preds = %if.then35
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname37) #16, !dbg !12737
  tail call void @llvm.dbg.declare(metadata ptr %_logname37, metadata !12682, metadata !DIExpression()), !dbg !12737
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !12737, !tbaa !3910
  %rkb_logname_lock38 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 49, !dbg !12737
  %call39 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock38), !dbg !12737
  %arraydecay40 = getelementptr inbounds [256 x i8], ptr %_logname37, i64 0, i64 0, !dbg !12737
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !12737, !tbaa !3910
  %rkb_logname41 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 48, !dbg !12737
  %33 = load ptr, ptr %rkb_logname41, align 8, !dbg !12737, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay40, ptr noundef %33, i64 noundef 256), !dbg !12737
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !12737, !tbaa !3910
  %rkb_logname_lock42 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 49, !dbg !12737
  %call43 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock42), !dbg !12737
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !12737, !tbaa !3910
  %rkb_rk44 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 32, !dbg !12737
  %36 = load ptr, ptr %rkb_rk44, align 8, !dbg !12737, !tbaa !4139
  %rk_conf45 = getelementptr inbounds %struct.rd_kafka_s, ptr %36, i32 0, i32 18, !dbg !12737
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !12737, !tbaa !3910
  %rkb_rk46 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 32, !dbg !12737
  %38 = load ptr, ptr %rkb_rk46, align 8, !dbg !12737, !tbaa !4139
  %arraydecay47 = getelementptr inbounds [256 x i8], ptr %_logname37, i64 0, i64 0, !dbg !12737
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf45, ptr noundef %38, ptr noundef %arraydecay47, i32 noundef 7, i32 noundef 2, ptr noundef @.str.3, ptr noundef @.str.264), !dbg !12737
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname37) #16, !dbg !12736
  br label %do.cond48, !dbg !12737

do.cond48:                                        ; preds = %do.body36
  br label %do.end49, !dbg !12737

do.end49:                                         ; preds = %do.cond48
  br label %if.end50, !dbg !12736

if.end50:                                         ; preds = %do.end49, %do.body27
  br label %do.cond51, !dbg !12735

do.cond51:                                        ; preds = %if.end50
  br label %do.end52, !dbg !12735

do.end52:                                         ; preds = %do.cond51
  store i32 0, ptr %retval, align 4, !dbg !12738
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12738

if.end53:                                         ; preds = %if.end21
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !12739, !tbaa !3910
  %40 = load ptr, ptr %rkb.addr, align 8, !dbg !12740, !tbaa !3910
  %rkb_rk54 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %40, i32 0, i32 32, !dbg !12741
  %41 = load ptr, ptr %rkb_rk54, align 8, !dbg !12741, !tbaa !4139
  %rk_conf55 = getelementptr inbounds %struct.rd_kafka_s, ptr %41, i32 0, i32 18, !dbg !12742
  %call56 = call i64 @rd_clock(), !dbg !12743
  call void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %39, ptr noundef %rk_conf55, i64 noundef %call56), !dbg !12744
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !12745, !tbaa !3910
  %arraydecay57 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !12747
  %43 = load i8, ptr %reset_cached_addr, align 1, !dbg !12748, !tbaa !4126
  %call58 = call i32 @rd_kafka_broker_resolve(ptr noundef %42, ptr noundef %arraydecay57, i8 noundef zeroext %43), !dbg !12749
  %cmp59 = icmp eq i32 %call58, -1, !dbg !12750
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !12751

if.then61:                                        ; preds = %if.end53
  store i32 -1, ptr %retval, align 4, !dbg !12752
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12752

if.end62:                                         ; preds = %if.end53
  %44 = load ptr, ptr %rkb.addr, align 8, !dbg !12753, !tbaa !3910
  %rkb_rsal = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %44, i32 0, i32 2, !dbg !12754
  %45 = load ptr, ptr %rkb_rsal, align 8, !dbg !12754, !tbaa !8778
  %call63 = call ptr @rd_sockaddr_list_next(ptr noundef %45), !dbg !12755
  store ptr %call63, ptr %sinx, align 8, !dbg !12756, !tbaa !3910
  br label %do.body64, !dbg !12757

do.body64:                                        ; preds = %if.end62
  %46 = load ptr, ptr %rkb.addr, align 8, !dbg !12758, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %46, i32 0, i32 5, !dbg !12758
  %47 = load ptr, ptr %rkb_transport, align 8, !dbg !12758, !tbaa !4518
  %tobool65 = icmp ne ptr %47, null, !dbg !12758
  %lnot = xor i1 %tobool65, true, !dbg !12758
  %lnot66 = xor i1 %lnot, true, !dbg !12758
  %lnot.ext = zext i1 %lnot66 to i32, !dbg !12758
  %conv67 = sext i32 %lnot.ext to i64, !dbg !12758
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0), !dbg !12758
  %tobool69 = icmp ne i64 %expval68, 0, !dbg !12758
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !12761

if.then70:                                        ; preds = %do.body64
  %48 = load ptr, ptr %rkb.addr, align 8, !dbg !12758, !tbaa !3910
  %rkb_rk71 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %48, i32 0, i32 32, !dbg !12758
  %49 = load ptr, ptr %rkb_rk71, align 8, !dbg !12758, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 2226, ptr noundef @__FUNCTION__.rd_kafka_broker_connect, ptr noundef %49, ptr noundef @.str.265) #17, !dbg !12758
  unreachable, !dbg !12758

if.end72:                                         ; preds = %do.body64
  br label %do.cond73, !dbg !12761

do.cond73:                                        ; preds = %if.end72
  br label %do.end74, !dbg !12761

do.end74:                                         ; preds = %do.cond73
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !12762, !tbaa !3910
  %51 = load ptr, ptr %sinx, align 8, !dbg !12764, !tbaa !3910
  %arraydecay75 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !12765
  %call76 = call ptr @rd_kafka_transport_connect(ptr noundef %50, ptr noundef %51, ptr noundef %arraydecay75, i64 noundef 512), !dbg !12766
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !12767, !tbaa !3910
  %rkb_transport77 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 5, !dbg !12768
  store ptr %call76, ptr %rkb_transport77, align 8, !dbg !12769, !tbaa !4518
  %tobool78 = icmp ne ptr %call76, null, !dbg !12769
  br i1 %tobool78, label %if.end81, label %if.then79, !dbg !12770

if.then79:                                        ; preds = %do.end74
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !12771, !tbaa !3910
  %arraydecay80 = getelementptr inbounds [512 x i8], ptr %errstr, i64 0, i64 0, !dbg !12773
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %53, i32 noundef 3, i32 noundef -195, ptr noundef @.str.26, ptr noundef %arraydecay80), !dbg !12774
  store i32 -1, ptr %retval, align 4, !dbg !12775
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12775

if.end81:                                         ; preds = %do.end74
  %call82 = call i64 @rd_clock(), !dbg !12776
  %54 = load ptr, ptr %rkb.addr, align 8, !dbg !12777, !tbaa !3910
  %rkb_ts_connect = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %54, i32 0, i32 53, !dbg !12778
  store i64 %call82, ptr %rkb_ts_connect, align 8, !dbg !12779, !tbaa !9722
  store i32 1, ptr %retval, align 4, !dbg !12780
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12780

cleanup:                                          ; preds = %if.end81, %if.then79, %if.then61, %do.end52
  call void @llvm.lifetime.end.p0(i64 1, ptr %reset_cached_addr) #16, !dbg !12781
  call void @llvm.lifetime.end.p0(i64 256, ptr %nodename) #16, !dbg !12781
  call void @llvm.lifetime.end.p0(i64 512, ptr %errstr) #16, !dbg !12781
  call void @llvm.lifetime.end.p0(i64 8, ptr %sinx) #16, !dbg !12781
  %55 = load i32, ptr %retval, align 4, !dbg !12781
  ret i32 %55, !dbg !12781
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rd_kafka_broker_addresses_exhausted(ptr noundef %rkb) #0 !dbg !12782 {
entry:
  %rkb.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12786, metadata !DIExpression()), !dbg !12787
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12788, !tbaa !3910
  %rkb_rsal = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 2, !dbg !12789
  %1 = load ptr, ptr %rkb_rsal, align 8, !dbg !12789, !tbaa !8778
  %tobool = icmp ne ptr %1, null, !dbg !12788
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !12790

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !12791, !tbaa !3910
  %rkb_rsal1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 2, !dbg !12792
  %3 = load ptr, ptr %rkb_rsal1, align 8, !dbg !12792, !tbaa !8778
  %rsal_cnt = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %3, i32 0, i32 0, !dbg !12793
  %4 = load i32, ptr %rsal_cnt, align 4, !dbg !12793, !tbaa !3959
  %cmp = icmp eq i32 %4, 0, !dbg !12794
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !12795

lor.rhs:                                          ; preds = %lor.lhs.false
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !12796, !tbaa !3910
  %rkb_rsal2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 2, !dbg !12797
  %6 = load ptr, ptr %rkb_rsal2, align 8, !dbg !12797, !tbaa !8778
  %rsal_curr = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %6, i32 0, i32 1, !dbg !12798
  %7 = load i32, ptr %rsal_curr, align 4, !dbg !12798, !tbaa !3959
  %add = add nsw i32 %7, 1, !dbg !12799
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !12800, !tbaa !3910
  %rkb_rsal3 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 2, !dbg !12801
  %9 = load ptr, ptr %rkb_rsal3, align 8, !dbg !12801, !tbaa !8778
  %rsal_cnt4 = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %9, i32 0, i32 0, !dbg !12802
  %10 = load i32, ptr %rsal_cnt4, align 4, !dbg !12802, !tbaa !3959
  %cmp5 = icmp eq i32 %add, %10, !dbg !12803
  br label %lor.end, !dbg !12795

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %11 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp5, %lor.rhs ]
  %lor.ext = zext i1 %11 to i32, !dbg !12795
  %conv = trunc i32 %lor.ext to i8, !dbg !12804
  ret i8 %conv, !dbg !12805
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_update_reconnect_backoff(ptr noundef %rkb, ptr noundef %conf, i64 noundef %now) #0 !dbg !12806 {
entry:
  %rkb.addr = alloca ptr, align 8
  %conf.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %backoff = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12810, metadata !DIExpression()), !dbg !12814
  store ptr %conf, ptr %conf.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %conf.addr, metadata !12811, metadata !DIExpression()), !dbg !12815
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !12812, metadata !DIExpression()), !dbg !12816
  call void @llvm.lifetime.start.p0(i64 4, ptr %backoff) #16, !dbg !12817
  tail call void @llvm.dbg.declare(metadata ptr %backoff, metadata !12813, metadata !DIExpression()), !dbg !12818
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !12819, !tbaa !3910
  %rkb_ts_reconnect = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 52, !dbg !12821
  %1 = load i64, ptr %rkb_ts_reconnect, align 8, !dbg !12821, !tbaa !12652
  %2 = load ptr, ptr %conf.addr, align 8, !dbg !12822, !tbaa !3910
  %reconnect_backoff_max_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %2, i32 0, i32 28, !dbg !12823
  %3 = load i32, ptr %reconnect_backoff_max_ms, align 4, !dbg !12823, !tbaa !11340
  %mul = mul nsw i32 %3, 1000, !dbg !12824
  %conv = sext i32 %mul to i64, !dbg !12825
  %add = add nsw i64 %1, %conv, !dbg !12826
  %4 = load i64, ptr %now.addr, align 8, !dbg !12827, !tbaa !4039
  %cmp = icmp slt i64 %add, %4, !dbg !12828
  br i1 %cmp, label %if.then, label %if.end, !dbg !12829

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %conf.addr, align 8, !dbg !12830, !tbaa !3910
  %reconnect_backoff_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %5, i32 0, i32 27, !dbg !12831
  %6 = load i32, ptr %reconnect_backoff_ms, align 8, !dbg !12831, !tbaa !11274
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !12832, !tbaa !3910
  %rkb_reconnect_backoff_ms = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 51, !dbg !12833
  store i32 %6, ptr %rkb_reconnect_backoff_ms, align 8, !dbg !12834, !tbaa !9088
  br label %if.end, !dbg !12832

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !12835, !tbaa !3910
  %rkb_reconnect_backoff_ms2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 51, !dbg !12836
  %9 = load i32, ptr %rkb_reconnect_backoff_ms2, align 8, !dbg !12836, !tbaa !9088
  %conv3 = sitofp i32 %9 to float, !dbg !12837
  %conv4 = fpext float %conv3 to double, !dbg !12837
  %mul5 = fmul double %conv4, 7.500000e-01, !dbg !12838
  %conv6 = fptosi double %mul5 to i32, !dbg !12839
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !12840, !tbaa !3910
  %rkb_reconnect_backoff_ms7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 51, !dbg !12841
  %11 = load i32, ptr %rkb_reconnect_backoff_ms7, align 8, !dbg !12841, !tbaa !9088
  %conv8 = sitofp i32 %11 to float, !dbg !12842
  %conv9 = fpext float %conv8 to double, !dbg !12842
  %mul10 = fmul double %conv9, 1.500000e+00, !dbg !12843
  %conv11 = fptosi double %mul10 to i32, !dbg !12844
  %call = call i32 @rd_jitter(i32 noundef %conv6, i32 noundef %conv11), !dbg !12845
  store i32 %call, ptr %backoff, align 4, !dbg !12846, !tbaa !3959
  %12 = load i32, ptr %backoff, align 4, !dbg !12847, !tbaa !3959
  %13 = load ptr, ptr %conf.addr, align 8, !dbg !12847, !tbaa !3910
  %reconnect_backoff_max_ms12 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %13, i32 0, i32 28, !dbg !12847
  %14 = load i32, ptr %reconnect_backoff_max_ms12, align 4, !dbg !12847, !tbaa !11340
  %cmp13 = icmp slt i32 %12, %14, !dbg !12847
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !12847

cond.true:                                        ; preds = %if.end
  %15 = load i32, ptr %backoff, align 4, !dbg !12847, !tbaa !3959
  br label %cond.end, !dbg !12847

cond.false:                                       ; preds = %if.end
  %16 = load ptr, ptr %conf.addr, align 8, !dbg !12847, !tbaa !3910
  %reconnect_backoff_max_ms15 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %16, i32 0, i32 28, !dbg !12847
  %17 = load i32, ptr %reconnect_backoff_max_ms15, align 4, !dbg !12847, !tbaa !11340
  br label %cond.end, !dbg !12847

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %17, %cond.false ], !dbg !12847
  store i32 %cond, ptr %backoff, align 4, !dbg !12848, !tbaa !3959
  %18 = load i64, ptr %now.addr, align 8, !dbg !12849, !tbaa !4039
  %19 = load i32, ptr %backoff, align 4, !dbg !12850, !tbaa !3959
  %mul16 = mul nsw i32 %19, 1000, !dbg !12851
  %conv17 = sext i32 %mul16 to i64, !dbg !12852
  %add18 = add nsw i64 %18, %conv17, !dbg !12853
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !12854, !tbaa !3910
  %rkb_ts_reconnect19 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 52, !dbg !12855
  store i64 %add18, ptr %rkb_ts_reconnect19, align 8, !dbg !12856, !tbaa !12652
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !12857, !tbaa !3910
  %rkb_reconnect_backoff_ms20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 51, !dbg !12857
  %22 = load i32, ptr %rkb_reconnect_backoff_ms20, align 8, !dbg !12857, !tbaa !9088
  %mul21 = mul nsw i32 %22, 2, !dbg !12857
  %23 = load ptr, ptr %conf.addr, align 8, !dbg !12857, !tbaa !3910
  %reconnect_backoff_max_ms22 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %23, i32 0, i32 28, !dbg !12857
  %24 = load i32, ptr %reconnect_backoff_max_ms22, align 4, !dbg !12857, !tbaa !11340
  %cmp23 = icmp slt i32 %mul21, %24, !dbg !12857
  br i1 %cmp23, label %cond.true25, label %cond.false28, !dbg !12857

cond.true25:                                      ; preds = %cond.end
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !12857, !tbaa !3910
  %rkb_reconnect_backoff_ms26 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 51, !dbg !12857
  %26 = load i32, ptr %rkb_reconnect_backoff_ms26, align 8, !dbg !12857, !tbaa !9088
  %mul27 = mul nsw i32 %26, 2, !dbg !12857
  br label %cond.end30, !dbg !12857

cond.false28:                                     ; preds = %cond.end
  %27 = load ptr, ptr %conf.addr, align 8, !dbg !12857, !tbaa !3910
  %reconnect_backoff_max_ms29 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %27, i32 0, i32 28, !dbg !12857
  %28 = load i32, ptr %reconnect_backoff_max_ms29, align 4, !dbg !12857, !tbaa !11340
  br label %cond.end30, !dbg !12857

cond.end30:                                       ; preds = %cond.false28, %cond.true25
  %cond31 = phi i32 [ %mul27, %cond.true25 ], [ %28, %cond.false28 ], !dbg !12857
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !12858, !tbaa !3910
  %rkb_reconnect_backoff_ms32 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 51, !dbg !12859
  store i32 %cond31, ptr %rkb_reconnect_backoff_ms32, align 8, !dbg !12860, !tbaa !9088
  call void @llvm.lifetime.end.p0(i64 4, ptr %backoff) #16, !dbg !12861
  ret void, !dbg !12861
}

declare !dbg !12862 void @rd_kafka_sasl_close(ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %rkb, i32 noundef %is_waitresp_q, ptr noundef %rkbq, ptr noundef %partial_cntp, i16 noundef signext %ApiKey, i32 noundef %err, i64 noundef %now, ptr noundef %description, i32 noundef %log_first_n) #0 !dbg !12863 {
entry:
  %rkb.addr = alloca ptr, align 8
  %is_waitresp_q.addr = alloca i32, align 4
  %rkbq.addr = alloca ptr, align 8
  %partial_cntp.addr = alloca ptr, align 8
  %ApiKey.addr = alloca i16, align 2
  %err.addr = alloca i32, align 4
  %now.addr = alloca i64, align 8
  %description.addr = alloca ptr, align 8
  %log_first_n.addr = alloca i32, align 4
  %rkbuf = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %idx = alloca i32, align 4
  %holb = alloca ptr, align 8
  %pre_state = alloca i32, align 4
  %post_state = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %holbstr = alloca [256 x i8], align 16
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !12867, metadata !DIExpression()), !dbg !12894
  store i32 %is_waitresp_q, ptr %is_waitresp_q.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %is_waitresp_q.addr, metadata !12868, metadata !DIExpression()), !dbg !12895
  store ptr %rkbq, ptr %rkbq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbq.addr, metadata !12869, metadata !DIExpression()), !dbg !12896
  store ptr %partial_cntp, ptr %partial_cntp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %partial_cntp.addr, metadata !12870, metadata !DIExpression()), !dbg !12897
  store i16 %ApiKey, ptr %ApiKey.addr, align 2, !tbaa !3915
  tail call void @llvm.dbg.declare(metadata ptr %ApiKey.addr, metadata !12871, metadata !DIExpression()), !dbg !12898
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !12872, metadata !DIExpression()), !dbg !12899
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !12873, metadata !DIExpression()), !dbg !12900
  store ptr %description, ptr %description.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %description.addr, metadata !12874, metadata !DIExpression()), !dbg !12901
  store i32 %log_first_n, ptr %log_first_n.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %log_first_n.addr, metadata !12875, metadata !DIExpression()), !dbg !12902
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkbuf) #16, !dbg !12903
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf, metadata !12876, metadata !DIExpression()), !dbg !12904
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #16, !dbg !12903
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !12877, metadata !DIExpression()), !dbg !12905
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !12906
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !12878, metadata !DIExpression()), !dbg !12907
  store i32 0, ptr %cnt, align 4, !dbg !12907, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx) #16, !dbg !12908
  tail call void @llvm.dbg.declare(metadata ptr %idx, metadata !12879, metadata !DIExpression()), !dbg !12909
  store i32 -1, ptr %idx, align 4, !dbg !12909, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %holb) #16, !dbg !12910
  tail call void @llvm.dbg.declare(metadata ptr %holb, metadata !12880, metadata !DIExpression()), !dbg !12911
  br label %restart, !dbg !12910

restart:                                          ; preds = %cleanup, %entry
  tail call void @llvm.dbg.label(metadata !12883), !dbg !12912
  %0 = load ptr, ptr %rkbq.addr, align 8, !dbg !12913, !tbaa !3910
  %rkbq_bufs = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %0, i32 0, i32 0, !dbg !12913
  %tqh_first = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs, i32 0, i32 0, !dbg !12913
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !12913, !tbaa !12914
  store ptr %1, ptr %holb, align 8, !dbg !12915, !tbaa !3910
  %2 = load ptr, ptr %rkbq.addr, align 8, !dbg !12916, !tbaa !3910
  %rkbq_bufs1 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %2, i32 0, i32 0, !dbg !12916
  %tqh_first2 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs1, i32 0, i32 0, !dbg !12916
  %3 = load ptr, ptr %tqh_first2, align 8, !dbg !12916, !tbaa !12914
  store ptr %3, ptr %rkbuf, align 8, !dbg !12916, !tbaa !3910
  br label %for.cond, !dbg !12916

for.cond:                                         ; preds = %for.inc, %restart
  %4 = load ptr, ptr %rkbuf, align 8, !dbg !12917, !tbaa !3910
  %cmp = icmp ne ptr %4, null, !dbg !12917
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12917

land.rhs:                                         ; preds = %for.cond
  %5 = load ptr, ptr %rkbuf, align 8, !dbg !12917, !tbaa !3910
  %rkbuf_link = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %5, i32 0, i32 0, !dbg !12917
  %tqe_next = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link, i32 0, i32 0, !dbg !12917
  %6 = load ptr, ptr %tqe_next, align 8, !dbg !12917, !tbaa !5339
  store ptr %6, ptr %tmp, align 8, !dbg !12917, !tbaa !3910
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ true, %land.rhs ], !dbg !12918
  br i1 %7, label %for.body, label %for.end, !dbg !12916

for.body:                                         ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %pre_state) #16, !dbg !12919
  tail call void @llvm.dbg.declare(metadata ptr %pre_state, metadata !12884, metadata !DIExpression()), !dbg !12920
  call void @llvm.lifetime.start.p0(i64 4, ptr %post_state) #16, !dbg !12919
  tail call void @llvm.dbg.declare(metadata ptr %post_state, metadata !12888, metadata !DIExpression()), !dbg !12921
  %8 = load i32, ptr %idx, align 4, !dbg !12922, !tbaa !3959
  %inc = add nsw i32 %8, 1, !dbg !12922
  store i32 %inc, ptr %idx, align 4, !dbg !12922, !tbaa !3959
  %9 = load i64, ptr %now.addr, align 8, !dbg !12923, !tbaa !4039
  %tobool = icmp ne i64 %9, 0, !dbg !12923
  br i1 %tobool, label %land.rhs3, label %land.end5, !dbg !12923

land.rhs3:                                        ; preds = %for.body
  %10 = load ptr, ptr %rkbuf, align 8, !dbg !12923, !tbaa !3910
  %rkbuf_ts_timeout = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %10, i32 0, i32 28, !dbg !12923
  %11 = load i64, ptr %rkbuf_ts_timeout, align 8, !dbg !12923, !tbaa !8376
  %12 = load i64, ptr %now.addr, align 8, !dbg !12923, !tbaa !4039
  %cmp4 = icmp sgt i64 %11, %12, !dbg !12923
  br label %land.end5

land.end5:                                        ; preds = %land.rhs3, %for.body
  %13 = phi i1 [ false, %for.body ], [ %cmp4, %land.rhs3 ], !dbg !12925
  %land.ext = zext i1 %13 to i32, !dbg !12923
  %conv = sext i32 %land.ext to i64, !dbg !12923
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !12923
  %tobool6 = icmp ne i64 %expval, 0, !dbg !12923
  br i1 %tobool6, label %if.then, label %if.end, !dbg !12926

if.then:                                          ; preds = %land.end5
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12927

if.end:                                           ; preds = %land.end5
  %14 = load i16, ptr %ApiKey.addr, align 2, !dbg !12928, !tbaa !3915
  %conv7 = sext i16 %14 to i32, !dbg !12928
  %cmp8 = icmp ne i32 %conv7, -1, !dbg !12930
  br i1 %cmp8, label %land.lhs.true, label %if.end16, !dbg !12931

land.lhs.true:                                    ; preds = %if.end
  %15 = load ptr, ptr %rkbuf, align 8, !dbg !12932, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %15, i32 0, i32 10, !dbg !12933
  %ApiKey10 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !12934
  %16 = load i16, ptr %ApiKey10, align 4, !dbg !12934, !tbaa !5392
  %conv11 = sext i16 %16 to i32, !dbg !12932
  %17 = load i16, ptr %ApiKey.addr, align 2, !dbg !12935, !tbaa !3915
  %conv12 = sext i16 %17 to i32, !dbg !12935
  %cmp13 = icmp ne i32 %conv11, %conv12, !dbg !12936
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !12937

if.then15:                                        ; preds = %land.lhs.true
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12938

if.end16:                                         ; preds = %land.lhs.true, %if.end
  %18 = load ptr, ptr %partial_cntp.addr, align 8, !dbg !12939, !tbaa !3910
  %tobool17 = icmp ne ptr %18, null, !dbg !12939
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !12941

land.lhs.true18:                                  ; preds = %if.end16
  %19 = load ptr, ptr %rkbuf, align 8, !dbg !12942, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %19, i32 0, i32 6, !dbg !12943
  %call = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader), !dbg !12944
  %cmp19 = icmp ugt i64 %call, 0, !dbg !12945
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !12946

if.then21:                                        ; preds = %land.lhs.true18
  %20 = load ptr, ptr %partial_cntp.addr, align 8, !dbg !12947, !tbaa !3910
  %21 = load i32, ptr %20, align 4, !dbg !12948, !tbaa !3959
  %inc22 = add nsw i32 %21, 1, !dbg !12948
  store i32 %inc22, ptr %20, align 4, !dbg !12948, !tbaa !3959
  br label %if.end23, !dbg !12949

if.end23:                                         ; preds = %if.then21, %land.lhs.true18, %if.end16
  %22 = load ptr, ptr %rkbuf, align 8, !dbg !12950, !tbaa !3910
  %rkbuf_ts_sent = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %22, i32 0, i32 27, !dbg !12952
  %23 = load i64, ptr %rkbuf_ts_sent, align 8, !dbg !12952, !tbaa !7111
  %tobool24 = icmp ne i64 %23, 0, !dbg !12950
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !12953

if.then25:                                        ; preds = %if.end23
  %24 = load i64, ptr %now.addr, align 8, !dbg !12954, !tbaa !4039
  %25 = load ptr, ptr %rkbuf, align 8, !dbg !12955, !tbaa !3910
  %rkbuf_ts_sent26 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %25, i32 0, i32 27, !dbg !12956
  %26 = load i64, ptr %rkbuf_ts_sent26, align 8, !dbg !12956, !tbaa !7111
  %sub = sub nsw i64 %24, %26, !dbg !12957
  %27 = load ptr, ptr %rkbuf, align 8, !dbg !12958, !tbaa !3910
  %rkbuf_ts_sent27 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %27, i32 0, i32 27, !dbg !12959
  store i64 %sub, ptr %rkbuf_ts_sent27, align 8, !dbg !12960, !tbaa !7111
  br label %if.end30, !dbg !12958

if.else:                                          ; preds = %if.end23
  %28 = load i64, ptr %now.addr, align 8, !dbg !12961, !tbaa !4039
  %29 = load ptr, ptr %rkbuf, align 8, !dbg !12962, !tbaa !3910
  %rkbuf_ts_enq = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %29, i32 0, i32 26, !dbg !12963
  %30 = load i64, ptr %rkbuf_ts_enq, align 8, !dbg !12963, !tbaa !5323
  %sub28 = sub nsw i64 %28, %30, !dbg !12964
  %31 = load ptr, ptr %rkbuf, align 8, !dbg !12965, !tbaa !3910
  %rkbuf_ts_sent29 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %31, i32 0, i32 27, !dbg !12966
  store i64 %sub28, ptr %rkbuf_ts_sent29, align 8, !dbg !12967, !tbaa !7111
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then25
  %32 = load ptr, ptr %rkbq.addr, align 8, !dbg !12968, !tbaa !3910
  %33 = load ptr, ptr %rkbuf, align 8, !dbg !12969, !tbaa !3910
  call void @rd_kafka_bufq_deq(ptr noundef %32, ptr noundef %33), !dbg !12970
  %34 = load i64, ptr %now.addr, align 8, !dbg !12971, !tbaa !4039
  %tobool31 = icmp ne i64 %34, 0, !dbg !12971
  br i1 %tobool31, label %land.lhs.true32, label %if.end66, !dbg !12972

land.lhs.true32:                                  ; preds = %if.end30
  %35 = load i32, ptr %cnt, align 4, !dbg !12973, !tbaa !3959
  %36 = load i32, ptr %log_first_n.addr, align 4, !dbg !12974, !tbaa !3959
  %cmp33 = icmp slt i32 %35, %36, !dbg !12975
  br i1 %cmp33, label %if.then35, label %if.end66, !dbg !12976

if.then35:                                        ; preds = %land.lhs.true32
  call void @llvm.lifetime.start.p0(i64 256, ptr %holbstr) #16, !dbg !12977
  tail call void @llvm.dbg.declare(metadata ptr %holbstr, metadata !12889, metadata !DIExpression()), !dbg !12978
  %37 = load ptr, ptr %holb, align 8, !dbg !12979, !tbaa !3910
  %tobool36 = icmp ne ptr %37, null, !dbg !12979
  br i1 %tobool36, label %land.lhs.true37, label %if.else51, !dbg !12981

land.lhs.true37:                                  ; preds = %if.then35
  %38 = load ptr, ptr %holb, align 8, !dbg !12982, !tbaa !3910
  %39 = load ptr, ptr %rkbq.addr, align 8, !dbg !12983, !tbaa !3910
  %rkbq_bufs38 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %39, i32 0, i32 0, !dbg !12983
  %tqh_first39 = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs38, i32 0, i32 0, !dbg !12983
  %40 = load ptr, ptr %tqh_first39, align 8, !dbg !12983, !tbaa !12914
  %cmp40 = icmp eq ptr %38, %40, !dbg !12984
  br i1 %cmp40, label %if.then42, label %if.else51, !dbg !12985

if.then42:                                        ; preds = %land.lhs.true37
  %arraydecay = getelementptr inbounds [256 x i8], ptr %holbstr, i64 0, i64 0, !dbg !12986
  %41 = load ptr, ptr %holb, align 8, !dbg !12986, !tbaa !3910
  %rkbuf_flags = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %41, i32 0, i32 3, !dbg !12986
  %42 = load i32, ptr %rkbuf_flags, align 8, !dbg !12986, !tbaa !5243
  %and = and i32 %42, 8, !dbg !12986
  %tobool43 = icmp ne i32 %and, 0, !dbg !12986
  %43 = zext i1 %tobool43 to i64, !dbg !12986
  %cond = select i1 %tobool43, ptr @.str.268, ptr @.str.85, !dbg !12986
  %44 = load ptr, ptr %holb, align 8, !dbg !12986, !tbaa !3910
  %rkbuf_reqhdr44 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %44, i32 0, i32 10, !dbg !12986
  %ApiKey45 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr44, i32 0, i32 1, !dbg !12986
  %45 = load i16, ptr %ApiKey45, align 4, !dbg !12986, !tbaa !5392
  %call46 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %45), !dbg !12986
  %46 = load ptr, ptr %holb, align 8, !dbg !12986, !tbaa !3910
  %rkbuf_ts_timeout47 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %46, i32 0, i32 28, !dbg !12986
  %47 = load i64, ptr %rkbuf_ts_timeout47, align 8, !dbg !12986, !tbaa !8376
  %48 = load i64, ptr %now.addr, align 8, !dbg !12986, !tbaa !4039
  %sub48 = sub nsw i64 %47, %48, !dbg !12986
  %div = sdiv i64 %sub48, 1000, !dbg !12986
  %conv49 = trunc i64 %div to i32, !dbg !12986
  %call50 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay, i64 noundef 256, ptr noundef @.str.267, ptr noundef %cond, ptr noundef %call46, i32 noundef %conv49) #16, !dbg !12986
  store ptr null, ptr %holb, align 8, !dbg !12988, !tbaa !3910
  br label %if.end53, !dbg !12989

if.else51:                                        ; preds = %land.lhs.true37, %if.then35
  %arraydecay52 = getelementptr inbounds [256 x i8], ptr %holbstr, i64 0, i64 0, !dbg !12990
  store i8 0, ptr %arraydecay52, align 16, !dbg !12992, !tbaa !4126
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then42
  br label %do.body, !dbg !12993

do.body:                                          ; preds = %if.end53
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !12994
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !12892, metadata !DIExpression()), !dbg !12994
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !12994, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 49, !dbg !12994
  %call54 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !12994
  %arraydecay55 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12994
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !12994, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 48, !dbg !12994
  %51 = load ptr, ptr %rkb_logname, align 8, !dbg !12994, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay55, ptr noundef %51, i64 noundef 256), !dbg !12994
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !12994, !tbaa !3910
  %rkb_logname_lock56 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 49, !dbg !12994
  %call57 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock56), !dbg !12994
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !12994, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %53, i32 0, i32 32, !dbg !12994
  %54 = load ptr, ptr %rkb_rk, align 8, !dbg !12994, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %54, i32 0, i32 18, !dbg !12994
  %55 = load ptr, ptr %rkb.addr, align 8, !dbg !12994, !tbaa !3910
  %rkb_rk58 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %55, i32 0, i32 32, !dbg !12994
  %56 = load ptr, ptr %rkb_rk58, align 8, !dbg !12994, !tbaa !4139
  %arraydecay59 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !12994
  %57 = load ptr, ptr %rkbuf, align 8, !dbg !12994, !tbaa !3910
  %rkbuf_reqhdr60 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %57, i32 0, i32 10, !dbg !12994
  %ApiKey61 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr60, i32 0, i32 1, !dbg !12994
  %58 = load i16, ptr %ApiKey61, align 4, !dbg !12994, !tbaa !5392
  %call62 = call ptr @rd_kafka_ApiKey2str(i16 noundef signext %58), !dbg !12994
  %59 = load ptr, ptr %description.addr, align 8, !dbg !12994, !tbaa !3910
  %60 = load ptr, ptr %rkbuf, align 8, !dbg !12994, !tbaa !3910
  %rkbuf_ts_sent63 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %60, i32 0, i32 27, !dbg !12994
  %61 = load i64, ptr %rkbuf_ts_sent63, align 8, !dbg !12994, !tbaa !7111
  %div64 = sdiv i64 %61, 1000, !dbg !12994
  %62 = load i32, ptr %cnt, align 4, !dbg !12994, !tbaa !3959
  %arraydecay65 = getelementptr inbounds [256 x i8], ptr %holbstr, i64 0, i64 0, !dbg !12994
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf, ptr noundef %56, ptr noundef %arraydecay59, i32 noundef 5, i32 noundef 0, ptr noundef @.str.245, ptr noundef @.str.269, ptr noundef %call62, ptr noundef %59, i64 noundef %div64, i32 noundef %62, ptr noundef %arraydecay65), !dbg !12994
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !12993
  br label %do.cond, !dbg !12994

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12994

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 256, ptr %holbstr) #16, !dbg !12995
  br label %if.end66, !dbg !12996

if.end66:                                         ; preds = %do.end, %land.lhs.true32, %if.end30
  %63 = load i32, ptr %is_waitresp_q.addr, align 4, !dbg !12997, !tbaa !3959
  %tobool67 = icmp ne i32 %63, 0, !dbg !12997
  br i1 %tobool67, label %land.lhs.true68, label %if.end78, !dbg !12999

land.lhs.true68:                                  ; preds = %if.end66
  %64 = load ptr, ptr %rkbuf, align 8, !dbg !13000, !tbaa !3910
  %rkbuf_flags69 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %64, i32 0, i32 3, !dbg !13001
  %65 = load i32, ptr %rkbuf_flags69, align 8, !dbg !13001, !tbaa !5243
  %and70 = and i32 %65, 8, !dbg !13002
  %tobool71 = icmp ne i32 %and70, 0, !dbg !13002
  br i1 %tobool71, label %land.lhs.true72, label %if.end78, !dbg !13003

land.lhs.true72:                                  ; preds = %land.lhs.true68
  %66 = load ptr, ptr %rkb.addr, align 8, !dbg !13004, !tbaa !3910
  %rkb_blocking_request_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %66, i32 0, i32 22, !dbg !13005
  %call73 = call i32 @rd_atomic32_sub(ptr noundef %rkb_blocking_request_cnt, i32 noundef 1), !dbg !13006
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13007
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !13008

if.then76:                                        ; preds = %land.lhs.true72
  %67 = load ptr, ptr %rkb.addr, align 8, !dbg !13009, !tbaa !3910
  %rkb_rk77 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %67, i32 0, i32 32, !dbg !13010
  %68 = load ptr, ptr %rkb_rk77, align 8, !dbg !13010, !tbaa !4139
  call void @rd_kafka_brokers_broadcast_state_change(ptr noundef %68), !dbg !13011
  br label %if.end78, !dbg !13011

if.end78:                                         ; preds = %if.then76, %land.lhs.true72, %land.lhs.true68, %if.end66
  %69 = load ptr, ptr %rkb.addr, align 8, !dbg !13012, !tbaa !3910
  %call79 = call i32 @rd_kafka_broker_get_state(ptr noundef %69), !dbg !13013
  store i32 %call79, ptr %pre_state, align 4, !dbg !13014, !tbaa !4126
  %70 = load ptr, ptr %rkb.addr, align 8, !dbg !13015, !tbaa !3910
  %rkb_rk80 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %70, i32 0, i32 32, !dbg !13016
  %71 = load ptr, ptr %rkb_rk80, align 8, !dbg !13016, !tbaa !4139
  %72 = load ptr, ptr %rkb.addr, align 8, !dbg !13017, !tbaa !3910
  %73 = load i32, ptr %err.addr, align 4, !dbg !13018, !tbaa !4126
  %74 = load ptr, ptr %rkbuf, align 8, !dbg !13019, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %71, ptr noundef %72, i32 noundef %73, ptr noundef null, ptr noundef %74), !dbg !13020
  %75 = load i32, ptr %cnt, align 4, !dbg !13021, !tbaa !3959
  %inc81 = add nsw i32 %75, 1, !dbg !13021
  store i32 %inc81, ptr %cnt, align 4, !dbg !13021, !tbaa !3959
  %76 = load ptr, ptr %rkb.addr, align 8, !dbg !13022, !tbaa !3910
  %call82 = call i32 @rd_kafka_broker_get_state(ptr noundef %76), !dbg !13023
  store i32 %call82, ptr %post_state, align 4, !dbg !13024, !tbaa !4126
  %77 = load i32, ptr %pre_state, align 4, !dbg !13025, !tbaa !4126
  %78 = load i32, ptr %post_state, align 4, !dbg !13027, !tbaa !4126
  %cmp83 = icmp ne i32 %77, %78, !dbg !13028
  br i1 %cmp83, label %if.then85, label %if.end90, !dbg !13029

if.then85:                                        ; preds = %if.end78
  %79 = load i32, ptr %post_state, align 4, !dbg !13030, !tbaa !4126
  %cmp86 = icmp eq i32 %79, 1, !dbg !13033
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !13034

if.then88:                                        ; preds = %if.then85
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13035

if.end89:                                         ; preds = %if.then85
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13036

if.end90:                                         ; preds = %if.end78
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13037
  br label %cleanup, !dbg !13037

cleanup:                                          ; preds = %if.end90, %if.end89, %if.then88, %if.then15, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %post_state) #16, !dbg !13037
  call void @llvm.lifetime.end.p0(i64 4, ptr %pre_state) #16, !dbg !13037
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 5, label %for.inc
    i32 3, label %for.end
    i32 2, label %restart
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !13038

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %80 = load ptr, ptr %tmp, align 8, !dbg !12917, !tbaa !3910
  store ptr %80, ptr %rkbuf, align 8, !dbg !12917, !tbaa !3910
  br label %for.cond, !dbg !12917, !llvm.loop !13039

for.end:                                          ; preds = %cleanup, %land.end
  %81 = load i32, ptr %cnt, align 4, !dbg !13041, !tbaa !3959
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %holb) #16, !dbg !13042
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx) #16, !dbg !13042
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !13042
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #16, !dbg !13042
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkbuf) #16, !dbg !13042
  ret i32 %81, !dbg !13043

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !13044 ptr @rd_list_remove(ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_q_disable0(ptr noundef %rkq, i32 noundef %do_lock) #4 !dbg !13045 {
entry:
  %rkq.addr = alloca ptr, align 8
  %do_lock.addr = alloca i32, align 4
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !13047, metadata !DIExpression()), !dbg !13049
  store i32 %do_lock, ptr %do_lock.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %do_lock.addr, metadata !13048, metadata !DIExpression()), !dbg !13050
  %0 = load i32, ptr %do_lock.addr, align 4, !dbg !13051, !tbaa !3959
  %tobool = icmp ne i32 %0, 0, !dbg !13051
  br i1 %tobool, label %if.then, label %if.end, !dbg !13053

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rkq.addr, align 8, !dbg !13054, !tbaa !3910
  %rkq_lock = getelementptr inbounds %struct.rd_kafka_q_s, ptr %1, i32 0, i32 0, !dbg !13055
  %call = call i32 @mtx_lock(ptr noundef %rkq_lock), !dbg !13056
  br label %if.end, !dbg !13056

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr %rkq.addr, align 8, !dbg !13057, !tbaa !3910
  %rkq_flags = getelementptr inbounds %struct.rd_kafka_q_s, ptr %2, i32 0, i32 7, !dbg !13058
  %3 = load i32, ptr %rkq_flags, align 4, !dbg !13059, !tbaa !11578
  %and = and i32 %3, -3, !dbg !13059
  store i32 %and, ptr %rkq_flags, align 4, !dbg !13059, !tbaa !11578
  %4 = load i32, ptr %do_lock.addr, align 4, !dbg !13060, !tbaa !3959
  %tobool1 = icmp ne i32 %4, 0, !dbg !13060
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !13062

if.then2:                                         ; preds = %if.end
  %5 = load ptr, ptr %rkq.addr, align 8, !dbg !13063, !tbaa !3910
  %rkq_lock3 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %5, i32 0, i32 0, !dbg !13064
  %call4 = call i32 @mtx_unlock(ptr noundef %rkq_lock3), !dbg !13065
  br label %if.end5, !dbg !13065

if.end5:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !13066
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_ops_serve(ptr noundef %rkb, i64 noundef %timeout_us) #0 !dbg !13067 {
entry:
  %rkb.addr = alloca ptr, align 8
  %timeout_us.addr = alloca i64, align 8
  %rko = alloca ptr, align 8
  %cnt = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13071, metadata !DIExpression()), !dbg !13075
  store i64 %timeout_us, ptr %timeout_us.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %timeout_us.addr, metadata !13072, metadata !DIExpression()), !dbg !13076
  call void @llvm.lifetime.start.p0(i64 8, ptr %rko) #16, !dbg !13077
  tail call void @llvm.dbg.declare(metadata ptr %rko, metadata !13073, metadata !DIExpression()), !dbg !13078
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !13079
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !13074, metadata !DIExpression()), !dbg !13080
  store i32 0, ptr %cnt, align 4, !dbg !13080, !tbaa !3959
  br label %while.cond, !dbg !13081

while.cond:                                       ; preds = %while.body, %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13082, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 8, !dbg !13083
  %1 = load ptr, ptr %rkb_ops, align 8, !dbg !13083, !tbaa !5475
  %2 = load i64, ptr %timeout_us.addr, align 8, !dbg !13084, !tbaa !4039
  %call = call ptr @rd_kafka_q_pop(ptr noundef %1, i64 noundef %2, i32 noundef 0), !dbg !13085
  store ptr %call, ptr %rko, align 8, !dbg !13086, !tbaa !3910
  %tobool = icmp ne ptr %call, null, !dbg !13086
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13087

land.rhs:                                         ; preds = %while.cond
  %3 = load i32, ptr %cnt, align 4, !dbg !13088, !tbaa !3959
  %inc = add nsw i32 %3, 1, !dbg !13088
  store i32 %inc, ptr %cnt, align 4, !dbg !13088, !tbaa !3959
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !13089, !tbaa !3910
  %5 = load ptr, ptr %rko, align 8, !dbg !13090, !tbaa !3910
  %call1 = call zeroext i8 @rd_kafka_broker_op_serve(ptr noundef %4, ptr noundef %5), !dbg !13091
  %tobool2 = icmp ne i8 %call1, 0, !dbg !13092
  %lnot = xor i1 %tobool2, true, !dbg !13092
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !13093
  br i1 %6, label %while.body, label %while.end, !dbg !13081

while.body:                                       ; preds = %land.end
  store i64 0, ptr %timeout_us.addr, align 8, !dbg !13094, !tbaa !4039
  br label %while.cond, !dbg !13081, !llvm.loop !13095

while.end:                                        ; preds = %land.end
  %7 = load i32, ptr %cnt, align 4, !dbg !13097, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !13098
  call void @llvm.lifetime.end.p0(i64 8, ptr %rko) #16, !dbg !13098
  ret i32 %7, !dbg !13099
}

declare !dbg !13100 void @rd_kafka_interceptors_on_thread_exit(ptr noundef, i32 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_fatal_error_code(ptr noundef %rk) #4 !dbg !13101 {
entry:
  %retval = alloca i32, align 4
  %rk.addr = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !13107, !tbaa !3910
  %rk_type = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 25, !dbg !13109
  %1 = load i32, ptr %rk_type, align 8, !dbg !13109, !tbaa !10915
  %cmp = icmp eq i32 %1, 0, !dbg !13110
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !13111

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !13112, !tbaa !3910
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 18, !dbg !13113
  %eos = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 78, !dbg !13114
  %idempotence = getelementptr inbounds %struct.anon.18, ptr %eos, i32 0, i32 0, !dbg !13115
  %3 = load i32, ptr %idempotence, align 8, !dbg !13115, !tbaa !13116
  %tobool = icmp ne i32 %3, 0, !dbg !13112
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13117

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !13118, !tbaa !3910
  %rk_type1 = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 25, !dbg !13119
  %5 = load i32, ptr %rk_type1, align 8, !dbg !13119, !tbaa !10915
  %cmp2 = icmp eq i32 %5, 1, !dbg !13120
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !13121

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !13122, !tbaa !3910
  %rk_conf4 = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 18, !dbg !13123
  %group_instance_id = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf4, i32 0, i32 59, !dbg !13124
  %7 = load ptr, ptr %group_instance_id, align 8, !dbg !13124, !tbaa !13125
  %tobool5 = icmp ne ptr %7, null, !dbg !13122
  br i1 %tobool5, label %if.then, label %if.end, !dbg !13126

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  %8 = load ptr, ptr %rk.addr, align 8, !dbg !13127, !tbaa !3910
  %rk_fatal = getelementptr inbounds %struct.rd_kafka_s, ptr %8, i32 0, i32 28, !dbg !13128
  %err = getelementptr inbounds %struct.anon.23, ptr %rk_fatal, i32 0, i32 0, !dbg !13129
  %call = call i32 @rd_atomic32_get(ptr noundef %err), !dbg !13130
  store i32 %call, ptr %retval, align 4, !dbg !13131
  br label %return, !dbg !13131

if.end:                                           ; preds = %land.lhs.true3, %lor.lhs.false
  store i32 0, ptr %retval, align 4, !dbg !13132
  br label %return, !dbg !13132

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, ptr %retval, align 4, !dbg !13133
  ret i32 %9, !dbg !13133
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @rd_kafka_broker_needs_persistent_connection(ptr noundef %rkb) #4 !dbg !13134 {
entry:
  %rkb.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13138, metadata !DIExpression()), !dbg !13139
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13140, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 55, !dbg !13141
  %internal = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 0, !dbg !13142
  %1 = load i32, ptr %internal, align 4, !dbg !13142, !tbaa !5311
  %tobool = icmp ne i32 %1, 0, !dbg !13140
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !13143

lor.rhs:                                          ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !13144, !tbaa !3910
  %rkb_persistconn1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 55, !dbg !13145
  %coord = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn1, i32 0, i32 1, !dbg !13146
  %call = call i32 @rd_atomic32_get(ptr noundef %coord), !dbg !13147
  %tobool2 = icmp ne i32 %call, 0, !dbg !13143
  br label %lor.end, !dbg !13143

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32, !dbg !13143
  %conv = trunc i32 %lor.ext to i8, !dbg !13140
  ret i8 %conv, !dbg !13148
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_internal_serve(ptr noundef %rkb, i64 noundef %abs_timeout) #0 !dbg !13149 {
entry:
  %rkb.addr = alloca ptr, align 8
  %abs_timeout.addr = alloca i64, align 8
  %initial_state = alloca i32, align 4
  %wakeup = alloca i8, align 1
  %next_timeout_scan = alloca i64, align 8
  %now = alloca i64, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13153, metadata !DIExpression()), !dbg !13162
  store i64 %abs_timeout, ptr %abs_timeout.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout.addr, metadata !13154, metadata !DIExpression()), !dbg !13163
  call void @llvm.lifetime.start.p0(i64 4, ptr %initial_state) #16, !dbg !13164
  tail call void @llvm.dbg.declare(metadata ptr %initial_state, metadata !13155, metadata !DIExpression()), !dbg !13165
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13166, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 19, !dbg !13167
  %1 = load i32, ptr %rkb_state, align 4, !dbg !13167, !tbaa !4130
  store i32 %1, ptr %initial_state, align 4, !dbg !13165, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 1, ptr %wakeup) #16, !dbg !13168
  tail call void @llvm.dbg.declare(metadata ptr %wakeup, metadata !13156, metadata !DIExpression()), !dbg !13169
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !13170, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !13171
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !13171, !tbaa !4139
  %rk_type = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 25, !dbg !13172
  %4 = load i32, ptr %rk_type, align 8, !dbg !13172, !tbaa !10915
  %cmp = icmp eq i32 %4, 1, !dbg !13173
  br i1 %cmp, label %if.then, label %if.else, !dbg !13174

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13175

do.body:                                          ; preds = %land.end, %if.then
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !13177, !tbaa !3910
  %call = call i64 @rd_kafka_broker_consumer_toppars_serve(ptr noundef %5), !dbg !13179
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !13180, !tbaa !3910
  %7 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13181, !tbaa !4039
  %call1 = call zeroext i8 @rd_kafka_broker_ops_io_serve(ptr noundef %6, i64 noundef %7), !dbg !13182
  store i8 %call1, ptr %wakeup, align 1, !dbg !13183, !tbaa !4126
  br label %do.cond, !dbg !13184

do.cond:                                          ; preds = %do.body
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !13185, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 31, !dbg !13185
  %call2 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt), !dbg !13185
  %cmp3 = icmp sle i32 %call2, 1, !dbg !13185
  br i1 %cmp3, label %land.end, label %land.lhs.true, !dbg !13186

land.lhs.true:                                    ; preds = %do.cond
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !13187, !tbaa !3910
  %rkb_state4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 19, !dbg !13188
  %10 = load i32, ptr %rkb_state4, align 4, !dbg !13188, !tbaa !4130
  %11 = load i32, ptr %initial_state, align 4, !dbg !13189, !tbaa !3959
  %cmp5 = icmp eq i32 %10, %11, !dbg !13190
  br i1 %cmp5, label %land.lhs.true6, label %land.end, !dbg !13191

land.lhs.true6:                                   ; preds = %land.lhs.true
  %12 = load i8, ptr %wakeup, align 1, !dbg !13192, !tbaa !4126
  %tobool = icmp ne i8 %12, 0, !dbg !13192
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !13193

land.rhs:                                         ; preds = %land.lhs.true6
  %13 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13194, !tbaa !4039
  %call7 = call i32 @rd_timeout_remains(i64 noundef %13), !dbg !13195
  %call8 = call i32 @rd_timeout_expired(i32 noundef %call7), !dbg !13196
  %tobool9 = icmp ne i32 %call8, 0, !dbg !13197
  %lnot = xor i1 %tobool9, true, !dbg !13197
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %do.cond
  %14 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !13198
  br i1 %14, label %do.body, label %do.end, !dbg !13184, !llvm.loop !13199

do.end:                                           ; preds = %land.end
  br label %if.end33, !dbg !13201

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %next_timeout_scan) #16, !dbg !13202
  tail call void @llvm.dbg.declare(metadata ptr %next_timeout_scan, metadata !13157, metadata !DIExpression()), !dbg !13203
  store i64 0, ptr %next_timeout_scan, align 8, !dbg !13203, !tbaa !4039
  br label %do.body10, !dbg !13204

do.body10:                                        ; preds = %land.end31, %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !13205
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !13160, metadata !DIExpression()), !dbg !13206
  %call11 = call i64 @rd_clock(), !dbg !13207
  store i64 %call11, ptr %now, align 8, !dbg !13206, !tbaa !4039
  %15 = load i64, ptr %now, align 8, !dbg !13208, !tbaa !4039
  %16 = load i64, ptr %next_timeout_scan, align 8, !dbg !13210, !tbaa !4039
  %cmp12 = icmp sge i64 %15, %16, !dbg !13211
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !13212

if.then13:                                        ; preds = %do.body10
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !13213, !tbaa !3910
  %18 = load i64, ptr %now, align 8, !dbg !13214, !tbaa !4039
  %call14 = call i64 @rd_kafka_broker_toppars_timeout_scan(ptr noundef %17, i64 noundef %18), !dbg !13215
  store i64 %call14, ptr %next_timeout_scan, align 8, !dbg !13216, !tbaa !4039
  br label %if.end, !dbg !13217

if.end:                                           ; preds = %if.then13, %do.body10
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !13218, !tbaa !3910
  %20 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13219, !tbaa !4039
  %21 = load i64, ptr %next_timeout_scan, align 8, !dbg !13219, !tbaa !4039
  %cmp15 = icmp slt i64 %20, %21, !dbg !13219
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !13219

cond.true:                                        ; preds = %if.end
  %22 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13219, !tbaa !4039
  br label %cond.end, !dbg !13219

cond.false:                                       ; preds = %if.end
  %23 = load i64, ptr %next_timeout_scan, align 8, !dbg !13219, !tbaa !4039
  br label %cond.end, !dbg !13219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %22, %cond.true ], [ %23, %cond.false ], !dbg !13219
  %call16 = call zeroext i8 @rd_kafka_broker_ops_io_serve(ptr noundef %19, i64 noundef %cond), !dbg !13220
  store i8 %call16, ptr %wakeup, align 1, !dbg !13221, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !13222
  br label %do.cond17, !dbg !13223

do.cond17:                                        ; preds = %cond.end
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !13224, !tbaa !3910
  %rkb_refcnt18 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 31, !dbg !13224
  %call19 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt18), !dbg !13224
  %cmp20 = icmp sle i32 %call19, 1, !dbg !13224
  br i1 %cmp20, label %land.end31, label %land.lhs.true21, !dbg !13225

land.lhs.true21:                                  ; preds = %do.cond17
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !13226, !tbaa !3910
  %rkb_state22 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 19, !dbg !13227
  %26 = load i32, ptr %rkb_state22, align 4, !dbg !13227, !tbaa !4130
  %27 = load i32, ptr %initial_state, align 4, !dbg !13228, !tbaa !3959
  %cmp23 = icmp eq i32 %26, %27, !dbg !13229
  br i1 %cmp23, label %land.lhs.true24, label %land.end31, !dbg !13230

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %28 = load i8, ptr %wakeup, align 1, !dbg !13231, !tbaa !4126
  %tobool25 = icmp ne i8 %28, 0, !dbg !13231
  br i1 %tobool25, label %land.end31, label %land.rhs26, !dbg !13232

land.rhs26:                                       ; preds = %land.lhs.true24
  %29 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13233, !tbaa !4039
  %call27 = call i32 @rd_timeout_remains(i64 noundef %29), !dbg !13234
  %call28 = call i32 @rd_timeout_expired(i32 noundef %call27), !dbg !13235
  %tobool29 = icmp ne i32 %call28, 0, !dbg !13236
  %lnot30 = xor i1 %tobool29, true, !dbg !13236
  br label %land.end31

land.end31:                                       ; preds = %land.rhs26, %land.lhs.true24, %land.lhs.true21, %do.cond17
  %30 = phi i1 [ false, %land.lhs.true24 ], [ false, %land.lhs.true21 ], [ false, %do.cond17 ], [ %lnot30, %land.rhs26 ], !dbg !13237
  br i1 %30, label %do.body10, label %do.end32, !dbg !13223, !llvm.loop !13238

do.end32:                                         ; preds = %land.end31
  call void @llvm.lifetime.end.p0(i64 8, ptr %next_timeout_scan) #16, !dbg !13240
  br label %if.end33

if.end33:                                         ; preds = %do.end32, %do.end
  call void @llvm.lifetime.end.p0(i64 1, ptr %wakeup) #16, !dbg !13241
  call void @llvm.lifetime.end.p0(i64 4, ptr %initial_state) #16, !dbg !13241
  ret void, !dbg !13241
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_producer_serve(ptr noundef %rkb, i64 noundef %abs_timeout) #0 !dbg !13242 {
entry:
  %rkb.addr = alloca ptr, align 8
  %abs_timeout.addr = alloca i64, align 8
  %timeout_scan = alloca %struct.rd_interval_s, align 8
  %initial_state = alloca i32, align 4
  %now = alloca i64, align 8
  %cnt = alloca i32, align 4
  %do_timeout_scan = alloca i8, align 1
  %next_wakeup = alloca i64, align 8
  %overshot = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13244, metadata !DIExpression()), !dbg !13254
  store i64 %abs_timeout, ptr %abs_timeout.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout.addr, metadata !13245, metadata !DIExpression()), !dbg !13255
  call void @llvm.lifetime.start.p0(i64 24, ptr %timeout_scan) #16, !dbg !13256
  tail call void @llvm.dbg.declare(metadata ptr %timeout_scan, metadata !13246, metadata !DIExpression()), !dbg !13257
  call void @llvm.lifetime.start.p0(i64 4, ptr %initial_state) #16, !dbg !13258
  tail call void @llvm.dbg.declare(metadata ptr %initial_state, metadata !13247, metadata !DIExpression()), !dbg !13259
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13260, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 19, !dbg !13261
  %1 = load i32, ptr %rkb_state, align 4, !dbg !13261, !tbaa !4130
  store i32 %1, ptr %initial_state, align 4, !dbg !13259, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !13262
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !13248, metadata !DIExpression()), !dbg !13263
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !13264
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !13249, metadata !DIExpression()), !dbg !13265
  store i32 0, ptr %cnt, align 4, !dbg !13265, !tbaa !3959
  call void @rd_interval_init(ptr noundef %timeout_scan), !dbg !13266
  br label %do.body, !dbg !13267

do.body:                                          ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !13268, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 30, !dbg !13268
  %3 = load i64, ptr %rkb_thread, align 8, !dbg !13268, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %3), !dbg !13268
  %tobool = icmp ne i32 %call, 0, !dbg !13268
  %lnot = xor i1 %tobool, true, !dbg !13268
  %lnot.ext = zext i1 %lnot to i32, !dbg !13268
  %conv = sext i32 %lnot.ext to i64, !dbg !13268
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13268
  %tobool1 = icmp ne i64 %expval, 0, !dbg !13268
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13271

if.then:                                          ; preds = %do.body
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !13268, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 32, !dbg !13268
  %5 = load ptr, ptr %rkb_rk, align 8, !dbg !13268, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 4160, ptr noundef @__FUNCTION__.rd_kafka_broker_producer_serve, ptr noundef %5, ptr noundef @.str.21) #17, !dbg !13268
  unreachable, !dbg !13268

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13271

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !13271

do.end:                                           ; preds = %do.cond
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !13272, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 9, !dbg !13272
  %call2 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !13272
  br label %while.cond, !dbg !13273

while.cond:                                       ; preds = %cleanup.cont, %do.end
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !13274, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 31, !dbg !13274
  %call3 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt), !dbg !13274
  %cmp = icmp sle i32 %call3, 1, !dbg !13274
  br i1 %cmp, label %land.end, label %land.lhs.true, !dbg !13275

land.lhs.true:                                    ; preds = %while.cond
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !13276, !tbaa !3910
  %rkb_state5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 19, !dbg !13277
  %9 = load i32, ptr %rkb_state5, align 4, !dbg !13277, !tbaa !4130
  %10 = load i32, ptr %initial_state, align 4, !dbg !13278, !tbaa !3959
  %cmp6 = icmp eq i32 %9, %10, !dbg !13279
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !13280

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13281, !tbaa !4039
  %call8 = call i64 @rd_clock(), !dbg !13282
  store i64 %call8, ptr %now, align 8, !dbg !13283, !tbaa !4039
  %cmp9 = icmp sgt i64 %11, %call8, !dbg !13284
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp9, %land.rhs ], !dbg !13285
  br i1 %12, label %while.body, label %while.end, !dbg !13273

while.body:                                       ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 1, ptr %do_timeout_scan) #16, !dbg !13286
  tail call void @llvm.dbg.declare(metadata ptr %do_timeout_scan, metadata !13250, metadata !DIExpression()), !dbg !13287
  call void @llvm.lifetime.start.p0(i64 8, ptr %next_wakeup) #16, !dbg !13288
  tail call void @llvm.dbg.declare(metadata ptr %next_wakeup, metadata !13252, metadata !DIExpression()), !dbg !13289
  %13 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13290, !tbaa !4039
  store i64 %13, ptr %next_wakeup, align 8, !dbg !13289, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 1, ptr %overshot) #16, !dbg !13291
  tail call void @llvm.dbg.declare(metadata ptr %overshot, metadata !13253, metadata !DIExpression()), !dbg !13292
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !13293, !tbaa !3910
  %rkb_lock11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 9, !dbg !13293
  %call12 = call i32 @mtx_unlock(ptr noundef %rkb_lock11), !dbg !13293
  %15 = load i64, ptr %now, align 8, !dbg !13294, !tbaa !4039
  %call13 = call i64 @rd_interval0(ptr noundef %timeout_scan, i64 noundef 1000000, i64 noundef %15, i32 noundef 0), !dbg !13294
  %cmp14 = icmp sge i64 %call13, 0, !dbg !13295
  %conv15 = zext i1 %cmp14 to i32, !dbg !13295
  %conv16 = trunc i32 %conv15 to i8, !dbg !13294
  store i8 %conv16, ptr %overshot, align 1, !dbg !13296, !tbaa !4126
  %16 = load i32, ptr %cnt, align 4, !dbg !13297, !tbaa !3959
  %inc = add nsw i32 %16, 1, !dbg !13297
  store i32 %inc, ptr %cnt, align 4, !dbg !13297, !tbaa !3959
  %cmp17 = icmp eq i32 %16, 0, !dbg !13298
  br i1 %cmp17, label %lor.end, label %lor.rhs, !dbg !13299

lor.rhs:                                          ; preds = %while.body
  %17 = load i8, ptr %overshot, align 1, !dbg !13300, !tbaa !4126
  %conv19 = zext i8 %17 to i32, !dbg !13300
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !13299
  br label %lor.end, !dbg !13299

lor.end:                                          ; preds = %lor.rhs, %while.body
  %18 = phi i1 [ true, %while.body ], [ %tobool20, %lor.rhs ]
  %lor.ext = zext i1 %18 to i32, !dbg !13299
  %conv21 = trunc i32 %lor.ext to i8, !dbg !13301
  store i8 %conv21, ptr %do_timeout_scan, align 1, !dbg !13302, !tbaa !4126
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !13303, !tbaa !3910
  %20 = load i64, ptr %now, align 8, !dbg !13304, !tbaa !4039
  %21 = load i8, ptr %do_timeout_scan, align 1, !dbg !13305, !tbaa !4126
  %call22 = call i32 @rd_kafka_broker_produce_toppars(ptr noundef %19, i64 noundef %20, ptr noundef %next_wakeup, i8 noundef zeroext %21), !dbg !13306
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !13307, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 37, !dbg !13307
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_retrybufs, i32 0, i32 1, !dbg !13307
  %call23 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !13307
  %cmp24 = icmp sgt i32 %call23, 0, !dbg !13307
  %conv25 = zext i1 %cmp24 to i32, !dbg !13307
  %conv26 = sext i32 %conv25 to i64, !dbg !13307
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0), !dbg !13307
  %tobool28 = icmp ne i64 %expval27, 0, !dbg !13307
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !13309

if.then29:                                        ; preds = %lor.end
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !13310, !tbaa !3910
  call void @rd_kafka_broker_retry_bufs_move(ptr noundef %23, ptr noundef %next_wakeup), !dbg !13311
  br label %if.end30, !dbg !13311

if.end30:                                         ; preds = %if.then29, %lor.end
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !13312, !tbaa !3910
  %25 = load i64, ptr %next_wakeup, align 8, !dbg !13314, !tbaa !4039
  %call31 = call zeroext i8 @rd_kafka_broker_ops_io_serve(ptr noundef %24, i64 noundef %25), !dbg !13315
  %tobool32 = icmp ne i8 %call31, 0, !dbg !13315
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !13316

if.then33:                                        ; preds = %if.end30
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13317

if.end34:                                         ; preds = %if.end30
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !13318, !tbaa !3910
  %rkb_lock35 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 9, !dbg !13318
  %call36 = call i32 @mtx_lock(ptr noundef %rkb_lock35), !dbg !13318
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13319
  br label %cleanup, !dbg !13319

cleanup:                                          ; preds = %if.end34, %if.then33
  call void @llvm.lifetime.end.p0(i64 1, ptr %overshot) #16, !dbg !13319
  call void @llvm.lifetime.end.p0(i64 8, ptr %next_wakeup) #16, !dbg !13319
  call void @llvm.lifetime.end.p0(i64 1, ptr %do_timeout_scan) #16, !dbg !13319
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup41 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !13273, !llvm.loop !13320

while.end:                                        ; preds = %land.end
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !13321, !tbaa !3910
  %rkb_lock39 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 9, !dbg !13321
  %call40 = call i32 @mtx_unlock(ptr noundef %rkb_lock39), !dbg !13321
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13322
  br label %cleanup41, !dbg !13322

cleanup41:                                        ; preds = %while.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !13322
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !13322
  call void @llvm.lifetime.end.p0(i64 4, ptr %initial_state) #16, !dbg !13322
  call void @llvm.lifetime.end.p0(i64 24, ptr %timeout_scan) #16, !dbg !13322
  %cleanup.dest45 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest45, label %unreachable [
    i32 0, label %cleanup.cont46
    i32 1, label %cleanup.cont46
  ]

cleanup.cont46:                                   ; preds = %cleanup41, %cleanup41
  ret void, !dbg !13322

unreachable:                                      ; preds = %cleanup41
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_consumer_serve(ptr noundef %rkb, i64 noundef %abs_timeout) #0 !dbg !13323 {
entry:
  %rkb.addr = alloca ptr, align 8
  %abs_timeout.addr = alloca i64, align 8
  %initial_state = alloca i32, align 4
  %now = alloca i64, align 8
  %min_backoff = alloca i64, align 8
  %_logname = alloca [256 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13325, metadata !DIExpression()), !dbg !13340
  store i64 %abs_timeout, ptr %abs_timeout.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout.addr, metadata !13326, metadata !DIExpression()), !dbg !13341
  call void @llvm.lifetime.start.p0(i64 4, ptr %initial_state) #16, !dbg !13342
  tail call void @llvm.dbg.declare(metadata ptr %initial_state, metadata !13327, metadata !DIExpression()), !dbg !13343
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13344, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 19, !dbg !13345
  %1 = load i32, ptr %rkb_state, align 4, !dbg !13345, !tbaa !4130
  store i32 %1, ptr %initial_state, align 4, !dbg !13343, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !13346
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !13328, metadata !DIExpression()), !dbg !13347
  br label %do.body, !dbg !13348

do.body:                                          ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !13349, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 30, !dbg !13349
  %3 = load i64, ptr %rkb_thread, align 8, !dbg !13349, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %3), !dbg !13349
  %tobool = icmp ne i32 %call, 0, !dbg !13349
  %lnot = xor i1 %tobool, true, !dbg !13349
  %lnot.ext = zext i1 %lnot to i32, !dbg !13349
  %conv = sext i32 %lnot.ext to i64, !dbg !13349
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13349
  %tobool1 = icmp ne i64 %expval, 0, !dbg !13349
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13352

if.then:                                          ; preds = %do.body
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !13349, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 32, !dbg !13349
  %5 = load ptr, ptr %rkb_rk, align 8, !dbg !13349, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 4206, ptr noundef @__FUNCTION__.rd_kafka_broker_consumer_serve, ptr noundef %5, ptr noundef @.str.21) #17, !dbg !13349
  unreachable, !dbg !13349

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13352

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !13352

do.end:                                           ; preds = %do.cond
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !13353, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 9, !dbg !13353
  %call2 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !13353
  br label %while.cond, !dbg !13354

while.cond:                                       ; preds = %cleanup.cont, %do.end
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !13355, !tbaa !3910
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 31, !dbg !13355
  %call3 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt), !dbg !13355
  %cmp = icmp sle i32 %call3, 1, !dbg !13355
  br i1 %cmp, label %land.end, label %land.lhs.true, !dbg !13356

land.lhs.true:                                    ; preds = %while.cond
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !13357, !tbaa !3910
  %rkb_state5 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 19, !dbg !13358
  %9 = load i32, ptr %rkb_state5, align 4, !dbg !13358, !tbaa !4130
  %10 = load i32, ptr %initial_state, align 4, !dbg !13359, !tbaa !3959
  %cmp6 = icmp eq i32 %9, %10, !dbg !13360
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !13361

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13362, !tbaa !4039
  %call8 = call i64 @rd_clock(), !dbg !13363
  store i64 %call8, ptr %now, align 8, !dbg !13364, !tbaa !4039
  %cmp9 = icmp sgt i64 %11, %call8, !dbg !13365
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp9, %land.rhs ], !dbg !13366
  br i1 %12, label %while.body, label %while.end, !dbg !13354

while.body:                                       ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %min_backoff) #16, !dbg !13367
  tail call void @llvm.dbg.declare(metadata ptr %min_backoff, metadata !13329, metadata !DIExpression()), !dbg !13368
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !13369, !tbaa !3910
  %rkb_lock11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 9, !dbg !13369
  %call12 = call i32 @mtx_unlock(ptr noundef %rkb_lock11), !dbg !13369
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !13370, !tbaa !3910
  %call13 = call i64 @rd_kafka_broker_consumer_toppars_serve(ptr noundef %14), !dbg !13371
  store i64 %call13, ptr %min_backoff, align 8, !dbg !13372, !tbaa !4039
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !13373, !tbaa !3910
  %rkb_ts_fetch_backoff = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 17, !dbg !13375
  %16 = load i64, ptr %rkb_ts_fetch_backoff, align 8, !dbg !13375, !tbaa !13376
  %17 = load i64, ptr %now, align 8, !dbg !13377, !tbaa !4039
  %cmp14 = icmp sgt i64 %16, %17, !dbg !13378
  br i1 %cmp14, label %land.lhs.true16, label %if.end22, !dbg !13379

land.lhs.true16:                                  ; preds = %while.body
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !13380, !tbaa !3910
  %rkb_ts_fetch_backoff17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 17, !dbg !13381
  %19 = load i64, ptr %rkb_ts_fetch_backoff17, align 8, !dbg !13381, !tbaa !13376
  %20 = load i64, ptr %min_backoff, align 8, !dbg !13382, !tbaa !4039
  %cmp18 = icmp slt i64 %19, %20, !dbg !13383
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !13384

if.then20:                                        ; preds = %land.lhs.true16
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !13385, !tbaa !3910
  %rkb_ts_fetch_backoff21 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 17, !dbg !13386
  %22 = load i64, ptr %rkb_ts_fetch_backoff21, align 8, !dbg !13386, !tbaa !13376
  store i64 %22, ptr %min_backoff, align 8, !dbg !13387, !tbaa !4039
  br label %if.end22, !dbg !13388

if.end22:                                         ; preds = %if.then20, %land.lhs.true16, %while.body
  %23 = load i64, ptr %min_backoff, align 8, !dbg !13389, !tbaa !4039
  %cmp23 = icmp slt i64 %23, 9223372036854775807, !dbg !13391
  br i1 %cmp23, label %land.lhs.true25, label %if.end30, !dbg !13392

land.lhs.true25:                                  ; preds = %if.end22
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !13393, !tbaa !3910
  %rkb_state26 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 19, !dbg !13394
  %25 = load i32, ptr %rkb_state26, align 4, !dbg !13394, !tbaa !4130
  %cmp27 = icmp ne i32 %25, 6, !dbg !13395
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !13396

if.then29:                                        ; preds = %land.lhs.true25
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !13397, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 55, !dbg !13399
  %internal = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 0, !dbg !13400
  %27 = load i32, ptr %internal, align 4, !dbg !13401, !tbaa !5311
  %inc = add nsw i32 %27, 1, !dbg !13401
  store i32 %inc, ptr %internal, align 4, !dbg !13401, !tbaa !5311
  br label %if.end30, !dbg !13402

if.end30:                                         ; preds = %if.then29, %land.lhs.true25, %if.end22
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !13403, !tbaa !3910
  %rkb_fetching = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 18, !dbg !13404
  %29 = load i32, ptr %rkb_fetching, align 8, !dbg !13404, !tbaa !13405
  %tobool31 = icmp ne i32 %29, 0, !dbg !13403
  br i1 %tobool31, label %if.else65, label %land.lhs.true32, !dbg !13406

land.lhs.true32:                                  ; preds = %if.end30
  %30 = load ptr, ptr %rkb.addr, align 8, !dbg !13407, !tbaa !3910
  %rkb_state33 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %30, i32 0, i32 19, !dbg !13408
  %31 = load i32, ptr %rkb_state33, align 4, !dbg !13408, !tbaa !4130
  %cmp34 = icmp eq i32 %31, 6, !dbg !13409
  br i1 %cmp34, label %if.then36, label %if.else65, !dbg !13410

if.then36:                                        ; preds = %land.lhs.true32
  %32 = load i64, ptr %min_backoff, align 8, !dbg !13411, !tbaa !4039
  %33 = load i64, ptr %now, align 8, !dbg !13412, !tbaa !4039
  %cmp37 = icmp slt i64 %32, %33, !dbg !13413
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !13414

if.then39:                                        ; preds = %if.then36
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !13415, !tbaa !3910
  %35 = load i64, ptr %now, align 8, !dbg !13417, !tbaa !4039
  %call40 = call i32 @rd_kafka_broker_fetch_toppars(ptr noundef %34, i64 noundef %35), !dbg !13418
  %36 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13419, !tbaa !4039
  store i64 %36, ptr %min_backoff, align 8, !dbg !13420, !tbaa !4039
  br label %if.end64, !dbg !13421

if.else:                                          ; preds = %if.then36
  %37 = load i64, ptr %min_backoff, align 8, !dbg !13422, !tbaa !4039
  %cmp41 = icmp slt i64 %37, 9223372036854775807, !dbg !13423
  br i1 %cmp41, label %if.then43, label %if.end63, !dbg !13424

if.then43:                                        ; preds = %if.else
  br label %do.body44, !dbg !13425

do.body44:                                        ; preds = %if.then43
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !13426, !tbaa !3910
  %rkb_rk45 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 32, !dbg !13426
  %39 = load ptr, ptr %rkb_rk45, align 8, !dbg !13426, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %39, i32 0, i32 18, !dbg !13426
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !13426
  %40 = load i32, ptr %debug, align 8, !dbg !13426, !tbaa !4140
  %and = and i32 %40, 1024, !dbg !13426
  %conv46 = sext i32 %and to i64, !dbg !13426
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 0), !dbg !13426
  %tobool48 = icmp ne i64 %expval47, 0, !dbg !13426
  br i1 %tobool48, label %if.then49, label %if.end60, !dbg !13427

if.then49:                                        ; preds = %do.body44
  br label %do.body50, !dbg !13428

do.body50:                                        ; preds = %if.then49
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !13429
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !13331, metadata !DIExpression()), !dbg !13429
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !13429, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 49, !dbg !13429
  %call51 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !13429
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !13429
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !13429, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 48, !dbg !13429
  %43 = load ptr, ptr %rkb_logname, align 8, !dbg !13429, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %43, i64 noundef 256), !dbg !13429
  %44 = load ptr, ptr %rkb.addr, align 8, !dbg !13429, !tbaa !3910
  %rkb_logname_lock52 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %44, i32 0, i32 49, !dbg !13429
  %call53 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock52), !dbg !13429
  %45 = load ptr, ptr %rkb.addr, align 8, !dbg !13429, !tbaa !3910
  %rkb_rk54 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %45, i32 0, i32 32, !dbg !13429
  %46 = load ptr, ptr %rkb_rk54, align 8, !dbg !13429, !tbaa !4139
  %rk_conf55 = getelementptr inbounds %struct.rd_kafka_s, ptr %46, i32 0, i32 18, !dbg !13429
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !13429, !tbaa !3910
  %rkb_rk56 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 32, !dbg !13429
  %48 = load ptr, ptr %rkb_rk56, align 8, !dbg !13429, !tbaa !4139
  %arraydecay57 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !13429
  %49 = load i64, ptr %min_backoff, align 8, !dbg !13429, !tbaa !4039
  %50 = load i64, ptr %now, align 8, !dbg !13429, !tbaa !4039
  %sub = sub nsw i64 %49, %50, !dbg !13429
  %div = sdiv i64 %sub, 1000, !dbg !13429
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf55, ptr noundef %48, ptr noundef %arraydecay57, i32 noundef 7, i32 noundef 1024, ptr noundef @.str.260, ptr noundef @.str.261, i64 noundef %div), !dbg !13429
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !13428
  br label %do.cond58, !dbg !13429

do.cond58:                                        ; preds = %do.body50
  br label %do.end59, !dbg !13429

do.end59:                                         ; preds = %do.cond58
  br label %if.end60, !dbg !13428

if.end60:                                         ; preds = %do.end59, %do.body44
  br label %do.cond61, !dbg !13427

do.cond61:                                        ; preds = %if.end60
  br label %do.end62, !dbg !13427

do.end62:                                         ; preds = %do.cond61
  br label %if.end63, !dbg !13427

if.end63:                                         ; preds = %do.end62, %if.else
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then39
  br label %if.end66, !dbg !13430

if.else65:                                        ; preds = %land.lhs.true32, %if.end30
  %51 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13431, !tbaa !4039
  store i64 %51, ptr %min_backoff, align 8, !dbg !13433, !tbaa !4039
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.end64
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !13434, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 37, !dbg !13434
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_retrybufs, i32 0, i32 1, !dbg !13434
  %call67 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !13434
  %cmp68 = icmp sgt i32 %call67, 0, !dbg !13434
  %conv69 = zext i1 %cmp68 to i32, !dbg !13434
  %conv70 = sext i32 %conv69 to i64, !dbg !13434
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0), !dbg !13434
  %tobool72 = icmp ne i64 %expval71, 0, !dbg !13434
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !13436

if.then73:                                        ; preds = %if.end66
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !13437, !tbaa !3910
  call void @rd_kafka_broker_retry_bufs_move(ptr noundef %53, ptr noundef %min_backoff), !dbg !13438
  br label %if.end74, !dbg !13438

if.end74:                                         ; preds = %if.then73, %if.end66
  %54 = load i64, ptr %min_backoff, align 8, !dbg !13439, !tbaa !4039
  %55 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13441, !tbaa !4039
  %cmp75 = icmp sgt i64 %54, %55, !dbg !13442
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !13443

if.then77:                                        ; preds = %if.end74
  %56 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13444, !tbaa !4039
  store i64 %56, ptr %min_backoff, align 8, !dbg !13445, !tbaa !4039
  br label %if.end78, !dbg !13446

if.end78:                                         ; preds = %if.then77, %if.end74
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !13447, !tbaa !3910
  %58 = load i64, ptr %min_backoff, align 8, !dbg !13449, !tbaa !4039
  %call79 = call zeroext i8 @rd_kafka_broker_ops_io_serve(ptr noundef %57, i64 noundef %58), !dbg !13450
  %tobool80 = icmp ne i8 %call79, 0, !dbg !13450
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !13451

if.then81:                                        ; preds = %if.end78
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13452

if.end82:                                         ; preds = %if.end78
  %59 = load ptr, ptr %rkb.addr, align 8, !dbg !13453, !tbaa !3910
  %rkb_lock83 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 9, !dbg !13453
  %call84 = call i32 @mtx_lock(ptr noundef %rkb_lock83), !dbg !13453
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13454
  br label %cleanup, !dbg !13454

cleanup:                                          ; preds = %if.end82, %if.then81
  call void @llvm.lifetime.end.p0(i64 8, ptr %min_backoff) #16, !dbg !13454
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup87 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !13354, !llvm.loop !13455

while.end:                                        ; preds = %land.end
  %60 = load ptr, ptr %rkb.addr, align 8, !dbg !13456, !tbaa !3910
  %rkb_lock85 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %60, i32 0, i32 9, !dbg !13456
  %call86 = call i32 @mtx_unlock(ptr noundef %rkb_lock85), !dbg !13456
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13457
  br label %cleanup87, !dbg !13457

cleanup87:                                        ; preds = %while.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !13457
  call void @llvm.lifetime.end.p0(i64 4, ptr %initial_state) #16, !dbg !13457
  %cleanup.dest89 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest89, label %unreachable [
    i32 0, label %cleanup.cont90
    i32 1, label %cleanup.cont90
  ]

cleanup.cont90:                                   ; preds = %cleanup87, %cleanup87
  ret void, !dbg !13457

unreachable:                                      ; preds = %cleanup87
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_broker_idle_check(ptr noundef %rkb) #4 !dbg !13458 {
entry:
  %rkb.addr = alloca ptr, align 8
  %ts_send = alloca i64, align 8
  %ts_recv = alloca i64, align 8
  %ts_last_activity = alloca i64, align 8
  %idle_ms = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13460, metadata !DIExpression()), !dbg !13465
  call void @llvm.lifetime.start.p0(i64 8, ptr %ts_send) #16, !dbg !13466
  tail call void @llvm.dbg.declare(metadata ptr %ts_send, metadata !13461, metadata !DIExpression()), !dbg !13467
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13468, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 28, !dbg !13469
  %ts_send1 = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 16, !dbg !13470
  %call = call i64 @rd_atomic64_get(ptr noundef %ts_send1), !dbg !13471
  store i64 %call, ptr %ts_send, align 8, !dbg !13467, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %ts_recv) #16, !dbg !13472
  tail call void @llvm.dbg.declare(metadata ptr %ts_recv, metadata !13462, metadata !DIExpression()), !dbg !13473
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !13474, !tbaa !3910
  %rkb_c2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 28, !dbg !13475
  %ts_recv3 = getelementptr inbounds %struct.anon.2, ptr %rkb_c2, i32 0, i32 17, !dbg !13476
  %call4 = call i64 @rd_atomic64_get(ptr noundef %ts_recv3), !dbg !13477
  store i64 %call4, ptr %ts_recv, align 8, !dbg !13473, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %ts_last_activity) #16, !dbg !13478
  tail call void @llvm.dbg.declare(metadata ptr %ts_last_activity, metadata !13463, metadata !DIExpression()), !dbg !13479
  %2 = load i64, ptr %ts_send, align 8, !dbg !13480, !tbaa !4039
  %3 = load i64, ptr %ts_recv, align 8, !dbg !13480, !tbaa !4039
  %cmp = icmp sgt i64 %2, %3, !dbg !13480
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13480

cond.true:                                        ; preds = %entry
  %4 = load i64, ptr %ts_send, align 8, !dbg !13480, !tbaa !4039
  br label %cond.end, !dbg !13480

cond.false:                                       ; preds = %entry
  %5 = load i64, ptr %ts_recv, align 8, !dbg !13480, !tbaa !4039
  br label %cond.end, !dbg !13480

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !13480
  store i64 %cond, ptr %ts_last_activity, align 8, !dbg !13479, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 4, ptr %idle_ms) #16, !dbg !13481
  tail call void @llvm.dbg.declare(metadata ptr %idle_ms, metadata !13464, metadata !DIExpression()), !dbg !13482
  %6 = load i64, ptr %ts_last_activity, align 8, !dbg !13483, !tbaa !4039
  %tobool = icmp ne i64 %6, 0, !dbg !13483
  %lnot = xor i1 %tobool, true, !dbg !13483
  %lnot.ext = zext i1 %lnot to i32, !dbg !13483
  %conv = sext i32 %lnot.ext to i64, !dbg !13483
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13483
  %tobool5 = icmp ne i64 %expval, 0, !dbg !13483
  br i1 %tobool5, label %if.then, label %if.end, !dbg !13485

if.then:                                          ; preds = %cond.end
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !13486, !tbaa !3910
  %rkb_ts_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 20, !dbg !13487
  %8 = load i64, ptr %rkb_ts_state, align 8, !dbg !13487, !tbaa !4301
  store i64 %8, ptr %ts_last_activity, align 8, !dbg !13488, !tbaa !4039
  br label %if.end, !dbg !13489

if.end:                                           ; preds = %if.then, %cond.end
  %call6 = call i64 @rd_clock(), !dbg !13490
  %9 = load i64, ptr %ts_last_activity, align 8, !dbg !13491, !tbaa !4039
  %sub = sub nsw i64 %call6, %9, !dbg !13492
  %div = sdiv i64 %sub, 1000, !dbg !13493
  %conv7 = trunc i64 %div to i32, !dbg !13494
  store i32 %conv7, ptr %idle_ms, align 4, !dbg !13495, !tbaa !3959
  %10 = load i32, ptr %idle_ms, align 4, !dbg !13496, !tbaa !3959
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !13496, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 32, !dbg !13496
  %12 = load ptr, ptr %rkb_rk, align 8, !dbg !13496, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %12, i32 0, i32 18, !dbg !13496
  %connections_max_idle_ms = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 31, !dbg !13496
  %13 = load i32, ptr %connections_max_idle_ms, align 8, !dbg !13496, !tbaa !12627
  %cmp8 = icmp slt i32 %10, %13, !dbg !13496
  %conv9 = zext i1 %cmp8 to i32, !dbg !13496
  %conv10 = sext i32 %conv9 to i64, !dbg !13496
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 1), !dbg !13496
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !13496
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !13498

if.then13:                                        ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13499

if.end14:                                         ; preds = %if.end
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !13500, !tbaa !3910
  %15 = load i32, ptr %idle_ms, align 4, !dbg !13501, !tbaa !3959
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %14, i32 noundef 7, i32 noundef -195, ptr noundef @.str.262, i32 noundef %15), !dbg !13502
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13503
  br label %cleanup, !dbg !13503

cleanup:                                          ; preds = %if.end14, %if.then13
  call void @llvm.lifetime.end.p0(i64 4, ptr %idle_ms) #16, !dbg !13503
  call void @llvm.lifetime.end.p0(i64 8, ptr %ts_last_activity) #16, !dbg !13503
  call void @llvm.lifetime.end.p0(i64 8, ptr %ts_recv) #16, !dbg !13503
  call void @llvm.lifetime.end.p0(i64 8, ptr %ts_send) #16, !dbg !13503
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !13503

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i64 @rd_kafka_broker_consumer_toppars_serve(ptr noundef %rkb) #0 !dbg !13504 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rktp = alloca ptr, align 8
  %rktp_tmp = alloca ptr, align 8
  %min_backoff = alloca i64, align 8
  %backoff = alloca i64, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13508, metadata !DIExpression()), !dbg !13516
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp) #16, !dbg !13517
  tail call void @llvm.dbg.declare(metadata ptr %rktp, metadata !13509, metadata !DIExpression()), !dbg !13518
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp_tmp) #16, !dbg !13517
  tail call void @llvm.dbg.declare(metadata ptr %rktp_tmp, metadata !13510, metadata !DIExpression()), !dbg !13519
  call void @llvm.lifetime.start.p0(i64 8, ptr %min_backoff) #16, !dbg !13520
  tail call void @llvm.dbg.declare(metadata ptr %min_backoff, metadata !13511, metadata !DIExpression()), !dbg !13521
  store i64 9223372036854775807, ptr %min_backoff, align 8, !dbg !13521, !tbaa !4039
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13522, !tbaa !3910
  %rkb_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 11, !dbg !13522
  %tqh_first = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars, i32 0, i32 0, !dbg !13522
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !13522, !tbaa !4637
  store ptr %1, ptr %rktp, align 8, !dbg !13522, !tbaa !3910
  br label %for.cond, !dbg !13522

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load ptr, ptr %rktp, align 8, !dbg !13523, !tbaa !3910
  %cmp = icmp ne ptr %2, null, !dbg !13523
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13523

land.rhs:                                         ; preds = %for.cond
  %3 = load ptr, ptr %rktp, align 8, !dbg !13523, !tbaa !3910
  %rktp_rkblink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %3, i32 0, i32 1, !dbg !13523
  %tqe_next = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink, i32 0, i32 0, !dbg !13523
  %4 = load ptr, ptr %tqe_next, align 8, !dbg !13523, !tbaa !4674
  store ptr %4, ptr %rktp_tmp, align 8, !dbg !13523, !tbaa !3910
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ true, %land.rhs ], !dbg !13524
  br i1 %5, label %for.body, label %for.end, !dbg !13522

for.body:                                         ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %backoff) #16, !dbg !13525
  tail call void @llvm.dbg.declare(metadata ptr %backoff, metadata !13512, metadata !DIExpression()), !dbg !13526
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !13527, !tbaa !3910
  %7 = load ptr, ptr %rktp, align 8, !dbg !13528, !tbaa !3910
  %call = call i64 @rd_kafka_broker_consumer_toppar_serve(ptr noundef %6, ptr noundef %7), !dbg !13529
  store i64 %call, ptr %backoff, align 8, !dbg !13530, !tbaa !4039
  %8 = load i64, ptr %backoff, align 8, !dbg !13531, !tbaa !4039
  %9 = load i64, ptr %min_backoff, align 8, !dbg !13533, !tbaa !4039
  %cmp1 = icmp slt i64 %8, %9, !dbg !13534
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13535

if.then:                                          ; preds = %for.body
  %10 = load i64, ptr %backoff, align 8, !dbg !13536, !tbaa !4039
  store i64 %10, ptr %min_backoff, align 8, !dbg !13537, !tbaa !4039
  br label %if.end, !dbg !13538

if.end:                                           ; preds = %if.then, %for.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %backoff) #16, !dbg !13539
  br label %for.inc, !dbg !13540

for.inc:                                          ; preds = %if.end
  %11 = load ptr, ptr %rktp_tmp, align 8, !dbg !13523, !tbaa !3910
  store ptr %11, ptr %rktp, align 8, !dbg !13523, !tbaa !3910
  br label %for.cond, !dbg !13523, !llvm.loop !13541

for.end:                                          ; preds = %land.end
  %12 = load i64, ptr %min_backoff, align 8, !dbg !13543, !tbaa !4039
  call void @llvm.lifetime.end.p0(i64 8, ptr %min_backoff) #16, !dbg !13544
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp_tmp) #16, !dbg !13544
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp) #16, !dbg !13544
  ret i64 %12, !dbg !13545
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rd_kafka_broker_ops_io_serve(ptr noundef %rkb, i64 noundef %abs_timeout) #0 !dbg !13546 {
entry:
  %rkb.addr = alloca ptr, align 8
  %abs_timeout.addr = alloca i64, align 8
  %now = alloca i64, align 8
  %wakeup = alloca i8, align 1
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13550, metadata !DIExpression()), !dbg !13554
  store i64 %abs_timeout, ptr %abs_timeout.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %abs_timeout.addr, metadata !13551, metadata !DIExpression()), !dbg !13555
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !13556
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !13552, metadata !DIExpression()), !dbg !13557
  call void @llvm.lifetime.start.p0(i64 1, ptr %wakeup) #16, !dbg !13558
  tail call void @llvm.dbg.declare(metadata ptr %wakeup, metadata !13553, metadata !DIExpression()), !dbg !13559
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13560, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !13560
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !13560, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 23, !dbg !13560
  %call = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !13560
  %and = and i32 %call, 1, !dbg !13560
  %conv = sext i32 %and to i64, !dbg !13560
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13560
  %tobool = icmp ne i64 %expval, 0, !dbg !13560
  br i1 %tobool, label %if.then, label %if.else, !dbg !13562

if.then:                                          ; preds = %entry
  %call1 = call i64 @rd_clock(), !dbg !13563
  %add = add nsw i64 %call1, 1000, !dbg !13564
  store i64 %add, ptr %abs_timeout.addr, align 8, !dbg !13565, !tbaa !4039
  br label %if.end16, !dbg !13566

if.else:                                          ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !13567, !tbaa !3910
  %call2 = call i32 @rd_kafka_broker_needs_connection(ptr noundef %2), !dbg !13567
  %conv3 = sext i32 %call2 to i64, !dbg !13567
  %expval4 = call i64 @llvm.expect.i64(i64 %conv3, i64 0), !dbg !13567
  %tobool5 = icmp ne i64 %expval4, 0, !dbg !13567
  br i1 %tobool5, label %if.then6, label %if.else7, !dbg !13569

if.then6:                                         ; preds = %if.else
  store i64 0, ptr %abs_timeout.addr, align 8, !dbg !13570, !tbaa !4039
  br label %if.end15, !dbg !13571

if.else7:                                         ; preds = %if.else
  %3 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13572, !tbaa !4039
  %cmp = icmp eq i64 %3, -1, !dbg !13572
  %conv8 = zext i1 %cmp to i32, !dbg !13572
  %conv9 = sext i32 %conv8 to i64, !dbg !13572
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !13572
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !13572
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !13574

if.then12:                                        ; preds = %if.else7
  %call13 = call i64 @rd_clock(), !dbg !13575
  %add14 = add nsw i64 %call13, 1000000, !dbg !13576
  store i64 %add14, ptr %abs_timeout.addr, align 8, !dbg !13577, !tbaa !4039
  br label %if.end, !dbg !13578

if.end:                                           ; preds = %if.then12, %if.else7
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then6
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !13579, !tbaa !3910
  %rkb_transport = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 5, !dbg !13579
  %5 = load ptr, ptr %rkb_transport, align 8, !dbg !13579, !tbaa !4518
  %cmp17 = icmp ne ptr %5, null, !dbg !13579
  %conv18 = zext i1 %cmp17 to i32, !dbg !13579
  %conv19 = sext i32 %conv18 to i64, !dbg !13579
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 1), !dbg !13579
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !13579
  br i1 %tobool21, label %if.then22, label %if.end37, !dbg !13581

if.then22:                                        ; preds = %if.end16
  %6 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13582, !tbaa !4039
  %cmp23 = icmp sgt i64 %6, 0, !dbg !13585
  br i1 %cmp23, label %land.lhs.true, label %if.end29, !dbg !13586

land.lhs.true:                                    ; preds = %if.then22
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !13587, !tbaa !3910
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %7, i32 0, i32 8, !dbg !13588
  %8 = load ptr, ptr %rkb_ops, align 8, !dbg !13588, !tbaa !5475
  %call25 = call i32 @rd_kafka_q_len(ptr noundef %8), !dbg !13589
  %cmp26 = icmp sgt i32 %call25, 0, !dbg !13590
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !13591

if.then28:                                        ; preds = %land.lhs.true
  store i64 0, ptr %abs_timeout.addr, align 8, !dbg !13592, !tbaa !4039
  br label %if.end29, !dbg !13593

if.end29:                                         ; preds = %if.then28, %land.lhs.true, %if.then22
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !13594, !tbaa !3910
  %rkb_transport30 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 5, !dbg !13596
  %10 = load ptr, ptr %rkb_transport30, align 8, !dbg !13596, !tbaa !4518
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !13597, !tbaa !3910
  %rkb_ops31 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 8, !dbg !13598
  %12 = load ptr, ptr %rkb_ops31, align 8, !dbg !13598, !tbaa !5475
  %13 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13599, !tbaa !4039
  %call32 = call i32 @rd_timeout_remains(i64 noundef %13), !dbg !13600
  %call33 = call i32 @rd_kafka_transport_io_serve(ptr noundef %10, ptr noundef %12, i32 noundef %call32), !dbg !13601
  %tobool34 = icmp ne i32 %call33, 0, !dbg !13601
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !13602

if.then35:                                        ; preds = %if.end29
  store i64 0, ptr %abs_timeout.addr, align 8, !dbg !13603, !tbaa !4039
  br label %if.end36, !dbg !13604

if.end36:                                         ; preds = %if.then35, %if.end29
  br label %if.end37, !dbg !13605

if.end37:                                         ; preds = %if.end36, %if.end16
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !13606, !tbaa !3910
  %15 = load i64, ptr %abs_timeout.addr, align 8, !dbg !13607, !tbaa !4039
  %call38 = call i64 @rd_timeout_remains_us(i64 noundef %15), !dbg !13608
  %call39 = call i32 @rd_kafka_broker_ops_serve(ptr noundef %14, i64 noundef %call38), !dbg !13609
  %conv40 = trunc i32 %call39 to i8, !dbg !13609
  store i8 %conv40, ptr %wakeup, align 1, !dbg !13610, !tbaa !4126
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !13611, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 28, !dbg !13612
  %wakeups = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 12, !dbg !13613
  %call41 = call i64 @rd_atomic64_add(ptr noundef %wakeups, i64 noundef 1), !dbg !13614
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !13615, !tbaa !3910
  %call42 = call i32 @rd_kafka_broker_needs_connection(ptr noundef %17), !dbg !13615
  %tobool43 = icmp ne i32 %call42, 0, !dbg !13615
  br i1 %tobool43, label %land.rhs, label %land.end, !dbg !13615

land.rhs:                                         ; preds = %if.end37
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !13615, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 19, !dbg !13615
  %19 = load i32, ptr %rkb_state, align 4, !dbg !13615, !tbaa !4130
  %cmp44 = icmp eq i32 %19, 0, !dbg !13615
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end37
  %20 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs ], !dbg !13617
  %land.ext = zext i1 %20 to i32, !dbg !13615
  %conv46 = sext i32 %land.ext to i64, !dbg !13615
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 0), !dbg !13615
  %tobool48 = icmp ne i64 %expval47, 0, !dbg !13615
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !13618

if.then49:                                        ; preds = %land.end
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !13619, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 9, !dbg !13619
  %call50 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !13619
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !13621, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %22, i32 noundef 2), !dbg !13622
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !13623, !tbaa !3910
  %rkb_lock51 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 9, !dbg !13623
  %call52 = call i32 @mtx_unlock(ptr noundef %rkb_lock51), !dbg !13623
  store i8 1, ptr %wakeup, align 1, !dbg !13624, !tbaa !4126
  br label %if.end53, !dbg !13625

if.end53:                                         ; preds = %if.then49, %land.end
  %call54 = call i64 @rd_clock(), !dbg !13626
  store i64 %call54, ptr %now, align 8, !dbg !13627, !tbaa !4039
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !13628, !tbaa !3910
  %rkb_timeout_scan_intvl = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 21, !dbg !13628
  %25 = load i64, ptr %now, align 8, !dbg !13628, !tbaa !4039
  %call55 = call i64 @rd_interval0(ptr noundef %rkb_timeout_scan_intvl, i64 noundef 1000000, i64 noundef %25, i32 noundef 0), !dbg !13628
  %cmp56 = icmp sgt i64 %call55, 0, !dbg !13630
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !13631

if.then58:                                        ; preds = %if.end53
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !13632, !tbaa !3910
  %27 = load i64, ptr %now, align 8, !dbg !13633, !tbaa !4039
  call void @rd_kafka_broker_timeout_scan(ptr noundef %26, i64 noundef %27), !dbg !13634
  br label %if.end59, !dbg !13634

if.end59:                                         ; preds = %if.then58, %if.end53
  %28 = load i8, ptr %wakeup, align 1, !dbg !13635, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 1, ptr %wakeup) #16, !dbg !13636
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !13636
  ret i8 %28, !dbg !13637
}

; Function Attrs: nounwind uwtable
define internal i64 @rd_kafka_broker_toppars_timeout_scan(ptr noundef %rkb, i64 noundef %now) #0 !dbg !13638 {
entry:
  %rkb.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %rktp = alloca ptr, align 8
  %next = alloca i64, align 8
  %this_next = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13642, metadata !DIExpression()), !dbg !13650
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !13643, metadata !DIExpression()), !dbg !13651
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp) #16, !dbg !13652
  tail call void @llvm.dbg.declare(metadata ptr %rktp, metadata !13644, metadata !DIExpression()), !dbg !13653
  call void @llvm.lifetime.start.p0(i64 8, ptr %next) #16, !dbg !13654
  tail call void @llvm.dbg.declare(metadata ptr %next, metadata !13645, metadata !DIExpression()), !dbg !13655
  %0 = load i64, ptr %now.addr, align 8, !dbg !13656, !tbaa !4039
  %add = add nsw i64 %0, 1000000, !dbg !13657
  store i64 %add, ptr %next, align 8, !dbg !13655, !tbaa !4039
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !13658, !tbaa !3910
  %rkb_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 11, !dbg !13658
  %tqh_first = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars, i32 0, i32 0, !dbg !13658
  %2 = load ptr, ptr %tqh_first, align 8, !dbg !13658, !tbaa !4637
  store ptr %2, ptr %rktp, align 8, !dbg !13658, !tbaa !3910
  br label %for.cond, !dbg !13658

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load ptr, ptr %rktp, align 8, !dbg !13659, !tbaa !3910
  %cmp = icmp ne ptr %3, null, !dbg !13659
  br i1 %cmp, label %for.body, label %for.end, !dbg !13658

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %this_next) #16, !dbg !13660
  tail call void @llvm.dbg.declare(metadata ptr %this_next, metadata !13646, metadata !DIExpression()), !dbg !13661
  %4 = load ptr, ptr %rktp, align 8, !dbg !13662, !tbaa !3910
  %rktp_lock = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %4, i32 0, i32 14, !dbg !13662
  %call = call i32 @mtx_lock(ptr noundef %rktp_lock), !dbg !13662
  %5 = load ptr, ptr %rktp, align 8, !dbg !13663, !tbaa !3910
  %rktp_broker = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %5, i32 0, i32 11, !dbg !13663
  %6 = load ptr, ptr %rktp_broker, align 8, !dbg !13663, !tbaa !4644
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !13663, !tbaa !3910
  %cmp1 = icmp ne ptr %6, %7, !dbg !13663
  %conv = zext i1 %cmp1 to i32, !dbg !13663
  %conv2 = sext i32 %conv to i64, !dbg !13663
  %expval = call i64 @llvm.expect.i64(i64 %conv2, i64 0), !dbg !13663
  %tobool = icmp ne i64 %expval, 0, !dbg !13663
  br i1 %tobool, label %if.then, label %if.end, !dbg !13665

if.then:                                          ; preds = %for.body
  %8 = load ptr, ptr %rktp, align 8, !dbg !13666, !tbaa !3910
  %rktp_lock3 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %8, i32 0, i32 14, !dbg !13666
  %call4 = call i32 @mtx_unlock(ptr noundef %rktp_lock3), !dbg !13666
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13668

if.end:                                           ; preds = %for.body
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !13669, !tbaa !3910
  %10 = load ptr, ptr %rktp, align 8, !dbg !13670, !tbaa !3910
  %11 = load i64, ptr %now.addr, align 8, !dbg !13671, !tbaa !4039
  %call5 = call i32 @rd_kafka_broker_toppar_msgq_scan(ptr noundef %9, ptr noundef %10, i64 noundef %11, ptr noundef %this_next), !dbg !13672
  %12 = load ptr, ptr %rktp, align 8, !dbg !13673, !tbaa !3910
  %rktp_lock6 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %12, i32 0, i32 14, !dbg !13673
  %call7 = call i32 @mtx_unlock(ptr noundef %rktp_lock6), !dbg !13673
  %13 = load i64, ptr %this_next, align 8, !dbg !13674, !tbaa !4039
  %tobool8 = icmp ne i64 %13, 0, !dbg !13674
  br i1 %tobool8, label %land.lhs.true, label %if.end12, !dbg !13676

land.lhs.true:                                    ; preds = %if.end
  %14 = load i64, ptr %this_next, align 8, !dbg !13677, !tbaa !4039
  %15 = load i64, ptr %next, align 8, !dbg !13678, !tbaa !4039
  %cmp9 = icmp slt i64 %14, %15, !dbg !13679
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !13680

if.then11:                                        ; preds = %land.lhs.true
  %16 = load i64, ptr %this_next, align 8, !dbg !13681, !tbaa !4039
  store i64 %16, ptr %next, align 8, !dbg !13682, !tbaa !4039
  br label %if.end12, !dbg !13683

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13684
  br label %cleanup, !dbg !13684

cleanup:                                          ; preds = %if.end12, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %this_next) #16, !dbg !13684
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 4, label %for.inc
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !13685

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %17 = load ptr, ptr %rktp, align 8, !dbg !13659, !tbaa !3910
  %rktp_rkblink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %17, i32 0, i32 1, !dbg !13659
  %tqe_next = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink, i32 0, i32 0, !dbg !13659
  %18 = load ptr, ptr %tqe_next, align 8, !dbg !13659, !tbaa !4674
  store ptr %18, ptr %rktp, align 8, !dbg !13659, !tbaa !3910
  br label %for.cond, !dbg !13659, !llvm.loop !13686

for.end:                                          ; preds = %for.cond
  %19 = load i64, ptr %next, align 8, !dbg !13688, !tbaa !4039
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %next) #16, !dbg !13689
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp) #16, !dbg !13689
  ret i64 %19, !dbg !13690

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !13691 i64 @rd_kafka_broker_consumer_toppar_serve(ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_q_len(ptr noundef %rkq) #4 !dbg !13694 {
entry:
  %rkq.addr = alloca ptr, align 8
  %qlen = alloca i32, align 4
  %fwdq = alloca ptr, align 8
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !13698, metadata !DIExpression()), !dbg !13701
  call void @llvm.lifetime.start.p0(i64 4, ptr %qlen) #16, !dbg !13702
  tail call void @llvm.dbg.declare(metadata ptr %qlen, metadata !13699, metadata !DIExpression()), !dbg !13703
  call void @llvm.lifetime.start.p0(i64 8, ptr %fwdq) #16, !dbg !13704
  tail call void @llvm.dbg.declare(metadata ptr %fwdq, metadata !13700, metadata !DIExpression()), !dbg !13705
  %0 = load ptr, ptr %rkq.addr, align 8, !dbg !13706, !tbaa !3910
  %rkq_lock = getelementptr inbounds %struct.rd_kafka_q_s, ptr %0, i32 0, i32 0, !dbg !13707
  %call = call i32 @mtx_lock(ptr noundef %rkq_lock), !dbg !13708
  %1 = load ptr, ptr %rkq.addr, align 8, !dbg !13709, !tbaa !3910
  %call1 = call ptr @rd_kafka_q_fwd_get(ptr noundef %1, i32 noundef 0), !dbg !13711
  store ptr %call1, ptr %fwdq, align 8, !dbg !13712, !tbaa !3910
  %tobool = icmp ne ptr %call1, null, !dbg !13712
  br i1 %tobool, label %if.else, label %if.then, !dbg !13713

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %rkq.addr, align 8, !dbg !13714, !tbaa !3910
  %rkq_qlen = getelementptr inbounds %struct.rd_kafka_q_s, ptr %2, i32 0, i32 4, !dbg !13716
  %3 = load i32, ptr %rkq_qlen, align 8, !dbg !13716, !tbaa !11629
  store i32 %3, ptr %qlen, align 4, !dbg !13717, !tbaa !3959
  %4 = load ptr, ptr %rkq.addr, align 8, !dbg !13718, !tbaa !3910
  %rkq_lock2 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %4, i32 0, i32 0, !dbg !13719
  %call3 = call i32 @mtx_unlock(ptr noundef %rkq_lock2), !dbg !13720
  br label %if.end, !dbg !13721

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %rkq.addr, align 8, !dbg !13722, !tbaa !3910
  %rkq_lock4 = getelementptr inbounds %struct.rd_kafka_q_s, ptr %5, i32 0, i32 0, !dbg !13724
  %call5 = call i32 @mtx_unlock(ptr noundef %rkq_lock4), !dbg !13725
  %6 = load ptr, ptr %fwdq, align 8, !dbg !13726, !tbaa !3910
  %call6 = call i32 @rd_kafka_q_len(ptr noundef %6), !dbg !13727
  store i32 %call6, ptr %qlen, align 4, !dbg !13728, !tbaa !3959
  %7 = load ptr, ptr %fwdq, align 8, !dbg !13729, !tbaa !3910
  call void @rd_kafka_q_destroy0(ptr noundef %7, i32 noundef 0), !dbg !13729
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, ptr %qlen, align 4, !dbg !13730, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 8, ptr %fwdq) #16, !dbg !13731
  call void @llvm.lifetime.end.p0(i64 4, ptr %qlen) #16, !dbg !13731
  ret i32 %8, !dbg !13732
}

declare !dbg !13733 i32 @rd_kafka_transport_io_serve(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_timeout_scan(ptr noundef %rkb, i64 noundef %now) #0 !dbg !13736 {
entry:
  %rkb.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %inflight_cnt = alloca i32, align 4
  %retry_cnt = alloca i32, align 4
  %outq_cnt = alloca i32, align 4
  %partial_cnt = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  %rttinfo = alloca [32 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13738, metadata !DIExpression()), !dbg !13751
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !13739, metadata !DIExpression()), !dbg !13752
  call void @llvm.lifetime.start.p0(i64 4, ptr %inflight_cnt) #16, !dbg !13753
  tail call void @llvm.dbg.declare(metadata ptr %inflight_cnt, metadata !13740, metadata !DIExpression()), !dbg !13754
  call void @llvm.lifetime.start.p0(i64 4, ptr %retry_cnt) #16, !dbg !13753
  tail call void @llvm.dbg.declare(metadata ptr %retry_cnt, metadata !13741, metadata !DIExpression()), !dbg !13755
  call void @llvm.lifetime.start.p0(i64 4, ptr %outq_cnt) #16, !dbg !13753
  tail call void @llvm.dbg.declare(metadata ptr %outq_cnt, metadata !13742, metadata !DIExpression()), !dbg !13756
  call void @llvm.lifetime.start.p0(i64 4, ptr %partial_cnt) #16, !dbg !13757
  tail call void @llvm.dbg.declare(metadata ptr %partial_cnt, metadata !13743, metadata !DIExpression()), !dbg !13758
  store i32 0, ptr %partial_cnt, align 4, !dbg !13758, !tbaa !3959
  br label %do.body, !dbg !13759

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !13760, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !13760
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !13760, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %1), !dbg !13760
  %tobool = icmp ne i32 %call, 0, !dbg !13760
  %lnot = xor i1 %tobool, true, !dbg !13760
  %lnot.ext = zext i1 %lnot to i32, !dbg !13760
  %conv = sext i32 %lnot.ext to i64, !dbg !13760
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13760
  %tobool1 = icmp ne i64 %expval, 0, !dbg !13760
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13763

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !13760, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !13760
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !13760, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 905, ptr noundef @__FUNCTION__.rd_kafka_broker_timeout_scan, ptr noundef %3, ptr noundef @.str.21) #17, !dbg !13760
  unreachable, !dbg !13760

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13763

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !13763

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !13764, !tbaa !3910
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !13765, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 36, !dbg !13766
  %6 = load i64, ptr %now.addr, align 8, !dbg !13767, !tbaa !4039
  %call2 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %4, i32 noundef 1, ptr noundef %rkb_waitresps, ptr noundef null, i16 noundef signext -1, i32 noundef -185, i64 noundef %6, ptr noundef @.str.242, i32 noundef 5), !dbg !13768
  store i32 %call2, ptr %inflight_cnt, align 4, !dbg !13769, !tbaa !3959
  %7 = load ptr, ptr %rkb.addr, align 8, !dbg !13770, !tbaa !3910
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !13771, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 37, !dbg !13772
  %9 = load i64, ptr %now.addr, align 8, !dbg !13773, !tbaa !4039
  %call3 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %7, i32 noundef 0, ptr noundef %rkb_retrybufs, ptr noundef null, i16 noundef signext -1, i32 noundef -166, i64 noundef %9, ptr noundef @.str.243, i32 noundef 0), !dbg !13774
  store i32 %call3, ptr %retry_cnt, align 4, !dbg !13775, !tbaa !3959
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !13776, !tbaa !3910
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !13777, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 35, !dbg !13778
  %12 = load i64, ptr %now.addr, align 8, !dbg !13779, !tbaa !4039
  %call4 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %10, i32 noundef 0, ptr noundef %rkb_outbufs, ptr noundef %partial_cnt, i16 noundef signext -1, i32 noundef -166, i64 noundef %12, ptr noundef @.str.244, i32 noundef 0), !dbg !13780
  store i32 %call4, ptr %outq_cnt, align 4, !dbg !13781, !tbaa !3959
  %13 = load i32, ptr %inflight_cnt, align 4, !dbg !13782, !tbaa !3959
  %14 = load i32, ptr %retry_cnt, align 4, !dbg !13783, !tbaa !3959
  %add = add nsw i32 %13, %14, !dbg !13784
  %15 = load i32, ptr %outq_cnt, align 4, !dbg !13785, !tbaa !3959
  %add5 = add nsw i32 %add, %15, !dbg !13786
  %16 = load i32, ptr %partial_cnt, align 4, !dbg !13787, !tbaa !3959
  %add6 = add nsw i32 %add5, %16, !dbg !13788
  %cmp = icmp sgt i32 %add6, 0, !dbg !13789
  br i1 %cmp, label %if.then8, label %if.end52, !dbg !13790

if.then8:                                         ; preds = %do.end
  br label %do.body9, !dbg !13791

do.body9:                                         ; preds = %if.then8
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !13792
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !13744, metadata !DIExpression()), !dbg !13792
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !13792, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 49, !dbg !13792
  %call10 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !13792
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !13792
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !13792, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 48, !dbg !13792
  %19 = load ptr, ptr %rkb_logname, align 8, !dbg !13792, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %19, i64 noundef 256), !dbg !13792
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !13792, !tbaa !3910
  %rkb_logname_lock11 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 49, !dbg !13792
  %call12 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock11), !dbg !13792
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !13792, !tbaa !3910
  %rkb_rk13 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 32, !dbg !13792
  %22 = load ptr, ptr %rkb_rk13, align 8, !dbg !13792, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %22, i32 0, i32 18, !dbg !13792
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !13792, !tbaa !3910
  %rkb_rk14 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 32, !dbg !13792
  %24 = load ptr, ptr %rkb_rk14, align 8, !dbg !13792, !tbaa !4139
  %arraydecay15 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !13792
  %25 = load i32, ptr %inflight_cnt, align 4, !dbg !13792, !tbaa !3959
  %26 = load i32, ptr %retry_cnt, align 4, !dbg !13792, !tbaa !3959
  %27 = load i32, ptr %outq_cnt, align 4, !dbg !13792, !tbaa !3959
  %28 = load i32, ptr %partial_cnt, align 4, !dbg !13792, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf, ptr noundef %24, ptr noundef %arraydecay15, i32 noundef 4, i32 noundef 0, ptr noundef @.str.245, ptr noundef @.str.246, i32 noundef %25, i32 noundef %26, i32 noundef %27, i32 noundef %28), !dbg !13792
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !13791
  br label %do.cond16, !dbg !13792

do.cond16:                                        ; preds = %do.body9
  br label %do.end17, !dbg !13792

do.end17:                                         ; preds = %do.cond16
  %29 = load i32, ptr %inflight_cnt, align 4, !dbg !13793, !tbaa !3959
  %30 = load i32, ptr %outq_cnt, align 4, !dbg !13794, !tbaa !3959
  %add18 = add nsw i32 %29, %30, !dbg !13795
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !13796, !tbaa !3910
  %rkb_req_timeouts = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 29, !dbg !13797
  %32 = load i32, ptr %rkb_req_timeouts, align 8, !dbg !13798, !tbaa !4540
  %add19 = add nsw i32 %32, %add18, !dbg !13798
  store i32 %add19, ptr %rkb_req_timeouts, align 8, !dbg !13798, !tbaa !4540
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !13799, !tbaa !3910
  %rkb_c = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 28, !dbg !13800
  %req_timeouts = getelementptr inbounds %struct.anon.2, ptr %rkb_c, i32 0, i32 4, !dbg !13801
  %34 = load i32, ptr %inflight_cnt, align 4, !dbg !13802, !tbaa !3959
  %35 = load i32, ptr %outq_cnt, align 4, !dbg !13803, !tbaa !3959
  %add20 = add nsw i32 %34, %35, !dbg !13804
  %conv21 = sext i32 %add20 to i64, !dbg !13802
  %call22 = call i64 @rd_atomic64_add(ptr noundef %req_timeouts, i64 noundef %conv21), !dbg !13805
  %36 = load i32, ptr %partial_cnt, align 4, !dbg !13806, !tbaa !3959
  %cmp23 = icmp sgt i32 %36, 0, !dbg !13807
  br i1 %cmp23, label %if.then37, label %lor.lhs.false, !dbg !13808

lor.lhs.false:                                    ; preds = %do.end17
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !13809, !tbaa !3910
  %rkb_rk25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 32, !dbg !13810
  %38 = load ptr, ptr %rkb_rk25, align 8, !dbg !13810, !tbaa !4139
  %rk_conf26 = getelementptr inbounds %struct.rd_kafka_s, ptr %38, i32 0, i32 18, !dbg !13811
  %socket_max_fails = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf26, i32 0, i32 22, !dbg !13812
  %39 = load i32, ptr %socket_max_fails, align 4, !dbg !13812, !tbaa !13813
  %tobool27 = icmp ne i32 %39, 0, !dbg !13809
  br i1 %tobool27, label %land.lhs.true, label %if.end51, !dbg !13814

land.lhs.true:                                    ; preds = %lor.lhs.false
  %40 = load ptr, ptr %rkb.addr, align 8, !dbg !13815, !tbaa !3910
  %rkb_req_timeouts28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %40, i32 0, i32 29, !dbg !13816
  %41 = load i32, ptr %rkb_req_timeouts28, align 8, !dbg !13816, !tbaa !4540
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !13817, !tbaa !3910
  %rkb_rk29 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 32, !dbg !13818
  %43 = load ptr, ptr %rkb_rk29, align 8, !dbg !13818, !tbaa !4139
  %rk_conf30 = getelementptr inbounds %struct.rd_kafka_s, ptr %43, i32 0, i32 18, !dbg !13819
  %socket_max_fails31 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf30, i32 0, i32 22, !dbg !13820
  %44 = load i32, ptr %socket_max_fails31, align 4, !dbg !13820, !tbaa !13813
  %cmp32 = icmp sge i32 %41, %44, !dbg !13821
  br i1 %cmp32, label %land.lhs.true34, label %if.end51, !dbg !13822

land.lhs.true34:                                  ; preds = %land.lhs.true
  %45 = load ptr, ptr %rkb.addr, align 8, !dbg !13823, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %45, i32 0, i32 19, !dbg !13824
  %46 = load i32, ptr %rkb_state, align 4, !dbg !13824, !tbaa !4130
  %cmp35 = icmp uge i32 %46, 6, !dbg !13825
  br i1 %cmp35, label %if.then37, label %if.end51, !dbg !13826

if.then37:                                        ; preds = %land.lhs.true34, %do.end17
  call void @llvm.lifetime.start.p0(i64 32, ptr %rttinfo) #16, !dbg !13827
  tail call void @llvm.dbg.declare(metadata ptr %rttinfo, metadata !13748, metadata !DIExpression()), !dbg !13828
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !13829, !tbaa !3910
  %rkb_avg_rtt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 40, !dbg !13830
  %48 = load i64, ptr %now.addr, align 8, !dbg !13831, !tbaa !4039
  call void @rd_avg_calc(ptr noundef %rkb_avg_rtt, i64 noundef %48), !dbg !13832
  %49 = load ptr, ptr %rkb.addr, align 8, !dbg !13833, !tbaa !3910
  %rkb_avg_rtt38 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %49, i32 0, i32 40, !dbg !13835
  %ra_v = getelementptr inbounds %struct.rd_avg_s, ptr %rkb_avg_rtt38, i32 0, i32 0, !dbg !13836
  %avg = getelementptr inbounds %struct.anon.4, ptr %ra_v, i32 0, i32 2, !dbg !13837
  %50 = load i64, ptr %avg, align 8, !dbg !13837, !tbaa !13838
  %tobool39 = icmp ne i64 %50, 0, !dbg !13833
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !13839

if.then40:                                        ; preds = %if.then37
  %arraydecay41 = getelementptr inbounds [32 x i8], ptr %rttinfo, i64 0, i64 0, !dbg !13840
  %51 = load ptr, ptr %rkb.addr, align 8, !dbg !13840, !tbaa !3910
  %rkb_avg_rtt42 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %51, i32 0, i32 40, !dbg !13840
  %ra_v43 = getelementptr inbounds %struct.rd_avg_s, ptr %rkb_avg_rtt42, i32 0, i32 0, !dbg !13840
  %avg44 = getelementptr inbounds %struct.anon.4, ptr %ra_v43, i32 0, i32 2, !dbg !13840
  %52 = load i64, ptr %avg44, align 8, !dbg !13840, !tbaa !13838
  %conv45 = sitofp i64 %52 to float, !dbg !13840
  %div = fdiv float %conv45, 1.000000e+03, !dbg !13840
  %conv46 = fpext float %div to double, !dbg !13840
  %call47 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay41, i64 noundef 32, ptr noundef @.str.247, double noundef %conv46) #16, !dbg !13840
  br label %if.end48, !dbg !13840

if.else:                                          ; preds = %if.then37
  %arrayidx = getelementptr inbounds [32 x i8], ptr %rttinfo, i64 0, i64 0, !dbg !13841
  store i8 0, ptr %arrayidx, align 16, !dbg !13842, !tbaa !4126
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then40
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !13843, !tbaa !3910
  %54 = load ptr, ptr %rkb.addr, align 8, !dbg !13844, !tbaa !3910
  %rkb_req_timeouts49 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %54, i32 0, i32 29, !dbg !13845
  %55 = load i32, ptr %rkb_req_timeouts49, align 8, !dbg !13845, !tbaa !4540
  %arraydecay50 = getelementptr inbounds [32 x i8], ptr %rttinfo, i64 0, i64 0, !dbg !13846
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %53, i32 noundef 3, i32 noundef -185, ptr noundef @.str.248, i32 noundef %55, ptr noundef %arraydecay50), !dbg !13847
  call void @llvm.lifetime.end.p0(i64 32, ptr %rttinfo) #16, !dbg !13848
  br label %if.end51, !dbg !13849

if.end51:                                         ; preds = %if.end48, %land.lhs.true34, %land.lhs.true, %lor.lhs.false
  br label %if.end52, !dbg !13850

if.end52:                                         ; preds = %if.end51, %do.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %partial_cnt) #16, !dbg !13851
  call void @llvm.lifetime.end.p0(i64 4, ptr %outq_cnt) #16, !dbg !13851
  call void @llvm.lifetime.end.p0(i64 4, ptr %retry_cnt) #16, !dbg !13851
  call void @llvm.lifetime.end.p0(i64 4, ptr %inflight_cnt) #16, !dbg !13851
  ret void, !dbg !13851
}

; Function Attrs: nounwind uwtable
define internal void @rd_avg_calc(ptr noundef %ra, i64 noundef %now) #0 !dbg !13852 {
entry:
  %ra.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %elapsed = alloca i64, align 8
  store ptr %ra, ptr %ra.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %ra.addr, metadata !13856, metadata !DIExpression()), !dbg !13861
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !13857, metadata !DIExpression()), !dbg !13862
  %0 = load ptr, ptr %ra.addr, align 8, !dbg !13863, !tbaa !3910
  %ra_type = getelementptr inbounds %struct.rd_avg_s, ptr %0, i32 0, i32 3, !dbg !13864
  %1 = load i32, ptr %ra_type, align 4, !dbg !13864, !tbaa !9424
  %cmp = icmp eq i32 %1, 0, !dbg !13865
  br i1 %cmp, label %if.then, label %if.else8, !dbg !13866

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ra.addr, align 8, !dbg !13867, !tbaa !3910
  %ra_v = getelementptr inbounds %struct.rd_avg_s, ptr %2, i32 0, i32 0, !dbg !13870
  %cnt = getelementptr inbounds %struct.anon.4, ptr %ra_v, i32 0, i32 4, !dbg !13871
  %3 = load i32, ptr %cnt, align 8, !dbg !13871, !tbaa !8284
  %tobool = icmp ne i32 %3, 0, !dbg !13867
  br i1 %tobool, label %if.then1, label %if.else, !dbg !13872

if.then1:                                         ; preds = %if.then
  %4 = load ptr, ptr %ra.addr, align 8, !dbg !13873, !tbaa !3910
  %ra_v2 = getelementptr inbounds %struct.rd_avg_s, ptr %4, i32 0, i32 0, !dbg !13874
  %sum = getelementptr inbounds %struct.anon.4, ptr %ra_v2, i32 0, i32 3, !dbg !13875
  %5 = load i64, ptr %sum, align 8, !dbg !13875, !tbaa !8279
  %6 = load ptr, ptr %ra.addr, align 8, !dbg !13876, !tbaa !3910
  %ra_v3 = getelementptr inbounds %struct.rd_avg_s, ptr %6, i32 0, i32 0, !dbg !13877
  %cnt4 = getelementptr inbounds %struct.anon.4, ptr %ra_v3, i32 0, i32 4, !dbg !13878
  %7 = load i32, ptr %cnt4, align 8, !dbg !13878, !tbaa !8284
  %conv = sext i32 %7 to i64, !dbg !13876
  %div = sdiv i64 %5, %conv, !dbg !13879
  %8 = load ptr, ptr %ra.addr, align 8, !dbg !13880, !tbaa !3910
  %ra_v5 = getelementptr inbounds %struct.rd_avg_s, ptr %8, i32 0, i32 0, !dbg !13881
  %avg = getelementptr inbounds %struct.anon.4, ptr %ra_v5, i32 0, i32 2, !dbg !13882
  store i64 %div, ptr %avg, align 8, !dbg !13883, !tbaa !13884
  br label %if.end, !dbg !13880

if.else:                                          ; preds = %if.then
  %9 = load ptr, ptr %ra.addr, align 8, !dbg !13885, !tbaa !3910
  %ra_v6 = getelementptr inbounds %struct.rd_avg_s, ptr %9, i32 0, i32 0, !dbg !13886
  %avg7 = getelementptr inbounds %struct.anon.4, ptr %ra_v6, i32 0, i32 2, !dbg !13887
  store i64 0, ptr %avg7, align 8, !dbg !13888, !tbaa !13884
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end23, !dbg !13889

if.else8:                                         ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %elapsed) #16, !dbg !13890
  tail call void @llvm.dbg.declare(metadata ptr %elapsed, metadata !13858, metadata !DIExpression()), !dbg !13891
  %10 = load i64, ptr %now.addr, align 8, !dbg !13892, !tbaa !4039
  %11 = load ptr, ptr %ra.addr, align 8, !dbg !13893, !tbaa !3910
  %ra_v9 = getelementptr inbounds %struct.rd_avg_s, ptr %11, i32 0, i32 0, !dbg !13894
  %start = getelementptr inbounds %struct.anon.4, ptr %ra_v9, i32 0, i32 5, !dbg !13895
  %12 = load i64, ptr %start, align 8, !dbg !13895, !tbaa !9430
  %sub = sub nsw i64 %10, %12, !dbg !13896
  store i64 %sub, ptr %elapsed, align 8, !dbg !13891, !tbaa !4039
  %13 = load i64, ptr %elapsed, align 8, !dbg !13897, !tbaa !4039
  %tobool10 = icmp ne i64 %13, 0, !dbg !13897
  br i1 %tobool10, label %if.then11, label %if.else17, !dbg !13899

if.then11:                                        ; preds = %if.else8
  %14 = load ptr, ptr %ra.addr, align 8, !dbg !13900, !tbaa !3910
  %ra_v12 = getelementptr inbounds %struct.rd_avg_s, ptr %14, i32 0, i32 0, !dbg !13901
  %sum13 = getelementptr inbounds %struct.anon.4, ptr %ra_v12, i32 0, i32 3, !dbg !13902
  %15 = load i64, ptr %sum13, align 8, !dbg !13902, !tbaa !8279
  %mul = mul i64 %15, 1000000, !dbg !13903
  %16 = load i64, ptr %elapsed, align 8, !dbg !13904, !tbaa !4039
  %div14 = udiv i64 %mul, %16, !dbg !13905
  %17 = load ptr, ptr %ra.addr, align 8, !dbg !13906, !tbaa !3910
  %ra_v15 = getelementptr inbounds %struct.rd_avg_s, ptr %17, i32 0, i32 0, !dbg !13907
  %avg16 = getelementptr inbounds %struct.anon.4, ptr %ra_v15, i32 0, i32 2, !dbg !13908
  store i64 %div14, ptr %avg16, align 8, !dbg !13909, !tbaa !13884
  br label %if.end20, !dbg !13906

if.else17:                                        ; preds = %if.else8
  %18 = load ptr, ptr %ra.addr, align 8, !dbg !13910, !tbaa !3910
  %ra_v18 = getelementptr inbounds %struct.rd_avg_s, ptr %18, i32 0, i32 0, !dbg !13911
  %avg19 = getelementptr inbounds %struct.anon.4, ptr %ra_v18, i32 0, i32 2, !dbg !13912
  store i64 0, ptr %avg19, align 8, !dbg !13913, !tbaa !13884
  br label %if.end20

if.end20:                                         ; preds = %if.else17, %if.then11
  %19 = load i64, ptr %elapsed, align 8, !dbg !13914, !tbaa !4039
  %20 = load ptr, ptr %ra.addr, align 8, !dbg !13915, !tbaa !3910
  %ra_v21 = getelementptr inbounds %struct.rd_avg_s, ptr %20, i32 0, i32 0, !dbg !13916
  %start22 = getelementptr inbounds %struct.anon.4, ptr %ra_v21, i32 0, i32 5, !dbg !13917
  store i64 %19, ptr %start22, align 8, !dbg !13918, !tbaa !9430
  call void @llvm.lifetime.end.p0(i64 8, ptr %elapsed) #16, !dbg !13919
  br label %if.end23

if.end23:                                         ; preds = %if.end20, %if.end
  ret void, !dbg !13920
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_toppar_msgq_scan(ptr noundef %rkb, ptr noundef %rktp, i64 noundef %now, ptr noundef %abs_next_timeout) #0 !dbg !13921 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %rktp.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %abs_next_timeout.addr = alloca ptr, align 8
  %xtimedout = alloca %struct.rd_kafka_msgq_s, align 8
  %qtimedout = alloca %struct.rd_kafka_msgq_s, align 8
  %xcnt = alloca i32, align 4
  %qcnt = alloca i32, align 4
  %cnt = alloca i32, align 4
  %first = alloca i64, align 8
  %last = alloca i64, align 8
  %next = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !13926, metadata !DIExpression()), !dbg !13943
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !13927, metadata !DIExpression()), !dbg !13944
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !13928, metadata !DIExpression()), !dbg !13945
  store ptr %abs_next_timeout, ptr %abs_next_timeout.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %abs_next_timeout.addr, metadata !13929, metadata !DIExpression()), !dbg !13946
  call void @llvm.lifetime.start.p0(i64 64, ptr %xtimedout) #16, !dbg !13947
  tail call void @llvm.dbg.declare(metadata ptr %xtimedout, metadata !13930, metadata !DIExpression()), !dbg !13948
  call void @llvm.memset.p0.i64(ptr align 8 %xtimedout, i8 0, i64 64, i1 false), !dbg !13948
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %xtimedout, i32 0, i32 0, !dbg !13949
  %tqh_last = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 1, !dbg !13949
  %rkmq_msgs1 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %xtimedout, i32 0, i32 0, !dbg !13949
  %tqh_first = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs1, i32 0, i32 0, !dbg !13949
  store ptr %tqh_first, ptr %tqh_last, align 8, !dbg !13949, !tbaa !8634
  call void @llvm.lifetime.start.p0(i64 64, ptr %qtimedout) #16, !dbg !13950
  tail call void @llvm.dbg.declare(metadata ptr %qtimedout, metadata !13931, metadata !DIExpression()), !dbg !13951
  call void @llvm.memset.p0.i64(ptr align 8 %qtimedout, i8 0, i64 64, i1 false), !dbg !13951
  %rkmq_msgs2 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %qtimedout, i32 0, i32 0, !dbg !13952
  %tqh_last4 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs2, i32 0, i32 1, !dbg !13952
  %rkmq_msgs5 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %qtimedout, i32 0, i32 0, !dbg !13952
  %tqh_first6 = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs5, i32 0, i32 0, !dbg !13952
  store ptr %tqh_first6, ptr %tqh_last4, align 8, !dbg !13952, !tbaa !8634
  call void @llvm.lifetime.start.p0(i64 4, ptr %xcnt) #16, !dbg !13953
  tail call void @llvm.dbg.declare(metadata ptr %xcnt, metadata !13932, metadata !DIExpression()), !dbg !13954
  call void @llvm.lifetime.start.p0(i64 4, ptr %qcnt) #16, !dbg !13953
  tail call void @llvm.dbg.declare(metadata ptr %qcnt, metadata !13933, metadata !DIExpression()), !dbg !13955
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !13953
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !13934, metadata !DIExpression()), !dbg !13956
  call void @llvm.lifetime.start.p0(i64 8, ptr %first) #16, !dbg !13957
  tail call void @llvm.dbg.declare(metadata ptr %first, metadata !13935, metadata !DIExpression()), !dbg !13958
  call void @llvm.lifetime.start.p0(i64 8, ptr %last) #16, !dbg !13957
  tail call void @llvm.dbg.declare(metadata ptr %last, metadata !13936, metadata !DIExpression()), !dbg !13959
  call void @llvm.lifetime.start.p0(i64 8, ptr %next) #16, !dbg !13960
  tail call void @llvm.dbg.declare(metadata ptr %next, metadata !13937, metadata !DIExpression()), !dbg !13961
  %0 = load ptr, ptr %abs_next_timeout.addr, align 8, !dbg !13962, !tbaa !3910
  store i64 0, ptr %0, align 8, !dbg !13963, !tbaa !4039
  %1 = load ptr, ptr %rktp.addr, align 8, !dbg !13964, !tbaa !3910
  %2 = load ptr, ptr %rktp.addr, align 8, !dbg !13965, !tbaa !3910
  %rktp_xmit_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %2, i32 0, i32 17, !dbg !13966
  %3 = load i64, ptr %now.addr, align 8, !dbg !13967, !tbaa !4039
  %call = call i32 @rd_kafka_msgq_age_scan(ptr noundef %1, ptr noundef %rktp_xmit_msgq, ptr noundef %xtimedout, i64 noundef %3, ptr noundef %next), !dbg !13968
  store i32 %call, ptr %xcnt, align 4, !dbg !13969, !tbaa !3959
  %4 = load i64, ptr %next, align 8, !dbg !13970, !tbaa !4039
  %tobool = icmp ne i64 %4, 0, !dbg !13970
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13972

land.lhs.true:                                    ; preds = %entry
  %5 = load i64, ptr %next, align 8, !dbg !13973, !tbaa !4039
  %6 = load ptr, ptr %abs_next_timeout.addr, align 8, !dbg !13974, !tbaa !3910
  %7 = load i64, ptr %6, align 8, !dbg !13975, !tbaa !4039
  %cmp = icmp slt i64 %5, %7, !dbg !13976
  br i1 %cmp, label %if.then, label %if.end, !dbg !13977

if.then:                                          ; preds = %land.lhs.true
  %8 = load i64, ptr %next, align 8, !dbg !13978, !tbaa !4039
  %9 = load ptr, ptr %abs_next_timeout.addr, align 8, !dbg !13979, !tbaa !3910
  store i64 %8, ptr %9, align 8, !dbg !13980, !tbaa !4039
  br label %if.end, !dbg !13981

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load ptr, ptr %rktp.addr, align 8, !dbg !13982, !tbaa !3910
  %11 = load ptr, ptr %rktp.addr, align 8, !dbg !13983, !tbaa !3910
  %rktp_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %11, i32 0, i32 16, !dbg !13984
  %12 = load i64, ptr %now.addr, align 8, !dbg !13985, !tbaa !4039
  %call7 = call i32 @rd_kafka_msgq_age_scan(ptr noundef %10, ptr noundef %rktp_msgq, ptr noundef %qtimedout, i64 noundef %12, ptr noundef %next), !dbg !13986
  store i32 %call7, ptr %qcnt, align 4, !dbg !13987, !tbaa !3959
  %13 = load i64, ptr %next, align 8, !dbg !13988, !tbaa !4039
  %tobool8 = icmp ne i64 %13, 0, !dbg !13988
  br i1 %tobool8, label %land.lhs.true9, label %if.end13, !dbg !13990

land.lhs.true9:                                   ; preds = %if.end
  %14 = load ptr, ptr %abs_next_timeout.addr, align 8, !dbg !13991, !tbaa !3910
  %15 = load i64, ptr %14, align 8, !dbg !13992, !tbaa !4039
  %tobool10 = icmp ne i64 %15, 0, !dbg !13992
  br i1 %tobool10, label %lor.lhs.false, label %if.then12, !dbg !13993

lor.lhs.false:                                    ; preds = %land.lhs.true9
  %16 = load i64, ptr %next, align 8, !dbg !13994, !tbaa !4039
  %17 = load ptr, ptr %abs_next_timeout.addr, align 8, !dbg !13995, !tbaa !3910
  %18 = load i64, ptr %17, align 8, !dbg !13996, !tbaa !4039
  %cmp11 = icmp slt i64 %16, %18, !dbg !13997
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13998

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true9
  %19 = load i64, ptr %next, align 8, !dbg !13999, !tbaa !4039
  %20 = load ptr, ptr %abs_next_timeout.addr, align 8, !dbg !14000, !tbaa !3910
  store i64 %19, ptr %20, align 8, !dbg !14001, !tbaa !4039
  br label %if.end13, !dbg !14002

if.end13:                                         ; preds = %if.then12, %lor.lhs.false, %if.end
  %21 = load i32, ptr %xcnt, align 4, !dbg !14003, !tbaa !3959
  %22 = load i32, ptr %qcnt, align 4, !dbg !14004, !tbaa !3959
  %add = add nsw i32 %21, %22, !dbg !14005
  store i32 %add, ptr %cnt, align 4, !dbg !14006, !tbaa !3959
  %23 = load i32, ptr %cnt, align 4, !dbg !14007, !tbaa !3959
  %cmp14 = icmp eq i32 %23, 0, !dbg !14007
  %conv = zext i1 %cmp14 to i32, !dbg !14007
  %conv15 = sext i32 %conv to i64, !dbg !14007
  %expval = call i64 @llvm.expect.i64(i64 %conv15, i64 1), !dbg !14007
  %tobool16 = icmp ne i64 %expval, 0, !dbg !14007
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !14009

if.then17:                                        ; preds = %if.end13
  store i32 0, ptr %retval, align 4, !dbg !14010
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14010

if.end18:                                         ; preds = %if.end13
  %24 = load ptr, ptr %rktp.addr, align 8, !dbg !14011, !tbaa !3910
  %rktp_rkt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %24, i32 0, i32 6, !dbg !14012
  %25 = load ptr, ptr %rktp_rkt, align 8, !dbg !14012, !tbaa !8643
  %rkt_conf = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %25, i32 0, i32 21, !dbg !14013
  %msg_order_cmp = getelementptr inbounds %struct.rd_kafka_topic_conf_s, ptr %rkt_conf, i32 0, i32 8, !dbg !14014
  %26 = load ptr, ptr %msg_order_cmp, align 8, !dbg !14014, !tbaa !8665
  call void @rd_kafka_msgq_insert_msgq(ptr noundef %xtimedout, ptr noundef %qtimedout, ptr noundef %26), !dbg !14015
  %call19 = call ptr @rd_kafka_msgq_first(ptr noundef %xtimedout), !dbg !14016
  %rkm_u = getelementptr inbounds %struct.rd_kafka_msg_s, ptr %call19, i32 0, i32 8, !dbg !14017
  %msgid = getelementptr inbounds %struct.anon.53, ptr %rkm_u, i32 0, i32 3, !dbg !14018
  %27 = load i64, ptr %msgid, align 8, !dbg !14018, !tbaa !4126
  store i64 %27, ptr %first, align 8, !dbg !14019, !tbaa !4039
  %call20 = call ptr @rd_kafka_msgq_last(ptr noundef %xtimedout), !dbg !14020
  %rkm_u21 = getelementptr inbounds %struct.rd_kafka_msg_s, ptr %call20, i32 0, i32 8, !dbg !14021
  %msgid22 = getelementptr inbounds %struct.anon.53, ptr %rkm_u21, i32 0, i32 3, !dbg !14022
  %28 = load i64, ptr %msgid22, align 8, !dbg !14022, !tbaa !4126
  store i64 %28, ptr %last, align 8, !dbg !14023, !tbaa !4039
  br label %do.body, !dbg !14024

do.body:                                          ; preds = %if.end18
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !14025, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 32, !dbg !14025
  %30 = load ptr, ptr %rkb_rk, align 8, !dbg !14025, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %30, i32 0, i32 18, !dbg !14025
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !14025
  %31 = load i32, ptr %debug, align 8, !dbg !14025, !tbaa !4140
  %and = and i32 %31, 64, !dbg !14025
  %conv23 = sext i32 %and to i64, !dbg !14025
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !14025
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !14025
  br i1 %tobool25, label %if.then26, label %if.end36, !dbg !14026

if.then26:                                        ; preds = %do.body
  br label %do.body27, !dbg !14027

do.body27:                                        ; preds = %if.then26
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !14028
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !13938, metadata !DIExpression()), !dbg !14028
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !14028, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 49, !dbg !14028
  %call28 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !14028
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !14028
  %33 = load ptr, ptr %rkb.addr, align 8, !dbg !14028, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %33, i32 0, i32 48, !dbg !14028
  %34 = load ptr, ptr %rkb_logname, align 8, !dbg !14028, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %34, i64 noundef 256), !dbg !14028
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !14028, !tbaa !3910
  %rkb_logname_lock29 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 49, !dbg !14028
  %call30 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock29), !dbg !14028
  %36 = load ptr, ptr %rkb.addr, align 8, !dbg !14028, !tbaa !3910
  %rkb_rk31 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %36, i32 0, i32 32, !dbg !14028
  %37 = load ptr, ptr %rkb_rk31, align 8, !dbg !14028, !tbaa !4139
  %rk_conf32 = getelementptr inbounds %struct.rd_kafka_s, ptr %37, i32 0, i32 18, !dbg !14028
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !14028, !tbaa !3910
  %rkb_rk33 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 32, !dbg !14028
  %39 = load ptr, ptr %rkb_rk33, align 8, !dbg !14028, !tbaa !4139
  %arraydecay34 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !14028
  %40 = load ptr, ptr %rktp.addr, align 8, !dbg !14028, !tbaa !3910
  %rktp_rkt35 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %40, i32 0, i32 6, !dbg !14028
  %41 = load ptr, ptr %rktp_rkt35, align 8, !dbg !14028, !tbaa !8643
  %rkt_topic = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %41, i32 0, i32 4, !dbg !14028
  %42 = load ptr, ptr %rkt_topic, align 8, !dbg !14028, !tbaa !8676
  %str = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %42, i32 0, i32 1, !dbg !14028
  %43 = load ptr, ptr %str, align 8, !dbg !14028, !tbaa !8679
  %44 = load ptr, ptr %rktp.addr, align 8, !dbg !14028, !tbaa !3910
  %rktp_partition = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %44, i32 0, i32 7, !dbg !14028
  %45 = load i32, ptr %rktp_partition, align 8, !dbg !14028, !tbaa !8680
  %46 = load i32, ptr %xcnt, align 4, !dbg !14028, !tbaa !3959
  %47 = load i32, ptr %qcnt, align 4, !dbg !14028, !tbaa !3959
  %48 = load i64, ptr %first, align 8, !dbg !14028, !tbaa !4039
  %49 = load i64, ptr %last, align 8, !dbg !14028, !tbaa !4039
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf32, ptr noundef %39, ptr noundef %arraydecay34, i32 noundef 7, i32 noundef 64, ptr noundef @.str.249, ptr noundef @.str.250, ptr noundef %43, i32 noundef %45, i32 noundef %46, i32 noundef %47, i64 noundef %48, i64 noundef %49), !dbg !14028
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !14027
  br label %do.cond, !dbg !14028

do.cond:                                          ; preds = %do.body27
  br label %do.end, !dbg !14028

do.end:                                           ; preds = %do.cond
  br label %if.end36, !dbg !14027

if.end36:                                         ; preds = %do.end, %do.body
  br label %do.cond37, !dbg !14026

do.cond37:                                        ; preds = %if.end36
  br label %do.end38, !dbg !14026

do.end38:                                         ; preds = %do.cond37
  %50 = load ptr, ptr %rktp.addr, align 8, !dbg !14029, !tbaa !3910
  %rktp_rkt39 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %50, i32 0, i32 6, !dbg !14030
  %51 = load ptr, ptr %rktp_rkt39, align 8, !dbg !14030, !tbaa !8643
  call void @rd_kafka_dr_msgq(ptr noundef %51, ptr noundef %xtimedout, i32 noundef -192), !dbg !14031
  %52 = load i32, ptr %cnt, align 4, !dbg !14032, !tbaa !3959
  store i32 %52, ptr %retval, align 4, !dbg !14033
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14033

cleanup:                                          ; preds = %do.end38, %if.then17
  call void @llvm.lifetime.end.p0(i64 8, ptr %next) #16, !dbg !14034
  call void @llvm.lifetime.end.p0(i64 8, ptr %last) #16, !dbg !14034
  call void @llvm.lifetime.end.p0(i64 8, ptr %first) #16, !dbg !14034
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !14034
  call void @llvm.lifetime.end.p0(i64 4, ptr %qcnt) #16, !dbg !14034
  call void @llvm.lifetime.end.p0(i64 4, ptr %xcnt) #16, !dbg !14034
  call void @llvm.lifetime.end.p0(i64 64, ptr %qtimedout) #16, !dbg !14034
  call void @llvm.lifetime.end.p0(i64 64, ptr %xtimedout) #16, !dbg !14034
  %53 = load i32, ptr %retval, align 4, !dbg !14034
  ret i32 %53, !dbg !14034
}

declare !dbg !14035 i32 @rd_kafka_msgq_age_scan(ptr noundef, ptr noundef, ptr noundef, i64 noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_produce_toppars(ptr noundef %rkb, i64 noundef %now, ptr noundef %next_wakeup, i8 noundef zeroext %do_timeout_scan) #0 !dbg !14038 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %next_wakeup.addr = alloca ptr, align 8
  %do_timeout_scan.addr = alloca i8, align 1
  %rktp = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %ret_next_wakeup = alloca i64, align 8
  %pid = alloca %struct.rd_kafka_pid_s, align 8
  %may_send = alloca i8, align 1
  %flushing = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.rd_kafka_pid_s, align 8
  %this_next_wakeup = alloca i64, align 8
  %__n = alloca ptr, align 8
  %__m = alloca i64, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !14042, metadata !DIExpression()), !dbg !14057
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !14043, metadata !DIExpression()), !dbg !14058
  store ptr %next_wakeup, ptr %next_wakeup.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %next_wakeup.addr, metadata !14044, metadata !DIExpression()), !dbg !14059
  store i8 %do_timeout_scan, ptr %do_timeout_scan.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %do_timeout_scan.addr, metadata !14045, metadata !DIExpression()), !dbg !14060
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp) #16, !dbg !14061
  tail call void @llvm.dbg.declare(metadata ptr %rktp, metadata !14046, metadata !DIExpression()), !dbg !14062
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !14063
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !14047, metadata !DIExpression()), !dbg !14064
  store i32 0, ptr %cnt, align 4, !dbg !14064, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret_next_wakeup) #16, !dbg !14065
  tail call void @llvm.dbg.declare(metadata ptr %ret_next_wakeup, metadata !14048, metadata !DIExpression()), !dbg !14066
  %0 = load ptr, ptr %next_wakeup.addr, align 8, !dbg !14067, !tbaa !3910
  %1 = load i64, ptr %0, align 8, !dbg !14068, !tbaa !4039
  store i64 %1, ptr %ret_next_wakeup, align 8, !dbg !14066, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 16, ptr %pid) #16, !dbg !14069
  tail call void @llvm.dbg.declare(metadata ptr %pid, metadata !14049, metadata !DIExpression()), !dbg !14070
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %pid, ptr align 8 @__const.rd_kafka_broker_produce_toppars.pid, i64 16, i1 false), !dbg !14070
  call void @llvm.lifetime.start.p0(i64 1, ptr %may_send) #16, !dbg !14071
  tail call void @llvm.dbg.declare(metadata ptr %may_send, metadata !14050, metadata !DIExpression()), !dbg !14072
  store i8 1, ptr %may_send, align 1, !dbg !14072, !tbaa !4126
  call void @llvm.lifetime.start.p0(i64 1, ptr %flushing) #16, !dbg !14073
  tail call void @llvm.dbg.declare(metadata ptr %flushing, metadata !14051, metadata !DIExpression()), !dbg !14074
  store i8 0, ptr %flushing, align 1, !dbg !14074, !tbaa !4126
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !14075, !tbaa !3910
  %rkb_active_toppar_next = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 15, !dbg !14076
  %3 = load ptr, ptr %rkb_active_toppar_next, align 8, !dbg !14076, !tbaa !10983
  store ptr %3, ptr %rktp, align 8, !dbg !14077, !tbaa !3910
  %4 = load ptr, ptr %rktp, align 8, !dbg !14078, !tbaa !3910
  %tobool = icmp ne ptr %4, null, !dbg !14078
  %lnot = xor i1 %tobool, true, !dbg !14078
  %lnot.ext = zext i1 %lnot to i32, !dbg !14078
  %conv = sext i32 %lnot.ext to i64, !dbg !14078
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !14078
  %tobool1 = icmp ne i64 %expval, 0, !dbg !14078
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14080

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !14081
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14081

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !14082, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 32, !dbg !14082
  %6 = load ptr, ptr %rkb_rk, align 8, !dbg !14082, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 18, !dbg !14082
  %eos = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 78, !dbg !14082
  %idempotence = getelementptr inbounds %struct.anon.18, ptr %eos, i32 0, i32 0, !dbg !14082
  %7 = load i32, ptr %idempotence, align 8, !dbg !14082, !tbaa !13116
  %tobool2 = icmp ne i32 %7, 0, !dbg !14082
  br i1 %tobool2, label %if.then3, label %if.end23, !dbg !14084

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 16, ptr %tmp) #16, !dbg !14085
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !14085, !tbaa !3910
  %rkb_rk4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 32, !dbg !14085
  %9 = load ptr, ptr %rkb_rk4, align 8, !dbg !14085, !tbaa !4139
  %call = call { i64, i16 } @rd_kafka_idemp_get_pid0(ptr noundef %9, i32 noundef 1, i8 noundef zeroext 0), !dbg !14085
  %10 = getelementptr inbounds { i64, i16 }, ptr %tmp, i32 0, i32 0, !dbg !14085
  %11 = extractvalue { i64, i16 } %call, 0, !dbg !14085
  store i64 %11, ptr %10, align 8, !dbg !14085
  %12 = getelementptr inbounds { i64, i16 }, ptr %tmp, i32 0, i32 1, !dbg !14085
  %13 = extractvalue { i64, i16 } %call, 1, !dbg !14085
  store i16 %13, ptr %12, align 8, !dbg !14085
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %pid, ptr align 8 %tmp, i64 16, i1 false), !dbg !14085, !tbaa.struct !14087
  call void @llvm.lifetime.end.p0(i64 16, ptr %tmp) #16, !dbg !14085
  %id = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %pid, i32 0, i32 0, !dbg !14088
  %14 = load i64, ptr %id, align 8, !dbg !14088, !tbaa !14090
  %cmp = icmp ne i64 %14, -1, !dbg !14088
  br i1 %cmp, label %if.else, label %if.then6, !dbg !14091

if.then6:                                         ; preds = %if.then3
  store i8 0, ptr %may_send, align 1, !dbg !14092, !tbaa !4126
  br label %if.end17, !dbg !14093

if.else:                                          ; preds = %if.then3
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !14094, !tbaa !3910
  %rkb_rk7 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 32, !dbg !14094
  %16 = load ptr, ptr %rkb_rk7, align 8, !dbg !14094, !tbaa !4139
  %rk_conf8 = getelementptr inbounds %struct.rd_kafka_s, ptr %16, i32 0, i32 18, !dbg !14094
  %eos9 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf8, i32 0, i32 78, !dbg !14094
  %transactional_id = getelementptr inbounds %struct.anon.18, ptr %eos9, i32 0, i32 2, !dbg !14094
  %17 = load ptr, ptr %transactional_id, align 8, !dbg !14094, !tbaa !8431
  %cmp10 = icmp ne ptr %17, null, !dbg !14094
  br i1 %cmp10, label %land.lhs.true, label %if.end16, !dbg !14096

land.lhs.true:                                    ; preds = %if.else
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !14097, !tbaa !3910
  %rkb_rk12 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 32, !dbg !14098
  %19 = load ptr, ptr %rkb_rk12, align 8, !dbg !14098, !tbaa !4139
  %call13 = call zeroext i8 @rd_kafka_txn_may_send_msg(ptr noundef %19), !dbg !14099
  %tobool14 = icmp ne i8 %call13, 0, !dbg !14099
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !14100

if.then15:                                        ; preds = %land.lhs.true
  store i8 0, ptr %may_send, align 1, !dbg !14101, !tbaa !4126
  br label %if.end16, !dbg !14102

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then6
  %20 = load i8, ptr %may_send, align 1, !dbg !14103, !tbaa !4126
  %tobool18 = icmp ne i8 %20, 0, !dbg !14103
  br i1 %tobool18, label %if.end22, label %land.lhs.true19, !dbg !14105

land.lhs.true19:                                  ; preds = %if.end17
  %21 = load i8, ptr %do_timeout_scan.addr, align 1, !dbg !14106, !tbaa !4126
  %tobool20 = icmp ne i8 %21, 0, !dbg !14106
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !14107

if.then21:                                        ; preds = %land.lhs.true19
  store i32 0, ptr %retval, align 4, !dbg !14108
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14108

if.end22:                                         ; preds = %land.lhs.true19, %if.end17
  br label %if.end23, !dbg !14109

if.end23:                                         ; preds = %if.end22, %if.end
  %22 = load i8, ptr %may_send, align 1, !dbg !14110, !tbaa !4126
  %conv24 = zext i8 %22 to i32, !dbg !14110
  %tobool25 = icmp ne i32 %conv24, 0, !dbg !14110
  br i1 %tobool25, label %land.rhs, label %land.end, !dbg !14111

land.rhs:                                         ; preds = %if.end23
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !14112, !tbaa !3910
  %rkb_rk26 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %23, i32 0, i32 32, !dbg !14113
  %24 = load ptr, ptr %rkb_rk26, align 8, !dbg !14113, !tbaa !4139
  %rk_flushing = getelementptr inbounds %struct.rd_kafka_s, ptr %24, i32 0, i32 39, !dbg !14114
  %call27 = call i32 @rd_atomic32_get(ptr noundef %rk_flushing), !dbg !14115
  %cmp28 = icmp sgt i32 %call27, 0, !dbg !14116
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end23
  %25 = phi i1 [ false, %if.end23 ], [ %cmp28, %land.rhs ], !dbg !14117
  %land.ext = zext i1 %25 to i32, !dbg !14111
  %conv30 = trunc i32 %land.ext to i8, !dbg !14110
  store i8 %conv30, ptr %flushing, align 1, !dbg !14118, !tbaa !4126
  br label %do.body, !dbg !14119

do.body:                                          ; preds = %cond.end, %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %this_next_wakeup) #16, !dbg !14120
  tail call void @llvm.dbg.declare(metadata ptr %this_next_wakeup, metadata !14052, metadata !DIExpression()), !dbg !14121
  %26 = load i64, ptr %ret_next_wakeup, align 8, !dbg !14122, !tbaa !4039
  store i64 %26, ptr %this_next_wakeup, align 8, !dbg !14121, !tbaa !4039
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !14123, !tbaa !3910
  %28 = load ptr, ptr %rktp, align 8, !dbg !14124, !tbaa !3910
  %29 = load i64, ptr %now.addr, align 8, !dbg !14125, !tbaa !4039
  %30 = load i8, ptr %do_timeout_scan.addr, align 1, !dbg !14126, !tbaa !4126
  %31 = load i8, ptr %may_send, align 1, !dbg !14127, !tbaa !4126
  %32 = load i8, ptr %flushing, align 1, !dbg !14128, !tbaa !4126
  %33 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 0, !dbg !14129
  %34 = load i64, ptr %33, align 8, !dbg !14129
  %35 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 1, !dbg !14129
  %36 = load i16, ptr %35, align 8, !dbg !14129
  %call31 = call i32 @rd_kafka_toppar_producer_serve(ptr noundef %27, ptr noundef %28, i64 %34, i16 %36, i64 noundef %29, ptr noundef %this_next_wakeup, i8 noundef zeroext %30, i8 noundef zeroext %31, i8 noundef zeroext %32), !dbg !14129
  %37 = load i32, ptr %cnt, align 4, !dbg !14130, !tbaa !3959
  %add = add nsw i32 %37, %call31, !dbg !14130
  store i32 %add, ptr %cnt, align 4, !dbg !14130, !tbaa !3959
  br label %do.body32, !dbg !14131

do.body32:                                        ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %__n) #16, !dbg !14132
  tail call void @llvm.dbg.declare(metadata ptr %__n, metadata !14054, metadata !DIExpression()), !dbg !14132
  store ptr %ret_next_wakeup, ptr %__n, align 8, !dbg !14132, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %__m) #16, !dbg !14132
  tail call void @llvm.dbg.declare(metadata ptr %__m, metadata !14056, metadata !DIExpression()), !dbg !14132
  %38 = load i64, ptr %this_next_wakeup, align 8, !dbg !14132, !tbaa !4039
  store i64 %38, ptr %__m, align 8, !dbg !14132, !tbaa !4039
  br label %do.body33, !dbg !14132

do.body33:                                        ; preds = %do.body32
  br label %do.cond, !dbg !14133

do.cond:                                          ; preds = %do.body33
  br label %do.end, !dbg !14133

do.end:                                           ; preds = %do.cond
  %39 = load i64, ptr %__m, align 8, !dbg !14135, !tbaa !4039
  %40 = load ptr, ptr %__n, align 8, !dbg !14135, !tbaa !3910
  %41 = load i64, ptr %40, align 8, !dbg !14135, !tbaa !4039
  %cmp34 = icmp slt i64 %39, %41, !dbg !14135
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !14132

if.then36:                                        ; preds = %do.end
  %42 = load i64, ptr %__m, align 8, !dbg !14135, !tbaa !4039
  %43 = load ptr, ptr %__n, align 8, !dbg !14135, !tbaa !3910
  store i64 %42, ptr %43, align 8, !dbg !14135, !tbaa !4039
  br label %if.end37, !dbg !14135

if.end37:                                         ; preds = %if.then36, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %__m) #16, !dbg !14131
  call void @llvm.lifetime.end.p0(i64 8, ptr %__n) #16, !dbg !14131
  br label %do.cond38, !dbg !14132

do.cond38:                                        ; preds = %if.end37
  br label %do.end39, !dbg !14132

do.end39:                                         ; preds = %do.cond38
  call void @llvm.lifetime.end.p0(i64 8, ptr %this_next_wakeup) #16, !dbg !14137
  br label %do.cond40, !dbg !14138

do.cond40:                                        ; preds = %do.end39
  %44 = load ptr, ptr %rktp, align 8, !dbg !14139, !tbaa !3910
  %rktp_activelink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %44, i32 0, i32 2, !dbg !14139
  %cqe_next = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink, i32 0, i32 0, !dbg !14139
  %45 = load ptr, ptr %cqe_next, align 8, !dbg !14139, !tbaa !10928
  %46 = load ptr, ptr %rkb.addr, align 8, !dbg !14139, !tbaa !3910
  %rkb_active_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %46, i32 0, i32 13, !dbg !14139
  %call41 = call ptr @__launder_type(ptr noundef %rkb_active_toppars), !dbg !14139
  %cmp42 = icmp eq ptr %45, %call41, !dbg !14139
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !14139

cond.true:                                        ; preds = %do.cond40
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !14139, !tbaa !3910
  %rkb_active_toppars44 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 13, !dbg !14139
  %cqh_first = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars44, i32 0, i32 0, !dbg !14139
  %48 = load ptr, ptr %cqh_first, align 8, !dbg !14139, !tbaa !9035
  br label %cond.end, !dbg !14139

cond.false:                                       ; preds = %do.cond40
  %49 = load ptr, ptr %rktp, align 8, !dbg !14139, !tbaa !3910
  %rktp_activelink45 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %49, i32 0, i32 2, !dbg !14139
  %cqe_next46 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink45, i32 0, i32 0, !dbg !14139
  %50 = load ptr, ptr %cqe_next46, align 8, !dbg !14139, !tbaa !10928
  br label %cond.end, !dbg !14139

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %48, %cond.true ], [ %50, %cond.false ], !dbg !14139
  store ptr %cond, ptr %rktp, align 8, !dbg !14140, !tbaa !3910
  %51 = load ptr, ptr %rkb.addr, align 8, !dbg !14141, !tbaa !3910
  %rkb_active_toppar_next47 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %51, i32 0, i32 15, !dbg !14142
  %52 = load ptr, ptr %rkb_active_toppar_next47, align 8, !dbg !14142, !tbaa !10983
  %cmp48 = icmp ne ptr %cond, %52, !dbg !14143
  br i1 %cmp48, label %do.body, label %do.end50, !dbg !14138, !llvm.loop !14144

do.end50:                                         ; preds = %cond.end
  %53 = load ptr, ptr %rkb.addr, align 8, !dbg !14146, !tbaa !3910
  %54 = load ptr, ptr %rktp, align 8, !dbg !14147, !tbaa !3910
  %rktp_activelink51 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %54, i32 0, i32 2, !dbg !14147
  %cqe_next52 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink51, i32 0, i32 0, !dbg !14147
  %55 = load ptr, ptr %cqe_next52, align 8, !dbg !14147, !tbaa !10928
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !14147, !tbaa !3910
  %rkb_active_toppars53 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 13, !dbg !14147
  %call54 = call ptr @__launder_type(ptr noundef %rkb_active_toppars53), !dbg !14147
  %cmp55 = icmp eq ptr %55, %call54, !dbg !14147
  br i1 %cmp55, label %cond.true57, label %cond.false60, !dbg !14147

cond.true57:                                      ; preds = %do.end50
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !14147, !tbaa !3910
  %rkb_active_toppars58 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %57, i32 0, i32 13, !dbg !14147
  %cqh_first59 = getelementptr inbounds %struct.anon.1, ptr %rkb_active_toppars58, i32 0, i32 0, !dbg !14147
  %58 = load ptr, ptr %cqh_first59, align 8, !dbg !14147, !tbaa !9035
  br label %cond.end63, !dbg !14147

cond.false60:                                     ; preds = %do.end50
  %59 = load ptr, ptr %rktp, align 8, !dbg !14147, !tbaa !3910
  %rktp_activelink61 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %59, i32 0, i32 2, !dbg !14147
  %cqe_next62 = getelementptr inbounds %struct.anon.42, ptr %rktp_activelink61, i32 0, i32 0, !dbg !14147
  %60 = load ptr, ptr %cqe_next62, align 8, !dbg !14147, !tbaa !10928
  br label %cond.end63, !dbg !14147

cond.end63:                                       ; preds = %cond.false60, %cond.true57
  %cond64 = phi ptr [ %58, %cond.true57 ], [ %60, %cond.false60 ], !dbg !14147
  call void @rd_kafka_broker_active_toppar_next(ptr noundef %53, ptr noundef %cond64), !dbg !14148
  %61 = load i64, ptr %ret_next_wakeup, align 8, !dbg !14149, !tbaa !4039
  %62 = load ptr, ptr %next_wakeup.addr, align 8, !dbg !14150, !tbaa !3910
  store i64 %61, ptr %62, align 8, !dbg !14151, !tbaa !4039
  %63 = load i32, ptr %cnt, align 4, !dbg !14152, !tbaa !3959
  store i32 %63, ptr %retval, align 4, !dbg !14153
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14153

cleanup:                                          ; preds = %cond.end63, %if.then21, %if.then
  call void @llvm.lifetime.end.p0(i64 1, ptr %flushing) #16, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 1, ptr %may_send) #16, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 16, ptr %pid) #16, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret_next_wakeup) #16, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp) #16, !dbg !14154
  %64 = load i32, ptr %retval, align 4, !dbg !14154
  ret i32 %64, !dbg !14154
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_retry_bufs_move(ptr noundef %rkb, ptr noundef %next_wakeup) #0 !dbg !14155 {
entry:
  %rkb.addr = alloca ptr, align 8
  %next_wakeup.addr = alloca ptr, align 8
  %now = alloca i64, align 8
  %rkbuf = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !14159, metadata !DIExpression()), !dbg !14170
  store ptr %next_wakeup, ptr %next_wakeup.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %next_wakeup.addr, metadata !14160, metadata !DIExpression()), !dbg !14171
  call void @llvm.lifetime.start.p0(i64 8, ptr %now) #16, !dbg !14172
  tail call void @llvm.dbg.declare(metadata ptr %now, metadata !14161, metadata !DIExpression()), !dbg !14173
  %call = call i64 @rd_clock(), !dbg !14174
  store i64 %call, ptr %now, align 8, !dbg !14173, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkbuf) #16, !dbg !14175
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf, metadata !14162, metadata !DIExpression()), !dbg !14176
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !14177
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !14163, metadata !DIExpression()), !dbg !14178
  store i32 0, ptr %cnt, align 4, !dbg !14178, !tbaa !3959
  br label %while.cond, !dbg !14179

while.cond:                                       ; preds = %if.end5, %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !14180, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 37, !dbg !14180
  %rkbq_bufs = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_retrybufs, i32 0, i32 0, !dbg !14180
  %tqh_first = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs, i32 0, i32 0, !dbg !14180
  %1 = load ptr, ptr %tqh_first, align 8, !dbg !14180, !tbaa !8729
  store ptr %1, ptr %rkbuf, align 8, !dbg !14181, !tbaa !3910
  %tobool = icmp ne ptr %1, null, !dbg !14179
  br i1 %tobool, label %while.body, label %while.end, !dbg !14179

while.body:                                       ; preds = %while.cond
  %2 = load ptr, ptr %rkbuf, align 8, !dbg !14182, !tbaa !3910
  %rkbuf_ts_retry = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %2, i32 0, i32 2, !dbg !14185
  %3 = load i64, ptr %rkbuf_ts_retry, align 8, !dbg !14185, !tbaa !8369
  %4 = load i64, ptr %now, align 8, !dbg !14186, !tbaa !4039
  %cmp = icmp sgt i64 %3, %4, !dbg !14187
  br i1 %cmp, label %if.then, label %if.end5, !dbg !14188

if.then:                                          ; preds = %while.body
  %5 = load ptr, ptr %rkbuf, align 8, !dbg !14189, !tbaa !3910
  %rkbuf_ts_retry1 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %5, i32 0, i32 2, !dbg !14192
  %6 = load i64, ptr %rkbuf_ts_retry1, align 8, !dbg !14192, !tbaa !8369
  %7 = load ptr, ptr %next_wakeup.addr, align 8, !dbg !14193, !tbaa !3910
  %8 = load i64, ptr %7, align 8, !dbg !14194, !tbaa !4039
  %cmp2 = icmp slt i64 %6, %8, !dbg !14195
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !14196

if.then3:                                         ; preds = %if.then
  %9 = load ptr, ptr %rkbuf, align 8, !dbg !14197, !tbaa !3910
  %rkbuf_ts_retry4 = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %9, i32 0, i32 2, !dbg !14198
  %10 = load i64, ptr %rkbuf_ts_retry4, align 8, !dbg !14198, !tbaa !8369
  %11 = load ptr, ptr %next_wakeup.addr, align 8, !dbg !14199, !tbaa !3910
  store i64 %10, ptr %11, align 8, !dbg !14200, !tbaa !4039
  br label %if.end, !dbg !14201

if.end:                                           ; preds = %if.then3, %if.then
  br label %while.end, !dbg !14202

if.end5:                                          ; preds = %while.body
  %12 = load ptr, ptr %rkb.addr, align 8, !dbg !14203, !tbaa !3910
  %rkb_retrybufs6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %12, i32 0, i32 37, !dbg !14204
  %13 = load ptr, ptr %rkbuf, align 8, !dbg !14205, !tbaa !3910
  call void @rd_kafka_bufq_deq(ptr noundef %rkb_retrybufs6, ptr noundef %13), !dbg !14206
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !14207, !tbaa !3910
  %15 = load ptr, ptr %rkbuf, align 8, !dbg !14208, !tbaa !3910
  call void @rd_kafka_broker_buf_enq0(ptr noundef %14, ptr noundef %15), !dbg !14209
  %16 = load i32, ptr %cnt, align 4, !dbg !14210, !tbaa !3959
  %inc = add nsw i32 %16, 1, !dbg !14210
  store i32 %inc, ptr %cnt, align 4, !dbg !14210, !tbaa !3959
  br label %while.cond, !dbg !14179, !llvm.loop !14211

while.end:                                        ; preds = %if.end, %while.cond
  %17 = load i32, ptr %cnt, align 4, !dbg !14213, !tbaa !3959
  %cmp7 = icmp sgt i32 %17, 0, !dbg !14214
  br i1 %cmp7, label %if.then8, label %if.end22, !dbg !14215

if.then8:                                         ; preds = %while.end
  br label %do.body, !dbg !14216

do.body:                                          ; preds = %if.then8
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !14217, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 32, !dbg !14217
  %19 = load ptr, ptr %rkb_rk, align 8, !dbg !14217, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %19, i32 0, i32 18, !dbg !14217
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !14217
  %20 = load i32, ptr %debug, align 8, !dbg !14217, !tbaa !4140
  %and = and i32 %20, 2, !dbg !14217
  %conv = sext i32 %and to i64, !dbg !14217
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !14217
  %tobool9 = icmp ne i64 %expval, 0, !dbg !14217
  br i1 %tobool9, label %if.then10, label %if.end19, !dbg !14218

if.then10:                                        ; preds = %do.body
  br label %do.body11, !dbg !14219

do.body11:                                        ; preds = %if.then10
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !14220
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !14164, metadata !DIExpression()), !dbg !14220
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !14220, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 49, !dbg !14220
  %call12 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !14220
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !14220
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !14220, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 48, !dbg !14220
  %23 = load ptr, ptr %rkb_logname, align 8, !dbg !14220, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %23, i64 noundef 256), !dbg !14220
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !14220, !tbaa !3910
  %rkb_logname_lock13 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 49, !dbg !14220
  %call14 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock13), !dbg !14220
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !14220, !tbaa !3910
  %rkb_rk15 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 32, !dbg !14220
  %26 = load ptr, ptr %rkb_rk15, align 8, !dbg !14220, !tbaa !4139
  %rk_conf16 = getelementptr inbounds %struct.rd_kafka_s, ptr %26, i32 0, i32 18, !dbg !14220
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !14220, !tbaa !3910
  %rkb_rk17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 32, !dbg !14220
  %28 = load ptr, ptr %rkb_rk17, align 8, !dbg !14220, !tbaa !4139
  %arraydecay18 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !14220
  %29 = load i32, ptr %cnt, align 4, !dbg !14220, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf16, ptr noundef %28, ptr noundef %arraydecay18, i32 noundef 7, i32 noundef 2, ptr noundef @.str.52, ptr noundef @.str.259, i32 noundef %29), !dbg !14220
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !14219
  br label %do.cond, !dbg !14220

do.cond:                                          ; preds = %do.body11
  br label %do.end, !dbg !14220

do.end:                                           ; preds = %do.cond
  br label %if.end19, !dbg !14219

if.end19:                                         ; preds = %do.end, %do.body
  br label %do.cond20, !dbg !14218

do.cond20:                                        ; preds = %if.end19
  br label %do.end21, !dbg !14218

do.end21:                                         ; preds = %do.cond20
  br label %if.end22, !dbg !14218

if.end22:                                         ; preds = %do.end21, %while.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !14221
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkbuf) #16, !dbg !14221
  call void @llvm.lifetime.end.p0(i64 8, ptr %now) #16, !dbg !14221
  ret void, !dbg !14221
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i16 } @rd_kafka_idemp_get_pid0(ptr noundef %rk, i32 noundef %do_lock, i8 noundef zeroext %bumpable) #4 !dbg !14222 {
entry:
  %retval = alloca %struct.rd_kafka_pid_s, align 8
  %rk.addr = alloca ptr, align 8
  %do_lock.addr = alloca i32, align 4
  %bumpable.addr = alloca i8, align 1
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !14227, metadata !DIExpression()), !dbg !14231
  store i32 %do_lock, ptr %do_lock.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %do_lock.addr, metadata !14228, metadata !DIExpression()), !dbg !14232
  store i8 %bumpable, ptr %bumpable.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %bumpable.addr, metadata !14229, metadata !DIExpression()), !dbg !14233
  tail call void @llvm.dbg.declare(metadata ptr %retval, metadata !14230, metadata !DIExpression()), !dbg !14234
  %0 = load i32, ptr %do_lock.addr, align 4, !dbg !14235, !tbaa !4126
  %tobool = icmp ne i32 %0, 0, !dbg !14235
  br i1 %tobool, label %if.then, label %if.end, !dbg !14237

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !14238, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 24, !dbg !14238
  %call = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !14238
  br label %if.end, !dbg !14238

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr %rk.addr, align 8, !dbg !14239, !tbaa !3910
  %rk_eos = getelementptr inbounds %struct.rd_kafka_s, ptr %2, i32 0, i32 38, !dbg !14239
  %idemp_state = getelementptr inbounds %struct.anon.25, ptr %rk_eos, i32 0, i32 0, !dbg !14239
  %3 = load i32, ptr %idemp_state, align 8, !dbg !14239, !tbaa !14241
  %cmp = icmp eq i32 %3, 6, !dbg !14239
  %conv = zext i1 %cmp to i32, !dbg !14239
  %conv1 = sext i32 %conv to i64, !dbg !14239
  %expval = call i64 @llvm.expect.i64(i64 %conv1, i64 1), !dbg !14239
  %tobool2 = icmp ne i64 %expval, 0, !dbg !14239
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !14242

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr %rk.addr, align 8, !dbg !14243, !tbaa !3910
  %rk_eos4 = getelementptr inbounds %struct.rd_kafka_s, ptr %4, i32 0, i32 38, !dbg !14244
  %pid = getelementptr inbounds %struct.anon.25, ptr %rk_eos4, i32 0, i32 2, !dbg !14245
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %pid, i64 16, i1 false), !dbg !14245, !tbaa.struct !14087
  br label %if.end19, !dbg !14246

if.else:                                          ; preds = %if.end
  %5 = load i8, ptr %bumpable.addr, align 1, !dbg !14247, !tbaa !4126
  %conv5 = zext i8 %5 to i32, !dbg !14247
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !14247
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !14247

land.rhs:                                         ; preds = %if.else
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !14247, !tbaa !3910
  %rk_eos7 = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 38, !dbg !14247
  %idemp_state8 = getelementptr inbounds %struct.anon.25, ptr %rk_eos7, i32 0, i32 0, !dbg !14247
  %7 = load i32, ptr %idemp_state8, align 8, !dbg !14247, !tbaa !14241
  %cmp9 = icmp eq i32 %7, 9, !dbg !14247
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %8 = phi i1 [ false, %if.else ], [ %cmp9, %land.rhs ], !dbg !14249
  %land.ext = zext i1 %8 to i32, !dbg !14247
  %conv11 = sext i32 %land.ext to i64, !dbg !14247
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !14247
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !14247
  br i1 %tobool13, label %if.then14, label %if.else17, !dbg !14250

if.then14:                                        ; preds = %land.end
  %9 = load ptr, ptr %rk.addr, align 8, !dbg !14251, !tbaa !3910
  %rk_eos15 = getelementptr inbounds %struct.rd_kafka_s, ptr %9, i32 0, i32 38, !dbg !14252
  %pid16 = getelementptr inbounds %struct.anon.25, ptr %rk_eos15, i32 0, i32 2, !dbg !14253
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %pid16, i64 16, i1 false), !dbg !14253, !tbaa.struct !14087
  br label %if.end18, !dbg !14254

if.else17:                                        ; preds = %land.end
  call void @rd_kafka_pid_reset(ptr noundef %retval), !dbg !14255
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.then14
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then3
  %10 = load i32, ptr %do_lock.addr, align 4, !dbg !14256, !tbaa !4126
  %tobool20 = icmp ne i32 %10, 0, !dbg !14256
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !14258

if.then21:                                        ; preds = %if.end19
  %11 = load ptr, ptr %rk.addr, align 8, !dbg !14259, !tbaa !3910
  %rk_lock22 = getelementptr inbounds %struct.rd_kafka_s, ptr %11, i32 0, i32 24, !dbg !14259
  %call23 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock22), !dbg !14259
  br label %if.end24, !dbg !14259

if.end24:                                         ; preds = %if.then21, %if.end19
  %12 = load { i64, i16 }, ptr %retval, align 8, !dbg !14260
  ret { i64, i16 } %12, !dbg !14260
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @rd_kafka_txn_may_send_msg(ptr noundef %rk) #4 !dbg !14261 {
entry:
  %rk.addr = alloca ptr, align 8
  %ret = alloca i8, align 1
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !14264, metadata !DIExpression()), !dbg !14266
  call void @llvm.lifetime.start.p0(i64 1, ptr %ret) #16, !dbg !14267
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !14265, metadata !DIExpression()), !dbg !14268
  %0 = load ptr, ptr %rk.addr, align 8, !dbg !14269, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %0, i32 0, i32 24, !dbg !14269
  %call = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !14269
  %1 = load ptr, ptr %rk.addr, align 8, !dbg !14270, !tbaa !3910
  %rk_eos = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 38, !dbg !14271
  %txn_state = getelementptr inbounds %struct.anon.25, ptr %rk_eos, i32 0, i32 8, !dbg !14272
  %2 = load i32, ptr %txn_state, align 8, !dbg !14272, !tbaa !14273
  %cmp = icmp eq i32 %2, 4, !dbg !14274
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14275

lor.rhs:                                          ; preds = %entry
  %3 = load ptr, ptr %rk.addr, align 8, !dbg !14276, !tbaa !3910
  %rk_eos1 = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 38, !dbg !14277
  %txn_state2 = getelementptr inbounds %struct.anon.25, ptr %rk_eos1, i32 0, i32 8, !dbg !14278
  %4 = load i32, ptr %txn_state2, align 8, !dbg !14278, !tbaa !14273
  %cmp3 = icmp eq i32 %4, 5, !dbg !14279
  br label %lor.end, !dbg !14275

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32, !dbg !14275
  %conv = trunc i32 %lor.ext to i8, !dbg !14280
  store i8 %conv, ptr %ret, align 1, !dbg !14281, !tbaa !4126
  %6 = load ptr, ptr %rk.addr, align 8, !dbg !14282, !tbaa !3910
  %rk_lock4 = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 24, !dbg !14282
  %call5 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock4), !dbg !14282
  %7 = load i8, ptr %ret, align 1, !dbg !14283, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 1, ptr %ret) #16, !dbg !14284
  ret i8 %7, !dbg !14285
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_toppar_producer_serve(ptr noundef %rkb, ptr noundef %rktp, i64 %pid.coerce0, i16 %pid.coerce1, i64 noundef %now, ptr noundef %next_wakeup, i8 noundef zeroext %do_timeout_scan, i8 noundef zeroext %may_send, i8 noundef zeroext %flushing) #0 !dbg !14286 {
entry:
  %retval = alloca i32, align 4
  %pid = alloca %struct.rd_kafka_pid_s, align 8
  %rkb.addr = alloca ptr, align 8
  %rktp.addr = alloca ptr, align 8
  %now.addr = alloca i64, align 8
  %next_wakeup.addr = alloca ptr, align 8
  %do_timeout_scan.addr = alloca i8, align 1
  %may_send.addr = alloca i8, align 1
  %flushing.addr = alloca i8, align 1
  %cnt = alloca i32, align 4
  %r = alloca i32, align 4
  %rkm = alloca ptr, align 8
  %move_cnt = alloca i32, align 4
  %max_requests = alloca i32, align 4
  %reqcnt = alloca i32, align 4
  %inflight = alloca i32, align 4
  %epoch_base_msgid = alloca i64, align 8
  %batch_ready = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  %timeoutcnt = alloca i32, align 4
  %next = alloca i64, align 8
  %__n = alloca ptr, align 8
  %__m = alloca i64, align 8
  %did_purge = alloca i8, align 1
  %_logname = alloca [256 x i8], align 16
  %_logname182 = alloca [256 x i8], align 16
  %_logname230 = alloca [256 x i8], align 16
  %_logname299 = alloca [256 x i8], align 16
  %_logname380 = alloca [256 x i8], align 16
  %0 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 0
  store i64 %pid.coerce0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 1
  store i16 %pid.coerce1, ptr %1, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !14291, metadata !DIExpression()), !dbg !14353
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !14292, metadata !DIExpression()), !dbg !14354
  tail call void @llvm.dbg.declare(metadata ptr %pid, metadata !14293, metadata !DIExpression()), !dbg !14355
  store i64 %now, ptr %now.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !14294, metadata !DIExpression()), !dbg !14356
  store ptr %next_wakeup, ptr %next_wakeup.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %next_wakeup.addr, metadata !14295, metadata !DIExpression()), !dbg !14357
  store i8 %do_timeout_scan, ptr %do_timeout_scan.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %do_timeout_scan.addr, metadata !14296, metadata !DIExpression()), !dbg !14358
  store i8 %may_send, ptr %may_send.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %may_send.addr, metadata !14297, metadata !DIExpression()), !dbg !14359
  store i8 %flushing, ptr %flushing.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %flushing.addr, metadata !14298, metadata !DIExpression()), !dbg !14360
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !14361
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !14299, metadata !DIExpression()), !dbg !14362
  store i32 0, ptr %cnt, align 4, !dbg !14362, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !14363
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !14300, metadata !DIExpression()), !dbg !14364
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkm) #16, !dbg !14365
  tail call void @llvm.dbg.declare(metadata ptr %rkm, metadata !14301, metadata !DIExpression()), !dbg !14366
  call void @llvm.lifetime.start.p0(i64 4, ptr %move_cnt) #16, !dbg !14367
  tail call void @llvm.dbg.declare(metadata ptr %move_cnt, metadata !14302, metadata !DIExpression()), !dbg !14368
  store i32 0, ptr %move_cnt, align 4, !dbg !14368, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_requests) #16, !dbg !14369
  tail call void @llvm.dbg.declare(metadata ptr %max_requests, metadata !14303, metadata !DIExpression()), !dbg !14370
  call void @llvm.lifetime.start.p0(i64 4, ptr %reqcnt) #16, !dbg !14371
  tail call void @llvm.dbg.declare(metadata ptr %reqcnt, metadata !14304, metadata !DIExpression()), !dbg !14372
  call void @llvm.lifetime.start.p0(i64 4, ptr %inflight) #16, !dbg !14373
  tail call void @llvm.dbg.declare(metadata ptr %inflight, metadata !14305, metadata !DIExpression()), !dbg !14374
  store i32 0, ptr %inflight, align 4, !dbg !14374, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 8, ptr %epoch_base_msgid) #16, !dbg !14375
  tail call void @llvm.dbg.declare(metadata ptr %epoch_base_msgid, metadata !14306, metadata !DIExpression()), !dbg !14376
  store i64 0, ptr %epoch_base_msgid, align 8, !dbg !14376, !tbaa !4039
  call void @llvm.lifetime.start.p0(i64 1, ptr %batch_ready) #16, !dbg !14377
  tail call void @llvm.dbg.declare(metadata ptr %batch_ready, metadata !14307, metadata !DIExpression()), !dbg !14378
  store i8 0, ptr %batch_ready, align 1, !dbg !14378, !tbaa !4126
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !14379, !tbaa !3910
  %call = call i32 @rd_kafka_broker_outbufs_space(ptr noundef %2), !dbg !14380
  store i32 %call, ptr %max_requests, align 4, !dbg !14381, !tbaa !3959
  %3 = load ptr, ptr %rktp.addr, align 8, !dbg !14382, !tbaa !3910
  %rktp_lock = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %3, i32 0, i32 14, !dbg !14382
  %call1 = call i32 @mtx_lock(ptr noundef %rktp_lock), !dbg !14382
  %4 = load ptr, ptr %rktp.addr, align 8, !dbg !14383, !tbaa !3910
  %rktp_broker = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %4, i32 0, i32 11, !dbg !14383
  %5 = load ptr, ptr %rktp_broker, align 8, !dbg !14383, !tbaa !4644
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !14383, !tbaa !3910
  %cmp = icmp ne ptr %5, %6, !dbg !14383
  %conv = zext i1 %cmp to i32, !dbg !14383
  %conv2 = sext i32 %conv to i64, !dbg !14383
  %expval = call i64 @llvm.expect.i64(i64 %conv2, i64 0), !dbg !14383
  %tobool = icmp ne i64 %expval, 0, !dbg !14383
  br i1 %tobool, label %if.then, label %if.end, !dbg !14385

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %rktp.addr, align 8, !dbg !14386, !tbaa !3910
  %rktp_lock3 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %7, i32 0, i32 14, !dbg !14386
  %call4 = call i32 @mtx_unlock(ptr noundef %rktp_lock3), !dbg !14386
  store i32 0, ptr %retval, align 4, !dbg !14388
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup455, !dbg !14388

if.end:                                           ; preds = %entry
  %8 = load i8, ptr %do_timeout_scan.addr, align 1, !dbg !14389, !tbaa !4126
  %conv5 = zext i8 %8 to i64, !dbg !14389
  %expval6 = call i64 @llvm.expect.i64(i64 %conv5, i64 0), !dbg !14389
  %tobool7 = icmp ne i64 %expval6, 0, !dbg !14389
  br i1 %tobool7, label %if.then8, label %if.end37, !dbg !14390

if.then8:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %timeoutcnt) #16, !dbg !14391
  tail call void @llvm.dbg.declare(metadata ptr %timeoutcnt, metadata !14308, metadata !DIExpression()), !dbg !14392
  call void @llvm.lifetime.start.p0(i64 8, ptr %next) #16, !dbg !14393
  tail call void @llvm.dbg.declare(metadata ptr %next, metadata !14311, metadata !DIExpression()), !dbg !14394
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !14395, !tbaa !3910
  %10 = load ptr, ptr %rktp.addr, align 8, !dbg !14396, !tbaa !3910
  %11 = load i64, ptr %now.addr, align 8, !dbg !14397, !tbaa !4039
  %call9 = call i32 @rd_kafka_broker_toppar_msgq_scan(ptr noundef %9, ptr noundef %10, i64 noundef %11, ptr noundef %next), !dbg !14398
  store i32 %call9, ptr %timeoutcnt, align 4, !dbg !14399, !tbaa !3959
  %12 = load i64, ptr %next, align 8, !dbg !14400, !tbaa !4039
  %tobool10 = icmp ne i64 %12, 0, !dbg !14400
  br i1 %tobool10, label %if.then11, label %if.end19, !dbg !14401

if.then11:                                        ; preds = %if.then8
  br label %do.body, !dbg !14402

do.body:                                          ; preds = %if.then11
  call void @llvm.lifetime.start.p0(i64 8, ptr %__n) #16, !dbg !14403
  tail call void @llvm.dbg.declare(metadata ptr %__n, metadata !14312, metadata !DIExpression()), !dbg !14403
  %13 = load ptr, ptr %next_wakeup.addr, align 8, !dbg !14403, !tbaa !3910
  store ptr %13, ptr %__n, align 8, !dbg !14403, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %__m) #16, !dbg !14403
  tail call void @llvm.dbg.declare(metadata ptr %__m, metadata !14315, metadata !DIExpression()), !dbg !14403
  %14 = load i64, ptr %next, align 8, !dbg !14403, !tbaa !4039
  store i64 %14, ptr %__m, align 8, !dbg !14403, !tbaa !4039
  br label %do.body12, !dbg !14403

do.body12:                                        ; preds = %do.body
  br label %do.cond, !dbg !14404

do.cond:                                          ; preds = %do.body12
  br label %do.end, !dbg !14404

do.end:                                           ; preds = %do.cond
  %15 = load i64, ptr %__m, align 8, !dbg !14406, !tbaa !4039
  %16 = load ptr, ptr %__n, align 8, !dbg !14406, !tbaa !3910
  %17 = load i64, ptr %16, align 8, !dbg !14406, !tbaa !4039
  %cmp13 = icmp slt i64 %15, %17, !dbg !14406
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !14403

if.then15:                                        ; preds = %do.end
  %18 = load i64, ptr %__m, align 8, !dbg !14406, !tbaa !4039
  %19 = load ptr, ptr %__n, align 8, !dbg !14406, !tbaa !3910
  store i64 %18, ptr %19, align 8, !dbg !14406, !tbaa !4039
  br label %if.end16, !dbg !14406

if.end16:                                         ; preds = %if.then15, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %__m) #16, !dbg !14402
  call void @llvm.lifetime.end.p0(i64 8, ptr %__n) #16, !dbg !14402
  br label %do.cond17, !dbg !14403

do.cond17:                                        ; preds = %if.end16
  br label %do.end18, !dbg !14403

do.end18:                                         ; preds = %do.cond17
  br label %if.end19, !dbg !14403

if.end19:                                         ; preds = %do.end18, %if.then8
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !14408, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 32, !dbg !14408
  %21 = load ptr, ptr %rkb_rk, align 8, !dbg !14408, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %21, i32 0, i32 18, !dbg !14408
  %eos = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 78, !dbg !14408
  %idempotence = getelementptr inbounds %struct.anon.18, ptr %eos, i32 0, i32 0, !dbg !14408
  %22 = load i32, ptr %idempotence, align 8, !dbg !14408, !tbaa !13116
  %tobool20 = icmp ne i32 %22, 0, !dbg !14408
  br i1 %tobool20, label %if.then21, label %if.end35, !dbg !14410

if.then21:                                        ; preds = %if.end19
  %id = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %pid, i32 0, i32 0, !dbg !14411
  %23 = load i64, ptr %id, align 8, !dbg !14411, !tbaa !14090
  %cmp22 = icmp ne i64 %23, -1, !dbg !14411
  br i1 %cmp22, label %if.else, label %if.then24, !dbg !14414

if.then24:                                        ; preds = %if.then21
  %24 = load ptr, ptr %rktp.addr, align 8, !dbg !14415, !tbaa !3910
  %rktp_lock25 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %24, i32 0, i32 14, !dbg !14415
  %call26 = call i32 @mtx_unlock(ptr noundef %rktp_lock25), !dbg !14415
  store i32 0, ptr %retval, align 4, !dbg !14417
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14417

if.else:                                          ; preds = %if.then21
  %25 = load i32, ptr %timeoutcnt, align 4, !dbg !14418, !tbaa !3959
  %cmp27 = icmp sgt i32 %25, 0, !dbg !14420
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !14421

if.then29:                                        ; preds = %if.else
  %26 = load ptr, ptr %rktp.addr, align 8, !dbg !14422, !tbaa !3910
  %rktp_lock30 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %26, i32 0, i32 14, !dbg !14422
  %call31 = call i32 @mtx_unlock(ptr noundef %rktp_lock30), !dbg !14422
  %27 = load ptr, ptr %rkb.addr, align 8, !dbg !14424, !tbaa !3910
  %rkb_rk32 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %27, i32 0, i32 32, !dbg !14424
  %28 = load ptr, ptr %rkb_rk32, align 8, !dbg !14424, !tbaa !4139
  %29 = load i32, ptr %timeoutcnt, align 4, !dbg !14424, !tbaa !3959
  %30 = load ptr, ptr %rktp.addr, align 8, !dbg !14424, !tbaa !3910
  %rktp_rkt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %30, i32 0, i32 6, !dbg !14424
  %31 = load ptr, ptr %rktp_rkt, align 8, !dbg !14424, !tbaa !8643
  %rkt_topic = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %31, i32 0, i32 4, !dbg !14424
  %32 = load ptr, ptr %rkt_topic, align 8, !dbg !14424, !tbaa !8676
  %str = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %32, i32 0, i32 1, !dbg !14424
  %33 = load ptr, ptr %str, align 8, !dbg !14424, !tbaa !8679
  %34 = load ptr, ptr %rktp.addr, align 8, !dbg !14424, !tbaa !3910
  %rktp_partition = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %34, i32 0, i32 7, !dbg !14424
  %35 = load i32, ptr %rktp_partition, align 8, !dbg !14424, !tbaa !8680
  call void (ptr, i8, i32, ptr, ...) @rd_kafka_idemp_drain_epoch_bump0(ptr noundef %28, i8 noundef zeroext 1, i32 noundef -185, ptr noundef @.str.251, i32 noundef %29, ptr noundef %33, i32 noundef %35), !dbg !14424
  store i32 0, ptr %retval, align 4, !dbg !14425
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14425

if.end33:                                         ; preds = %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %if.end35, !dbg !14426

if.end35:                                         ; preds = %if.end34, %if.end19
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14427
  br label %cleanup, !dbg !14427

cleanup:                                          ; preds = %if.end35, %if.then29, %if.then24
  call void @llvm.lifetime.end.p0(i64 8, ptr %next) #16, !dbg !14427
  call void @llvm.lifetime.end.p0(i64 4, ptr %timeoutcnt) #16, !dbg !14427
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup455 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end37, !dbg !14428

if.end37:                                         ; preds = %cleanup.cont, %if.end
  %36 = load i8, ptr %may_send.addr, align 1, !dbg !14429, !tbaa !4126
  %tobool38 = icmp ne i8 %36, 0, !dbg !14429
  %lnot = xor i1 %tobool38, true, !dbg !14429
  %lnot.ext = zext i1 %lnot to i32, !dbg !14429
  %conv39 = sext i32 %lnot.ext to i64, !dbg !14429
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0), !dbg !14429
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !14429
  br i1 %tobool41, label %if.then42, label %if.else43, !dbg !14431

if.then42:                                        ; preds = %if.end37
  store i32 0, ptr %max_requests, align 4, !dbg !14432, !tbaa !3959
  br label %if.end101, !dbg !14434

if.else43:                                        ; preds = %if.end37
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !14435, !tbaa !3910
  %rkb_rk44 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 32, !dbg !14435
  %38 = load ptr, ptr %rkb_rk44, align 8, !dbg !14435, !tbaa !4139
  %call45 = call i32 @rd_kafka_fatal_error_code(ptr noundef %38), !dbg !14435
  %conv46 = sext i32 %call45 to i64, !dbg !14435
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 0), !dbg !14435
  %tobool48 = icmp ne i64 %expval47, 0, !dbg !14435
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !14437

if.then49:                                        ; preds = %if.else43
  store i32 0, ptr %max_requests, align 4, !dbg !14438, !tbaa !3959
  br label %if.end100, !dbg !14440

if.else50:                                        ; preds = %if.else43
  %39 = load ptr, ptr %rktp.addr, align 8, !dbg !14441, !tbaa !3910
  %rktp_flags = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %39, i32 0, i32 54, !dbg !14441
  %40 = load i32, ptr %rktp_flags, align 8, !dbg !14441, !tbaa !14443
  %and = and i32 %40, 48, !dbg !14441
  %conv51 = sext i32 %and to i64, !dbg !14441
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0), !dbg !14441
  %tobool53 = icmp ne i64 %expval52, 0, !dbg !14441
  br i1 %tobool53, label %if.then54, label %if.else55, !dbg !14444

if.then54:                                        ; preds = %if.else50
  store i32 0, ptr %max_requests, align 4, !dbg !14445, !tbaa !3959
  br label %if.end99, !dbg !14447

if.else55:                                        ; preds = %if.else50
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !14448, !tbaa !3910
  %rkb_rk56 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 32, !dbg !14448
  %42 = load ptr, ptr %rkb_rk56, align 8, !dbg !14448, !tbaa !4139
  %rk_conf57 = getelementptr inbounds %struct.rd_kafka_s, ptr %42, i32 0, i32 18, !dbg !14448
  %eos58 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf57, i32 0, i32 78, !dbg !14448
  %transactional_id = getelementptr inbounds %struct.anon.18, ptr %eos58, i32 0, i32 2, !dbg !14448
  %43 = load ptr, ptr %transactional_id, align 8, !dbg !14448, !tbaa !8431
  %cmp59 = icmp ne ptr %43, null, !dbg !14448
  br i1 %cmp59, label %land.rhs, label %land.end, !dbg !14448

land.rhs:                                         ; preds = %if.else55
  %44 = load ptr, ptr %rktp.addr, align 8, !dbg !14448, !tbaa !3910
  %call61 = call zeroext i8 @rd_kafka_txn_toppar_may_send_msg(ptr noundef %44), !dbg !14448
  %tobool62 = icmp ne i8 %call61, 0, !dbg !14448
  %lnot63 = xor i1 %tobool62, true, !dbg !14448
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else55
  %45 = phi i1 [ false, %if.else55 ], [ %lnot63, %land.rhs ], !dbg !14450
  %land.ext = zext i1 %45 to i32, !dbg !14448
  %conv65 = sext i32 %land.ext to i64, !dbg !14448
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0), !dbg !14448
  %tobool67 = icmp ne i64 %expval66, 0, !dbg !14448
  br i1 %tobool67, label %if.then68, label %if.else69, !dbg !14451

if.then68:                                        ; preds = %land.end
  store i32 0, ptr %max_requests, align 4, !dbg !14452, !tbaa !3959
  br label %if.end98, !dbg !14454

if.else69:                                        ; preds = %land.end
  %46 = load i32, ptr %max_requests, align 4, !dbg !14455, !tbaa !3959
  %cmp70 = icmp sgt i32 %46, 0, !dbg !14457
  br i1 %cmp70, label %if.then72, label %if.end97, !dbg !14458

if.then72:                                        ; preds = %if.else69
  %47 = load ptr, ptr %rktp.addr, align 8, !dbg !14459, !tbaa !3910
  %rktp_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %47, i32 0, i32 16, !dbg !14462
  %rkmq_msg_cnt = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %rktp_msgq, i32 0, i32 1, !dbg !14463
  %48 = load i32, ptr %rkmq_msg_cnt, align 8, !dbg !14463, !tbaa !14464
  store i32 %48, ptr %move_cnt, align 4, !dbg !14465, !tbaa !3959
  %cmp73 = icmp sgt i32 %48, 0, !dbg !14466
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !14467

if.then75:                                        ; preds = %if.then72
  %49 = load ptr, ptr %rktp.addr, align 8, !dbg !14468, !tbaa !3910
  %rktp_xmit_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %49, i32 0, i32 17, !dbg !14470
  %50 = load ptr, ptr %rktp.addr, align 8, !dbg !14471, !tbaa !3910
  %rktp_msgq76 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %50, i32 0, i32 16, !dbg !14472
  %51 = load ptr, ptr %rktp.addr, align 8, !dbg !14473, !tbaa !3910
  %rktp_rkt77 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %51, i32 0, i32 6, !dbg !14474
  %52 = load ptr, ptr %rktp_rkt77, align 8, !dbg !14474, !tbaa !8643
  %rkt_conf = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %52, i32 0, i32 21, !dbg !14475
  %msg_order_cmp = getelementptr inbounds %struct.rd_kafka_topic_conf_s, ptr %rkt_conf, i32 0, i32 8, !dbg !14476
  %53 = load ptr, ptr %msg_order_cmp, align 8, !dbg !14476, !tbaa !8665
  call void @rd_kafka_msgq_insert_msgq(ptr noundef %rktp_xmit_msgq, ptr noundef %rktp_msgq76, ptr noundef %53), !dbg !14477
  br label %if.end78, !dbg !14478

if.end78:                                         ; preds = %if.then75, %if.then72
  %54 = load ptr, ptr %rktp.addr, align 8, !dbg !14479, !tbaa !3910
  %rktp_msgq79 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %54, i32 0, i32 16, !dbg !14480
  %55 = load ptr, ptr %rktp.addr, align 8, !dbg !14481, !tbaa !3910
  %rktp_xmit_msgq80 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %55, i32 0, i32 17, !dbg !14482
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !14483, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 19, !dbg !14484
  %57 = load i32, ptr %rkb_state, align 4, !dbg !14484, !tbaa !4130
  %cmp81 = icmp eq i32 %57, 6, !dbg !14485
  br i1 %cmp81, label %cond.true, label %cond.false, !dbg !14483

cond.true:                                        ; preds = %if.end78
  %58 = load ptr, ptr %next_wakeup.addr, align 8, !dbg !14486, !tbaa !3910
  br label %cond.end, !dbg !14483

cond.false:                                       ; preds = %if.end78
  br label %cond.end, !dbg !14483

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %58, %cond.true ], [ null, %cond.false ], !dbg !14483
  %59 = load i64, ptr %now.addr, align 8, !dbg !14487, !tbaa !4039
  %60 = load i8, ptr %flushing.addr, align 1, !dbg !14488, !tbaa !4126
  %conv83 = zext i8 %60 to i32, !dbg !14488
  %tobool84 = icmp ne i32 %conv83, 0, !dbg !14488
  br i1 %tobool84, label %cond.true85, label %cond.false86, !dbg !14488

cond.true85:                                      ; preds = %cond.end
  br label %cond.end89, !dbg !14488

cond.false86:                                     ; preds = %cond.end
  %61 = load ptr, ptr %rkb.addr, align 8, !dbg !14489, !tbaa !3910
  %rkb_rk87 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %61, i32 0, i32 32, !dbg !14490
  %62 = load ptr, ptr %rkb_rk87, align 8, !dbg !14490, !tbaa !4139
  %rk_conf88 = getelementptr inbounds %struct.rd_kafka_s, ptr %62, i32 0, i32 18, !dbg !14491
  %buffering_max_us = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf88, i32 0, i32 82, !dbg !14492
  %63 = load i64, ptr %buffering_max_us, align 8, !dbg !14492, !tbaa !14493
  br label %cond.end89, !dbg !14488

cond.end89:                                       ; preds = %cond.false86, %cond.true85
  %cond90 = phi i64 [ 1, %cond.true85 ], [ %63, %cond.false86 ], !dbg !14488
  %64 = load ptr, ptr %rkb.addr, align 8, !dbg !14494, !tbaa !3910
  %rkb_rk91 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %64, i32 0, i32 32, !dbg !14495
  %65 = load ptr, ptr %rkb_rk91, align 8, !dbg !14495, !tbaa !4139
  %rk_conf92 = getelementptr inbounds %struct.rd_kafka_s, ptr %65, i32 0, i32 18, !dbg !14496
  %batch_num_messages = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf92, i32 0, i32 86, !dbg !14497
  %66 = load i32, ptr %batch_num_messages, align 4, !dbg !14497, !tbaa !14498
  %67 = load ptr, ptr %rkb.addr, align 8, !dbg !14499, !tbaa !3910
  %rkb_rk93 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %67, i32 0, i32 32, !dbg !14500
  %68 = load ptr, ptr %rkb_rk93, align 8, !dbg !14500, !tbaa !4139
  %rk_conf94 = getelementptr inbounds %struct.rd_kafka_s, ptr %68, i32 0, i32 18, !dbg !14501
  %batch_size = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf94, i32 0, i32 87, !dbg !14502
  %69 = load i32, ptr %batch_size, align 8, !dbg !14502, !tbaa !14503
  %conv95 = sext i32 %69 to i64, !dbg !14499
  %call96 = call zeroext i8 @rd_kafka_msgq_allow_wakeup_at(ptr noundef %rktp_msgq79, ptr noundef %rktp_xmit_msgq80, ptr noundef %cond, i64 noundef %59, i64 noundef %cond90, i32 noundef %66, i64 noundef %conv95), !dbg !14504
  store i8 %call96, ptr %batch_ready, align 1, !dbg !14505, !tbaa !4126
  br label %if.end97, !dbg !14506

if.end97:                                         ; preds = %cond.end89, %if.else69
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then68
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then54
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then49
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then42
  %70 = load ptr, ptr %rktp.addr, align 8, !dbg !14507, !tbaa !3910
  %rktp_lock102 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %70, i32 0, i32 14, !dbg !14507
  %call103 = call i32 @mtx_unlock(ptr noundef %rktp_lock102), !dbg !14507
  %71 = load ptr, ptr %rkb.addr, align 8, !dbg !14508, !tbaa !3910
  %rkb_rk104 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %71, i32 0, i32 32, !dbg !14508
  %72 = load ptr, ptr %rkb_rk104, align 8, !dbg !14508, !tbaa !4139
  %rk_conf105 = getelementptr inbounds %struct.rd_kafka_s, ptr %72, i32 0, i32 18, !dbg !14508
  %eos106 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf105, i32 0, i32 78, !dbg !14508
  %idempotence107 = getelementptr inbounds %struct.anon.18, ptr %eos106, i32 0, i32 0, !dbg !14508
  %73 = load i32, ptr %idempotence107, align 8, !dbg !14508, !tbaa !13116
  %tobool108 = icmp ne i32 %73, 0, !dbg !14508
  br i1 %tobool108, label %if.then109, label %if.end275, !dbg !14509

if.then109:                                       ; preds = %if.end101
  call void @llvm.lifetime.start.p0(i64 1, ptr %did_purge) #16, !dbg !14510
  tail call void @llvm.dbg.declare(metadata ptr %did_purge, metadata !14316, metadata !DIExpression()), !dbg !14511
  store i8 0, ptr %did_purge, align 1, !dbg !14511, !tbaa !4126
  %74 = load ptr, ptr %rktp.addr, align 8, !dbg !14512, !tbaa !3910
  %rktp_eos = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %74, i32 0, i32 23, !dbg !14512
  %pid110 = getelementptr inbounds %struct.anon.46, ptr %rktp_eos, i32 0, i32 0, !dbg !14512
  %75 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 0, !dbg !14512
  %76 = load i64, ptr %75, align 8, !dbg !14512
  %77 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 1, !dbg !14512
  %78 = load i16, ptr %77, align 8, !dbg !14512
  %79 = getelementptr inbounds { i64, i16 }, ptr %pid110, i32 0, i32 0, !dbg !14512
  %80 = load i64, ptr %79, align 8, !dbg !14512
  %81 = getelementptr inbounds { i64, i16 }, ptr %pid110, i32 0, i32 1, !dbg !14512
  %82 = load i16, ptr %81, align 8, !dbg !14512
  %call111 = call i32 @rd_kafka_pid_eq(i64 %76, i16 %78, i64 %80, i16 %82), !dbg !14512
  %tobool112 = icmp ne i32 %call111, 0, !dbg !14512
  %lnot113 = xor i1 %tobool112, true, !dbg !14512
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !14512
  %conv115 = sext i32 %lnot.ext114 to i64, !dbg !14512
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 0), !dbg !14512
  %tobool117 = icmp ne i64 %expval116, 0, !dbg !14512
  br i1 %tobool117, label %if.then118, label %if.end163, !dbg !14513

if.then118:                                       ; preds = %if.then109
  %83 = load ptr, ptr %rkb.addr, align 8, !dbg !14514, !tbaa !3910
  %84 = load ptr, ptr %rkb.addr, align 8, !dbg !14515, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %84, i32 0, i32 35, !dbg !14516
  %85 = load ptr, ptr %rktp.addr, align 8, !dbg !14517, !tbaa !3910
  %call119 = call i32 @rd_kafka_broker_bufq_purge_by_toppar(ptr noundef %83, ptr noundef %rkb_outbufs, i64 noundef 0, ptr noundef %85, i32 noundef -153), !dbg !14518
  store i8 1, ptr %did_purge, align 1, !dbg !14519, !tbaa !4126
  %86 = load ptr, ptr %rktp.addr, align 8, !dbg !14520, !tbaa !3910
  %rktp_eos120 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %86, i32 0, i32 23, !dbg !14520
  %pid121 = getelementptr inbounds %struct.anon.46, ptr %rktp_eos120, i32 0, i32 0, !dbg !14520
  %id122 = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %pid121, i32 0, i32 0, !dbg !14520
  %87 = load i64, ptr %id122, align 8, !dbg !14520, !tbaa !14521
  %cmp123 = icmp ne i64 %87, -1, !dbg !14520
  br i1 %cmp123, label %if.then125, label %if.end162, !dbg !14522

if.then125:                                       ; preds = %if.then118
  br label %do.body126, !dbg !14523

do.body126:                                       ; preds = %if.then125
  %88 = load ptr, ptr %rkb.addr, align 8, !dbg !14524, !tbaa !3910
  %rkb_rk127 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %88, i32 0, i32 32, !dbg !14524
  %89 = load ptr, ptr %rkb_rk127, align 8, !dbg !14524, !tbaa !4139
  %rk_conf128 = getelementptr inbounds %struct.rd_kafka_s, ptr %89, i32 0, i32 18, !dbg !14524
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf128, i32 0, i32 13, !dbg !14524
  %90 = load i32, ptr %debug, align 8, !dbg !14524, !tbaa !4140
  %and129 = and i32 %90, 32, !dbg !14524
  %conv130 = sext i32 %and129 to i64, !dbg !14524
  %expval131 = call i64 @llvm.expect.i64(i64 %conv130, i64 0), !dbg !14524
  %tobool132 = icmp ne i64 %expval131, 0, !dbg !14524
  br i1 %tobool132, label %if.then133, label %if.end159, !dbg !14525

if.then133:                                       ; preds = %do.body126
  br label %do.body134, !dbg !14526

do.body134:                                       ; preds = %if.then133
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !14527
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !14319, metadata !DIExpression()), !dbg !14527
  %91 = load ptr, ptr %rkb.addr, align 8, !dbg !14527, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %91, i32 0, i32 49, !dbg !14527
  %call135 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !14527
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !14527
  %92 = load ptr, ptr %rkb.addr, align 8, !dbg !14527, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %92, i32 0, i32 48, !dbg !14527
  %93 = load ptr, ptr %rkb_logname, align 8, !dbg !14527, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %93, i64 noundef 256), !dbg !14527
  %94 = load ptr, ptr %rkb.addr, align 8, !dbg !14527, !tbaa !3910
  %rkb_logname_lock136 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %94, i32 0, i32 49, !dbg !14527
  %call137 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock136), !dbg !14527
  %95 = load ptr, ptr %rkb.addr, align 8, !dbg !14527, !tbaa !3910
  %rkb_rk138 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %95, i32 0, i32 32, !dbg !14527
  %96 = load ptr, ptr %rkb_rk138, align 8, !dbg !14527, !tbaa !4139
  %rk_conf139 = getelementptr inbounds %struct.rd_kafka_s, ptr %96, i32 0, i32 18, !dbg !14527
  %97 = load ptr, ptr %rkb.addr, align 8, !dbg !14527, !tbaa !3910
  %rkb_rk140 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %97, i32 0, i32 32, !dbg !14527
  %98 = load ptr, ptr %rkb_rk140, align 8, !dbg !14527, !tbaa !4139
  %arraydecay141 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !14527
  %99 = load ptr, ptr %rktp.addr, align 8, !dbg !14527, !tbaa !3910
  %rktp_rkt142 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %99, i32 0, i32 6, !dbg !14527
  %100 = load ptr, ptr %rktp_rkt142, align 8, !dbg !14527, !tbaa !8643
  %rkt_topic143 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %100, i32 0, i32 4, !dbg !14527
  %101 = load ptr, ptr %rkt_topic143, align 8, !dbg !14527, !tbaa !8676
  %len = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %101, i32 0, i32 0, !dbg !14527
  %102 = load i32, ptr %len, align 8, !dbg !14527, !tbaa !8677
  %cmp144 = icmp eq i32 %102, -1, !dbg !14527
  br i1 %cmp144, label %cond.true146, label %cond.false147, !dbg !14527

cond.true146:                                     ; preds = %do.body134
  br label %cond.end151, !dbg !14527

cond.false147:                                    ; preds = %do.body134
  %103 = load ptr, ptr %rktp.addr, align 8, !dbg !14527, !tbaa !3910
  %rktp_rkt148 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %103, i32 0, i32 6, !dbg !14527
  %104 = load ptr, ptr %rktp_rkt148, align 8, !dbg !14527, !tbaa !8643
  %rkt_topic149 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %104, i32 0, i32 4, !dbg !14527
  %105 = load ptr, ptr %rkt_topic149, align 8, !dbg !14527, !tbaa !8676
  %len150 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %105, i32 0, i32 0, !dbg !14527
  %106 = load i32, ptr %len150, align 8, !dbg !14527, !tbaa !8677
  br label %cond.end151, !dbg !14527

cond.end151:                                      ; preds = %cond.false147, %cond.true146
  %cond152 = phi i32 [ 0, %cond.true146 ], [ %106, %cond.false147 ], !dbg !14527
  %107 = load ptr, ptr %rktp.addr, align 8, !dbg !14527, !tbaa !3910
  %rktp_rkt153 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %107, i32 0, i32 6, !dbg !14527
  %108 = load ptr, ptr %rktp_rkt153, align 8, !dbg !14527, !tbaa !8643
  %rkt_topic154 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %108, i32 0, i32 4, !dbg !14527
  %109 = load ptr, ptr %rkt_topic154, align 8, !dbg !14527, !tbaa !8676
  %str155 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %109, i32 0, i32 1, !dbg !14527
  %110 = load ptr, ptr %str155, align 8, !dbg !14527, !tbaa !8679
  %111 = load ptr, ptr %rktp.addr, align 8, !dbg !14527, !tbaa !3910
  %rktp_partition156 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %111, i32 0, i32 7, !dbg !14527
  %112 = load i32, ptr %rktp_partition156, align 8, !dbg !14527, !tbaa !8680
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf139, ptr noundef %98, ptr noundef %arraydecay141, i32 noundef 7, i32 noundef 32, ptr noundef @.str.252, ptr noundef @.str.253, i32 noundef %cond152, ptr noundef %110, i32 noundef %112), !dbg !14527
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !14526
  br label %do.cond157, !dbg !14527

do.cond157:                                       ; preds = %cond.end151
  br label %do.end158, !dbg !14527

do.end158:                                        ; preds = %do.cond157
  br label %if.end159, !dbg !14526

if.end159:                                        ; preds = %do.end158, %do.body126
  br label %do.cond160, !dbg !14525

do.cond160:                                       ; preds = %if.end159
  br label %do.end161, !dbg !14525

do.end161:                                        ; preds = %do.cond160
  br label %if.end162, !dbg !14525

if.end162:                                        ; preds = %do.end161, %if.then118
  br label %if.end163, !dbg !14528

if.end163:                                        ; preds = %if.end162, %if.then109
  %113 = load ptr, ptr %rktp.addr, align 8, !dbg !14529, !tbaa !3910
  %rktp_msgs_inflight = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %113, i32 0, i32 21, !dbg !14530
  %call164 = call i32 @rd_atomic32_get(ptr noundef %rktp_msgs_inflight), !dbg !14531
  store i32 %call164, ptr %inflight, align 4, !dbg !14532, !tbaa !3959
  %114 = load ptr, ptr %rktp.addr, align 8, !dbg !14533, !tbaa !3910
  %rktp_eos165 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %114, i32 0, i32 23, !dbg !14533
  %wait_drain = getelementptr inbounds %struct.anon.46, ptr %rktp_eos165, i32 0, i32 5, !dbg !14533
  %115 = load i8, ptr %wait_drain, align 8, !dbg !14533, !tbaa !14534
  %conv166 = zext i8 %115 to i64, !dbg !14533
  %expval167 = call i64 @llvm.expect.i64(i64 %conv166, i64 0), !dbg !14533
  %tobool168 = icmp ne i64 %expval167, 0, !dbg !14533
  br i1 %tobool168, label %if.then169, label %if.end264, !dbg !14535

if.then169:                                       ; preds = %if.end163
  %116 = load i32, ptr %inflight, align 4, !dbg !14536, !tbaa !3959
  %tobool170 = icmp ne i32 %116, 0, !dbg !14536
  br i1 %tobool170, label %if.then171, label %if.end219, !dbg !14537

if.then171:                                       ; preds = %if.then169
  br label %do.body172, !dbg !14538

do.body172:                                       ; preds = %if.then171
  %117 = load ptr, ptr %rkb.addr, align 8, !dbg !14539, !tbaa !3910
  %rkb_rk173 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %117, i32 0, i32 32, !dbg !14539
  %118 = load ptr, ptr %rkb_rk173, align 8, !dbg !14539, !tbaa !4139
  %rk_conf174 = getelementptr inbounds %struct.rd_kafka_s, ptr %118, i32 0, i32 18, !dbg !14539
  %debug175 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf174, i32 0, i32 13, !dbg !14539
  %119 = load i32, ptr %debug175, align 8, !dbg !14539, !tbaa !4140
  %and176 = and i32 %119, 32, !dbg !14539
  %conv177 = sext i32 %and176 to i64, !dbg !14539
  %expval178 = call i64 @llvm.expect.i64(i64 %conv177, i64 0), !dbg !14539
  %tobool179 = icmp ne i64 %expval178, 0, !dbg !14539
  br i1 %tobool179, label %if.then180, label %if.end211, !dbg !14540

if.then180:                                       ; preds = %do.body172
  br label %do.body181, !dbg !14541

do.body181:                                       ; preds = %if.then180
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname182) #16, !dbg !14542
  tail call void @llvm.dbg.declare(metadata ptr %_logname182, metadata !14327, metadata !DIExpression()), !dbg !14542
  %120 = load ptr, ptr %rkb.addr, align 8, !dbg !14542, !tbaa !3910
  %rkb_logname_lock183 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %120, i32 0, i32 49, !dbg !14542
  %call184 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock183), !dbg !14542
  %arraydecay185 = getelementptr inbounds [256 x i8], ptr %_logname182, i64 0, i64 0, !dbg !14542
  %121 = load ptr, ptr %rkb.addr, align 8, !dbg !14542, !tbaa !3910
  %rkb_logname186 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %121, i32 0, i32 48, !dbg !14542
  %122 = load ptr, ptr %rkb_logname186, align 8, !dbg !14542, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay185, ptr noundef %122, i64 noundef 256), !dbg !14542
  %123 = load ptr, ptr %rkb.addr, align 8, !dbg !14542, !tbaa !3910
  %rkb_logname_lock187 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %123, i32 0, i32 49, !dbg !14542
  %call188 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock187), !dbg !14542
  %124 = load ptr, ptr %rkb.addr, align 8, !dbg !14542, !tbaa !3910
  %rkb_rk189 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %124, i32 0, i32 32, !dbg !14542
  %125 = load ptr, ptr %rkb_rk189, align 8, !dbg !14542, !tbaa !4139
  %rk_conf190 = getelementptr inbounds %struct.rd_kafka_s, ptr %125, i32 0, i32 18, !dbg !14542
  %126 = load ptr, ptr %rkb.addr, align 8, !dbg !14542, !tbaa !3910
  %rkb_rk191 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %126, i32 0, i32 32, !dbg !14542
  %127 = load ptr, ptr %rkb_rk191, align 8, !dbg !14542, !tbaa !4139
  %arraydecay192 = getelementptr inbounds [256 x i8], ptr %_logname182, i64 0, i64 0, !dbg !14542
  %128 = load ptr, ptr %rktp.addr, align 8, !dbg !14542, !tbaa !3910
  %rktp_rkt193 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %128, i32 0, i32 6, !dbg !14542
  %129 = load ptr, ptr %rktp_rkt193, align 8, !dbg !14542, !tbaa !8643
  %rkt_topic194 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %129, i32 0, i32 4, !dbg !14542
  %130 = load ptr, ptr %rkt_topic194, align 8, !dbg !14542, !tbaa !8676
  %len195 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %130, i32 0, i32 0, !dbg !14542
  %131 = load i32, ptr %len195, align 8, !dbg !14542, !tbaa !8677
  %cmp196 = icmp eq i32 %131, -1, !dbg !14542
  br i1 %cmp196, label %cond.true198, label %cond.false199, !dbg !14542

cond.true198:                                     ; preds = %do.body181
  br label %cond.end203, !dbg !14542

cond.false199:                                    ; preds = %do.body181
  %132 = load ptr, ptr %rktp.addr, align 8, !dbg !14542, !tbaa !3910
  %rktp_rkt200 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %132, i32 0, i32 6, !dbg !14542
  %133 = load ptr, ptr %rktp_rkt200, align 8, !dbg !14542, !tbaa !8643
  %rkt_topic201 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %133, i32 0, i32 4, !dbg !14542
  %134 = load ptr, ptr %rkt_topic201, align 8, !dbg !14542, !tbaa !8676
  %len202 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %134, i32 0, i32 0, !dbg !14542
  %135 = load i32, ptr %len202, align 8, !dbg !14542, !tbaa !8677
  br label %cond.end203, !dbg !14542

cond.end203:                                      ; preds = %cond.false199, %cond.true198
  %cond204 = phi i32 [ 0, %cond.true198 ], [ %135, %cond.false199 ], !dbg !14542
  %136 = load ptr, ptr %rktp.addr, align 8, !dbg !14542, !tbaa !3910
  %rktp_rkt205 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %136, i32 0, i32 6, !dbg !14542
  %137 = load ptr, ptr %rktp_rkt205, align 8, !dbg !14542, !tbaa !8643
  %rkt_topic206 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %137, i32 0, i32 4, !dbg !14542
  %138 = load ptr, ptr %rkt_topic206, align 8, !dbg !14542, !tbaa !8676
  %str207 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %138, i32 0, i32 1, !dbg !14542
  %139 = load ptr, ptr %str207, align 8, !dbg !14542, !tbaa !8679
  %140 = load ptr, ptr %rktp.addr, align 8, !dbg !14542, !tbaa !3910
  %rktp_partition208 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %140, i32 0, i32 7, !dbg !14542
  %141 = load i32, ptr %rktp_partition208, align 8, !dbg !14542, !tbaa !8680
  %142 = load i32, ptr %inflight, align 4, !dbg !14542, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf190, ptr noundef %127, ptr noundef %arraydecay192, i32 noundef 7, i32 noundef 32, ptr noundef @.str.252, ptr noundef @.str.254, i32 noundef %cond204, ptr noundef %139, i32 noundef %141, i32 noundef %142), !dbg !14542
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname182) #16, !dbg !14541
  br label %do.cond209, !dbg !14542

do.cond209:                                       ; preds = %cond.end203
  br label %do.end210, !dbg !14542

do.end210:                                        ; preds = %do.cond209
  br label %if.end211, !dbg !14541

if.end211:                                        ; preds = %do.end210, %do.body172
  br label %do.cond212, !dbg !14540

do.cond212:                                       ; preds = %if.end211
  br label %do.end213, !dbg !14540

do.end213:                                        ; preds = %do.cond212
  %143 = load i8, ptr %did_purge, align 1, !dbg !14543, !tbaa !4126
  %tobool214 = icmp ne i8 %143, 0, !dbg !14543
  br i1 %tobool214, label %if.end218, label %if.then215, !dbg !14545

if.then215:                                       ; preds = %do.end213
  %144 = load ptr, ptr %rkb.addr, align 8, !dbg !14546, !tbaa !3910
  %145 = load ptr, ptr %rkb.addr, align 8, !dbg !14547, !tbaa !3910
  %rkb_outbufs216 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %145, i32 0, i32 35, !dbg !14548
  %146 = load ptr, ptr %rktp.addr, align 8, !dbg !14549, !tbaa !3910
  %call217 = call i32 @rd_kafka_broker_bufq_purge_by_toppar(ptr noundef %144, ptr noundef %rkb_outbufs216, i64 noundef 0, ptr noundef %146, i32 noundef -153), !dbg !14550
  br label %if.end218, !dbg !14550

if.end218:                                        ; preds = %if.then215, %do.end213
  store i32 0, ptr %retval, align 4, !dbg !14551
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup272, !dbg !14551

if.end219:                                        ; preds = %if.then169
  br label %do.body220, !dbg !14552

do.body220:                                       ; preds = %if.end219
  %147 = load ptr, ptr %rkb.addr, align 8, !dbg !14553, !tbaa !3910
  %rkb_rk221 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %147, i32 0, i32 32, !dbg !14553
  %148 = load ptr, ptr %rkb_rk221, align 8, !dbg !14553, !tbaa !4139
  %rk_conf222 = getelementptr inbounds %struct.rd_kafka_s, ptr %148, i32 0, i32 18, !dbg !14553
  %debug223 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf222, i32 0, i32 13, !dbg !14553
  %149 = load i32, ptr %debug223, align 8, !dbg !14553, !tbaa !4140
  %and224 = and i32 %149, 32, !dbg !14553
  %conv225 = sext i32 %and224 to i64, !dbg !14553
  %expval226 = call i64 @llvm.expect.i64(i64 %conv225, i64 0), !dbg !14553
  %tobool227 = icmp ne i64 %expval226, 0, !dbg !14553
  br i1 %tobool227, label %if.then228, label %if.end259, !dbg !14554

if.then228:                                       ; preds = %do.body220
  br label %do.body229, !dbg !14555

do.body229:                                       ; preds = %if.then228
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname230) #16, !dbg !14556
  tail call void @llvm.dbg.declare(metadata ptr %_logname230, metadata !14336, metadata !DIExpression()), !dbg !14556
  %150 = load ptr, ptr %rkb.addr, align 8, !dbg !14556, !tbaa !3910
  %rkb_logname_lock231 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %150, i32 0, i32 49, !dbg !14556
  %call232 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock231), !dbg !14556
  %arraydecay233 = getelementptr inbounds [256 x i8], ptr %_logname230, i64 0, i64 0, !dbg !14556
  %151 = load ptr, ptr %rkb.addr, align 8, !dbg !14556, !tbaa !3910
  %rkb_logname234 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %151, i32 0, i32 48, !dbg !14556
  %152 = load ptr, ptr %rkb_logname234, align 8, !dbg !14556, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay233, ptr noundef %152, i64 noundef 256), !dbg !14556
  %153 = load ptr, ptr %rkb.addr, align 8, !dbg !14556, !tbaa !3910
  %rkb_logname_lock235 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %153, i32 0, i32 49, !dbg !14556
  %call236 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock235), !dbg !14556
  %154 = load ptr, ptr %rkb.addr, align 8, !dbg !14556, !tbaa !3910
  %rkb_rk237 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %154, i32 0, i32 32, !dbg !14556
  %155 = load ptr, ptr %rkb_rk237, align 8, !dbg !14556, !tbaa !4139
  %rk_conf238 = getelementptr inbounds %struct.rd_kafka_s, ptr %155, i32 0, i32 18, !dbg !14556
  %156 = load ptr, ptr %rkb.addr, align 8, !dbg !14556, !tbaa !3910
  %rkb_rk239 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %156, i32 0, i32 32, !dbg !14556
  %157 = load ptr, ptr %rkb_rk239, align 8, !dbg !14556, !tbaa !4139
  %arraydecay240 = getelementptr inbounds [256 x i8], ptr %_logname230, i64 0, i64 0, !dbg !14556
  %158 = load ptr, ptr %rktp.addr, align 8, !dbg !14556, !tbaa !3910
  %rktp_rkt241 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %158, i32 0, i32 6, !dbg !14556
  %159 = load ptr, ptr %rktp_rkt241, align 8, !dbg !14556, !tbaa !8643
  %rkt_topic242 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %159, i32 0, i32 4, !dbg !14556
  %160 = load ptr, ptr %rkt_topic242, align 8, !dbg !14556, !tbaa !8676
  %len243 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %160, i32 0, i32 0, !dbg !14556
  %161 = load i32, ptr %len243, align 8, !dbg !14556, !tbaa !8677
  %cmp244 = icmp eq i32 %161, -1, !dbg !14556
  br i1 %cmp244, label %cond.true246, label %cond.false247, !dbg !14556

cond.true246:                                     ; preds = %do.body229
  br label %cond.end251, !dbg !14556

cond.false247:                                    ; preds = %do.body229
  %162 = load ptr, ptr %rktp.addr, align 8, !dbg !14556, !tbaa !3910
  %rktp_rkt248 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %162, i32 0, i32 6, !dbg !14556
  %163 = load ptr, ptr %rktp_rkt248, align 8, !dbg !14556, !tbaa !8643
  %rkt_topic249 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %163, i32 0, i32 4, !dbg !14556
  %164 = load ptr, ptr %rkt_topic249, align 8, !dbg !14556, !tbaa !8676
  %len250 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %164, i32 0, i32 0, !dbg !14556
  %165 = load i32, ptr %len250, align 8, !dbg !14556, !tbaa !8677
  br label %cond.end251, !dbg !14556

cond.end251:                                      ; preds = %cond.false247, %cond.true246
  %cond252 = phi i32 [ 0, %cond.true246 ], [ %165, %cond.false247 ], !dbg !14556
  %166 = load ptr, ptr %rktp.addr, align 8, !dbg !14556, !tbaa !3910
  %rktp_rkt253 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %166, i32 0, i32 6, !dbg !14556
  %167 = load ptr, ptr %rktp_rkt253, align 8, !dbg !14556, !tbaa !8643
  %rkt_topic254 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %167, i32 0, i32 4, !dbg !14556
  %168 = load ptr, ptr %rkt_topic254, align 8, !dbg !14556, !tbaa !8676
  %str255 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %168, i32 0, i32 1, !dbg !14556
  %169 = load ptr, ptr %str255, align 8, !dbg !14556, !tbaa !8679
  %170 = load ptr, ptr %rktp.addr, align 8, !dbg !14556, !tbaa !3910
  %rktp_partition256 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %170, i32 0, i32 7, !dbg !14556
  %171 = load i32, ptr %rktp_partition256, align 8, !dbg !14556, !tbaa !8680
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf238, ptr noundef %157, ptr noundef %arraydecay240, i32 noundef 7, i32 noundef 32, ptr noundef @.str.252, ptr noundef @.str.255, i32 noundef %cond252, ptr noundef %169, i32 noundef %171), !dbg !14556
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname230) #16, !dbg !14555
  br label %do.cond257, !dbg !14556

do.cond257:                                       ; preds = %cond.end251
  br label %do.end258, !dbg !14556

do.end258:                                        ; preds = %do.cond257
  br label %if.end259, !dbg !14555

if.end259:                                        ; preds = %do.end258, %do.body220
  br label %do.cond260, !dbg !14554

do.cond260:                                       ; preds = %if.end259
  br label %do.end261, !dbg !14554

do.end261:                                        ; preds = %do.cond260
  %172 = load ptr, ptr %rktp.addr, align 8, !dbg !14557, !tbaa !3910
  %rktp_eos262 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %172, i32 0, i32 23, !dbg !14558
  %wait_drain263 = getelementptr inbounds %struct.anon.46, ptr %rktp_eos262, i32 0, i32 5, !dbg !14559
  store i8 0, ptr %wait_drain263, align 8, !dbg !14560, !tbaa !14534
  br label %if.end264, !dbg !14561

if.end264:                                        ; preds = %do.end261, %if.end163
  %173 = load i32, ptr %max_requests, align 4, !dbg !14562, !tbaa !3959
  %174 = load i32, ptr %inflight, align 4, !dbg !14562, !tbaa !3959
  %sub = sub nsw i32 5, %174, !dbg !14562
  %cmp265 = icmp slt i32 %173, %sub, !dbg !14562
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !14562

cond.true267:                                     ; preds = %if.end264
  %175 = load i32, ptr %max_requests, align 4, !dbg !14562, !tbaa !3959
  br label %cond.end270, !dbg !14562

cond.false268:                                    ; preds = %if.end264
  %176 = load i32, ptr %inflight, align 4, !dbg !14562, !tbaa !3959
  %sub269 = sub nsw i32 5, %176, !dbg !14562
  br label %cond.end270, !dbg !14562

cond.end270:                                      ; preds = %cond.false268, %cond.true267
  %cond271 = phi i32 [ %175, %cond.true267 ], [ %sub269, %cond.false268 ], !dbg !14562
  store i32 %cond271, ptr %max_requests, align 4, !dbg !14563, !tbaa !3959
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14564
  br label %cleanup272, !dbg !14564

cleanup272:                                       ; preds = %cond.end270, %if.end218
  call void @llvm.lifetime.end.p0(i64 1, ptr %did_purge) #16, !dbg !14564
  %cleanup.dest273 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest273, label %cleanup455 [
    i32 0, label %cleanup.cont274
  ]

cleanup.cont274:                                  ; preds = %cleanup272
  br label %if.end275, !dbg !14565

if.end275:                                        ; preds = %cleanup.cont274, %if.end101
  %177 = load i32, ptr %max_requests, align 4, !dbg !14566, !tbaa !3959
  %cmp276 = icmp sle i32 %177, 0, !dbg !14568
  br i1 %cmp276, label %if.then278, label %if.end279, !dbg !14569

if.then278:                                       ; preds = %if.end275
  store i32 0, ptr %retval, align 4, !dbg !14570
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup455, !dbg !14570

if.end279:                                        ; preds = %if.end275
  %178 = load ptr, ptr %rktp.addr, align 8, !dbg !14571, !tbaa !3910
  %rktp_xmit_msgq280 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %178, i32 0, i32 17, !dbg !14572
  %rkmq_msg_cnt281 = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %rktp_xmit_msgq280, i32 0, i32 1, !dbg !14573
  %179 = load i32, ptr %rkmq_msg_cnt281, align 8, !dbg !14573, !tbaa !14574
  store i32 %179, ptr %r, align 4, !dbg !14575, !tbaa !3959
  %180 = load i32, ptr %r, align 4, !dbg !14576, !tbaa !3959
  %cmp282 = icmp eq i32 %180, 0, !dbg !14578
  br i1 %cmp282, label %if.then284, label %if.end285, !dbg !14579

if.then284:                                       ; preds = %if.end279
  store i32 0, ptr %retval, align 4, !dbg !14580
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup455, !dbg !14580

if.end285:                                        ; preds = %if.end279
  br label %do.body286, !dbg !14581

do.body286:                                       ; preds = %if.end285
  br label %do.cond287, !dbg !14582

do.cond287:                                       ; preds = %do.body286
  br label %do.end288, !dbg !14582

do.end288:                                        ; preds = %do.cond287
  br label %do.body289, !dbg !14584

do.body289:                                       ; preds = %do.end288
  %181 = load ptr, ptr %rkb.addr, align 8, !dbg !14585, !tbaa !3910
  %rkb_rk290 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %181, i32 0, i32 32, !dbg !14585
  %182 = load ptr, ptr %rkb_rk290, align 8, !dbg !14585, !tbaa !4139
  %rk_conf291 = getelementptr inbounds %struct.rd_kafka_s, ptr %182, i32 0, i32 18, !dbg !14585
  %debug292 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf291, i32 0, i32 13, !dbg !14585
  %183 = load i32, ptr %debug292, align 8, !dbg !14585, !tbaa !4140
  %and293 = and i32 %183, 32, !dbg !14585
  %conv294 = sext i32 %and293 to i64, !dbg !14585
  %expval295 = call i64 @llvm.expect.i64(i64 %conv294, i64 0), !dbg !14585
  %tobool296 = icmp ne i64 %expval295, 0, !dbg !14585
  br i1 %tobool296, label %if.then297, label %if.end328, !dbg !14586

if.then297:                                       ; preds = %do.body289
  br label %do.body298, !dbg !14587

do.body298:                                       ; preds = %if.then297
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname299) #16, !dbg !14588
  tail call void @llvm.dbg.declare(metadata ptr %_logname299, metadata !14341, metadata !DIExpression()), !dbg !14588
  %184 = load ptr, ptr %rkb.addr, align 8, !dbg !14588, !tbaa !3910
  %rkb_logname_lock300 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %184, i32 0, i32 49, !dbg !14588
  %call301 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock300), !dbg !14588
  %arraydecay302 = getelementptr inbounds [256 x i8], ptr %_logname299, i64 0, i64 0, !dbg !14588
  %185 = load ptr, ptr %rkb.addr, align 8, !dbg !14588, !tbaa !3910
  %rkb_logname303 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %185, i32 0, i32 48, !dbg !14588
  %186 = load ptr, ptr %rkb_logname303, align 8, !dbg !14588, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay302, ptr noundef %186, i64 noundef 256), !dbg !14588
  %187 = load ptr, ptr %rkb.addr, align 8, !dbg !14588, !tbaa !3910
  %rkb_logname_lock304 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %187, i32 0, i32 49, !dbg !14588
  %call305 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock304), !dbg !14588
  %188 = load ptr, ptr %rkb.addr, align 8, !dbg !14588, !tbaa !3910
  %rkb_rk306 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %188, i32 0, i32 32, !dbg !14588
  %189 = load ptr, ptr %rkb_rk306, align 8, !dbg !14588, !tbaa !4139
  %rk_conf307 = getelementptr inbounds %struct.rd_kafka_s, ptr %189, i32 0, i32 18, !dbg !14588
  %190 = load ptr, ptr %rkb.addr, align 8, !dbg !14588, !tbaa !3910
  %rkb_rk308 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %190, i32 0, i32 32, !dbg !14588
  %191 = load ptr, ptr %rkb_rk308, align 8, !dbg !14588, !tbaa !4139
  %arraydecay309 = getelementptr inbounds [256 x i8], ptr %_logname299, i64 0, i64 0, !dbg !14588
  %192 = load ptr, ptr %rktp.addr, align 8, !dbg !14588, !tbaa !3910
  %rktp_rkt310 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %192, i32 0, i32 6, !dbg !14588
  %193 = load ptr, ptr %rktp_rkt310, align 8, !dbg !14588, !tbaa !8643
  %rkt_topic311 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %193, i32 0, i32 4, !dbg !14588
  %194 = load ptr, ptr %rkt_topic311, align 8, !dbg !14588, !tbaa !8676
  %len312 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %194, i32 0, i32 0, !dbg !14588
  %195 = load i32, ptr %len312, align 8, !dbg !14588, !tbaa !8677
  %cmp313 = icmp eq i32 %195, -1, !dbg !14588
  br i1 %cmp313, label %cond.true315, label %cond.false316, !dbg !14588

cond.true315:                                     ; preds = %do.body298
  br label %cond.end320, !dbg !14588

cond.false316:                                    ; preds = %do.body298
  %196 = load ptr, ptr %rktp.addr, align 8, !dbg !14588, !tbaa !3910
  %rktp_rkt317 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %196, i32 0, i32 6, !dbg !14588
  %197 = load ptr, ptr %rktp_rkt317, align 8, !dbg !14588, !tbaa !8643
  %rkt_topic318 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %197, i32 0, i32 4, !dbg !14588
  %198 = load ptr, ptr %rkt_topic318, align 8, !dbg !14588, !tbaa !8676
  %len319 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %198, i32 0, i32 0, !dbg !14588
  %199 = load i32, ptr %len319, align 8, !dbg !14588, !tbaa !8677
  br label %cond.end320, !dbg !14588

cond.end320:                                      ; preds = %cond.false316, %cond.true315
  %cond321 = phi i32 [ 0, %cond.true315 ], [ %199, %cond.false316 ], !dbg !14588
  %200 = load ptr, ptr %rktp.addr, align 8, !dbg !14588, !tbaa !3910
  %rktp_rkt322 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %200, i32 0, i32 6, !dbg !14588
  %201 = load ptr, ptr %rktp_rkt322, align 8, !dbg !14588, !tbaa !8643
  %rkt_topic323 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %201, i32 0, i32 4, !dbg !14588
  %202 = load ptr, ptr %rkt_topic323, align 8, !dbg !14588, !tbaa !8676
  %str324 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %202, i32 0, i32 1, !dbg !14588
  %203 = load ptr, ptr %str324, align 8, !dbg !14588, !tbaa !8679
  %204 = load ptr, ptr %rktp.addr, align 8, !dbg !14588, !tbaa !3910
  %rktp_partition325 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %204, i32 0, i32 7, !dbg !14588
  %205 = load i32, ptr %rktp_partition325, align 8, !dbg !14588, !tbaa !8680
  %206 = load i32, ptr %r, align 4, !dbg !14588, !tbaa !3959
  %207 = load i32, ptr %move_cnt, align 4, !dbg !14588, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf307, ptr noundef %191, ptr noundef %arraydecay309, i32 noundef 7, i32 noundef 32, ptr noundef @.str.252, ptr noundef @.str.256, i32 noundef %cond321, ptr noundef %203, i32 noundef %205, i32 noundef %206, i32 noundef %207), !dbg !14588
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname299) #16, !dbg !14587
  br label %do.cond326, !dbg !14588

do.cond326:                                       ; preds = %cond.end320
  br label %do.end327, !dbg !14588

do.end327:                                        ; preds = %do.cond326
  br label %if.end328, !dbg !14587

if.end328:                                        ; preds = %do.end327, %do.body289
  br label %do.cond329, !dbg !14586

do.cond329:                                       ; preds = %if.end328
  br label %do.end330, !dbg !14586

do.end330:                                        ; preds = %do.cond329
  %208 = load ptr, ptr %rktp.addr, align 8, !dbg !14589, !tbaa !3910
  %rktp_xmit_msgq331 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %208, i32 0, i32 17, !dbg !14589
  %rkmq_msgs = getelementptr inbounds %struct.rd_kafka_msgq_s, ptr %rktp_xmit_msgq331, i32 0, i32 0, !dbg !14589
  %tqh_first = getelementptr inbounds %struct.rd_kafka_msgs_head_s, ptr %rkmq_msgs, i32 0, i32 0, !dbg !14589
  %209 = load ptr, ptr %tqh_first, align 8, !dbg !14589, !tbaa !14590
  store ptr %209, ptr %rkm, align 8, !dbg !14591, !tbaa !3910
  br label %do.body332, !dbg !14592

do.body332:                                       ; preds = %do.end330
  br label %do.cond333, !dbg !14593

do.cond333:                                       ; preds = %do.body332
  br label %do.end334, !dbg !14593

do.end334:                                        ; preds = %do.cond333
  %210 = load ptr, ptr %rkb.addr, align 8, !dbg !14595, !tbaa !3910
  %rkb_rk335 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %210, i32 0, i32 32, !dbg !14595
  %211 = load ptr, ptr %rkb_rk335, align 8, !dbg !14595, !tbaa !4139
  %rk_conf336 = getelementptr inbounds %struct.rd_kafka_s, ptr %211, i32 0, i32 18, !dbg !14595
  %eos337 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf336, i32 0, i32 78, !dbg !14595
  %idempotence338 = getelementptr inbounds %struct.anon.18, ptr %eos337, i32 0, i32 0, !dbg !14595
  %212 = load i32, ptr %idempotence338, align 8, !dbg !14595, !tbaa !13116
  %tobool339 = icmp ne i32 %212, 0, !dbg !14595
  br i1 %tobool339, label %if.then340, label %if.end362, !dbg !14597

if.then340:                                       ; preds = %do.end334
  %213 = load ptr, ptr %rktp.addr, align 8, !dbg !14598, !tbaa !3910
  %rktp_eos341 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %213, i32 0, i32 23, !dbg !14598
  %pid342 = getelementptr inbounds %struct.anon.46, ptr %rktp_eos341, i32 0, i32 0, !dbg !14598
  %214 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 0, !dbg !14598
  %215 = load i64, ptr %214, align 8, !dbg !14598
  %216 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 1, !dbg !14598
  %217 = load i16, ptr %216, align 8, !dbg !14598
  %218 = getelementptr inbounds { i64, i16 }, ptr %pid342, i32 0, i32 0, !dbg !14598
  %219 = load i64, ptr %218, align 8, !dbg !14598
  %220 = getelementptr inbounds { i64, i16 }, ptr %pid342, i32 0, i32 1, !dbg !14598
  %221 = load i16, ptr %220, align 8, !dbg !14598
  %call343 = call i32 @rd_kafka_pid_eq(i64 %215, i16 %217, i64 %219, i16 %221), !dbg !14598
  %tobool344 = icmp ne i32 %call343, 0, !dbg !14598
  %lnot345 = xor i1 %tobool344, true, !dbg !14598
  %lnot.ext346 = zext i1 %lnot345 to i32, !dbg !14598
  %conv347 = sext i32 %lnot.ext346 to i64, !dbg !14598
  %expval348 = call i64 @llvm.expect.i64(i64 %conv347, i64 0), !dbg !14598
  %tobool349 = icmp ne i64 %expval348, 0, !dbg !14598
  br i1 %tobool349, label %if.then350, label %if.end355, !dbg !14601

if.then350:                                       ; preds = %if.then340
  %222 = load ptr, ptr %rktp.addr, align 8, !dbg !14602, !tbaa !3910
  %223 = load ptr, ptr %rkm, align 8, !dbg !14605, !tbaa !3910
  %rkm_u = getelementptr inbounds %struct.rd_kafka_msg_s, ptr %223, i32 0, i32 8, !dbg !14606
  %msgid = getelementptr inbounds %struct.anon.53, ptr %rkm_u, i32 0, i32 3, !dbg !14607
  %224 = load i64, ptr %msgid, align 8, !dbg !14607, !tbaa !4126
  %225 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 0, !dbg !14608
  %226 = load i64, ptr %225, align 8, !dbg !14608
  %227 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 1, !dbg !14608
  %228 = load i16, ptr %227, align 8, !dbg !14608
  %call351 = call i32 @rd_kafka_toppar_pid_change(ptr noundef %222, i64 %226, i16 %228, i64 noundef %224), !dbg !14608
  %tobool352 = icmp ne i32 %call351, 0, !dbg !14608
  br i1 %tobool352, label %if.end354, label %if.then353, !dbg !14609

if.then353:                                       ; preds = %if.then350
  store i32 0, ptr %retval, align 4, !dbg !14610
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup455, !dbg !14610

if.end354:                                        ; preds = %if.then350
  br label %if.end355, !dbg !14611

if.end355:                                        ; preds = %if.end354, %if.then340
  %229 = load ptr, ptr %rktp.addr, align 8, !dbg !14612, !tbaa !3910
  %rktp_lock356 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %229, i32 0, i32 14, !dbg !14612
  %call357 = call i32 @mtx_lock(ptr noundef %rktp_lock356), !dbg !14612
  %230 = load ptr, ptr %rktp.addr, align 8, !dbg !14613, !tbaa !3910
  %rktp_eos358 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %230, i32 0, i32 23, !dbg !14614
  %epoch_base_msgid359 = getelementptr inbounds %struct.anon.46, ptr %rktp_eos358, i32 0, i32 2, !dbg !14615
  %231 = load i64, ptr %epoch_base_msgid359, align 8, !dbg !14615, !tbaa !14616
  store i64 %231, ptr %epoch_base_msgid, align 8, !dbg !14617, !tbaa !4039
  %232 = load ptr, ptr %rktp.addr, align 8, !dbg !14618, !tbaa !3910
  %rktp_lock360 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %232, i32 0, i32 14, !dbg !14618
  %call361 = call i32 @mtx_unlock(ptr noundef %rktp_lock360), !dbg !14618
  br label %if.end362, !dbg !14619

if.end362:                                        ; preds = %if.end355, %do.end334
  %233 = load ptr, ptr %rkb.addr, align 8, !dbg !14620, !tbaa !3910
  %rkb_state363 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %233, i32 0, i32 19, !dbg !14620
  %234 = load i32, ptr %rkb_state363, align 4, !dbg !14620, !tbaa !4130
  %cmp364 = icmp ne i32 %234, 6, !dbg !14620
  %conv365 = zext i1 %cmp364 to i32, !dbg !14620
  %conv366 = sext i32 %conv365 to i64, !dbg !14620
  %expval367 = call i64 @llvm.expect.i64(i64 %conv366, i64 0), !dbg !14620
  %tobool368 = icmp ne i64 %expval367, 0, !dbg !14620
  br i1 %tobool368, label %if.then369, label %if.end412, !dbg !14621

if.then369:                                       ; preds = %if.end362
  br label %do.body370, !dbg !14622

do.body370:                                       ; preds = %if.then369
  %235 = load ptr, ptr %rkb.addr, align 8, !dbg !14623, !tbaa !3910
  %rkb_rk371 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %235, i32 0, i32 32, !dbg !14623
  %236 = load ptr, ptr %rkb_rk371, align 8, !dbg !14623, !tbaa !4139
  %rk_conf372 = getelementptr inbounds %struct.rd_kafka_s, ptr %236, i32 0, i32 18, !dbg !14623
  %debug373 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf372, i32 0, i32 13, !dbg !14623
  %237 = load i32, ptr %debug373, align 8, !dbg !14623, !tbaa !4140
  %and374 = and i32 %237, 2, !dbg !14623
  %conv375 = sext i32 %and374 to i64, !dbg !14623
  %expval376 = call i64 @llvm.expect.i64(i64 %conv375, i64 0), !dbg !14623
  %tobool377 = icmp ne i64 %expval376, 0, !dbg !14623
  br i1 %tobool377, label %if.then378, label %if.end409, !dbg !14624

if.then378:                                       ; preds = %do.body370
  br label %do.body379, !dbg !14625

do.body379:                                       ; preds = %if.then378
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname380) #16, !dbg !14626
  tail call void @llvm.dbg.declare(metadata ptr %_logname380, metadata !14346, metadata !DIExpression()), !dbg !14626
  %238 = load ptr, ptr %rkb.addr, align 8, !dbg !14626, !tbaa !3910
  %rkb_logname_lock381 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %238, i32 0, i32 49, !dbg !14626
  %call382 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock381), !dbg !14626
  %arraydecay383 = getelementptr inbounds [256 x i8], ptr %_logname380, i64 0, i64 0, !dbg !14626
  %239 = load ptr, ptr %rkb.addr, align 8, !dbg !14626, !tbaa !3910
  %rkb_logname384 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %239, i32 0, i32 48, !dbg !14626
  %240 = load ptr, ptr %rkb_logname384, align 8, !dbg !14626, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay383, ptr noundef %240, i64 noundef 256), !dbg !14626
  %241 = load ptr, ptr %rkb.addr, align 8, !dbg !14626, !tbaa !3910
  %rkb_logname_lock385 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %241, i32 0, i32 49, !dbg !14626
  %call386 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock385), !dbg !14626
  %242 = load ptr, ptr %rkb.addr, align 8, !dbg !14626, !tbaa !3910
  %rkb_rk387 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %242, i32 0, i32 32, !dbg !14626
  %243 = load ptr, ptr %rkb_rk387, align 8, !dbg !14626, !tbaa !4139
  %rk_conf388 = getelementptr inbounds %struct.rd_kafka_s, ptr %243, i32 0, i32 18, !dbg !14626
  %244 = load ptr, ptr %rkb.addr, align 8, !dbg !14626, !tbaa !3910
  %rkb_rk389 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %244, i32 0, i32 32, !dbg !14626
  %245 = load ptr, ptr %rkb_rk389, align 8, !dbg !14626, !tbaa !4139
  %arraydecay390 = getelementptr inbounds [256 x i8], ptr %_logname380, i64 0, i64 0, !dbg !14626
  %246 = load ptr, ptr %rktp.addr, align 8, !dbg !14626, !tbaa !3910
  %rktp_rkt391 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %246, i32 0, i32 6, !dbg !14626
  %247 = load ptr, ptr %rktp_rkt391, align 8, !dbg !14626, !tbaa !8643
  %rkt_topic392 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %247, i32 0, i32 4, !dbg !14626
  %248 = load ptr, ptr %rkt_topic392, align 8, !dbg !14626, !tbaa !8676
  %len393 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %248, i32 0, i32 0, !dbg !14626
  %249 = load i32, ptr %len393, align 8, !dbg !14626, !tbaa !8677
  %cmp394 = icmp eq i32 %249, -1, !dbg !14626
  br i1 %cmp394, label %cond.true396, label %cond.false397, !dbg !14626

cond.true396:                                     ; preds = %do.body379
  br label %cond.end401, !dbg !14626

cond.false397:                                    ; preds = %do.body379
  %250 = load ptr, ptr %rktp.addr, align 8, !dbg !14626, !tbaa !3910
  %rktp_rkt398 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %250, i32 0, i32 6, !dbg !14626
  %251 = load ptr, ptr %rktp_rkt398, align 8, !dbg !14626, !tbaa !8643
  %rkt_topic399 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %251, i32 0, i32 4, !dbg !14626
  %252 = load ptr, ptr %rkt_topic399, align 8, !dbg !14626, !tbaa !8676
  %len400 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %252, i32 0, i32 0, !dbg !14626
  %253 = load i32, ptr %len400, align 8, !dbg !14626, !tbaa !8677
  br label %cond.end401, !dbg !14626

cond.end401:                                      ; preds = %cond.false397, %cond.true396
  %cond402 = phi i32 [ 0, %cond.true396 ], [ %253, %cond.false397 ], !dbg !14626
  %254 = load ptr, ptr %rktp.addr, align 8, !dbg !14626, !tbaa !3910
  %rktp_rkt403 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %254, i32 0, i32 6, !dbg !14626
  %255 = load ptr, ptr %rktp_rkt403, align 8, !dbg !14626, !tbaa !8643
  %rkt_topic404 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %255, i32 0, i32 4, !dbg !14626
  %256 = load ptr, ptr %rkt_topic404, align 8, !dbg !14626, !tbaa !8676
  %str405 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %256, i32 0, i32 1, !dbg !14626
  %257 = load ptr, ptr %str405, align 8, !dbg !14626, !tbaa !8679
  %258 = load ptr, ptr %rktp.addr, align 8, !dbg !14626, !tbaa !3910
  %rktp_partition406 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %258, i32 0, i32 7, !dbg !14626
  %259 = load i32, ptr %rktp_partition406, align 8, !dbg !14626, !tbaa !8680
  %260 = load i32, ptr %r, align 4, !dbg !14626, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf388, ptr noundef %245, ptr noundef %arraydecay390, i32 noundef 7, i32 noundef 2, ptr noundef @.str.252, ptr noundef @.str.257, i32 noundef %cond402, ptr noundef %257, i32 noundef %259, i32 noundef %260), !dbg !14626
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname380) #16, !dbg !14625
  br label %do.cond407, !dbg !14626

do.cond407:                                       ; preds = %cond.end401
  br label %do.end408, !dbg !14626

do.end408:                                        ; preds = %do.cond407
  br label %if.end409, !dbg !14625

if.end409:                                        ; preds = %do.end408, %do.body370
  br label %do.cond410, !dbg !14624

do.cond410:                                       ; preds = %if.end409
  br label %do.end411, !dbg !14624

do.end411:                                        ; preds = %do.cond410
  %261 = load ptr, ptr %rkb.addr, align 8, !dbg !14627, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %261, i32 0, i32 55, !dbg !14628
  %internal = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 0, !dbg !14629
  %262 = load i32, ptr %internal, align 4, !dbg !14630, !tbaa !5311
  %inc = add nsw i32 %262, 1, !dbg !14630
  store i32 %inc, ptr %internal, align 4, !dbg !14630, !tbaa !5311
  store i32 0, ptr %retval, align 4, !dbg !14631
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup455, !dbg !14631

if.end412:                                        ; preds = %if.end362
  %263 = load i8, ptr %batch_ready, align 1, !dbg !14632, !tbaa !4126
  %tobool413 = icmp ne i8 %263, 0, !dbg !14632
  br i1 %tobool413, label %if.end415, label %if.then414, !dbg !14634

if.then414:                                       ; preds = %if.end412
  store i32 0, ptr %retval, align 4, !dbg !14635
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup455, !dbg !14635

if.end415:                                        ; preds = %if.end412
  store i32 0, ptr %reqcnt, align 4, !dbg !14637, !tbaa !3959
  br label %for.cond, !dbg !14639

for.cond:                                         ; preds = %for.inc, %if.end415
  %264 = load i32, ptr %reqcnt, align 4, !dbg !14640, !tbaa !3959
  %265 = load i32, ptr %max_requests, align 4, !dbg !14642, !tbaa !3959
  %cmp416 = icmp slt i32 %264, %265, !dbg !14643
  br i1 %cmp416, label %for.body, label %for.end, !dbg !14644

for.body:                                         ; preds = %for.cond
  %266 = load ptr, ptr %rkb.addr, align 8, !dbg !14645, !tbaa !3910
  %267 = load ptr, ptr %rktp.addr, align 8, !dbg !14647, !tbaa !3910
  %268 = load i64, ptr %epoch_base_msgid, align 8, !dbg !14648, !tbaa !4039
  %269 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 0, !dbg !14649
  %270 = load i64, ptr %269, align 8, !dbg !14649
  %271 = getelementptr inbounds { i64, i16 }, ptr %pid, i32 0, i32 1, !dbg !14649
  %272 = load i16, ptr %271, align 8, !dbg !14649
  %call418 = call i32 @rd_kafka_ProduceRequest(ptr noundef %266, ptr noundef %267, i64 %270, i16 %272, i64 noundef %268), !dbg !14649
  store i32 %call418, ptr %r, align 4, !dbg !14650, !tbaa !3959
  %273 = load i32, ptr %r, align 4, !dbg !14651, !tbaa !3959
  %cmp419 = icmp sgt i32 %273, 0, !dbg !14651
  %conv420 = zext i1 %cmp419 to i32, !dbg !14651
  %conv421 = sext i32 %conv420 to i64, !dbg !14651
  %expval422 = call i64 @llvm.expect.i64(i64 %conv421, i64 1), !dbg !14651
  %tobool423 = icmp ne i64 %expval422, 0, !dbg !14651
  br i1 %tobool423, label %if.then424, label %if.else425, !dbg !14653

if.then424:                                       ; preds = %for.body
  %274 = load i32, ptr %r, align 4, !dbg !14654, !tbaa !3959
  %275 = load i32, ptr %cnt, align 4, !dbg !14655, !tbaa !3959
  %add = add nsw i32 %275, %274, !dbg !14655
  store i32 %add, ptr %cnt, align 4, !dbg !14655, !tbaa !3959
  br label %if.end426, !dbg !14656

if.else425:                                       ; preds = %for.body
  br label %for.end, !dbg !14657

if.end426:                                        ; preds = %if.then424
  br label %for.inc, !dbg !14658

for.inc:                                          ; preds = %if.end426
  %276 = load i32, ptr %reqcnt, align 4, !dbg !14659, !tbaa !3959
  %inc427 = add nsw i32 %276, 1, !dbg !14659
  store i32 %inc427, ptr %reqcnt, align 4, !dbg !14659, !tbaa !3959
  br label %for.cond, !dbg !14660, !llvm.loop !14661

for.end:                                          ; preds = %if.else425, %for.cond
  %277 = load i32, ptr %cnt, align 4, !dbg !14663, !tbaa !3959
  %cmp428 = icmp sgt i32 %277, 0, !dbg !14665
  br i1 %cmp428, label %if.then430, label %if.end454, !dbg !14666

if.then430:                                       ; preds = %for.end
  %278 = load ptr, ptr %rktp.addr, align 8, !dbg !14667, !tbaa !3910
  %rktp_lock431 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %278, i32 0, i32 14, !dbg !14667
  %call432 = call i32 @mtx_lock(ptr noundef %rktp_lock431), !dbg !14667
  %279 = load ptr, ptr %rktp.addr, align 8, !dbg !14669, !tbaa !3910
  %rktp_msgq433 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %279, i32 0, i32 16, !dbg !14670
  %280 = load ptr, ptr %rktp.addr, align 8, !dbg !14671, !tbaa !3910
  %rktp_xmit_msgq434 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %280, i32 0, i32 17, !dbg !14672
  %281 = load ptr, ptr %next_wakeup.addr, align 8, !dbg !14673, !tbaa !3910
  %282 = load i64, ptr %now.addr, align 8, !dbg !14674, !tbaa !4039
  %283 = load i8, ptr %flushing.addr, align 1, !dbg !14675, !tbaa !4126
  %conv435 = zext i8 %283 to i32, !dbg !14675
  %tobool436 = icmp ne i32 %conv435, 0, !dbg !14675
  br i1 %tobool436, label %cond.true437, label %cond.false438, !dbg !14675

cond.true437:                                     ; preds = %if.then430
  br label %cond.end442, !dbg !14675

cond.false438:                                    ; preds = %if.then430
  %284 = load ptr, ptr %rkb.addr, align 8, !dbg !14676, !tbaa !3910
  %rkb_rk439 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %284, i32 0, i32 32, !dbg !14677
  %285 = load ptr, ptr %rkb_rk439, align 8, !dbg !14677, !tbaa !4139
  %rk_conf440 = getelementptr inbounds %struct.rd_kafka_s, ptr %285, i32 0, i32 18, !dbg !14678
  %buffering_max_us441 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf440, i32 0, i32 82, !dbg !14679
  %286 = load i64, ptr %buffering_max_us441, align 8, !dbg !14679, !tbaa !14493
  br label %cond.end442, !dbg !14675

cond.end442:                                      ; preds = %cond.false438, %cond.true437
  %cond443 = phi i64 [ 1, %cond.true437 ], [ %286, %cond.false438 ], !dbg !14675
  %287 = load ptr, ptr %rkb.addr, align 8, !dbg !14680, !tbaa !3910
  %rkb_rk444 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %287, i32 0, i32 32, !dbg !14681
  %288 = load ptr, ptr %rkb_rk444, align 8, !dbg !14681, !tbaa !4139
  %rk_conf445 = getelementptr inbounds %struct.rd_kafka_s, ptr %288, i32 0, i32 18, !dbg !14682
  %batch_num_messages446 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf445, i32 0, i32 86, !dbg !14683
  %289 = load i32, ptr %batch_num_messages446, align 4, !dbg !14683, !tbaa !14498
  %290 = load ptr, ptr %rkb.addr, align 8, !dbg !14684, !tbaa !3910
  %rkb_rk447 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %290, i32 0, i32 32, !dbg !14685
  %291 = load ptr, ptr %rkb_rk447, align 8, !dbg !14685, !tbaa !4139
  %rk_conf448 = getelementptr inbounds %struct.rd_kafka_s, ptr %291, i32 0, i32 18, !dbg !14686
  %batch_size449 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf448, i32 0, i32 87, !dbg !14687
  %292 = load i32, ptr %batch_size449, align 8, !dbg !14687, !tbaa !14503
  %conv450 = sext i32 %292 to i64, !dbg !14684
  %call451 = call zeroext i8 @rd_kafka_msgq_allow_wakeup_at(ptr noundef %rktp_msgq433, ptr noundef %rktp_xmit_msgq434, ptr noundef %281, i64 noundef %282, i64 noundef %cond443, i32 noundef %289, i64 noundef %conv450), !dbg !14688
  store i8 %call451, ptr %batch_ready, align 1, !dbg !14689, !tbaa !4126
  %293 = load ptr, ptr %rktp.addr, align 8, !dbg !14690, !tbaa !3910
  %rktp_lock452 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %293, i32 0, i32 14, !dbg !14690
  %call453 = call i32 @mtx_unlock(ptr noundef %rktp_lock452), !dbg !14690
  br label %if.end454, !dbg !14691

if.end454:                                        ; preds = %cond.end442, %for.end
  %294 = load i32, ptr %cnt, align 4, !dbg !14692, !tbaa !3959
  store i32 %294, ptr %retval, align 4, !dbg !14693
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup455, !dbg !14693

cleanup455:                                       ; preds = %if.end454, %if.then414, %do.end411, %if.then353, %if.then284, %if.then278, %cleanup272, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 1, ptr %batch_ready) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 8, ptr %epoch_base_msgid) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 4, ptr %inflight) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 4, ptr %reqcnt) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_requests) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 4, ptr %move_cnt) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkm) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !14694
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !14694
  %295 = load i32, ptr %retval, align 4, !dbg !14694
  ret i32 %295, !dbg !14694
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rd_kafka_pid_reset(ptr noundef %pid) #4 !dbg !14695 {
entry:
  %pid.addr = alloca ptr, align 8
  store ptr %pid, ptr %pid.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %pid.addr, metadata !14700, metadata !DIExpression()), !dbg !14701
  %0 = load ptr, ptr %pid.addr, align 8, !dbg !14702, !tbaa !3910
  %id = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %0, i32 0, i32 0, !dbg !14703
  store i64 -1, ptr %id, align 8, !dbg !14704, !tbaa !14090
  %1 = load ptr, ptr %pid.addr, align 8, !dbg !14705, !tbaa !3910
  %epoch = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %1, i32 0, i32 1, !dbg !14706
  store i16 -1, ptr %epoch, align 8, !dbg !14707, !tbaa !14708
  ret void, !dbg !14709
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_broker_outbufs_space(ptr noundef %rkb) #4 !dbg !14710 {
entry:
  %rkb.addr = alloca ptr, align 8
  %r = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !14714, metadata !DIExpression()), !dbg !14716
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !14717
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !14715, metadata !DIExpression()), !dbg !14718
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !14719, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !14720
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !14720, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %1, i32 0, i32 18, !dbg !14721
  %queue_backpressure_thres = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 83, !dbg !14722
  %2 = load i32, ptr %queue_backpressure_thres, align 8, !dbg !14722, !tbaa !14723
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !14724, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 35, !dbg !14725
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs, i32 0, i32 1, !dbg !14726
  %call = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !14727
  %sub = sub nsw i32 %2, %call, !dbg !14728
  store i32 %sub, ptr %r, align 4, !dbg !14718, !tbaa !3959
  %4 = load i32, ptr %r, align 4, !dbg !14729, !tbaa !3959
  %cmp = icmp slt i32 %4, 0, !dbg !14730
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14729

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !14729

cond.false:                                       ; preds = %entry
  %5 = load i32, ptr %r, align 4, !dbg !14731, !tbaa !3959
  br label %cond.end, !dbg !14729

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %5, %cond.false ], !dbg !14729
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !14732
  ret i32 %cond, !dbg !14733
}

declare !dbg !14734 void @rd_kafka_idemp_drain_epoch_bump0(ptr noundef, i8 noundef zeroext, i32 noundef, ptr noundef, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @rd_kafka_txn_toppar_may_send_msg(ptr noundef %rktp) #4 !dbg !14737 {
entry:
  %retval = alloca i8, align 1
  %rktp.addr = alloca ptr, align 8
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !14741, metadata !DIExpression()), !dbg !14742
  %0 = load ptr, ptr %rktp.addr, align 8, !dbg !14743, !tbaa !3910
  %rktp_flags = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %0, i32 0, i32 54, !dbg !14743
  %1 = load i32, ptr %rktp_flags, align 8, !dbg !14743, !tbaa !14443
  %and = and i32 %1, 512, !dbg !14743
  %conv = sext i32 %and to i64, !dbg !14743
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !14743
  %tobool = icmp ne i64 %expval, 0, !dbg !14743
  br i1 %tobool, label %if.then, label %if.end, !dbg !14745

if.then:                                          ; preds = %entry
  store i8 1, ptr %retval, align 1, !dbg !14746
  br label %return, !dbg !14746

if.end:                                           ; preds = %entry
  store i8 0, ptr %retval, align 1, !dbg !14747
  br label %return, !dbg !14747

return:                                           ; preds = %if.end, %if.then
  %2 = load i8, ptr %retval, align 1, !dbg !14748
  ret i8 %2, !dbg !14748
}

declare !dbg !14749 zeroext i8 @rd_kafka_msgq_allow_wakeup_at(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_pid_eq(i64 %a.coerce0, i16 %a.coerce1, i64 %b.coerce0, i16 %b.coerce1) #4 !dbg !14752 {
entry:
  %a = alloca %struct.rd_kafka_pid_s, align 8
  %b = alloca %struct.rd_kafka_pid_s, align 8
  %0 = getelementptr inbounds { i64, i16 }, ptr %a, i32 0, i32 0
  store i64 %a.coerce0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i16 }, ptr %a, i32 0, i32 1
  store i16 %a.coerce1, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i16 }, ptr %b, i32 0, i32 0
  store i64 %b.coerce0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i16 }, ptr %b, i32 0, i32 1
  store i16 %b.coerce1, ptr %3, align 8
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !14756, metadata !DIExpression()), !dbg !14758
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !14757, metadata !DIExpression()), !dbg !14759
  %id = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %a, i32 0, i32 0, !dbg !14760
  %4 = load i64, ptr %id, align 8, !dbg !14760, !tbaa !14090
  %id1 = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %b, i32 0, i32 0, !dbg !14761
  %5 = load i64, ptr %id1, align 8, !dbg !14761, !tbaa !14090
  %cmp = icmp eq i64 %4, %5, !dbg !14762
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14763

land.rhs:                                         ; preds = %entry
  %epoch = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %a, i32 0, i32 1, !dbg !14764
  %6 = load i16, ptr %epoch, align 8, !dbg !14764, !tbaa !14708
  %conv = sext i16 %6 to i32, !dbg !14765
  %epoch2 = getelementptr inbounds %struct.rd_kafka_pid_s, ptr %b, i32 0, i32 1, !dbg !14766
  %7 = load i16, ptr %epoch2, align 8, !dbg !14766, !tbaa !14708
  %conv3 = sext i16 %7 to i32, !dbg !14767
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !14768
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !14769
  %land.ext = zext i1 %8 to i32, !dbg !14763
  ret i32 %land.ext, !dbg !14770
}

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_bufq_purge_by_toppar(ptr noundef %rkb, ptr noundef %rkbq, i64 noundef %ApiKey, ptr noundef %rktp, i32 noundef %err) #0 !dbg !14771 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rkbq.addr = alloca ptr, align 8
  %ApiKey.addr = alloca i64, align 8
  %rktp.addr = alloca ptr, align 8
  %err.addr = alloca i32, align 4
  %rkbuf = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cnt = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !14775, metadata !DIExpression()), !dbg !14783
  store ptr %rkbq, ptr %rkbq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkbq.addr, metadata !14776, metadata !DIExpression()), !dbg !14784
  store i64 %ApiKey, ptr %ApiKey.addr, align 8, !tbaa !4039
  tail call void @llvm.dbg.declare(metadata ptr %ApiKey.addr, metadata !14777, metadata !DIExpression()), !dbg !14785
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !14778, metadata !DIExpression()), !dbg !14786
  store i32 %err, ptr %err.addr, align 4, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !14779, metadata !DIExpression()), !dbg !14787
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkbuf) #16, !dbg !14788
  tail call void @llvm.dbg.declare(metadata ptr %rkbuf, metadata !14780, metadata !DIExpression()), !dbg !14789
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #16, !dbg !14788
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !14781, metadata !DIExpression()), !dbg !14790
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !14791
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !14782, metadata !DIExpression()), !dbg !14792
  store i32 0, ptr %cnt, align 4, !dbg !14792, !tbaa !3959
  %0 = load i64, ptr %ApiKey.addr, align 8, !dbg !14793, !tbaa !4039
  %cmp = icmp eq i64 %0, 0, !dbg !14793
  br i1 %cmp, label %if.then, label %if.else, !dbg !14796

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !14796

if.else:                                          ; preds = %entry
  call void @__assert_fail(ptr noundef @.str.258, ptr noundef @.str.20, i32 noundef 750, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_bufq_purge_by_toppar) #18, !dbg !14793
  unreachable, !dbg !14793

if.end:                                           ; preds = %if.then
  %1 = load ptr, ptr %rkbq.addr, align 8, !dbg !14797, !tbaa !3910
  %rkbq_bufs = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %1, i32 0, i32 0, !dbg !14797
  %tqh_first = getelementptr inbounds %struct.anon.3, ptr %rkbq_bufs, i32 0, i32 0, !dbg !14797
  %2 = load ptr, ptr %tqh_first, align 8, !dbg !14797, !tbaa !12914
  store ptr %2, ptr %rkbuf, align 8, !dbg !14797, !tbaa !3910
  br label %for.cond, !dbg !14797

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load ptr, ptr %rkbuf, align 8, !dbg !14799, !tbaa !3910
  %cmp1 = icmp ne ptr %3, null, !dbg !14799
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !14799

land.rhs:                                         ; preds = %for.cond
  %4 = load ptr, ptr %rkbuf, align 8, !dbg !14799, !tbaa !3910
  %rkbuf_link = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %4, i32 0, i32 0, !dbg !14799
  %tqe_next = getelementptr inbounds %struct.anon.35, ptr %rkbuf_link, i32 0, i32 0, !dbg !14799
  %5 = load ptr, ptr %tqe_next, align 8, !dbg !14799, !tbaa !5339
  store ptr %5, ptr %tmp, align 8, !dbg !14799, !tbaa !3910
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ true, %land.rhs ], !dbg !14801
  br i1 %6, label %for.body, label %for.end, !dbg !14797

for.body:                                         ; preds = %land.end
  %7 = load ptr, ptr %rkbuf, align 8, !dbg !14802, !tbaa !3910
  %rkbuf_reqhdr = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %7, i32 0, i32 10, !dbg !14805
  %ApiKey2 = getelementptr inbounds %struct.rd_kafkap_reqhdr, ptr %rkbuf_reqhdr, i32 0, i32 1, !dbg !14806
  %8 = load i16, ptr %ApiKey2, align 4, !dbg !14806, !tbaa !5392
  %conv = sext i16 %8 to i64, !dbg !14802
  %9 = load i64, ptr %ApiKey.addr, align 8, !dbg !14807, !tbaa !4039
  %cmp3 = icmp ne i64 %conv, %9, !dbg !14808
  br i1 %cmp3, label %if.then11, label %lor.lhs.false, !dbg !14809

lor.lhs.false:                                    ; preds = %for.body
  %10 = load ptr, ptr %rkbuf, align 8, !dbg !14810, !tbaa !3910
  %rkbuf_u = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %10, i32 0, i32 35, !dbg !14811
  %batch = getelementptr inbounds %struct.anon.37, ptr %rkbuf_u, i32 0, i32 0, !dbg !14812
  %rktp5 = getelementptr inbounds %struct.rd_kafka_msgbatch_s, ptr %batch, i32 0, i32 0, !dbg !14813
  %11 = load ptr, ptr %rktp5, align 8, !dbg !14813, !tbaa !4126
  %12 = load ptr, ptr %rktp.addr, align 8, !dbg !14814, !tbaa !3910
  %cmp6 = icmp ne ptr %11, %12, !dbg !14815
  br i1 %cmp6, label %if.then11, label %lor.lhs.false8, !dbg !14816

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %13 = load ptr, ptr %rkbuf, align 8, !dbg !14817, !tbaa !3910
  %rkbuf_reader = getelementptr inbounds %struct.rd_kafka_buf_s, ptr %13, i32 0, i32 6, !dbg !14818
  %call = call i64 @rd_slice_offset(ptr noundef %rkbuf_reader), !dbg !14819
  %cmp9 = icmp ugt i64 %call, 0, !dbg !14820
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !14821

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !14822

if.end12:                                         ; preds = %lor.lhs.false8
  %14 = load ptr, ptr %rkbq.addr, align 8, !dbg !14823, !tbaa !3910
  %15 = load ptr, ptr %rkbuf, align 8, !dbg !14824, !tbaa !3910
  call void @rd_kafka_bufq_deq(ptr noundef %14, ptr noundef %15), !dbg !14825
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !14826, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 32, !dbg !14827
  %17 = load ptr, ptr %rkb_rk, align 8, !dbg !14827, !tbaa !4139
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !14828, !tbaa !3910
  %19 = load i32, ptr %err.addr, align 4, !dbg !14829, !tbaa !4126
  %20 = load ptr, ptr %rkbuf, align 8, !dbg !14830, !tbaa !3910
  call void @rd_kafka_buf_callback(ptr noundef %17, ptr noundef %18, i32 noundef %19, ptr noundef null, ptr noundef %20), !dbg !14831
  %21 = load i32, ptr %cnt, align 4, !dbg !14832, !tbaa !3959
  %inc = add nsw i32 %21, 1, !dbg !14832
  store i32 %inc, ptr %cnt, align 4, !dbg !14832, !tbaa !3959
  br label %for.inc, !dbg !14833

for.inc:                                          ; preds = %if.end12, %if.then11
  %22 = load ptr, ptr %tmp, align 8, !dbg !14799, !tbaa !3910
  store ptr %22, ptr %rkbuf, align 8, !dbg !14799, !tbaa !3910
  br label %for.cond, !dbg !14799, !llvm.loop !14834

for.end:                                          ; preds = %land.end
  %23 = load i32, ptr %cnt, align 4, !dbg !14836, !tbaa !3959
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !14837
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #16, !dbg !14837
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkbuf) #16, !dbg !14837
  ret i32 %23, !dbg !14838
}

declare !dbg !14839 i32 @rd_kafka_toppar_pid_change(ptr noundef, i64, i16, i64 noundef) #3

declare !dbg !14842 i32 @rd_kafka_ProduceRequest(ptr noundef, ptr noundef, i64, i16, i64 noundef) #3

declare !dbg !14845 i32 @rd_kafka_broker_fetch_toppars(ptr noundef, i64 noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_resolve(ptr noundef %rkb, ptr noundef %nodename, i8 noundef zeroext %reset_cached_addr) #0 !dbg !14847 {
entry:
  %retval = alloca i32, align 4
  %rkb.addr = alloca ptr, align 8
  %nodename.addr = alloca ptr, align 8
  %reset_cached_addr.addr = alloca i8, align 1
  %errstr = alloca ptr, align 8
  %save_idx = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !14851, metadata !DIExpression()), !dbg !14856
  store ptr %nodename, ptr %nodename.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %nodename.addr, metadata !14852, metadata !DIExpression()), !dbg !14857
  store i8 %reset_cached_addr, ptr %reset_cached_addr.addr, align 1, !tbaa !4126
  tail call void @llvm.dbg.declare(metadata ptr %reset_cached_addr.addr, metadata !14853, metadata !DIExpression()), !dbg !14858
  call void @llvm.lifetime.start.p0(i64 8, ptr %errstr) #16, !dbg !14859
  tail call void @llvm.dbg.declare(metadata ptr %errstr, metadata !14854, metadata !DIExpression()), !dbg !14860
  call void @llvm.lifetime.start.p0(i64 4, ptr %save_idx) #16, !dbg !14861
  tail call void @llvm.dbg.declare(metadata ptr %save_idx, metadata !14855, metadata !DIExpression()), !dbg !14862
  store i32 0, ptr %save_idx, align 4, !dbg !14862, !tbaa !3959
  %0 = load ptr, ptr %nodename.addr, align 8, !dbg !14863, !tbaa !3910
  %1 = load i8, ptr %0, align 1, !dbg !14865, !tbaa !4126
  %tobool = icmp ne i8 %1, 0, !dbg !14865
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !14866

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !14867, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 27, !dbg !14868
  %3 = load i32, ptr %rkb_source, align 8, !dbg !14868, !tbaa !4174
  %cmp = icmp eq i32 %3, 3, !dbg !14869
  br i1 %cmp, label %if.then, label %if.end, !dbg !14870

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !14871, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %4, i32 noundef 7, i32 noundef -193, ptr noundef @.str.266), !dbg !14873
  store i32 -1, ptr %retval, align 4, !dbg !14874
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14874

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !14875, !tbaa !3910
  %rkb_rsal = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 2, !dbg !14877
  %6 = load ptr, ptr %rkb_rsal, align 8, !dbg !14877, !tbaa !8778
  %tobool1 = icmp ne ptr %6, null, !dbg !14875
  br i1 %tobool1, label %land.lhs.true2, label %if.end11, !dbg !14878

land.lhs.true2:                                   ; preds = %if.end
  %7 = load i8, ptr %reset_cached_addr.addr, align 1, !dbg !14879, !tbaa !4126
  %conv = zext i8 %7 to i32, !dbg !14879
  %tobool3 = icmp ne i32 %conv, 0, !dbg !14879
  br i1 %tobool3, label %if.then7, label %lor.lhs.false, !dbg !14880

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !14881, !tbaa !3910
  %rkb_ts_rsal_last = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 3, !dbg !14882
  %9 = load i64, ptr %rkb_ts_rsal_last, align 8, !dbg !14882, !tbaa !14883
  %10 = load ptr, ptr %rkb.addr, align 8, !dbg !14884, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %10, i32 0, i32 32, !dbg !14885
  %11 = load ptr, ptr %rkb_rk, align 8, !dbg !14885, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %11, i32 0, i32 18, !dbg !14886
  %broker_addr_ttl = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 14, !dbg !14887
  %12 = load i32, ptr %broker_addr_ttl, align 4, !dbg !14887, !tbaa !14888
  %mul = mul nsw i32 %12, 1000, !dbg !14889
  %conv4 = sext i32 %mul to i64, !dbg !14890
  %add = add nsw i64 %9, %conv4, !dbg !14891
  %call = call i64 @rd_clock(), !dbg !14892
  %cmp5 = icmp slt i64 %add, %call, !dbg !14893
  br i1 %cmp5, label %if.then7, label %if.end11, !dbg !14894

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true2
  %13 = load ptr, ptr %rkb.addr, align 8, !dbg !14895, !tbaa !3910
  %rkb_rsal8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %13, i32 0, i32 2, !dbg !14897
  %14 = load ptr, ptr %rkb_rsal8, align 8, !dbg !14897, !tbaa !8778
  %rsal_curr = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %14, i32 0, i32 1, !dbg !14898
  %15 = load i32, ptr %rsal_curr, align 4, !dbg !14898, !tbaa !3959
  store i32 %15, ptr %save_idx, align 4, !dbg !14899, !tbaa !3959
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !14900, !tbaa !3910
  %rkb_rsal9 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 2, !dbg !14901
  %17 = load ptr, ptr %rkb_rsal9, align 8, !dbg !14901, !tbaa !8778
  call void @rd_sockaddr_list_destroy(ptr noundef %17), !dbg !14902
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !14903, !tbaa !3910
  %rkb_rsal10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 2, !dbg !14904
  store ptr null, ptr %rkb_rsal10, align 8, !dbg !14905, !tbaa !8778
  br label %if.end11, !dbg !14906

if.end11:                                         ; preds = %if.then7, %lor.lhs.false, %if.end
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !14907, !tbaa !3910
  %rkb_rsal12 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 2, !dbg !14909
  %20 = load ptr, ptr %rkb_rsal12, align 8, !dbg !14909, !tbaa !8778
  %tobool13 = icmp ne ptr %20, null, !dbg !14907
  br i1 %tobool13, label %if.end36, label %if.then14, !dbg !14910

if.then14:                                        ; preds = %if.end11
  %21 = load ptr, ptr %nodename.addr, align 8, !dbg !14911, !tbaa !3910
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !14913, !tbaa !3910
  %rkb_rk15 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 32, !dbg !14914
  %23 = load ptr, ptr %rkb_rk15, align 8, !dbg !14914, !tbaa !4139
  %rk_conf16 = getelementptr inbounds %struct.rd_kafka_s, ptr %23, i32 0, i32 18, !dbg !14915
  %broker_addr_family = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf16, i32 0, i32 15, !dbg !14916
  %24 = load i32, ptr %broker_addr_family, align 8, !dbg !14916, !tbaa !10195
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !14917, !tbaa !3910
  %rkb_rk17 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 32, !dbg !14918
  %26 = load ptr, ptr %rkb_rk17, align 8, !dbg !14918, !tbaa !4139
  %rk_conf18 = getelementptr inbounds %struct.rd_kafka_s, ptr %26, i32 0, i32 18, !dbg !14919
  %resolve_cb = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf18, i32 0, i32 107, !dbg !14920
  %27 = load ptr, ptr %resolve_cb, align 8, !dbg !14920, !tbaa !10199
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !14921, !tbaa !3910
  %rkb_rk19 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 32, !dbg !14922
  %29 = load ptr, ptr %rkb_rk19, align 8, !dbg !14922, !tbaa !4139
  %rk_conf20 = getelementptr inbounds %struct.rd_kafka_s, ptr %29, i32 0, i32 18, !dbg !14923
  %opaque = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf20, i32 0, i32 109, !dbg !14924
  %30 = load ptr, ptr %opaque, align 8, !dbg !14924, !tbaa !10203
  %call21 = call ptr @rd_getaddrinfo(ptr noundef %21, ptr noundef @.str.77, i32 noundef 32, i32 noundef %24, i32 noundef 1, i32 noundef 6, ptr noundef %27, ptr noundef %30, ptr noundef %errstr), !dbg !14925
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !14926, !tbaa !3910
  %rkb_rsal22 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 2, !dbg !14927
  store ptr %call21, ptr %rkb_rsal22, align 8, !dbg !14928, !tbaa !8778
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !14929, !tbaa !3910
  %rkb_rsal23 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 2, !dbg !14931
  %33 = load ptr, ptr %rkb_rsal23, align 8, !dbg !14931, !tbaa !8778
  %tobool24 = icmp ne ptr %33, null, !dbg !14929
  br i1 %tobool24, label %if.else, label %if.then25, !dbg !14932

if.then25:                                        ; preds = %if.then14
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !14933, !tbaa !3910
  %35 = load ptr, ptr %nodename.addr, align 8, !dbg !14935, !tbaa !3910
  %36 = load ptr, ptr %errstr, align 8, !dbg !14936, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %34, i32 noundef 3, i32 noundef -193, ptr noundef @.str.78, ptr noundef %35, ptr noundef %36), !dbg !14937
  store i32 -1, ptr %retval, align 4, !dbg !14938
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14938

if.else:                                          ; preds = %if.then14
  %call26 = call i64 @rd_clock(), !dbg !14939
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !14941, !tbaa !3910
  %rkb_ts_rsal_last27 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 3, !dbg !14942
  store i64 %call26, ptr %rkb_ts_rsal_last27, align 8, !dbg !14943, !tbaa !14883
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !14944, !tbaa !3910
  %rkb_rsal28 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 2, !dbg !14946
  %39 = load ptr, ptr %rkb_rsal28, align 8, !dbg !14946, !tbaa !8778
  %rsal_cnt = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %39, i32 0, i32 0, !dbg !14947
  %40 = load i32, ptr %rsal_cnt, align 4, !dbg !14947, !tbaa !3959
  %41 = load i32, ptr %save_idx, align 4, !dbg !14948, !tbaa !3959
  %cmp29 = icmp sgt i32 %40, %41, !dbg !14949
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !14950

if.then31:                                        ; preds = %if.else
  %42 = load i32, ptr %save_idx, align 4, !dbg !14951, !tbaa !3959
  %43 = load ptr, ptr %rkb.addr, align 8, !dbg !14952, !tbaa !3910
  %rkb_rsal32 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %43, i32 0, i32 2, !dbg !14953
  %44 = load ptr, ptr %rkb_rsal32, align 8, !dbg !14953, !tbaa !8778
  %rsal_curr33 = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %44, i32 0, i32 1, !dbg !14954
  store i32 %42, ptr %rsal_curr33, align 4, !dbg !14955, !tbaa !3959
  br label %if.end34, !dbg !14952

if.end34:                                         ; preds = %if.then31, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !14956

if.end36:                                         ; preds = %if.end35, %if.end11
  store i32 0, ptr %retval, align 4, !dbg !14957
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14957

cleanup:                                          ; preds = %if.end36, %if.then25, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %save_idx) #16, !dbg !14958
  call void @llvm.lifetime.end.p0(i64 8, ptr %errstr) #16, !dbg !14958
  %45 = load i32, ptr %retval, align 4, !dbg !14958
  ret i32 %45, !dbg !14958
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_sockaddr_list_next(ptr noundef %rsal) #4 !dbg !14959 {
entry:
  %rsal.addr = alloca ptr, align 8
  store ptr %rsal, ptr %rsal.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rsal.addr, metadata !14963, metadata !DIExpression()), !dbg !14964
  %0 = load ptr, ptr %rsal.addr, align 8, !dbg !14965, !tbaa !3910
  %rsal_curr = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %0, i32 0, i32 1, !dbg !14966
  %1 = load i32, ptr %rsal_curr, align 4, !dbg !14966, !tbaa !3959
  %add = add nsw i32 %1, 1, !dbg !14967
  %2 = load ptr, ptr %rsal.addr, align 8, !dbg !14968, !tbaa !3910
  %rsal_cnt = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %2, i32 0, i32 0, !dbg !14969
  %3 = load i32, ptr %rsal_cnt, align 4, !dbg !14969, !tbaa !3959
  %rem = srem i32 %add, %3, !dbg !14970
  %4 = load ptr, ptr %rsal.addr, align 8, !dbg !14971, !tbaa !3910
  %rsal_curr1 = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %4, i32 0, i32 1, !dbg !14972
  store i32 %rem, ptr %rsal_curr1, align 4, !dbg !14973, !tbaa !3959
  %5 = load ptr, ptr %rsal.addr, align 8, !dbg !14974, !tbaa !3910
  %rsal_addr = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %5, i32 0, i32 2, !dbg !14975
  %6 = load ptr, ptr %rsal.addr, align 8, !dbg !14976, !tbaa !3910
  %rsal_curr2 = getelementptr inbounds %struct.rd_sockaddr_list_s, ptr %6, i32 0, i32 1, !dbg !14977
  %7 = load i32, ptr %rsal_curr2, align 4, !dbg !14977, !tbaa !3959
  %idxprom = sext i32 %7 to i64, !dbg !14974
  %arrayidx = getelementptr inbounds [0 x %union.rd_sockaddr_inx_t], ptr %rsal_addr, i64 0, i64 %idxprom, !dbg !14974
  ret ptr %arrayidx, !dbg !14978
}

declare !dbg !14979 ptr @rd_kafka_transport_connect(ptr noundef, ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_broker_get_state(ptr noundef %rkb) #4 !dbg !14982 {
entry:
  %rkb.addr = alloca ptr, align 8
  %state = alloca i32, align 4
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !14986, metadata !DIExpression()), !dbg !14988
  call void @llvm.lifetime.start.p0(i64 4, ptr %state) #16, !dbg !14989
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !14987, metadata !DIExpression()), !dbg !14990
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !14991, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 9, !dbg !14991
  %call = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !14991
  %1 = load ptr, ptr %rkb.addr, align 8, !dbg !14992, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %1, i32 0, i32 19, !dbg !14993
  %2 = load i32, ptr %rkb_state, align 4, !dbg !14993, !tbaa !4130
  store i32 %2, ptr %state, align 4, !dbg !14994, !tbaa !4126
  %3 = load ptr, ptr %rkb.addr, align 8, !dbg !14995, !tbaa !3910
  %rkb_lock1 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %3, i32 0, i32 9, !dbg !14995
  %call2 = call i32 @mtx_unlock(ptr noundef %rkb_lock1), !dbg !14995
  %4 = load i32, ptr %state, align 4, !dbg !14996, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 4, ptr %state) #16, !dbg !14997
  ret i32 %4, !dbg !14998
}

declare !dbg !14999 ptr @rd_kafka_q_pop(ptr noundef, i64 noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define internal zeroext i8 @rd_kafka_broker_op_serve(ptr noundef %rkb, ptr noundef %rko) #0 !dbg !2757 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rko.addr = alloca ptr, align 8
  %rktp = alloca ptr, align 8
  %topic_err = alloca i32, align 4
  %wakeup = alloca i8, align 1
  %updated = alloca i32, align 4
  %brokername = alloca [256 x i8], align 16
  %_logname = alloca [256 x i8], align 16
  %old_nodeid = alloca i32, align 4
  %_logname61 = alloca [256 x i8], align 16
  %_logname114 = alloca [256 x i8], align 16
  %_logname191 = alloca [256 x i8], align 16
  %_logname239 = alloca [256 x i8], align 16
  %_RKTP = alloca ptr, align 8
  %_logname291 = alloca [256 x i8], align 16
  %_logname402 = alloca [256 x i8], align 16
  %_logname455 = alloca [256 x i8], align 16
  %_logname566 = alloca [256 x i8], align 16
  %_RKTP622 = alloca ptr, align 8
  %_logname646 = alloca [256 x i8], align 16
  %_logname689 = alloca [256 x i8], align 16
  %do_disconnect = alloca i8, align 1
  %_logname739 = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !2761, metadata !DIExpression()), !dbg !15002
  store ptr %rko, ptr %rko.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rko.addr, metadata !2762, metadata !DIExpression()), !dbg !15003
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp) #16, !dbg !15004
  tail call void @llvm.dbg.declare(metadata ptr %rktp, metadata !2763, metadata !DIExpression()), !dbg !15005
  call void @llvm.lifetime.start.p0(i64 4, ptr %topic_err) #16, !dbg !15006
  tail call void @llvm.dbg.declare(metadata ptr %topic_err, metadata !2764, metadata !DIExpression()), !dbg !15007
  call void @llvm.lifetime.start.p0(i64 1, ptr %wakeup) #16, !dbg !15008
  tail call void @llvm.dbg.declare(metadata ptr %wakeup, metadata !2765, metadata !DIExpression()), !dbg !15009
  store i8 0, ptr %wakeup, align 1, !dbg !15009, !tbaa !4126
  br label %do.body, !dbg !15010

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !15011, !tbaa !3910
  %rkb_thread = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 30, !dbg !15011
  %1 = load i64, ptr %rkb_thread, align 8, !dbg !15011, !tbaa !4513
  %call = call i32 @thrd_is_current(i64 noundef %1), !dbg !15011
  %tobool = icmp ne i32 %call, 0, !dbg !15011
  %lnot = xor i1 %tobool, true, !dbg !15011
  %lnot.ext = zext i1 %lnot to i32, !dbg !15011
  %conv = sext i32 %lnot.ext to i64, !dbg !15011
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15011
  %tobool1 = icmp ne i64 %expval, 0, !dbg !15011
  br i1 %tobool1, label %if.then, label %if.end, !dbg !15014

if.then:                                          ; preds = %do.body
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !15011, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !15011
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !15011, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 3093, ptr noundef @__FUNCTION__.rd_kafka_broker_op_serve, ptr noundef %3, ptr noundef @.str.21) #17, !dbg !15011
  unreachable, !dbg !15011

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !15014

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !15014

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %rko.addr, align 8, !dbg !15015, !tbaa !3910
  %rko_type = getelementptr inbounds %struct.rd_kafka_op_s, ptr %4, i32 0, i32 1, !dbg !15016
  %5 = load i32, ptr %rko_type, align 8, !dbg !15016, !tbaa !15017
  switch i32 %5, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb159
    i32 10, label %sw.bb167
    i32 16, label %sw.bb172
    i32 17, label %sw.bb379
    i32 19, label %sw.bb635
    i32 31, label %sw.bb672
    i32 50, label %sw.bb673
    i32 51, label %sw.bb674
    i32 59, label %sw.bb728
  ], !dbg !15018

sw.bb:                                            ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %updated) #16, !dbg !15019
  tail call void @llvm.dbg.declare(metadata ptr %updated, metadata !2766, metadata !DIExpression()), !dbg !15020
  store i32 0, ptr %updated, align 4, !dbg !15020, !tbaa !4126
  call void @llvm.lifetime.start.p0(i64 256, ptr %brokername) #16, !dbg !15021
  tail call void @llvm.dbg.declare(metadata ptr %brokername, metadata !2769, metadata !DIExpression()), !dbg !15022
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !15023, !tbaa !3910
  %rkb_rk2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 32, !dbg !15023
  %7 = load ptr, ptr %rkb_rk2, align 8, !dbg !15023, !tbaa !4139
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 24, !dbg !15023
  %call3 = call i32 @rwlock_wrlock(ptr noundef %rk_lock), !dbg !15023
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !15024, !tbaa !3910
  %rkb_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 9, !dbg !15024
  %call4 = call i32 @mtx_lock(ptr noundef %rkb_lock), !dbg !15024
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !15025, !tbaa !3910
  %rkb_nodename = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 43, !dbg !15026
  %arraydecay = getelementptr inbounds [256 x i8], ptr %rkb_nodename, i64 0, i64 0, !dbg !15025
  %10 = load ptr, ptr %rko.addr, align 8, !dbg !15027, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %10, i32 0, i32 15, !dbg !15028
  %nodename = getelementptr inbounds %struct.anon.68, ptr %rko_u, i32 0, i32 1, !dbg !15029
  %arraydecay5 = getelementptr inbounds [256 x i8], ptr %nodename, i64 0, i64 0, !dbg !15027
  %call6 = call i32 @strcmp(ptr noundef %arraydecay, ptr noundef %arraydecay5) #19, !dbg !15030
  %tobool7 = icmp ne i32 %call6, 0, !dbg !15030
  br i1 %tobool7, label %if.then8, label %if.end39, !dbg !15031

if.then8:                                         ; preds = %sw.bb
  br label %do.body9, !dbg !15032

do.body9:                                         ; preds = %if.then8
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !15033, !tbaa !3910
  %rkb_rk10 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 32, !dbg !15033
  %12 = load ptr, ptr %rkb_rk10, align 8, !dbg !15033, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %12, i32 0, i32 18, !dbg !15033
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !15033
  %13 = load i32, ptr %debug, align 8, !dbg !15033, !tbaa !4140
  %and = and i32 %13, 2, !dbg !15033
  %conv11 = sext i32 %and to i64, !dbg !15033
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !15033
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !15033
  br i1 %tobool13, label %if.then14, label %if.end31, !dbg !15034

if.then14:                                        ; preds = %do.body9
  br label %do.body15, !dbg !15035

do.body15:                                        ; preds = %if.then14
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !15036
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !2770, metadata !DIExpression()), !dbg !15036
  %14 = load ptr, ptr %rkb.addr, align 8, !dbg !15036, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %14, i32 0, i32 49, !dbg !15036
  %call16 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !15036
  %arraydecay17 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !15036
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !15036, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %15, i32 0, i32 48, !dbg !15036
  %16 = load ptr, ptr %rkb_logname, align 8, !dbg !15036, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay17, ptr noundef %16, i64 noundef 256), !dbg !15036
  %17 = load ptr, ptr %rkb.addr, align 8, !dbg !15036, !tbaa !3910
  %rkb_logname_lock18 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %17, i32 0, i32 49, !dbg !15036
  %call19 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock18), !dbg !15036
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !15036, !tbaa !3910
  %rkb_rk20 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %18, i32 0, i32 32, !dbg !15036
  %19 = load ptr, ptr %rkb_rk20, align 8, !dbg !15036, !tbaa !4139
  %rk_conf21 = getelementptr inbounds %struct.rd_kafka_s, ptr %19, i32 0, i32 18, !dbg !15036
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !15036, !tbaa !3910
  %rkb_rk22 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %20, i32 0, i32 32, !dbg !15036
  %21 = load ptr, ptr %rkb_rk22, align 8, !dbg !15036, !tbaa !4139
  %arraydecay23 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !15036
  %22 = load ptr, ptr %rkb.addr, align 8, !dbg !15036, !tbaa !3910
  %rkb_nodename24 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %22, i32 0, i32 43, !dbg !15036
  %arraydecay25 = getelementptr inbounds [256 x i8], ptr %rkb_nodename24, i64 0, i64 0, !dbg !15036
  %23 = load ptr, ptr %rko.addr, align 8, !dbg !15036, !tbaa !3910
  %rko_u26 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %23, i32 0, i32 15, !dbg !15036
  %nodename27 = getelementptr inbounds %struct.anon.68, ptr %rko_u26, i32 0, i32 1, !dbg !15036
  %arraydecay28 = getelementptr inbounds [256 x i8], ptr %nodename27, i64 0, i64 0, !dbg !15036
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf21, ptr noundef %21, ptr noundef %arraydecay23, i32 noundef 7, i32 noundef 2, ptr noundef @.str.7, ptr noundef @.str.270, ptr noundef %arraydecay25, ptr noundef %arraydecay28), !dbg !15036
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !15035
  br label %do.cond29, !dbg !15036

do.cond29:                                        ; preds = %do.body15
  br label %do.end30, !dbg !15036

do.end30:                                         ; preds = %do.cond29
  br label %if.end31, !dbg !15035

if.end31:                                         ; preds = %do.end30, %do.body9
  br label %do.cond32, !dbg !15034

do.cond32:                                        ; preds = %if.end31
  br label %do.end33, !dbg !15034

do.end33:                                         ; preds = %do.cond32
  %24 = load ptr, ptr %rkb.addr, align 8, !dbg !15037, !tbaa !3910
  %rkb_nodename34 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %24, i32 0, i32 43, !dbg !15038
  %arraydecay35 = getelementptr inbounds [256 x i8], ptr %rkb_nodename34, i64 0, i64 0, !dbg !15037
  %25 = load ptr, ptr %rko.addr, align 8, !dbg !15039, !tbaa !3910
  %rko_u36 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %25, i32 0, i32 15, !dbg !15040
  %nodename37 = getelementptr inbounds %struct.anon.68, ptr %rko_u36, i32 0, i32 1, !dbg !15041
  %arraydecay38 = getelementptr inbounds [256 x i8], ptr %nodename37, i64 0, i64 0, !dbg !15039
  call void @rd_strlcpy(ptr noundef %arraydecay35, ptr noundef %arraydecay38, i64 noundef 256), !dbg !15042
  %26 = load ptr, ptr %rkb.addr, align 8, !dbg !15043, !tbaa !3910
  %rkb_nodename_epoch = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %26, i32 0, i32 46, !dbg !15044
  %27 = load i32, ptr %rkb_nodename_epoch, align 8, !dbg !15045, !tbaa !10008
  %inc = add nsw i32 %27, 1, !dbg !15045
  store i32 %inc, ptr %rkb_nodename_epoch, align 8, !dbg !15045, !tbaa !10008
  %28 = load i32, ptr %updated, align 4, !dbg !15046, !tbaa !4126
  %or = or i32 %28, 1, !dbg !15046
  store i32 %or, ptr %updated, align 4, !dbg !15046, !tbaa !4126
  br label %if.end39, !dbg !15047

if.end39:                                         ; preds = %do.end33, %sw.bb
  %29 = load ptr, ptr %rko.addr, align 8, !dbg !15048, !tbaa !3910
  %rko_u40 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %29, i32 0, i32 15, !dbg !15049
  %nodeid = getelementptr inbounds %struct.anon.68, ptr %rko_u40, i32 0, i32 0, !dbg !15050
  %30 = load i32, ptr %nodeid, align 8, !dbg !15050, !tbaa !4126
  %cmp = icmp ne i32 %30, -1, !dbg !15051
  br i1 %cmp, label %land.lhs.true, label %if.end93, !dbg !15052

land.lhs.true:                                    ; preds = %if.end39
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !15053, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 27, !dbg !15053
  %32 = load i32, ptr %rkb_source, align 8, !dbg !15053, !tbaa !4174
  %cmp42 = icmp eq i32 %32, 3, !dbg !15053
  br i1 %cmp42, label %if.end93, label %land.lhs.true44, !dbg !15054

land.lhs.true44:                                  ; preds = %land.lhs.true
  %33 = load ptr, ptr %rko.addr, align 8, !dbg !15055, !tbaa !3910
  %rko_u45 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %33, i32 0, i32 15, !dbg !15056
  %nodeid46 = getelementptr inbounds %struct.anon.68, ptr %rko_u45, i32 0, i32 0, !dbg !15057
  %34 = load i32, ptr %nodeid46, align 8, !dbg !15057, !tbaa !4126
  %35 = load ptr, ptr %rkb.addr, align 8, !dbg !15058, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %35, i32 0, i32 1, !dbg !15059
  %36 = load i32, ptr %rkb_nodeid, align 8, !dbg !15059, !tbaa !4311
  %cmp47 = icmp ne i32 %34, %36, !dbg !15060
  br i1 %cmp47, label %if.then49, label %if.end93, !dbg !15061

if.then49:                                        ; preds = %land.lhs.true44
  call void @llvm.lifetime.start.p0(i64 4, ptr %old_nodeid) #16, !dbg !15062
  tail call void @llvm.dbg.declare(metadata ptr %old_nodeid, metadata !2777, metadata !DIExpression()), !dbg !15063
  %37 = load ptr, ptr %rkb.addr, align 8, !dbg !15064, !tbaa !3910
  %rkb_nodeid50 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %37, i32 0, i32 1, !dbg !15065
  %38 = load i32, ptr %rkb_nodeid50, align 8, !dbg !15065, !tbaa !4311
  store i32 %38, ptr %old_nodeid, align 4, !dbg !15063, !tbaa !3959
  br label %do.body51, !dbg !15066

do.body51:                                        ; preds = %if.then49
  %39 = load ptr, ptr %rkb.addr, align 8, !dbg !15067, !tbaa !3910
  %rkb_rk52 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %39, i32 0, i32 32, !dbg !15067
  %40 = load ptr, ptr %rkb_rk52, align 8, !dbg !15067, !tbaa !4139
  %rk_conf53 = getelementptr inbounds %struct.rd_kafka_s, ptr %40, i32 0, i32 18, !dbg !15067
  %debug54 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf53, i32 0, i32 13, !dbg !15067
  %41 = load i32, ptr %debug54, align 8, !dbg !15067, !tbaa !4140
  %and55 = and i32 %41, 2, !dbg !15067
  %conv56 = sext i32 %and55 to i64, !dbg !15067
  %expval57 = call i64 @llvm.expect.i64(i64 %conv56, i64 0), !dbg !15067
  %tobool58 = icmp ne i64 %expval57, 0, !dbg !15067
  br i1 %tobool58, label %if.then59, label %if.end77, !dbg !15068

if.then59:                                        ; preds = %do.body51
  br label %do.body60, !dbg !15069

do.body60:                                        ; preds = %if.then59
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname61) #16, !dbg !15070
  tail call void @llvm.dbg.declare(metadata ptr %_logname61, metadata !2780, metadata !DIExpression()), !dbg !15070
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !15070, !tbaa !3910
  %rkb_logname_lock62 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 49, !dbg !15070
  %call63 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock62), !dbg !15070
  %arraydecay64 = getelementptr inbounds [256 x i8], ptr %_logname61, i64 0, i64 0, !dbg !15070
  %43 = load ptr, ptr %rkb.addr, align 8, !dbg !15070, !tbaa !3910
  %rkb_logname65 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %43, i32 0, i32 48, !dbg !15070
  %44 = load ptr, ptr %rkb_logname65, align 8, !dbg !15070, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay64, ptr noundef %44, i64 noundef 256), !dbg !15070
  %45 = load ptr, ptr %rkb.addr, align 8, !dbg !15070, !tbaa !3910
  %rkb_logname_lock66 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %45, i32 0, i32 49, !dbg !15070
  %call67 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock66), !dbg !15070
  %46 = load ptr, ptr %rkb.addr, align 8, !dbg !15070, !tbaa !3910
  %rkb_rk68 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %46, i32 0, i32 32, !dbg !15070
  %47 = load ptr, ptr %rkb_rk68, align 8, !dbg !15070, !tbaa !4139
  %rk_conf69 = getelementptr inbounds %struct.rd_kafka_s, ptr %47, i32 0, i32 18, !dbg !15070
  %48 = load ptr, ptr %rkb.addr, align 8, !dbg !15070, !tbaa !3910
  %rkb_rk70 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %48, i32 0, i32 32, !dbg !15070
  %49 = load ptr, ptr %rkb_rk70, align 8, !dbg !15070, !tbaa !4139
  %arraydecay71 = getelementptr inbounds [256 x i8], ptr %_logname61, i64 0, i64 0, !dbg !15070
  %50 = load ptr, ptr %rkb.addr, align 8, !dbg !15070, !tbaa !3910
  %rkb_nodeid72 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %50, i32 0, i32 1, !dbg !15070
  %51 = load i32, ptr %rkb_nodeid72, align 8, !dbg !15070, !tbaa !4311
  %52 = load ptr, ptr %rko.addr, align 8, !dbg !15070, !tbaa !3910
  %rko_u73 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %52, i32 0, i32 15, !dbg !15070
  %nodeid74 = getelementptr inbounds %struct.anon.68, ptr %rko_u73, i32 0, i32 0, !dbg !15070
  %53 = load i32, ptr %nodeid74, align 8, !dbg !15070, !tbaa !4126
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf69, ptr noundef %49, ptr noundef %arraydecay71, i32 noundef 7, i32 noundef 2, ptr noundef @.str.7, ptr noundef @.str.271, i32 noundef %51, i32 noundef %53), !dbg !15070
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname61) #16, !dbg !15069
  br label %do.cond75, !dbg !15070

do.cond75:                                        ; preds = %do.body60
  br label %do.end76, !dbg !15070

do.end76:                                         ; preds = %do.cond75
  br label %if.end77, !dbg !15069

if.end77:                                         ; preds = %do.end76, %do.body51
  br label %do.cond78, !dbg !15068

do.cond78:                                        ; preds = %if.end77
  br label %do.end79, !dbg !15068

do.end79:                                         ; preds = %do.cond78
  %54 = load ptr, ptr %rko.addr, align 8, !dbg !15071, !tbaa !3910
  %rko_u80 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %54, i32 0, i32 15, !dbg !15072
  %nodeid81 = getelementptr inbounds %struct.anon.68, ptr %rko_u80, i32 0, i32 0, !dbg !15073
  %55 = load i32, ptr %nodeid81, align 8, !dbg !15073, !tbaa !4126
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !15074, !tbaa !3910
  %rkb_nodeid82 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 1, !dbg !15075
  store i32 %55, ptr %rkb_nodeid82, align 8, !dbg !15076, !tbaa !4311
  %57 = load ptr, ptr %rkb.addr, align 8, !dbg !15077, !tbaa !3910
  %rkb_nodeid83 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %57, i32 0, i32 1, !dbg !15078
  %58 = load i32, ptr %rkb_nodeid83, align 8, !dbg !15078, !tbaa !4311
  call void (ptr, ...) @rd_kafka_set_thread_sysname(ptr noundef @.str.231, i32 noundef %58), !dbg !15079
  %59 = load i32, ptr %old_nodeid, align 4, !dbg !15080, !tbaa !3959
  %cmp84 = icmp eq i32 %59, -1, !dbg !15082
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !15083

if.then86:                                        ; preds = %do.end79
  %60 = load ptr, ptr %rkb.addr, align 8, !dbg !15084, !tbaa !3910
  %rkb_rk87 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %60, i32 0, i32 32, !dbg !15085
  %61 = load ptr, ptr %rkb_rk87, align 8, !dbg !15085, !tbaa !4139
  %rk_broker_by_id = getelementptr inbounds %struct.rd_kafka_s, ptr %61, i32 0, i32 3, !dbg !15086
  %62 = load ptr, ptr %rkb.addr, align 8, !dbg !15087, !tbaa !3910
  %call88 = call ptr @rd_list_add(ptr noundef %rk_broker_by_id, ptr noundef %62), !dbg !15088
  br label %if.end89, !dbg !15088

if.end89:                                         ; preds = %if.then86, %do.end79
  %63 = load ptr, ptr %rkb.addr, align 8, !dbg !15089, !tbaa !3910
  %rkb_rk90 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %63, i32 0, i32 32, !dbg !15090
  %64 = load ptr, ptr %rkb_rk90, align 8, !dbg !15090, !tbaa !4139
  %rk_broker_by_id91 = getelementptr inbounds %struct.rd_kafka_s, ptr %64, i32 0, i32 3, !dbg !15091
  call void @rd_list_sort(ptr noundef %rk_broker_by_id91, ptr noundef @rd_kafka_broker_cmp_by_id), !dbg !15092
  %65 = load i32, ptr %updated, align 4, !dbg !15093, !tbaa !4126
  %or92 = or i32 %65, 2, !dbg !15093
  store i32 %or92, ptr %updated, align 4, !dbg !15093, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 4, ptr %old_nodeid) #16, !dbg !15094
  br label %if.end93, !dbg !15095

if.end93:                                         ; preds = %if.end89, %land.lhs.true44, %land.lhs.true, %if.end39
  %arraydecay94 = getelementptr inbounds [256 x i8], ptr %brokername, i64 0, i64 0, !dbg !15096
  %66 = load ptr, ptr %rkb.addr, align 8, !dbg !15097, !tbaa !3910
  %rkb_proto = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %66, i32 0, i32 58, !dbg !15098
  %67 = load i32, ptr %rkb_proto, align 8, !dbg !15098, !tbaa !4314
  %68 = load ptr, ptr %rkb.addr, align 8, !dbg !15099, !tbaa !3910
  %rkb_nodename95 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %68, i32 0, i32 43, !dbg !15100
  %arraydecay96 = getelementptr inbounds [256 x i8], ptr %rkb_nodename95, i64 0, i64 0, !dbg !15099
  %69 = load ptr, ptr %rkb.addr, align 8, !dbg !15101, !tbaa !3910
  %rkb_nodeid97 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %69, i32 0, i32 1, !dbg !15102
  %70 = load i32, ptr %rkb_nodeid97, align 8, !dbg !15102, !tbaa !4311
  call void @rd_kafka_mk_brokername(ptr noundef %arraydecay94, i64 noundef 256, i32 noundef %67, ptr noundef %arraydecay96, i32 noundef %70, i32 noundef 1), !dbg !15103
  %71 = load ptr, ptr %rkb.addr, align 8, !dbg !15104, !tbaa !3910
  %rkb_name = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %71, i32 0, i32 42, !dbg !15105
  %arraydecay98 = getelementptr inbounds [256 x i8], ptr %rkb_name, i64 0, i64 0, !dbg !15104
  %arraydecay99 = getelementptr inbounds [256 x i8], ptr %brokername, i64 0, i64 0, !dbg !15106
  %call100 = call i32 @strcmp(ptr noundef %arraydecay98, ptr noundef %arraydecay99) #19, !dbg !15107
  %tobool101 = icmp ne i32 %call100, 0, !dbg !15107
  br i1 %tobool101, label %if.then102, label %if.end136, !dbg !15108

if.then102:                                       ; preds = %if.end93
  %72 = load ptr, ptr %rkb.addr, align 8, !dbg !15109, !tbaa !3910
  %arraydecay103 = getelementptr inbounds [256 x i8], ptr %brokername, i64 0, i64 0, !dbg !15110
  call void @rd_kafka_broker_set_logname(ptr noundef %72, ptr noundef %arraydecay103), !dbg !15111
  br label %do.body104, !dbg !15112

do.body104:                                       ; preds = %if.then102
  %73 = load ptr, ptr %rkb.addr, align 8, !dbg !15113, !tbaa !3910
  %rkb_rk105 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %73, i32 0, i32 32, !dbg !15113
  %74 = load ptr, ptr %rkb_rk105, align 8, !dbg !15113, !tbaa !4139
  %rk_conf106 = getelementptr inbounds %struct.rd_kafka_s, ptr %74, i32 0, i32 18, !dbg !15113
  %debug107 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf106, i32 0, i32 13, !dbg !15113
  %75 = load i32, ptr %debug107, align 8, !dbg !15113, !tbaa !4140
  %and108 = and i32 %75, 2, !dbg !15113
  %conv109 = sext i32 %and108 to i64, !dbg !15113
  %expval110 = call i64 @llvm.expect.i64(i64 %conv109, i64 0), !dbg !15113
  %tobool111 = icmp ne i64 %expval110, 0, !dbg !15113
  br i1 %tobool111, label %if.then112, label %if.end130, !dbg !15114

if.then112:                                       ; preds = %do.body104
  br label %do.body113, !dbg !15115

do.body113:                                       ; preds = %if.then112
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname114) #16, !dbg !15116
  tail call void @llvm.dbg.declare(metadata ptr %_logname114, metadata !2785, metadata !DIExpression()), !dbg !15116
  %76 = load ptr, ptr %rkb.addr, align 8, !dbg !15116, !tbaa !3910
  %rkb_logname_lock115 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %76, i32 0, i32 49, !dbg !15116
  %call116 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock115), !dbg !15116
  %arraydecay117 = getelementptr inbounds [256 x i8], ptr %_logname114, i64 0, i64 0, !dbg !15116
  %77 = load ptr, ptr %rkb.addr, align 8, !dbg !15116, !tbaa !3910
  %rkb_logname118 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %77, i32 0, i32 48, !dbg !15116
  %78 = load ptr, ptr %rkb_logname118, align 8, !dbg !15116, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay117, ptr noundef %78, i64 noundef 256), !dbg !15116
  %79 = load ptr, ptr %rkb.addr, align 8, !dbg !15116, !tbaa !3910
  %rkb_logname_lock119 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %79, i32 0, i32 49, !dbg !15116
  %call120 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock119), !dbg !15116
  %80 = load ptr, ptr %rkb.addr, align 8, !dbg !15116, !tbaa !3910
  %rkb_rk121 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %80, i32 0, i32 32, !dbg !15116
  %81 = load ptr, ptr %rkb_rk121, align 8, !dbg !15116, !tbaa !4139
  %rk_conf122 = getelementptr inbounds %struct.rd_kafka_s, ptr %81, i32 0, i32 18, !dbg !15116
  %82 = load ptr, ptr %rkb.addr, align 8, !dbg !15116, !tbaa !3910
  %rkb_rk123 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %82, i32 0, i32 32, !dbg !15116
  %83 = load ptr, ptr %rkb_rk123, align 8, !dbg !15116, !tbaa !4139
  %arraydecay124 = getelementptr inbounds [256 x i8], ptr %_logname114, i64 0, i64 0, !dbg !15116
  %84 = load ptr, ptr %rkb.addr, align 8, !dbg !15116, !tbaa !3910
  %rkb_name125 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %84, i32 0, i32 42, !dbg !15116
  %arraydecay126 = getelementptr inbounds [256 x i8], ptr %rkb_name125, i64 0, i64 0, !dbg !15116
  %arraydecay127 = getelementptr inbounds [256 x i8], ptr %brokername, i64 0, i64 0, !dbg !15116
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf122, ptr noundef %83, ptr noundef %arraydecay124, i32 noundef 7, i32 noundef 2, ptr noundef @.str.7, ptr noundef @.str.272, ptr noundef %arraydecay126, ptr noundef %arraydecay127), !dbg !15116
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname114) #16, !dbg !15115
  br label %do.cond128, !dbg !15116

do.cond128:                                       ; preds = %do.body113
  br label %do.end129, !dbg !15116

do.end129:                                        ; preds = %do.cond128
  br label %if.end130, !dbg !15115

if.end130:                                        ; preds = %do.end129, %do.body104
  br label %do.cond131, !dbg !15114

do.cond131:                                       ; preds = %if.end130
  br label %do.end132, !dbg !15114

do.end132:                                        ; preds = %do.cond131
  %85 = load ptr, ptr %rkb.addr, align 8, !dbg !15117, !tbaa !3910
  %rkb_name133 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %85, i32 0, i32 42, !dbg !15118
  %arraydecay134 = getelementptr inbounds [256 x i8], ptr %rkb_name133, i64 0, i64 0, !dbg !15117
  %arraydecay135 = getelementptr inbounds [256 x i8], ptr %brokername, i64 0, i64 0, !dbg !15119
  call void @rd_strlcpy(ptr noundef %arraydecay134, ptr noundef %arraydecay135, i64 noundef 256), !dbg !15120
  br label %if.end136, !dbg !15121

if.end136:                                        ; preds = %do.end132, %if.end93
  %86 = load ptr, ptr %rkb.addr, align 8, !dbg !15122, !tbaa !3910
  %rkb_lock137 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %86, i32 0, i32 9, !dbg !15122
  %call138 = call i32 @mtx_unlock(ptr noundef %rkb_lock137), !dbg !15122
  %87 = load ptr, ptr %rkb.addr, align 8, !dbg !15123, !tbaa !3910
  %rkb_rk139 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %87, i32 0, i32 32, !dbg !15123
  %88 = load ptr, ptr %rkb_rk139, align 8, !dbg !15123, !tbaa !4139
  %rk_lock140 = getelementptr inbounds %struct.rd_kafka_s, ptr %88, i32 0, i32 24, !dbg !15123
  %call141 = call i32 @rwlock_wrunlock(ptr noundef %rk_lock140), !dbg !15123
  %89 = load i32, ptr %updated, align 4, !dbg !15124, !tbaa !4126
  %and142 = and i32 %89, 1, !dbg !15126
  %tobool143 = icmp ne i32 %and142, 0, !dbg !15126
  br i1 %tobool143, label %if.then144, label %if.else, !dbg !15127

if.then144:                                       ; preds = %if.end136
  %90 = load ptr, ptr %rkb.addr, align 8, !dbg !15128, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %90, i32 noundef 7, i32 noundef -195, ptr noundef @.str.273), !dbg !15129
  br label %if.end157, !dbg !15129

if.else:                                          ; preds = %if.end136
  %91 = load i32, ptr %updated, align 4, !dbg !15130, !tbaa !4126
  %and145 = and i32 %91, 2, !dbg !15132
  %tobool146 = icmp ne i32 %and145, 0, !dbg !15132
  br i1 %tobool146, label %if.then147, label %if.end156, !dbg !15133

if.then147:                                       ; preds = %if.else
  %92 = load ptr, ptr %rkb.addr, align 8, !dbg !15134, !tbaa !3910
  call void @rd_kafka_broker_map_partitions(ptr noundef %92), !dbg !15136
  %93 = load ptr, ptr %rkb.addr, align 8, !dbg !15137, !tbaa !3910
  %rkb_lock148 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %93, i32 0, i32 9, !dbg !15137
  %call149 = call i32 @mtx_lock(ptr noundef %rkb_lock148), !dbg !15137
  %94 = load ptr, ptr %rkb.addr, align 8, !dbg !15138, !tbaa !3910
  %rkb_state = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %94, i32 0, i32 19, !dbg !15140
  %95 = load i32, ptr %rkb_state, align 4, !dbg !15140, !tbaa !4130
  %cmp150 = icmp eq i32 %95, 6, !dbg !15141
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !15142

if.then152:                                       ; preds = %if.then147
  %96 = load ptr, ptr %rkb.addr, align 8, !dbg !15143, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %96, i32 noundef 7), !dbg !15144
  br label %if.end153, !dbg !15144

if.end153:                                        ; preds = %if.then152, %if.then147
  %97 = load ptr, ptr %rkb.addr, align 8, !dbg !15145, !tbaa !3910
  %rkb_lock154 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %97, i32 0, i32 9, !dbg !15145
  %call155 = call i32 @mtx_unlock(ptr noundef %rkb_lock154), !dbg !15145
  br label %if.end156, !dbg !15146

if.end156:                                        ; preds = %if.end153, %if.else
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.then144
  %98 = load ptr, ptr %rkb.addr, align 8, !dbg !15147, !tbaa !3910
  %rkb_rk158 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %98, i32 0, i32 32, !dbg !15148
  %99 = load ptr, ptr %rkb_rk158, align 8, !dbg !15148, !tbaa !4139
  call void @rd_kafka_brokers_broadcast_state_change(ptr noundef %99), !dbg !15149
  call void @llvm.lifetime.end.p0(i64 256, ptr %brokername) #16, !dbg !15150
  call void @llvm.lifetime.end.p0(i64 4, ptr %updated) #16, !dbg !15150
  br label %sw.epilog

sw.bb159:                                         ; preds = %do.end
  %100 = load ptr, ptr %rkb.addr, align 8, !dbg !15151, !tbaa !3910
  %101 = load ptr, ptr %rko.addr, align 8, !dbg !15152, !tbaa !3910
  %rko_u160 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %101, i32 0, i32 15, !dbg !15153
  %rkbuf = getelementptr inbounds %struct.anon.65, ptr %rko_u160, i32 0, i32 0, !dbg !15154
  %102 = load ptr, ptr %rkbuf, align 8, !dbg !15154, !tbaa !4126
  %call161 = call i32 @rd_kafka_broker_buf_enq2(ptr noundef %100, ptr noundef %102), !dbg !15155
  %103 = load ptr, ptr %rko.addr, align 8, !dbg !15156, !tbaa !3910
  %rko_u162 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %103, i32 0, i32 15, !dbg !15157
  %rkbuf163 = getelementptr inbounds %struct.anon.65, ptr %rko_u162, i32 0, i32 0, !dbg !15158
  store ptr null, ptr %rkbuf163, align 8, !dbg !15159, !tbaa !4126
  %104 = load ptr, ptr %rko.addr, align 8, !dbg !15160, !tbaa !3910
  %rko_replyq = getelementptr inbounds %struct.rd_kafka_op_s, ptr %104, i32 0, i32 10, !dbg !15162
  %q = getelementptr inbounds %struct.rd_kafka_replyq_s, ptr %rko_replyq, i32 0, i32 0, !dbg !15163
  %105 = load ptr, ptr %q, align 8, !dbg !15163, !tbaa !15164
  %tobool164 = icmp ne ptr %105, null, !dbg !15160
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !15165

if.then165:                                       ; preds = %sw.bb159
  store ptr null, ptr %rko.addr, align 8, !dbg !15166, !tbaa !3910
  br label %if.end166, !dbg !15168

if.end166:                                        ; preds = %if.then165, %sw.bb159
  br label %sw.epilog, !dbg !15169

sw.bb167:                                         ; preds = %do.end
  %106 = load ptr, ptr %rkb.addr, align 8, !dbg !15170, !tbaa !3910
  %107 = load ptr, ptr %rko.addr, align 8, !dbg !15171, !tbaa !3910
  %rko_u168 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %107, i32 0, i32 15, !dbg !15172
  %rkbuf169 = getelementptr inbounds %struct.anon.65, ptr %rko_u168, i32 0, i32 0, !dbg !15173
  %108 = load ptr, ptr %rkbuf169, align 8, !dbg !15173, !tbaa !4126
  call void @rd_kafka_broker_buf_retry(ptr noundef %106, ptr noundef %108), !dbg !15174
  %109 = load ptr, ptr %rko.addr, align 8, !dbg !15175, !tbaa !3910
  %rko_u170 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %109, i32 0, i32 15, !dbg !15176
  %rkbuf171 = getelementptr inbounds %struct.anon.65, ptr %rko_u170, i32 0, i32 0, !dbg !15177
  store ptr null, ptr %rkbuf171, align 8, !dbg !15178, !tbaa !4126
  br label %sw.epilog, !dbg !15179

sw.bb172:                                         ; preds = %do.end
  %110 = load ptr, ptr %rko.addr, align 8, !dbg !15180, !tbaa !3910
  %rko_rktp = getelementptr inbounds %struct.rd_kafka_op_s, ptr %110, i32 0, i32 9, !dbg !15181
  %111 = load ptr, ptr %rko_rktp, align 8, !dbg !15181, !tbaa !15182
  store ptr %111, ptr %rktp, align 8, !dbg !15183, !tbaa !3910
  %112 = load ptr, ptr %rktp, align 8, !dbg !15184, !tbaa !3910
  %rktp_lock = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %112, i32 0, i32 14, !dbg !15184
  %call173 = call i32 @mtx_lock(ptr noundef %rktp_lock), !dbg !15184
  %113 = load ptr, ptr %rkb.addr, align 8, !dbg !15185, !tbaa !3910
  %rkb_rk174 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %113, i32 0, i32 32, !dbg !15185
  %114 = load ptr, ptr %rkb_rk174, align 8, !dbg !15185, !tbaa !4139
  %rk_terminate = getelementptr inbounds %struct.rd_kafka_s, ptr %114, i32 0, i32 23, !dbg !15185
  %call175 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate), !dbg !15185
  %and176 = and i32 %call175, 1, !dbg !15185
  %tobool177 = icmp ne i32 %and176, 0, !dbg !15185
  br i1 %tobool177, label %if.then180, label %lor.lhs.false, !dbg !15186

lor.lhs.false:                                    ; preds = %sw.bb172
  %115 = load ptr, ptr %rktp, align 8, !dbg !15187, !tbaa !3910
  %rktp_flags = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %115, i32 0, i32 54, !dbg !15188
  %116 = load i32, ptr %rktp_flags, align 8, !dbg !15188, !tbaa !14443
  %and178 = and i32 %116, 64, !dbg !15189
  %tobool179 = icmp ne i32 %and178, 0, !dbg !15189
  br i1 %tobool179, label %if.then180, label %if.end224, !dbg !15190

if.then180:                                       ; preds = %lor.lhs.false, %sw.bb172
  br label %do.body181, !dbg !15191

do.body181:                                       ; preds = %if.then180
  %117 = load ptr, ptr %rkb.addr, align 8, !dbg !15192, !tbaa !3910
  %rkb_rk182 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %117, i32 0, i32 32, !dbg !15192
  %118 = load ptr, ptr %rkb_rk182, align 8, !dbg !15192, !tbaa !4139
  %rk_conf183 = getelementptr inbounds %struct.rd_kafka_s, ptr %118, i32 0, i32 18, !dbg !15192
  %debug184 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf183, i32 0, i32 13, !dbg !15192
  %119 = load i32, ptr %debug184, align 8, !dbg !15192, !tbaa !4140
  %and185 = and i32 %119, 6, !dbg !15192
  %conv186 = sext i32 %and185 to i64, !dbg !15192
  %expval187 = call i64 @llvm.expect.i64(i64 %conv186, i64 0), !dbg !15192
  %tobool188 = icmp ne i64 %expval187, 0, !dbg !15192
  br i1 %tobool188, label %if.then189, label %if.end209, !dbg !15193

if.then189:                                       ; preds = %do.body181
  br label %do.body190, !dbg !15194

do.body190:                                       ; preds = %if.then189
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname191) #16, !dbg !15195
  tail call void @llvm.dbg.declare(metadata ptr %_logname191, metadata !2792, metadata !DIExpression()), !dbg !15195
  %120 = load ptr, ptr %rkb.addr, align 8, !dbg !15195, !tbaa !3910
  %rkb_logname_lock192 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %120, i32 0, i32 49, !dbg !15195
  %call193 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock192), !dbg !15195
  %arraydecay194 = getelementptr inbounds [256 x i8], ptr %_logname191, i64 0, i64 0, !dbg !15195
  %121 = load ptr, ptr %rkb.addr, align 8, !dbg !15195, !tbaa !3910
  %rkb_logname195 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %121, i32 0, i32 48, !dbg !15195
  %122 = load ptr, ptr %rkb_logname195, align 8, !dbg !15195, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay194, ptr noundef %122, i64 noundef 256), !dbg !15195
  %123 = load ptr, ptr %rkb.addr, align 8, !dbg !15195, !tbaa !3910
  %rkb_logname_lock196 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %123, i32 0, i32 49, !dbg !15195
  %call197 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock196), !dbg !15195
  %124 = load ptr, ptr %rkb.addr, align 8, !dbg !15195, !tbaa !3910
  %rkb_rk198 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %124, i32 0, i32 32, !dbg !15195
  %125 = load ptr, ptr %rkb_rk198, align 8, !dbg !15195, !tbaa !4139
  %rk_conf199 = getelementptr inbounds %struct.rd_kafka_s, ptr %125, i32 0, i32 18, !dbg !15195
  %126 = load ptr, ptr %rkb.addr, align 8, !dbg !15195, !tbaa !3910
  %rkb_rk200 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %126, i32 0, i32 32, !dbg !15195
  %127 = load ptr, ptr %rkb_rk200, align 8, !dbg !15195, !tbaa !4139
  %arraydecay201 = getelementptr inbounds [256 x i8], ptr %_logname191, i64 0, i64 0, !dbg !15195
  %128 = load ptr, ptr %rktp, align 8, !dbg !15195, !tbaa !3910
  %rktp_rkt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %128, i32 0, i32 6, !dbg !15195
  %129 = load ptr, ptr %rktp_rkt, align 8, !dbg !15195, !tbaa !8643
  %rkt_topic = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %129, i32 0, i32 4, !dbg !15195
  %130 = load ptr, ptr %rkt_topic, align 8, !dbg !15195, !tbaa !8676
  %str = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %130, i32 0, i32 1, !dbg !15195
  %131 = load ptr, ptr %str, align 8, !dbg !15195, !tbaa !8679
  %132 = load ptr, ptr %rktp, align 8, !dbg !15195, !tbaa !3910
  %rktp_partition = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %132, i32 0, i32 7, !dbg !15195
  %133 = load i32, ptr %rktp_partition, align 8, !dbg !15195, !tbaa !8680
  %134 = load ptr, ptr %rkb.addr, align 8, !dbg !15195, !tbaa !3910
  %rkb_rk202 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %134, i32 0, i32 32, !dbg !15195
  %135 = load ptr, ptr %rkb_rk202, align 8, !dbg !15195, !tbaa !4139
  %rk_terminate203 = getelementptr inbounds %struct.rd_kafka_s, ptr %135, i32 0, i32 23, !dbg !15195
  %call204 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate203), !dbg !15195
  %and205 = and i32 %call204, 1, !dbg !15195
  %tobool206 = icmp ne i32 %and205, 0, !dbg !15195
  %136 = zext i1 %tobool206 to i64, !dbg !15195
  %cond = select i1 %tobool206, ptr @.str.276, ptr @.str.277, !dbg !15195
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf199, ptr noundef %127, ptr noundef %arraydecay201, i32 noundef 7, i32 noundef 6, ptr noundef @.str.274, ptr noundef @.str.275, ptr noundef %131, i32 noundef %133, ptr noundef %cond), !dbg !15195
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname191) #16, !dbg !15194
  br label %do.cond207, !dbg !15195

do.cond207:                                       ; preds = %do.body190
  br label %do.end208, !dbg !15195

do.end208:                                        ; preds = %do.cond207
  br label %if.end209, !dbg !15194

if.end209:                                        ; preds = %do.end208, %do.body181
  br label %do.cond210, !dbg !15193

do.cond210:                                       ; preds = %if.end209
  br label %do.end211, !dbg !15193

do.end211:                                        ; preds = %do.cond210
  br label %do.body212, !dbg !15196

do.body212:                                       ; preds = %do.end211
  %137 = load ptr, ptr %rktp, align 8, !dbg !15197, !tbaa !3910
  %rktp_next_broker = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %137, i32 0, i32 12, !dbg !15197
  %138 = load ptr, ptr %rktp_next_broker, align 8, !dbg !15197, !tbaa !15200
  %rkb_refcnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %138, i32 0, i32 31, !dbg !15197
  %call213 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt), !dbg !15197
  %cmp214 = icmp sgt i32 %call213, 0, !dbg !15197
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !15201

if.then216:                                       ; preds = %do.body212
  br label %do.end220, !dbg !15197

if.end217:                                        ; preds = %do.body212
  %139 = load ptr, ptr %rktp, align 8, !dbg !15201, !tbaa !3910
  %rktp_next_broker218 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %139, i32 0, i32 12, !dbg !15201
  %140 = load ptr, ptr %rktp_next_broker218, align 8, !dbg !15201, !tbaa !15200
  call void @rd_kafka_broker_destroy_final(ptr noundef %140), !dbg !15201
  br label %do.cond219, !dbg !15201

do.cond219:                                       ; preds = %if.end217
  br label %do.end220, !dbg !15201

do.end220:                                        ; preds = %do.cond219, %if.then216
  %141 = load ptr, ptr %rktp, align 8, !dbg !15202, !tbaa !3910
  %rktp_next_broker221 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %141, i32 0, i32 12, !dbg !15203
  store ptr null, ptr %rktp_next_broker221, align 8, !dbg !15204, !tbaa !15200
  %142 = load ptr, ptr %rktp, align 8, !dbg !15205, !tbaa !3910
  %rktp_lock222 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %142, i32 0, i32 14, !dbg !15205
  %call223 = call i32 @mtx_unlock(ptr noundef %rktp_lock222), !dbg !15205
  br label %sw.epilog, !dbg !15206

if.end224:                                        ; preds = %lor.lhs.false
  %143 = load ptr, ptr %rktp, align 8, !dbg !15207, !tbaa !3910
  %rktp_next_broker225 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %143, i32 0, i32 12, !dbg !15208
  %144 = load ptr, ptr %rktp_next_broker225, align 8, !dbg !15208, !tbaa !15200
  %145 = load ptr, ptr %rkb.addr, align 8, !dbg !15209, !tbaa !3910
  %cmp226 = icmp ne ptr %144, %145, !dbg !15210
  br i1 %cmp226, label %if.then228, label %if.end280, !dbg !15211

if.then228:                                       ; preds = %if.end224
  br label %do.body229, !dbg !15212

do.body229:                                       ; preds = %if.then228
  %146 = load ptr, ptr %rkb.addr, align 8, !dbg !15213, !tbaa !3910
  %rkb_rk230 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %146, i32 0, i32 32, !dbg !15213
  %147 = load ptr, ptr %rkb_rk230, align 8, !dbg !15213, !tbaa !4139
  %rk_conf231 = getelementptr inbounds %struct.rd_kafka_s, ptr %147, i32 0, i32 18, !dbg !15213
  %debug232 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf231, i32 0, i32 13, !dbg !15213
  %148 = load i32, ptr %debug232, align 8, !dbg !15213, !tbaa !4140
  %and233 = and i32 %148, 6, !dbg !15213
  %conv234 = sext i32 %and233 to i64, !dbg !15213
  %expval235 = call i64 @llvm.expect.i64(i64 %conv234, i64 0), !dbg !15213
  %tobool236 = icmp ne i64 %expval235, 0, !dbg !15213
  br i1 %tobool236, label %if.then237, label %if.end261, !dbg !15214

if.then237:                                       ; preds = %do.body229
  br label %do.body238, !dbg !15215

do.body238:                                       ; preds = %if.then237
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname239) #16, !dbg !15216
  tail call void @llvm.dbg.declare(metadata ptr %_logname239, metadata !2799, metadata !DIExpression()), !dbg !15216
  %149 = load ptr, ptr %rkb.addr, align 8, !dbg !15216, !tbaa !3910
  %rkb_logname_lock240 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %149, i32 0, i32 49, !dbg !15216
  %call241 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock240), !dbg !15216
  %arraydecay242 = getelementptr inbounds [256 x i8], ptr %_logname239, i64 0, i64 0, !dbg !15216
  %150 = load ptr, ptr %rkb.addr, align 8, !dbg !15216, !tbaa !3910
  %rkb_logname243 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %150, i32 0, i32 48, !dbg !15216
  %151 = load ptr, ptr %rkb_logname243, align 8, !dbg !15216, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay242, ptr noundef %151, i64 noundef 256), !dbg !15216
  %152 = load ptr, ptr %rkb.addr, align 8, !dbg !15216, !tbaa !3910
  %rkb_logname_lock244 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %152, i32 0, i32 49, !dbg !15216
  %call245 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock244), !dbg !15216
  %153 = load ptr, ptr %rkb.addr, align 8, !dbg !15216, !tbaa !3910
  %rkb_rk246 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %153, i32 0, i32 32, !dbg !15216
  %154 = load ptr, ptr %rkb_rk246, align 8, !dbg !15216, !tbaa !4139
  %rk_conf247 = getelementptr inbounds %struct.rd_kafka_s, ptr %154, i32 0, i32 18, !dbg !15216
  %155 = load ptr, ptr %rkb.addr, align 8, !dbg !15216, !tbaa !3910
  %rkb_rk248 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %155, i32 0, i32 32, !dbg !15216
  %156 = load ptr, ptr %rkb_rk248, align 8, !dbg !15216, !tbaa !4139
  %arraydecay249 = getelementptr inbounds [256 x i8], ptr %_logname239, i64 0, i64 0, !dbg !15216
  %157 = load ptr, ptr %rktp, align 8, !dbg !15216, !tbaa !3910
  %rktp_rkt250 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %157, i32 0, i32 6, !dbg !15216
  %158 = load ptr, ptr %rktp_rkt250, align 8, !dbg !15216, !tbaa !8643
  %rkt_topic251 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %158, i32 0, i32 4, !dbg !15216
  %159 = load ptr, ptr %rkt_topic251, align 8, !dbg !15216, !tbaa !8676
  %str252 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %159, i32 0, i32 1, !dbg !15216
  %160 = load ptr, ptr %str252, align 8, !dbg !15216, !tbaa !8679
  %161 = load ptr, ptr %rktp, align 8, !dbg !15216, !tbaa !3910
  %rktp_partition253 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %161, i32 0, i32 7, !dbg !15216
  %162 = load i32, ptr %rktp_partition253, align 8, !dbg !15216, !tbaa !8680
  %163 = load ptr, ptr %rktp, align 8, !dbg !15216, !tbaa !3910
  %rktp_next_broker254 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %163, i32 0, i32 12, !dbg !15216
  %164 = load ptr, ptr %rktp_next_broker254, align 8, !dbg !15216, !tbaa !15200
  %tobool255 = icmp ne ptr %164, null, !dbg !15216
  br i1 %tobool255, label %cond.true, label %cond.false, !dbg !15216

cond.true:                                        ; preds = %do.body238
  %165 = load ptr, ptr %rktp, align 8, !dbg !15216, !tbaa !3910
  %rktp_next_broker256 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %165, i32 0, i32 12, !dbg !15216
  %166 = load ptr, ptr %rktp_next_broker256, align 8, !dbg !15216, !tbaa !15200
  %call257 = call ptr @rd_kafka_broker_name(ptr noundef %166), !dbg !15216
  br label %cond.end, !dbg !15216

cond.false:                                       ; preds = %do.body238
  br label %cond.end, !dbg !15216

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond258 = phi ptr [ %call257, %cond.true ], [ @.str.279, %cond.false ], !dbg !15216
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf247, ptr noundef %156, ptr noundef %arraydecay249, i32 noundef 7, i32 noundef 6, ptr noundef @.str.274, ptr noundef @.str.278, ptr noundef %160, i32 noundef %162, ptr noundef %cond258), !dbg !15216
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname239) #16, !dbg !15215
  br label %do.cond259, !dbg !15216

do.cond259:                                       ; preds = %cond.end
  br label %do.end260, !dbg !15216

do.end260:                                        ; preds = %do.cond259
  br label %if.end261, !dbg !15215

if.end261:                                        ; preds = %do.end260, %do.body229
  br label %do.cond262, !dbg !15214

do.cond262:                                       ; preds = %if.end261
  br label %do.end263, !dbg !15214

do.end263:                                        ; preds = %do.cond262
  %167 = load ptr, ptr %rktp, align 8, !dbg !15217, !tbaa !3910
  %call264 = call ptr @rd_kafka_toppar_keep0(ptr noundef @__FUNCTION__.rd_kafka_broker_op_serve, i32 noundef 3231, ptr noundef %167), !dbg !15217
  %168 = load ptr, ptr %rktp, align 8, !dbg !15218, !tbaa !3910
  %rktp_next_broker265 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %168, i32 0, i32 12, !dbg !15219
  %169 = load ptr, ptr %rktp_next_broker265, align 8, !dbg !15219, !tbaa !15200
  %rkb_ops = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %169, i32 0, i32 8, !dbg !15220
  %170 = load ptr, ptr %rkb_ops, align 8, !dbg !15220, !tbaa !5475
  %171 = load ptr, ptr %rko.addr, align 8, !dbg !15221, !tbaa !3910
  %call266 = call i32 @rd_kafka_q_enq(ptr noundef %170, ptr noundef %171), !dbg !15222
  store ptr null, ptr %rko.addr, align 8, !dbg !15223, !tbaa !3910
  %172 = load ptr, ptr %rktp, align 8, !dbg !15224, !tbaa !3910
  %rktp_lock267 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %172, i32 0, i32 14, !dbg !15224
  %call268 = call i32 @mtx_unlock(ptr noundef %rktp_lock267), !dbg !15224
  br label %do.body269, !dbg !15225

do.body269:                                       ; preds = %do.end263
  call void @llvm.lifetime.start.p0(i64 8, ptr %_RKTP) #16, !dbg !15226
  tail call void @llvm.dbg.declare(metadata ptr %_RKTP, metadata !2806, metadata !DIExpression()), !dbg !15226
  %173 = load ptr, ptr %rktp, align 8, !dbg !15226, !tbaa !3910
  store ptr %173, ptr %_RKTP, align 8, !dbg !15226, !tbaa !3910
  %174 = load ptr, ptr %_RKTP, align 8, !dbg !15227, !tbaa !3910
  %rktp_refcnt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %174, i32 0, i32 13, !dbg !15227
  %call270 = call i32 @rd_refcnt_sub0(ptr noundef %rktp_refcnt), !dbg !15227
  %cmp271 = icmp eq i32 %call270, 0, !dbg !15227
  %conv272 = zext i1 %cmp271 to i32, !dbg !15227
  %conv273 = sext i32 %conv272 to i64, !dbg !15227
  %expval274 = call i64 @llvm.expect.i64(i64 %conv273, i64 0), !dbg !15227
  %tobool275 = icmp ne i64 %expval274, 0, !dbg !15227
  br i1 %tobool275, label %if.then276, label %if.end277, !dbg !15226

if.then276:                                       ; preds = %do.body269
  %175 = load ptr, ptr %_RKTP, align 8, !dbg !15227, !tbaa !3910
  call void @rd_kafka_toppar_destroy_final(ptr noundef %175), !dbg !15227
  br label %if.end277, !dbg !15227

if.end277:                                        ; preds = %if.then276, %do.body269
  call void @llvm.lifetime.end.p0(i64 8, ptr %_RKTP) #16, !dbg !15225
  br label %do.cond278, !dbg !15226

do.cond278:                                       ; preds = %if.end277
  br label %do.end279, !dbg !15226

do.end279:                                        ; preds = %do.cond278
  br label %sw.epilog, !dbg !15229

if.end280:                                        ; preds = %if.end224
  br label %do.body281, !dbg !15230

do.body281:                                       ; preds = %if.end280
  %176 = load ptr, ptr %rkb.addr, align 8, !dbg !15231, !tbaa !3910
  %rkb_rk282 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %176, i32 0, i32 32, !dbg !15231
  %177 = load ptr, ptr %rkb_rk282, align 8, !dbg !15231, !tbaa !4139
  %rk_conf283 = getelementptr inbounds %struct.rd_kafka_s, ptr %177, i32 0, i32 18, !dbg !15231
  %debug284 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf283, i32 0, i32 13, !dbg !15231
  %178 = load i32, ptr %debug284, align 8, !dbg !15231, !tbaa !4140
  %and285 = and i32 %178, 6, !dbg !15231
  %conv286 = sext i32 %and285 to i64, !dbg !15231
  %expval287 = call i64 @llvm.expect.i64(i64 %conv286, i64 0), !dbg !15231
  %tobool288 = icmp ne i64 %expval287, 0, !dbg !15231
  br i1 %tobool288, label %if.then289, label %if.end309, !dbg !15232

if.then289:                                       ; preds = %do.body281
  br label %do.body290, !dbg !15233

do.body290:                                       ; preds = %if.then289
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname291) #16, !dbg !15234
  tail call void @llvm.dbg.declare(metadata ptr %_logname291, metadata !2808, metadata !DIExpression()), !dbg !15234
  %179 = load ptr, ptr %rkb.addr, align 8, !dbg !15234, !tbaa !3910
  %rkb_logname_lock292 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %179, i32 0, i32 49, !dbg !15234
  %call293 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock292), !dbg !15234
  %arraydecay294 = getelementptr inbounds [256 x i8], ptr %_logname291, i64 0, i64 0, !dbg !15234
  %180 = load ptr, ptr %rkb.addr, align 8, !dbg !15234, !tbaa !3910
  %rkb_logname295 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %180, i32 0, i32 48, !dbg !15234
  %181 = load ptr, ptr %rkb_logname295, align 8, !dbg !15234, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay294, ptr noundef %181, i64 noundef 256), !dbg !15234
  %182 = load ptr, ptr %rkb.addr, align 8, !dbg !15234, !tbaa !3910
  %rkb_logname_lock296 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %182, i32 0, i32 49, !dbg !15234
  %call297 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock296), !dbg !15234
  %183 = load ptr, ptr %rkb.addr, align 8, !dbg !15234, !tbaa !3910
  %rkb_rk298 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %183, i32 0, i32 32, !dbg !15234
  %184 = load ptr, ptr %rkb_rk298, align 8, !dbg !15234, !tbaa !4139
  %rk_conf299 = getelementptr inbounds %struct.rd_kafka_s, ptr %184, i32 0, i32 18, !dbg !15234
  %185 = load ptr, ptr %rkb.addr, align 8, !dbg !15234, !tbaa !3910
  %rkb_rk300 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %185, i32 0, i32 32, !dbg !15234
  %186 = load ptr, ptr %rkb_rk300, align 8, !dbg !15234, !tbaa !4139
  %arraydecay301 = getelementptr inbounds [256 x i8], ptr %_logname291, i64 0, i64 0, !dbg !15234
  %187 = load ptr, ptr %rktp, align 8, !dbg !15234, !tbaa !3910
  %rktp_rkt302 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %187, i32 0, i32 6, !dbg !15234
  %188 = load ptr, ptr %rktp_rkt302, align 8, !dbg !15234, !tbaa !8643
  %rkt_topic303 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %188, i32 0, i32 4, !dbg !15234
  %189 = load ptr, ptr %rkt_topic303, align 8, !dbg !15234, !tbaa !8676
  %str304 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %189, i32 0, i32 1, !dbg !15234
  %190 = load ptr, ptr %str304, align 8, !dbg !15234, !tbaa !8679
  %191 = load ptr, ptr %rktp, align 8, !dbg !15234, !tbaa !3910
  %rktp_partition305 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %191, i32 0, i32 7, !dbg !15234
  %192 = load i32, ptr %rktp_partition305, align 8, !dbg !15234, !tbaa !8680
  %193 = load ptr, ptr %rktp, align 8, !dbg !15234, !tbaa !3910
  %194 = load ptr, ptr %rktp, align 8, !dbg !15234, !tbaa !3910
  %rktp_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %194, i32 0, i32 16, !dbg !15234
  %call306 = call i32 @rd_kafka_msgq_len(ptr noundef %rktp_msgq), !dbg !15234
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf299, ptr noundef %186, ptr noundef %arraydecay301, i32 noundef 7, i32 noundef 6, ptr noundef @.str.274, ptr noundef @.str.280, ptr noundef %190, i32 noundef %192, ptr noundef %193, i32 noundef %call306), !dbg !15234
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname291) #16, !dbg !15233
  br label %do.cond307, !dbg !15234

do.cond307:                                       ; preds = %do.body290
  br label %do.end308, !dbg !15234

do.end308:                                        ; preds = %do.cond307
  br label %if.end309, !dbg !15233

if.end309:                                        ; preds = %do.end308, %do.body281
  br label %do.cond310, !dbg !15232

do.cond310:                                       ; preds = %if.end309
  br label %do.end311, !dbg !15232

do.end311:                                        ; preds = %do.cond310
  br label %do.body312, !dbg !15235

do.body312:                                       ; preds = %do.end311
  %195 = load ptr, ptr %rktp, align 8, !dbg !15236, !tbaa !3910
  %rktp_flags313 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %195, i32 0, i32 54, !dbg !15236
  %196 = load i32, ptr %rktp_flags313, align 8, !dbg !15236, !tbaa !14443
  %and314 = and i32 %196, 4096, !dbg !15236
  %tobool315 = icmp ne i32 %and314, 0, !dbg !15236
  %lnot316 = xor i1 %tobool315, true, !dbg !15236
  %lnot318 = xor i1 %lnot316, true, !dbg !15236
  %lnot.ext319 = zext i1 %lnot318 to i32, !dbg !15236
  %conv320 = sext i32 %lnot.ext319 to i64, !dbg !15236
  %expval321 = call i64 @llvm.expect.i64(i64 %conv320, i64 0), !dbg !15236
  %tobool322 = icmp ne i64 %expval321, 0, !dbg !15236
  br i1 %tobool322, label %if.then323, label %if.end324, !dbg !15239

if.then323:                                       ; preds = %do.body312
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 3251, ptr noundef @__FUNCTION__.rd_kafka_broker_op_serve, ptr noundef null, ptr noundef @.str.281) #17, !dbg !15236
  unreachable, !dbg !15236

if.end324:                                        ; preds = %do.body312
  br label %do.cond325, !dbg !15239

do.cond325:                                       ; preds = %if.end324
  br label %do.end326, !dbg !15239

do.end326:                                        ; preds = %do.cond325
  %197 = load ptr, ptr %rktp, align 8, !dbg !15240, !tbaa !3910
  %rktp_flags327 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %197, i32 0, i32 54, !dbg !15241
  %198 = load i32, ptr %rktp_flags327, align 8, !dbg !15242, !tbaa !14443
  %or328 = or i32 %198, 4096, !dbg !15242
  store i32 %or328, ptr %rktp_flags327, align 8, !dbg !15242, !tbaa !14443
  %199 = load ptr, ptr %rktp, align 8, !dbg !15243, !tbaa !3910
  %call329 = call ptr @rd_kafka_toppar_keep0(ptr noundef @__FUNCTION__.rd_kafka_broker_op_serve, i32 noundef 3253, ptr noundef %199), !dbg !15243
  %200 = load ptr, ptr %rkb.addr, align 8, !dbg !15244, !tbaa !3910
  %rkb_lock330 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %200, i32 0, i32 9, !dbg !15244
  %call331 = call i32 @mtx_lock(ptr noundef %rkb_lock330), !dbg !15244
  br label %do.body332, !dbg !15245

do.body332:                                       ; preds = %do.end326
  %201 = load ptr, ptr %rktp, align 8, !dbg !15246, !tbaa !3910
  %rktp_rkblink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %201, i32 0, i32 1, !dbg !15246
  %tqe_next = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink, i32 0, i32 0, !dbg !15246
  store ptr null, ptr %tqe_next, align 8, !dbg !15246, !tbaa !4674
  %202 = load ptr, ptr %rkb.addr, align 8, !dbg !15246, !tbaa !3910
  %rkb_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %202, i32 0, i32 11, !dbg !15246
  %tqh_last = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars, i32 0, i32 1, !dbg !15246
  %203 = load ptr, ptr %tqh_last, align 8, !dbg !15246, !tbaa !9031
  %204 = load ptr, ptr %rktp, align 8, !dbg !15246, !tbaa !3910
  %rktp_rkblink333 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %204, i32 0, i32 1, !dbg !15246
  %tqe_prev = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink333, i32 0, i32 1, !dbg !15246
  store ptr %203, ptr %tqe_prev, align 8, !dbg !15246, !tbaa !15248
  %205 = load ptr, ptr %rktp, align 8, !dbg !15246, !tbaa !3910
  %206 = load ptr, ptr %rkb.addr, align 8, !dbg !15246, !tbaa !3910
  %rkb_toppars334 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %206, i32 0, i32 11, !dbg !15246
  %tqh_last335 = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars334, i32 0, i32 1, !dbg !15246
  %207 = load ptr, ptr %tqh_last335, align 8, !dbg !15246, !tbaa !9031
  store ptr %205, ptr %207, align 8, !dbg !15246, !tbaa !3910
  %208 = load ptr, ptr %rktp, align 8, !dbg !15246, !tbaa !3910
  %rktp_rkblink336 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %208, i32 0, i32 1, !dbg !15246
  %tqe_next337 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink336, i32 0, i32 0, !dbg !15246
  %209 = load ptr, ptr %rkb.addr, align 8, !dbg !15246, !tbaa !3910
  %rkb_toppars338 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %209, i32 0, i32 11, !dbg !15246
  %tqh_last339 = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars338, i32 0, i32 1, !dbg !15246
  store ptr %tqe_next337, ptr %tqh_last339, align 8, !dbg !15246, !tbaa !9031
  br label %do.cond340, !dbg !15246

do.cond340:                                       ; preds = %do.body332
  br label %do.end341, !dbg !15246

do.end341:                                        ; preds = %do.cond340
  %210 = load ptr, ptr %rkb.addr, align 8, !dbg !15249, !tbaa !3910
  %rkb_toppar_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %210, i32 0, i32 12, !dbg !15250
  %211 = load i32, ptr %rkb_toppar_cnt, align 8, !dbg !15251, !tbaa !4629
  %inc342 = add nsw i32 %211, 1, !dbg !15251
  store i32 %inc342, ptr %rkb_toppar_cnt, align 8, !dbg !15251, !tbaa !4629
  %212 = load ptr, ptr %rkb.addr, align 8, !dbg !15252, !tbaa !3910
  %rkb_lock343 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %212, i32 0, i32 9, !dbg !15252
  %call344 = call i32 @mtx_unlock(ptr noundef %rkb_lock343), !dbg !15252
  %213 = load ptr, ptr %rkb.addr, align 8, !dbg !15253, !tbaa !3910
  %214 = load ptr, ptr %rktp, align 8, !dbg !15254, !tbaa !3910
  %rktp_broker = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %214, i32 0, i32 11, !dbg !15255
  store ptr %213, ptr %rktp_broker, align 8, !dbg !15256, !tbaa !4644
  %215 = load ptr, ptr %rktp, align 8, !dbg !15257, !tbaa !3910
  %rktp_msgq_wakeup_q = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %215, i32 0, i32 15, !dbg !15257
  %216 = load ptr, ptr %rktp_msgq_wakeup_q, align 8, !dbg !15257, !tbaa !15260
  %tobool345 = icmp ne ptr %216, null, !dbg !15257
  br i1 %tobool345, label %if.else347, label %if.then346, !dbg !15261

if.then346:                                       ; preds = %do.end341
  br label %if.end348, !dbg !15261

if.else347:                                       ; preds = %do.end341
  call void @__assert_fail(ptr noundef @.str.282, ptr noundef @.str.20, i32 noundef 3259, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_op_serve) #18, !dbg !15257
  unreachable, !dbg !15257

if.end348:                                        ; preds = %if.then346
  %217 = load ptr, ptr %rkb.addr, align 8, !dbg !15262, !tbaa !3910
  %rkb_ops349 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %217, i32 0, i32 8, !dbg !15263
  %218 = load ptr, ptr %rkb_ops349, align 8, !dbg !15263, !tbaa !5475
  %call350 = call ptr @rd_kafka_q_keep(ptr noundef %218), !dbg !15264
  %219 = load ptr, ptr %rktp, align 8, !dbg !15265, !tbaa !3910
  %rktp_msgq_wakeup_q351 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %219, i32 0, i32 15, !dbg !15266
  store ptr %call350, ptr %rktp_msgq_wakeup_q351, align 8, !dbg !15267, !tbaa !15260
  %220 = load ptr, ptr %rkb.addr, align 8, !dbg !15268, !tbaa !3910
  %rkb_refcnt352 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %220, i32 0, i32 31, !dbg !15268
  %call353 = call i32 @rd_atomic32_add(ptr noundef %rkb_refcnt352, i32 noundef 1), !dbg !15268
  %221 = load ptr, ptr %rkb.addr, align 8, !dbg !15269, !tbaa !3910
  %rkb_rk354 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %221, i32 0, i32 32, !dbg !15271
  %222 = load ptr, ptr %rkb_rk354, align 8, !dbg !15271, !tbaa !4139
  %rk_type = getelementptr inbounds %struct.rd_kafka_s, ptr %222, i32 0, i32 25, !dbg !15272
  %223 = load i32, ptr %rk_type, align 8, !dbg !15272, !tbaa !10915
  %cmp355 = icmp eq i32 %223, 0, !dbg !15273
  br i1 %cmp355, label %if.then357, label %if.end363, !dbg !15274

if.then357:                                       ; preds = %if.end348
  %224 = load ptr, ptr %rkb.addr, align 8, !dbg !15275, !tbaa !3910
  %225 = load ptr, ptr %rktp, align 8, !dbg !15277, !tbaa !3910
  call void @rd_kafka_broker_active_toppar_add(ptr noundef %224, ptr noundef %225, ptr noundef @.str.283), !dbg !15278
  %226 = load ptr, ptr %rkb.addr, align 8, !dbg !15279, !tbaa !3910
  %rkb_rk358 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %226, i32 0, i32 32, !dbg !15279
  %227 = load ptr, ptr %rkb_rk358, align 8, !dbg !15279, !tbaa !4139
  %rk_conf359 = getelementptr inbounds %struct.rd_kafka_s, ptr %227, i32 0, i32 18, !dbg !15279
  %eos = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf359, i32 0, i32 78, !dbg !15279
  %idempotence = getelementptr inbounds %struct.anon.18, ptr %eos, i32 0, i32 0, !dbg !15279
  %228 = load i32, ptr %idempotence, align 8, !dbg !15279, !tbaa !13116
  %tobool360 = icmp ne i32 %228, 0, !dbg !15279
  br i1 %tobool360, label %if.then361, label %if.end362, !dbg !15281

if.then361:                                       ; preds = %if.then357
  %229 = load ptr, ptr %rktp, align 8, !dbg !15282, !tbaa !3910
  call void @rd_kafka_idemp_drain_toppar(ptr noundef %229, ptr noundef @.str.284), !dbg !15284
  br label %if.end362, !dbg !15285

if.end362:                                        ; preds = %if.then361, %if.then357
  br label %if.end363, !dbg !15286

if.end363:                                        ; preds = %if.end362, %if.end348
  br label %do.body364, !dbg !15287

do.body364:                                       ; preds = %if.end363
  %230 = load ptr, ptr %rktp, align 8, !dbg !15288, !tbaa !3910
  %rktp_next_broker365 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %230, i32 0, i32 12, !dbg !15288
  %231 = load ptr, ptr %rktp_next_broker365, align 8, !dbg !15288, !tbaa !15200
  %rkb_refcnt366 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %231, i32 0, i32 31, !dbg !15288
  %call367 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt366), !dbg !15288
  %cmp368 = icmp sgt i32 %call367, 0, !dbg !15288
  br i1 %cmp368, label %if.then370, label %if.end371, !dbg !15291

if.then370:                                       ; preds = %do.body364
  br label %do.end374, !dbg !15288

if.end371:                                        ; preds = %do.body364
  %232 = load ptr, ptr %rktp, align 8, !dbg !15291, !tbaa !3910
  %rktp_next_broker372 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %232, i32 0, i32 12, !dbg !15291
  %233 = load ptr, ptr %rktp_next_broker372, align 8, !dbg !15291, !tbaa !15200
  call void @rd_kafka_broker_destroy_final(ptr noundef %233), !dbg !15291
  br label %do.cond373, !dbg !15291

do.cond373:                                       ; preds = %if.end371
  br label %do.end374, !dbg !15291

do.end374:                                        ; preds = %do.cond373, %if.then370
  %234 = load ptr, ptr %rktp, align 8, !dbg !15292, !tbaa !3910
  %rktp_next_broker375 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %234, i32 0, i32 12, !dbg !15293
  store ptr null, ptr %rktp_next_broker375, align 8, !dbg !15294, !tbaa !15200
  %235 = load ptr, ptr %rktp, align 8, !dbg !15295, !tbaa !3910
  %rktp_lock376 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %235, i32 0, i32 14, !dbg !15295
  %call377 = call i32 @mtx_unlock(ptr noundef %rktp_lock376), !dbg !15295
  %236 = load ptr, ptr %rkb.addr, align 8, !dbg !15296, !tbaa !3910
  %rkb_rk378 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %236, i32 0, i32 32, !dbg !15297
  %237 = load ptr, ptr %rkb_rk378, align 8, !dbg !15297, !tbaa !4139
  call void @rd_kafka_brokers_broadcast_state_change(ptr noundef %237), !dbg !15298
  br label %sw.epilog, !dbg !15299

sw.bb379:                                         ; preds = %do.end
  %238 = load ptr, ptr %rko.addr, align 8, !dbg !15300, !tbaa !3910
  %rko_rktp380 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %238, i32 0, i32 9, !dbg !15301
  %239 = load ptr, ptr %rko_rktp380, align 8, !dbg !15301, !tbaa !15182
  store ptr %239, ptr %rktp, align 8, !dbg !15302, !tbaa !3910
  %240 = load ptr, ptr %rktp, align 8, !dbg !15303, !tbaa !3910
  %rktp_rkt381 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %240, i32 0, i32 6, !dbg !15304
  %241 = load ptr, ptr %rktp_rkt381, align 8, !dbg !15304, !tbaa !8643
  %call382 = call i32 @rd_kafka_topic_get_error(ptr noundef %241), !dbg !15305
  store i32 %call382, ptr %topic_err, align 4, !dbg !15306, !tbaa !4126
  %242 = load ptr, ptr %rktp, align 8, !dbg !15307, !tbaa !3910
  %rktp_lock383 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %242, i32 0, i32 14, !dbg !15307
  %call384 = call i32 @mtx_lock(ptr noundef %rktp_lock383), !dbg !15307
  %243 = load ptr, ptr %rktp, align 8, !dbg !15308, !tbaa !3910
  %rktp_broker385 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %243, i32 0, i32 11, !dbg !15308
  %244 = load ptr, ptr %rktp_broker385, align 8, !dbg !15308, !tbaa !4644
  %245 = load ptr, ptr %rkb.addr, align 8, !dbg !15308, !tbaa !3910
  %cmp386 = icmp ne ptr %244, %245, !dbg !15308
  %conv387 = zext i1 %cmp386 to i32, !dbg !15308
  %conv388 = sext i32 %conv387 to i64, !dbg !15308
  %expval389 = call i64 @llvm.expect.i64(i64 %conv388, i64 0), !dbg !15308
  %tobool390 = icmp ne i64 %expval389, 0, !dbg !15308
  br i1 %tobool390, label %if.then391, label %if.end432, !dbg !15309

if.then391:                                       ; preds = %sw.bb379
  br label %do.body392, !dbg !15310

do.body392:                                       ; preds = %if.then391
  %246 = load ptr, ptr %rkb.addr, align 8, !dbg !15311, !tbaa !3910
  %rkb_rk393 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %246, i32 0, i32 32, !dbg !15311
  %247 = load ptr, ptr %rkb_rk393, align 8, !dbg !15311, !tbaa !4139
  %rk_conf394 = getelementptr inbounds %struct.rd_kafka_s, ptr %247, i32 0, i32 18, !dbg !15311
  %debug395 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf394, i32 0, i32 13, !dbg !15311
  %248 = load i32, ptr %debug395, align 8, !dbg !15311, !tbaa !4140
  %and396 = and i32 %248, 6, !dbg !15311
  %conv397 = sext i32 %and396 to i64, !dbg !15311
  %expval398 = call i64 @llvm.expect.i64(i64 %conv397, i64 0), !dbg !15311
  %tobool399 = icmp ne i64 %expval398, 0, !dbg !15311
  br i1 %tobool399, label %if.then400, label %if.end427, !dbg !15312

if.then400:                                       ; preds = %do.body392
  br label %do.body401, !dbg !15313

do.body401:                                       ; preds = %if.then400
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname402) #16, !dbg !15314
  tail call void @llvm.dbg.declare(metadata ptr %_logname402, metadata !2813, metadata !DIExpression()), !dbg !15314
  %249 = load ptr, ptr %rkb.addr, align 8, !dbg !15314, !tbaa !3910
  %rkb_logname_lock403 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %249, i32 0, i32 49, !dbg !15314
  %call404 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock403), !dbg !15314
  %arraydecay405 = getelementptr inbounds [256 x i8], ptr %_logname402, i64 0, i64 0, !dbg !15314
  %250 = load ptr, ptr %rkb.addr, align 8, !dbg !15314, !tbaa !3910
  %rkb_logname406 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %250, i32 0, i32 48, !dbg !15314
  %251 = load ptr, ptr %rkb_logname406, align 8, !dbg !15314, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay405, ptr noundef %251, i64 noundef 256), !dbg !15314
  %252 = load ptr, ptr %rkb.addr, align 8, !dbg !15314, !tbaa !3910
  %rkb_logname_lock407 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %252, i32 0, i32 49, !dbg !15314
  %call408 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock407), !dbg !15314
  %253 = load ptr, ptr %rkb.addr, align 8, !dbg !15314, !tbaa !3910
  %rkb_rk409 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %253, i32 0, i32 32, !dbg !15314
  %254 = load ptr, ptr %rkb_rk409, align 8, !dbg !15314, !tbaa !4139
  %rk_conf410 = getelementptr inbounds %struct.rd_kafka_s, ptr %254, i32 0, i32 18, !dbg !15314
  %255 = load ptr, ptr %rkb.addr, align 8, !dbg !15314, !tbaa !3910
  %rkb_rk411 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %255, i32 0, i32 32, !dbg !15314
  %256 = load ptr, ptr %rkb_rk411, align 8, !dbg !15314, !tbaa !4139
  %arraydecay412 = getelementptr inbounds [256 x i8], ptr %_logname402, i64 0, i64 0, !dbg !15314
  %257 = load ptr, ptr %rktp, align 8, !dbg !15314, !tbaa !3910
  %rktp_rkt413 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %257, i32 0, i32 6, !dbg !15314
  %258 = load ptr, ptr %rktp_rkt413, align 8, !dbg !15314, !tbaa !8643
  %rkt_topic414 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %258, i32 0, i32 4, !dbg !15314
  %259 = load ptr, ptr %rkt_topic414, align 8, !dbg !15314, !tbaa !8676
  %str415 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %259, i32 0, i32 1, !dbg !15314
  %260 = load ptr, ptr %str415, align 8, !dbg !15314, !tbaa !8679
  %261 = load ptr, ptr %rktp, align 8, !dbg !15314, !tbaa !3910
  %rktp_partition416 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %261, i32 0, i32 7, !dbg !15314
  %262 = load i32, ptr %rktp_partition416, align 8, !dbg !15314, !tbaa !8680
  %263 = load ptr, ptr %rktp, align 8, !dbg !15314, !tbaa !3910
  %rktp_broker417 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %263, i32 0, i32 11, !dbg !15314
  %264 = load ptr, ptr %rktp_broker417, align 8, !dbg !15314, !tbaa !4644
  %tobool418 = icmp ne ptr %264, null, !dbg !15314
  br i1 %tobool418, label %cond.true419, label %cond.false422, !dbg !15314

cond.true419:                                     ; preds = %do.body401
  %265 = load ptr, ptr %rktp, align 8, !dbg !15314, !tbaa !3910
  %rktp_broker420 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %265, i32 0, i32 11, !dbg !15314
  %266 = load ptr, ptr %rktp_broker420, align 8, !dbg !15314, !tbaa !4644
  %call421 = call ptr @rd_kafka_broker_name(ptr noundef %266), !dbg !15314
  br label %cond.end423, !dbg !15314

cond.false422:                                    ; preds = %do.body401
  br label %cond.end423, !dbg !15314

cond.end423:                                      ; preds = %cond.false422, %cond.true419
  %cond424 = phi ptr [ %call421, %cond.true419 ], [ @.str.286, %cond.false422 ], !dbg !15314
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf410, ptr noundef %256, ptr noundef %arraydecay412, i32 noundef 7, i32 noundef 6, ptr noundef @.str.274, ptr noundef @.str.285, ptr noundef %260, i32 noundef %262, ptr noundef %cond424), !dbg !15314
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname402) #16, !dbg !15313
  br label %do.cond425, !dbg !15314

do.cond425:                                       ; preds = %cond.end423
  br label %do.end426, !dbg !15314

do.end426:                                        ; preds = %do.cond425
  br label %if.end427, !dbg !15313

if.end427:                                        ; preds = %do.end426, %do.body392
  br label %do.cond428, !dbg !15312

do.cond428:                                       ; preds = %if.end427
  br label %do.end429, !dbg !15312

do.end429:                                        ; preds = %do.cond428
  %267 = load ptr, ptr %rktp, align 8, !dbg !15315, !tbaa !3910
  %rktp_lock430 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %267, i32 0, i32 14, !dbg !15315
  %call431 = call i32 @mtx_unlock(ptr noundef %rktp_lock430), !dbg !15315
  br label %sw.epilog, !dbg !15316

if.end432:                                        ; preds = %sw.bb379
  %268 = load ptr, ptr %rktp, align 8, !dbg !15317, !tbaa !3910
  %rktp_lock433 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %268, i32 0, i32 14, !dbg !15317
  %call434 = call i32 @mtx_unlock(ptr noundef %rktp_lock433), !dbg !15317
  %269 = load ptr, ptr %rktp, align 8, !dbg !15318, !tbaa !3910
  %270 = load ptr, ptr %rkb.addr, align 8, !dbg !15319, !tbaa !3910
  %call435 = call i64 @rd_kafka_toppar_fetch_decide(ptr noundef %269, ptr noundef %270, i32 noundef 1), !dbg !15320
  %271 = load ptr, ptr %rkb.addr, align 8, !dbg !15321, !tbaa !3910
  %rkb_rk436 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %271, i32 0, i32 32, !dbg !15323
  %272 = load ptr, ptr %rkb_rk436, align 8, !dbg !15323, !tbaa !4139
  %rk_type437 = getelementptr inbounds %struct.rd_kafka_s, ptr %272, i32 0, i32 25, !dbg !15324
  %273 = load i32, ptr %rk_type437, align 8, !dbg !15324, !tbaa !10915
  %cmp438 = icmp eq i32 %273, 0, !dbg !15325
  br i1 %cmp438, label %if.then440, label %if.end442, !dbg !15326

if.then440:                                       ; preds = %if.end432
  %274 = load ptr, ptr %rkb.addr, align 8, !dbg !15327, !tbaa !3910
  %275 = load ptr, ptr %rkb.addr, align 8, !dbg !15329, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %275, i32 0, i32 35, !dbg !15330
  %276 = load ptr, ptr %rktp, align 8, !dbg !15331, !tbaa !3910
  %call441 = call i32 @rd_kafka_broker_bufq_purge_by_toppar(ptr noundef %274, ptr noundef %rkb_outbufs, i64 noundef 0, ptr noundef %276, i32 noundef -153), !dbg !15332
  br label %if.end442, !dbg !15333

if.end442:                                        ; preds = %if.then440, %if.end432
  %277 = load ptr, ptr %rktp, align 8, !dbg !15334, !tbaa !3910
  %rktp_lock443 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %277, i32 0, i32 14, !dbg !15334
  %call444 = call i32 @mtx_lock(ptr noundef %rktp_lock443), !dbg !15334
  br label %do.body445, !dbg !15335

do.body445:                                       ; preds = %if.end442
  %278 = load ptr, ptr %rkb.addr, align 8, !dbg !15336, !tbaa !3910
  %rkb_rk446 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %278, i32 0, i32 32, !dbg !15336
  %279 = load ptr, ptr %rkb_rk446, align 8, !dbg !15336, !tbaa !4139
  %rk_conf447 = getelementptr inbounds %struct.rd_kafka_s, ptr %279, i32 0, i32 18, !dbg !15336
  %debug448 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf447, i32 0, i32 13, !dbg !15336
  %280 = load i32, ptr %debug448, align 8, !dbg !15336, !tbaa !4140
  %and449 = and i32 %280, 6, !dbg !15336
  %conv450 = sext i32 %and449 to i64, !dbg !15336
  %expval451 = call i64 @llvm.expect.i64(i64 %conv450, i64 0), !dbg !15336
  %tobool452 = icmp ne i64 %expval451, 0, !dbg !15336
  br i1 %tobool452, label %if.then453, label %if.end481, !dbg !15337

if.then453:                                       ; preds = %do.body445
  br label %do.body454, !dbg !15338

do.body454:                                       ; preds = %if.then453
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname455) #16, !dbg !15339
  tail call void @llvm.dbg.declare(metadata ptr %_logname455, metadata !2820, metadata !DIExpression()), !dbg !15339
  %281 = load ptr, ptr %rkb.addr, align 8, !dbg !15339, !tbaa !3910
  %rkb_logname_lock456 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %281, i32 0, i32 49, !dbg !15339
  %call457 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock456), !dbg !15339
  %arraydecay458 = getelementptr inbounds [256 x i8], ptr %_logname455, i64 0, i64 0, !dbg !15339
  %282 = load ptr, ptr %rkb.addr, align 8, !dbg !15339, !tbaa !3910
  %rkb_logname459 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %282, i32 0, i32 48, !dbg !15339
  %283 = load ptr, ptr %rkb_logname459, align 8, !dbg !15339, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay458, ptr noundef %283, i64 noundef 256), !dbg !15339
  %284 = load ptr, ptr %rkb.addr, align 8, !dbg !15339, !tbaa !3910
  %rkb_logname_lock460 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %284, i32 0, i32 49, !dbg !15339
  %call461 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock460), !dbg !15339
  %285 = load ptr, ptr %rkb.addr, align 8, !dbg !15339, !tbaa !3910
  %rkb_rk462 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %285, i32 0, i32 32, !dbg !15339
  %286 = load ptr, ptr %rkb_rk462, align 8, !dbg !15339, !tbaa !4139
  %rk_conf463 = getelementptr inbounds %struct.rd_kafka_s, ptr %286, i32 0, i32 18, !dbg !15339
  %287 = load ptr, ptr %rkb.addr, align 8, !dbg !15339, !tbaa !3910
  %rkb_rk464 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %287, i32 0, i32 32, !dbg !15339
  %288 = load ptr, ptr %rkb_rk464, align 8, !dbg !15339, !tbaa !4139
  %arraydecay465 = getelementptr inbounds [256 x i8], ptr %_logname455, i64 0, i64 0, !dbg !15339
  %289 = load ptr, ptr %rktp, align 8, !dbg !15339, !tbaa !3910
  %rktp_rkt466 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %289, i32 0, i32 6, !dbg !15339
  %290 = load ptr, ptr %rktp_rkt466, align 8, !dbg !15339, !tbaa !8643
  %rkt_topic467 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %290, i32 0, i32 4, !dbg !15339
  %291 = load ptr, ptr %rkt_topic467, align 8, !dbg !15339, !tbaa !8676
  %str468 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %291, i32 0, i32 1, !dbg !15339
  %292 = load ptr, ptr %str468, align 8, !dbg !15339, !tbaa !8679
  %293 = load ptr, ptr %rktp, align 8, !dbg !15339, !tbaa !3910
  %rktp_partition469 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %293, i32 0, i32 7, !dbg !15339
  %294 = load i32, ptr %rktp_partition469, align 8, !dbg !15339, !tbaa !8680
  %295 = load ptr, ptr %rktp, align 8, !dbg !15339, !tbaa !3910
  %rktp_xmit_msgq = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %295, i32 0, i32 17, !dbg !15339
  %call470 = call i32 @rd_kafka_msgq_len(ptr noundef %rktp_xmit_msgq), !dbg !15339
  %296 = load ptr, ptr %rktp, align 8, !dbg !15339, !tbaa !3910
  %rktp_next_broker471 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %296, i32 0, i32 12, !dbg !15339
  %297 = load ptr, ptr %rktp_next_broker471, align 8, !dbg !15339, !tbaa !15200
  %tobool472 = icmp ne ptr %297, null, !dbg !15339
  br i1 %tobool472, label %cond.true473, label %cond.false476, !dbg !15339

cond.true473:                                     ; preds = %do.body454
  %298 = load ptr, ptr %rktp, align 8, !dbg !15339, !tbaa !3910
  %rktp_next_broker474 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %298, i32 0, i32 12, !dbg !15339
  %299 = load ptr, ptr %rktp_next_broker474, align 8, !dbg !15339, !tbaa !15200
  %call475 = call ptr @rd_kafka_broker_name(ptr noundef %299), !dbg !15339
  br label %cond.end477, !dbg !15339

cond.false476:                                    ; preds = %do.body454
  br label %cond.end477, !dbg !15339

cond.end477:                                      ; preds = %cond.false476, %cond.true473
  %cond478 = phi ptr [ %call475, %cond.true473 ], [ @.str.279, %cond.false476 ], !dbg !15339
  %300 = load ptr, ptr %rktp, align 8, !dbg !15339, !tbaa !3910
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf463, ptr noundef %288, ptr noundef %arraydecay465, i32 noundef 7, i32 noundef 6, ptr noundef @.str.274, ptr noundef @.str.287, ptr noundef %292, i32 noundef %294, i32 noundef %call470, ptr noundef %cond478, ptr noundef %300), !dbg !15339
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname455) #16, !dbg !15338
  br label %do.cond479, !dbg !15339

do.cond479:                                       ; preds = %cond.end477
  br label %do.end480, !dbg !15339

do.end480:                                        ; preds = %do.cond479
  br label %if.end481, !dbg !15338

if.end481:                                        ; preds = %do.end480, %do.body445
  br label %do.cond482, !dbg !15337

do.cond482:                                       ; preds = %if.end481
  br label %do.end483, !dbg !15337

do.end483:                                        ; preds = %do.cond482
  %301 = load ptr, ptr %rktp, align 8, !dbg !15340, !tbaa !3910
  %rktp_msgq484 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %301, i32 0, i32 16, !dbg !15341
  %302 = load ptr, ptr %rktp, align 8, !dbg !15342, !tbaa !3910
  %rktp_xmit_msgq485 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %302, i32 0, i32 17, !dbg !15343
  %303 = load ptr, ptr %rktp, align 8, !dbg !15344, !tbaa !3910
  %rktp_rkt486 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %303, i32 0, i32 6, !dbg !15345
  %304 = load ptr, ptr %rktp_rkt486, align 8, !dbg !15345, !tbaa !8643
  %rkt_conf = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %304, i32 0, i32 21, !dbg !15346
  %msg_order_cmp = getelementptr inbounds %struct.rd_kafka_topic_conf_s, ptr %rkt_conf, i32 0, i32 8, !dbg !15347
  %305 = load ptr, ptr %msg_order_cmp, align 8, !dbg !15347, !tbaa !8665
  call void @rd_kafka_msgq_insert_msgq(ptr noundef %rktp_msgq484, ptr noundef %rktp_xmit_msgq485, ptr noundef %305), !dbg !15348
  %306 = load ptr, ptr %rkb.addr, align 8, !dbg !15349, !tbaa !3910
  %rkb_rk487 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %306, i32 0, i32 32, !dbg !15351
  %307 = load ptr, ptr %rkb_rk487, align 8, !dbg !15351, !tbaa !4139
  %rk_type488 = getelementptr inbounds %struct.rd_kafka_s, ptr %307, i32 0, i32 25, !dbg !15352
  %308 = load i32, ptr %rk_type488, align 8, !dbg !15352, !tbaa !10915
  %cmp489 = icmp eq i32 %308, 0, !dbg !15353
  br i1 %cmp489, label %if.then491, label %if.end492, !dbg !15354

if.then491:                                       ; preds = %do.end483
  %309 = load ptr, ptr %rkb.addr, align 8, !dbg !15355, !tbaa !3910
  %310 = load ptr, ptr %rktp, align 8, !dbg !15356, !tbaa !3910
  call void @rd_kafka_broker_active_toppar_del(ptr noundef %309, ptr noundef %310, ptr noundef @.str.288), !dbg !15357
  br label %if.end492, !dbg !15357

if.end492:                                        ; preds = %if.then491, %do.end483
  %311 = load ptr, ptr %rkb.addr, align 8, !dbg !15358, !tbaa !3910
  %rkb_lock493 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %311, i32 0, i32 9, !dbg !15358
  %call494 = call i32 @mtx_lock(ptr noundef %rkb_lock493), !dbg !15358
  br label %do.body495, !dbg !15359

do.body495:                                       ; preds = %if.end492
  %312 = load ptr, ptr %rktp, align 8, !dbg !15360, !tbaa !3910
  %rktp_rkblink496 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %312, i32 0, i32 1, !dbg !15360
  %tqe_next497 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink496, i32 0, i32 0, !dbg !15360
  %313 = load ptr, ptr %tqe_next497, align 8, !dbg !15360, !tbaa !4674
  %cmp498 = icmp ne ptr %313, null, !dbg !15360
  br i1 %cmp498, label %if.then500, label %if.else507, !dbg !15363

if.then500:                                       ; preds = %do.body495
  %314 = load ptr, ptr %rktp, align 8, !dbg !15360, !tbaa !3910
  %rktp_rkblink501 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %314, i32 0, i32 1, !dbg !15360
  %tqe_prev502 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink501, i32 0, i32 1, !dbg !15360
  %315 = load ptr, ptr %tqe_prev502, align 8, !dbg !15360, !tbaa !15248
  %316 = load ptr, ptr %rktp, align 8, !dbg !15360, !tbaa !3910
  %rktp_rkblink503 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %316, i32 0, i32 1, !dbg !15360
  %tqe_next504 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink503, i32 0, i32 0, !dbg !15360
  %317 = load ptr, ptr %tqe_next504, align 8, !dbg !15360, !tbaa !4674
  %rktp_rkblink505 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %317, i32 0, i32 1, !dbg !15360
  %tqe_prev506 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink505, i32 0, i32 1, !dbg !15360
  store ptr %315, ptr %tqe_prev506, align 8, !dbg !15360, !tbaa !15248
  br label %if.end512, !dbg !15360

if.else507:                                       ; preds = %do.body495
  %318 = load ptr, ptr %rktp, align 8, !dbg !15360, !tbaa !3910
  %rktp_rkblink508 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %318, i32 0, i32 1, !dbg !15360
  %tqe_prev509 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink508, i32 0, i32 1, !dbg !15360
  %319 = load ptr, ptr %tqe_prev509, align 8, !dbg !15360, !tbaa !15248
  %320 = load ptr, ptr %rkb.addr, align 8, !dbg !15360, !tbaa !3910
  %rkb_toppars510 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %320, i32 0, i32 11, !dbg !15360
  %tqh_last511 = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars510, i32 0, i32 1, !dbg !15360
  store ptr %319, ptr %tqh_last511, align 8, !dbg !15360, !tbaa !9031
  br label %if.end512

if.end512:                                        ; preds = %if.else507, %if.then500
  %321 = load ptr, ptr %rktp, align 8, !dbg !15363, !tbaa !3910
  %rktp_rkblink513 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %321, i32 0, i32 1, !dbg !15363
  %tqe_next514 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink513, i32 0, i32 0, !dbg !15363
  %322 = load ptr, ptr %tqe_next514, align 8, !dbg !15363, !tbaa !4674
  %323 = load ptr, ptr %rktp, align 8, !dbg !15363, !tbaa !3910
  %rktp_rkblink515 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %323, i32 0, i32 1, !dbg !15363
  %tqe_prev516 = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink515, i32 0, i32 1, !dbg !15363
  %324 = load ptr, ptr %tqe_prev516, align 8, !dbg !15363, !tbaa !15248
  store ptr %322, ptr %324, align 8, !dbg !15363, !tbaa !3910
  br label %do.cond517, !dbg !15363

do.cond517:                                       ; preds = %if.end512
  br label %do.end518, !dbg !15363

do.end518:                                        ; preds = %do.cond517
  %325 = load ptr, ptr %rkb.addr, align 8, !dbg !15364, !tbaa !3910
  %rkb_toppar_cnt519 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %325, i32 0, i32 12, !dbg !15365
  %326 = load i32, ptr %rkb_toppar_cnt519, align 8, !dbg !15366, !tbaa !4629
  %dec = add nsw i32 %326, -1, !dbg !15366
  store i32 %dec, ptr %rkb_toppar_cnt519, align 8, !dbg !15366, !tbaa !4629
  %327 = load ptr, ptr %rkb.addr, align 8, !dbg !15367, !tbaa !3910
  %rkb_lock520 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %327, i32 0, i32 9, !dbg !15367
  %call521 = call i32 @mtx_unlock(ptr noundef %rkb_lock520), !dbg !15367
  br label %do.body522, !dbg !15368

do.body522:                                       ; preds = %do.end518
  %328 = load ptr, ptr %rktp, align 8, !dbg !15369, !tbaa !3910
  %rktp_broker523 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %328, i32 0, i32 11, !dbg !15369
  %329 = load ptr, ptr %rktp_broker523, align 8, !dbg !15369, !tbaa !4644
  %rkb_refcnt524 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %329, i32 0, i32 31, !dbg !15369
  %call525 = call i32 @rd_refcnt_sub0(ptr noundef %rkb_refcnt524), !dbg !15369
  %cmp526 = icmp sgt i32 %call525, 0, !dbg !15369
  br i1 %cmp526, label %if.then528, label %if.end529, !dbg !15372

if.then528:                                       ; preds = %do.body522
  br label %do.end532, !dbg !15369

if.end529:                                        ; preds = %do.body522
  %330 = load ptr, ptr %rktp, align 8, !dbg !15372, !tbaa !3910
  %rktp_broker530 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %330, i32 0, i32 11, !dbg !15372
  %331 = load ptr, ptr %rktp_broker530, align 8, !dbg !15372, !tbaa !4644
  call void @rd_kafka_broker_destroy_final(ptr noundef %331), !dbg !15372
  br label %do.cond531, !dbg !15372

do.cond531:                                       ; preds = %if.end529
  br label %do.end532, !dbg !15372

do.end532:                                        ; preds = %do.cond531, %if.then528
  %332 = load ptr, ptr %rktp, align 8, !dbg !15373, !tbaa !3910
  %rktp_msgq_wakeup_q533 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %332, i32 0, i32 15, !dbg !15375
  %333 = load ptr, ptr %rktp_msgq_wakeup_q533, align 8, !dbg !15375, !tbaa !15260
  %tobool534 = icmp ne ptr %333, null, !dbg !15373
  br i1 %tobool534, label %if.then535, label %if.end538, !dbg !15376

if.then535:                                       ; preds = %do.end532
  %334 = load ptr, ptr %rktp, align 8, !dbg !15377, !tbaa !3910
  %rktp_msgq_wakeup_q536 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %334, i32 0, i32 15, !dbg !15377
  %335 = load ptr, ptr %rktp_msgq_wakeup_q536, align 8, !dbg !15377, !tbaa !15260
  call void @rd_kafka_q_destroy0(ptr noundef %335, i32 noundef 0), !dbg !15377
  %336 = load ptr, ptr %rktp, align 8, !dbg !15379, !tbaa !3910
  %rktp_msgq_wakeup_q537 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %336, i32 0, i32 15, !dbg !15380
  store ptr null, ptr %rktp_msgq_wakeup_q537, align 8, !dbg !15381, !tbaa !15260
  br label %if.end538, !dbg !15382

if.end538:                                        ; preds = %if.then535, %do.end532
  %337 = load ptr, ptr %rktp, align 8, !dbg !15383, !tbaa !3910
  %rktp_broker539 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %337, i32 0, i32 11, !dbg !15384
  store ptr null, ptr %rktp_broker539, align 8, !dbg !15385, !tbaa !4644
  %338 = load ptr, ptr %rktp, align 8, !dbg !15386, !tbaa !3910
  %rktp_flags540 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %338, i32 0, i32 54, !dbg !15386
  %339 = load i32, ptr %rktp_flags540, align 8, !dbg !15386, !tbaa !14443
  %and541 = and i32 %339, 4096, !dbg !15386
  %tobool542 = icmp ne i32 %and541, 0, !dbg !15386
  br i1 %tobool542, label %if.then543, label %if.else544, !dbg !15389

if.then543:                                       ; preds = %if.end538
  br label %if.end545, !dbg !15389

if.else544:                                       ; preds = %if.end538
  call void @__assert_fail(ptr noundef @.str.289, ptr noundef @.str.20, i32 noundef 3361, ptr noundef @__PRETTY_FUNCTION__.rd_kafka_broker_op_serve) #18, !dbg !15386
  unreachable, !dbg !15386

if.end545:                                        ; preds = %if.then543
  %340 = load ptr, ptr %rktp, align 8, !dbg !15390, !tbaa !3910
  %rktp_flags546 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %340, i32 0, i32 54, !dbg !15391
  %341 = load i32, ptr %rktp_flags546, align 8, !dbg !15392, !tbaa !14443
  %and547 = and i32 %341, -4097, !dbg !15392
  store i32 %and547, ptr %rktp_flags546, align 8, !dbg !15392, !tbaa !14443
  %342 = load ptr, ptr %rktp, align 8, !dbg !15393, !tbaa !3910
  %rktp_next_broker548 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %342, i32 0, i32 12, !dbg !15394
  %343 = load ptr, ptr %rktp_next_broker548, align 8, !dbg !15394, !tbaa !15200
  %tobool549 = icmp ne ptr %343, null, !dbg !15393
  br i1 %tobool549, label %if.then550, label %if.else555, !dbg !15395

if.then550:                                       ; preds = %if.end545
  %344 = load ptr, ptr %rko.addr, align 8, !dbg !15396, !tbaa !3910
  %rko_type551 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %344, i32 0, i32 1, !dbg !15398
  store i32 16, ptr %rko_type551, align 8, !dbg !15399, !tbaa !15017
  %345 = load ptr, ptr %rktp, align 8, !dbg !15400, !tbaa !3910
  %rktp_next_broker552 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %345, i32 0, i32 12, !dbg !15401
  %346 = load ptr, ptr %rktp_next_broker552, align 8, !dbg !15401, !tbaa !15200
  %rkb_ops553 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %346, i32 0, i32 8, !dbg !15402
  %347 = load ptr, ptr %rkb_ops553, align 8, !dbg !15402, !tbaa !5475
  %348 = load ptr, ptr %rko.addr, align 8, !dbg !15403, !tbaa !3910
  %call554 = call i32 @rd_kafka_q_enq(ptr noundef %347, ptr noundef %348), !dbg !15404
  store ptr null, ptr %rko.addr, align 8, !dbg !15405, !tbaa !3910
  br label %if.end618, !dbg !15406

if.else555:                                       ; preds = %if.end545
  br label %do.body556, !dbg !15407

do.body556:                                       ; preds = %if.else555
  %349 = load ptr, ptr %rkb.addr, align 8, !dbg !15408, !tbaa !3910
  %rkb_rk557 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %349, i32 0, i32 32, !dbg !15408
  %350 = load ptr, ptr %rkb_rk557, align 8, !dbg !15408, !tbaa !4139
  %rk_conf558 = getelementptr inbounds %struct.rd_kafka_s, ptr %350, i32 0, i32 18, !dbg !15408
  %debug559 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf558, i32 0, i32 13, !dbg !15408
  %351 = load i32, ptr %debug559, align 8, !dbg !15408, !tbaa !4140
  %and560 = and i32 %351, 6, !dbg !15408
  %conv561 = sext i32 %and560 to i64, !dbg !15408
  %expval562 = call i64 @llvm.expect.i64(i64 %conv561, i64 0), !dbg !15408
  %tobool563 = icmp ne i64 %expval562, 0, !dbg !15408
  br i1 %tobool563, label %if.then564, label %if.end585, !dbg !15409

if.then564:                                       ; preds = %do.body556
  br label %do.body565, !dbg !15410

do.body565:                                       ; preds = %if.then564
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname566) #16, !dbg !15411
  tail call void @llvm.dbg.declare(metadata ptr %_logname566, metadata !2825, metadata !DIExpression()), !dbg !15411
  %352 = load ptr, ptr %rkb.addr, align 8, !dbg !15411, !tbaa !3910
  %rkb_logname_lock567 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %352, i32 0, i32 49, !dbg !15411
  %call568 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock567), !dbg !15411
  %arraydecay569 = getelementptr inbounds [256 x i8], ptr %_logname566, i64 0, i64 0, !dbg !15411
  %353 = load ptr, ptr %rkb.addr, align 8, !dbg !15411, !tbaa !3910
  %rkb_logname570 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %353, i32 0, i32 48, !dbg !15411
  %354 = load ptr, ptr %rkb_logname570, align 8, !dbg !15411, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay569, ptr noundef %354, i64 noundef 256), !dbg !15411
  %355 = load ptr, ptr %rkb.addr, align 8, !dbg !15411, !tbaa !3910
  %rkb_logname_lock571 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %355, i32 0, i32 49, !dbg !15411
  %call572 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock571), !dbg !15411
  %356 = load ptr, ptr %rkb.addr, align 8, !dbg !15411, !tbaa !3910
  %rkb_rk573 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %356, i32 0, i32 32, !dbg !15411
  %357 = load ptr, ptr %rkb_rk573, align 8, !dbg !15411, !tbaa !4139
  %rk_conf574 = getelementptr inbounds %struct.rd_kafka_s, ptr %357, i32 0, i32 18, !dbg !15411
  %358 = load ptr, ptr %rkb.addr, align 8, !dbg !15411, !tbaa !3910
  %rkb_rk575 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %358, i32 0, i32 32, !dbg !15411
  %359 = load ptr, ptr %rkb_rk575, align 8, !dbg !15411, !tbaa !4139
  %arraydecay576 = getelementptr inbounds [256 x i8], ptr %_logname566, i64 0, i64 0, !dbg !15411
  %360 = load ptr, ptr %rktp, align 8, !dbg !15411, !tbaa !3910
  %rktp_rkt577 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %360, i32 0, i32 6, !dbg !15411
  %361 = load ptr, ptr %rktp_rkt577, align 8, !dbg !15411, !tbaa !8643
  %rkt_topic578 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %361, i32 0, i32 4, !dbg !15411
  %362 = load ptr, ptr %rkt_topic578, align 8, !dbg !15411, !tbaa !8676
  %str579 = getelementptr inbounds %struct.rd_kafkap_str_s, ptr %362, i32 0, i32 1, !dbg !15411
  %363 = load ptr, ptr %str579, align 8, !dbg !15411, !tbaa !8679
  %364 = load ptr, ptr %rktp, align 8, !dbg !15411, !tbaa !3910
  %rktp_partition580 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %364, i32 0, i32 7, !dbg !15411
  %365 = load i32, ptr %rktp_partition580, align 8, !dbg !15411, !tbaa !8680
  %366 = load ptr, ptr %rktp, align 8, !dbg !15411, !tbaa !3910
  %rktp_msgq581 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %366, i32 0, i32 16, !dbg !15411
  %call582 = call i32 @rd_kafka_msgq_len(ptr noundef %rktp_msgq581), !dbg !15411
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf574, ptr noundef %359, ptr noundef %arraydecay576, i32 noundef 7, i32 noundef 6, ptr noundef @.str.274, ptr noundef @.str.290, ptr noundef %363, i32 noundef %365, i32 noundef %call582), !dbg !15411
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname566) #16, !dbg !15410
  br label %do.cond583, !dbg !15411

do.cond583:                                       ; preds = %do.body565
  br label %do.end584, !dbg !15411

do.end584:                                        ; preds = %do.cond583
  br label %if.end585, !dbg !15410

if.end585:                                        ; preds = %do.end584, %do.body556
  br label %do.cond586, !dbg !15409

do.cond586:                                       ; preds = %if.end585
  br label %do.end587, !dbg !15409

do.end587:                                        ; preds = %do.cond586
  br label %do.body588, !dbg !15412

do.body588:                                       ; preds = %do.end587
  %367 = load ptr, ptr %rktp, align 8, !dbg !15413, !tbaa !3910
  %rktp_xmit_msgq589 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %367, i32 0, i32 17, !dbg !15413
  %call590 = call i32 @rd_kafka_msgq_len(ptr noundef %rktp_xmit_msgq589), !dbg !15413
  %cmp591 = icmp eq i32 %call590, 0, !dbg !15413
  %lnot593 = xor i1 %cmp591, true, !dbg !15413
  %lnot.ext594 = zext i1 %lnot593 to i32, !dbg !15413
  %conv595 = sext i32 %lnot.ext594 to i64, !dbg !15413
  %expval596 = call i64 @llvm.expect.i64(i64 %conv595, i64 0), !dbg !15413
  %tobool597 = icmp ne i64 %expval596, 0, !dbg !15413
  br i1 %tobool597, label %if.then598, label %if.end599, !dbg !15416

if.then598:                                       ; preds = %do.body588
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 3378, ptr noundef @__FUNCTION__.rd_kafka_broker_op_serve, ptr noundef null, ptr noundef @.str.291) #17, !dbg !15413
  unreachable, !dbg !15413

if.end599:                                        ; preds = %do.body588
  br label %do.cond600, !dbg !15416

do.cond600:                                       ; preds = %if.end599
  br label %do.end601, !dbg !15416

do.end601:                                        ; preds = %do.cond600
  %368 = load ptr, ptr %rktp, align 8, !dbg !15417, !tbaa !3910
  %rktp_rkt602 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %368, i32 0, i32 6, !dbg !15418
  %369 = load ptr, ptr %rktp_rkt602, align 8, !dbg !15418, !tbaa !8643
  %370 = load ptr, ptr %rktp, align 8, !dbg !15419, !tbaa !3910
  %rktp_msgq603 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %370, i32 0, i32 16, !dbg !15420
  %371 = load ptr, ptr %rkb.addr, align 8, !dbg !15421, !tbaa !3910
  %rkb_rk604 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %371, i32 0, i32 32, !dbg !15421
  %372 = load ptr, ptr %rkb_rk604, align 8, !dbg !15421, !tbaa !4139
  %rk_terminate605 = getelementptr inbounds %struct.rd_kafka_s, ptr %372, i32 0, i32 23, !dbg !15421
  %call606 = call i32 @rd_atomic32_get(ptr noundef %rk_terminate605), !dbg !15421
  %and607 = and i32 %call606, 1, !dbg !15421
  %tobool608 = icmp ne i32 %and607, 0, !dbg !15421
  br i1 %tobool608, label %cond.true609, label %cond.false610, !dbg !15421

cond.true609:                                     ; preds = %do.end601
  br label %cond.end616, !dbg !15421

cond.false610:                                    ; preds = %do.end601
  %373 = load i32, ptr %topic_err, align 4, !dbg !15422, !tbaa !4126
  %tobool611 = icmp ne i32 %373, 0, !dbg !15422
  br i1 %tobool611, label %cond.true612, label %cond.false613, !dbg !15422

cond.true612:                                     ; preds = %cond.false610
  %374 = load i32, ptr %topic_err, align 4, !dbg !15423, !tbaa !4126
  br label %cond.end614, !dbg !15422

cond.false613:                                    ; preds = %cond.false610
  br label %cond.end614, !dbg !15422

cond.end614:                                      ; preds = %cond.false613, %cond.true612
  %cond615 = phi i32 [ %374, %cond.true612 ], [ -190, %cond.false613 ], !dbg !15422
  br label %cond.end616, !dbg !15421

cond.end616:                                      ; preds = %cond.end614, %cond.true609
  %cond617 = phi i32 [ -197, %cond.true609 ], [ %cond615, %cond.end614 ], !dbg !15421
  call void @rd_kafka_dr_msgq(ptr noundef %369, ptr noundef %rktp_msgq603, i32 noundef %cond617), !dbg !15424
  br label %if.end618

if.end618:                                        ; preds = %cond.end616, %if.then550
  %375 = load ptr, ptr %rktp, align 8, !dbg !15425, !tbaa !3910
  %rktp_lock619 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %375, i32 0, i32 14, !dbg !15425
  %call620 = call i32 @mtx_unlock(ptr noundef %rktp_lock619), !dbg !15425
  br label %do.body621, !dbg !15426

do.body621:                                       ; preds = %if.end618
  call void @llvm.lifetime.start.p0(i64 8, ptr %_RKTP622) #16, !dbg !15427
  tail call void @llvm.dbg.declare(metadata ptr %_RKTP622, metadata !2832, metadata !DIExpression()), !dbg !15427
  %376 = load ptr, ptr %rktp, align 8, !dbg !15427, !tbaa !3910
  store ptr %376, ptr %_RKTP622, align 8, !dbg !15427, !tbaa !3910
  %377 = load ptr, ptr %_RKTP622, align 8, !dbg !15428, !tbaa !3910
  %rktp_refcnt623 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %377, i32 0, i32 13, !dbg !15428
  %call624 = call i32 @rd_refcnt_sub0(ptr noundef %rktp_refcnt623), !dbg !15428
  %cmp625 = icmp eq i32 %call624, 0, !dbg !15428
  %conv626 = zext i1 %cmp625 to i32, !dbg !15428
  %conv627 = sext i32 %conv626 to i64, !dbg !15428
  %expval628 = call i64 @llvm.expect.i64(i64 %conv627, i64 0), !dbg !15428
  %tobool629 = icmp ne i64 %expval628, 0, !dbg !15428
  br i1 %tobool629, label %if.then630, label %if.end631, !dbg !15427

if.then630:                                       ; preds = %do.body621
  %378 = load ptr, ptr %_RKTP622, align 8, !dbg !15428, !tbaa !3910
  call void @rd_kafka_toppar_destroy_final(ptr noundef %378), !dbg !15428
  br label %if.end631, !dbg !15428

if.end631:                                        ; preds = %if.then630, %do.body621
  call void @llvm.lifetime.end.p0(i64 8, ptr %_RKTP622) #16, !dbg !15426
  br label %do.cond632, !dbg !15427

do.cond632:                                       ; preds = %if.end631
  br label %do.end633, !dbg !15427

do.end633:                                        ; preds = %do.cond632
  %379 = load ptr, ptr %rkb.addr, align 8, !dbg !15430, !tbaa !3910
  %rkb_rk634 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %379, i32 0, i32 32, !dbg !15431
  %380 = load ptr, ptr %rkb_rk634, align 8, !dbg !15431, !tbaa !4139
  call void @rd_kafka_brokers_broadcast_state_change(ptr noundef %380), !dbg !15432
  br label %sw.epilog, !dbg !15433

sw.bb635:                                         ; preds = %do.end
  br label %do.body636, !dbg !15434

do.body636:                                       ; preds = %sw.bb635
  %381 = load ptr, ptr %rkb.addr, align 8, !dbg !15435, !tbaa !3910
  %rkb_rk637 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %381, i32 0, i32 32, !dbg !15435
  %382 = load ptr, ptr %rkb_rk637, align 8, !dbg !15435, !tbaa !4139
  %rk_conf638 = getelementptr inbounds %struct.rd_kafka_s, ptr %382, i32 0, i32 18, !dbg !15435
  %debug639 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf638, i32 0, i32 13, !dbg !15435
  %383 = load i32, ptr %debug639, align 8, !dbg !15435, !tbaa !4140
  %and640 = and i32 %383, 2, !dbg !15435
  %conv641 = sext i32 %and640 to i64, !dbg !15435
  %expval642 = call i64 @llvm.expect.i64(i64 %conv641, i64 0), !dbg !15435
  %tobool643 = icmp ne i64 %expval642, 0, !dbg !15435
  br i1 %tobool643, label %if.then644, label %if.end669, !dbg !15436

if.then644:                                       ; preds = %do.body636
  br label %do.body645, !dbg !15437

do.body645:                                       ; preds = %if.then644
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname646) #16, !dbg !15438
  tail call void @llvm.dbg.declare(metadata ptr %_logname646, metadata !2834, metadata !DIExpression()), !dbg !15438
  %384 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_logname_lock647 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %384, i32 0, i32 49, !dbg !15438
  %call648 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock647), !dbg !15438
  %arraydecay649 = getelementptr inbounds [256 x i8], ptr %_logname646, i64 0, i64 0, !dbg !15438
  %385 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_logname650 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %385, i32 0, i32 48, !dbg !15438
  %386 = load ptr, ptr %rkb_logname650, align 8, !dbg !15438, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay649, ptr noundef %386, i64 noundef 256), !dbg !15438
  %387 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_logname_lock651 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %387, i32 0, i32 49, !dbg !15438
  %call652 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock651), !dbg !15438
  %388 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_rk653 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %388, i32 0, i32 32, !dbg !15438
  %389 = load ptr, ptr %rkb_rk653, align 8, !dbg !15438, !tbaa !4139
  %rk_conf654 = getelementptr inbounds %struct.rd_kafka_s, ptr %389, i32 0, i32 18, !dbg !15438
  %390 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_rk655 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %390, i32 0, i32 32, !dbg !15438
  %391 = load ptr, ptr %rkb_rk655, align 8, !dbg !15438, !tbaa !4139
  %arraydecay656 = getelementptr inbounds [256 x i8], ptr %_logname646, i64 0, i64 0, !dbg !15438
  %392 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_state657 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %392, i32 0, i32 19, !dbg !15438
  %393 = load i32, ptr %rkb_state657, align 4, !dbg !15438, !tbaa !4130
  %idxprom = zext i32 %393 to i64, !dbg !15438
  %arrayidx = getelementptr inbounds [12 x ptr], ptr @rd_kafka_broker_state_names, i64 0, i64 %idxprom, !dbg !15438
  %394 = load ptr, ptr %arrayidx, align 8, !dbg !15438, !tbaa !3910
  %395 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_refcnt658 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %395, i32 0, i32 31, !dbg !15438
  %call659 = call i32 @rd_atomic32_get(ptr noundef %rkb_refcnt658), !dbg !15438
  %396 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_toppar_cnt660 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %396, i32 0, i32 12, !dbg !15438
  %397 = load i32, ptr %rkb_toppar_cnt660, align 8, !dbg !15438, !tbaa !4629
  %398 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_active_toppar_cnt = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %398, i32 0, i32 14, !dbg !15438
  %399 = load i32, ptr %rkb_active_toppar_cnt, align 8, !dbg !15438, !tbaa !9782
  %400 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_outbufs661 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %400, i32 0, i32 35, !dbg !15438
  %rkbq_cnt = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_outbufs661, i32 0, i32 1, !dbg !15438
  %call662 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt), !dbg !15438
  %401 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %401, i32 0, i32 36, !dbg !15438
  %rkbq_cnt663 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_waitresps, i32 0, i32 1, !dbg !15438
  %call664 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt663), !dbg !15438
  %402 = load ptr, ptr %rkb.addr, align 8, !dbg !15438, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %402, i32 0, i32 37, !dbg !15438
  %rkbq_cnt665 = getelementptr inbounds %struct.rd_kafka_bufq_s, ptr %rkb_retrybufs, i32 0, i32 1, !dbg !15438
  %call666 = call i32 @rd_atomic32_get(ptr noundef %rkbq_cnt665), !dbg !15438
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf654, ptr noundef %391, ptr noundef %arraydecay656, i32 noundef 7, i32 noundef 2, ptr noundef @.str.292, ptr noundef @.str.293, ptr noundef %394, i32 noundef %call659, i32 noundef %397, i32 noundef %399, i32 noundef %call662, i32 noundef %call664, i32 noundef %call666), !dbg !15438
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname646) #16, !dbg !15437
  br label %do.cond667, !dbg !15438

do.cond667:                                       ; preds = %do.body645
  br label %do.end668, !dbg !15438

do.end668:                                        ; preds = %do.cond667
  br label %if.end669, !dbg !15437

if.end669:                                        ; preds = %do.end668, %do.body636
  br label %do.cond670, !dbg !15436

do.cond670:                                       ; preds = %if.end669
  br label %do.end671, !dbg !15436

do.end671:                                        ; preds = %do.cond670
  %403 = load ptr, ptr %rkb.addr, align 8, !dbg !15439, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %403, i32 noundef 7, i32 noundef -197, ptr noundef @.str.294), !dbg !15440
  %404 = load ptr, ptr %rkb.addr, align 8, !dbg !15441, !tbaa !3910
  call void @rd_kafka_broker_prepare_destroy(ptr noundef %404), !dbg !15442
  store i8 1, ptr %wakeup, align 1, !dbg !15443, !tbaa !4126
  br label %sw.epilog, !dbg !15444

sw.bb672:                                         ; preds = %do.end
  store i8 1, ptr %wakeup, align 1, !dbg !15445, !tbaa !4126
  br label %sw.epilog, !dbg !15446

sw.bb673:                                         ; preds = %do.end
  %405 = load ptr, ptr %rkb.addr, align 8, !dbg !15447, !tbaa !3910
  %406 = load ptr, ptr %rko.addr, align 8, !dbg !15448, !tbaa !3910
  call void @rd_kafka_broker_handle_purge_queues(ptr noundef %405, ptr noundef %406), !dbg !15449
  store ptr null, ptr %rko.addr, align 8, !dbg !15450, !tbaa !3910
  br label %sw.epilog, !dbg !15451

sw.bb674:                                         ; preds = %do.end
  %407 = load ptr, ptr %rkb.addr, align 8, !dbg !15452, !tbaa !3910
  %rkb_state675 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %407, i32 0, i32 19, !dbg !15453
  %408 = load i32, ptr %rkb_state675, align 4, !dbg !15453, !tbaa !4130
  %cmp676 = icmp eq i32 %408, 0, !dbg !15454
  br i1 %cmp676, label %if.then678, label %if.else710, !dbg !15455

if.then678:                                       ; preds = %sw.bb674
  br label %do.body679, !dbg !15456

do.body679:                                       ; preds = %if.then678
  %409 = load ptr, ptr %rkb.addr, align 8, !dbg !15457, !tbaa !3910
  %rkb_rk680 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %409, i32 0, i32 32, !dbg !15457
  %410 = load ptr, ptr %rkb_rk680, align 8, !dbg !15457, !tbaa !4139
  %rk_conf681 = getelementptr inbounds %struct.rd_kafka_s, ptr %410, i32 0, i32 18, !dbg !15457
  %debug682 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf681, i32 0, i32 13, !dbg !15457
  %411 = load i32, ptr %debug682, align 8, !dbg !15457, !tbaa !4140
  %and683 = and i32 %411, 2, !dbg !15457
  %conv684 = sext i32 %and683 to i64, !dbg !15457
  %expval685 = call i64 @llvm.expect.i64(i64 %conv684, i64 0), !dbg !15457
  %tobool686 = icmp ne i64 %expval685, 0, !dbg !15457
  br i1 %tobool686, label %if.then687, label %if.end702, !dbg !15458

if.then687:                                       ; preds = %do.body679
  br label %do.body688, !dbg !15459

do.body688:                                       ; preds = %if.then687
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname689) #16, !dbg !15460
  tail call void @llvm.dbg.declare(metadata ptr %_logname689, metadata !2839, metadata !DIExpression()), !dbg !15460
  %412 = load ptr, ptr %rkb.addr, align 8, !dbg !15460, !tbaa !3910
  %rkb_logname_lock690 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %412, i32 0, i32 49, !dbg !15460
  %call691 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock690), !dbg !15460
  %arraydecay692 = getelementptr inbounds [256 x i8], ptr %_logname689, i64 0, i64 0, !dbg !15460
  %413 = load ptr, ptr %rkb.addr, align 8, !dbg !15460, !tbaa !3910
  %rkb_logname693 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %413, i32 0, i32 48, !dbg !15460
  %414 = load ptr, ptr %rkb_logname693, align 8, !dbg !15460, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay692, ptr noundef %414, i64 noundef 256), !dbg !15460
  %415 = load ptr, ptr %rkb.addr, align 8, !dbg !15460, !tbaa !3910
  %rkb_logname_lock694 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %415, i32 0, i32 49, !dbg !15460
  %call695 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock694), !dbg !15460
  %416 = load ptr, ptr %rkb.addr, align 8, !dbg !15460, !tbaa !3910
  %rkb_rk696 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %416, i32 0, i32 32, !dbg !15460
  %417 = load ptr, ptr %rkb_rk696, align 8, !dbg !15460, !tbaa !4139
  %rk_conf697 = getelementptr inbounds %struct.rd_kafka_s, ptr %417, i32 0, i32 18, !dbg !15460
  %418 = load ptr, ptr %rkb.addr, align 8, !dbg !15460, !tbaa !3910
  %rkb_rk698 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %418, i32 0, i32 32, !dbg !15460
  %419 = load ptr, ptr %rkb_rk698, align 8, !dbg !15460, !tbaa !4139
  %arraydecay699 = getelementptr inbounds [256 x i8], ptr %_logname689, i64 0, i64 0, !dbg !15460
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf697, ptr noundef %419, ptr noundef %arraydecay699, i32 noundef 7, i32 noundef 2, ptr noundef @.str.3, ptr noundef @.str.295), !dbg !15460
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname689) #16, !dbg !15459
  br label %do.cond700, !dbg !15460

do.cond700:                                       ; preds = %do.body688
  br label %do.end701, !dbg !15460

do.end701:                                        ; preds = %do.cond700
  br label %if.end702, !dbg !15459

if.end702:                                        ; preds = %do.end701, %do.body679
  br label %do.cond703, !dbg !15458

do.cond703:                                       ; preds = %if.end702
  br label %do.end704, !dbg !15458

do.end704:                                        ; preds = %do.cond703
  %420 = load ptr, ptr %rkb.addr, align 8, !dbg !15461, !tbaa !3910
  %rkb_persistconn = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %420, i32 0, i32 55, !dbg !15462
  %internal = getelementptr inbounds %struct.anon.6, ptr %rkb_persistconn, i32 0, i32 0, !dbg !15463
  %421 = load i32, ptr %internal, align 4, !dbg !15464, !tbaa !5311
  %inc705 = add nsw i32 %421, 1, !dbg !15464
  store i32 %inc705, ptr %internal, align 4, !dbg !15464, !tbaa !5311
  %422 = load ptr, ptr %rkb.addr, align 8, !dbg !15465, !tbaa !3910
  %rkb_lock706 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %422, i32 0, i32 9, !dbg !15465
  %call707 = call i32 @mtx_lock(ptr noundef %rkb_lock706), !dbg !15465
  %423 = load ptr, ptr %rkb.addr, align 8, !dbg !15466, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %423, i32 noundef 2), !dbg !15467
  %424 = load ptr, ptr %rkb.addr, align 8, !dbg !15468, !tbaa !3910
  %rkb_lock708 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %424, i32 0, i32 9, !dbg !15468
  %call709 = call i32 @mtx_unlock(ptr noundef %rkb_lock708), !dbg !15468
  br label %if.end727, !dbg !15469

if.else710:                                       ; preds = %sw.bb674
  %425 = load ptr, ptr %rkb.addr, align 8, !dbg !15470, !tbaa !3910
  %rkb_state711 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %425, i32 0, i32 19, !dbg !15471
  %426 = load i32, ptr %rkb_state711, align 4, !dbg !15471, !tbaa !4130
  %cmp712 = icmp uge i32 %426, 2, !dbg !15472
  br i1 %cmp712, label %if.then714, label %if.end726, !dbg !15473

if.then714:                                       ; preds = %if.else710
  call void @llvm.lifetime.start.p0(i64 1, ptr %do_disconnect) #16, !dbg !15474
  tail call void @llvm.dbg.declare(metadata ptr %do_disconnect, metadata !2846, metadata !DIExpression()), !dbg !15475
  store i8 0, ptr %do_disconnect, align 1, !dbg !15475, !tbaa !4126
  %427 = load ptr, ptr %rkb.addr, align 8, !dbg !15476, !tbaa !3910
  %rkb_lock715 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %427, i32 0, i32 9, !dbg !15476
  %call716 = call i32 @mtx_lock(ptr noundef %rkb_lock715), !dbg !15476
  %428 = load ptr, ptr %rkb.addr, align 8, !dbg !15477, !tbaa !3910
  %rkb_connect_epoch = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %428, i32 0, i32 47, !dbg !15478
  %429 = load i32, ptr %rkb_connect_epoch, align 4, !dbg !15478, !tbaa !12714
  %430 = load ptr, ptr %rkb.addr, align 8, !dbg !15479, !tbaa !3910
  %rkb_nodename_epoch717 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %430, i32 0, i32 46, !dbg !15480
  %431 = load i32, ptr %rkb_nodename_epoch717, align 8, !dbg !15480, !tbaa !10008
  %cmp718 = icmp ne i32 %429, %431, !dbg !15481
  %conv719 = zext i1 %cmp718 to i32, !dbg !15481
  %conv720 = trunc i32 %conv719 to i8, !dbg !15482
  store i8 %conv720, ptr %do_disconnect, align 1, !dbg !15483, !tbaa !4126
  %432 = load ptr, ptr %rkb.addr, align 8, !dbg !15484, !tbaa !3910
  %rkb_lock721 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %432, i32 0, i32 9, !dbg !15484
  %call722 = call i32 @mtx_unlock(ptr noundef %rkb_lock721), !dbg !15484
  %433 = load i8, ptr %do_disconnect, align 1, !dbg !15485, !tbaa !4126
  %tobool723 = icmp ne i8 %433, 0, !dbg !15485
  br i1 %tobool723, label %if.then724, label %if.end725, !dbg !15487

if.then724:                                       ; preds = %if.then714
  %434 = load ptr, ptr %rkb.addr, align 8, !dbg !15488, !tbaa !3910
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %434, i32 noundef 7, i32 noundef -195, ptr noundef @.str.296), !dbg !15489
  br label %if.end725, !dbg !15489

if.end725:                                        ; preds = %if.then724, %if.then714
  call void @llvm.lifetime.end.p0(i64 1, ptr %do_disconnect) #16, !dbg !15490
  br label %if.end726, !dbg !15491

if.end726:                                        ; preds = %if.end725, %if.else710
  br label %if.end727

if.end727:                                        ; preds = %if.end726, %do.end704
  %435 = load ptr, ptr %rkb.addr, align 8, !dbg !15492, !tbaa !3910
  %rkb_ts_reconnect = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %435, i32 0, i32 52, !dbg !15493
  store i64 0, ptr %rkb_ts_reconnect, align 8, !dbg !15494, !tbaa !12652
  store i8 1, ptr %wakeup, align 1, !dbg !15495, !tbaa !4126
  br label %sw.epilog, !dbg !15496

sw.bb728:                                         ; preds = %do.end
  br label %do.body729, !dbg !15497

do.body729:                                       ; preds = %sw.bb728
  %436 = load ptr, ptr %rkb.addr, align 8, !dbg !15498, !tbaa !3910
  %rkb_rk730 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %436, i32 0, i32 32, !dbg !15498
  %437 = load ptr, ptr %rkb_rk730, align 8, !dbg !15498, !tbaa !4139
  %rk_conf731 = getelementptr inbounds %struct.rd_kafka_s, ptr %437, i32 0, i32 18, !dbg !15498
  %debug732 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf731, i32 0, i32 13, !dbg !15498
  %438 = load i32, ptr %debug732, align 8, !dbg !15498, !tbaa !4140
  %and733 = and i32 %438, 2, !dbg !15498
  %conv734 = sext i32 %and733 to i64, !dbg !15498
  %expval735 = call i64 @llvm.expect.i64(i64 %conv734, i64 0), !dbg !15498
  %tobool736 = icmp ne i64 %expval735, 0, !dbg !15498
  br i1 %tobool736, label %if.then737, label %if.end752, !dbg !15499

if.then737:                                       ; preds = %do.body729
  br label %do.body738, !dbg !15500

do.body738:                                       ; preds = %if.then737
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname739) #16, !dbg !15501
  tail call void @llvm.dbg.declare(metadata ptr %_logname739, metadata !2849, metadata !DIExpression()), !dbg !15501
  %439 = load ptr, ptr %rkb.addr, align 8, !dbg !15501, !tbaa !3910
  %rkb_logname_lock740 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %439, i32 0, i32 49, !dbg !15501
  %call741 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock740), !dbg !15501
  %arraydecay742 = getelementptr inbounds [256 x i8], ptr %_logname739, i64 0, i64 0, !dbg !15501
  %440 = load ptr, ptr %rkb.addr, align 8, !dbg !15501, !tbaa !3910
  %rkb_logname743 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %440, i32 0, i32 48, !dbg !15501
  %441 = load ptr, ptr %rkb_logname743, align 8, !dbg !15501, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay742, ptr noundef %441, i64 noundef 256), !dbg !15501
  %442 = load ptr, ptr %rkb.addr, align 8, !dbg !15501, !tbaa !3910
  %rkb_logname_lock744 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %442, i32 0, i32 49, !dbg !15501
  %call745 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock744), !dbg !15501
  %443 = load ptr, ptr %rkb.addr, align 8, !dbg !15501, !tbaa !3910
  %rkb_rk746 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %443, i32 0, i32 32, !dbg !15501
  %444 = load ptr, ptr %rkb_rk746, align 8, !dbg !15501, !tbaa !4139
  %rk_conf747 = getelementptr inbounds %struct.rd_kafka_s, ptr %444, i32 0, i32 18, !dbg !15501
  %445 = load ptr, ptr %rkb.addr, align 8, !dbg !15501, !tbaa !3910
  %rkb_rk748 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %445, i32 0, i32 32, !dbg !15501
  %446 = load ptr, ptr %rkb_rk748, align 8, !dbg !15501, !tbaa !4139
  %arraydecay749 = getelementptr inbounds [256 x i8], ptr %_logname739, i64 0, i64 0, !dbg !15501
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf747, ptr noundef %446, ptr noundef %arraydecay749, i32 noundef 7, i32 noundef 2, ptr noundef @.str.11, ptr noundef @.str.297), !dbg !15501
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname739) #16, !dbg !15500
  br label %do.cond750, !dbg !15501

do.cond750:                                       ; preds = %do.body738
  br label %do.end751, !dbg !15501

do.end751:                                        ; preds = %do.cond750
  br label %if.end752, !dbg !15500

if.end752:                                        ; preds = %do.end751, %do.body729
  br label %do.cond753, !dbg !15499

do.cond753:                                       ; preds = %if.end752
  br label %do.end754, !dbg !15499

do.end754:                                        ; preds = %do.cond753
  %447 = load ptr, ptr %rkb.addr, align 8, !dbg !15502, !tbaa !3910
  %rkb_max_inflight = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %447, i32 0, i32 34, !dbg !15503
  store i32 1, ptr %rkb_max_inflight, align 8, !dbg !15504, !tbaa !7315
  %448 = load ptr, ptr %rkb.addr, align 8, !dbg !15505, !tbaa !3910
  %rkb_lock755 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %448, i32 0, i32 9, !dbg !15505
  %call756 = call i32 @mtx_lock(ptr noundef %rkb_lock755), !dbg !15505
  %449 = load ptr, ptr %rkb.addr, align 8, !dbg !15506, !tbaa !3910
  call void @rd_kafka_broker_set_state(ptr noundef %449, i32 noundef 11), !dbg !15507
  %450 = load ptr, ptr %rkb.addr, align 8, !dbg !15508, !tbaa !3910
  %rkb_lock757 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %450, i32 0, i32 9, !dbg !15508
  %call758 = call i32 @mtx_unlock(ptr noundef %rkb_lock757), !dbg !15508
  store i8 1, ptr %wakeup, align 1, !dbg !15509, !tbaa !4126
  br label %sw.epilog, !dbg !15510

sw.default:                                       ; preds = %do.end
  br label %do.body759, !dbg !15511

do.body759:                                       ; preds = %sw.default
  %451 = load ptr, ptr %rkb.addr, align 8, !dbg !15512, !tbaa !3910
  %rkb_rk760 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %451, i32 0, i32 32, !dbg !15512
  %452 = load ptr, ptr %rkb_rk760, align 8, !dbg !15512, !tbaa !4139
  call void @rd_kafka_crash(ptr noundef @.str.20, i32 noundef 3479, ptr noundef @__FUNCTION__.rd_kafka_broker_op_serve, ptr noundef %452, ptr noundef @.str.298) #17, !dbg !15512
  unreachable, !dbg !15512

do.cond761:                                       ; No predecessors!
  br label %do.end762, !dbg !15515

do.end762:                                        ; preds = %do.cond761
  br label %sw.epilog, !dbg !15516

sw.epilog:                                        ; preds = %do.end762, %do.end754, %if.end727, %sw.bb673, %sw.bb672, %do.end671, %do.end633, %do.end429, %do.end374, %do.end279, %do.end220, %sw.bb167, %if.end166, %if.end157
  %453 = load ptr, ptr %rko.addr, align 8, !dbg !15517, !tbaa !3910
  %tobool763 = icmp ne ptr %453, null, !dbg !15517
  br i1 %tobool763, label %if.then764, label %if.end766, !dbg !15519

if.then764:                                       ; preds = %sw.epilog
  %454 = load ptr, ptr %rko.addr, align 8, !dbg !15520, !tbaa !3910
  %call765 = call i32 @rd_kafka_op_reply(ptr noundef %454, i32 noundef 0), !dbg !15521
  br label %if.end766, !dbg !15521

if.end766:                                        ; preds = %if.then764, %sw.epilog
  %455 = load i8, ptr %wakeup, align 1, !dbg !15522, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 1, ptr %wakeup) #16, !dbg !15523
  call void @llvm.lifetime.end.p0(i64 4, ptr %topic_err) #16, !dbg !15523
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp) #16, !dbg !15523
  ret i8 %455, !dbg !15524
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_map_partitions(ptr noundef %rkb) #0 !dbg !15525 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rk = alloca ptr, align 8
  %rkt = alloca ptr, align 8
  %cnt = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  %rktp = alloca ptr, align 8
  %_logname = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !15527, metadata !DIExpression()), !dbg !15544
  call void @llvm.lifetime.start.p0(i64 8, ptr %rk) #16, !dbg !15545
  tail call void @llvm.dbg.declare(metadata ptr %rk, metadata !15528, metadata !DIExpression()), !dbg !15546
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !15547, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 32, !dbg !15548
  %1 = load ptr, ptr %rkb_rk, align 8, !dbg !15548, !tbaa !4139
  store ptr %1, ptr %rk, align 8, !dbg !15546, !tbaa !3910
  call void @llvm.lifetime.start.p0(i64 8, ptr %rkt) #16, !dbg !15549
  tail call void @llvm.dbg.declare(metadata ptr %rkt, metadata !15529, metadata !DIExpression()), !dbg !15550
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #16, !dbg !15551
  tail call void @llvm.dbg.declare(metadata ptr %cnt, metadata !15530, metadata !DIExpression()), !dbg !15552
  store i32 0, ptr %cnt, align 4, !dbg !15552, !tbaa !3959
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !15553, !tbaa !3910
  %rkb_nodeid = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 1, !dbg !15555
  %3 = load i32, ptr %rkb_nodeid, align 8, !dbg !15555, !tbaa !4311
  %cmp = icmp eq i32 %3, -1, !dbg !15556
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15557

lor.lhs.false:                                    ; preds = %entry
  %4 = load ptr, ptr %rkb.addr, align 8, !dbg !15558, !tbaa !3910
  %rkb_source = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %4, i32 0, i32 27, !dbg !15558
  %5 = load i32, ptr %rkb_source, align 8, !dbg !15558, !tbaa !4174
  %cmp1 = icmp eq i32 %5, 3, !dbg !15558
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15559

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15560

if.end:                                           ; preds = %lor.lhs.false
  %6 = load ptr, ptr %rk, align 8, !dbg !15561, !tbaa !3910
  %rk_lock = getelementptr inbounds %struct.rd_kafka_s, ptr %6, i32 0, i32 24, !dbg !15561
  %call = call i32 @rwlock_rdlock(ptr noundef %rk_lock), !dbg !15561
  %7 = load ptr, ptr %rk, align 8, !dbg !15562, !tbaa !3910
  %rk_topics = getelementptr inbounds %struct.rd_kafka_s, ptr %7, i32 0, i32 15, !dbg !15562
  %tqh_first = getelementptr inbounds %struct.anon.13, ptr %rk_topics, i32 0, i32 0, !dbg !15562
  %8 = load ptr, ptr %tqh_first, align 8, !dbg !15562, !tbaa !15563
  store ptr %8, ptr %rkt, align 8, !dbg !15562, !tbaa !3910
  br label %for.cond, !dbg !15562

for.cond:                                         ; preds = %for.inc21, %if.end
  %9 = load ptr, ptr %rkt, align 8, !dbg !15564, !tbaa !3910
  %cmp2 = icmp ne ptr %9, null, !dbg !15564
  br i1 %cmp2, label %for.body, label %for.end22, !dbg !15562

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #16, !dbg !15565
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !15531, metadata !DIExpression()), !dbg !15566
  %10 = load ptr, ptr %rkt, align 8, !dbg !15567, !tbaa !3910
  %rkt_lock = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %10, i32 0, i32 3, !dbg !15567
  %call3 = call i32 @rwlock_wrlock(ptr noundef %rkt_lock), !dbg !15567
  store i32 0, ptr %i, align 4, !dbg !15568, !tbaa !3959
  br label %for.cond4, !dbg !15569

for.cond4:                                        ; preds = %for.inc, %for.body
  %11 = load i32, ptr %i, align 4, !dbg !15570, !tbaa !3959
  %12 = load ptr, ptr %rkt, align 8, !dbg !15571, !tbaa !3910
  %rkt_partition_cnt = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %12, i32 0, i32 7, !dbg !15572
  %13 = load i32, ptr %rkt_partition_cnt, align 8, !dbg !15572, !tbaa !15573
  %cmp5 = icmp slt i32 %11, %13, !dbg !15574
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !15575

for.body6:                                        ; preds = %for.cond4
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp) #16, !dbg !15576
  tail call void @llvm.dbg.declare(metadata ptr %rktp, metadata !15535, metadata !DIExpression()), !dbg !15577
  %14 = load ptr, ptr %rkt, align 8, !dbg !15578, !tbaa !3910
  %rkt_p = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %14, i32 0, i32 6, !dbg !15579
  %15 = load ptr, ptr %rkt_p, align 8, !dbg !15579, !tbaa !15580
  %16 = load i32, ptr %i, align 4, !dbg !15581, !tbaa !3959
  %idxprom = sext i32 %16 to i64, !dbg !15578
  %arrayidx = getelementptr inbounds ptr, ptr %15, i64 %idxprom, !dbg !15578
  %17 = load ptr, ptr %arrayidx, align 8, !dbg !15578, !tbaa !3910
  store ptr %17, ptr %rktp, align 8, !dbg !15577, !tbaa !3910
  %18 = load ptr, ptr %rktp, align 8, !dbg !15582, !tbaa !3910
  %rktp_lock = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %18, i32 0, i32 14, !dbg !15582
  %call7 = call i32 @mtx_lock(ptr noundef %rktp_lock), !dbg !15582
  %19 = load ptr, ptr %rktp, align 8, !dbg !15583, !tbaa !3910
  %rktp_leader_id = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %19, i32 0, i32 8, !dbg !15585
  %20 = load i32, ptr %rktp_leader_id, align 4, !dbg !15585, !tbaa !4663
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !15586, !tbaa !3910
  %rkb_nodeid8 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 1, !dbg !15587
  %22 = load i32, ptr %rkb_nodeid8, align 8, !dbg !15587, !tbaa !4311
  %cmp9 = icmp eq i32 %20, %22, !dbg !15588
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !15589

land.lhs.true:                                    ; preds = %for.body6
  %23 = load ptr, ptr %rktp, align 8, !dbg !15590, !tbaa !3910
  %rktp_broker = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %23, i32 0, i32 11, !dbg !15591
  %24 = load ptr, ptr %rktp_broker, align 8, !dbg !15591, !tbaa !4644
  %tobool = icmp ne ptr %24, null, !dbg !15590
  br i1 %tobool, label %land.lhs.true10, label %if.then12, !dbg !15592

land.lhs.true10:                                  ; preds = %land.lhs.true
  %25 = load ptr, ptr %rktp, align 8, !dbg !15593, !tbaa !3910
  %rktp_next_broker = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %25, i32 0, i32 12, !dbg !15594
  %26 = load ptr, ptr %rktp_next_broker, align 8, !dbg !15594, !tbaa !15200
  %tobool11 = icmp ne ptr %26, null, !dbg !15593
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !15595

if.then12:                                        ; preds = %land.lhs.true10, %land.lhs.true
  %27 = load ptr, ptr %rktp, align 8, !dbg !15596, !tbaa !3910
  %28 = load ptr, ptr %rktp, align 8, !dbg !15598, !tbaa !3910
  %rktp_leader_id13 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %28, i32 0, i32 8, !dbg !15599
  %29 = load i32, ptr %rktp_leader_id13, align 4, !dbg !15599, !tbaa !4663
  %30 = load ptr, ptr %rkb.addr, align 8, !dbg !15600, !tbaa !3910
  %call14 = call i32 @rd_kafka_toppar_broker_update(ptr noundef %27, i32 noundef %29, ptr noundef %30, ptr noundef @.str.299), !dbg !15601
  %31 = load i32, ptr %cnt, align 4, !dbg !15602, !tbaa !3959
  %inc = add nsw i32 %31, 1, !dbg !15602
  store i32 %inc, ptr %cnt, align 4, !dbg !15602, !tbaa !3959
  br label %if.end15, !dbg !15603

if.end15:                                         ; preds = %if.then12, %land.lhs.true10, %for.body6
  %32 = load ptr, ptr %rktp, align 8, !dbg !15604, !tbaa !3910
  %rktp_lock16 = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %32, i32 0, i32 14, !dbg !15604
  %call17 = call i32 @mtx_unlock(ptr noundef %rktp_lock16), !dbg !15604
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp) #16, !dbg !15605
  br label %for.inc, !dbg !15606

for.inc:                                          ; preds = %if.end15
  %33 = load i32, ptr %i, align 4, !dbg !15607, !tbaa !3959
  %inc18 = add nsw i32 %33, 1, !dbg !15607
  store i32 %inc18, ptr %i, align 4, !dbg !15607, !tbaa !3959
  br label %for.cond4, !dbg !15608, !llvm.loop !15609

for.end:                                          ; preds = %for.cond4
  %34 = load ptr, ptr %rkt, align 8, !dbg !15611, !tbaa !3910
  %rkt_lock19 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %34, i32 0, i32 3, !dbg !15611
  %call20 = call i32 @rwlock_wrunlock(ptr noundef %rkt_lock19), !dbg !15611
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #16, !dbg !15612
  br label %for.inc21, !dbg !15613

for.inc21:                                        ; preds = %for.end
  %35 = load ptr, ptr %rkt, align 8, !dbg !15564, !tbaa !3910
  %rkt_link = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %35, i32 0, i32 1, !dbg !15564
  %tqe_next = getelementptr inbounds %struct.anon.84, ptr %rkt_link, i32 0, i32 0, !dbg !15564
  %36 = load ptr, ptr %tqe_next, align 8, !dbg !15564, !tbaa !15614
  store ptr %36, ptr %rkt, align 8, !dbg !15564, !tbaa !3910
  br label %for.cond, !dbg !15564, !llvm.loop !15615

for.end22:                                        ; preds = %for.cond
  %37 = load ptr, ptr %rk, align 8, !dbg !15617, !tbaa !3910
  %rk_lock23 = getelementptr inbounds %struct.rd_kafka_s, ptr %37, i32 0, i32 24, !dbg !15617
  %call24 = call i32 @rwlock_rdunlock(ptr noundef %rk_lock23), !dbg !15617
  br label %do.body, !dbg !15618

do.body:                                          ; preds = %for.end22
  %38 = load ptr, ptr %rkb.addr, align 8, !dbg !15619, !tbaa !3910
  %rkb_rk25 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %38, i32 0, i32 32, !dbg !15619
  %39 = load ptr, ptr %rkb_rk25, align 8, !dbg !15619, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %39, i32 0, i32 18, !dbg !15619
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !15619
  %40 = load i32, ptr %debug, align 8, !dbg !15619, !tbaa !4140
  %and = and i32 %40, 6, !dbg !15619
  %conv = sext i32 %and to i64, !dbg !15619
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15619
  %tobool26 = icmp ne i64 %expval, 0, !dbg !15619
  br i1 %tobool26, label %if.then27, label %if.end36, !dbg !15620

if.then27:                                        ; preds = %do.body
  br label %do.body28, !dbg !15621

do.body28:                                        ; preds = %if.then27
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !15622
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !15539, metadata !DIExpression()), !dbg !15622
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !15622, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 49, !dbg !15622
  %call29 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !15622
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !15622
  %42 = load ptr, ptr %rkb.addr, align 8, !dbg !15622, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %42, i32 0, i32 48, !dbg !15622
  %43 = load ptr, ptr %rkb_logname, align 8, !dbg !15622, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %43, i64 noundef 256), !dbg !15622
  %44 = load ptr, ptr %rkb.addr, align 8, !dbg !15622, !tbaa !3910
  %rkb_logname_lock30 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %44, i32 0, i32 49, !dbg !15622
  %call31 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock30), !dbg !15622
  %45 = load ptr, ptr %rkb.addr, align 8, !dbg !15622, !tbaa !3910
  %rkb_rk32 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %45, i32 0, i32 32, !dbg !15622
  %46 = load ptr, ptr %rkb_rk32, align 8, !dbg !15622, !tbaa !4139
  %rk_conf33 = getelementptr inbounds %struct.rd_kafka_s, ptr %46, i32 0, i32 18, !dbg !15622
  %47 = load ptr, ptr %rkb.addr, align 8, !dbg !15622, !tbaa !3910
  %rkb_rk34 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %47, i32 0, i32 32, !dbg !15622
  %48 = load ptr, ptr %rkb_rk34, align 8, !dbg !15622, !tbaa !4139
  %arraydecay35 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !15622
  %49 = load i32, ptr %cnt, align 4, !dbg !15622, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf33, ptr noundef %48, ptr noundef %arraydecay35, i32 noundef 7, i32 noundef 6, ptr noundef @.str.300, ptr noundef @.str.301, i32 noundef %49), !dbg !15622
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !15621
  br label %do.cond, !dbg !15622

do.cond:                                          ; preds = %do.body28
  br label %do.end, !dbg !15622

do.end:                                           ; preds = %do.cond
  br label %if.end36, !dbg !15621

if.end36:                                         ; preds = %do.end, %do.body
  br label %do.cond37, !dbg !15620

do.cond37:                                        ; preds = %if.end36
  br label %do.end38, !dbg !15620

do.end38:                                         ; preds = %do.cond37
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15623
  br label %cleanup, !dbg !15623

cleanup:                                          ; preds = %do.end38, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #16, !dbg !15623
  call void @llvm.lifetime.end.p0(i64 8, ptr %rkt) #16, !dbg !15623
  call void @llvm.lifetime.end.p0(i64 8, ptr %rk) #16, !dbg !15623
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !15623

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @rd_kafka_toppar_keep0(ptr noundef %func, i32 noundef %line, ptr noundef %rktp) #4 !dbg !15624 {
entry:
  %func.addr = alloca ptr, align 8
  %line.addr = alloca i32, align 4
  %rktp.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !15628, metadata !DIExpression()), !dbg !15631
  store i32 %line, ptr %line.addr, align 4, !tbaa !3959
  tail call void @llvm.dbg.declare(metadata ptr %line.addr, metadata !15629, metadata !DIExpression()), !dbg !15632
  store ptr %rktp, ptr %rktp.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rktp.addr, metadata !15630, metadata !DIExpression()), !dbg !15633
  %0 = load ptr, ptr %rktp.addr, align 8, !dbg !15634, !tbaa !3910
  %rktp_refcnt = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %0, i32 0, i32 13, !dbg !15634
  %call = call i32 @rd_atomic32_add(ptr noundef %rktp_refcnt, i32 noundef 1), !dbg !15634
  %1 = load ptr, ptr %rktp.addr, align 8, !dbg !15635, !tbaa !3910
  ret ptr %1, !dbg !15636
}

declare !dbg !15637 void @rd_kafka_toppar_destroy_final(ptr noundef) #3

declare !dbg !15640 void @rd_kafka_idemp_drain_toppar(ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rd_kafka_topic_get_error(ptr noundef %rkt) #4 !dbg !15643 {
entry:
  %rkt.addr = alloca ptr, align 8
  %err = alloca i32, align 4
  store ptr %rkt, ptr %rkt.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkt.addr, metadata !15647, metadata !DIExpression()), !dbg !15649
  call void @llvm.lifetime.start.p0(i64 4, ptr %err) #16, !dbg !15650
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !15648, metadata !DIExpression()), !dbg !15651
  store i32 0, ptr %err, align 4, !dbg !15651, !tbaa !4126
  %0 = load ptr, ptr %rkt.addr, align 8, !dbg !15652, !tbaa !3910
  %rkt_lock = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %0, i32 0, i32 3, !dbg !15652
  %call = call i32 @rwlock_rdlock(ptr noundef %rkt_lock), !dbg !15652
  %1 = load ptr, ptr %rkt.addr, align 8, !dbg !15653, !tbaa !3910
  %rkt_state = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %1, i32 0, i32 15, !dbg !15655
  %2 = load i32, ptr %rkt_state, align 4, !dbg !15655, !tbaa !15656
  %cmp = icmp eq i32 %2, 3, !dbg !15657
  br i1 %cmp, label %if.then, label %if.end, !dbg !15658

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %rkt.addr, align 8, !dbg !15659, !tbaa !3910
  %rkt_err = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %3, i32 0, i32 17, !dbg !15660
  %4 = load i32, ptr %rkt_err, align 4, !dbg !15660, !tbaa !15661
  store i32 %4, ptr %err, align 4, !dbg !15662, !tbaa !4126
  br label %if.end, !dbg !15663

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %rkt.addr, align 8, !dbg !15664, !tbaa !3910
  %rkt_lock1 = getelementptr inbounds %struct.rd_kafka_topic_s, ptr %5, i32 0, i32 3, !dbg !15664
  %call2 = call i32 @rwlock_rdunlock(ptr noundef %rkt_lock1), !dbg !15664
  %6 = load i32, ptr %err, align 4, !dbg !15665, !tbaa !4126
  call void @llvm.lifetime.end.p0(i64 4, ptr %err) #16, !dbg !15666
  ret i32 %6, !dbg !15667
}

declare !dbg !15668 i64 @rd_kafka_toppar_fetch_decide(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_prepare_destroy(ptr noundef %rkb) #0 !dbg !15671 {
entry:
  %rkb.addr = alloca ptr, align 8
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !15673, metadata !DIExpression()), !dbg !15674
  %0 = load ptr, ptr %rkb.addr, align 8, !dbg !15675, !tbaa !3910
  %rkb_coord_monitor = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %0, i32 0, i32 57, !dbg !15676
  call void @rd_kafka_broker_monitor_del(ptr noundef %rkb_coord_monitor), !dbg !15677
  ret void, !dbg !15678
}

; Function Attrs: nounwind uwtable
define internal void @rd_kafka_broker_handle_purge_queues(ptr noundef %rkb, ptr noundef %rko) #0 !dbg !15679 {
entry:
  %rkb.addr = alloca ptr, align 8
  %rko.addr = alloca ptr, align 8
  %purge_flags = alloca i32, align 4
  %inflight_cnt = alloca i32, align 4
  %retry_cnt = alloca i32, align 4
  %outq_cnt = alloca i32, align 4
  %partial_cnt = alloca i32, align 4
  %_logname = alloca [256 x i8], align 16
  %_logname35 = alloca [256 x i8], align 16
  %rktp = alloca ptr, align 8
  %msg_cnt = alloca i32, align 4
  %part_cnt = alloca i32, align 4
  %r = alloca i32, align 4
  %_logname70 = alloca [256 x i8], align 16
  store ptr %rkb, ptr %rkb.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkb.addr, metadata !15683, metadata !DIExpression()), !dbg !15714
  store ptr %rko, ptr %rko.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rko.addr, metadata !15684, metadata !DIExpression()), !dbg !15715
  call void @llvm.lifetime.start.p0(i64 4, ptr %purge_flags) #16, !dbg !15716
  tail call void @llvm.dbg.declare(metadata ptr %purge_flags, metadata !15685, metadata !DIExpression()), !dbg !15717
  %0 = load ptr, ptr %rko.addr, align 8, !dbg !15718, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %0, i32 0, i32 15, !dbg !15719
  %flags = getelementptr inbounds %struct.anon.79, ptr %rko_u, i32 0, i32 0, !dbg !15720
  %1 = load i32, ptr %flags, align 8, !dbg !15720, !tbaa !4126
  store i32 %1, ptr %purge_flags, align 4, !dbg !15717, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %inflight_cnt) #16, !dbg !15721
  tail call void @llvm.dbg.declare(metadata ptr %inflight_cnt, metadata !15686, metadata !DIExpression()), !dbg !15722
  store i32 0, ptr %inflight_cnt, align 4, !dbg !15722, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %retry_cnt) #16, !dbg !15721
  tail call void @llvm.dbg.declare(metadata ptr %retry_cnt, metadata !15687, metadata !DIExpression()), !dbg !15723
  store i32 0, ptr %retry_cnt, align 4, !dbg !15723, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %outq_cnt) #16, !dbg !15721
  tail call void @llvm.dbg.declare(metadata ptr %outq_cnt, metadata !15688, metadata !DIExpression()), !dbg !15724
  store i32 0, ptr %outq_cnt, align 4, !dbg !15724, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %partial_cnt) #16, !dbg !15721
  tail call void @llvm.dbg.declare(metadata ptr %partial_cnt, metadata !15689, metadata !DIExpression()), !dbg !15725
  store i32 0, ptr %partial_cnt, align 4, !dbg !15725, !tbaa !3959
  br label %do.body, !dbg !15726

do.body:                                          ; preds = %entry
  %2 = load ptr, ptr %rkb.addr, align 8, !dbg !15727, !tbaa !3910
  %rkb_rk = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %2, i32 0, i32 32, !dbg !15727
  %3 = load ptr, ptr %rkb_rk, align 8, !dbg !15727, !tbaa !4139
  %rk_conf = getelementptr inbounds %struct.rd_kafka_s, ptr %3, i32 0, i32 18, !dbg !15727
  %debug = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf, i32 0, i32 13, !dbg !15727
  %4 = load i32, ptr %debug, align 8, !dbg !15727, !tbaa !4140
  %and = and i32 %4, 36, !dbg !15727
  %conv = sext i32 %and to i64, !dbg !15727
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15727
  %tobool = icmp ne i64 %expval, 0, !dbg !15727
  br i1 %tobool, label %if.then, label %if.end, !dbg !15728

if.then:                                          ; preds = %do.body
  br label %do.body1, !dbg !15729

do.body1:                                         ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname) #16, !dbg !15730
  tail call void @llvm.dbg.declare(metadata ptr %_logname, metadata !15690, metadata !DIExpression()), !dbg !15730
  %5 = load ptr, ptr %rkb.addr, align 8, !dbg !15730, !tbaa !3910
  %rkb_logname_lock = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %5, i32 0, i32 49, !dbg !15730
  %call = call i32 @mtx_lock(ptr noundef %rkb_logname_lock), !dbg !15730
  %arraydecay = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !15730
  %6 = load ptr, ptr %rkb.addr, align 8, !dbg !15730, !tbaa !3910
  %rkb_logname = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %6, i32 0, i32 48, !dbg !15730
  %7 = load ptr, ptr %rkb_logname, align 8, !dbg !15730, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay, ptr noundef %7, i64 noundef 256), !dbg !15730
  %8 = load ptr, ptr %rkb.addr, align 8, !dbg !15730, !tbaa !3910
  %rkb_logname_lock2 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %8, i32 0, i32 49, !dbg !15730
  %call3 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock2), !dbg !15730
  %9 = load ptr, ptr %rkb.addr, align 8, !dbg !15730, !tbaa !3910
  %rkb_rk4 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %9, i32 0, i32 32, !dbg !15730
  %10 = load ptr, ptr %rkb_rk4, align 8, !dbg !15730, !tbaa !4139
  %rk_conf5 = getelementptr inbounds %struct.rd_kafka_s, ptr %10, i32 0, i32 18, !dbg !15730
  %11 = load ptr, ptr %rkb.addr, align 8, !dbg !15730, !tbaa !3910
  %rkb_rk6 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %11, i32 0, i32 32, !dbg !15730
  %12 = load ptr, ptr %rkb_rk6, align 8, !dbg !15730, !tbaa !4139
  %arraydecay7 = getelementptr inbounds [256 x i8], ptr %_logname, i64 0, i64 0, !dbg !15730
  %13 = load i32, ptr %purge_flags, align 4, !dbg !15730, !tbaa !3959
  %call8 = call ptr @rd_kafka_purge_flags2str(i32 noundef %13), !dbg !15730
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf5, ptr noundef %12, ptr noundef %arraydecay7, i32 noundef 7, i32 noundef 36, ptr noundef @.str.302, ptr noundef @.str.303, ptr noundef %call8), !dbg !15730
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname) #16, !dbg !15729
  br label %do.cond, !dbg !15730

do.cond:                                          ; preds = %do.body1
  br label %do.end, !dbg !15730

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !15729

if.end:                                           ; preds = %do.end, %do.body
  br label %do.cond9, !dbg !15728

do.cond9:                                         ; preds = %if.end
  br label %do.end10, !dbg !15728

do.end10:                                         ; preds = %do.cond9
  %14 = load i32, ptr %purge_flags, align 4, !dbg !15731, !tbaa !3959
  %and11 = and i32 %14, 2, !dbg !15733
  %tobool12 = icmp ne i32 %and11, 0, !dbg !15733
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !15734

if.then13:                                        ; preds = %do.end10
  %15 = load ptr, ptr %rkb.addr, align 8, !dbg !15735, !tbaa !3910
  %16 = load ptr, ptr %rkb.addr, align 8, !dbg !15736, !tbaa !3910
  %rkb_waitresps = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %16, i32 0, i32 36, !dbg !15737
  %call14 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %15, i32 noundef 1, ptr noundef %rkb_waitresps, ptr noundef null, i16 noundef signext 0, i32 noundef -151, i64 noundef 0, ptr noundef null, i32 noundef 0), !dbg !15738
  store i32 %call14, ptr %inflight_cnt, align 4, !dbg !15739, !tbaa !3959
  br label %if.end15, !dbg !15740

if.end15:                                         ; preds = %if.then13, %do.end10
  %17 = load i32, ptr %purge_flags, align 4, !dbg !15741, !tbaa !3959
  %and16 = and i32 %17, 1, !dbg !15743
  %tobool17 = icmp ne i32 %and16, 0, !dbg !15743
  br i1 %tobool17, label %if.then18, label %if.end24, !dbg !15744

if.then18:                                        ; preds = %if.end15
  %18 = load ptr, ptr %rkb.addr, align 8, !dbg !15745, !tbaa !3910
  %19 = load ptr, ptr %rkb.addr, align 8, !dbg !15747, !tbaa !3910
  %rkb_retrybufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %19, i32 0, i32 37, !dbg !15748
  %call19 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %18, i32 noundef 0, ptr noundef %rkb_retrybufs, ptr noundef null, i16 noundef signext 0, i32 noundef -152, i64 noundef 0, ptr noundef null, i32 noundef 0), !dbg !15749
  store i32 %call19, ptr %retry_cnt, align 4, !dbg !15750, !tbaa !3959
  %20 = load ptr, ptr %rkb.addr, align 8, !dbg !15751, !tbaa !3910
  %21 = load ptr, ptr %rkb.addr, align 8, !dbg !15752, !tbaa !3910
  %rkb_outbufs = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %21, i32 0, i32 35, !dbg !15753
  %call20 = call i32 @rd_kafka_broker_bufq_timeout_scan(ptr noundef %20, i32 noundef 0, ptr noundef %rkb_outbufs, ptr noundef %partial_cnt, i16 noundef signext 0, i32 noundef -152, i64 noundef 0, ptr noundef null, i32 noundef 0), !dbg !15754
  store i32 %call20, ptr %outq_cnt, align 4, !dbg !15755, !tbaa !3959
  %22 = load i32, ptr %partial_cnt, align 4, !dbg !15756, !tbaa !3959
  %tobool21 = icmp ne i32 %22, 0, !dbg !15756
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !15758

if.then22:                                        ; preds = %if.then18
  %23 = load ptr, ptr %rkb.addr, align 8, !dbg !15759, !tbaa !3910
  %24 = load i32, ptr %partial_cnt, align 4, !dbg !15760, !tbaa !3959
  call void (ptr, i32, i32, ptr, ...) @rd_kafka_broker_fail(ptr noundef %23, i32 noundef 7, i32 noundef -152, ptr noundef @.str.304, i32 noundef %24), !dbg !15761
  br label %if.end23, !dbg !15761

if.end23:                                         ; preds = %if.then22, %if.then18
  br label %if.end24, !dbg !15762

if.end24:                                         ; preds = %if.end23, %if.end15
  br label %do.body25, !dbg !15763

do.body25:                                        ; preds = %if.end24
  %25 = load ptr, ptr %rkb.addr, align 8, !dbg !15764, !tbaa !3910
  %rkb_rk26 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %25, i32 0, i32 32, !dbg !15764
  %26 = load ptr, ptr %rkb_rk26, align 8, !dbg !15764, !tbaa !4139
  %rk_conf27 = getelementptr inbounds %struct.rd_kafka_s, ptr %26, i32 0, i32 18, !dbg !15764
  %debug28 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf27, i32 0, i32 13, !dbg !15764
  %27 = load i32, ptr %debug28, align 8, !dbg !15764, !tbaa !4140
  %and29 = and i32 %27, 36, !dbg !15764
  %conv30 = sext i32 %and29 to i64, !dbg !15764
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !15764
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !15764
  br i1 %tobool32, label %if.then33, label %if.end48, !dbg !15765

if.then33:                                        ; preds = %do.body25
  br label %do.body34, !dbg !15766

do.body34:                                        ; preds = %if.then33
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname35) #16, !dbg !15767
  tail call void @llvm.dbg.declare(metadata ptr %_logname35, metadata !15695, metadata !DIExpression()), !dbg !15767
  %28 = load ptr, ptr %rkb.addr, align 8, !dbg !15767, !tbaa !3910
  %rkb_logname_lock36 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %28, i32 0, i32 49, !dbg !15767
  %call37 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock36), !dbg !15767
  %arraydecay38 = getelementptr inbounds [256 x i8], ptr %_logname35, i64 0, i64 0, !dbg !15767
  %29 = load ptr, ptr %rkb.addr, align 8, !dbg !15767, !tbaa !3910
  %rkb_logname39 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %29, i32 0, i32 48, !dbg !15767
  %30 = load ptr, ptr %rkb_logname39, align 8, !dbg !15767, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay38, ptr noundef %30, i64 noundef 256), !dbg !15767
  %31 = load ptr, ptr %rkb.addr, align 8, !dbg !15767, !tbaa !3910
  %rkb_logname_lock40 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %31, i32 0, i32 49, !dbg !15767
  %call41 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock40), !dbg !15767
  %32 = load ptr, ptr %rkb.addr, align 8, !dbg !15767, !tbaa !3910
  %rkb_rk42 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %32, i32 0, i32 32, !dbg !15767
  %33 = load ptr, ptr %rkb_rk42, align 8, !dbg !15767, !tbaa !4139
  %rk_conf43 = getelementptr inbounds %struct.rd_kafka_s, ptr %33, i32 0, i32 18, !dbg !15767
  %34 = load ptr, ptr %rkb.addr, align 8, !dbg !15767, !tbaa !3910
  %rkb_rk44 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %34, i32 0, i32 32, !dbg !15767
  %35 = load ptr, ptr %rkb_rk44, align 8, !dbg !15767, !tbaa !4139
  %arraydecay45 = getelementptr inbounds [256 x i8], ptr %_logname35, i64 0, i64 0, !dbg !15767
  %36 = load i32, ptr %inflight_cnt, align 4, !dbg !15767, !tbaa !3959
  %37 = load i32, ptr %retry_cnt, align 4, !dbg !15767, !tbaa !3959
  %38 = load i32, ptr %outq_cnt, align 4, !dbg !15767, !tbaa !3959
  %39 = load i32, ptr %partial_cnt, align 4, !dbg !15767, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf43, ptr noundef %35, ptr noundef %arraydecay45, i32 noundef 7, i32 noundef 36, ptr noundef @.str.305, ptr noundef @.str.306, i32 noundef %36, i32 noundef %37, i32 noundef %38, i32 noundef %39), !dbg !15767
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname35) #16, !dbg !15766
  br label %do.cond46, !dbg !15767

do.cond46:                                        ; preds = %do.body34
  br label %do.end47, !dbg !15767

do.end47:                                         ; preds = %do.cond46
  br label %if.end48, !dbg !15766

if.end48:                                         ; preds = %do.end47, %do.body25
  br label %do.cond49, !dbg !15765

do.cond49:                                        ; preds = %if.end48
  br label %do.end50, !dbg !15765

do.end50:                                         ; preds = %do.cond49
  %40 = load i32, ptr %purge_flags, align 4, !dbg !15768, !tbaa !3959
  %and51 = and i32 %40, 1, !dbg !15769
  %tobool52 = icmp ne i32 %and51, 0, !dbg !15769
  br i1 %tobool52, label %if.then53, label %if.end86, !dbg !15770

if.then53:                                        ; preds = %do.end50
  call void @llvm.lifetime.start.p0(i64 8, ptr %rktp) #16, !dbg !15771
  tail call void @llvm.dbg.declare(metadata ptr %rktp, metadata !15700, metadata !DIExpression()), !dbg !15772
  call void @llvm.lifetime.start.p0(i64 4, ptr %msg_cnt) #16, !dbg !15773
  tail call void @llvm.dbg.declare(metadata ptr %msg_cnt, metadata !15703, metadata !DIExpression()), !dbg !15774
  store i32 0, ptr %msg_cnt, align 4, !dbg !15774, !tbaa !3959
  call void @llvm.lifetime.start.p0(i64 4, ptr %part_cnt) #16, !dbg !15775
  tail call void @llvm.dbg.declare(metadata ptr %part_cnt, metadata !15704, metadata !DIExpression()), !dbg !15776
  store i32 0, ptr %part_cnt, align 4, !dbg !15776, !tbaa !3959
  %41 = load ptr, ptr %rkb.addr, align 8, !dbg !15777, !tbaa !3910
  %rkb_toppars = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %41, i32 0, i32 11, !dbg !15777
  %tqh_first = getelementptr inbounds %struct.anon.0, ptr %rkb_toppars, i32 0, i32 0, !dbg !15777
  %42 = load ptr, ptr %tqh_first, align 8, !dbg !15777, !tbaa !4637
  store ptr %42, ptr %rktp, align 8, !dbg !15777, !tbaa !3910
  br label %for.cond, !dbg !15777

for.cond:                                         ; preds = %for.inc, %if.then53
  %43 = load ptr, ptr %rktp, align 8, !dbg !15778, !tbaa !3910
  %cmp = icmp ne ptr %43, null, !dbg !15778
  br i1 %cmp, label %for.body, label %for.end, !dbg !15777

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #16, !dbg !15779
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !15705, metadata !DIExpression()), !dbg !15780
  %44 = load ptr, ptr %rktp, align 8, !dbg !15781, !tbaa !3910
  %45 = load i32, ptr %purge_flags, align 4, !dbg !15782, !tbaa !3959
  %call55 = call i32 @rd_kafka_toppar_purge_queues(ptr noundef %44, i32 noundef %45, i8 noundef zeroext 1), !dbg !15783
  store i32 %call55, ptr %r, align 4, !dbg !15784, !tbaa !3959
  %46 = load i32, ptr %r, align 4, !dbg !15785, !tbaa !3959
  %cmp56 = icmp sgt i32 %46, 0, !dbg !15787
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !15788

if.then58:                                        ; preds = %for.body
  %47 = load i32, ptr %r, align 4, !dbg !15789, !tbaa !3959
  %48 = load i32, ptr %msg_cnt, align 4, !dbg !15791, !tbaa !3959
  %add = add nsw i32 %48, %47, !dbg !15791
  store i32 %add, ptr %msg_cnt, align 4, !dbg !15791, !tbaa !3959
  %49 = load i32, ptr %part_cnt, align 4, !dbg !15792, !tbaa !3959
  %inc = add nsw i32 %49, 1, !dbg !15792
  store i32 %inc, ptr %part_cnt, align 4, !dbg !15792, !tbaa !3959
  br label %if.end59, !dbg !15793

if.end59:                                         ; preds = %if.then58, %for.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #16, !dbg !15794
  br label %for.inc, !dbg !15795

for.inc:                                          ; preds = %if.end59
  %50 = load ptr, ptr %rktp, align 8, !dbg !15778, !tbaa !3910
  %rktp_rkblink = getelementptr inbounds %struct.rd_kafka_toppar_s, ptr %50, i32 0, i32 1, !dbg !15778
  %tqe_next = getelementptr inbounds %struct.anon.41, ptr %rktp_rkblink, i32 0, i32 0, !dbg !15778
  %51 = load ptr, ptr %tqe_next, align 8, !dbg !15778, !tbaa !4674
  store ptr %51, ptr %rktp, align 8, !dbg !15778, !tbaa !3910
  br label %for.cond, !dbg !15778, !llvm.loop !15796

for.end:                                          ; preds = %for.cond
  br label %do.body60, !dbg !15798

do.body60:                                        ; preds = %for.end
  %52 = load ptr, ptr %rkb.addr, align 8, !dbg !15799, !tbaa !3910
  %rkb_rk61 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %52, i32 0, i32 32, !dbg !15799
  %53 = load ptr, ptr %rkb_rk61, align 8, !dbg !15799, !tbaa !4139
  %rk_conf62 = getelementptr inbounds %struct.rd_kafka_s, ptr %53, i32 0, i32 18, !dbg !15799
  %debug63 = getelementptr inbounds %struct.rd_kafka_conf_s, ptr %rk_conf62, i32 0, i32 13, !dbg !15799
  %54 = load i32, ptr %debug63, align 8, !dbg !15799, !tbaa !4140
  %and64 = and i32 %54, 36, !dbg !15799
  %conv65 = sext i32 %and64 to i64, !dbg !15799
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0), !dbg !15799
  %tobool67 = icmp ne i64 %expval66, 0, !dbg !15799
  br i1 %tobool67, label %if.then68, label %if.end83, !dbg !15800

if.then68:                                        ; preds = %do.body60
  br label %do.body69, !dbg !15801

do.body69:                                        ; preds = %if.then68
  call void @llvm.lifetime.start.p0(i64 256, ptr %_logname70) #16, !dbg !15802
  tail call void @llvm.dbg.declare(metadata ptr %_logname70, metadata !15709, metadata !DIExpression()), !dbg !15802
  %55 = load ptr, ptr %rkb.addr, align 8, !dbg !15802, !tbaa !3910
  %rkb_logname_lock71 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %55, i32 0, i32 49, !dbg !15802
  %call72 = call i32 @mtx_lock(ptr noundef %rkb_logname_lock71), !dbg !15802
  %arraydecay73 = getelementptr inbounds [256 x i8], ptr %_logname70, i64 0, i64 0, !dbg !15802
  %56 = load ptr, ptr %rkb.addr, align 8, !dbg !15802, !tbaa !3910
  %rkb_logname74 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %56, i32 0, i32 48, !dbg !15802
  %57 = load ptr, ptr %rkb_logname74, align 8, !dbg !15802, !tbaa !4628
  call void @rd_strlcpy(ptr noundef %arraydecay73, ptr noundef %57, i64 noundef 256), !dbg !15802
  %58 = load ptr, ptr %rkb.addr, align 8, !dbg !15802, !tbaa !3910
  %rkb_logname_lock75 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %58, i32 0, i32 49, !dbg !15802
  %call76 = call i32 @mtx_unlock(ptr noundef %rkb_logname_lock75), !dbg !15802
  %59 = load ptr, ptr %rkb.addr, align 8, !dbg !15802, !tbaa !3910
  %rkb_rk77 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %59, i32 0, i32 32, !dbg !15802
  %60 = load ptr, ptr %rkb_rk77, align 8, !dbg !15802, !tbaa !4139
  %rk_conf78 = getelementptr inbounds %struct.rd_kafka_s, ptr %60, i32 0, i32 18, !dbg !15802
  %61 = load ptr, ptr %rkb.addr, align 8, !dbg !15802, !tbaa !3910
  %rkb_rk79 = getelementptr inbounds %struct.rd_kafka_broker_s, ptr %61, i32 0, i32 32, !dbg !15802
  %62 = load ptr, ptr %rkb_rk79, align 8, !dbg !15802, !tbaa !4139
  %arraydecay80 = getelementptr inbounds [256 x i8], ptr %_logname70, i64 0, i64 0, !dbg !15802
  %63 = load i32, ptr %msg_cnt, align 4, !dbg !15802, !tbaa !3959
  %64 = load i32, ptr %part_cnt, align 4, !dbg !15802, !tbaa !3959
  call void (ptr, ptr, ptr, i32, i32, ptr, ptr, ...) @rd_kafka_log0(ptr noundef %rk_conf78, ptr noundef %62, ptr noundef %arraydecay80, i32 noundef 7, i32 noundef 36, ptr noundef @.str.305, ptr noundef @.str.307, i32 noundef %63, i32 noundef %64), !dbg !15802
  call void @llvm.lifetime.end.p0(i64 256, ptr %_logname70) #16, !dbg !15801
  br label %do.cond81, !dbg !15802

do.cond81:                                        ; preds = %do.body69
  br label %do.end82, !dbg !15802

do.end82:                                         ; preds = %do.cond81
  br label %if.end83, !dbg !15801

if.end83:                                         ; preds = %do.end82, %do.body60
  br label %do.cond84, !dbg !15800

do.cond84:                                        ; preds = %if.end83
  br label %do.end85, !dbg !15800

do.end85:                                         ; preds = %do.cond84
  call void @llvm.lifetime.end.p0(i64 4, ptr %part_cnt) #16, !dbg !15803
  call void @llvm.lifetime.end.p0(i64 4, ptr %msg_cnt) #16, !dbg !15803
  call void @llvm.lifetime.end.p0(i64 8, ptr %rktp) #16, !dbg !15803
  br label %if.end86, !dbg !15804

if.end86:                                         ; preds = %do.end85, %do.end50
  %65 = load ptr, ptr %rko.addr, align 8, !dbg !15805, !tbaa !3910
  %call87 = call i32 @rd_kafka_op_reply(ptr noundef %65, i32 noundef 0), !dbg !15806
  call void @llvm.lifetime.end.p0(i64 4, ptr %partial_cnt) #16, !dbg !15807
  call void @llvm.lifetime.end.p0(i64 4, ptr %outq_cnt) #16, !dbg !15807
  call void @llvm.lifetime.end.p0(i64 4, ptr %retry_cnt) #16, !dbg !15807
  call void @llvm.lifetime.end.p0(i64 4, ptr %inflight_cnt) #16, !dbg !15807
  call void @llvm.lifetime.end.p0(i64 4, ptr %purge_flags) #16, !dbg !15807
  ret void, !dbg !15807
}

declare !dbg !15808 i32 @rd_kafka_toppar_broker_update(ptr noundef, i32 noundef, ptr noundef, ptr noundef) #3

declare !dbg !15811 ptr @rd_kafka_purge_flags2str(i32 noundef) #3

declare !dbg !15812 i32 @rd_kafka_toppar_purge_queues(ptr noundef, i32 noundef, i8 noundef zeroext) #3

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !15815 ptr @strchr(ptr noundef, i32 noundef) #10

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !15818 ptr @strstr(ptr noundef, ptr noundef) #10

; Function Attrs: nounwind willreturn memory(none)
declare !dbg !15821 ptr @__ctype_toupper_loc() #11

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !15828 i32 @strcasecmp(ptr noundef, ptr noundef) #10

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !15830 ptr @strrchr(ptr noundef, i32 noundef) #10

; Function Attrs: inlinehint nounwind willreturn memory(read) uwtable
define available_externally i32 @atoi(ptr noundef nonnull %__nptr) #14 !dbg !15831 {
entry:
  %__nptr.addr = alloca ptr, align 8
  store ptr %__nptr, ptr %__nptr.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %__nptr.addr, metadata !15835, metadata !DIExpression()), !dbg !15836
  %0 = load ptr, ptr %__nptr.addr, align 8, !dbg !15837, !tbaa !3910
  %call = call i64 @strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #16, !dbg !15838
  %conv = trunc i64 %call to i32, !dbg !15839
  ret i32 %conv, !dbg !15840
}

; Function Attrs: nounwind
declare !dbg !15841 i64 @strtol(ptr noundef, ptr noundef, i32 noundef) #9

declare !dbg !15845 ptr @rd_kafka_op_new_cb(ptr noundef, i32 noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal i32 @rd_kafka_broker_monitor_op_cb(ptr noundef %rk, ptr noundef %rkq, ptr noundef %rko) #0 !dbg !15848 {
entry:
  %rk.addr = alloca ptr, align 8
  %rkq.addr = alloca ptr, align 8
  %rko.addr = alloca ptr, align 8
  store ptr %rk, ptr %rk.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rk.addr, metadata !15852, metadata !DIExpression()), !dbg !15855
  store ptr %rkq, ptr %rkq.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rkq.addr, metadata !15853, metadata !DIExpression()), !dbg !15856
  store ptr %rko, ptr %rko.addr, align 8, !tbaa !3910
  tail call void @llvm.dbg.declare(metadata ptr %rko.addr, metadata !15854, metadata !DIExpression()), !dbg !15857
  %0 = load ptr, ptr %rko.addr, align 8, !dbg !15858, !tbaa !3910
  %rko_err = getelementptr inbounds %struct.rd_kafka_op_s, ptr %0, i32 0, i32 5, !dbg !15860
  %1 = load i32, ptr %rko_err, align 8, !dbg !15860, !tbaa !8463
  %cmp = icmp ne i32 %1, -197, !dbg !15861
  br i1 %cmp, label %if.then, label %if.end, !dbg !15862

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %rko.addr, align 8, !dbg !15863, !tbaa !3910
  %rko_u = getelementptr inbounds %struct.rd_kafka_op_s, ptr %2, i32 0, i32 15, !dbg !15864
  %cb = getelementptr inbounds %struct.anon.81, ptr %rko_u, i32 0, i32 1, !dbg !15865
  %3 = load ptr, ptr %cb, align 8, !dbg !15865, !tbaa !4126
  %4 = load ptr, ptr %rko.addr, align 8, !dbg !15866, !tbaa !3910
  %rko_u1 = getelementptr inbounds %struct.rd_kafka_op_s, ptr %4, i32 0, i32 15, !dbg !15867
  %rkb = getelementptr inbounds %struct.anon.81, ptr %rko_u1, i32 0, i32 0, !dbg !15868
  %5 = load ptr, ptr %rkb, align 8, !dbg !15868, !tbaa !4126
  call void %3(ptr noundef %5), !dbg !15863
  br label %if.end, !dbg !15863

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !15869
}

declare !dbg !15870 void @rd_kafka_q_destroy_final(ptr noundef) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start.p0(ptr) #15

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end.p0(ptr) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #12

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #3 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #7 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { nounwind allocsize(0,1) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { inlinehint nounwind willreturn memory(read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nocallback nofree nosync nounwind willreturn }
attributes #16 = { nounwind }
attributes #17 = { noreturn }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind willreturn memory(read) }
attributes #20 = { nounwind willreturn memory(none) }
attributes #21 = { nounwind allocsize(0,1) }

!llvm.dbg.cu = !{!55}
!llvm.module.flags = !{!3892, !3893, !3894, !3895, !3896}
!llvm.ident = !{!3897}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 84, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "rdkafka_broker.c", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "58c4774820e3147726fcecd4d5a82817")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 40, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 5)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 84, type: !3, isLocal: true, isDefinition: true)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(scope: null, file: !2, line: 84, type: !11, isLocal: true, isDefinition: true)
!11 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !12)
!12 = !{!13}
!13 = !DISubrange(count: 12)
!14 = !DIGlobalVariableExpression(var: !15, expr: !DIExpression())
!15 = distinct !DIGlobalVariable(scope: null, file: !2, line: 84, type: !16, isLocal: true, isDefinition: true)
!16 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, elements: !17)
!17 = !{!18}
!18 = !DISubrange(count: 8)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(scope: null, file: !2, line: 84, type: !21, isLocal: true, isDefinition: true)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 112, elements: !22)
!22 = !{!23}
!23 = !DISubrange(count: 14)
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(scope: null, file: !2, line: 85, type: !11, isLocal: true, isDefinition: true)
!26 = !DIGlobalVariableExpression(var: !27, expr: !DIExpression())
!27 = distinct !DIGlobalVariable(scope: null, file: !2, line: 85, type: !28, isLocal: true, isDefinition: true)
!28 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !29)
!29 = !{!30}
!30 = !DISubrange(count: 3)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(scope: null, file: !2, line: 85, type: !33, isLocal: true, isDefinition: true)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 56, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 7)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(scope: null, file: !2, line: 85, type: !38, isLocal: true, isDefinition: true)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 17)
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(scope: null, file: !2, line: 85, type: !43, isLocal: true, isDefinition: true)
!43 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !44)
!44 = !{!45}
!45 = !DISubrange(count: 15)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(scope: null, file: !2, line: 86, type: !48, isLocal: true, isDefinition: true)
!48 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 72, elements: !49)
!49 = !{!50}
!50 = !DISubrange(count: 9)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(scope: null, file: !2, line: 86, type: !33, isLocal: true, isDefinition: true)
!53 = !DIGlobalVariableExpression(var: !54, expr: !DIExpression())
!54 = distinct !DIGlobalVariable(name: "rd_kafka_broker_state_names", scope: !55, file: !2, line: 83, type: !3891, isLocal: false, isDefinition: true)
!55 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !2857, globals: !2876, splitDebugInlining: false, nameTableKind: None)
!56 = !{!57, !124, !291, !297, !644, !655, !755, !980, !989, !1014, !1022, !1100, !1199, !1210, !1228, !1251, !1417, !1513, !1524, !1550, !1654, !1845, !1861, !2421, !2533, !580, !1960, !2009, !2111, !2141, !2190, !2232, !2326, !2355, !2693, !2700, !2704, !2716, !2721, !2751, !2756}
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 83, baseType: !59, size: 32, elements: !60)
!58 = !DIFile(filename: "./rdkafka_op.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "da07f4699017aa52c719dc95ac28c7e4")
!59 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!60 = !{!61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123}
!61 = !DIEnumerator(name: "RD_KAFKA_OP_NONE", value: 0)
!62 = !DIEnumerator(name: "RD_KAFKA_OP_FETCH", value: 1)
!63 = !DIEnumerator(name: "RD_KAFKA_OP_ERR", value: 2)
!64 = !DIEnumerator(name: "RD_KAFKA_OP_CONSUMER_ERR", value: 3)
!65 = !DIEnumerator(name: "RD_KAFKA_OP_DR", value: 4)
!66 = !DIEnumerator(name: "RD_KAFKA_OP_STATS", value: 5)
!67 = !DIEnumerator(name: "RD_KAFKA_OP_OFFSET_COMMIT", value: 6)
!68 = !DIEnumerator(name: "RD_KAFKA_OP_NODE_UPDATE", value: 7)
!69 = !DIEnumerator(name: "RD_KAFKA_OP_XMIT_BUF", value: 8)
!70 = !DIEnumerator(name: "RD_KAFKA_OP_RECV_BUF", value: 9)
!71 = !DIEnumerator(name: "RD_KAFKA_OP_XMIT_RETRY", value: 10)
!72 = !DIEnumerator(name: "RD_KAFKA_OP_FETCH_START", value: 11)
!73 = !DIEnumerator(name: "RD_KAFKA_OP_FETCH_STOP", value: 12)
!74 = !DIEnumerator(name: "RD_KAFKA_OP_SEEK", value: 13)
!75 = !DIEnumerator(name: "RD_KAFKA_OP_PAUSE", value: 14)
!76 = !DIEnumerator(name: "RD_KAFKA_OP_OFFSET_FETCH", value: 15)
!77 = !DIEnumerator(name: "RD_KAFKA_OP_PARTITION_JOIN", value: 16)
!78 = !DIEnumerator(name: "RD_KAFKA_OP_PARTITION_LEAVE", value: 17)
!79 = !DIEnumerator(name: "RD_KAFKA_OP_REBALANCE", value: 18)
!80 = !DIEnumerator(name: "RD_KAFKA_OP_TERMINATE", value: 19)
!81 = !DIEnumerator(name: "RD_KAFKA_OP_COORD_QUERY", value: 20)
!82 = !DIEnumerator(name: "RD_KAFKA_OP_SUBSCRIBE", value: 21)
!83 = !DIEnumerator(name: "RD_KAFKA_OP_ASSIGN", value: 22)
!84 = !DIEnumerator(name: "RD_KAFKA_OP_GET_SUBSCRIPTION", value: 23)
!85 = !DIEnumerator(name: "RD_KAFKA_OP_GET_ASSIGNMENT", value: 24)
!86 = !DIEnumerator(name: "RD_KAFKA_OP_THROTTLE", value: 25)
!87 = !DIEnumerator(name: "RD_KAFKA_OP_NAME", value: 26)
!88 = !DIEnumerator(name: "RD_KAFKA_OP_CG_METADATA", value: 27)
!89 = !DIEnumerator(name: "RD_KAFKA_OP_OFFSET_RESET", value: 28)
!90 = !DIEnumerator(name: "RD_KAFKA_OP_METADATA", value: 29)
!91 = !DIEnumerator(name: "RD_KAFKA_OP_LOG", value: 30)
!92 = !DIEnumerator(name: "RD_KAFKA_OP_WAKEUP", value: 31)
!93 = !DIEnumerator(name: "RD_KAFKA_OP_CREATETOPICS", value: 32)
!94 = !DIEnumerator(name: "RD_KAFKA_OP_DELETETOPICS", value: 33)
!95 = !DIEnumerator(name: "RD_KAFKA_OP_CREATEPARTITIONS", value: 34)
!96 = !DIEnumerator(name: "RD_KAFKA_OP_ALTERCONFIGS", value: 35)
!97 = !DIEnumerator(name: "RD_KAFKA_OP_INCREMENTALALTERCONFIGS", value: 36)
!98 = !DIEnumerator(name: "RD_KAFKA_OP_DESCRIBECONFIGS", value: 37)
!99 = !DIEnumerator(name: "RD_KAFKA_OP_DELETERECORDS", value: 38)
!100 = !DIEnumerator(name: "RD_KAFKA_OP_LISTCONSUMERGROUPS", value: 39)
!101 = !DIEnumerator(name: "RD_KAFKA_OP_DESCRIBECONSUMERGROUPS", value: 40)
!102 = !DIEnumerator(name: "RD_KAFKA_OP_DELETEGROUPS", value: 41)
!103 = !DIEnumerator(name: "RD_KAFKA_OP_DELETECONSUMERGROUPOFFSETS", value: 42)
!104 = !DIEnumerator(name: "RD_KAFKA_OP_CREATEACLS", value: 43)
!105 = !DIEnumerator(name: "RD_KAFKA_OP_DESCRIBEACLS", value: 44)
!106 = !DIEnumerator(name: "RD_KAFKA_OP_DELETEACLS", value: 45)
!107 = !DIEnumerator(name: "RD_KAFKA_OP_ALTERCONSUMERGROUPOFFSETS", value: 46)
!108 = !DIEnumerator(name: "RD_KAFKA_OP_LISTCONSUMERGROUPOFFSETS", value: 47)
!109 = !DIEnumerator(name: "RD_KAFKA_OP_ADMIN_FANOUT", value: 48)
!110 = !DIEnumerator(name: "RD_KAFKA_OP_ADMIN_RESULT", value: 49)
!111 = !DIEnumerator(name: "RD_KAFKA_OP_PURGE", value: 50)
!112 = !DIEnumerator(name: "RD_KAFKA_OP_CONNECT", value: 51)
!113 = !DIEnumerator(name: "RD_KAFKA_OP_OAUTHBEARER_REFRESH", value: 52)
!114 = !DIEnumerator(name: "RD_KAFKA_OP_MOCK", value: 53)
!115 = !DIEnumerator(name: "RD_KAFKA_OP_BROKER_MONITOR", value: 54)
!116 = !DIEnumerator(name: "RD_KAFKA_OP_TXN", value: 55)
!117 = !DIEnumerator(name: "RD_KAFKA_OP_GET_REBALANCE_PROTOCOL", value: 56)
!118 = !DIEnumerator(name: "RD_KAFKA_OP_LEADERS", value: 57)
!119 = !DIEnumerator(name: "RD_KAFKA_OP_BARRIER", value: 58)
!120 = !DIEnumerator(name: "RD_KAFKA_OP_SASL_REAUTH", value: 59)
!121 = !DIEnumerator(name: "RD_KAFKA_OP_DESCRIBEUSERSCRAMCREDENTIALS", value: 60)
!122 = !DIEnumerator(name: "RD_KAFKA_OP_ALTERUSERSCRAMCREDENTIALS", value: 61)
!123 = !DIEnumerator(name: "RD_KAFKA_OP__END", value: 62)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !125, line: 280, baseType: !126, size: 32, elements: !127)
!125 = !DIFile(filename: "./rdkafka.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "6931a45742634ee26bd1192cde137264")
!126 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290}
!128 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__BEGIN", value: -200)
!129 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__BAD_MSG", value: -199)
!130 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__BAD_COMPRESSION", value: -198)
!131 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__DESTROY", value: -197)
!132 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__FAIL", value: -196)
!133 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__TRANSPORT", value: -195)
!134 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__CRIT_SYS_RESOURCE", value: -194)
!135 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__RESOLVE", value: -193)
!136 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__MSG_TIMED_OUT", value: -192)
!137 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__PARTITION_EOF", value: -191)
!138 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION", value: -190)
!139 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__FS", value: -189)
!140 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC", value: -188)
!141 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__ALL_BROKERS_DOWN", value: -187)
!142 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__INVALID_ARG", value: -186)
!143 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__TIMED_OUT", value: -185)
!144 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__QUEUE_FULL", value: -184)
!145 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__ISR_INSUFF", value: -183)
!146 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__NODE_UPDATE", value: -182)
!147 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__SSL", value: -181)
!148 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__WAIT_COORD", value: -180)
!149 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__UNKNOWN_GROUP", value: -179)
!150 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__IN_PROGRESS", value: -178)
!151 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS", value: -177)
!152 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__EXISTING_SUBSCRIPTION", value: -176)
!153 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS", value: -175)
!154 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS", value: -174)
!155 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__CONFLICT", value: -173)
!156 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__STATE", value: -172)
!157 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__UNKNOWN_PROTOCOL", value: -171)
!158 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED", value: -170)
!159 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__AUTHENTICATION", value: -169)
!160 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__NO_OFFSET", value: -168)
!161 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__OUTDATED", value: -167)
!162 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE", value: -166)
!163 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE", value: -165)
!164 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__WAIT_CACHE", value: -164)
!165 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__INTR", value: -163)
!166 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__KEY_SERIALIZATION", value: -162)
!167 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__VALUE_SERIALIZATION", value: -161)
!168 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__KEY_DESERIALIZATION", value: -160)
!169 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__VALUE_DESERIALIZATION", value: -159)
!170 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__PARTIAL", value: -158)
!171 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__READ_ONLY", value: -157)
!172 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__NOENT", value: -156)
!173 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__UNDERFLOW", value: -155)
!174 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__INVALID_TYPE", value: -154)
!175 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__RETRY", value: -153)
!176 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__PURGE_QUEUE", value: -152)
!177 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__PURGE_INFLIGHT", value: -151)
!178 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__FATAL", value: -150)
!179 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__INCONSISTENT", value: -149)
!180 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__GAPLESS_GUARANTEE", value: -148)
!181 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__MAX_POLL_EXCEEDED", value: -147)
!182 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__UNKNOWN_BROKER", value: -146)
!183 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__NOT_CONFIGURED", value: -145)
!184 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__FENCED", value: -144)
!185 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__APPLICATION", value: -143)
!186 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__ASSIGNMENT_LOST", value: -142)
!187 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__NOOP", value: -141)
!188 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__AUTO_OFFSET_RESET", value: -140)
!189 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__LOG_TRUNCATION", value: -139)
!190 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR__END", value: -100)
!191 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNKNOWN", value: -1)
!192 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NO_ERROR", value: 0)
!193 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_OFFSET_OUT_OF_RANGE", value: 1)
!194 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_MSG", value: 2)
!195 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART", value: 3)
!196 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_MSG_SIZE", value: 4)
!197 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_LEADER_NOT_AVAILABLE", value: 5)
!198 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NOT_LEADER_FOR_PARTITION", value: 6)
!199 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT", value: 7)
!200 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_BROKER_NOT_AVAILABLE", value: 8)
!201 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_REPLICA_NOT_AVAILABLE", value: 9)
!202 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE", value: 10)
!203 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_STALE_CTRL_EPOCH", value: 11)
!204 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_OFFSET_METADATA_TOO_LARGE", value: 12)
!205 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NETWORK_EXCEPTION", value: 13)
!206 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_COORDINATOR_LOAD_IN_PROGRESS", value: 14)
!207 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_COORDINATOR_NOT_AVAILABLE", value: 15)
!208 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NOT_COORDINATOR", value: 16)
!209 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_TOPIC_EXCEPTION", value: 17)
!210 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_RECORD_LIST_TOO_LARGE", value: 18)
!211 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS", value: 19)
!212 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS_AFTER_APPEND", value: 20)
!213 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_REQUIRED_ACKS", value: 21)
!214 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION", value: 22)
!215 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INCONSISTENT_GROUP_PROTOCOL", value: 23)
!216 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_GROUP_ID", value: 24)
!217 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID", value: 25)
!218 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_SESSION_TIMEOUT", value: 26)
!219 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS", value: 27)
!220 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_COMMIT_OFFSET_SIZE", value: 28)
!221 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED", value: 29)
!222 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED", value: 30)
!223 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED", value: 31)
!224 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_TIMESTAMP", value: 32)
!225 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNSUPPORTED_SASL_MECHANISM", value: 33)
!226 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_ILLEGAL_SASL_STATE", value: 34)
!227 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNSUPPORTED_VERSION", value: 35)
!228 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_TOPIC_ALREADY_EXISTS", value: 36)
!229 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_PARTITIONS", value: 37)
!230 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_REPLICATION_FACTOR", value: 38)
!231 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_REPLICA_ASSIGNMENT", value: 39)
!232 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_CONFIG", value: 40)
!233 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NOT_CONTROLLER", value: 41)
!234 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_REQUEST", value: 42)
!235 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT", value: 43)
!236 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_POLICY_VIOLATION", value: 44)
!237 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_OUT_OF_ORDER_SEQUENCE_NUMBER", value: 45)
!238 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DUPLICATE_SEQUENCE_NUMBER", value: 46)
!239 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH", value: 47)
!240 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_TXN_STATE", value: 48)
!241 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING", value: 49)
!242 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_TRANSACTION_TIMEOUT", value: 50)
!243 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS", value: 51)
!244 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_TRANSACTION_COORDINATOR_FENCED", value: 52)
!245 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_FAILED", value: 53)
!246 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_SECURITY_DISABLED", value: 54)
!247 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_OPERATION_NOT_ATTEMPTED", value: 55)
!248 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_KAFKA_STORAGE_ERROR", value: 56)
!249 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_LOG_DIR_NOT_FOUND", value: 57)
!250 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_SASL_AUTHENTICATION_FAILED", value: 58)
!251 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNKNOWN_PRODUCER_ID", value: 59)
!252 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_REASSIGNMENT_IN_PROGRESS", value: 60)
!253 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DELEGATION_TOKEN_AUTH_DISABLED", value: 61)
!254 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DELEGATION_TOKEN_NOT_FOUND", value: 62)
!255 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DELEGATION_TOKEN_OWNER_MISMATCH", value: 63)
!256 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DELEGATION_TOKEN_REQUEST_NOT_ALLOWED", value: 64)
!257 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DELEGATION_TOKEN_AUTHORIZATION_FAILED", value: 65)
!258 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DELEGATION_TOKEN_EXPIRED", value: 66)
!259 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_PRINCIPAL_TYPE", value: 67)
!260 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NON_EMPTY_GROUP", value: 68)
!261 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_GROUP_ID_NOT_FOUND", value: 69)
!262 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_FETCH_SESSION_ID_NOT_FOUND", value: 70)
!263 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_FETCH_SESSION_EPOCH", value: 71)
!264 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_LISTENER_NOT_FOUND", value: 72)
!265 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_TOPIC_DELETION_DISABLED", value: 73)
!266 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_FENCED_LEADER_EPOCH", value: 74)
!267 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNKNOWN_LEADER_EPOCH", value: 75)
!268 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNSUPPORTED_COMPRESSION_TYPE", value: 76)
!269 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_STALE_BROKER_EPOCH", value: 77)
!270 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_OFFSET_NOT_AVAILABLE", value: 78)
!271 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_MEMBER_ID_REQUIRED", value: 79)
!272 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_PREFERRED_LEADER_NOT_AVAILABLE", value: 80)
!273 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_GROUP_MAX_SIZE_REACHED", value: 81)
!274 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_FENCED_INSTANCE_ID", value: 82)
!275 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_ELIGIBLE_LEADERS_NOT_AVAILABLE", value: 83)
!276 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_ELECTION_NOT_NEEDED", value: 84)
!277 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_NO_REASSIGNMENT_IN_PROGRESS", value: 85)
!278 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_GROUP_SUBSCRIBED_TO_TOPIC", value: 86)
!279 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_RECORD", value: 87)
!280 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNSTABLE_OFFSET_COMMIT", value: 88)
!281 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_THROTTLING_QUOTA_EXCEEDED", value: 89)
!282 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_PRODUCER_FENCED", value: 90)
!283 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_RESOURCE_NOT_FOUND", value: 91)
!284 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_DUPLICATE_RESOURCE", value: 92)
!285 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_UNACCEPTABLE_CREDENTIAL", value: 93)
!286 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INCONSISTENT_VOTER_SET", value: 94)
!287 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_INVALID_UPDATE_VERSION", value: 95)
!288 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_FEATURE_UPDATE_FAILED", value: 96)
!289 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_PRINCIPAL_DESERIALIZATION_FAILURE", value: 97)
!290 = !DIEnumerator(name: "RD_KAFKA_RESP_ERR_END_ALL", value: 98)
!291 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 191, baseType: !59, size: 32, elements: !292)
!292 = !{!293, !294, !295, !296}
!293 = !DIEnumerator(name: "RD_KAFKA_PRIO_NORMAL", value: 0)
!294 = !DIEnumerator(name: "RD_KAFKA_PRIO_MEDIUM", value: 1)
!295 = !DIEnumerator(name: "RD_KAFKA_PRIO_HIGH", value: 2)
!296 = !DIEnumerator(name: "RD_KAFKA_PRIO_FLASH", value: 3)
!297 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !299, file: !298, line: 151, baseType: !59, size: 32, elements: !2688)
!298 = !DIFile(filename: "./rdkafka_topic.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "1f5fc7aee89e54db9140988662b38d35")
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_topic_s", file: !298, line: 118, size: 8000, elements: !300)
!300 = !{!301, !305, !312, !324, !357, !367, !2651, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2669}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_magic", scope: !299, file: !298, line: 119, baseType: !302, size: 32)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !303)
!303 = !{!304}
!304 = !DISubrange(count: 4)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_link", scope: !299, file: !298, line: 121, baseType: !306, size: 128, offset: 64)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !299, file: !298, line: 121, size: 128, elements: !307)
!307 = !{!308, !310}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !306, file: !298, line: 121, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !306, file: !298, line: 121, baseType: !311, size: 64, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_refcnt", scope: !299, file: !298, line: 123, baseType: !313, size: 32, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_refcnt_t", file: !314, line: 285, baseType: !315)
!314 = !DIFile(filename: "./rd.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "0c57a7f8998af2a9e28b76545994ed9b")
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_atomic32_t", file: !316, line: 38, baseType: !317)
!316 = !DIFile(filename: "./rdatomic.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "3e5a33c027301b1520f165fc3385980c")
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 33, size: 32, elements: !318)
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !317, file: !316, line: 34, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !321, line: 26, baseType: !322)
!321 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !323, line: 41, baseType: !126)
!323 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!324 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_lock", scope: !299, file: !298, line: 125, baseType: !325, size: 448, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !326, line: 196, baseType: !327)
!326 = !DIFile(filename: "./tinycthread_extra.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "55e83ed2c312596cb38f44ee4ec056d4")
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_rwlock_t", file: !328, line: 91, baseType: !329)
!328 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "735e3bf264ff9d8f5d95898b1692fbdb")
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !328, line: 86, size: 448, elements: !330)
!330 = !{!331, !351, !355}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !329, file: !328, line: 88, baseType: !332, size: 448)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_rwlock_arch_t", file: !333, line: 23, size: 448, elements: !334)
!333 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h", directory: "", checksumkind: CSK_MD5, checksum: "2034038f4a99ff6cb7b9de3a3e8c2a8e")
!334 = !{!335, !336, !337, !338, !339, !340, !341, !342, !343, !345, !348, !350}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "__readers", scope: !332, file: !333, line: 25, baseType: !59, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "__writers", scope: !332, file: !333, line: 26, baseType: !59, size: 32, offset: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "__wrphase_futex", scope: !332, file: !333, line: 27, baseType: !59, size: 32, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "__writers_futex", scope: !332, file: !333, line: 28, baseType: !59, size: 32, offset: 96)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !332, file: !333, line: 29, baseType: !59, size: 32, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !332, file: !333, line: 30, baseType: !59, size: 32, offset: 160)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "__cur_writer", scope: !332, file: !333, line: 32, baseType: !126, size: 32, offset: 192)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "__shared", scope: !332, file: !333, line: 33, baseType: !126, size: 32, offset: 224)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "__rwelision", scope: !332, file: !333, line: 34, baseType: !344, size: 8, offset: 256)
!344 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !332, file: !333, line: 39, baseType: !346, size: 56, offset: 264)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 56, elements: !34)
!347 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !332, file: !333, line: 42, baseType: !349, size: 64, offset: 320)
!349 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__flags", scope: !332, file: !333, line: 45, baseType: !59, size: 32, offset: 384)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !329, file: !328, line: 89, baseType: !352, size: 448)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 448, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 56)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !329, file: !328, line: 90, baseType: !356, size: 64)
!356 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_topic", scope: !299, file: !298, line: 126, baseType: !358, size: 64, offset: 704)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafkap_str_t", file: !360, line: 240, baseType: !361)
!360 = !DIFile(filename: "./rdkafka_proto.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "8d032be8414e6cbfce8831cc1907b5f7")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafkap_str_s", file: !360, line: 235, size: 128, elements: !362)
!362 = !{!363, !364}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !361, file: !360, line: 237, baseType: !126, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !361, file: !360, line: 238, baseType: !365, size: 64, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_ua", scope: !299, file: !298, line: 128, baseType: !368, size: 64, offset: 768)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_toppar_t", file: !58, line: 40, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_toppar_s", file: !371, line: 131, size: 9664, elements: !372)
!371 = !DIFile(filename: "./rdkafka_partition.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "dbbe5871eb12e632bb69df154df3008b")
!372 = !{!373, !380, !385, !390, !395, !400, !405, !408, !409, !410, !411, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2529, !2530, !2531, !2532, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2642}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_rklink", scope: !370, file: !371, line: 132, baseType: !374, size: 128)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 132, size: 128, elements: !375)
!375 = !{!376, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !374, file: !371, line: 132, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !374, file: !371, line: 132, baseType: !379, size: 64, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_rkblink", scope: !370, file: !371, line: 133, baseType: !381, size: 128, offset: 128)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 133, size: 128, elements: !382)
!382 = !{!383, !384}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !381, file: !371, line: 133, baseType: !377, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !381, file: !371, line: 133, baseType: !379, size: 64, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_activelink", scope: !370, file: !371, line: 135, baseType: !386, size: 128, offset: 256)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 134, size: 128, elements: !387)
!387 = !{!388, !389}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_next", scope: !386, file: !371, line: 134, baseType: !377, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_prev", scope: !386, file: !371, line: 134, baseType: !377, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_rktlink", scope: !370, file: !371, line: 136, baseType: !391, size: 128, offset: 384)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 136, size: 128, elements: !392)
!392 = !{!393, !394}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !391, file: !371, line: 136, baseType: !377, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !391, file: !371, line: 136, baseType: !379, size: 64, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_cgrplink", scope: !370, file: !371, line: 137, baseType: !396, size: 128, offset: 512)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 137, size: 128, elements: !397)
!397 = !{!398, !399}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !396, file: !371, line: 137, baseType: !377, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !396, file: !371, line: 137, baseType: !379, size: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_txnlink", scope: !370, file: !371, line: 139, baseType: !401, size: 128, offset: 640)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 138, size: 128, elements: !402)
!402 = !{!403, !404}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !401, file: !371, line: 138, baseType: !377, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !401, file: !371, line: 138, baseType: !379, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_rkt", scope: !370, file: !371, line: 142, baseType: !406, size: 64, offset: 768)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_topic_t", file: !125, line: 253, baseType: !299)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_partition", scope: !370, file: !371, line: 143, baseType: !320, size: 32, offset: 832)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_leader_id", scope: !370, file: !371, line: 146, baseType: !320, size: 32, offset: 864)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_broker_id", scope: !370, file: !371, line: 149, baseType: !320, size: 32, offset: 896)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_leader", scope: !370, file: !371, line: 150, baseType: !412, size: 64, offset: 960)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_broker_t", file: !414, line: 38, baseType: !415)
!414 = !DIFile(filename: "./rdkafka_buf.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "0acc89a5589ec9a3fd914d1250fb736f")
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_broker_s", file: !416, line: 82, size: 25472, elements: !417)
!416 = !DIFile(filename: "./rdkafka_broker.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "aeb38d58b4253d3e312d2957db2737f5")
!417 = !{!418, !425, !426, !486, !491, !494, !500, !501, !502, !2304, !2305, !2306, !2311, !2312, !2317, !2318, !2319, !2322, !2323, !2324, !2340, !2341, !2342, !2343, !2344, !2351, !2352, !2353, !2361, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2402, !2403, !2404, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2474, !2475, !2476, !2477, !2478, !2483, !2488, !2489, !2490, !2491, !2498, !2507}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_link", scope: !415, file: !416, line: 83, baseType: !419, size: 128)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 83, size: 128, elements: !420)
!420 = !{!421, !423}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !419, file: !416, line: 83, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !419, file: !416, line: 83, baseType: !424, size: 64, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_nodeid", scope: !415, file: !416, line: 85, baseType: !320, size: 32, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_rsal", scope: !415, file: !416, line: 89, baseType: !427, size: 64, offset: 192)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_sockaddr_list_t", file: !429, line: 112, baseType: !430)
!429 = !DIFile(filename: "./rdaddr.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "68c59d6e7bea2a3d1caf3e096692e2c8")
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_sockaddr_list_s", file: !429, line: 108, size: 64, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rsal_cnt", scope: !430, file: !429, line: 109, baseType: !126, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "rsal_curr", scope: !430, file: !429, line: 110, baseType: !126, size: 32, offset: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "rsal_addr", scope: !430, file: !429, line: 111, baseType: !435, offset: 64)
!435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !436, elements: !484)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_sockaddr_inx_t", file: !429, line: 53, baseType: !437)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !429, line: 50, size: 224, elements: !438)
!438 = !{!439, !461}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !437, file: !429, line: 51, baseType: !440, size: 128)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !441, line: 245, size: 128, elements: !442)
!441 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "", checksumkind: CSK_MD5, checksum: "eb6560f10d4cfe9f30fea2c92b9da0fd")
!442 = !{!443, !447, !452, !459}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !440, file: !441, line: 247, baseType: !444, size: 16)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !445, line: 28, baseType: !446)
!445 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "", checksumkind: CSK_MD5, checksum: "dd7f1d9dd6e26f88d1726905ed5d9ff5")
!446 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !440, file: !441, line: 248, baseType: !448, size: 16, offset: 16)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !441, line: 123, baseType: !449)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !450, line: 25, baseType: !451)
!450 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !323, line: 40, baseType: !446)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !440, file: !441, line: 249, baseType: !453, size: 32, offset: 32)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !441, line: 31, size: 32, elements: !454)
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !453, file: !441, line: 33, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !441, line: 30, baseType: !457)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !450, line: 26, baseType: !458)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !323, line: 42, baseType: !59)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !440, file: !441, line: 252, baseType: !460, size: 64, offset: 64)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 64, elements: !17)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "in6", scope: !437, file: !429, line: 52, baseType: !462, size: 224)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !441, line: 260, size: 224, elements: !463)
!463 = !{!464, !465, !466, !467, !483}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !462, file: !441, line: 262, baseType: !444, size: 16)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !462, file: !441, line: 263, baseType: !448, size: 16, offset: 16)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !462, file: !441, line: 264, baseType: !457, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !462, file: !441, line: 265, baseType: !468, size: 128, offset: 64)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !441, line: 219, size: 128, elements: !469)
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !468, file: !441, line: 226, baseType: !471, size: 128)
!471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !468, file: !441, line: 221, size: 128, elements: !472)
!472 = !{!473, !479, !481}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !471, file: !441, line: 223, baseType: !474, size: 128)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 128, elements: !477)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !450, line: 24, baseType: !476)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !323, line: 38, baseType: !347)
!477 = !{!478}
!478 = !DISubrange(count: 16)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !471, file: !441, line: 224, baseType: !480, size: 128)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 128, elements: !17)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !471, file: !441, line: 225, baseType: !482, size: 128)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !457, size: 128, elements: !303)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !462, file: !441, line: 266, baseType: !457, size: 32, offset: 192)
!484 = !{!485}
!485 = !DISubrange(count: -1)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ts_rsal_last", scope: !415, file: !416, line: 90, baseType: !487, size: 64, offset: 256)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_ts_t", file: !488, line: 44, baseType: !489)
!488 = !DIFile(filename: "./rdtypes.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "016bcfed1153977351687d80c528f953")
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !321, line: 27, baseType: !490)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !323, line: 44, baseType: !356)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_addr_last", scope: !415, file: !416, line: 91, baseType: !492, size: 64, offset: 320)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_transport", scope: !415, file: !416, line: 93, baseType: !495, size: 64, offset: 384)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_transport_t", file: !497, line: 39, baseType: !498)
!497 = !DIFile(filename: "./rdkafka_transport.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "f35caa9f37b09b4f188a09facdd1718e")
!498 = !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_transport_s", file: !499, line: 45, flags: DIFlagFwdDecl)
!499 = !DIFile(filename: "./rdkafka_conf.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "e765c625455d2ea136e309f8f5f3659d")
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_corrid", scope: !415, file: !416, line: 95, baseType: !457, size: 32, offset: 448)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_connid", scope: !415, file: !416, line: 96, baseType: !126, size: 32, offset: 480)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ops", scope: !415, file: !416, line: 102, baseType: !503, size: 64, offset: 512)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_q_t", file: !58, line: 39, baseType: !505)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_q_s", file: !506, line: 53, size: 1408, elements: !507)
!506 = !DIFile(filename: "./rdkafka_queue.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "5e52ff7c4a295f4821e8f181241b223c")
!507 = !{!508, !518, !528, !530, !2281, !2282, !2283, !2284, !2285, !2286, !2301, !2302, !2303}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_lock", scope: !505, file: !506, line: 54, baseType: !509, size: 320)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "mtx_t", file: !510, line: 66, baseType: !511)
!510 = !DIFile(filename: "/usr/include/threads.h", directory: "", checksumkind: CSK_MD5, checksum: "6974d482e09577a4fa59cb79dc9d72e5")
!511 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !510, line: 62, size: 320, elements: !512)
!512 = !{!513, !517}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !511, file: !510, line: 64, baseType: !514, size: 320)
!514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 320, elements: !515)
!515 = !{!516}
!516 = !DISubrange(count: 40)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !511, file: !510, line: 65, baseType: !356, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_cond", scope: !505, file: !506, line: 55, baseType: !519, size: 384, offset: 320)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "cnd_t", file: !510, line: 72, baseType: !520)
!520 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !510, line: 68, size: 384, elements: !521)
!521 = !{!522, !526}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !520, file: !510, line: 70, baseType: !523, size: 384)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 384, elements: !524)
!524 = !{!525}
!525 = !DISubrange(count: 48)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !520, file: !510, line: 71, baseType: !527, size: 64)
!527 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_fwdq", scope: !505, file: !506, line: 56, baseType: !529, size: 64, offset: 704)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_q", scope: !505, file: !506, line: 60, baseType: !531, size: 128, offset: 768)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_op_tailq", file: !506, line: 44, size: 128, elements: !532)
!532 = !{!533, !2280}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !531, file: !506, line: 44, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_op_s", file: !58, line: 267, size: 6656, elements: !536)
!536 = !{!537, !543, !545, !547, !548, !549, !551, !564, !565, !567, !568, !574, !1967, !1968, !1969, !1974}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "rko_link", scope: !535, file: !58, line: 268, baseType: !538, size: 128)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !535, file: !58, line: 268, size: 128, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !538, file: !58, line: 268, baseType: !534, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !538, file: !58, line: 268, baseType: !542, size: 64, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "rko_type", scope: !535, file: !58, line: 270, baseType: !544, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_op_type_t", file: !58, line: 176, baseType: !57)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rko_evtype", scope: !535, file: !58, line: 271, baseType: !546, size: 32, offset: 160)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_event_type_t", file: !125, line: 5333, baseType: !126)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "rko_flags", scope: !535, file: !58, line: 272, baseType: !126, size: 32, offset: 192)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "rko_version", scope: !535, file: !58, line: 273, baseType: !320, size: 32, offset: 224)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "rko_err", scope: !535, file: !58, line: 274, baseType: !550, size: 32, offset: 256)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_resp_err_t", file: !125, line: 635, baseType: !124)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "rko_error", scope: !535, file: !58, line: 275, baseType: !552, size: 64, offset: 320)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_error_t", file: !125, line: 261, baseType: !554)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_error_s", file: !555, line: 40, size: 192, elements: !556)
!555 = !DIFile(filename: "./rdkafka_error.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "95a3539c946490b939345e05c0eea8a1")
!556 = !{!557, !558, !560, !562, !563}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !554, file: !555, line: 41, baseType: !550, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "errstr", scope: !554, file: !555, line: 42, baseType: !559, size: 64, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "fatal", scope: !554, file: !555, line: 46, baseType: !561, size: 8, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_bool_t", file: !488, line: 49, baseType: !475)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "retriable", scope: !554, file: !555, line: 47, baseType: !561, size: 8, offset: 136)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "txn_requires_abort", scope: !554, file: !555, line: 49, baseType: !561, size: 8, offset: 144)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "rko_len", scope: !535, file: !58, line: 276, baseType: !320, size: 32, offset: 384)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "rko_prio", scope: !535, file: !58, line: 278, baseType: !566, size: 32, offset: 416)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_prio_t", file: !58, line: 197, baseType: !291)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "rko_rktp", scope: !535, file: !58, line: 281, baseType: !368, size: 64, offset: 448)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "rko_replyq", scope: !535, file: !58, line: 289, baseType: !569, size: 128, offset: 512)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_replyq_t", file: !58, line: 55, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_replyq_s", file: !58, line: 47, size: 128, elements: !571)
!571 = !{!572, !573}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !570, file: !58, line: 48, baseType: !503, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !570, file: !58, line: 49, baseType: !320, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rko_serve", scope: !535, file: !58, line: 294, baseType: !575, size: 64, offset: 640)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_q_serve_cb_t", file: !58, line: 235, baseType: !577)
!577 = !DISubroutineType(types: !578)
!578 = !{!579, !586, !529, !534, !1959, !607}
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_op_res_t", file: !58, line: 216, baseType: !580)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 207, baseType: !59, size: 32, elements: !581)
!581 = !{!582, !583, !584, !585}
!582 = !DIEnumerator(name: "RD_KAFKA_OP_RES_PASS", value: 0)
!583 = !DIEnumerator(name: "RD_KAFKA_OP_RES_HANDLED", value: 1)
!584 = !DIEnumerator(name: "RD_KAFKA_OP_RES_KEEP", value: 2)
!585 = !DIEnumerator(name: "RD_KAFKA_OP_RES_YIELD", value: 3)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_t", file: !125, line: 252, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_s", file: !589, line: 243, size: 34624, elements: !590)
!589 = !DIFile(filename: "./rdkafka_int.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "1beb976e5fb92ff8c74626b3b86148e5")
!590 = !{!591, !592, !593, !598, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !631, !632, !928, !1406, !1407, !1411, !1412, !1413, !1414, !1415, !1421, !1429, !1434, !1440, !1441, !1442, !1457, !1458, !1510, !1511, !1512, !1518, !1519, !1615, !1616, !1633, !1664, !1912, !1921, !1922, !1926, !1927, !1928, !1929, !1930, !1931, !1937, !1945, !1950}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "rk_rep", scope: !588, file: !589, line: 244, baseType: !503, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "rk_ops", scope: !588, file: !589, line: 245, baseType: !503, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "rk_brokers", scope: !588, file: !589, line: 247, baseType: !594, size: 128, offset: 128)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 247, size: 128, elements: !595)
!595 = !{!596, !597}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !594, file: !589, line: 247, baseType: !422, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !594, file: !589, line: 247, baseType: !424, size: 64, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_by_id", scope: !588, file: !589, line: 248, baseType: !599, size: 320, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_list_t", file: !600, line: 61, baseType: !601)
!600 = !DIFile(filename: "./rdlist.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "1bd7bdd3f8c95a8e524b8b8e3965e4ac")
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_list_s", file: !600, line: 40, size: 320, elements: !602)
!602 = !{!603, !604, !605, !608, !612, !613, !614}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "rl_size", scope: !601, file: !600, line: 41, baseType: !126, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "rl_cnt", scope: !601, file: !600, line: 42, baseType: !126, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rl_elems", scope: !601, file: !600, line: 43, baseType: !606, size: 64, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "rl_free_cb", scope: !601, file: !600, line: 44, baseType: !609, size: 64, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DISubroutineType(types: !611)
!611 = !{null, !607}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "rl_flags", scope: !601, file: !600, line: 45, baseType: !126, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "rl_elemsize", scope: !601, file: !600, line: 57, baseType: !126, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "rl_p", scope: !601, file: !600, line: 58, baseType: !607, size: 64, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_cnt", scope: !588, file: !589, line: 249, baseType: !315, size: 32, offset: 576)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_up_cnt", scope: !588, file: !589, line: 251, baseType: !315, size: 32, offset: 608)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "rk_logical_broker_up_cnt", scope: !588, file: !589, line: 254, baseType: !315, size: 32, offset: 640)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_down_cnt", scope: !588, file: !589, line: 257, baseType: !315, size: 32, offset: 672)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_addrless_cnt", scope: !588, file: !589, line: 260, baseType: !315, size: 32, offset: 704)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "rk_internal_rkb_lock", scope: !588, file: !589, line: 262, baseType: !509, size: 320, offset: 768)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "rk_internal_rkb", scope: !588, file: !589, line: 263, baseType: !412, size: 64, offset: 1088)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_state_change_cnd", scope: !588, file: !589, line: 267, baseType: !519, size: 384, offset: 1152)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_state_change_lock", scope: !588, file: !589, line: 268, baseType: !509, size: 320, offset: 1536)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_state_change_version", scope: !588, file: !589, line: 269, baseType: !126, size: 32, offset: 1856)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "rk_broker_state_change_waiters", scope: !588, file: !589, line: 272, baseType: !599, size: 320, offset: 1920)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "rk_topics", scope: !588, file: !589, line: 274, baseType: !627, size: 128, offset: 2240)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 274, size: 128, elements: !628)
!628 = !{!629, !630}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !627, file: !589, line: 274, baseType: !309, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !627, file: !589, line: 274, baseType: !311, size: 64, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "rk_topic_cnt", scope: !588, file: !589, line: 275, baseType: !126, size: 32, offset: 2368)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "rk_cgrp", scope: !588, file: !589, line: 277, baseType: !633, size: 64, offset: 2432)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_cgrp_s", file: !635, line: 54, size: 6464, elements: !636)
!635 = !DIFile(filename: "./rdkafka_cgrp.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "2b68c78241eab0ca09ed26ee92e4446a")
!636 = !{!637, !640, !641, !642, !643, !653, !654, !666, !720, !721, !722, !723, !724, !732, !733, !734, !735, !736, !737, !742, !743, !744, !857, !858, !859, !860, !861, !865, !866, !868, !869, !870, !871, !872, !873, !874, !875, !876, !911, !912, !913, !916, !917, !918}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_group_id", scope: !634, file: !635, line: 55, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !359)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_member_id", scope: !634, file: !635, line: 56, baseType: !358, size: 64, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_group_instance_id", scope: !634, file: !635, line: 57, baseType: !358, size: 64, offset: 128)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_client_id", scope: !634, file: !635, line: 58, baseType: !638, size: 64, offset: 192)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_state", scope: !634, file: !635, line: 81, baseType: !644, size: 32, offset: 256)
!644 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !634, file: !635, line: 60, baseType: !59, size: 32, elements: !645)
!645 = !{!646, !647, !648, !649, !650, !651, !652}
!646 = !DIEnumerator(name: "RD_KAFKA_CGRP_STATE_INIT", value: 0)
!647 = !DIEnumerator(name: "RD_KAFKA_CGRP_STATE_TERM", value: 1)
!648 = !DIEnumerator(name: "RD_KAFKA_CGRP_STATE_QUERY_COORD", value: 2)
!649 = !DIEnumerator(name: "RD_KAFKA_CGRP_STATE_WAIT_COORD", value: 3)
!650 = !DIEnumerator(name: "RD_KAFKA_CGRP_STATE_WAIT_BROKER", value: 4)
!651 = !DIEnumerator(name: "RD_KAFKA_CGRP_STATE_WAIT_BROKER_TRANSPORT", value: 5)
!652 = !DIEnumerator(name: "RD_KAFKA_CGRP_STATE_UP", value: 6)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_ts_statechange", scope: !634, file: !635, line: 82, baseType: !487, size: 64, offset: 320)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_join_state", scope: !634, file: !635, line: 116, baseType: !655, size: 32, offset: 384)
!655 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !634, file: !635, line: 86, baseType: !59, size: 32, elements: !656)
!656 = !{!657, !658, !659, !660, !661, !662, !663, !664, !665}
!657 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_INIT", value: 0)
!658 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_WAIT_JOIN", value: 1)
!659 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_WAIT_METADATA", value: 2)
!660 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_WAIT_SYNC", value: 3)
!661 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_WAIT_ASSIGN_CALL", value: 4)
!662 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_WAIT_UNASSIGN_CALL", value: 5)
!663 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_WAIT_UNASSIGN_TO_COMPLETE", value: 6)
!664 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_WAIT_INCR_UNASSIGN_TO_COMPLETE", value: 7)
!665 = !DIEnumerator(name: "RD_KAFKA_CGRP_JOIN_STATE_STEADY", value: 8)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_group_leader", scope: !634, file: !635, line: 122, baseType: !667, size: 128, offset: 448)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !635, line: 119, size: 128, elements: !668)
!668 = !{!669, !719}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !667, file: !635, line: 120, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_group_member_t", file: !672, line: 75, baseType: !673)
!672 = !DIFile(filename: "./rdkafka_assignor.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "2b1454e6fb5a6e2c8b60be30c855c60d")
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_group_member_s", file: !672, line: 50, size: 896, elements: !674)
!674 = !{!675, !697, !698, !699, !700, !701, !702, !716, !717, !718}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_subscription", scope: !673, file: !672, line: 52, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_topic_partition_list_t", file: !125, line: 953, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_topic_partition_list_s", file: !125, line: 949, size: 128, elements: !679)
!679 = !{!680, !681, !682}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !678, file: !125, line: 950, baseType: !126, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !678, file: !125, line: 951, baseType: !126, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !678, file: !125, line: 952, baseType: !683, size: 64, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_topic_partition_t", file: !125, line: 910, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_topic_partition_s", file: !125, line: 898, size: 512, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !694, !695, !696}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "topic", scope: !685, file: !125, line: 899, baseType: !559, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !685, file: !125, line: 900, baseType: !320, size: 32, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !685, file: !125, line: 901, baseType: !489, size: 64, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !685, file: !125, line: 902, baseType: !607, size: 64, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_size", scope: !685, file: !125, line: 903, baseType: !692, size: 64, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !693, line: 70, baseType: !349)
!693 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!694 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !685, file: !125, line: 904, baseType: !607, size: 64, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !685, file: !125, line: 905, baseType: !550, size: 32, offset: 384)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !685, file: !125, line: 906, baseType: !607, size: 64, offset: 448)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_assignment", scope: !673, file: !672, line: 55, baseType: !676, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_owned", scope: !673, file: !672, line: 59, baseType: !676, size: 64, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_eligible", scope: !673, file: !672, line: 62, baseType: !599, size: 320, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_member_id", scope: !673, file: !672, line: 64, baseType: !358, size: 64, offset: 512)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_group_instance_id", scope: !673, file: !672, line: 66, baseType: !358, size: 64, offset: 576)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_userdata", scope: !673, file: !672, line: 68, baseType: !703, size: 64, offset: 640)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafkap_bytes_t", file: !360, line: 382, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafkap_bytes_s", file: !360, line: 376, size: 192, elements: !706)
!706 = !{!707, !708, !711}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !705, file: !360, line: 378, baseType: !320, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !705, file: !360, line: 379, baseType: !709, size: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !705, file: !360, line: 381, baseType: !712, size: 8, offset: 128)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 8, elements: !714)
!713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!714 = !{!715}
!715 = !DISubrange(count: 1)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_member_metadata", scope: !673, file: !672, line: 70, baseType: !703, size: 64, offset: 704)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_generation", scope: !673, file: !672, line: 72, baseType: !126, size: 32, offset: 768)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "rkgm_rack_id", scope: !673, file: !672, line: 74, baseType: !358, size: 64, offset: 832)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "member_cnt", scope: !667, file: !635, line: 121, baseType: !126, size: 32, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_q", scope: !634, file: !635, line: 124, baseType: !503, size: 64, offset: 576)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_ops", scope: !634, file: !635, line: 125, baseType: !503, size: 64, offset: 640)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_wait_coord_q", scope: !634, file: !635, line: 126, baseType: !503, size: 64, offset: 704)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_flags", scope: !634, file: !635, line: 127, baseType: !126, size: 32, offset: 768)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_coord_query_intvl", scope: !634, file: !635, line: 164, baseType: !725, size: 192, offset: 832)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_interval_t", file: !726, line: 38, baseType: !727)
!726 = !DIFile(filename: "./rdinterval.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "885947ace5d6d470618d41d32f3ee275")
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_interval_s", file: !726, line: 34, size: 192, elements: !728)
!728 = !{!729, !730, !731}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ri_ts_last", scope: !727, file: !726, line: 35, baseType: !487, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "ri_fixed", scope: !727, file: !726, line: 36, baseType: !487, size: 64, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ri_backoff", scope: !727, file: !726, line: 37, baseType: !126, size: 32, offset: 128)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_heartbeat_intvl", scope: !634, file: !635, line: 165, baseType: !725, size: 192, offset: 1024)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_join_intvl", scope: !634, file: !635, line: 166, baseType: !725, size: 192, offset: 1216)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_timeout_scan_intvl", scope: !634, file: !635, line: 167, baseType: !725, size: 192, offset: 1408)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_ts_session_timeout", scope: !634, file: !635, line: 169, baseType: !487, size: 64, offset: 1600)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_last_heartbeat_err", scope: !634, file: !635, line: 175, baseType: !550, size: 32, offset: 1664)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_topics", scope: !634, file: !635, line: 178, baseType: !738, size: 128, offset: 1728)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !635, line: 178, size: 128, elements: !739)
!739 = !{!740, !741}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !738, file: !635, line: 178, baseType: !309, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !738, file: !635, line: 178, baseType: !311, size: 64, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_toppars", scope: !634, file: !635, line: 180, baseType: !599, size: 320, offset: 1856)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_generation_id", scope: !634, file: !635, line: 182, baseType: !320, size: 32, offset: 2176)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_assignor", scope: !634, file: !635, line: 184, baseType: !745, size: 64, offset: 2240)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_assignor_t", file: !672, line: 141, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_assignor_s", file: !672, line: 98, size: 640, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !760, !828, !836, !851, !852, !856}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_protocol_type", scope: !747, file: !672, line: 99, baseType: !358, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_protocol_name", scope: !747, file: !672, line: 100, baseType: !358, size: 64, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_enabled", scope: !747, file: !672, line: 102, baseType: !126, size: 32, offset: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_index", scope: !747, file: !672, line: 105, baseType: !126, size: 32, offset: 160)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_protocol", scope: !747, file: !672, line: 107, baseType: !754, size: 32, offset: 192)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_rebalance_protocol_t", file: !672, line: 46, baseType: !755)
!755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_rebalance_protocol_t", file: !672, line: 39, baseType: !59, size: 32, elements: !756)
!756 = !{!757, !758, !759}
!757 = !DIEnumerator(name: "RD_KAFKA_REBALANCE_PROTOCOL_NONE", value: 0)
!758 = !DIEnumerator(name: "RD_KAFKA_REBALANCE_PROTOCOL_EAGER", value: 1)
!759 = !DIEnumerator(name: "RD_KAFKA_REBALANCE_PROTOCOL_COOPERATIVE", value: 2)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_assign_cb", scope: !747, file: !672, line: 109, baseType: !761, size: 64, offset: 256)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!550, !586, !764, !365, !766, !670, !692, !801, !692, !559, !692, !607}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_metadata_t", file: !125, line: 4902, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata", file: !125, line: 4893, size: 384, elements: !770)
!770 = !{!771, !772, !779, !780, !799, !800}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "broker_cnt", scope: !769, file: !125, line: 4894, baseType: !126, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "brokers", scope: !769, file: !125, line: 4895, baseType: !773, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_broker", file: !125, line: 4860, size: 192, elements: !775)
!775 = !{!776, !777, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !774, file: !125, line: 4861, baseType: !320, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !774, file: !125, line: 4862, baseType: !559, size: 64, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !774, file: !125, line: 4863, baseType: !126, size: 32, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "topic_cnt", scope: !769, file: !125, line: 4897, baseType: !126, size: 32, offset: 128)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "topics", scope: !769, file: !125, line: 4898, baseType: !781, size: 64, offset: 192)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_topic", file: !125, line: 4882, size: 256, elements: !783)
!783 = !{!784, !785, !786, !798}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "topic", scope: !782, file: !125, line: 4883, baseType: !559, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "partition_cnt", scope: !782, file: !125, line: 4884, baseType: !126, size: 32, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !782, file: !125, line: 4885, baseType: !787, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_partition", file: !125, line: 4869, size: 320, elements: !789)
!789 = !{!790, !791, !792, !793, !794, !796, !797}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !788, file: !125, line: 4870, baseType: !320, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !788, file: !125, line: 4871, baseType: !550, size: 32, offset: 32)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !788, file: !125, line: 4872, baseType: !320, size: 32, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "replica_cnt", scope: !788, file: !125, line: 4873, baseType: !126, size: 32, offset: 96)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "replicas", scope: !788, file: !125, line: 4874, baseType: !795, size: 64, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "isr_cnt", scope: !788, file: !125, line: 4875, baseType: !126, size: 32, offset: 192)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "isrs", scope: !788, file: !125, line: 4876, baseType: !795, size: 64, offset: 256)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !782, file: !125, line: 4886, baseType: !550, size: 32, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "orig_broker_id", scope: !769, file: !125, line: 4900, baseType: !320, size: 32, offset: 256)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "orig_broker_name", scope: !769, file: !125, line: 4901, baseType: !559, size: 64, offset: 320)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_assignor_topic_t", file: !672, line: 92, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_assignor_topic_s", file: !672, line: 88, size: 448, elements: !805)
!805 = !{!806, !810, !827}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !804, file: !672, line: 89, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_metadata_topic_t", file: !125, line: 4887, baseType: !782)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_internal", scope: !804, file: !672, line: 90, baseType: !811, size: 64, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_metadata_topic_internal_t", file: !814, line: 57, baseType: !815)
!814 = !DIFile(filename: "./rdkafka_metadata.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "a780d84ab706ab296dd16c1531a51d66")
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_topic_internal_s", file: !814, line: 52, size: 64, elements: !816)
!816 = !{!817}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !815, file: !814, line: 56, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_metadata_partition_internal_t", file: !814, line: 47, baseType: !820)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_partition_internal_s", file: !814, line: 38, size: 192, elements: !821)
!821 = !{!822, !823, !824, !826}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !820, file: !814, line: 40, baseType: !320, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "leader_epoch", scope: !820, file: !814, line: 42, baseType: !320, size: 32, offset: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "racks", scope: !820, file: !814, line: 44, baseType: !825, size: 64, offset: 64)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "racks_cnt", scope: !820, file: !814, line: 46, baseType: !692, size: 64, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !804, file: !672, line: 91, baseType: !599, size: 320, offset: 128)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_get_metadata_cb", scope: !747, file: !672, line: 122, baseType: !829, size: 64, offset: 320)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{!703, !764, !607, !832, !834, !638}
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !599)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !677)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_on_assignment_cb", scope: !747, file: !672, line: 129, baseType: !837, size: 64, offset: 384)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !764, !606, !834, !840, !842}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_consumer_group_metadata_t", file: !125, line: 260, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_consumer_group_metadata_s", file: !635, line: 361, size: 256, elements: !846)
!846 = !{!847, !848, !849, !850}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !845, file: !635, line: 362, baseType: !559, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "generation_id", scope: !845, file: !635, line: 363, baseType: !320, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "member_id", scope: !845, file: !635, line: 364, baseType: !559, size: 64, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "group_instance_id", scope: !845, file: !635, line: 365, baseType: !559, size: 64, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_destroy_state_cb", scope: !747, file: !672, line: 136, baseType: !609, size: 64, offset: 448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_unittest", scope: !747, file: !672, line: 138, baseType: !853, size: 64, offset: 512)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{!126}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "rkas_opaque", scope: !747, file: !672, line: 140, baseType: !607, size: 64, offset: 576)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_assignor_state", scope: !634, file: !635, line: 187, baseType: !607, size: 64, offset: 2304)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_coord_id", scope: !634, file: !635, line: 190, baseType: !320, size: 32, offset: 2368)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_curr_coord", scope: !634, file: !635, line: 193, baseType: !412, size: 64, offset: 2432)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_coord", scope: !634, file: !635, line: 199, baseType: !412, size: 64, offset: 2496)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_wait_resp", scope: !634, file: !635, line: 204, baseType: !862, size: 16, offset: 2560)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !321, line: 25, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !323, line: 39, baseType: !864)
!864 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_subscription", scope: !634, file: !635, line: 212, baseType: !676, size: 64, offset: 2624)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_subscribed_topics", scope: !634, file: !635, line: 215, baseType: !867, size: 64, offset: 2688)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_errored_topics", scope: !634, file: !635, line: 217, baseType: !676, size: 64, offset: 2752)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_next_subscription", scope: !634, file: !635, line: 222, baseType: !676, size: 64, offset: 2816)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_next_unsubscribe", scope: !634, file: !635, line: 227, baseType: !561, size: 8, offset: 2880)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_assignment_lost", scope: !634, file: !635, line: 230, baseType: !315, size: 32, offset: 2912)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_group_assignment", scope: !634, file: !635, line: 252, baseType: !676, size: 64, offset: 2944)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_rebalance_incr_assignment", scope: !634, file: !635, line: 256, baseType: !676, size: 64, offset: 3008)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_rebalance_rejoin", scope: !634, file: !635, line: 260, baseType: !561, size: 8, offset: 3072)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_last_err", scope: !634, file: !635, line: 262, baseType: !550, size: 32, offset: 3104)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_offset_commit_tmr", scope: !634, file: !635, line: 267, baseType: !877, size: 448, offset: 3136)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_timer_t", file: !878, line: 65, baseType: !879)
!878 = !DIFile(filename: "./rdkafka_timer.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "f099f0733e15d490f97c900703ac9bee")
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_timer_s", file: !878, line: 56, size: 448, elements: !880)
!880 = !{!881, !888, !889, !890, !891, !910}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "rtmr_link", scope: !879, file: !878, line: 57, baseType: !882, size: 128)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !879, file: !878, line: 57, size: 128, elements: !883)
!883 = !{!884, !886}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !882, file: !878, line: 57, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !882, file: !878, line: 57, baseType: !887, size: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rtmr_next", scope: !879, file: !878, line: 59, baseType: !487, size: 64, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "rtmr_interval", scope: !879, file: !878, line: 60, baseType: !487, size: 64, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "rtmr_oneshot", scope: !879, file: !878, line: 61, baseType: !561, size: 8, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rtmr_callback", scope: !879, file: !878, line: 63, baseType: !892, size: 64, offset: 320)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !895, !607}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_timers_t", file: !878, line: 53, baseType: !897)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_timers_s", file: !878, line: 37, size: 1024, elements: !898)
!898 = !{!899, !904, !906, !907, !908, !909}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "rkts_timers", scope: !897, file: !878, line: 39, baseType: !900, size: 128)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !897, file: !878, line: 39, size: 128, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !900, file: !878, line: 39, baseType: !885, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !900, file: !878, line: 39, baseType: !887, size: 64, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "rkts_rk", scope: !897, file: !878, line: 41, baseType: !905, size: 64, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "rkts_lock", scope: !897, file: !878, line: 43, baseType: !509, size: 320, offset: 192)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "rkts_cond", scope: !897, file: !878, line: 44, baseType: !519, size: 384, offset: 512)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "rkts_wakeq", scope: !897, file: !878, line: 50, baseType: !529, size: 64, offset: 896)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "rkts_enabled", scope: !897, file: !878, line: 52, baseType: !126, size: 32, offset: 960)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "rtmr_arg", scope: !879, file: !878, line: 64, baseType: !607, size: 64, offset: 384)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_max_poll_interval_tmr", scope: !634, file: !635, line: 268, baseType: !877, size: 448, offset: 3584)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_rk", scope: !634, file: !635, line: 271, baseType: !586, size: 64, offset: 4032)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_reply_rko", scope: !634, file: !635, line: 273, baseType: !914, size: 64, offset: 4096)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_op_t", file: !58, line: 41, baseType: !535)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_ts_terminate", scope: !634, file: !635, line: 277, baseType: !487, size: 64, offset: 4160)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_terminated", scope: !634, file: !635, line: 281, baseType: !315, size: 32, offset: 4224)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg_c", scope: !634, file: !635, line: 294, baseType: !919, size: 2176, offset: 4288)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !635, line: 284, size: 2176, elements: !920)
!920 = !{!921, !922, !923, !927}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ts_rebalance", scope: !919, file: !635, line: 285, baseType: !487, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rebalance_cnt", scope: !919, file: !635, line: 287, baseType: !126, size: 32, offset: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "rebalance_reason", scope: !919, file: !635, line: 289, baseType: !924, size: 2048, offset: 96)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 2048, elements: !925)
!925 = !{!926}
!926 = !DISubrange(count: 256)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "assignment_size", scope: !919, file: !635, line: 291, baseType: !126, size: 32, offset: 2144)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "rk_conf", scope: !588, file: !589, line: 279, baseType: !929, size: 16128, offset: 2496)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_conf_t", file: !125, line: 254, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_conf_s", file: !499, line: 188, size: 16128, elements: !931)
!931 = !{!932, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !987, !993, !1068, !1113, !1114, !1115, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1176, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1247, !1248, !1249, !1255, !1256, !1257, !1264, !1265, !1266, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1281, !1299, !1304, !1310, !1311, !1312, !1313, !1314, !1315, !1319, !1323, !1327, !1331, !1342, !1346, !1353, !1376, !1382, !1383, !1384, !1388, !1393, !1400, !1401, !1402}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !930, file: !499, line: 189, baseType: !933, size: 2112)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_anyconf_hdr", file: !499, line: 176, size: 2112, elements: !934)
!934 = !{!935}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !933, file: !499, line: 177, baseType: !936, size: 2112)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 2112, elements: !939)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !450, line: 27, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !323, line: 45, baseType: !349)
!939 = !{!940}
!940 = !DISubrange(count: 33)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_events", scope: !930, file: !499, line: 194, baseType: !126, size: 32, offset: 2112)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "max_msg_size", scope: !930, file: !499, line: 195, baseType: !126, size: 32, offset: 2144)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "msg_copy_max_size", scope: !930, file: !499, line: 196, baseType: !126, size: 32, offset: 2176)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "recv_max_msg_size", scope: !930, file: !499, line: 197, baseType: !126, size: 32, offset: 2208)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "max_inflight", scope: !930, file: !499, line: 198, baseType: !126, size: 32, offset: 2240)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_request_timeout_ms", scope: !930, file: !499, line: 199, baseType: !126, size: 32, offset: 2272)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_refresh_interval_ms", scope: !930, file: !499, line: 200, baseType: !126, size: 32, offset: 2304)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_refresh_fast_cnt", scope: !930, file: !499, line: 201, baseType: !126, size: 32, offset: 2336)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_refresh_fast_interval_ms", scope: !930, file: !499, line: 202, baseType: !126, size: 32, offset: 2368)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_refresh_sparse", scope: !930, file: !499, line: 203, baseType: !126, size: 32, offset: 2400)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_max_age_ms", scope: !930, file: !499, line: 204, baseType: !126, size: 32, offset: 2432)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_propagation_max_ms", scope: !930, file: !499, line: 205, baseType: !126, size: 32, offset: 2464)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !930, file: !499, line: 206, baseType: !126, size: 32, offset: 2496)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "broker_addr_ttl", scope: !930, file: !499, line: 207, baseType: !126, size: 32, offset: 2528)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "broker_addr_family", scope: !930, file: !499, line: 208, baseType: !126, size: 32, offset: 2560)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "socket_timeout_ms", scope: !930, file: !499, line: 209, baseType: !126, size: 32, offset: 2592)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "socket_blocking_max_ms", scope: !930, file: !499, line: 210, baseType: !126, size: 32, offset: 2624)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "socket_sndbuf_size", scope: !930, file: !499, line: 211, baseType: !126, size: 32, offset: 2656)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "socket_rcvbuf_size", scope: !930, file: !499, line: 212, baseType: !126, size: 32, offset: 2688)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "socket_keepalive", scope: !930, file: !499, line: 213, baseType: !126, size: 32, offset: 2720)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "socket_nagle_disable", scope: !930, file: !499, line: 214, baseType: !126, size: 32, offset: 2752)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "socket_max_fails", scope: !930, file: !499, line: 215, baseType: !126, size: 32, offset: 2784)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "client_id_str", scope: !930, file: !499, line: 216, baseType: !559, size: 64, offset: 2816)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "brokerlist", scope: !930, file: !499, line: 217, baseType: !559, size: 64, offset: 2880)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "stats_interval_ms", scope: !930, file: !499, line: 218, baseType: !126, size: 32, offset: 2944)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "term_sig", scope: !930, file: !499, line: 219, baseType: !126, size: 32, offset: 2976)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "reconnect_backoff_ms", scope: !930, file: !499, line: 220, baseType: !126, size: 32, offset: 3008)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "reconnect_backoff_max_ms", scope: !930, file: !499, line: 221, baseType: !126, size: 32, offset: 3040)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "reconnect_jitter_ms", scope: !930, file: !499, line: 222, baseType: !126, size: 32, offset: 3072)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "socket_connection_setup_timeout_ms", scope: !930, file: !499, line: 223, baseType: !126, size: 32, offset: 3104)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "connections_max_idle_ms", scope: !930, file: !499, line: 224, baseType: !126, size: 32, offset: 3136)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_connections", scope: !930, file: !499, line: 225, baseType: !126, size: 32, offset: 3168)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_connect_intvl", scope: !930, file: !499, line: 226, baseType: !126, size: 32, offset: 3200)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "api_version_request", scope: !930, file: !499, line: 227, baseType: !126, size: 32, offset: 3232)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "api_version_request_timeout_ms", scope: !930, file: !499, line: 228, baseType: !126, size: 32, offset: 3264)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "api_version_fallback_ms", scope: !930, file: !499, line: 229, baseType: !126, size: 32, offset: 3296)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "broker_version_fallback", scope: !930, file: !499, line: 230, baseType: !559, size: 64, offset: 3328)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "security_protocol", scope: !930, file: !499, line: 231, baseType: !979, size: 32, offset: 3392)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_secproto_t", file: !499, line: 99, baseType: !980)
!980 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 93, baseType: !59, size: 32, elements: !981)
!981 = !{!982, !983, !984, !985, !986}
!982 = !DIEnumerator(name: "RD_KAFKA_PROTO_PLAINTEXT", value: 0)
!983 = !DIEnumerator(name: "RD_KAFKA_PROTO_SSL", value: 1)
!984 = !DIEnumerator(name: "RD_KAFKA_PROTO_SASL_PLAINTEXT", value: 2)
!985 = !DIEnumerator(name: "RD_KAFKA_PROTO_SASL_SSL", value: 3)
!986 = !DIEnumerator(name: "RD_KAFKA_PROTO_NUM", value: 4)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "client_dns_lookup", scope: !930, file: !499, line: 232, baseType: !988, size: 32, offset: 3424)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_client_dns_lookup_t", file: !499, line: 164, baseType: !989)
!989 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 161, baseType: !59, size: 32, elements: !990)
!990 = !{!991, !992}
!991 = !DIEnumerator(name: "RD_KAFKA_USE_ALL_DNS_IPS", value: 0)
!992 = !DIEnumerator(name: "RD_KAFKA_RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY", value: 1)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !930, file: !499, line: 276, baseType: !994, size: 1920, offset: 3456)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 234, size: 1920, elements: !995)
!995 = !{!996, !1001, !1002, !1003, !1004, !1005, !1006, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !994, file: !499, line: 236, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CTX", file: !999, line: 185, baseType: !1000)
!999 = !DIFile(filename: "/usr/include/openssl/types.h", directory: "", checksumkind: CSK_MD5, checksum: "44f1236065e4ee65cf4cd545c3e12ab9")
!1000 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_ctx_st", file: !999, line: 185, flags: DIFlagFwdDecl)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_suites", scope: !994, file: !499, line: 238, baseType: !559, size: 64, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "curves_list", scope: !994, file: !499, line: 239, baseType: !559, size: 64, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "sigalgs_list", scope: !994, file: !499, line: 240, baseType: !559, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "key_location", scope: !994, file: !499, line: 241, baseType: !559, size: 64, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "key_pem", scope: !994, file: !499, line: 242, baseType: !559, size: 64, offset: 320)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !994, file: !499, line: 243, baseType: !1007, size: 64, offset: 384)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_cert_t", file: !1009, line: 50, baseType: !1010)
!1009 = !DIFile(filename: "./rdkafka_cert.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "287ae34ad089f1b1c1c5c6ec72f688f1")
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_cert_s", file: !1009, line: 41, size: 320, elements: !1011)
!1011 = !{!1012, !1020, !1028, !1029, !1033, !1037}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1010, file: !1009, line: 42, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_cert_type_t", file: !125, line: 2388, baseType: !1014)
!1014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_cert_type_t", file: !125, line: 2383, baseType: !59, size: 32, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019}
!1016 = !DIEnumerator(name: "RD_KAFKA_CERT_PUBLIC_KEY", value: 0)
!1017 = !DIEnumerator(name: "RD_KAFKA_CERT_PRIVATE_KEY", value: 1)
!1018 = !DIEnumerator(name: "RD_KAFKA_CERT_CA", value: 2)
!1019 = !DIEnumerator(name: "RD_KAFKA_CERT__CNT", value: 3)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1010, file: !1009, line: 43, baseType: !1021, size: 32, offset: 32)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_cert_enc_t", file: !125, line: 2402, baseType: !1022)
!1022 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_cert_enc_t", file: !125, line: 2397, baseType: !59, size: 32, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027}
!1024 = !DIEnumerator(name: "RD_KAFKA_CERT_ENC_PKCS12", value: 0)
!1025 = !DIEnumerator(name: "RD_KAFKA_CERT_ENC_DER", value: 1)
!1026 = !DIEnumerator(name: "RD_KAFKA_CERT_ENC_PEM", value: 2)
!1027 = !DIEnumerator(name: "RD_KAFKA_CERT_ENC__CNT", value: 3)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1010, file: !1009, line: 44, baseType: !313, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "x509", scope: !1010, file: !1009, line: 46, baseType: !1030, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509", file: !999, line: 157, baseType: !1032)
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_st", file: !999, line: 157, flags: DIFlagFwdDecl)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pkey", scope: !1010, file: !1009, line: 47, baseType: !1034, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_PKEY", file: !999, line: 107, baseType: !1036)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_pkey_st", file: !999, line: 107, flags: DIFlagFwdDecl)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1010, file: !1009, line: 48, baseType: !1038, size: 64, offset: 256)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_STORE", file: !999, line: 164, baseType: !1040)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_store_st", file: !999, line: 164, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "key_password", scope: !994, file: !499, line: 244, baseType: !559, size: 64, offset: 448)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "cert_location", scope: !994, file: !499, line: 245, baseType: !559, size: 64, offset: 512)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "cert_pem", scope: !994, file: !499, line: 246, baseType: !559, size: 64, offset: 576)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "cert", scope: !994, file: !499, line: 247, baseType: !1007, size: 64, offset: 640)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "ca_location", scope: !994, file: !499, line: 248, baseType: !559, size: 64, offset: 704)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "ca_pem", scope: !994, file: !499, line: 249, baseType: !559, size: 64, offset: 768)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "ca", scope: !994, file: !499, line: 250, baseType: !1007, size: 64, offset: 832)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ca_cert_stores", scope: !994, file: !499, line: 252, baseType: !559, size: 64, offset: 896)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "crl_location", scope: !994, file: !499, line: 253, baseType: !559, size: 64, offset: 960)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !994, file: !499, line: 255, baseType: !1051, size: 64, offset: 1024)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENGINE", file: !999, line: 183, baseType: !1053)
!1053 = !DICompositeType(tag: DW_TAG_structure_type, name: "engine_st", file: !999, line: 183, flags: DIFlagFwdDecl)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "engine_location", scope: !994, file: !499, line: 257, baseType: !559, size: 64, offset: 1088)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "engine_id", scope: !994, file: !499, line: 258, baseType: !559, size: 64, offset: 1152)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "engine_callback_data", scope: !994, file: !499, line: 259, baseType: !607, size: 64, offset: 1216)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "providers", scope: !994, file: !499, line: 260, baseType: !559, size: 64, offset: 1280)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "loaded_providers", scope: !994, file: !499, line: 261, baseType: !599, size: 320, offset: 1344)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "keystore_location", scope: !994, file: !499, line: 262, baseType: !559, size: 64, offset: 1664)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "keystore_password", scope: !994, file: !499, line: 263, baseType: !559, size: 64, offset: 1728)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint_identification", scope: !994, file: !499, line: 264, baseType: !126, size: 32, offset: 1792)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "enable_verify", scope: !994, file: !499, line: 265, baseType: !126, size: 32, offset: 1824)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "cert_verify_cb", scope: !994, file: !499, line: 266, baseType: !1064, size: 64, offset: 1856)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!126, !586, !365, !320, !1067, !126, !365, !692, !559, !692, !607}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !930, file: !499, line: 317, baseType: !1069, size: 1664, offset: 5376)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 278, size: 1664, elements: !1070)
!1070 = !{!1071, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1091, !1092, !1093, !1094, !1095}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "provider", scope: !1069, file: !499, line: 279, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_sasl_provider", file: !499, line: 279, flags: DIFlagFwdDecl)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1069, file: !499, line: 280, baseType: !559, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "mechanisms", scope: !1069, file: !499, line: 281, baseType: !559, size: 64, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "service_name", scope: !1069, file: !499, line: 282, baseType: !559, size: 64, offset: 192)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "kinit_cmd", scope: !1069, file: !499, line: 283, baseType: !559, size: 64, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "keytab", scope: !1069, file: !499, line: 284, baseType: !559, size: 64, offset: 320)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "relogin_min_time", scope: !1069, file: !499, line: 285, baseType: !126, size: 32, offset: 384)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1069, file: !499, line: 288, baseType: !509, size: 320, offset: 448)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "username", scope: !1069, file: !499, line: 289, baseType: !559, size: 64, offset: 768)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "password", scope: !1069, file: !499, line: 290, baseType: !559, size: 64, offset: 832)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "scram_evp", scope: !1069, file: !499, line: 294, baseType: !709, size: 64, offset: 896)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "scram_H", scope: !1069, file: !499, line: 296, baseType: !1086, size: 64, offset: 960)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089, !1090, !692, !1089}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "scram_H_size", scope: !1069, file: !499, line: 300, baseType: !692, size: 64, offset: 1024)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "oauthbearer_config", scope: !1069, file: !499, line: 302, baseType: !559, size: 64, offset: 1088)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "enable_oauthbearer_unsecure_jwt", scope: !1069, file: !499, line: 303, baseType: !126, size: 32, offset: 1152)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "enable_callback_queue", scope: !1069, file: !499, line: 304, baseType: !126, size: 32, offset: 1184)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "oauthbearer", scope: !1069, file: !499, line: 316, baseType: !1096, size: 448, offset: 1216)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1069, file: !499, line: 305, size: 448, elements: !1097)
!1097 = !{!1098, !1104, !1105, !1106, !1107, !1108, !1109}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !1096, file: !499, line: 306, baseType: !1099, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_oauthbearer_method_t", file: !499, line: 154, baseType: !1100)
!1100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 151, baseType: !59, size: 32, elements: !1101)
!1101 = !{!1102, !1103}
!1102 = !DIEnumerator(name: "RD_KAFKA_SASL_OAUTHBEARER_METHOD_DEFAULT", value: 0)
!1103 = !DIEnumerator(name: "RD_KAFKA_SASL_OAUTHBEARER_METHOD_OIDC", value: 1)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "token_endpoint_url", scope: !1096, file: !499, line: 307, baseType: !559, size: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "client_id", scope: !1096, file: !499, line: 308, baseType: !559, size: 64, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "client_secret", scope: !1096, file: !499, line: 309, baseType: !559, size: 64, offset: 192)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "scope", scope: !1096, file: !499, line: 310, baseType: !559, size: 64, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "extensions_str", scope: !1096, file: !499, line: 311, baseType: !559, size: 64, offset: 320)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "token_refresh_cb", scope: !1096, file: !499, line: 313, baseType: !1110, size: 64, offset: 384)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !586, !365, !607}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "plugin_paths", scope: !930, file: !499, line: 319, baseType: !559, size: 64, offset: 7040)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "plugins", scope: !930, file: !499, line: 321, baseType: !599, size: 320, offset: 7104)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "interceptors", scope: !930, file: !499, line: 346, baseType: !1116, size: 4800, offset: 7424)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 325, size: 4800, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "on_conf_set", scope: !1116, file: !499, line: 327, baseType: !599, size: 320)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "on_conf_dup", scope: !1116, file: !499, line: 329, baseType: !599, size: 320, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "on_conf_destroy", scope: !1116, file: !499, line: 330, baseType: !599, size: 320, offset: 640)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "on_new", scope: !1116, file: !499, line: 331, baseType: !599, size: 320, offset: 960)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "on_destroy", scope: !1116, file: !499, line: 332, baseType: !599, size: 320, offset: 1280)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "on_send", scope: !1116, file: !499, line: 333, baseType: !599, size: 320, offset: 1600)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "on_acknowledgement", scope: !1116, file: !499, line: 334, baseType: !599, size: 320, offset: 1920)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "on_consume", scope: !1116, file: !499, line: 335, baseType: !599, size: 320, offset: 2240)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "on_commit", scope: !1116, file: !499, line: 336, baseType: !599, size: 320, offset: 2560)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "on_request_sent", scope: !1116, file: !499, line: 337, baseType: !599, size: 320, offset: 2880)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "on_response_received", scope: !1116, file: !499, line: 338, baseType: !599, size: 320, offset: 3200)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "on_thread_start", scope: !1116, file: !499, line: 339, baseType: !599, size: 320, offset: 3520)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "on_thread_exit", scope: !1116, file: !499, line: 340, baseType: !599, size: 320, offset: 3840)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "on_broker_state_change", scope: !1116, file: !499, line: 341, baseType: !599, size: 320, offset: 4160)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1116, file: !499, line: 344, baseType: !599, size: 320, offset: 4480)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "coord_query_intvl_ms", scope: !930, file: !499, line: 349, baseType: !126, size: 32, offset: 12224)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "max_poll_interval_ms", scope: !930, file: !499, line: 350, baseType: !126, size: 32, offset: 12256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_features", scope: !930, file: !499, line: 352, baseType: !126, size: 32, offset: 12288)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "check_crcs", scope: !930, file: !499, line: 356, baseType: !126, size: 32, offset: 12320)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "queued_min_msgs", scope: !930, file: !499, line: 357, baseType: !126, size: 32, offset: 12352)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "queued_max_msg_kbytes", scope: !930, file: !499, line: 358, baseType: !126, size: 32, offset: 12384)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "queued_max_msg_bytes", scope: !930, file: !499, line: 359, baseType: !489, size: 64, offset: 12416)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_wait_max_ms", scope: !930, file: !499, line: 360, baseType: !126, size: 32, offset: 12480)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_msg_max_bytes", scope: !930, file: !499, line: 361, baseType: !126, size: 32, offset: 12512)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_max_bytes", scope: !930, file: !499, line: 362, baseType: !126, size: 32, offset: 12544)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_min_bytes", scope: !930, file: !499, line: 363, baseType: !126, size: 32, offset: 12576)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_queue_backoff_ms", scope: !930, file: !499, line: 364, baseType: !126, size: 32, offset: 12608)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_error_backoff_ms", scope: !930, file: !499, line: 365, baseType: !126, size: 32, offset: 12640)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "group_id_str", scope: !930, file: !499, line: 366, baseType: !559, size: 64, offset: 12672)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "group_instance_id", scope: !930, file: !499, line: 367, baseType: !559, size: 64, offset: 12736)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "allow_auto_create_topics", scope: !930, file: !499, line: 368, baseType: !126, size: 32, offset: 12800)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "topic_blacklist", scope: !930, file: !499, line: 370, baseType: !1150, size: 64, offset: 12864)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_pattern_list_t", file: !1152, line: 43, baseType: !1153)
!1152 = !DIFile(filename: "./rdkafka_pattern.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "2b5847ec06a2a30a7d328d0456cc8064")
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_pattern_list_s", file: !1152, line: 40, size: 192, elements: !1154)
!1154 = !{!1155, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "rkpl_head", scope: !1153, file: !1152, line: 41, baseType: !1156, size: 128)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1153, file: !1152, line: 41, size: 128, elements: !1157)
!1157 = !{!1158, !1174}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !1156, file: !1152, line: 41, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_pattern_s", file: !1152, line: 33, size: 256, elements: !1161)
!1161 = !{!1162, !1168, !1173}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "rkpat_link", scope: !1160, file: !1152, line: 34, baseType: !1163, size: 128)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1160, file: !1152, line: 34, size: 128, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1163, file: !1152, line: 34, baseType: !1159, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1163, file: !1152, line: 34, baseType: !1167, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "rkpat_re", scope: !1160, file: !1152, line: 36, baseType: !1169, size: 64, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_regex_t", file: !1171, line: 31, baseType: !1172)
!1171 = !DIFile(filename: "./rdregex.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "3a46837aa3364f3753d18e142b8078e9")
!1172 = !DICompositeType(tag: DW_TAG_structure_type, name: "rd_regex_s", file: !1171, line: 31, flags: DIFlagFwdDecl)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "rkpat_orig", scope: !1160, file: !1152, line: 37, baseType: !559, size: 64, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !1156, file: !1152, line: 41, baseType: !1167, size: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "rkpl_orig", scope: !1153, file: !1152, line: 42, baseType: !559, size: 64, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "topic_conf", scope: !930, file: !499, line: 371, baseType: !1177, size: 64, offset: 12928)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_topic_conf_s", file: !499, line: 588, size: 2944, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183, !1184, !1190, !1191, !1192, !1193, !1197, !1208, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1233}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !1178, file: !499, line: 589, baseType: !933, size: 2112)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "required_acks", scope: !1178, file: !499, line: 591, baseType: !126, size: 32, offset: 2112)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "request_timeout_ms", scope: !1178, file: !499, line: 592, baseType: !320, size: 32, offset: 2144)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "message_timeout_ms", scope: !1178, file: !499, line: 593, baseType: !126, size: 32, offset: 2176)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "partitioner", scope: !1178, file: !499, line: 595, baseType: !1185, size: 64, offset: 2240)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!320, !1188, !709, !692, !320, !607, !607}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !407)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "partitioner_str", scope: !1178, file: !499, line: 601, baseType: !559, size: 64, offset: 2304)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "random_partitioner", scope: !1178, file: !499, line: 603, baseType: !561, size: 8, offset: 2368)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "queuing_strategy", scope: !1178, file: !499, line: 606, baseType: !126, size: 32, offset: 2400)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "msg_order_cmp", scope: !1178, file: !499, line: 607, baseType: !1194, size: 64, offset: 2432)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!126, !709, !709}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "compression_codec", scope: !1178, file: !499, line: 609, baseType: !1198, size: 32, offset: 2496)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_compression_t", file: !499, line: 59, baseType: !1199)
!1199 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 51, baseType: !59, size: 32, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207}
!1201 = !DIEnumerator(name: "RD_KAFKA_COMPRESSION_NONE", value: 0)
!1202 = !DIEnumerator(name: "RD_KAFKA_COMPRESSION_GZIP", value: 1)
!1203 = !DIEnumerator(name: "RD_KAFKA_COMPRESSION_SNAPPY", value: 2)
!1204 = !DIEnumerator(name: "RD_KAFKA_COMPRESSION_LZ4", value: 3)
!1205 = !DIEnumerator(name: "RD_KAFKA_COMPRESSION_ZSTD", value: 4)
!1206 = !DIEnumerator(name: "RD_KAFKA_COMPRESSION_INHERIT", value: 5)
!1207 = !DIEnumerator(name: "RD_KAFKA_COMPRESSION_NUM", value: 6)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1178, file: !499, line: 610, baseType: !1209, size: 32, offset: 2528)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_complevel_t", file: !499, line: 91, baseType: !1210)
!1210 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 83, baseType: !126, size: 32, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1212 = !DIEnumerator(name: "RD_KAFKA_COMPLEVEL_DEFAULT", value: -1)
!1213 = !DIEnumerator(name: "RD_KAFKA_COMPLEVEL_MIN", value: -1)
!1214 = !DIEnumerator(name: "RD_KAFKA_COMPLEVEL_GZIP_MAX", value: 9)
!1215 = !DIEnumerator(name: "RD_KAFKA_COMPLEVEL_LZ4_MAX", value: 12)
!1216 = !DIEnumerator(name: "RD_KAFKA_COMPLEVEL_SNAPPY_MAX", value: 0)
!1217 = !DIEnumerator(name: "RD_KAFKA_COMPLEVEL_ZSTD_MAX", value: 22)
!1218 = !DIEnumerator(name: "RD_KAFKA_COMPLEVEL_MAX", value: 12)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "produce_offset_report", scope: !1178, file: !499, line: 611, baseType: !126, size: 32, offset: 2560)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "consume_callback_max_msgs", scope: !1178, file: !499, line: 613, baseType: !126, size: 32, offset: 2592)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "auto_commit", scope: !1178, file: !499, line: 614, baseType: !126, size: 32, offset: 2624)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "auto_commit_interval_ms", scope: !1178, file: !499, line: 615, baseType: !126, size: 32, offset: 2656)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "auto_offset_reset", scope: !1178, file: !499, line: 616, baseType: !126, size: 32, offset: 2688)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "offset_store_path", scope: !1178, file: !499, line: 617, baseType: !559, size: 64, offset: 2752)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "offset_store_sync_interval_ms", scope: !1178, file: !499, line: 618, baseType: !126, size: 32, offset: 2816)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "offset_store_method", scope: !1178, file: !499, line: 620, baseType: !1227, size: 32, offset: 2848)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_offset_method_t", file: !499, line: 149, baseType: !1228)
!1228 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 145, baseType: !59, size: 32, elements: !1229)
!1229 = !{!1230, !1231, !1232}
!1230 = !DIEnumerator(name: "RD_KAFKA_OFFSET_METHOD_NONE", value: 0)
!1231 = !DIEnumerator(name: "RD_KAFKA_OFFSET_METHOD_FILE", value: 1)
!1232 = !DIEnumerator(name: "RD_KAFKA_OFFSET_METHOD_BROKER", value: 2)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1178, file: !499, line: 623, baseType: !607, size: 64, offset: 2880)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "enable_auto_commit", scope: !930, file: !499, line: 374, baseType: !126, size: 32, offset: 12992)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "enable_auto_offset_store", scope: !930, file: !499, line: 375, baseType: !126, size: 32, offset: 13024)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "auto_commit_interval_ms", scope: !930, file: !499, line: 376, baseType: !126, size: 32, offset: 13056)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "group_session_timeout_ms", scope: !930, file: !499, line: 377, baseType: !126, size: 32, offset: 13088)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "group_heartbeat_intvl_ms", scope: !930, file: !499, line: 378, baseType: !126, size: 32, offset: 13120)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "group_protocol_type", scope: !930, file: !499, line: 379, baseType: !358, size: 64, offset: 13184)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "partition_assignment_strategy", scope: !930, file: !499, line: 380, baseType: !559, size: 64, offset: 13248)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "partition_assignors", scope: !930, file: !499, line: 381, baseType: !599, size: 320, offset: 13312)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_assignor_cnt", scope: !930, file: !499, line: 382, baseType: !126, size: 32, offset: 13632)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "rebalance_cb", scope: !930, file: !499, line: 384, baseType: !1244, size: 64, offset: 13696)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{null, !586, !550, !676, !607}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "offset_commit_cb", scope: !930, file: !499, line: 389, baseType: !1244, size: 64, offset: 13760)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "offset_store_method", scope: !930, file: !499, line: 394, baseType: !1227, size: 32, offset: 13824)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "isolation_level", scope: !930, file: !499, line: 396, baseType: !1250, size: 32, offset: 13856)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_isolation_level_t", file: !360, line: 210, baseType: !1251)
!1251 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 207, baseType: !59, size: 32, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIEnumerator(name: "RD_KAFKA_READ_UNCOMMITTED", value: 0)
!1254 = !DIEnumerator(name: "RD_KAFKA_READ_COMMITTED", value: 1)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "enable_partition_eof", scope: !930, file: !499, line: 398, baseType: !126, size: 32, offset: 13888)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "client_rack", scope: !930, file: !499, line: 400, baseType: !358, size: 64, offset: 13952)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "eos", scope: !930, file: !499, line: 418, baseType: !1258, size: 192, offset: 14016)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 405, size: 192, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "idempotence", scope: !1258, file: !499, line: 409, baseType: !126, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "gapless", scope: !1258, file: !499, line: 410, baseType: !561, size: 8, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "transactional_id", scope: !1258, file: !499, line: 416, baseType: !559, size: 64, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_timeout_ms", scope: !1258, file: !499, line: 417, baseType: !126, size: 32, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "queue_buffering_max_msgs", scope: !930, file: !499, line: 419, baseType: !126, size: 32, offset: 14208)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "queue_buffering_max_kbytes", scope: !930, file: !499, line: 420, baseType: !126, size: 32, offset: 14240)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "buffering_max_ms_dbl", scope: !930, file: !499, line: 421, baseType: !1267, size: 64, offset: 14272)
!1267 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "buffering_max_us", scope: !930, file: !499, line: 422, baseType: !487, size: 64, offset: 14336)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "queue_backpressure_thres", scope: !930, file: !499, line: 423, baseType: !126, size: 32, offset: 14400)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "max_retries", scope: !930, file: !499, line: 424, baseType: !126, size: 32, offset: 14432)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "retry_backoff_ms", scope: !930, file: !499, line: 425, baseType: !126, size: 32, offset: 14464)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "batch_num_messages", scope: !930, file: !499, line: 426, baseType: !126, size: 32, offset: 14496)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "batch_size", scope: !930, file: !499, line: 427, baseType: !126, size: 32, offset: 14528)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "compression_codec", scope: !930, file: !499, line: 428, baseType: !1198, size: 32, offset: 14560)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "dr_err_only", scope: !930, file: !499, line: 429, baseType: !126, size: 32, offset: 14592)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "sticky_partition_linger_ms", scope: !930, file: !499, line: 430, baseType: !126, size: 32, offset: 14624)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "dr_cb", scope: !930, file: !499, line: 449, baseType: !1278, size: 64, offset: 14656)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{null, !586, !607, !692, !550, !607, !607}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "dr_msg_cb", scope: !930, file: !499, line: 456, baseType: !1282, size: 64, offset: 14720)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{null, !586, !1285, !607}
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_message_t", file: !125, line: 1468, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_message_s", file: !125, line: 1438, size: 576, elements: !1289)
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !1288, file: !125, line: 1439, baseType: !550, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "rkt", scope: !1288, file: !125, line: 1440, baseType: !406, size: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !1288, file: !125, line: 1441, baseType: !320, size: 32, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1288, file: !125, line: 1442, baseType: !607, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1288, file: !125, line: 1446, baseType: !692, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1288, file: !125, line: 1449, baseType: !607, size: 64, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !1288, file: !125, line: 1451, baseType: !692, size: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1288, file: !125, line: 1453, baseType: !489, size: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !1288, file: !125, line: 1461, baseType: !607, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "consume_cb", scope: !930, file: !499, line: 461, baseType: !1300, size: 64, offset: 14784)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{null, !1303, !607}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "log_cb", scope: !930, file: !499, line: 464, baseType: !1305, size: 64, offset: 14848)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{null, !1308, !126, !365, !365}
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !930, file: !499, line: 468, baseType: !126, size: 32, offset: 14912)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "log_queue", scope: !930, file: !499, line: 469, baseType: !126, size: 32, offset: 14944)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "log_thread_name", scope: !930, file: !499, line: 470, baseType: !126, size: 32, offset: 14976)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "log_connection_close", scope: !930, file: !499, line: 471, baseType: !126, size: 32, offset: 15008)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "enable_random_seed", scope: !930, file: !499, line: 474, baseType: !126, size: 32, offset: 15040)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "error_cb", scope: !930, file: !499, line: 477, baseType: !1316, size: 64, offset: 15104)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{null, !586, !126, !365, !607}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_cb", scope: !930, file: !499, line: 483, baseType: !1320, size: 64, offset: 15168)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{null, !586, !365, !320, !126, !607}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "stats_cb", scope: !930, file: !499, line: 490, baseType: !1324, size: 64, offset: 15232)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!126, !586, !559, !692, !607}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "socket_cb", scope: !930, file: !499, line: 496, baseType: !1328, size: 64, offset: 15296)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!126, !126, !126, !126, !607}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "connect_cb", scope: !930, file: !499, line: 499, baseType: !1332, size: 64, offset: 15360)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!126, !126, !1335, !126, !365, !607}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1338, line: 180, size: 128, elements: !1339)
!1338 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "", checksumkind: CSK_MD5, checksum: "e3826be048699664d9ef7b080f62f2e0")
!1339 = !{!1340, !1341}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1337, file: !1338, line: 182, baseType: !444, size: 16)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1337, file: !1338, line: 183, baseType: !21, size: 112, offset: 16)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "closesocket_cb", scope: !930, file: !499, line: 506, baseType: !1343, size: 64, offset: 15424)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!126, !126, !607}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !930, file: !499, line: 509, baseType: !1347, size: 64, offset: 15488)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!126, !365, !126, !1350, !607}
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !1351, line: 69, baseType: !1352)
!1351 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !323, line: 150, baseType: !59)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "resolve_cb", scope: !930, file: !499, line: 515, baseType: !1354, size: 64, offset: 15552)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!126, !365, !365, !1357, !1375, !607}
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !1360, line: 565, size: 384, elements: !1361)
!1360 = !DIFile(filename: "/usr/include/netdb.h", directory: "", checksumkind: CSK_MD5, checksum: "dd84cdc2a8dcb66c232d326e9ca8b469")
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1370, !1372, !1373}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !1359, file: !1360, line: 567, baseType: !126, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !1359, file: !1360, line: 568, baseType: !126, size: 32, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !1359, file: !1360, line: 569, baseType: !126, size: 32, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !1359, file: !1360, line: 570, baseType: !126, size: 32, offset: 96)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !1359, file: !1360, line: 571, baseType: !1367, size: 32, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !1368, line: 274, baseType: !1369)
!1368 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "ed37c2e6f30ba31a8b41e4d70547c39c")
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !323, line: 210, baseType: !59)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !1359, file: !1360, line: 572, baseType: !1371, size: 64, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !1359, file: !1360, line: 573, baseType: !559, size: 64, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !1359, file: !1360, line: 574, baseType: !1374, size: 64, offset: 320)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "background_event_cb", scope: !930, file: !499, line: 522, baseType: !1377, size: 64, offset: 15616)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !586, !1380, !607}
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_event_t", file: !125, line: 257, baseType: !535)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !930, file: !499, line: 528, baseType: !607, size: 64, offset: 15680)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !930, file: !499, line: 531, baseType: !126, size: 32, offset: 15744)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "admin", scope: !930, file: !499, line: 537, baseType: !1385, size: 32, offset: 15776)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 535, size: 32, elements: !1386)
!1386 = !{!1387}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "request_timeout_ms", scope: !1385, file: !499, line: 536, baseType: !126, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "mock", scope: !930, file: !499, line: 546, baseType: !1389, size: 64, offset: 15808)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 543, size: 64, elements: !1390)
!1390 = !{!1391, !1392}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "broker_cnt", scope: !1389, file: !499, line: 544, baseType: !126, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "broker_rtt", scope: !1389, file: !499, line: 545, baseType: !126, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "ut", scope: !930, file: !499, line: 558, baseType: !1394, size: 64, offset: 15872)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 551, size: 64, elements: !1395)
!1395 = !{!1396}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "handle_ProduceResponse", scope: !1394, file: !499, line: 553, baseType: !1397, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!550, !586, !320, !937, !550}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "sw_name", scope: !930, file: !499, line: 560, baseType: !559, size: 64, offset: 15936)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sw_version", scope: !930, file: !499, line: 561, baseType: !559, size: 64, offset: 16000)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "warn", scope: !930, file: !499, line: 567, baseType: !1403, size: 8, offset: 16064)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !499, line: 563, size: 8, elements: !1404)
!1404 = !{!1405}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "default_topic_conf_overwritten", scope: !1403, file: !499, line: 566, baseType: !561, size: 8)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "rk_logq", scope: !588, file: !589, line: 280, baseType: !503, size: 64, offset: 18624)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rk_name", scope: !588, file: !589, line: 281, baseType: !1408, size: 1024, offset: 18688)
!1408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1024, elements: !1409)
!1409 = !{!1410}
!1410 = !DISubrange(count: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "rk_client_id", scope: !588, file: !589, line: 282, baseType: !358, size: 64, offset: 19712)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rk_group_id", scope: !588, file: !589, line: 283, baseType: !358, size: 64, offset: 19776)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "rk_terminate", scope: !588, file: !589, line: 285, baseType: !315, size: 32, offset: 19840)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rk_lock", scope: !588, file: !589, line: 331, baseType: !325, size: 448, offset: 19904)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rk_type", scope: !588, file: !589, line: 332, baseType: !1416, size: 32, offset: 20352)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_type_t", file: !125, line: 212, baseType: !1417)
!1417 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_type_t", file: !125, line: 209, baseType: !59, size: 32, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIEnumerator(name: "RD_KAFKA_PRODUCER", value: 0)
!1420 = !DIEnumerator(name: "RD_KAFKA_CONSUMER", value: 1)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rk_tv_state_change", scope: !588, file: !589, line: 333, baseType: !1422, size: 128, offset: 20416)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1423, line: 8, size: 128, elements: !1424)
!1423 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "", checksumkind: CSK_MD5, checksum: "9b45d950050c215f216850b27bd1e8f3")
!1424 = !{!1425, !1427}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1422, file: !1423, line: 14, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !323, line: 160, baseType: !356)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1422, file: !1423, line: 15, baseType: !1428, size: 64, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !323, line: 162, baseType: !356)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "rk_ts_last_poll", scope: !588, file: !589, line: 335, baseType: !1430, size: 64, offset: 20544)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_atomic64_t", file: !316, line: 45, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 40, size: 64, elements: !1432)
!1432 = !{!1433}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1431, file: !316, line: 41, baseType: !489, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "rk_fatal", scope: !588, file: !589, line: 347, baseType: !1435, size: 192, offset: 20608)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 342, size: 192, elements: !1436)
!1436 = !{!1437, !1438, !1439}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !1435, file: !589, line: 343, baseType: !315, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "errstr", scope: !1435, file: !589, line: 344, baseType: !559, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !1435, file: !589, line: 345, baseType: !126, size: 32, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rk_last_throttle", scope: !588, file: !589, line: 349, baseType: !315, size: 32, offset: 20800)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "rk_ts_metadata", scope: !588, file: !589, line: 353, baseType: !487, size: 64, offset: 20864)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "rk_full_metadata", scope: !588, file: !589, line: 357, baseType: !1443, size: 64, offset: 20928)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_metadata_internal_t", file: !814, line: 84, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_internal_s", file: !814, line: 73, size: 512, elements: !1446)
!1446 = !{!1447, !1448, !1455}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1445, file: !814, line: 75, baseType: !768, size: 384)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "brokers", scope: !1445, file: !814, line: 81, baseType: !1449, size: 64, offset: 384)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_metadata_broker_internal_t", file: !814, line: 68, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_broker_internal_s", file: !814, line: 63, size: 128, elements: !1452)
!1452 = !{!1453, !1454}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1451, file: !814, line: 65, baseType: !320, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "rack_id", scope: !1451, file: !814, line: 67, baseType: !559, size: 64, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "topics", scope: !1445, file: !814, line: 83, baseType: !1456, size: 64, offset: 448)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "rk_ts_full_metadata", scope: !588, file: !589, line: 358, baseType: !487, size: 64, offset: 20992)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "rk_metadata_cache", scope: !588, file: !589, line: 359, baseType: !1459, size: 3136, offset: 21056)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_cache", file: !814, line: 220, size: 3136, elements: !1460)
!1460 = !{!1461, !1482, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_avl", scope: !1459, file: !814, line: 221, baseType: !1462, size: 640)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_avl_t", file: !1463, line: 79, baseType: !1464)
!1463 = !DIFile(filename: "./rdavl.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "ce6e114c3a66dc6774945126c5a25366")
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_avl_s", file: !1463, line: 72, size: 640, elements: !1465)
!1465 = !{!1466, !1478, !1480, !1481}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "ravl_root", scope: !1464, file: !1463, line: 73, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_avl_node_t", file: !1463, line: 59, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_avl_node_s", file: !1463, line: 51, size: 256, elements: !1470)
!1470 = !{!1471, !1476, !1477}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ran_p", scope: !1469, file: !1463, line: 52, baseType: !1472, size: 128)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1473, size: 128, elements: !1474)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1474 = !{!1475}
!1475 = !DISubrange(count: 2)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ran_height", scope: !1469, file: !1463, line: 53, baseType: !126, size: 32, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ran_elm", scope: !1469, file: !1463, line: 54, baseType: !607, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ravl_cmp", scope: !1464, file: !1463, line: 74, baseType: !1479, size: 64, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_avl_cmp_t", file: !1463, line: 66, baseType: !1194)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ravl_flags", scope: !1464, file: !1463, line: 75, baseType: !126, size: 32, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ravl_rwlock", scope: !1464, file: !1463, line: 78, baseType: !325, size: 448, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_expiry", scope: !1459, file: !814, line: 222, baseType: !1483, size: 128, offset: 640)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1459, file: !814, line: 222, size: 128, elements: !1484)
!1484 = !{!1485, !1500}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !1483, file: !814, line: 222, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_metadata_cache_entry", file: !814, line: 197, size: 832, elements: !1488)
!1488 = !{!1489, !1490, !1496, !1497, !1498, !1499}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rkmce_avlnode", scope: !1487, file: !814, line: 198, baseType: !1468, size: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "rkmce_link", scope: !1487, file: !814, line: 199, baseType: !1491, size: 128, offset: 256)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1487, file: !814, line: 199, size: 128, elements: !1492)
!1492 = !{!1493, !1494}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1491, file: !814, line: 199, baseType: !1486, size: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1491, file: !814, line: 199, baseType: !1495, size: 64, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "rkmce_ts_expires", scope: !1487, file: !814, line: 200, baseType: !487, size: 64, offset: 384)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "rkmce_ts_insert", scope: !1487, file: !814, line: 201, baseType: !487, size: 64, offset: 448)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "rkmce_mtopic", scope: !1487, file: !814, line: 204, baseType: !809, size: 256, offset: 512)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "rkmce_metadata_internal_topic", scope: !1487, file: !814, line: 206, baseType: !813, size: 64, offset: 768)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !1483, file: !814, line: 222, baseType: !1495, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_expiry_tmr", scope: !1459, file: !814, line: 223, baseType: !877, size: 448, offset: 768)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_cnt", scope: !1459, file: !814, line: 224, baseType: !126, size: 32, offset: 1216)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_observers", scope: !1459, file: !814, line: 227, baseType: !599, size: 320, offset: 1280)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_full_lock", scope: !1459, file: !814, line: 230, baseType: !509, size: 320, offset: 1600)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_full_topics_sent", scope: !1459, file: !814, line: 231, baseType: !126, size: 32, offset: 1920)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_full_brokers_sent", scope: !1459, file: !814, line: 234, baseType: !126, size: 32, offset: 1952)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_query_tmr", scope: !1459, file: !814, line: 239, baseType: !877, size: 448, offset: 1984)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_cnd", scope: !1459, file: !814, line: 241, baseType: !519, size: 384, offset: 2432)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "rkmc_cnd_lock", scope: !1459, file: !814, line: 242, baseType: !509, size: 320, offset: 2816)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "rk_clusterid", scope: !588, file: !589, line: 361, baseType: !559, size: 64, offset: 24192)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rk_controllerid", scope: !588, file: !589, line: 362, baseType: !320, size: 32, offset: 24256)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "rk_drmode", scope: !588, file: !589, line: 368, baseType: !1513, size: 32, offset: 24288)
!1513 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !588, file: !589, line: 365, baseType: !59, size: 32, elements: !1514)
!1514 = !{!1515, !1516, !1517}
!1515 = !DIEnumerator(name: "RD_KAFKA_DR_MODE_NONE", value: 0)
!1516 = !DIEnumerator(name: "RD_KAFKA_DR_MODE_CB", value: 1)
!1517 = !DIEnumerator(name: "RD_KAFKA_DR_MODE_EVENT", value: 2)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "rk_simple_cnt", scope: !588, file: !589, line: 374, baseType: !315, size: 32, offset: 24320)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "rk_eos", scope: !588, file: !589, line: 512, baseType: !1520, size: 4864, offset: 24384)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 381, size: 4864, elements: !1521)
!1521 = !{!1522, !1536, !1537, !1543, !1544, !1545, !1546, !1547, !1548, !1565, !1566, !1567, !1568, !1585, !1586, !1598, !1599, !1600, !1601, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "idemp_state", scope: !1520, file: !589, line: 385, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_idemp_state_t", file: !589, line: 164, baseType: !1524)
!1524 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !589, line: 144, baseType: !59, size: 32, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535}
!1526 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_INIT", value: 0)
!1527 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_TERM", value: 1)
!1528 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_FATAL_ERROR", value: 2)
!1529 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_REQ_PID", value: 3)
!1530 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_WAIT_TRANSPORT", value: 4)
!1531 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_WAIT_PID", value: 5)
!1532 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_ASSIGNED", value: 6)
!1533 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_DRAIN_RESET", value: 7)
!1534 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_DRAIN_BUMP", value: 8)
!1535 = !DIEnumerator(name: "RD_KAFKA_IDEMP_STATE_WAIT_TXN_ABORT", value: 9)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ts_idemp_state", scope: !1520, file: !589, line: 387, baseType: !487, size: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1520, file: !589, line: 388, baseType: !1538, size: 128, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_pid_t", file: !360, line: 581, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_pid_s", file: !360, line: 578, size: 128, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1539, file: !360, line: 579, baseType: !489, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "epoch", scope: !1539, file: !360, line: 580, baseType: !862, size: 16, offset: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "epoch_cnt", scope: !1520, file: !589, line: 389, baseType: !126, size: 32, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "inflight_toppar_cnt", scope: !1520, file: !589, line: 390, baseType: !315, size: 32, offset: 288)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "pid_tmr", scope: !1520, file: !589, line: 393, baseType: !877, size: 448, offset: 320)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "txn_may_enq", scope: !1520, file: !589, line: 402, baseType: !315, size: 32, offset: 768)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "transactional_id", scope: !1520, file: !589, line: 406, baseType: !358, size: 64, offset: 832)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "txn_state", scope: !1520, file: !589, line: 407, baseType: !1549, size: 32, offset: 896)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_txn_state_t", file: !589, line: 213, baseType: !1550)
!1550 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !589, line: 182, baseType: !59, size: 32, elements: !1551)
!1551 = !{!1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564}
!1552 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_INIT", value: 0)
!1553 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_WAIT_PID", value: 1)
!1554 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_READY_NOT_ACKED", value: 2)
!1555 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_READY", value: 3)
!1556 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_IN_TRANSACTION", value: 4)
!1557 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_BEGIN_COMMIT", value: 5)
!1558 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_COMMITTING_TRANSACTION", value: 6)
!1559 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_COMMIT_NOT_ACKED", value: 7)
!1560 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_BEGIN_ABORT", value: 8)
!1561 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_ABORTING_TRANSACTION", value: 9)
!1562 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_ABORT_NOT_ACKED", value: 10)
!1563 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_ABORTABLE_ERROR", value: 11)
!1564 = !DIEnumerator(name: "RD_KAFKA_TXN_STATE_FATAL_ERROR", value: 12)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ts_txn_state", scope: !1520, file: !589, line: 409, baseType: !487, size: 64, offset: 960)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "txn_coord", scope: !1520, file: !589, line: 411, baseType: !412, size: 64, offset: 1024)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "txn_curr_coord", scope: !1520, file: !589, line: 413, baseType: !412, size: 64, offset: 1088)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "txn_coord_mon", scope: !1520, file: !589, line: 418, baseType: !1569, size: 320, offset: 1152)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_broker_monitor_t", file: !416, line: 76, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_broker_monitor_s", file: !416, line: 67, size: 320, elements: !1571)
!1571 = !{!1572, !1579, !1580, !1581}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "rkbmon_link", scope: !1570, file: !416, line: 68, baseType: !1573, size: 128)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1570, file: !416, line: 68, size: 128, elements: !1574)
!1574 = !{!1575, !1577}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1573, file: !416, line: 68, baseType: !1576, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1573, file: !416, line: 68, baseType: !1578, size: 64, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "rkbmon_rkb", scope: !1570, file: !416, line: 69, baseType: !422, size: 64, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "rkbmon_q", scope: !1570, file: !416, line: 70, baseType: !503, size: 64, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "rkbmon_cb", scope: !1570, file: !416, line: 75, baseType: !1582, size: 64, offset: 256)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{null, !412}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "txn_requires_epoch_bump", scope: !1520, file: !589, line: 423, baseType: !561, size: 8, offset: 1472)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "txn_curr_api", scope: !1520, file: !589, line: 460, baseType: !1587, size: 1408, offset: 1536)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1520, file: !589, line: 433, size: 1408, elements: !1588)
!1588 = !{!1589, !1593, !1594, !1595, !1596, !1597}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1587, file: !589, line: 434, baseType: !1590, size: 512)
!1590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 512, elements: !1591)
!1591 = !{!1592}
!1592 = !DISubrange(count: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "calling", scope: !1587, file: !589, line: 439, baseType: !561, size: 8, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1587, file: !589, line: 445, baseType: !552, size: 64, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "has_result", scope: !1587, file: !589, line: 451, baseType: !561, size: 8, offset: 640)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "cnd", scope: !1587, file: !589, line: 455, baseType: !519, size: 384, offset: 704)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1587, file: !589, line: 458, baseType: !509, size: 320, offset: 1088)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "txn_req_cnt", scope: !1520, file: !589, line: 463, baseType: !126, size: 32, offset: 2944)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "txn_register_parts_tmr", scope: !1520, file: !589, line: 478, baseType: !877, size: 448, offset: 3008)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "txn_pending_lock", scope: !1520, file: !589, line: 481, baseType: !509, size: 320, offset: 3456)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "txn_pending_rktps", scope: !1520, file: !589, line: 484, baseType: !1602, size: 128, offset: 3776)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_toppar_tqhead_t", file: !371, line: 126, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_toppar_tqhead_s", file: !371, line: 125, size: 128, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !1603, file: !371, line: 125, baseType: !377, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !1603, file: !371, line: 125, baseType: !379, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "txn_waitresp_rktps", scope: !1520, file: !589, line: 487, baseType: !1602, size: 128, offset: 3904)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "txn_rktps", scope: !1520, file: !589, line: 490, baseType: !1602, size: 128, offset: 4032)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "txn_dr_fails", scope: !1520, file: !589, line: 496, baseType: !1430, size: 64, offset: 4160)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "txn_err", scope: !1520, file: !589, line: 499, baseType: !550, size: 32, offset: 4224)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "txn_errstr", scope: !1520, file: !589, line: 502, baseType: !559, size: 64, offset: 4288)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "txn_init_err", scope: !1520, file: !589, line: 505, baseType: !550, size: 32, offset: 4352)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "txn_wait_coord", scope: !1520, file: !589, line: 508, baseType: !561, size: 8, offset: 4384)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "txn_coord_tmr", scope: !1520, file: !589, line: 511, baseType: !877, size: 448, offset: 4416)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "rk_flushing", scope: !588, file: !589, line: 514, baseType: !315, size: 32, offset: 29248)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rk_consumer", scope: !588, file: !589, line: 530, baseType: !1617, size: 512, offset: 29312)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 522, size: 512, elements: !1618)
!1618 = !{!1619, !1620, !1632}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1617, file: !589, line: 525, baseType: !503, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "assignment", scope: !1617, file: !589, line: 527, baseType: !1621, size: 384, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_assignment_t", file: !1622, line: 54, baseType: !1623)
!1622 = !DIFile(filename: "./rdkafka_assignment.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "e886c08141ced5beb1589c3b662b6fc6")
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_assignment_s", file: !1622, line: 33, size: 384, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "all", scope: !1623, file: !1622, line: 35, baseType: !676, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1623, file: !1622, line: 37, baseType: !676, size: 64, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "queried", scope: !1623, file: !1622, line: 40, baseType: !676, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1623, file: !1622, line: 43, baseType: !676, size: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "started_cnt", scope: !1623, file: !1622, line: 45, baseType: !126, size: 32, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "wait_stop_cnt", scope: !1623, file: !1622, line: 47, baseType: !126, size: 32, offset: 288)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1623, file: !1622, line: 53, baseType: !489, size: 64, offset: 320)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "wait_commit_cnt", scope: !1617, file: !589, line: 529, baseType: !126, size: 32, offset: 448)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "rk_coord_cache", scope: !588, file: !589, line: 538, baseType: !1634, size: 256, offset: 29824)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_coord_cache_t", file: !1635, line: 58, baseType: !1636)
!1635 = !DIFile(filename: "./rdkafka_coord.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "c35b7f3912ef05daa48a5a9bc5b1dbfd")
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_coord_cache_s", file: !1635, line: 52, size: 256, elements: !1637)
!1637 = !{!1638, !1662, !1663}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "cc_entries", scope: !1636, file: !1635, line: 53, baseType: !1639, size: 128)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_coord_cache_head_t", file: !1635, line: 34, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_coord_cache_head_s", file: !1635, line: 33, size: 128, elements: !1641)
!1641 = !{!1642, !1661}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !1640, file: !1635, line: 33, baseType: !1643, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_coord_cache_entry_s", file: !1635, line: 39, size: 384, elements: !1645)
!1645 = !{!1646, !1652, !1658, !1659, !1660}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "cce_link", scope: !1644, file: !1635, line: 40, baseType: !1647, size: 128)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1644, file: !1635, line: 40, size: 128, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1647, file: !1635, line: 40, baseType: !1643, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1647, file: !1635, line: 40, baseType: !1651, size: 64, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "cce_coordtype", scope: !1644, file: !1635, line: 41, baseType: !1653, size: 32, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_coordtype_t", file: !360, line: 224, baseType: !1654)
!1654 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_coordtype_t", file: !360, line: 221, baseType: !59, size: 32, elements: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIEnumerator(name: "RD_KAFKA_COORD_GROUP", value: 0)
!1657 = !DIEnumerator(name: "RD_KAFKA_COORD_TXN", value: 1)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cce_coordkey", scope: !1644, file: !1635, line: 42, baseType: !559, size: 64, offset: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "cce_ts_used", scope: !1644, file: !1635, line: 44, baseType: !487, size: 64, offset: 256)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "cce_rkb", scope: !1644, file: !1635, line: 45, baseType: !412, size: 64, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !1640, file: !1635, line: 33, baseType: !1651, size: 64, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "cc_cnt", scope: !1636, file: !1635, line: 54, baseType: !126, size: 32, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "cc_expire_thres", scope: !1636, file: !1635, line: 55, baseType: !487, size: 64, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "rk_coord_reqs", scope: !588, file: !589, line: 541, baseType: !1665, size: 128, offset: 30080)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 540, size: 128, elements: !1666)
!1666 = !{!1667, !1911}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !1665, file: !589, line: 540, baseType: !1668, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_coord_req_s", file: !1635, line: 77, size: 1472, elements: !1670)
!1670 = !{!1671, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1905, !1906, !1907, !1908, !1909, !1910}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "creq_link", scope: !1669, file: !1635, line: 78, baseType: !1672, size: 128)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1669, file: !1635, line: 78, size: 128, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1672, file: !1635, line: 78, baseType: !1668, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1672, file: !1635, line: 78, baseType: !1676, size: 64, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "creq_coordtype", scope: !1669, file: !1635, line: 79, baseType: !1653, size: 32, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "creq_coordkey", scope: !1669, file: !1635, line: 80, baseType: !559, size: 64, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "creq_rko", scope: !1669, file: !1635, line: 82, baseType: !914, size: 64, offset: 256)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "creq_tmr", scope: !1669, file: !1635, line: 85, baseType: !877, size: 448, offset: 320)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "creq_ts_timeout", scope: !1669, file: !1635, line: 86, baseType: !487, size: 64, offset: 768)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "creq_query_intvl", scope: !1669, file: !1635, line: 90, baseType: !725, size: 192, offset: 832)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "creq_send_req_cb", scope: !1669, file: !1635, line: 92, baseType: !1684, size: 64, offset: 1024)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_send_req_cb_t", file: !414, line: 176, baseType: !1686)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!550, !412, !914, !569, !1688, !607}
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_resp_cb_t", file: !414, line: 164, baseType: !1690)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !586, !412, !550, !1692, !1692, !607}
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_buf_t", file: !360, line: 486, baseType: !1694)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_buf_s", file: !414, line: 228, size: 4096, elements: !1695)
!1695 = !{!1696, !1703, !1704, !1705, !1706, !1707, !1742, !1755, !1756, !1757, !1760, !1767, !1772, !1773, !1774, !1775, !1776, !1777, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1904}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_link", scope: !1694, file: !414, line: 229, baseType: !1697, size: 128)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !414, line: 229, size: 128, elements: !1698)
!1698 = !{!1699, !1701}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1697, file: !414, line: 229, baseType: !1700, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1697, file: !414, line: 229, baseType: !1702, size: 64, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_corrid", scope: !1694, file: !414, line: 231, baseType: !320, size: 32, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_ts_retry", scope: !1694, file: !414, line: 233, baseType: !487, size: 64, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_flags", scope: !1694, file: !414, line: 235, baseType: !126, size: 32, offset: 256)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_prio", scope: !1694, file: !414, line: 241, baseType: !566, size: 32, offset: 288)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_buf", scope: !1694, file: !414, line: 243, baseType: !1708, size: 640, offset: 320)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_buf_t", file: !1709, line: 108, baseType: !1710)
!1709 = !DIFile(filename: "./rdbuf.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "94f3069188287f306a0484a2ddd18100")
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_buf_s", file: !1709, line: 86, size: 640, elements: !1711)
!1711 = !{!1712, !1732, !1733, !1736, !1737, !1738, !1739, !1740, !1741}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_segments", scope: !1710, file: !1709, line: 87, baseType: !1713, size: 128)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_segment_head", file: !1709, line: 81, size: 128, elements: !1714)
!1714 = !{!1715, !1731}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !1713, file: !1709, line: 81, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_segment_s", file: !1709, line: 63, size: 512, elements: !1718)
!1718 = !{!1719, !1725, !1726, !1727, !1728, !1729, !1730}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "seg_link", scope: !1717, file: !1709, line: 64, baseType: !1720, size: 128)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1717, file: !1709, line: 64, size: 128, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1720, file: !1709, line: 64, baseType: !1716, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1720, file: !1709, line: 64, baseType: !1724, size: 64, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "seg_p", scope: !1717, file: !1709, line: 65, baseType: !559, size: 64, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "seg_of", scope: !1717, file: !1709, line: 66, baseType: !692, size: 64, offset: 192)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "seg_size", scope: !1717, file: !1709, line: 68, baseType: !692, size: 64, offset: 256)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "seg_absof", scope: !1717, file: !1709, line: 69, baseType: !692, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "seg_free", scope: !1717, file: !1709, line: 71, baseType: !609, size: 64, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "seg_flags", scope: !1717, file: !1709, line: 72, baseType: !126, size: 32, offset: 448)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !1713, file: !1709, line: 81, baseType: !1724, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_segment_cnt", scope: !1710, file: !1709, line: 88, baseType: !692, size: 64, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_wpos", scope: !1710, file: !1709, line: 90, baseType: !1734, size: 64, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_segment_t", file: !1709, line: 77, baseType: !1717)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_len", scope: !1710, file: !1709, line: 91, baseType: !692, size: 64, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_erased", scope: !1710, file: !1709, line: 92, baseType: !692, size: 64, offset: 320)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_size", scope: !1710, file: !1709, line: 100, baseType: !692, size: 64, offset: 384)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_extra", scope: !1710, file: !1709, line: 103, baseType: !559, size: 64, offset: 448)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_extra_len", scope: !1710, file: !1709, line: 106, baseType: !692, size: 64, offset: 512)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_extra_size", scope: !1710, file: !1709, line: 107, baseType: !692, size: 64, offset: 576)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_reader", scope: !1694, file: !414, line: 244, baseType: !1743, size: 320, offset: 960)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_slice_t", file: !1709, line: 123, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_slice_s", file: !1709, line: 115, size: 320, elements: !1745)
!1745 = !{!1746, !1749, !1752, !1753, !1754}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1744, file: !1709, line: 116, baseType: !1747, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1744, file: !1709, line: 117, baseType: !1750, size: 64, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1735)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rof", scope: !1744, file: !1709, line: 120, baseType: !692, size: 64, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1744, file: !1709, line: 121, baseType: !692, size: 64, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1744, file: !1709, line: 122, baseType: !692, size: 64, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_connid", scope: !1694, file: !414, line: 246, baseType: !126, size: 32, offset: 1280)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_totlen", scope: !1694, file: !414, line: 248, baseType: !692, size: 64, offset: 1344)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_crc", scope: !1694, file: !414, line: 251, baseType: !1758, size: 32, offset: 1408)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_crc32_t", file: !1759, line: 76, baseType: !457)
!1759 = !DIFile(filename: "./rdcrc32.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "386428ae67e36e03ff01c03e965d8e95")
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_reqhdr", scope: !1694, file: !414, line: 253, baseType: !1761, size: 96, offset: 1440)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafkap_reqhdr", file: !360, line: 55, size: 96, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1761, file: !360, line: 56, baseType: !320, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "ApiKey", scope: !1761, file: !360, line: 57, baseType: !862, size: 16, offset: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ApiVersion", scope: !1761, file: !360, line: 58, baseType: !862, size: 16, offset: 48)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "CorrId", scope: !1761, file: !360, line: 59, baseType: !320, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_reshdr", scope: !1694, file: !414, line: 262, baseType: !1768, size: 64, offset: 1536)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafkap_reshdr", file: !360, line: 69, size: 64, elements: !1769)
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1768, file: !360, line: 70, baseType: !320, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CorrId", scope: !1768, file: !360, line: 71, baseType: !320, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_expected_size", scope: !1694, file: !414, line: 268, baseType: !320, size: 32, offset: 1600)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_replyq", scope: !1694, file: !414, line: 270, baseType: !569, size: 128, offset: 1664)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_orig_replyq", scope: !1694, file: !414, line: 271, baseType: !569, size: 128, offset: 1792)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_cb", scope: !1694, file: !414, line: 276, baseType: !1688, size: 64, offset: 1920)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_response", scope: !1694, file: !414, line: 277, baseType: !1700, size: 64, offset: 1984)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_make_req_cb", scope: !1694, file: !414, line: 279, baseType: !1778, size: 64, offset: 2048)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_make_req_cb_t", file: !414, line: 220, baseType: !1780)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!550, !412, !1692, !607}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_make_opaque", scope: !1694, file: !414, line: 284, baseType: !607, size: 64, offset: 2112)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_free_make_opaque_cb", scope: !1694, file: !414, line: 287, baseType: !609, size: 64, offset: 2176)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_rkb", scope: !1694, file: !414, line: 290, baseType: !422, size: 64, offset: 2240)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_refcnt", scope: !1694, file: !414, line: 295, baseType: !313, size: 32, offset: 2304)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_opaque", scope: !1694, file: !414, line: 296, baseType: !607, size: 64, offset: 2368)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_max_retries", scope: !1694, file: !414, line: 298, baseType: !126, size: 32, offset: 2432)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_retries", scope: !1694, file: !414, line: 299, baseType: !126, size: 32, offset: 2464)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_features", scope: !1694, file: !414, line: 302, baseType: !126, size: 32, offset: 2496)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_ts_enq", scope: !1694, file: !414, line: 305, baseType: !487, size: 64, offset: 2560)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_ts_sent", scope: !1694, file: !414, line: 306, baseType: !487, size: 64, offset: 2624)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_ts_timeout", scope: !1694, file: !414, line: 341, baseType: !487, size: 64, offset: 2688)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_abs_timeout", scope: !1694, file: !414, line: 343, baseType: !487, size: 64, offset: 2752)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_rel_timeout", scope: !1694, file: !414, line: 346, baseType: !126, size: 32, offset: 2816)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_force_timeout", scope: !1694, file: !414, line: 349, baseType: !561, size: 8, offset: 2848)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_offset", scope: !1694, file: !414, line: 354, baseType: !489, size: 64, offset: 2880)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_rktp_vers", scope: !1694, file: !414, line: 356, baseType: !867, size: 64, offset: 2944)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_err", scope: !1694, file: !414, line: 359, baseType: !550, size: 32, offset: 3008)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_u", scope: !1694, file: !414, line: 390, baseType: !1800, size: 960, offset: 3072)
!1800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1694, file: !414, line: 361, size: 960, elements: !1801)
!1801 = !{!1802, !1814, !1900}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "Metadata", scope: !1800, file: !414, line: 382, baseType: !1803, size: 384)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1800, file: !414, line: 362, size: 384, elements: !1804)
!1804 = !{!1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "topics", scope: !1803, file: !414, line: 363, baseType: !867, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !1803, file: !414, line: 364, baseType: !559, size: 64, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "rko", scope: !1803, file: !414, line: 365, baseType: !914, size: 64, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "all_topics", scope: !1803, file: !414, line: 367, baseType: !561, size: 8, offset: 192)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "cgrp_update", scope: !1803, file: !414, line: 368, baseType: !561, size: 8, offset: 200)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "force_racks", scope: !1803, file: !414, line: 370, baseType: !561, size: 8, offset: 208)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "decr", scope: !1803, file: !414, line: 374, baseType: !1067, size: 64, offset: 256)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "decr_lock", scope: !1803, file: !414, line: 380, baseType: !1813, size: 64, offset: 320)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "Produce", scope: !1800, file: !414, line: 385, baseType: !1815, size: 960)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1800, file: !414, line: 383, size: 960, elements: !1816)
!1816 = !{!1817}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1815, file: !414, line: 384, baseType: !1818, size: 960)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_msgbatch_t", file: !1819, line: 48, baseType: !1820)
!1819 = !DIFile(filename: "./rdkafka_msgbatch.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "9b90f2cec4cf03cc54edf7b7f9e9bba7")
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_msgbatch_s", file: !1819, line: 30, size: 960, elements: !1821)
!1821 = !{!1822, !1823, !1895, !1896, !1897, !1898, !1899}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "rktp", scope: !1820, file: !1819, line: 31, baseType: !368, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !1820, file: !1819, line: 33, baseType: !1824, size: 512, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_msgq_t", file: !1825, line: 209, baseType: !1826)
!1825 = !DIFile(filename: "./rdkafka_msg.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "b621f2d07b1263a84cf7639b554293d0")
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_msgq_s", file: !1825, line: 195, size: 512, elements: !1827)
!1827 = !{!1828, !1885, !1886, !1887}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "rkmq_msgs", scope: !1826, file: !1825, line: 196, baseType: !1829, size: 128)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_msgs_head_s", file: !1825, line: 194, size: 128, elements: !1830)
!1830 = !{!1831, !1884}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !1829, file: !1825, line: 194, baseType: !1832, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_msg_s", file: !1825, line: 69, size: 1344, elements: !1834)
!1834 = !{!1835, !1836, !1842, !1843, !1850, !1851, !1859, !1866, !1867}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_rkmessage", scope: !1833, file: !1825, line: 70, baseType: !1287, size: 576)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_link", scope: !1833, file: !1825, line: 80, baseType: !1837, size: 128, offset: 576)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1833, file: !1825, line: 80, size: 128, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !1837, file: !1825, line: 80, baseType: !1832, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !1837, file: !1825, line: 80, baseType: !1841, size: 64, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_flags", scope: !1833, file: !1825, line: 82, baseType: !126, size: 32, offset: 704)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_tstype", scope: !1833, file: !1825, line: 90, baseType: !1844, size: 32, offset: 736)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_timestamp_type_t", file: !125, line: 224, baseType: !1845)
!1845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_timestamp_type_t", file: !125, line: 220, baseType: !59, size: 32, elements: !1846)
!1846 = !{!1847, !1848, !1849}
!1847 = !DIEnumerator(name: "RD_KAFKA_TIMESTAMP_NOT_AVAILABLE", value: 0)
!1848 = !DIEnumerator(name: "RD_KAFKA_TIMESTAMP_CREATE_TIME", value: 1)
!1849 = !DIEnumerator(name: "RD_KAFKA_TIMESTAMP_LOG_APPEND_TIME", value: 2)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_timestamp", scope: !1833, file: !1825, line: 91, baseType: !489, size: 64, offset: 768)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_headers", scope: !1833, file: !1825, line: 98, baseType: !1852, size: 64, offset: 832)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_headers_t", file: !125, line: 262, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_headers_s", file: !1855, line: 38, size: 384, elements: !1856)
!1855 = !DIFile(filename: "./rdkafka_header.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "03b033e2853766689bb5e5f096c1ec1f")
!1856 = !{!1857, !1858}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "rkhdrs_list", scope: !1854, file: !1855, line: 39, baseType: !599, size: 320)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "rkhdrs_ser_size", scope: !1854, file: !1855, line: 40, baseType: !692, size: 64, offset: 320)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_status", scope: !1833, file: !1825, line: 100, baseType: !1860, size: 32, offset: 896)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_msg_status_t", file: !125, line: 1607, baseType: !1861)
!1861 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !125, line: 1592, baseType: !59, size: 32, elements: !1862)
!1862 = !{!1863, !1864, !1865}
!1863 = !DIEnumerator(name: "RD_KAFKA_MSG_STATUS_NOT_PERSISTED", value: 0)
!1864 = !DIEnumerator(name: "RD_KAFKA_MSG_STATUS_POSSIBLY_PERSISTED", value: 1)
!1865 = !DIEnumerator(name: "RD_KAFKA_MSG_STATUS_PERSISTED", value: 2)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_broker_id", scope: !1833, file: !1825, line: 104, baseType: !320, size: 32, offset: 928)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rkm_u", scope: !1833, file: !1825, line: 137, baseType: !1868, size: 384, offset: 960)
!1868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1833, file: !1825, line: 107, size: 384, elements: !1869)
!1869 = !{!1870, !1879}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "producer", scope: !1868, file: !1825, line: 125, baseType: !1871, size: 384)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1868, file: !1825, line: 108, size: 384, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1878}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ts_timeout", scope: !1871, file: !1825, line: 109, baseType: !487, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ts_enq", scope: !1871, file: !1825, line: 110, baseType: !487, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ts_backoff", scope: !1871, file: !1825, line: 111, baseType: !487, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "msgid", scope: !1871, file: !1825, line: 113, baseType: !937, size: 64, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "last_msgid", scope: !1871, file: !1825, line: 116, baseType: !937, size: 64, offset: 256)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !1871, file: !1825, line: 124, baseType: !126, size: 32, offset: 320)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !1868, file: !1825, line: 136, baseType: !1880, size: 256)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1868, file: !1825, line: 130, size: 256, elements: !1881)
!1881 = !{!1882, !1883}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "binhdrs", scope: !1880, file: !1825, line: 131, baseType: !704, size: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "leader_epoch", scope: !1880, file: !1825, line: 134, baseType: !320, size: 32, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !1829, file: !1825, line: 194, baseType: !1841, size: 64, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "rkmq_msg_cnt", scope: !1826, file: !1825, line: 197, baseType: !320, size: 32, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "rkmq_msg_bytes", scope: !1826, file: !1825, line: 198, baseType: !489, size: 64, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "rkmq_wakeup", scope: !1826, file: !1825, line: 208, baseType: !1888, size: 256, offset: 256)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1826, file: !1825, line: 199, size: 256, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "abstime", scope: !1888, file: !1825, line: 200, baseType: !487, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "msg_cnt", scope: !1888, file: !1825, line: 201, baseType: !320, size: 32, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "msg_bytes", scope: !1888, file: !1825, line: 203, baseType: !489, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "on_first", scope: !1888, file: !1825, line: 205, baseType: !561, size: 8, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "signalled", scope: !1888, file: !1825, line: 207, baseType: !561, size: 8, offset: 200)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1820, file: !1819, line: 36, baseType: !1538, size: 128, offset: 576)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "first_seq", scope: !1820, file: !1819, line: 37, baseType: !320, size: 32, offset: 704)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "first_msgid", scope: !1820, file: !1819, line: 38, baseType: !489, size: 64, offset: 768)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "epoch_base_msgid", scope: !1820, file: !1819, line: 39, baseType: !937, size: 64, offset: 832)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "last_msgid", scope: !1820, file: !1819, line: 41, baseType: !937, size: 64, offset: 896)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "EndTxn", scope: !1800, file: !414, line: 389, baseType: !1901, size: 8)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1800, file: !414, line: 386, size: 8, elements: !1902)
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !1901, file: !414, line: 387, baseType: !561, size: 8)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf_uflow_mitigation", scope: !1694, file: !414, line: 394, baseType: !365, size: 64, offset: 4032)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "creq_replyq", scope: !1669, file: !1635, line: 94, baseType: !569, size: 128, offset: 1088)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "creq_resp_cb", scope: !1669, file: !1635, line: 95, baseType: !1688, size: 64, offset: 1216)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "creq_reply_opaque", scope: !1669, file: !1635, line: 99, baseType: !607, size: 64, offset: 1280)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "creq_refcnt", scope: !1669, file: !1635, line: 103, baseType: !126, size: 32, offset: 1344)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "creq_done", scope: !1669, file: !1635, line: 110, baseType: !561, size: 8, offset: 1376)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "creq_rkb", scope: !1669, file: !1635, line: 112, baseType: !412, size: 64, offset: 1408)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !1665, file: !589, line: 540, baseType: !1676, size: 64, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "rk_curr_msgs", scope: !588, file: !589, line: 552, baseType: !1913, size: 960, offset: 30208)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 545, size: 960, elements: !1914)
!1914 = !{!1915, !1916, !1917, !1918, !1919, !1920}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1913, file: !589, line: 546, baseType: !509, size: 320)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cnd", scope: !1913, file: !589, line: 547, baseType: !519, size: 384, offset: 320)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !1913, file: !589, line: 548, baseType: !59, size: 32, offset: 704)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1913, file: !589, line: 549, baseType: !692, size: 64, offset: 768)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "max_cnt", scope: !1913, file: !589, line: 550, baseType: !59, size: 32, offset: 832)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !1913, file: !589, line: 551, baseType: !692, size: 64, offset: 896)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "rk_timers", scope: !588, file: !589, line: 554, baseType: !896, size: 1024, offset: 31168)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "rk_thread", scope: !588, file: !589, line: 555, baseType: !1923, size: 64, offset: 32192)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "thrd_t", file: !510, line: 38, baseType: !1924)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "__thrd_t", file: !1925, line: 106, baseType: !349)
!1925 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "", checksumkind: CSK_MD5, checksum: "04c81e86d34dad9c99ad006d32e47a0d")
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "rk_initialized", scope: !588, file: !589, line: 557, baseType: !126, size: 32, offset: 32256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "rk_init_wait_cnt", scope: !588, file: !589, line: 560, baseType: !126, size: 32, offset: 32288)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "rk_init_cnd", scope: !588, file: !589, line: 562, baseType: !519, size: 384, offset: 32320)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "rk_init_lock", scope: !588, file: !589, line: 565, baseType: !509, size: 320, offset: 32704)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "rk_ts_created", scope: !588, file: !589, line: 567, baseType: !487, size: 64, offset: 33024)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "rk_background", scope: !588, file: !589, line: 582, baseType: !1932, size: 192, offset: 33088)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 574, size: 192, elements: !1933)
!1933 = !{!1934, !1935, !1936}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1932, file: !589, line: 575, baseType: !503, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1932, file: !589, line: 576, baseType: !1923, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "calling", scope: !1932, file: !589, line: 577, baseType: !126, size: 32, offset: 128)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "rk_suppress", scope: !588, file: !589, line: 614, baseType: !1938, size: 1088, offset: 33280)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 588, size: 1088, elements: !1939)
!1939 = !{!1940, !1941, !1942, !1943, !1944}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "no_idemp_brokers", scope: !1938, file: !589, line: 590, baseType: !725, size: 192)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_connect_random", scope: !1938, file: !589, line: 598, baseType: !725, size: 192, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_connect_lock", scope: !1938, file: !589, line: 600, baseType: !509, size: 320, offset: 384)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "broker_metadata_refresh", scope: !1938, file: !589, line: 609, baseType: !725, size: 192, offset: 704)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "allow_auto_create_topics", scope: !1938, file: !589, line: 613, baseType: !725, size: 192, offset: 896)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "rk_sasl", scope: !588, file: !589, line: 620, baseType: !1946, size: 128, offset: 34368)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 616, size: 128, elements: !1947)
!1947 = !{!1948, !1949}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1946, file: !589, line: 617, baseType: !607, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "callback_q", scope: !1946, file: !589, line: 619, baseType: !503, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "rk_mock", scope: !588, file: !589, line: 634, baseType: !1951, size: 128, offset: 34496)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !589, line: 623, size: 128, elements: !1952)
!1952 = !{!1953, !1958}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "cluster", scope: !1951, file: !589, line: 624, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_mock_cluster_t", file: !1956, line: 80, baseType: !1957)
!1956 = !DIFile(filename: "./rdkafka_mock.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "70329b755adbd0400909d06b7d0f166b")
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_mock_cluster_s", file: !1956, line: 80, flags: DIFlagFwdDecl)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_cnt", scope: !1951, file: !589, line: 627, baseType: !315, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_q_cb_type_t", file: !58, line: 229, baseType: !1960)
!1960 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 222, baseType: !59, size: 32, elements: !1961)
!1961 = !{!1962, !1963, !1964, !1965, !1966}
!1962 = !DIEnumerator(name: "RD_KAFKA_Q_CB_INVALID", value: 0)
!1963 = !DIEnumerator(name: "RD_KAFKA_Q_CB_CALLBACK", value: 1)
!1964 = !DIEnumerator(name: "RD_KAFKA_Q_CB_RETURN", value: 2)
!1965 = !DIEnumerator(name: "RD_KAFKA_Q_CB_FORCE_RETURN", value: 3)
!1966 = !DIEnumerator(name: "RD_KAFKA_Q_CB_EVENT", value: 4)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "rko_serve_opaque", scope: !535, file: !58, line: 295, baseType: !607, size: 64, offset: 704)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rko_rk", scope: !535, file: !58, line: 297, baseType: !586, size: 64, offset: 768)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "rko_op_cb", scope: !535, file: !58, line: 304, baseType: !1970, size: 64, offset: 832)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_op_cb_t", file: !58, line: 254, baseType: !1972)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!579, !586, !503, !534}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "rko_u", scope: !535, file: !58, line: 660, baseType: !1975, size: 5760, offset: 896)
!1975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !535, file: !58, line: 306, size: 5760, elements: !1976)
!1976 = !{!1977, !1984, !1990, !1999, !2003, !2014, !2018, !2022, !2026, !2028, !2036, !2042, !2047, !2051, !2060, !2067, !2072, !2084, !2089, !2094, !2101, !2215, !2224, !2228, !2251, !2259, !2267}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "fetch", scope: !1975, file: !58, line: 311, baseType: !1978, size: 1472)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 307, size: 1472, elements: !1979)
!1979 = !{!1980, !1981, !1983}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf", scope: !1978, file: !58, line: 308, baseType: !1692, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "rkm", scope: !1978, file: !58, line: 309, baseType: !1982, size: 1344, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_msg_t", file: !1825, line: 138, baseType: !1833)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "evidx", scope: !1978, file: !58, line: 310, baseType: !126, size: 32, offset: 1408)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "offset_fetch", scope: !1975, file: !58, line: 318, baseType: !1985, size: 128)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 313, size: 128, elements: !1986)
!1986 = !{!1987, !1988, !1989}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !1985, file: !58, line: 314, baseType: !676, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "require_stable_offsets", scope: !1985, file: !58, line: 316, baseType: !561, size: 8, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "do_free", scope: !1985, file: !58, line: 317, baseType: !126, size: 32, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "offset_commit", scope: !1975, file: !58, line: 331, baseType: !1991, size: 384)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 320, size: 384, elements: !1992)
!1992 = !{!1993, !1994, !1995, !1996, !1997, !1998}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !1991, file: !58, line: 321, baseType: !676, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1991, file: !58, line: 322, baseType: !1244, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1991, file: !58, line: 326, baseType: !607, size: 64, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "silent_empty", scope: !1991, file: !58, line: 327, baseType: !126, size: 32, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "ts_timeout", scope: !1991, file: !58, line: 329, baseType: !487, size: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !1991, file: !58, line: 330, baseType: !559, size: 64, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "subscribe", scope: !1975, file: !58, line: 335, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 333, size: 64, elements: !2001)
!2001 = !{!2002}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "topics", scope: !2000, file: !58, line: 334, baseType: !676, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "assign", scope: !1975, file: !58, line: 340, baseType: !2004, size: 128)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 337, size: 128, elements: !2005)
!2005 = !{!2006, !2007}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !2004, file: !58, line: 338, baseType: !676, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !2004, file: !58, line: 339, baseType: !2008, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_assign_method_t", file: !58, line: 249, baseType: !2009)
!2009 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 245, baseType: !59, size: 32, elements: !2010)
!2010 = !{!2011, !2012, !2013}
!2011 = !DIEnumerator(name: "RD_KAFKA_ASSIGN_METHOD_ASSIGN", value: 0)
!2012 = !DIEnumerator(name: "RD_KAFKA_ASSIGN_METHOD_INCR_ASSIGN", value: 1)
!2013 = !DIEnumerator(name: "RD_KAFKA_ASSIGN_METHOD_INCR_UNASSIGN", value: 2)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "rebalance", scope: !1975, file: !58, line: 344, baseType: !2015, size: 64)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 342, size: 64, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !2015, file: !58, line: 343, baseType: !676, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "rebalance_protocol", scope: !1975, file: !58, line: 348, baseType: !2019, size: 64)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 346, size: 64, elements: !2020)
!2020 = !{!2021}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2019, file: !58, line: 347, baseType: !365, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1975, file: !58, line: 352, baseType: !2023, size: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 350, size: 64, elements: !2024)
!2024 = !{!2025}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2023, file: !58, line: 351, baseType: !559, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "cg_metadata", scope: !1975, file: !58, line: 354, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !1975, file: !58, line: 364, baseType: !2029, size: 1600)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 356, size: 1600, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2029, file: !58, line: 357, baseType: !489, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "errstr", scope: !2029, file: !58, line: 358, baseType: !559, size: 64, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "rkm", scope: !2029, file: !58, line: 359, baseType: !1982, size: 1344, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "rkt", scope: !2029, file: !58, line: 360, baseType: !406, size: 64, offset: 1472)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "fatal", scope: !2029, file: !58, line: 361, baseType: !126, size: 32, offset: 1536)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !1975, file: !58, line: 370, baseType: !2037, size: 128)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 366, size: 128, elements: !2038)
!2038 = !{!2039, !2040, !2041}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_time", scope: !2037, file: !58, line: 367, baseType: !126, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "nodeid", scope: !2037, file: !58, line: 368, baseType: !320, size: 32, offset: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !2037, file: !58, line: 369, baseType: !559, size: 64, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1975, file: !58, line: 375, baseType: !2043, size: 128)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 372, size: 128, elements: !2044)
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "json", scope: !2043, file: !58, line: 373, baseType: !559, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "json_len", scope: !2043, file: !58, line: 374, baseType: !692, size: 64, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "xbuf", scope: !1975, file: !58, line: 379, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 377, size: 64, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "rkbuf", scope: !2048, file: !58, line: 378, baseType: !1692, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1975, file: !58, line: 387, baseType: !2052, size: 192)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 382, size: 192, elements: !2053)
!2053 = !{!2054, !2056, !2059}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "md", scope: !2052, file: !58, line: 383, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "mdi", scope: !2052, file: !58, line: 384, baseType: !2057, size: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_metadata_internal_t", file: !589, line: 82, baseType: !1445)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !2052, file: !58, line: 385, baseType: !126, size: 32, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "dr", scope: !1975, file: !58, line: 394, baseType: !2061, size: 1152)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 389, size: 1152, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2066}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "rkt", scope: !2061, file: !58, line: 390, baseType: !406, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !2061, file: !58, line: 391, baseType: !1824, size: 512, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "msgq2", scope: !2061, file: !58, line: 392, baseType: !1824, size: 512, offset: 576)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "do_purge2", scope: !2061, file: !58, line: 393, baseType: !126, size: 32, offset: 1088)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1975, file: !58, line: 399, baseType: !2068, size: 2080)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 396, size: 2080, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "nodeid", scope: !2068, file: !58, line: 397, baseType: !320, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !2068, file: !58, line: 398, baseType: !924, size: 2048, offset: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "offset_reset", scope: !1975, file: !58, line: 405, baseType: !2073, size: 256)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 401, size: 256, elements: !2074)
!2074 = !{!2075, !2082, !2083}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2073, file: !58, line: 402, baseType: !2076, size: 128)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_fetch_pos_t", file: !589, line: 106, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_fetch_pos_s", file: !589, line: 102, size: 128, elements: !2078)
!2078 = !{!2079, !2080, !2081}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2077, file: !589, line: 103, baseType: !489, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "leader_epoch", scope: !2077, file: !589, line: 104, baseType: !320, size: 32, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "validated", scope: !2077, file: !589, line: 105, baseType: !561, size: 8, offset: 96)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "broker_id", scope: !2073, file: !58, line: 403, baseType: !320, size: 32, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !2073, file: !58, line: 404, baseType: !559, size: 64, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_start", scope: !1975, file: !58, line: 410, baseType: !2085, size: 192)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 407, size: 192, elements: !2086)
!2086 = !{!2087, !2088}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2085, file: !58, line: 408, baseType: !2076, size: 128)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "rkcg", scope: !2085, file: !58, line: 409, baseType: !633, size: 64, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !1975, file: !58, line: 415, baseType: !2090, size: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 412, size: 64, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !2090, file: !58, line: 413, baseType: !126, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2090, file: !58, line: 414, baseType: !126, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !1975, file: !58, line: 422, baseType: !2095, size: 704)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 417, size: 704, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fac", scope: !2095, file: !58, line: 418, baseType: !1590, size: 512)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2095, file: !58, line: 419, baseType: !126, size: 32, offset: 512)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2095, file: !58, line: 420, baseType: !559, size: 64, offset: 576)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2095, file: !58, line: 421, baseType: !126, size: 32, offset: 640)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "admin_request", scope: !1975, file: !58, line: 510, baseType: !2102, size: 5760)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 424, size: 5760, elements: !2103)
!2103 = !{!2104, !2174, !2175, !2176, !2184, !2185, !2186, !2189, !2199, !2200, !2201, !2202, !2203, !2204, !2214}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !2102, file: !58, line: 425, baseType: !2105, size: 3712)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_AdminOptions_t", file: !125, line: 6796, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_AdminOptions_s", file: !2107, line: 53, size: 3712, elements: !2108)
!2107 = !DIFile(filename: "./rdkafka_admin.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "d4d60538ea4878ea1e327f84de8fa7a4")
!2108 = !{!2109, !2133, !2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "for_api", scope: !2106, file: !2107, line: 54, baseType: !2110, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_admin_op_t", file: !125, line: 6782, baseType: !2111)
!2111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_admin_op_t", file: !125, line: 6755, baseType: !59, size: 32, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132}
!2113 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_ANY", value: 0)
!2114 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_CREATETOPICS", value: 1)
!2115 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DELETETOPICS", value: 2)
!2116 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_CREATEPARTITIONS", value: 3)
!2117 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_ALTERCONFIGS", value: 4)
!2118 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DESCRIBECONFIGS", value: 5)
!2119 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DELETERECORDS", value: 6)
!2120 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DELETEGROUPS", value: 7)
!2121 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DELETECONSUMERGROUPOFFSETS", value: 8)
!2122 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_CREATEACLS", value: 9)
!2123 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DESCRIBEACLS", value: 10)
!2124 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DELETEACLS", value: 11)
!2125 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_LISTCONSUMERGROUPS", value: 12)
!2126 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DESCRIBECONSUMERGROUPS", value: 13)
!2127 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_LISTCONSUMERGROUPOFFSETS", value: 14)
!2128 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_ALTERCONSUMERGROUPOFFSETS", value: 15)
!2129 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_INCREMENTALALTERCONFIGS", value: 16)
!2130 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_DESCRIBEUSERSCRAMCREDENTIALS", value: 17)
!2131 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP_ALTERUSERSCRAMCREDENTIALS", value: 18)
!2132 = !DIEnumerator(name: "RD_KAFKA_ADMIN_OP__CNT", value: 19)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "request_timeout", scope: !2106, file: !2107, line: 58, baseType: !2134, size: 512, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_confval_t", file: !2135, line: 72, baseType: !2136)
!2135 = !DIFile(filename: "./rdkafka_confval.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "aaf5177faed0be6d34d0457093dc0a0f")
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_confval_s", file: !2135, line: 51, size: 512, elements: !2137)
!2137 = !{!2138, !2139, !2146, !2147, !2148}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2136, file: !2135, line: 52, baseType: !365, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "valuetype", scope: !2136, file: !2135, line: 53, baseType: !2140, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_confval_type_t", file: !2135, line: 44, baseType: !2141)
!2141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_confval_type_t", file: !2135, line: 40, baseType: !59, size: 32, elements: !2142)
!2142 = !{!2143, !2144, !2145}
!2143 = !DIEnumerator(name: "RD_KAFKA_CONFVAL_INT", value: 0)
!2144 = !DIEnumerator(name: "RD_KAFKA_CONFVAL_STR", value: 1)
!2145 = !DIEnumerator(name: "RD_KAFKA_CONFVAL_PTR", value: 2)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "is_set", scope: !2136, file: !2135, line: 54, baseType: !126, size: 32, offset: 96)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "is_enabled", scope: !2136, file: !2135, line: 55, baseType: !126, size: 32, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2136, file: !2135, line: 71, baseType: !2149, size: 320, offset: 192)
!2149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2136, file: !2135, line: 56, size: 320, elements: !2150)
!2150 = !{!2151, !2158, !2166}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "INT", scope: !2149, file: !2135, line: 62, baseType: !2152, size: 128)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2149, file: !2135, line: 57, size: 128, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2152, file: !2135, line: 58, baseType: !126, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "vmin", scope: !2152, file: !2135, line: 59, baseType: !126, size: 32, offset: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "vmax", scope: !2152, file: !2135, line: 60, baseType: !126, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !2152, file: !2135, line: 61, baseType: !126, size: 32, offset: 96)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "STR", scope: !2149, file: !2135, line: 69, baseType: !2159, size: 320)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2149, file: !2135, line: 63, size: 320, elements: !2160)
!2160 = !{!2161, !2162, !2163, !2164, !2165}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2159, file: !2135, line: 64, baseType: !559, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "allowempty", scope: !2159, file: !2135, line: 65, baseType: !126, size: 32, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "minlen", scope: !2159, file: !2135, line: 66, baseType: !692, size: 64, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2159, file: !2135, line: 67, baseType: !692, size: 64, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !2159, file: !2135, line: 68, baseType: !365, size: 64, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "PTR", scope: !2149, file: !2135, line: 70, baseType: !607, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "abs_timeout", scope: !2106, file: !2107, line: 63, baseType: !487, size: 64, offset: 576)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "operation_timeout", scope: !2106, file: !2107, line: 67, baseType: !2134, size: 512, offset: 640)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "validate_only", scope: !2106, file: !2107, line: 74, baseType: !2134, size: 512, offset: 1152)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "broker", scope: !2106, file: !2107, line: 83, baseType: !2134, size: 512, offset: 1664)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "require_stable_offsets", scope: !2106, file: !2107, line: 91, baseType: !2134, size: 512, offset: 2176)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "match_consumer_group_states", scope: !2106, file: !2107, line: 98, baseType: !2134, size: 512, offset: 2688)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2106, file: !2107, line: 103, baseType: !2134, size: 512, offset: 3200)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "abs_timeout", scope: !2102, file: !58, line: 427, baseType: !487, size: 64, offset: 3712)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "tmr", scope: !2102, file: !58, line: 429, baseType: !877, size: 448, offset: 3776)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "eonce", scope: !2102, file: !58, line: 430, baseType: !2177, size: 64, offset: 4224)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_enq_once_s", file: !506, line: 924, size: 576, elements: !2179)
!2179 = !{!2180, !2181, !2182, !2183}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2178, file: !506, line: 925, baseType: !509, size: 320)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2178, file: !506, line: 926, baseType: !126, size: 32, offset: 320)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "rko", scope: !2178, file: !506, line: 927, baseType: !914, size: 64, offset: 384)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "replyq", scope: !2178, file: !506, line: 928, baseType: !569, size: 128, offset: 448)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2102, file: !58, line: 442, baseType: !599, size: 320, offset: 4288)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "reply_buf", scope: !2102, file: !58, line: 446, baseType: !1692, size: 64, offset: 4608)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "cbs", scope: !2102, file: !58, line: 451, baseType: !2187, size: 64, offset: 4672)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_admin_worker_cbs", file: !58, line: 260, flags: DIFlagFwdDecl)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2102, file: !58, line: 461, baseType: !2190, size: 32, offset: 4736)
!2190 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2102, file: !58, line: 454, baseType: !59, size: 32, elements: !2191)
!2191 = !{!2192, !2193, !2194, !2195, !2196, !2197, !2198}
!2192 = !DIEnumerator(name: "RD_KAFKA_ADMIN_STATE_INIT", value: 0)
!2193 = !DIEnumerator(name: "RD_KAFKA_ADMIN_STATE_WAIT_BROKER", value: 1)
!2194 = !DIEnumerator(name: "RD_KAFKA_ADMIN_STATE_WAIT_CONTROLLER", value: 2)
!2195 = !DIEnumerator(name: "RD_KAFKA_ADMIN_STATE_WAIT_FANOUTS", value: 3)
!2196 = !DIEnumerator(name: "RD_KAFKA_ADMIN_STATE_CONSTRUCT_REQUEST", value: 4)
!2197 = !DIEnumerator(name: "RD_KAFKA_ADMIN_STATE_WAIT_RESPONSE", value: 5)
!2198 = !DIEnumerator(name: "RD_KAFKA_ADMIN_STATE_WAIT_BROKER_LIST", value: 6)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "broker_id", scope: !2102, file: !58, line: 463, baseType: !320, size: 32, offset: 4768)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "coordtype", scope: !2102, file: !58, line: 474, baseType: !1653, size: 32, offset: 4800)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "coordkey", scope: !2102, file: !58, line: 476, baseType: !559, size: 64, offset: 4864)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "replyq", scope: !2102, file: !58, line: 479, baseType: !569, size: 128, offset: 4928)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "reply_event_type", scope: !2102, file: !58, line: 480, baseType: !546, size: 32, offset: 5056)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "fanout", scope: !2102, file: !58, line: 504, baseType: !2205, size: 576, offset: 5120)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !58, line: 483, size: 576, elements: !2206)
!2206 = !{!2207, !2208, !2211, !2212, !2213}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !2205, file: !58, line: 486, baseType: !544, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "cbs", scope: !2205, file: !58, line: 489, baseType: !2209, size: 64, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_admin_fanout_worker_cbs", file: !58, line: 261, flags: DIFlagFwdDecl)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "outstanding", scope: !2205, file: !58, line: 493, baseType: !126, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "results", scope: !2205, file: !58, line: 499, baseType: !599, size: 320, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "reply_event_type", scope: !2205, file: !58, line: 502, baseType: !546, size: 32, offset: 512)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "fanout_parent", scope: !2102, file: !58, line: 508, baseType: !534, size: 64, offset: 5696)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "admin_result", scope: !1975, file: !58, line: 543, baseType: !2216, size: 896)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 512, size: 896, elements: !2217)
!2217 = !{!2218, !2219, !2220, !2221, !2222, !2223}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !2216, file: !58, line: 513, baseType: !544, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2216, file: !58, line: 516, baseType: !599, size: 320, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "errstr", scope: !2216, file: !58, line: 522, baseType: !559, size: 64, offset: 384)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "results", scope: !2216, file: !58, line: 525, baseType: !599, size: 320, offset: 448)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2216, file: !58, line: 536, baseType: !607, size: 64, offset: 768)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "fanout_parent", scope: !2216, file: !58, line: 542, baseType: !534, size: 64, offset: 832)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "purge", scope: !1975, file: !58, line: 547, baseType: !2225, size: 32)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 545, size: 32, elements: !2226)
!2226 = !{!2227}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2225, file: !58, line: 546, baseType: !126, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "mock", scope: !1975, file: !58, line: 598, baseType: !2229, size: 384)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 550, size: 384, elements: !2230)
!2230 = !{!2231, !2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !2229, file: !58, line: 561, baseType: !2232, size: 32)
!2232 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2229, file: !58, line: 551, baseType: !59, size: 32, elements: !2233)
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243}
!2234 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_TOPIC_SET_ERROR", value: 0)
!2235 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_TOPIC_CREATE", value: 1)
!2236 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_PART_SET_LEADER", value: 2)
!2237 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_PART_SET_FOLLOWER", value: 3)
!2238 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_PART_SET_FOLLOWER_WMARKS", value: 4)
!2239 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_BROKER_SET_UPDOWN", value: 5)
!2240 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_BROKER_SET_RTT", value: 6)
!2241 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_BROKER_SET_RACK", value: 7)
!2242 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_COORD_SET", value: 8)
!2243 = !DIEnumerator(name: "RD_KAFKA_MOCK_CMD_APIVERSION_SET", value: 9)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !2229, file: !58, line: 563, baseType: !550, size: 32, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2229, file: !58, line: 565, baseType: !559, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2229, file: !58, line: 572, baseType: !559, size: 64, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !2229, file: !58, line: 574, baseType: !320, size: 32, offset: 192)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "broker_id", scope: !2229, file: !58, line: 580, baseType: !320, size: 32, offset: 224)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !2229, file: !58, line: 586, baseType: !489, size: 64, offset: 256)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "hi", scope: !2229, file: !58, line: 593, baseType: !489, size: 64, offset: 320)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "broker_monitor", scope: !1975, file: !58, line: 605, baseType: !2252, size: 128)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 600, size: 128, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "rkb", scope: !2252, file: !58, line: 601, baseType: !422, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2252, file: !58, line: 604, baseType: !2256, size: 64, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{null, !422}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "txn", scope: !1975, file: !58, line: 616, baseType: !2260, size: 320)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 607, size: 320, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "cgmetadata", scope: !2260, file: !58, line: 609, baseType: !2027, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !2260, file: !58, line: 611, baseType: !559, size: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_ms", scope: !2260, file: !58, line: 612, baseType: !126, size: 32, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "abs_timeout", scope: !2260, file: !58, line: 613, baseType: !487, size: 64, offset: 192)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !2260, file: !58, line: 615, baseType: !676, size: 64, offset: 256)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "leaders", scope: !1975, file: !58, line: 658, baseType: !2268, size: 1472)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1975, file: !58, line: 618, size: 1472, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !2268, file: !58, line: 627, baseType: !676, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "ts_timeout", scope: !2268, file: !58, line: 630, baseType: !487, size: 64, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "query_tmr", scope: !2268, file: !58, line: 633, baseType: !877, size: 448, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_tmr", scope: !2268, file: !58, line: 636, baseType: !877, size: 448, offset: 576)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "eonce", scope: !2268, file: !58, line: 640, baseType: !2177, size: 64, offset: 1024)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "replyq", scope: !2268, file: !58, line: 643, baseType: !569, size: 128, offset: 1088)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "query_cnt", scope: !2268, file: !58, line: 646, baseType: !126, size: 32, offset: 1216)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "leaders", scope: !2268, file: !58, line: 650, baseType: !867, size: 64, offset: 1280)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2268, file: !58, line: 653, baseType: !1970, size: 64, offset: 1344)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2268, file: !58, line: 656, baseType: !607, size: 64, offset: 1408)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !531, file: !506, line: 44, baseType: !542, size: 64, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_qlen", scope: !505, file: !506, line: 61, baseType: !126, size: 32, offset: 896)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_qsize", scope: !505, file: !506, line: 62, baseType: !489, size: 64, offset: 960)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_refcnt", scope: !505, file: !506, line: 63, baseType: !126, size: 32, offset: 1024)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_flags", scope: !505, file: !506, line: 64, baseType: !126, size: 32, offset: 1056)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_rk", scope: !505, file: !506, line: 85, baseType: !586, size: 64, offset: 1088)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_qio", scope: !505, file: !506, line: 86, baseType: !2287, size: 64, offset: 1152)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_q_io", file: !506, line: 104, size: 384, elements: !2289)
!2289 = !{!2290, !2293, !2294, !2295, !2296, !2300}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2288, file: !506, line: 106, baseType: !2291, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_socket_t", file: !2292, line: 191, baseType: !126)
!2292 = !DIFile(filename: "./rdposix.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "89d8e0e778015c7ee60aedd5333b9c41")
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2288, file: !506, line: 107, baseType: !607, size: 64, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2288, file: !506, line: 108, baseType: !692, size: 64, offset: 128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !2288, file: !506, line: 109, baseType: !561, size: 8, offset: 192)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "event_cb", scope: !2288, file: !506, line: 114, baseType: !2297, size: 64, offset: 256)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{null, !586, !607}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "event_cb_opaque", scope: !2288, file: !506, line: 115, baseType: !607, size: 64, offset: 320)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_serve", scope: !505, file: !506, line: 92, baseType: !575, size: 64, offset: 1216)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_opaque", scope: !505, file: !506, line: 93, baseType: !607, size: 64, offset: 1280)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "rkq_name", scope: !505, file: !506, line: 98, baseType: !365, size: 64, offset: 1344)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_lock", scope: !415, file: !416, line: 104, baseType: !509, size: 320, offset: 576)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_blocking_max_ms", scope: !415, file: !416, line: 106, baseType: !126, size: 32, offset: 896)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_toppars", scope: !415, file: !416, line: 110, baseType: !2307, size: 128, offset: 960)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 110, size: 128, elements: !2308)
!2308 = !{!2309, !2310}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !2307, file: !416, line: 110, baseType: !377, size: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !2307, file: !416, line: 110, baseType: !379, size: 64, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_toppar_cnt", scope: !415, file: !416, line: 111, baseType: !126, size: 32, offset: 1088)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_active_toppars", scope: !415, file: !416, line: 119, baseType: !2313, size: 128, offset: 1152)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 119, size: 128, elements: !2314)
!2314 = !{!2315, !2316}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "cqh_first", scope: !2313, file: !416, line: 119, baseType: !377, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "cqh_last", scope: !2313, file: !416, line: 119, baseType: !377, size: 64, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_active_toppar_cnt", scope: !415, file: !416, line: 120, baseType: !126, size: 32, offset: 1280)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_active_toppar_next", scope: !415, file: !416, line: 121, baseType: !368, size: 64, offset: 1344)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_cgrp", scope: !415, file: !416, line: 127, baseType: !2320, size: 64, offset: 1408)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_cgrp_t", file: !635, line: 296, baseType: !634)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ts_fetch_backoff", scope: !415, file: !416, line: 129, baseType: !487, size: 64, offset: 1472)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_fetching", scope: !415, file: !416, line: 130, baseType: !126, size: 32, offset: 1536)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_state", scope: !415, file: !416, line: 132, baseType: !2325, size: 32, offset: 1568)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_broker_state_t", file: !416, line: 59, baseType: !2326)
!2326 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !416, line: 43, baseType: !59, size: 32, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2328 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_INIT", value: 0)
!2329 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_DOWN", value: 1)
!2330 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_TRY_CONNECT", value: 2)
!2331 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_CONNECT", value: 3)
!2332 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_SSL_HANDSHAKE", value: 4)
!2333 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_AUTH_LEGACY", value: 5)
!2334 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_UP", value: 6)
!2335 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_UPDATE", value: 7)
!2336 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_APIVERSION_QUERY", value: 8)
!2337 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_AUTH_HANDSHAKE", value: 9)
!2338 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_AUTH_REQ", value: 10)
!2339 = !DIEnumerator(name: "RD_KAFKA_BROKER_STATE_REAUTH", value: 11)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ts_state", scope: !415, file: !416, line: 134, baseType: !487, size: 64, offset: 1600)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_timeout_scan_intvl", scope: !415, file: !416, line: 136, baseType: !725, size: 192, offset: 1664)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_blocking_request_cnt", scope: !415, file: !416, line: 139, baseType: !315, size: 32, offset: 1856)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_features", scope: !415, file: !416, line: 150, baseType: !126, size: 32, offset: 1888)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ApiVersions", scope: !415, file: !416, line: 155, baseType: !2345, size: 64, offset: 1920)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_ApiVersion", file: !360, line: 187, size: 48, elements: !2347)
!2347 = !{!2348, !2349, !2350}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "ApiKey", scope: !2346, file: !360, line: 188, baseType: !862, size: 16)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "MinVer", scope: !2346, file: !360, line: 189, baseType: !862, size: 16, offset: 16)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "MaxVer", scope: !2346, file: !360, line: 190, baseType: !862, size: 16, offset: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ApiVersions_cnt", scope: !415, file: !416, line: 157, baseType: !692, size: 64, offset: 1984)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ApiVersion_fail_intvl", scope: !415, file: !416, line: 158, baseType: !725, size: 192, offset: 2048)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_source", scope: !415, file: !416, line: 164, baseType: !2354, size: 32, offset: 2240)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_confsource_t", file: !499, line: 107, baseType: !2355)
!2355 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !499, line: 102, baseType: !59, size: 32, elements: !2356)
!2356 = !{!2357, !2358, !2359, !2360}
!2357 = !DIEnumerator(name: "RD_KAFKA_CONFIGURED", value: 0)
!2358 = !DIEnumerator(name: "RD_KAFKA_LEARNED", value: 1)
!2359 = !DIEnumerator(name: "RD_KAFKA_INTERNAL", value: 2)
!2360 = !DIEnumerator(name: "RD_KAFKA_LOGICAL", value: 3)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_c", scope: !415, file: !416, line: 194, baseType: !2362, size: 5376, offset: 2304)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 165, size: 5376, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2383, !2384}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !2362, file: !416, line: 166, baseType: !1430, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !2362, file: !416, line: 167, baseType: !1430, size: 64, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_err", scope: !2362, file: !416, line: 168, baseType: !1430, size: 64, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_retries", scope: !2362, file: !416, line: 169, baseType: !1430, size: 64, offset: 192)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "req_timeouts", scope: !2362, file: !416, line: 170, baseType: !1430, size: 64, offset: 256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !2362, file: !416, line: 172, baseType: !1430, size: 64, offset: 320)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !2362, file: !416, line: 173, baseType: !1430, size: 64, offset: 384)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "rx_err", scope: !2362, file: !416, line: 174, baseType: !1430, size: 64, offset: 448)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "rx_corrid_err", scope: !2362, file: !416, line: 175, baseType: !1430, size: 64, offset: 512)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "rx_partial", scope: !2362, file: !416, line: 176, baseType: !1430, size: 64, offset: 576)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_grow", scope: !2362, file: !416, line: 178, baseType: !1430, size: 64, offset: 640)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "buf_grow", scope: !2362, file: !416, line: 180, baseType: !1430, size: 64, offset: 704)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "wakeups", scope: !2362, file: !416, line: 181, baseType: !1430, size: 64, offset: 768)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "connects", scope: !2362, file: !416, line: 183, baseType: !315, size: 32, offset: 832)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "disconnects", scope: !2362, file: !416, line: 186, baseType: !315, size: 32, offset: 864)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !2362, file: !416, line: 189, baseType: !2380, size: 4352, offset: 896)
!2380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1430, size: 4352, elements: !2381)
!2381 = !{!2382}
!2382 = !DISubrange(count: 68)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "ts_send", scope: !2362, file: !416, line: 192, baseType: !1430, size: 64, offset: 5248)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recv", scope: !2362, file: !416, line: 193, baseType: !1430, size: 64, offset: 5312)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_req_timeouts", scope: !415, file: !416, line: 196, baseType: !126, size: 32, offset: 7680)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_thread", scope: !415, file: !416, line: 198, baseType: !1923, size: 64, offset: 7744)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_refcnt", scope: !415, file: !416, line: 200, baseType: !313, size: 32, offset: 7808)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_rk", scope: !415, file: !416, line: 202, baseType: !586, size: 64, offset: 7872)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_recv_buf", scope: !415, file: !416, line: 204, baseType: !1692, size: 64, offset: 7936)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_max_inflight", scope: !415, file: !416, line: 206, baseType: !126, size: 32, offset: 8000)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_outbufs", scope: !415, file: !416, line: 209, baseType: !2392, size: 192, offset: 8064)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_bufq_t", file: !414, line: 851, baseType: !2393)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_bufq_s", file: !414, line: 847, size: 192, elements: !2394)
!2394 = !{!2395, !2400, !2401}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "rkbq_bufs", scope: !2393, file: !414, line: 848, baseType: !2396, size: 128)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2393, file: !414, line: 848, size: 128, elements: !2397)
!2397 = !{!2398, !2399}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !2396, file: !414, line: 848, baseType: !1700, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !2396, file: !414, line: 848, baseType: !1702, size: 64, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "rkbq_cnt", scope: !2393, file: !414, line: 849, baseType: !315, size: 32, offset: 128)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "rkbq_msg_cnt", scope: !2393, file: !414, line: 850, baseType: !315, size: 32, offset: 160)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_waitresps", scope: !415, file: !416, line: 210, baseType: !2392, size: 192, offset: 8256)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_retrybufs", scope: !415, file: !416, line: 211, baseType: !2392, size: 192, offset: 8448)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_avg_int_latency", scope: !415, file: !416, line: 213, baseType: !2405, size: 1472, offset: 8640)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_avg_t", file: !2406, line: 70, baseType: !2407)
!2406 = !DIFile(filename: "./rdavg.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "f8b5fb420e9f5eb67bb9a7de5567bd47")
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_avg_s", file: !2406, line: 37, size: 1472, elements: !2408)
!2408 = !{!2409, !2418, !2419, !2420, !2425, !2448}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "ra_v", scope: !2407, file: !2406, line: 45, baseType: !2410, size: 384)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2407, file: !2406, line: 38, size: 384, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415, !2416, !2417}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "maxv", scope: !2410, file: !2406, line: 39, baseType: !489, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "minv", scope: !2410, file: !2406, line: 40, baseType: !489, size: 64, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "avg", scope: !2410, file: !2406, line: 41, baseType: !489, size: 64, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "sum", scope: !2410, file: !2406, line: 42, baseType: !489, size: 64, offset: 192)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !2410, file: !2406, line: 43, baseType: !126, size: 32, offset: 256)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2410, file: !2406, line: 44, baseType: !487, size: 64, offset: 320)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ra_lock", scope: !2407, file: !2406, line: 46, baseType: !509, size: 320, offset: 384)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ra_enabled", scope: !2407, file: !2406, line: 47, baseType: !126, size: 32, offset: 704)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "ra_type", scope: !2407, file: !2406, line: 50, baseType: !2421, size: 32, offset: 736)
!2421 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2407, file: !2406, line: 48, baseType: !59, size: 32, elements: !2422)
!2422 = !{!2423, !2424}
!2423 = !DIEnumerator(name: "RD_AVG_GAUGE", value: 0)
!2424 = !DIEnumerator(name: "RD_AVG_COUNTER", value: 1)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ra_hdr", scope: !2407, file: !2406, line: 52, baseType: !2426, size: 64, offset: 768)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_hdr_histogram_t", file: !2428, line: 55, baseType: !2429)
!2428 = !DIFile(filename: "./rdhdrhistogram.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "93e0e4fd9428d2cb262d05f12bd019f8")
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_hdr_histogram_s", file: !2428, line: 34, size: 896, elements: !2430)
!2430 = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2444, !2445, !2446, !2447}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "lowestTrackableValue", scope: !2429, file: !2428, line: 35, baseType: !489, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "highestTrackableValue", scope: !2429, file: !2428, line: 36, baseType: !489, size: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "unitMagnitude", scope: !2429, file: !2428, line: 37, baseType: !489, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "significantFigures", scope: !2429, file: !2428, line: 38, baseType: !489, size: 64, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "subBucketHalfCountMagnitude", scope: !2429, file: !2428, line: 39, baseType: !320, size: 32, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "subBucketHalfCount", scope: !2429, file: !2428, line: 40, baseType: !320, size: 32, offset: 288)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "subBucketMask", scope: !2429, file: !2428, line: 41, baseType: !489, size: 64, offset: 320)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "subBucketCount", scope: !2429, file: !2428, line: 42, baseType: !320, size: 32, offset: 384)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "bucketCount", scope: !2429, file: !2428, line: 43, baseType: !320, size: 32, offset: 416)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "countsLen", scope: !2429, file: !2428, line: 44, baseType: !320, size: 32, offset: 448)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "totalCount", scope: !2429, file: !2428, line: 45, baseType: !489, size: 64, offset: 512)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "counts", scope: !2429, file: !2428, line: 46, baseType: !2443, size: 64, offset: 576)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "outOfRangeCount", scope: !2429, file: !2428, line: 47, baseType: !489, size: 64, offset: 640)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "lowestOutOfRange", scope: !2429, file: !2428, line: 49, baseType: !489, size: 64, offset: 704)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "highestOutOfRange", scope: !2429, file: !2428, line: 51, baseType: !489, size: 64, offset: 768)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "allocatedSize", scope: !2429, file: !2428, line: 53, baseType: !320, size: 32, offset: 832)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ra_hist", scope: !2407, file: !2406, line: 69, baseType: !2449, size: 640, offset: 832)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2407, file: !2406, line: 56, size: 640, elements: !2450)
!2450 = !{!2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "p50", scope: !2449, file: !2406, line: 58, baseType: !489, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "p75", scope: !2449, file: !2406, line: 59, baseType: !489, size: 64, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "p90", scope: !2449, file: !2406, line: 60, baseType: !489, size: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "p95", scope: !2449, file: !2406, line: 61, baseType: !489, size: 64, offset: 192)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "p99", scope: !2449, file: !2406, line: 62, baseType: !489, size: 64, offset: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "p99_99", scope: !2449, file: !2406, line: 63, baseType: !489, size: 64, offset: 320)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "oor", scope: !2449, file: !2406, line: 65, baseType: !489, size: 64, offset: 384)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "hdrsize", scope: !2449, file: !2406, line: 66, baseType: !320, size: 32, offset: 448)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "stddev", scope: !2449, file: !2406, line: 67, baseType: !1267, size: 64, offset: 512)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !2449, file: !2406, line: 68, baseType: !1267, size: 64, offset: 576)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_avg_outbuf_latency", scope: !415, file: !416, line: 214, baseType: !2405, size: 1472, offset: 10112)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_avg_rtt", scope: !415, file: !416, line: 218, baseType: !2405, size: 1472, offset: 11584)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_avg_throttle", scope: !415, file: !416, line: 219, baseType: !2405, size: 1472, offset: 13056)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_name", scope: !415, file: !416, line: 222, baseType: !924, size: 2048, offset: 14528)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_nodename", scope: !415, file: !416, line: 223, baseType: !924, size: 2048, offset: 16576)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_port", scope: !415, file: !416, line: 224, baseType: !449, size: 16, offset: 18624)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_origname", scope: !415, file: !416, line: 225, baseType: !559, size: 64, offset: 18688)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_nodename_epoch", scope: !415, file: !416, line: 227, baseType: !126, size: 32, offset: 18752)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_connect_epoch", scope: !415, file: !416, line: 235, baseType: !126, size: 32, offset: 18784)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_logname", scope: !415, file: !416, line: 241, baseType: !559, size: 64, offset: 18816)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_logname_lock", scope: !415, file: !416, line: 242, baseType: !509, size: 320, offset: 18880)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_wakeup_fd", scope: !415, file: !416, line: 244, baseType: !2473, size: 64, offset: 19200)
!2473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2291, size: 64, elements: !1474)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_reconnect_backoff_ms", scope: !415, file: !416, line: 249, baseType: !126, size: 32, offset: 19264)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ts_reconnect", scope: !415, file: !416, line: 252, baseType: !487, size: 64, offset: 19328)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_ts_connect", scope: !415, file: !416, line: 255, baseType: !487, size: 64, offset: 19392)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_reauth_in_progress", scope: !415, file: !416, line: 258, baseType: !561, size: 8, offset: 19456)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_persistconn", scope: !415, file: !416, line: 290, baseType: !2479, size: 64, offset: 19488)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 267, size: 64, elements: !2480)
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2479, file: !416, line: 277, baseType: !126, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "coord", scope: !2479, file: !416, line: 289, baseType: !315, size: 32, offset: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_monitors", scope: !415, file: !416, line: 294, baseType: !2484, size: 128, offset: 19584)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 294, size: 128, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !2484, file: !416, line: 294, baseType: !1576, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !2484, file: !416, line: 294, baseType: !1578, size: 64, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_coord_monitor", scope: !415, file: !416, line: 298, baseType: !1569, size: 320, offset: 19712)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_proto", scope: !415, file: !416, line: 300, baseType: !979, size: 32, offset: 20032)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_down_reported", scope: !415, file: !416, line: 302, baseType: !126, size: 32, offset: 20064)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_suppress", scope: !415, file: !416, line: 323, baseType: !2492, size: 768, offset: 20096)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 311, size: 768, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2497}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported_compression", scope: !2492, file: !416, line: 313, baseType: !725, size: 192)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported_kip62", scope: !2492, file: !416, line: 316, baseType: !725, size: 192, offset: 192)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported_kip345", scope: !2492, file: !416, line: 319, baseType: !725, size: 192, offset: 384)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "fail_error", scope: !2492, file: !416, line: 322, baseType: !725, size: 192, offset: 576)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_last_err", scope: !415, file: !416, line: 330, baseType: !2499, size: 4160, offset: 20864)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !416, line: 326, size: 4160, elements: !2500)
!2500 = !{!2501, !2505, !2506}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "errstr", scope: !2499, file: !416, line: 327, baseType: !2502, size: 4096)
!2502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 4096, elements: !2503)
!2503 = !{!2504}
!2504 = !DISubrange(count: 512)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !2499, file: !416, line: 328, baseType: !550, size: 32, offset: 4096)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !2499, file: !416, line: 329, baseType: !126, size: 32, offset: 4128)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "rkb_sasl_reauth_tmr", scope: !415, file: !416, line: 333, baseType: !877, size: 448, offset: 25024)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_broker", scope: !370, file: !371, line: 153, baseType: !412, size: 64, offset: 1024)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_next_broker", scope: !370, file: !371, line: 160, baseType: !412, size: 64, offset: 1088)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_refcnt", scope: !370, file: !371, line: 162, baseType: !313, size: 32, offset: 1152)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_lock", scope: !370, file: !371, line: 163, baseType: !509, size: 320, offset: 1216)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_msgq_wakeup_q", scope: !370, file: !371, line: 167, baseType: !503, size: 64, offset: 1536)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_msgq", scope: !370, file: !371, line: 168, baseType: !1824, size: 512, offset: 1600)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_xmit_msgq", scope: !370, file: !371, line: 170, baseType: !1824, size: 512, offset: 2112)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_fetch", scope: !370, file: !371, line: 173, baseType: !126, size: 32, offset: 2624)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_fetchq", scope: !370, file: !371, line: 176, baseType: !503, size: 64, offset: 2688)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_ops", scope: !370, file: !371, line: 179, baseType: !503, size: 64, offset: 2752)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_msgs_inflight", scope: !370, file: !371, line: 181, baseType: !315, size: 32, offset: 2816)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_msgid", scope: !370, file: !371, line: 185, baseType: !937, size: 64, offset: 2880)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_eos", scope: !370, file: !371, line: 243, baseType: !2521, size: 384, offset: 2944)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 198, size: 384, elements: !2522)
!2522 = !{!2523, !2524, !2525, !2526, !2527, !2528}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2521, file: !371, line: 199, baseType: !1538, size: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "acked_msgid", scope: !2521, file: !371, line: 204, baseType: !937, size: 64, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "epoch_base_msgid", scope: !2521, file: !371, line: 206, baseType: !937, size: 64, offset: 192)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "next_ack_seq", scope: !2521, file: !371, line: 217, baseType: !320, size: 32, offset: 256)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "next_err_seq", scope: !2521, file: !371, line: 219, baseType: !320, size: 32, offset: 288)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "wait_drain", scope: !2521, file: !371, line: 230, baseType: !561, size: 8, offset: 320)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_version", scope: !370, file: !371, line: 281, baseType: !315, size: 32, offset: 3328)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_op_version", scope: !370, file: !371, line: 283, baseType: !320, size: 32, offset: 3360)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_fetch_version", scope: !370, file: !371, line: 286, baseType: !320, size: 32, offset: 3392)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_fetch_state", scope: !370, file: !371, line: 296, baseType: !2533, size: 32, offset: 3424)
!2533 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !370, file: !371, line: 289, baseType: !59, size: 32, elements: !2534)
!2534 = !{!2535, !2536, !2537, !2538, !2539, !2540, !2541}
!2535 = !DIEnumerator(name: "RD_KAFKA_TOPPAR_FETCH_NONE", value: 0)
!2536 = !DIEnumerator(name: "RD_KAFKA_TOPPAR_FETCH_STOPPING", value: 1)
!2537 = !DIEnumerator(name: "RD_KAFKA_TOPPAR_FETCH_STOPPED", value: 2)
!2538 = !DIEnumerator(name: "RD_KAFKA_TOPPAR_FETCH_OFFSET_QUERY", value: 3)
!2539 = !DIEnumerator(name: "RD_KAFKA_TOPPAR_FETCH_OFFSET_WAIT", value: 4)
!2540 = !DIEnumerator(name: "RD_KAFKA_TOPPAR_FETCH_VALIDATE_EPOCH_WAIT", value: 5)
!2541 = !DIEnumerator(name: "RD_KAFKA_TOPPAR_FETCH_ACTIVE", value: 6)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_leader_epoch", scope: !370, file: !371, line: 301, baseType: !320, size: 32, offset: 3456)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_fetch_msg_max_bytes", scope: !370, file: !371, line: 304, baseType: !320, size: 32, offset: 3488)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_ts_fetch_backoff", scope: !370, file: !371, line: 309, baseType: !487, size: 64, offset: 3520)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_query_pos", scope: !370, file: !371, line: 315, baseType: !2076, size: 128, offset: 3584)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_next_fetch_start", scope: !370, file: !371, line: 323, baseType: !2076, size: 128, offset: 3712)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_last_next_fetch_start", scope: !370, file: !371, line: 327, baseType: !2076, size: 128, offset: 3840)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offset_validation_pos", scope: !370, file: !371, line: 331, baseType: !2076, size: 128, offset: 3968)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_app_pos", scope: !370, file: !371, line: 337, baseType: !2076, size: 128, offset: 4096)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_stored_pos", scope: !370, file: !371, line: 340, baseType: !2076, size: 128, offset: 4224)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_stored_metadata", scope: !370, file: !371, line: 344, baseType: !607, size: 64, offset: 4352)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_stored_metadata_size", scope: !370, file: !371, line: 345, baseType: !692, size: 64, offset: 4416)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_committing_pos", scope: !370, file: !371, line: 348, baseType: !2076, size: 128, offset: 4480)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_committed_pos", scope: !370, file: !371, line: 351, baseType: !2076, size: 128, offset: 4608)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_ts_committed_offset", scope: !370, file: !371, line: 353, baseType: !487, size: 64, offset: 4736)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offsets", scope: !370, file: !371, line: 355, baseType: !2557, size: 192, offset: 4800)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "offset_stats", file: !371, line: 42, size: 192, elements: !2558)
!2558 = !{!2559, !2560}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_pos", scope: !2557, file: !371, line: 43, baseType: !2076, size: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "eof_offset", scope: !2557, file: !371, line: 44, baseType: !489, size: 64, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offsets_fin", scope: !370, file: !371, line: 357, baseType: !2557, size: 192, offset: 4992)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_ls_offset", scope: !370, file: !371, line: 362, baseType: !489, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_hi_offset", scope: !370, file: !371, line: 364, baseType: !489, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_lo_offset", scope: !370, file: !371, line: 366, baseType: !489, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_ts_offset_lag", scope: !370, file: !371, line: 375, baseType: !487, size: 64, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offset_path", scope: !370, file: !371, line: 377, baseType: !559, size: 64, offset: 5440)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offset_fp", scope: !370, file: !371, line: 378, baseType: !2568, size: 64, offset: 5504)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2570, line: 7, baseType: !2571)
!2570 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2572, line: 49, size: 1728, elements: !2573)
!2572 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2589, !2591, !2592, !2593, !2595, !2596, !2597, !2599, !2602, !2604, !2607, !2610, !2611, !2612, !2613, !2614}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2571, file: !2572, line: 51, baseType: !126, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2571, file: !2572, line: 54, baseType: !559, size: 64, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2571, file: !2572, line: 55, baseType: !559, size: 64, offset: 128)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2571, file: !2572, line: 56, baseType: !559, size: 64, offset: 192)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2571, file: !2572, line: 57, baseType: !559, size: 64, offset: 256)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2571, file: !2572, line: 58, baseType: !559, size: 64, offset: 320)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2571, file: !2572, line: 59, baseType: !559, size: 64, offset: 384)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2571, file: !2572, line: 60, baseType: !559, size: 64, offset: 448)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2571, file: !2572, line: 61, baseType: !559, size: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2571, file: !2572, line: 64, baseType: !559, size: 64, offset: 576)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2571, file: !2572, line: 65, baseType: !559, size: 64, offset: 640)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2571, file: !2572, line: 66, baseType: !559, size: 64, offset: 704)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2571, file: !2572, line: 68, baseType: !2587, size: 64, offset: 768)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2572, line: 36, flags: DIFlagFwdDecl)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2571, file: !2572, line: 70, baseType: !2590, size: 64, offset: 832)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2571, file: !2572, line: 72, baseType: !126, size: 32, offset: 896)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2571, file: !2572, line: 73, baseType: !126, size: 32, offset: 928)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2571, file: !2572, line: 74, baseType: !2594, size: 64, offset: 960)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !323, line: 152, baseType: !356)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2571, file: !2572, line: 77, baseType: !446, size: 16, offset: 1024)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2571, file: !2572, line: 78, baseType: !344, size: 8, offset: 1040)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2571, file: !2572, line: 79, baseType: !2598, size: 8, offset: 1048)
!2598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 8, elements: !714)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2571, file: !2572, line: 81, baseType: !2600, size: 64, offset: 1088)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2572, line: 43, baseType: null)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2571, file: !2572, line: 89, baseType: !2603, size: 64, offset: 1152)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !323, line: 153, baseType: !356)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2571, file: !2572, line: 91, baseType: !2605, size: 64, offset: 1216)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2572, line: 37, flags: DIFlagFwdDecl)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2571, file: !2572, line: 92, baseType: !2608, size: 64, offset: 1280)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2572, line: 38, flags: DIFlagFwdDecl)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2571, file: !2572, line: 93, baseType: !2590, size: 64, offset: 1344)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2571, file: !2572, line: 94, baseType: !607, size: 64, offset: 1408)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2571, file: !2572, line: 95, baseType: !692, size: 64, offset: 1472)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2571, file: !2572, line: 96, baseType: !126, size: 32, offset: 1536)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2571, file: !2572, line: 98, baseType: !2615, size: 160, offset: 1568)
!2615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 160, elements: !2616)
!2616 = !{!2617}
!2617 = !DISubrange(count: 20)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_last_error", scope: !370, file: !371, line: 380, baseType: !550, size: 32, offset: 5568)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_cgrp", scope: !370, file: !371, line: 385, baseType: !2320, size: 64, offset: 5632)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_started", scope: !370, file: !371, line: 387, baseType: !561, size: 8, offset: 5696)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_replyq", scope: !370, file: !371, line: 393, baseType: !569, size: 128, offset: 5760)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_flags", scope: !370, file: !371, line: 399, baseType: !126, size: 32, offset: 5888)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offset_query_tmr", scope: !370, file: !371, line: 434, baseType: !877, size: 448, offset: 5952)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offset_commit_tmr", scope: !370, file: !371, line: 435, baseType: !877, size: 448, offset: 6400)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_offset_sync_tmr", scope: !370, file: !371, line: 436, baseType: !877, size: 448, offset: 6848)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_consumer_lag_tmr", scope: !370, file: !371, line: 437, baseType: !877, size: 448, offset: 7296)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_validate_tmr", scope: !370, file: !371, line: 439, baseType: !877, size: 448, offset: 7744)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_lease_intvl", scope: !370, file: !371, line: 442, baseType: !725, size: 192, offset: 8192)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_new_lease_intvl", scope: !370, file: !371, line: 444, baseType: !725, size: 192, offset: 8384)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_new_lease_log_intvl", scope: !370, file: !371, line: 449, baseType: !725, size: 192, offset: 8576)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_metadata_intvl", scope: !370, file: !371, line: 451, baseType: !725, size: 192, offset: 8768)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_wait_consumer_lag_resp", scope: !370, file: !371, line: 457, baseType: !126, size: 32, offset: 8960)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_last_err", scope: !370, file: !371, line: 460, baseType: !2634, size: 256, offset: 9024)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_toppar_err", file: !371, line: 60, size: 256, elements: !2635)
!2635 = !{!2636, !2637, !2638, !2639, !2640, !2641}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !2634, file: !371, line: 61, baseType: !550, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "actions", scope: !2634, file: !371, line: 62, baseType: !126, size: 32, offset: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ts", scope: !2634, file: !371, line: 63, baseType: !487, size: 64, offset: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "base_msgid", scope: !2634, file: !371, line: 64, baseType: !937, size: 64, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "base_seq", scope: !2634, file: !371, line: 65, baseType: !320, size: 32, offset: 192)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "last_seq", scope: !2634, file: !371, line: 67, baseType: !320, size: 32, offset: 224)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "rktp_c", scope: !370, file: !371, line: 471, baseType: !2643, size: 384, offset: 9280)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !371, line: 463, size: 384, elements: !2644)
!2644 = !{!2645, !2646, !2647, !2648, !2649, !2650}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "tx_msgs", scope: !2643, file: !371, line: 464, baseType: !1430, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "tx_msg_bytes", scope: !2643, file: !371, line: 465, baseType: !1430, size: 64, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "rx_msgs", scope: !2643, file: !371, line: 466, baseType: !1430, size: 64, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "rx_msg_bytes", scope: !2643, file: !371, line: 467, baseType: !1430, size: 64, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "producer_enq_msgs", scope: !2643, file: !371, line: 468, baseType: !1430, size: 64, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ver_drops", scope: !2643, file: !371, line: 469, baseType: !1430, size: 64, offset: 320)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_p", scope: !299, file: !298, line: 129, baseType: !2652, size: 64, offset: 832)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_partition_cnt", scope: !299, file: !298, line: 130, baseType: !320, size: 32, offset: 896)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_sticky_partition", scope: !299, file: !298, line: 132, baseType: !320, size: 32, offset: 928)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_sticky_intvl", scope: !299, file: !298, line: 134, baseType: !725, size: 192, offset: 960)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_desp", scope: !299, file: !298, line: 137, baseType: !599, size: 320, offset: 1152)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_desp_refresh_intvl", scope: !299, file: !298, line: 140, baseType: !725, size: 192, offset: 1472)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_ts_create", scope: !299, file: !298, line: 144, baseType: !487, size: 64, offset: 1664)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_ts_metadata", scope: !299, file: !298, line: 145, baseType: !487, size: 64, offset: 1728)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_app_refcnt", scope: !299, file: !298, line: 148, baseType: !313, size: 32, offset: 1792)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_state", scope: !299, file: !298, line: 156, baseType: !297, size: 32, offset: 1824)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_flags", scope: !299, file: !298, line: 158, baseType: !126, size: 32, offset: 1856)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_err", scope: !299, file: !298, line: 163, baseType: !550, size: 32, offset: 1888)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_rk", scope: !299, file: !298, line: 165, baseType: !586, size: 64, offset: 1920)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_avg_batchsize", scope: !299, file: !298, line: 167, baseType: !2405, size: 1472, offset: 1984)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_avg_batchcnt", scope: !299, file: !298, line: 168, baseType: !2405, size: 1472, offset: 3456)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_conf", scope: !299, file: !298, line: 170, baseType: !2668, size: 2944, offset: 4928)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_topic_conf_t", file: !125, line: 255, baseType: !1178)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "rkt_saved_partmsgids", scope: !299, file: !298, line: 174, baseType: !2670, size: 128, offset: 7872)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !299, file: !298, line: 174, size: 128, elements: !2671)
!2671 = !{!2672, !2687}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !2670, file: !298, line: 174, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_partition_msgid_s", file: !298, line: 92, size: 512, elements: !2675)
!2675 = !{!2676, !2682, !2683, !2684, !2685, !2686}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2674, file: !298, line: 93, baseType: !2677, size: 128)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2674, file: !298, line: 93, size: 128, elements: !2678)
!2678 = !{!2679, !2680}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !2677, file: !298, line: 93, baseType: !2673, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !2677, file: !298, line: 93, baseType: !2681, size: 64, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !2674, file: !298, line: 94, baseType: !320, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2674, file: !298, line: 95, baseType: !1538, size: 128, offset: 192)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "msgid", scope: !2674, file: !298, line: 96, baseType: !937, size: 64, offset: 320)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "epoch_base_msgid", scope: !2674, file: !298, line: 97, baseType: !937, size: 64, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ts", scope: !2674, file: !298, line: 98, baseType: !487, size: 64, offset: 448)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !2670, file: !298, line: 174, baseType: !2681, size: 64, offset: 64)
!2688 = !{!2689, !2690, !2691, !2692}
!2689 = !DIEnumerator(name: "RD_KAFKA_TOPIC_S_UNKNOWN", value: 0)
!2690 = !DIEnumerator(name: "RD_KAFKA_TOPIC_S_EXISTS", value: 1)
!2691 = !DIEnumerator(name: "RD_KAFKA_TOPIC_S_NOTEXISTS", value: 2)
!2692 = !DIEnumerator(name: "RD_KAFKA_TOPIC_S_ERROR", value: 3)
!2693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !510, line: 42, baseType: !59, size: 32, elements: !2694)
!2694 = !{!2695, !2696, !2697, !2698, !2699}
!2695 = !DIEnumerator(name: "thrd_success", value: 0)
!2696 = !DIEnumerator(name: "thrd_busy", value: 1)
!2697 = !DIEnumerator(name: "thrd_error", value: 2)
!2698 = !DIEnumerator(name: "thrd_nomem", value: 3)
!2699 = !DIEnumerator(name: "thrd_timedout", value: 4)
!2700 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 66, baseType: !59, size: 32, elements: !2701)
!2701 = !{!2702, !2703}
!2702 = !DIEnumerator(name: "RD_DONT_LOCK", value: 0)
!2703 = !DIEnumerator(name: "RD_DO_LOCK", value: 1)
!2704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !2705, line: 24, baseType: !59, size: 32, elements: !2706)
!2705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "", checksumkind: CSK_MD5, checksum: "0d4e972fdeb3da9a5bc94fa41144e9f8")
!2706 = !{!2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715}
!2707 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!2708 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!2709 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!2710 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!2711 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!2712 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!2713 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!2714 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!2715 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!2716 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !510, line: 52, baseType: !59, size: 32, elements: !2717)
!2717 = !{!2718, !2719, !2720}
!2718 = !DIEnumerator(name: "mtx_plain", value: 0)
!2719 = !DIEnumerator(name: "mtx_recursive", value: 1)
!2720 = !DIEnumerator(name: "mtx_timed", value: 2)
!2721 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !441, line: 40, baseType: !59, size: 32, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750}
!2723 = !DIEnumerator(name: "IPPROTO_IP", value: 0)
!2724 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1)
!2725 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2)
!2726 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4)
!2727 = !DIEnumerator(name: "IPPROTO_TCP", value: 6)
!2728 = !DIEnumerator(name: "IPPROTO_EGP", value: 8)
!2729 = !DIEnumerator(name: "IPPROTO_PUP", value: 12)
!2730 = !DIEnumerator(name: "IPPROTO_UDP", value: 17)
!2731 = !DIEnumerator(name: "IPPROTO_IDP", value: 22)
!2732 = !DIEnumerator(name: "IPPROTO_TP", value: 29)
!2733 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33)
!2734 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41)
!2735 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46)
!2736 = !DIEnumerator(name: "IPPROTO_GRE", value: 47)
!2737 = !DIEnumerator(name: "IPPROTO_ESP", value: 50)
!2738 = !DIEnumerator(name: "IPPROTO_AH", value: 51)
!2739 = !DIEnumerator(name: "IPPROTO_MTP", value: 92)
!2740 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94)
!2741 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98)
!2742 = !DIEnumerator(name: "IPPROTO_PIM", value: 103)
!2743 = !DIEnumerator(name: "IPPROTO_COMP", value: 108)
!2744 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132)
!2745 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136)
!2746 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137)
!2747 = !DIEnumerator(name: "IPPROTO_ETHERNET", value: 143)
!2748 = !DIEnumerator(name: "IPPROTO_RAW", value: 255)
!2749 = !DIEnumerator(name: "IPPROTO_MPTCP", value: 262)
!2750 = !DIEnumerator(name: "IPPROTO_MAX", value: 263)
!2751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rd_kafka_thread_type_t", file: !125, line: 5270, baseType: !59, size: 32, elements: !2752)
!2752 = !{!2753, !2754, !2755}
!2753 = !DIEnumerator(name: "RD_KAFKA_THREAD_MAIN", value: 0)
!2754 = !DIEnumerator(name: "RD_KAFKA_THREAD_BACKGROUND", value: 1)
!2755 = !DIEnumerator(name: "RD_KAFKA_THREAD_BROKER", value: 2)
!2756 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2757, file: !2, line: 3097, baseType: !59, size: 32, elements: !2854)
!2757 = distinct !DISubprogram(name: "rd_kafka_broker_op_serve", scope: !2, file: !2, line: 3088, type: !2758, scopeLine: 3088, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !2760)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!561, !412, !914}
!2760 = !{!2761, !2762, !2763, !2764, !2765, !2766, !2769, !2770, !2777, !2780, !2785, !2792, !2799, !2806, !2808, !2813, !2820, !2825, !2832, !2834, !2839, !2846, !2849}
!2761 = !DILocalVariable(name: "rkb", arg: 1, scope: !2757, file: !2, line: 3088, type: !412)
!2762 = !DILocalVariable(name: "rko", arg: 2, scope: !2757, file: !2, line: 3088, type: !914)
!2763 = !DILocalVariable(name: "rktp", scope: !2757, file: !2, line: 3089, type: !368)
!2764 = !DILocalVariable(name: "topic_err", scope: !2757, file: !2, line: 3090, type: !550)
!2765 = !DILocalVariable(name: "wakeup", scope: !2757, file: !2, line: 3091, type: !561)
!2766 = !DILocalVariable(name: "updated", scope: !2767, file: !2, line: 3097, type: !2756)
!2767 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3096, column: 39)
!2768 = distinct !DILexicalBlock(scope: !2757, file: !2, line: 3095, column: 32)
!2769 = !DILocalVariable(name: "brokername", scope: !2767, file: !2, line: 3098, type: !924)
!2770 = !DILocalVariable(name: "_logname", scope: !2771, file: !2, line: 3105, type: !924)
!2771 = distinct !DILexicalBlock(scope: !2772, file: !2, line: 3105, column: 25)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !2, line: 3105, column: 25)
!2773 = distinct !DILexicalBlock(scope: !2774, file: !2, line: 3105, column: 25)
!2774 = distinct !DILexicalBlock(scope: !2775, file: !2, line: 3105, column: 25)
!2775 = distinct !DILexicalBlock(scope: !2776, file: !2, line: 3104, column: 74)
!2776 = distinct !DILexicalBlock(scope: !2767, file: !2, line: 3104, column: 21)
!2777 = !DILocalVariable(name: "old_nodeid", scope: !2778, file: !2, line: 3117, type: !320)
!2778 = distinct !DILexicalBlock(scope: !2779, file: !2, line: 3116, column: 64)
!2779 = distinct !DILexicalBlock(scope: !2767, file: !2, line: 3114, column: 21)
!2780 = !DILocalVariable(name: "_logname", scope: !2781, file: !2, line: 3118, type: !924)
!2781 = distinct !DILexicalBlock(scope: !2782, file: !2, line: 3118, column: 25)
!2782 = distinct !DILexicalBlock(scope: !2783, file: !2, line: 3118, column: 25)
!2783 = distinct !DILexicalBlock(scope: !2784, file: !2, line: 3118, column: 25)
!2784 = distinct !DILexicalBlock(scope: !2778, file: !2, line: 3118, column: 25)
!2785 = !DILocalVariable(name: "_logname", scope: !2786, file: !2, line: 3145, type: !924)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !2, line: 3145, column: 25)
!2787 = distinct !DILexicalBlock(scope: !2788, file: !2, line: 3145, column: 25)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !2, line: 3145, column: 25)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !2, line: 3145, column: 25)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !2, line: 3141, column: 56)
!2791 = distinct !DILexicalBlock(scope: !2767, file: !2, line: 3141, column: 21)
!2792 = !DILocalVariable(name: "_logname", scope: !2793, file: !2, line: 3200, type: !924)
!2793 = distinct !DILexicalBlock(scope: !2794, file: !2, line: 3200, column: 25)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 3200, column: 25)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !2, line: 3200, column: 25)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !2, line: 3200, column: 25)
!2797 = distinct !DILexicalBlock(scope: !2798, file: !2, line: 3199, column: 68)
!2798 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3198, column: 21)
!2799 = !DILocalVariable(name: "_logname", scope: !2800, file: !2, line: 3218, type: !924)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !2, line: 3218, column: 25)
!2801 = distinct !DILexicalBlock(scope: !2802, file: !2, line: 3218, column: 25)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !2, line: 3218, column: 25)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !2, line: 3218, column: 25)
!2804 = distinct !DILexicalBlock(scope: !2805, file: !2, line: 3217, column: 52)
!2805 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3217, column: 21)
!2806 = !DILocalVariable(name: "_RKTP", scope: !2807, file: !2, line: 3238, type: !368)
!2807 = distinct !DILexicalBlock(scope: !2804, file: !2, line: 3238, column: 25)
!2808 = !DILocalVariable(name: "_logname", scope: !2809, file: !2, line: 3243, type: !924)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !2, line: 3243, column: 17)
!2810 = distinct !DILexicalBlock(scope: !2811, file: !2, line: 3243, column: 17)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !2, line: 3243, column: 17)
!2812 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3243, column: 17)
!2813 = !DILocalVariable(name: "_logname", scope: !2814, file: !2, line: 3301, type: !924)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !2, line: 3301, column: 25)
!2815 = distinct !DILexicalBlock(scope: !2816, file: !2, line: 3301, column: 25)
!2816 = distinct !DILexicalBlock(scope: !2817, file: !2, line: 3301, column: 25)
!2817 = distinct !DILexicalBlock(scope: !2818, file: !2, line: 3301, column: 25)
!2818 = distinct !DILexicalBlock(scope: !2819, file: !2, line: 3300, column: 57)
!2819 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3300, column: 21)
!2820 = !DILocalVariable(name: "_logname", scope: !2821, file: !2, line: 3330, type: !924)
!2821 = distinct !DILexicalBlock(scope: !2822, file: !2, line: 3330, column: 17)
!2822 = distinct !DILexicalBlock(scope: !2823, file: !2, line: 3330, column: 17)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !2, line: 3330, column: 17)
!2824 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3330, column: 17)
!2825 = !DILocalVariable(name: "_logname", scope: !2826, file: !2, line: 3370, type: !924)
!2826 = distinct !DILexicalBlock(scope: !2827, file: !2, line: 3370, column: 25)
!2827 = distinct !DILexicalBlock(scope: !2828, file: !2, line: 3370, column: 25)
!2828 = distinct !DILexicalBlock(scope: !2829, file: !2, line: 3370, column: 25)
!2829 = distinct !DILexicalBlock(scope: !2830, file: !2, line: 3370, column: 25)
!2830 = distinct !DILexicalBlock(scope: !2831, file: !2, line: 3369, column: 24)
!2831 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3364, column: 21)
!2832 = !DILocalVariable(name: "_RKTP", scope: !2833, file: !2, line: 3389, type: !368)
!2833 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3389, column: 17)
!2834 = !DILocalVariable(name: "_logname", scope: !2835, file: !2, line: 3396, type: !924)
!2835 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 3396, column: 17)
!2836 = distinct !DILexicalBlock(scope: !2837, file: !2, line: 3396, column: 17)
!2837 = distinct !DILexicalBlock(scope: !2838, file: !2, line: 3396, column: 17)
!2838 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3396, column: 17)
!2839 = !DILocalVariable(name: "_logname", scope: !2840, file: !2, line: 3430, type: !924)
!2840 = distinct !DILexicalBlock(scope: !2841, file: !2, line: 3430, column: 25)
!2841 = distinct !DILexicalBlock(scope: !2842, file: !2, line: 3430, column: 25)
!2842 = distinct !DILexicalBlock(scope: !2843, file: !2, line: 3430, column: 25)
!2843 = distinct !DILexicalBlock(scope: !2844, file: !2, line: 3430, column: 25)
!2844 = distinct !DILexicalBlock(scope: !2845, file: !2, line: 3429, column: 67)
!2845 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3429, column: 21)
!2846 = !DILocalVariable(name: "do_disconnect", scope: !2847, file: !2, line: 3440, type: !561)
!2847 = distinct !DILexicalBlock(scope: !2848, file: !2, line: 3439, column: 63)
!2848 = distinct !DILexicalBlock(scope: !2845, file: !2, line: 3438, column: 28)
!2849 = !DILocalVariable(name: "_logname", scope: !2850, file: !2, line: 3465, type: !924)
!2850 = distinct !DILexicalBlock(scope: !2851, file: !2, line: 3465, column: 17)
!2851 = distinct !DILexicalBlock(scope: !2852, file: !2, line: 3465, column: 17)
!2852 = distinct !DILexicalBlock(scope: !2853, file: !2, line: 3465, column: 17)
!2853 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3465, column: 17)
!2854 = !{!2855, !2856}
!2855 = !DIEnumerator(name: "_UPD_NAME", value: 1)
!2856 = !DIEnumerator(name: "_UPD_ID", value: 2)
!2857 = !{!607, !126, !692, !2858, !487, !412, !709, !365, !2860, !320, !2862, !451, !2864, !862, !2865, !2873, !2875, !59, !559, !825}
!2858 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !1368, line: 220, baseType: !2859)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !323, line: 194, baseType: !356)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2346)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !2863, line: 393, baseType: !59)
!2863 = !DIFile(filename: "/usr/include/zconf.h", directory: "", checksumkind: CSK_MD5, checksum: "95e83c46958f6395f746c80cc6799e76")
!2864 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_lwtopic_t", file: !589, line: 84, baseType: !2867)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rd_kafka_lwtopic_s", file: !298, line: 46, size: 256, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "lrkt_magic", scope: !2867, file: !298, line: 47, baseType: !302, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "lrkt_rk", scope: !2867, file: !298, line: 48, baseType: !586, size: 64, offset: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "lrkt_refcnt", scope: !2867, file: !298, line: 49, baseType: !313, size: 32, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "lrkt_topic", scope: !2867, file: !298, line: 50, baseType: !559, size: 64, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2866)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!2876 = !{!0, !7, !9, !14, !19, !24, !26, !31, !36, !41, !46, !51, !53, !2877, !2882, !2884, !2886, !2888, !2891, !2896, !2901, !2903, !2908, !2910, !2915, !2920, !2922, !2927, !2932, !2934, !2936, !2941, !2946, !2951, !2953, !2958, !2961, !2964, !2967, !2972, !2977, !2979, !2981, !2986, !2989, !2994, !2999, !3004, !3009, !3014, !3019, !3021, !3023, !3026, !3028, !3030, !3035, !3037, !3042, !3047, !3049, !3054, !3056, !3061, !3066, !3068, !3070, !3072, !3077, !3080, !3083, !3088, !3093, !3098, !3100, !3105, !3107, !3109, !3114, !3117, !3119, !3124, !3126, !3131, !3133, !3138, !3140, !3145, !3147, !3149, !3154, !3156, !3161, !3166, !3168, !3171, !3173, !3175, !3177, !3186, !3188, !3190, !3192, !3197, !3200, !3202, !3207, !3209, !3211, !3213, !3215, !3220, !3222, !3224, !3227, !3229, !3231, !3233, !3238, !3240, !3245, !3247, !3249, !3251, !3253, !3258, !3263, !3268, !3270, !3272, !3274, !3276, !3278, !3280, !3282, !3284, !3286, !3291, !3293, !3298, !3300, !3302, !3307, !3309, !3311, !3313, !3316, !3318, !3320, !3322, !3327, !3329, !3334, !3336, !3338, !3340, !3342, !3344, !3346, !3348, !3350, !3352, !3354, !3356, !3358, !3360, !3362, !3364, !3366, !3368, !3370, !3372, !3374, !3376, !3378, !3380, !3382, !3384, !3386, !3388, !3391, !3393, !3395, !3397, !3399, !3401, !3403, !3405, !3407, !3409, !3411, !3413, !3415, !3417, !3419, !3424, !3426, !3428, !3430, !3432, !3434, !3436, !3438, !3440, !3442, !3447, !3449, !3451, !3453, !3455, !3457, !3459, !3461, !3463, !3465, !3467, !3469, !3471, !3473, !3475, !3477, !3479, !3481, !3483, !3491, !3493, !3495, !3498, !3500, !3502, !3504, !3506, !3508, !3511, !3513, !3520, !3522, !3524, !3526, !3528, !3533, !3535, !3540, !3542, !3544, !3546, !3551, !3553, !3558, !3560, !3565, !3567, !3569, !3571, !3573, !3575, !3578, !3580, !3582, !3584, !3586, !3588, !3590, !3592, !3595, !3597, !3599, !3601, !3603, !3605, !3607, !3609, !3614, !3616, !3618, !3620, !3623, !3625, !3627, !3629, !3631, !3634, !3636, !3641, !3643, !3645, !3650, !3653, !3655, !3657, !3659, !3661, !3666, !3668, !3670, !3672, !3674, !3677, !3679, !3681, !3686, !3688, !3690, !3693, !3698, !3700, !3705, !3707, !3709, !3711, !3713, !3715, !3718, !3723, !3726, !3728, !3730, !3733, !3735, !3737, !3739, !3741, !3743, !3745, !3747, !3749, !3751, !3753, !3755, !3757, !3759, !3764, !3767, !3769, !3772, !3774, !3779, !3781, !3783, !3788, !3790, !3792, !3794, !3796, !3798, !3803, !3805, !3807, !3809, !3811, !3813, !3815, !3817, !3819, !3821, !3823, !3826, !3828, !3833, !3835, !3837, !3839, !3841, !3846, !3848, !3850, !3852, !3857, !3859, !3861, !3863, !3865, !3867, !3872, !3874, !3876, !3878, !3880, !3885, !3887, !3889}
!2877 = !DIGlobalVariableExpression(var: !2878, expr: !DIExpression())
!2878 = distinct !DIGlobalVariable(scope: null, file: !2, line: 89, type: !2879, isLocal: true, isDefinition: true)
!2879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 80, elements: !2880)
!2880 = !{!2881}
!2881 = !DISubrange(count: 10)
!2882 = !DIGlobalVariableExpression(var: !2883, expr: !DIExpression())
!2883 = distinct !DIGlobalVariable(scope: null, file: !2, line: 90, type: !302, isLocal: true, isDefinition: true)
!2884 = !DIGlobalVariableExpression(var: !2885, expr: !DIExpression())
!2885 = distinct !DIGlobalVariable(scope: null, file: !2, line: 91, type: !43, isLocal: true, isDefinition: true)
!2886 = !DIGlobalVariableExpression(var: !2887, expr: !DIExpression())
!2887 = distinct !DIGlobalVariable(scope: null, file: !2, line: 92, type: !48, isLocal: true, isDefinition: true)
!2888 = !DIGlobalVariableExpression(var: !2889, expr: !DIExpression())
!2889 = distinct !DIGlobalVariable(name: "rd_kafka_secproto_names", scope: !55, file: !2, line: 88, type: !2890, isLocal: false, isDefinition: true)
!2890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 320, elements: !5)
!2891 = !DIGlobalVariableExpression(var: !2892, expr: !DIExpression())
!2892 = distinct !DIGlobalVariable(scope: null, file: !2, line: 302, type: !2893, isLocal: true, isDefinition: true)
!2893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 48, elements: !2894)
!2894 = !{!2895}
!2895 = !DISubrange(count: 6)
!2896 = !DIGlobalVariableExpression(var: !2897, expr: !DIExpression())
!2897 = distinct !DIGlobalVariable(scope: null, file: !2, line: 302, type: !2898, isLocal: true, isDefinition: true)
!2898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 272, elements: !2899)
!2899 = !{!2900}
!2900 = !DISubrange(count: 34)
!2901 = !DIGlobalVariableExpression(var: !2902, expr: !DIExpression())
!2902 = distinct !DIGlobalVariable(scope: null, file: !2, line: 321, type: !2893, isLocal: true, isDefinition: true)
!2903 = !DIGlobalVariableExpression(var: !2904, expr: !DIExpression())
!2904 = distinct !DIGlobalVariable(scope: null, file: !2, line: 321, type: !2905, isLocal: true, isDefinition: true)
!2905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 184, elements: !2906)
!2906 = !{!2907}
!2907 = !DISubrange(count: 23)
!2908 = !DIGlobalVariableExpression(var: !2909, expr: !DIExpression())
!2909 = distinct !DIGlobalVariable(scope: null, file: !2, line: 561, type: !38, isLocal: true, isDefinition: true)
!2910 = !DIGlobalVariableExpression(var: !2911, expr: !DIExpression())
!2911 = distinct !DIGlobalVariable(scope: null, file: !2, line: 561, type: !2912, isLocal: true, isDefinition: true)
!2912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 168, elements: !2913)
!2913 = !{!2914}
!2914 = !DISubrange(count: 21)
!2915 = !DIGlobalVariableExpression(var: !2916, expr: !DIExpression())
!2916 = distinct !DIGlobalVariable(scope: null, file: !2, line: 561, type: !2917, isLocal: true, isDefinition: true)
!2917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 328, elements: !2918)
!2918 = !{!2919}
!2919 = !DISubrange(count: 41)
!2920 = !DIGlobalVariableExpression(var: !2921, expr: !DIExpression())
!2921 = distinct !DIGlobalVariable(scope: null, file: !2, line: 645, type: !16, isLocal: true, isDefinition: true)
!2922 = !DIGlobalVariableExpression(var: !2923, expr: !DIExpression())
!2923 = distinct !DIGlobalVariable(scope: null, file: !2, line: 645, type: !2924, isLocal: true, isDefinition: true)
!2924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 592, elements: !2925)
!2925 = !{!2926}
!2926 = !DISubrange(count: 74)
!2927 = !DIGlobalVariableExpression(var: !2928, expr: !DIExpression())
!2928 = distinct !DIGlobalVariable(scope: null, file: !2, line: 651, type: !2929, isLocal: true, isDefinition: true)
!2929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 88, elements: !2930)
!2930 = !{!2931}
!2931 = !DISubrange(count: 11)
!2932 = !DIGlobalVariableExpression(var: !2933, expr: !DIExpression())
!2933 = distinct !DIGlobalVariable(scope: null, file: !2, line: 675, type: !11, isLocal: true, isDefinition: true)
!2934 = !DIGlobalVariableExpression(var: !2935, expr: !DIExpression())
!2935 = distinct !DIGlobalVariable(scope: null, file: !2, line: 728, type: !28, isLocal: true, isDefinition: true)
!2936 = !DIGlobalVariableExpression(var: !2937, expr: !DIExpression())
!2937 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1180, type: !2938, isLocal: true, isDefinition: true)
!2938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, elements: !2939)
!2939 = !{!2940}
!2940 = !DISubrange(count: 24)
!2941 = !DIGlobalVariableExpression(var: !2942, expr: !DIExpression())
!2942 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1180, type: !2943, isLocal: true, isDefinition: true)
!2943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 992, elements: !2944)
!2944 = !{!2945}
!2945 = !DISubrange(count: 124)
!2946 = !DIGlobalVariableExpression(var: !2947, expr: !DIExpression())
!2947 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1275, type: !2948, isLocal: true, isDefinition: true)
!2948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 200, elements: !2949)
!2949 = !{!2950}
!2950 = !DISubrange(count: 25)
!2951 = !DIGlobalVariableExpression(var: !2952, expr: !DIExpression())
!2952 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1304, type: !2879, isLocal: true, isDefinition: true)
!2953 = !DIGlobalVariableExpression(var: !2954, expr: !DIExpression())
!2954 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1304, type: !2955, isLocal: true, isDefinition: true)
!2955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 208, elements: !2956)
!2956 = !{!2957}
!2957 = !DISubrange(count: 26)
!2958 = !DIGlobalVariableExpression(var: !2959, expr: !DIExpression())
!2959 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1517, type: !2960, isLocal: true, isDefinition: true)
!2960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 160, elements: !2616)
!2961 = !DIGlobalVariableExpression(var: !2962, expr: !DIExpression())
!2962 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1549, type: !2963, isLocal: true, isDefinition: true)
!2963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 184, elements: !2906)
!2964 = !DIGlobalVariableExpression(var: !2965, expr: !DIExpression())
!2965 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1645, type: !2966, isLocal: true, isDefinition: true)
!2966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 208, elements: !2956)
!2967 = !DIGlobalVariableExpression(var: !2968, expr: !DIExpression())
!2968 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1967, type: !2969, isLocal: true, isDefinition: true)
!2969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !2970)
!2970 = !{!2971}
!2971 = !DISubrange(count: 18)
!2972 = !DIGlobalVariableExpression(var: !2973, expr: !DIExpression())
!2973 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1967, type: !2974, isLocal: true, isDefinition: true)
!2974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 312, elements: !2975)
!2975 = !{!2976}
!2976 = !DISubrange(count: 39)
!2977 = !DIGlobalVariableExpression(var: !2978, expr: !DIExpression())
!2978 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1980, type: !28, isLocal: true, isDefinition: true)
!2979 = !DIGlobalVariableExpression(var: !2980, expr: !DIExpression())
!2980 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1980, type: !2929, isLocal: true, isDefinition: true)
!2981 = !DIGlobalVariableExpression(var: !2982, expr: !DIExpression())
!2982 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1980, type: !2983, isLocal: true, isDefinition: true)
!2983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 888, elements: !2984)
!2984 = !{!2985}
!2985 = !DISubrange(count: 111)
!2986 = !DIGlobalVariableExpression(var: !2987, expr: !DIExpression())
!2987 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1980, type: !2988, isLocal: true, isDefinition: true)
!2988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 112, elements: !22)
!2989 = !DIGlobalVariableExpression(var: !2990, expr: !DIExpression())
!2990 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1980, type: !2991, isLocal: true, isDefinition: true)
!2991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 280, elements: !2992)
!2992 = !{!2993}
!2993 = !DISubrange(count: 35)
!2994 = !DIGlobalVariableExpression(var: !2995, expr: !DIExpression())
!2995 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1991, type: !2996, isLocal: true, isDefinition: true)
!2996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 552, elements: !2997)
!2997 = !{!2998}
!2998 = !DISubrange(count: 69)
!2999 = !DIGlobalVariableExpression(var: !3000, expr: !DIExpression())
!3000 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2029, type: !3001, isLocal: true, isDefinition: true)
!3001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 104, elements: !3002)
!3002 = !{!3003}
!3003 = !DISubrange(count: 13)
!3004 = !DIGlobalVariableExpression(var: !3005, expr: !DIExpression())
!3005 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2032, type: !3006, isLocal: true, isDefinition: true)
!3006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 152, elements: !3007)
!3007 = !{!3008}
!3008 = !DISubrange(count: 19)
!3009 = !DIGlobalVariableExpression(var: !3010, expr: !DIExpression())
!3010 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2065, type: !3011, isLocal: true, isDefinition: true)
!3011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 520, elements: !3012)
!3012 = !{!3013}
!3013 = !DISubrange(count: 65)
!3014 = !DIGlobalVariableExpression(var: !3015, expr: !DIExpression())
!3015 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2067, type: !3016, isLocal: true, isDefinition: true)
!3016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 216, elements: !3017)
!3017 = !{!3018}
!3018 = !DISubrange(count: 27)
!3019 = !DIGlobalVariableExpression(var: !3020, expr: !DIExpression())
!3020 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2260, type: !2879, isLocal: true, isDefinition: true)
!3021 = !DIGlobalVariableExpression(var: !3022, expr: !DIExpression())
!3022 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2563, type: !2879, isLocal: true, isDefinition: true)
!3023 = !DIGlobalVariableExpression(var: !3024, expr: !DIExpression())
!3024 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2563, type: !3025, isLocal: true, isDefinition: true)
!3025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !477)
!3026 = !DIGlobalVariableExpression(var: !3027, expr: !DIExpression())
!3027 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2658, type: !2988, isLocal: true, isDefinition: true)
!3028 = !DIGlobalVariableExpression(var: !3029, expr: !DIExpression())
!3029 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2687, type: !16, isLocal: true, isDefinition: true)
!3030 = !DIGlobalVariableExpression(var: !3031, expr: !DIExpression())
!3031 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2687, type: !3032, isLocal: true, isDefinition: true)
!3032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 232, elements: !3033)
!3033 = !{!3034}
!3034 = !DISubrange(count: 29)
!3035 = !DIGlobalVariableExpression(var: !3036, expr: !DIExpression())
!3036 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2704, type: !11, isLocal: true, isDefinition: true)
!3037 = !DIGlobalVariableExpression(var: !3038, expr: !DIExpression())
!3038 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2704, type: !3039, isLocal: true, isDefinition: true)
!3039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1296, elements: !3040)
!3040 = !{!3041}
!3041 = !DISubrange(count: 162)
!3042 = !DIGlobalVariableExpression(var: !3043, expr: !DIExpression())
!3043 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2732, type: !3044, isLocal: true, isDefinition: true)
!3044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 344, elements: !3045)
!3045 = !{!3046}
!3046 = !DISubrange(count: 43)
!3047 = !DIGlobalVariableExpression(var: !3048, expr: !DIExpression())
!3048 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2732, type: !2974, isLocal: true, isDefinition: true)
!3049 = !DIGlobalVariableExpression(var: !3050, expr: !DIExpression())
!3050 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2738, type: !3051, isLocal: true, isDefinition: true)
!3051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 376, elements: !3052)
!3052 = !{!3053}
!3053 = !DISubrange(count: 47)
!3054 = !DIGlobalVariableExpression(var: !3055, expr: !DIExpression())
!3055 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2761, type: !3, isLocal: true, isDefinition: true)
!3056 = !DIGlobalVariableExpression(var: !3057, expr: !DIExpression())
!3057 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2761, type: !3058, isLocal: true, isDefinition: true)
!3058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 480, elements: !3059)
!3059 = !{!3060}
!3060 = !DISubrange(count: 60)
!3061 = !DIGlobalVariableExpression(var: !3062, expr: !DIExpression())
!3062 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2775, type: !3063, isLocal: true, isDefinition: true)
!3063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 400, elements: !3064)
!3064 = !{!3065}
!3065 = !DISubrange(count: 50)
!3066 = !DIGlobalVariableExpression(var: !3067, expr: !DIExpression())
!3067 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2842, type: !2893, isLocal: true, isDefinition: true)
!3068 = !DIGlobalVariableExpression(var: !3069, expr: !DIExpression())
!3069 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2842, type: !2924, isLocal: true, isDefinition: true)
!3070 = !DIGlobalVariableExpression(var: !3071, expr: !DIExpression())
!3071 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2974, type: !11, isLocal: true, isDefinition: true)
!3072 = !DIGlobalVariableExpression(var: !3073, expr: !DIExpression())
!3073 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2974, type: !3074, isLocal: true, isDefinition: true)
!3074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 824, elements: !3075)
!3075 = !{!3076}
!3076 = !DISubrange(count: 103)
!3077 = !DIGlobalVariableExpression(var: !3078, expr: !DIExpression())
!3078 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4680, type: !3079, isLocal: true, isDefinition: true)
!3079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 264, elements: !939)
!3080 = !DIGlobalVariableExpression(var: !3081, expr: !DIExpression())
!3081 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4680, type: !3082, isLocal: true, isDefinition: true)
!3082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 448, elements: !353)
!3083 = !DIGlobalVariableExpression(var: !3084, expr: !DIExpression())
!3084 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4681, type: !3085, isLocal: true, isDefinition: true)
!3085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 416, elements: !3086)
!3086 = !{!3087}
!3087 = !DISubrange(count: 52)
!3088 = !DIGlobalVariableExpression(var: !3089, expr: !DIExpression())
!3089 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4682, type: !3090, isLocal: true, isDefinition: true)
!3090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 488, elements: !3091)
!3091 = !{!3092}
!3092 = !DISubrange(count: 61)
!3093 = !DIGlobalVariableExpression(var: !3094, expr: !DIExpression())
!3094 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4683, type: !3095, isLocal: true, isDefinition: true)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 504, elements: !3096)
!3096 = !{!3097}
!3097 = !DISubrange(count: 63)
!3098 = !DIGlobalVariableExpression(var: !3099, expr: !DIExpression())
!3099 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4684, type: !3095, isLocal: true, isDefinition: true)
!3100 = !DIGlobalVariableExpression(var: !3101, expr: !DIExpression())
!3101 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4685, type: !3102, isLocal: true, isDefinition: true)
!3102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 408, elements: !3103)
!3103 = !{!3104}
!3104 = !DISubrange(count: 51)
!3105 = !DIGlobalVariableExpression(var: !3106, expr: !DIExpression())
!3106 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4800, type: !2960, isLocal: true, isDefinition: true)
!3107 = !DIGlobalVariableExpression(var: !3108, expr: !DIExpression())
!3108 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4857, type: !48, isLocal: true, isDefinition: true)
!3109 = !DIGlobalVariableExpression(var: !3110, expr: !DIExpression())
!3110 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4857, type: !3111, isLocal: true, isDefinition: true)
!3111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 584, elements: !3112)
!3112 = !{!3113}
!3113 = !DISubrange(count: 73)
!3114 = !DIGlobalVariableExpression(var: !3115, expr: !DIExpression())
!3115 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4868, type: !3116, isLocal: true, isDefinition: true)
!3116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 312, elements: !2975)
!3117 = !DIGlobalVariableExpression(var: !3118, expr: !DIExpression())
!3118 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4883, type: !33, isLocal: true, isDefinition: true)
!3119 = !DIGlobalVariableExpression(var: !3120, expr: !DIExpression())
!3120 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4883, type: !3121, isLocal: true, isDefinition: true)
!3121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 248, elements: !3122)
!3122 = !{!3123}
!3123 = !DISubrange(count: 31)
!3124 = !DIGlobalVariableExpression(var: !3125, expr: !DIExpression())
!3125 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4919, type: !33, isLocal: true, isDefinition: true)
!3126 = !DIGlobalVariableExpression(var: !3127, expr: !DIExpression())
!3127 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4919, type: !3128, isLocal: true, isDefinition: true)
!3128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 256, elements: !3129)
!3129 = !{!3130}
!3130 = !DISubrange(count: 32)
!3131 = !DIGlobalVariableExpression(var: !3132, expr: !DIExpression())
!3132 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4979, type: !2917, isLocal: true, isDefinition: true)
!3133 = !DIGlobalVariableExpression(var: !3134, expr: !DIExpression())
!3134 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4979, type: !3135, isLocal: true, isDefinition: true)
!3135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 600, elements: !3136)
!3136 = !{!3137}
!3137 = !DISubrange(count: 75)
!3138 = !DIGlobalVariableExpression(var: !3139, expr: !DIExpression())
!3139 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5015, type: !514, isLocal: true, isDefinition: true)
!3140 = !DIGlobalVariableExpression(var: !3141, expr: !DIExpression())
!3141 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5015, type: !3142, isLocal: true, isDefinition: true)
!3142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 608, elements: !3143)
!3143 = !{!3144}
!3144 = !DISubrange(count: 76)
!3145 = !DIGlobalVariableExpression(var: !3146, expr: !DIExpression())
!3146 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5017, type: !3025, isLocal: true, isDefinition: true)
!3147 = !DIGlobalVariableExpression(var: !3148, expr: !DIExpression())
!3148 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5033, type: !48, isLocal: true, isDefinition: true)
!3149 = !DIGlobalVariableExpression(var: !3150, expr: !DIExpression())
!3150 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5033, type: !3151, isLocal: true, isDefinition: true)
!3151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 336, elements: !3152)
!3152 = !{!3153}
!3153 = !DISubrange(count: 42)
!3154 = !DIGlobalVariableExpression(var: !3155, expr: !DIExpression())
!3155 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5043, type: !33, isLocal: true, isDefinition: true)
!3156 = !DIGlobalVariableExpression(var: !3157, expr: !DIExpression())
!3157 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5043, type: !3158, isLocal: true, isDefinition: true)
!3158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 288, elements: !3159)
!3159 = !{!3160}
!3160 = !DISubrange(count: 36)
!3161 = !DIGlobalVariableExpression(var: !3162, expr: !DIExpression())
!3162 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5324, type: !3163, isLocal: true, isDefinition: true)
!3163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 304, elements: !3164)
!3164 = !{!3165}
!3165 = !DISubrange(count: 38)
!3166 = !DIGlobalVariableExpression(var: !3167, expr: !DIExpression())
!3167 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5328, type: !3, isLocal: true, isDefinition: true)
!3168 = !DIGlobalVariableExpression(var: !3169, expr: !DIExpression())
!3169 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5334, type: !3170, isLocal: true, isDefinition: true)
!3170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 216, elements: !3017)
!3171 = !DIGlobalVariableExpression(var: !3172, expr: !DIExpression())
!3172 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5344, type: !514, isLocal: true, isDefinition: true)
!3173 = !DIGlobalVariableExpression(var: !3174, expr: !DIExpression())
!3174 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5370, type: !2938, isLocal: true, isDefinition: true)
!3175 = !DIGlobalVariableExpression(var: !3176, expr: !DIExpression())
!3176 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5412, type: !2963, isLocal: true, isDefinition: true)
!3177 = !DIGlobalVariableExpression(var: !3178, expr: !DIExpression())
!3178 = distinct !DIGlobalVariable(name: "ret", scope: !3179, file: !2, line: 5487, type: !3184, isLocal: true, isDefinition: true)
!3179 = distinct !DISubprogram(name: "rd_kafka_broker_name", scope: !2, file: !2, line: 5486, type: !3180, scopeLine: 5486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !3182)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!365, !412}
!3182 = !{!3183}
!3183 = !DILocalVariable(name: "rkb", arg: 1, scope: !3179, file: !2, line: 5486, type: !412)
!3184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 8192, elements: !3185)
!3185 = !{!304, !926}
!3186 = !DIGlobalVariableExpression(var: !3187, expr: !DIExpression())
!3187 = distinct !DIGlobalVariable(name: "reti", scope: !3179, file: !2, line: 5488, type: !126, isLocal: true, isDefinition: true)
!3188 = !DIGlobalVariableExpression(var: !3189, expr: !DIExpression())
!3189 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5510, type: !33, isLocal: true, isDefinition: true)
!3190 = !DIGlobalVariableExpression(var: !3191, expr: !DIExpression())
!3191 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5510, type: !11, isLocal: true, isDefinition: true)
!3192 = !DIGlobalVariableExpression(var: !3193, expr: !DIExpression())
!3193 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5543, type: !3194, isLocal: true, isDefinition: true)
!3194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 432, elements: !3195)
!3195 = !{!3196}
!3196 = !DISubrange(count: 54)
!3197 = !DIGlobalVariableExpression(var: !3198, expr: !DIExpression())
!3198 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5543, type: !3199, isLocal: true, isDefinition: true)
!3199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !1474)
!3200 = !DIGlobalVariableExpression(var: !3201, expr: !DIExpression())
!3201 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5543, type: !2598, isLocal: true, isDefinition: true)
!3202 = !DIGlobalVariableExpression(var: !3203, expr: !DIExpression())
!3203 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5593, type: !3204, isLocal: true, isDefinition: true)
!3204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 640, elements: !3205)
!3205 = !{!3206}
!3206 = !DISubrange(count: 80)
!3207 = !DIGlobalVariableExpression(var: !3208, expr: !DIExpression())
!3208 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5603, type: !2912, isLocal: true, isDefinition: true)
!3209 = !DIGlobalVariableExpression(var: !3210, expr: !DIExpression())
!3210 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5616, type: !3044, isLocal: true, isDefinition: true)
!3211 = !DIGlobalVariableExpression(var: !3212, expr: !DIExpression())
!3212 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5622, type: !2924, isLocal: true, isDefinition: true)
!3213 = !DIGlobalVariableExpression(var: !3214, expr: !DIExpression())
!3214 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5759, type: !48, isLocal: true, isDefinition: true)
!3215 = !DIGlobalVariableExpression(var: !3216, expr: !DIExpression())
!3216 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5759, type: !3217, isLocal: true, isDefinition: true)
!3217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 576, elements: !3218)
!3218 = !{!3219}
!3219 = !DISubrange(count: 72)
!3220 = !DIGlobalVariableExpression(var: !3221, expr: !DIExpression())
!3221 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5759, type: !2893, isLocal: true, isDefinition: true)
!3222 = !DIGlobalVariableExpression(var: !3223, expr: !DIExpression())
!3223 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5759, type: !33, isLocal: true, isDefinition: true)
!3224 = !DIGlobalVariableExpression(var: !3225, expr: !DIExpression())
!3225 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5785, type: !3226, isLocal: true, isDefinition: true)
!3226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 272, elements: !2899)
!3227 = !DIGlobalVariableExpression(var: !3228, expr: !DIExpression())
!3228 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5785, type: !3116, isLocal: true, isDefinition: true)
!3229 = !DIGlobalVariableExpression(var: !3230, expr: !DIExpression())
!3230 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5798, type: !352, isLocal: true, isDefinition: true)
!3231 = !DIGlobalVariableExpression(var: !3232, expr: !DIExpression())
!3232 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5853, type: !33, isLocal: true, isDefinition: true)
!3233 = !DIGlobalVariableExpression(var: !3234, expr: !DIExpression())
!3234 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5853, type: !3235, isLocal: true, isDefinition: true)
!3235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 680, elements: !3236)
!3236 = !{!3237}
!3237 = !DISubrange(count: 85)
!3238 = !DIGlobalVariableExpression(var: !3239, expr: !DIExpression())
!3239 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5917, type: !2615, isLocal: true, isDefinition: true)
!3240 = !DIGlobalVariableExpression(var: !3241, expr: !DIExpression())
!3241 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5917, type: !3242, isLocal: true, isDefinition: true)
!3242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 1040, elements: !3243)
!3243 = !{!3244}
!3244 = !DISubrange(count: 130)
!3245 = !DIGlobalVariableExpression(var: !3246, expr: !DIExpression())
!3246 = distinct !DIGlobalVariable(scope: null, file: !314, line: 351, type: !2615, isLocal: true, isDefinition: true)
!3247 = !DIGlobalVariableExpression(var: !3248, expr: !DIExpression())
!3248 = distinct !DIGlobalVariable(scope: null, file: !314, line: 351, type: !33, isLocal: true, isDefinition: true)
!3249 = !DIGlobalVariableExpression(var: !3250, expr: !DIExpression())
!3250 = distinct !DIGlobalVariable(scope: null, file: !314, line: 351, type: !3226, isLocal: true, isDefinition: true)
!3251 = !DIGlobalVariableExpression(var: !3252, expr: !DIExpression())
!3252 = distinct !DIGlobalVariable(scope: null, file: !2, line: 416, type: !3, isLocal: true, isDefinition: true)
!3253 = !DIGlobalVariableExpression(var: !3254, expr: !DIExpression())
!3254 = distinct !DIGlobalVariable(scope: null, file: !2, line: 443, type: !3255, isLocal: true, isDefinition: true)
!3255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1512, elements: !3256)
!3256 = !{!3257}
!3257 = !DISubrange(count: 189)
!3258 = !DIGlobalVariableExpression(var: !3259, expr: !DIExpression())
!3259 = distinct !DIGlobalVariable(scope: null, file: !2, line: 454, type: !3260, isLocal: true, isDefinition: true)
!3260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 872, elements: !3261)
!3261 = !{!3262}
!3262 = !DISubrange(count: 109)
!3263 = !DIGlobalVariableExpression(var: !3264, expr: !DIExpression())
!3264 = distinct !DIGlobalVariable(scope: null, file: !2, line: 473, type: !3265, isLocal: true, isDefinition: true)
!3265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 880, elements: !3266)
!3266 = !{!3267}
!3267 = !DISubrange(count: 110)
!3268 = !DIGlobalVariableExpression(var: !3269, expr: !DIExpression())
!3269 = distinct !DIGlobalVariable(scope: null, file: !2, line: 495, type: !2905, isLocal: true, isDefinition: true)
!3270 = !DIGlobalVariableExpression(var: !3271, expr: !DIExpression())
!3271 = distinct !DIGlobalVariable(scope: null, file: !2, line: 503, type: !2991, isLocal: true, isDefinition: true)
!3272 = !DIGlobalVariableExpression(var: !3273, expr: !DIExpression())
!3273 = distinct !DIGlobalVariable(scope: null, file: !2, line: 514, type: !2893, isLocal: true, isDefinition: true)
!3274 = !DIGlobalVariableExpression(var: !3275, expr: !DIExpression())
!3275 = distinct !DIGlobalVariable(scope: null, file: !2, line: 525, type: !3, isLocal: true, isDefinition: true)
!3276 = !DIGlobalVariableExpression(var: !3277, expr: !DIExpression())
!3277 = distinct !DIGlobalVariable(scope: null, file: !2, line: 525, type: !11, isLocal: true, isDefinition: true)
!3278 = !DIGlobalVariableExpression(var: !3279, expr: !DIExpression())
!3279 = distinct !DIGlobalVariable(scope: null, file: !2, line: 525, type: !2955, isLocal: true, isDefinition: true)
!3280 = !DIGlobalVariableExpression(var: !3281, expr: !DIExpression())
!3281 = distinct !DIGlobalVariable(scope: null, file: !2, line: 525, type: !2905, isLocal: true, isDefinition: true)
!3282 = !DIGlobalVariableExpression(var: !3283, expr: !DIExpression())
!3283 = distinct !DIGlobalVariable(scope: null, file: !2, line: 531, type: !33, isLocal: true, isDefinition: true)
!3284 = !DIGlobalVariableExpression(var: !3285, expr: !DIExpression())
!3285 = distinct !DIGlobalVariable(scope: null, file: !2, line: 212, type: !16, isLocal: true, isDefinition: true)
!3286 = !DIGlobalVariableExpression(var: !3287, expr: !DIExpression())
!3287 = distinct !DIGlobalVariable(scope: null, file: !2, line: 212, type: !3288, isLocal: true, isDefinition: true)
!3288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 352, elements: !3289)
!3289 = !{!3290}
!3290 = !DISubrange(count: 44)
!3291 = !DIGlobalVariableExpression(var: !3292, expr: !DIExpression())
!3292 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1106, type: !3032, isLocal: true, isDefinition: true)
!3293 = !DIGlobalVariableExpression(var: !3294, expr: !DIExpression())
!3294 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1106, type: !3295, isLocal: true, isDefinition: true)
!3295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 472, elements: !3296)
!3296 = !{!3297}
!3297 = !DISubrange(count: 59)
!3298 = !DIGlobalVariableExpression(var: !3299, expr: !DIExpression())
!3299 = distinct !DIGlobalVariable(scope: null, file: !1759, line: 127, type: !3079, isLocal: true, isDefinition: true)
!3300 = !DIGlobalVariableExpression(var: !3301, expr: !DIExpression())
!3301 = distinct !DIGlobalVariable(scope: null, file: !1759, line: 127, type: !11, isLocal: true, isDefinition: true)
!3302 = !DIGlobalVariableExpression(var: !3303, expr: !DIExpression())
!3303 = distinct !DIGlobalVariable(scope: null, file: !1759, line: 127, type: !3304, isLocal: true, isDefinition: true)
!3304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 560, elements: !3305)
!3305 = !{!3306}
!3306 = !DISubrange(count: 70)
!3307 = !DIGlobalVariableExpression(var: !3308, expr: !DIExpression())
!3308 = distinct !DIGlobalVariable(scope: null, file: !414, line: 1020, type: !3025, isLocal: true, isDefinition: true)
!3309 = !DIGlobalVariableExpression(var: !3310, expr: !DIExpression())
!3310 = distinct !DIGlobalVariable(scope: null, file: !414, line: 1020, type: !2960, isLocal: true, isDefinition: true)
!3311 = !DIGlobalVariableExpression(var: !3312, expr: !DIExpression())
!3312 = distinct !DIGlobalVariable(scope: null, file: !414, line: 1020, type: !3063, isLocal: true, isDefinition: true)
!3313 = !DIGlobalVariableExpression(var: !3314, expr: !DIExpression())
!3314 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1043, type: !3315, isLocal: true, isDefinition: true)
!3315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 200, elements: !2949)
!3316 = !DIGlobalVariableExpression(var: !3317, expr: !DIExpression())
!3317 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1292, type: !2615, isLocal: true, isDefinition: true)
!3318 = !DIGlobalVariableExpression(var: !3319, expr: !DIExpression())
!3319 = distinct !DIGlobalVariable(scope: null, file: !506, line: 1086, type: !2969, isLocal: true, isDefinition: true)
!3320 = !DIGlobalVariableExpression(var: !3321, expr: !DIExpression())
!3321 = distinct !DIGlobalVariable(scope: null, file: !506, line: 1086, type: !2969, isLocal: true, isDefinition: true)
!3322 = !DIGlobalVariableExpression(var: !3323, expr: !DIExpression())
!3323 = distinct !DIGlobalVariable(scope: null, file: !506, line: 1086, type: !3324, isLocal: true, isDefinition: true)
!3324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 712, elements: !3325)
!3325 = !{!3326}
!3326 = !DISubrange(count: 89)
!3327 = !DIGlobalVariableExpression(var: !3328, expr: !DIExpression())
!3328 = distinct !DIGlobalVariable(scope: null, file: !506, line: 973, type: !11, isLocal: true, isDefinition: true)
!3329 = !DIGlobalVariableExpression(var: !3330, expr: !DIExpression())
!3330 = distinct !DIGlobalVariable(scope: null, file: !506, line: 973, type: !3331, isLocal: true, isDefinition: true)
!3331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 440, elements: !3332)
!3332 = !{!3333}
!3333 = !DISubrange(count: 55)
!3334 = !DIGlobalVariableExpression(var: !3335, expr: !DIExpression())
!3335 = distinct !DIGlobalVariable(scope: null, file: !506, line: 974, type: !38, isLocal: true, isDefinition: true)
!3336 = !DIGlobalVariableExpression(var: !3337, expr: !DIExpression())
!3337 = distinct !DIGlobalVariable(scope: null, file: !506, line: 978, type: !3006, isLocal: true, isDefinition: true)
!3338 = !DIGlobalVariableExpression(var: !3339, expr: !DIExpression())
!3339 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1736, type: !2969, isLocal: true, isDefinition: true)
!3340 = !DIGlobalVariableExpression(var: !3341, expr: !DIExpression())
!3341 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1740, type: !3226, isLocal: true, isDefinition: true)
!3342 = !DIGlobalVariableExpression(var: !3343, expr: !DIExpression())
!3343 = distinct !DIGlobalVariable(scope: null, file: !360, line: 98, type: !16, isLocal: true, isDefinition: true)
!3344 = !DIGlobalVariableExpression(var: !3345, expr: !DIExpression())
!3345 = distinct !DIGlobalVariable(scope: null, file: !360, line: 99, type: !2893, isLocal: true, isDefinition: true)
!3346 = !DIGlobalVariableExpression(var: !3347, expr: !DIExpression())
!3347 = distinct !DIGlobalVariable(scope: null, file: !360, line: 100, type: !11, isLocal: true, isDefinition: true)
!3348 = !DIGlobalVariableExpression(var: !3349, expr: !DIExpression())
!3349 = distinct !DIGlobalVariable(scope: null, file: !360, line: 101, type: !48, isLocal: true, isDefinition: true)
!3350 = !DIGlobalVariableExpression(var: !3351, expr: !DIExpression())
!3351 = distinct !DIGlobalVariable(scope: null, file: !360, line: 102, type: !3001, isLocal: true, isDefinition: true)
!3352 = !DIGlobalVariableExpression(var: !3353, expr: !DIExpression())
!3353 = distinct !DIGlobalVariable(scope: null, file: !360, line: 103, type: !11, isLocal: true, isDefinition: true)
!3354 = !DIGlobalVariableExpression(var: !3355, expr: !DIExpression())
!3355 = distinct !DIGlobalVariable(scope: null, file: !360, line: 104, type: !43, isLocal: true, isDefinition: true)
!3356 = !DIGlobalVariableExpression(var: !3357, expr: !DIExpression())
!3357 = distinct !DIGlobalVariable(scope: null, file: !360, line: 105, type: !3006, isLocal: true, isDefinition: true)
!3358 = !DIGlobalVariableExpression(var: !3359, expr: !DIExpression())
!3359 = distinct !DIGlobalVariable(scope: null, file: !360, line: 106, type: !3001, isLocal: true, isDefinition: true)
!3360 = !DIGlobalVariableExpression(var: !3361, expr: !DIExpression())
!3361 = distinct !DIGlobalVariable(scope: null, file: !360, line: 107, type: !11, isLocal: true, isDefinition: true)
!3362 = !DIGlobalVariableExpression(var: !3363, expr: !DIExpression())
!3363 = distinct !DIGlobalVariable(scope: null, file: !360, line: 108, type: !3025, isLocal: true, isDefinition: true)
!3364 = !DIGlobalVariableExpression(var: !3365, expr: !DIExpression())
!3365 = distinct !DIGlobalVariable(scope: null, file: !360, line: 109, type: !2879, isLocal: true, isDefinition: true)
!3366 = !DIGlobalVariableExpression(var: !3367, expr: !DIExpression())
!3367 = distinct !DIGlobalVariable(scope: null, file: !360, line: 110, type: !2879, isLocal: true, isDefinition: true)
!3368 = !DIGlobalVariableExpression(var: !3369, expr: !DIExpression())
!3369 = distinct !DIGlobalVariable(scope: null, file: !360, line: 111, type: !2929, isLocal: true, isDefinition: true)
!3370 = !DIGlobalVariableExpression(var: !3371, expr: !DIExpression())
!3371 = distinct !DIGlobalVariable(scope: null, file: !360, line: 112, type: !2879, isLocal: true, isDefinition: true)
!3372 = !DIGlobalVariableExpression(var: !3373, expr: !DIExpression())
!3373 = distinct !DIGlobalVariable(scope: null, file: !360, line: 113, type: !43, isLocal: true, isDefinition: true)
!3374 = !DIGlobalVariableExpression(var: !3375, expr: !DIExpression())
!3375 = distinct !DIGlobalVariable(scope: null, file: !360, line: 114, type: !2929, isLocal: true, isDefinition: true)
!3376 = !DIGlobalVariableExpression(var: !3377, expr: !DIExpression())
!3377 = distinct !DIGlobalVariable(scope: null, file: !360, line: 115, type: !21, isLocal: true, isDefinition: true)
!3378 = !DIGlobalVariableExpression(var: !3379, expr: !DIExpression())
!3379 = distinct !DIGlobalVariable(scope: null, file: !360, line: 116, type: !2929, isLocal: true, isDefinition: true)
!3380 = !DIGlobalVariableExpression(var: !3381, expr: !DIExpression())
!3381 = distinct !DIGlobalVariable(scope: null, file: !360, line: 117, type: !3001, isLocal: true, isDefinition: true)
!3382 = !DIGlobalVariableExpression(var: !3383, expr: !DIExpression())
!3383 = distinct !DIGlobalVariable(scope: null, file: !360, line: 118, type: !3001, isLocal: true, isDefinition: true)
!3384 = !DIGlobalVariableExpression(var: !3385, expr: !DIExpression())
!3385 = distinct !DIGlobalVariable(scope: null, file: !360, line: 119, type: !21, isLocal: true, isDefinition: true)
!3386 = !DIGlobalVariableExpression(var: !3387, expr: !DIExpression())
!3387 = distinct !DIGlobalVariable(scope: null, file: !360, line: 120, type: !43, isLocal: true, isDefinition: true)
!3388 = !DIGlobalVariableExpression(var: !3389, expr: !DIExpression())
!3389 = distinct !DIGlobalVariable(scope: null, file: !360, line: 121, type: !3390, isLocal: true, isDefinition: true)
!3390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 168, elements: !2913)
!3391 = !DIGlobalVariableExpression(var: !3392, expr: !DIExpression())
!3392 = distinct !DIGlobalVariable(scope: null, file: !360, line: 122, type: !3006, isLocal: true, isDefinition: true)
!3393 = !DIGlobalVariableExpression(var: !3394, expr: !DIExpression())
!3394 = distinct !DIGlobalVariable(scope: null, file: !360, line: 123, type: !3025, isLocal: true, isDefinition: true)
!3395 = !DIGlobalVariableExpression(var: !3396, expr: !DIExpression())
!3396 = distinct !DIGlobalVariable(scope: null, file: !360, line: 124, type: !33, isLocal: true, isDefinition: true)
!3397 = !DIGlobalVariableExpression(var: !3398, expr: !DIExpression())
!3398 = distinct !DIGlobalVariable(scope: null, file: !360, line: 125, type: !3025, isLocal: true, isDefinition: true)
!3399 = !DIGlobalVariableExpression(var: !3400, expr: !DIExpression())
!3400 = distinct !DIGlobalVariable(scope: null, file: !360, line: 126, type: !3025, isLocal: true, isDefinition: true)
!3401 = !DIGlobalVariableExpression(var: !3402, expr: !DIExpression())
!3402 = distinct !DIGlobalVariable(scope: null, file: !360, line: 127, type: !3001, isLocal: true, isDefinition: true)
!3403 = !DIGlobalVariableExpression(var: !3404, expr: !DIExpression())
!3404 = distinct !DIGlobalVariable(scope: null, file: !360, line: 128, type: !2929, isLocal: true, isDefinition: true)
!3405 = !DIGlobalVariableExpression(var: !3406, expr: !DIExpression())
!3406 = distinct !DIGlobalVariable(scope: null, file: !360, line: 129, type: !2929, isLocal: true, isDefinition: true)
!3407 = !DIGlobalVariableExpression(var: !3408, expr: !DIExpression())
!3408 = distinct !DIGlobalVariable(scope: null, file: !360, line: 130, type: !3025, isLocal: true, isDefinition: true)
!3409 = !DIGlobalVariableExpression(var: !3410, expr: !DIExpression())
!3410 = distinct !DIGlobalVariable(scope: null, file: !360, line: 131, type: !3001, isLocal: true, isDefinition: true)
!3411 = !DIGlobalVariableExpression(var: !3412, expr: !DIExpression())
!3412 = distinct !DIGlobalVariable(scope: null, file: !360, line: 132, type: !2615, isLocal: true, isDefinition: true)
!3413 = !DIGlobalVariableExpression(var: !3414, expr: !DIExpression())
!3414 = distinct !DIGlobalVariable(scope: null, file: !360, line: 133, type: !3025, isLocal: true, isDefinition: true)
!3415 = !DIGlobalVariableExpression(var: !3416, expr: !DIExpression())
!3416 = distinct !DIGlobalVariable(scope: null, file: !360, line: 134, type: !38, isLocal: true, isDefinition: true)
!3417 = !DIGlobalVariableExpression(var: !3418, expr: !DIExpression())
!3418 = distinct !DIGlobalVariable(scope: null, file: !360, line: 135, type: !38, isLocal: true, isDefinition: true)
!3419 = !DIGlobalVariableExpression(var: !3420, expr: !DIExpression())
!3420 = distinct !DIGlobalVariable(scope: null, file: !360, line: 136, type: !3421, isLocal: true, isDefinition: true)
!3421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 176, elements: !3422)
!3422 = !{!3423}
!3423 = !DISubrange(count: 22)
!3424 = !DIGlobalVariableExpression(var: !3425, expr: !DIExpression())
!3425 = distinct !DIGlobalVariable(scope: null, file: !360, line: 137, type: !3390, isLocal: true, isDefinition: true)
!3426 = !DIGlobalVariableExpression(var: !3427, expr: !DIExpression())
!3427 = distinct !DIGlobalVariable(scope: null, file: !360, line: 138, type: !3421, isLocal: true, isDefinition: true)
!3428 = !DIGlobalVariableExpression(var: !3429, expr: !DIExpression())
!3429 = distinct !DIGlobalVariable(scope: null, file: !360, line: 139, type: !2938, isLocal: true, isDefinition: true)
!3430 = !DIGlobalVariableExpression(var: !3431, expr: !DIExpression())
!3431 = distinct !DIGlobalVariable(scope: null, file: !360, line: 140, type: !3001, isLocal: true, isDefinition: true)
!3432 = !DIGlobalVariableExpression(var: !3433, expr: !DIExpression())
!3433 = distinct !DIGlobalVariable(scope: null, file: !360, line: 141, type: !2615, isLocal: true, isDefinition: true)
!3434 = !DIGlobalVariableExpression(var: !3435, expr: !DIExpression())
!3435 = distinct !DIGlobalVariable(scope: null, file: !360, line: 143, type: !3121, isLocal: true, isDefinition: true)
!3436 = !DIGlobalVariableExpression(var: !3437, expr: !DIExpression())
!3437 = distinct !DIGlobalVariable(scope: null, file: !360, line: 145, type: !2991, isLocal: true, isDefinition: true)
!3438 = !DIGlobalVariableExpression(var: !3439, expr: !DIExpression())
!3439 = distinct !DIGlobalVariable(scope: null, file: !360, line: 147, type: !2898, isLocal: true, isDefinition: true)
!3440 = !DIGlobalVariableExpression(var: !3441, expr: !DIExpression())
!3441 = distinct !DIGlobalVariable(scope: null, file: !360, line: 148, type: !2615, isLocal: true, isDefinition: true)
!3442 = !DIGlobalVariableExpression(var: !3443, expr: !DIExpression())
!3443 = distinct !DIGlobalVariable(scope: null, file: !360, line: 149, type: !3444, isLocal: true, isDefinition: true)
!3444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 224, elements: !3445)
!3445 = !{!3446}
!3446 = !DISubrange(count: 28)
!3447 = !DIGlobalVariableExpression(var: !3448, expr: !DIExpression())
!3448 = distinct !DIGlobalVariable(scope: null, file: !360, line: 150, type: !2948, isLocal: true, isDefinition: true)
!3449 = !DIGlobalVariableExpression(var: !3450, expr: !DIExpression())
!3450 = distinct !DIGlobalVariable(scope: null, file: !360, line: 152, type: !3158, isLocal: true, isDefinition: true)
!3451 = !DIGlobalVariableExpression(var: !3452, expr: !DIExpression())
!3452 = distinct !DIGlobalVariable(scope: null, file: !360, line: 154, type: !3079, isLocal: true, isDefinition: true)
!3453 = !DIGlobalVariableExpression(var: !3454, expr: !DIExpression())
!3454 = distinct !DIGlobalVariable(scope: null, file: !360, line: 155, type: !11, isLocal: true, isDefinition: true)
!3455 = !DIGlobalVariableExpression(var: !3456, expr: !DIExpression())
!3456 = distinct !DIGlobalVariable(scope: null, file: !360, line: 156, type: !2938, isLocal: true, isDefinition: true)
!3457 = !DIGlobalVariableExpression(var: !3458, expr: !DIExpression())
!3458 = distinct !DIGlobalVariable(scope: null, file: !360, line: 157, type: !3421, isLocal: true, isDefinition: true)
!3459 = !DIGlobalVariableExpression(var: !3460, expr: !DIExpression())
!3460 = distinct !DIGlobalVariable(scope: null, file: !360, line: 158, type: !3421, isLocal: true, isDefinition: true)
!3461 = !DIGlobalVariableExpression(var: !3462, expr: !DIExpression())
!3462 = distinct !DIGlobalVariable(scope: null, file: !360, line: 159, type: !3025, isLocal: true, isDefinition: true)
!3463 = !DIGlobalVariableExpression(var: !3464, expr: !DIExpression())
!3464 = distinct !DIGlobalVariable(scope: null, file: !360, line: 160, type: !3421, isLocal: true, isDefinition: true)
!3465 = !DIGlobalVariableExpression(var: !3466, expr: !DIExpression())
!3466 = distinct !DIGlobalVariable(scope: null, file: !360, line: 161, type: !3025, isLocal: true, isDefinition: true)
!3467 = !DIGlobalVariableExpression(var: !3468, expr: !DIExpression())
!3468 = distinct !DIGlobalVariable(scope: null, file: !360, line: 162, type: !21, isLocal: true, isDefinition: true)
!3469 = !DIGlobalVariableExpression(var: !3470, expr: !DIExpression())
!3470 = distinct !DIGlobalVariable(scope: null, file: !360, line: 163, type: !3025, isLocal: true, isDefinition: true)
!3471 = !DIGlobalVariableExpression(var: !3472, expr: !DIExpression())
!3472 = distinct !DIGlobalVariable(scope: null, file: !360, line: 164, type: !2969, isLocal: true, isDefinition: true)
!3473 = !DIGlobalVariableExpression(var: !3474, expr: !DIExpression())
!3474 = distinct !DIGlobalVariable(scope: null, file: !360, line: 165, type: !3025, isLocal: true, isDefinition: true)
!3475 = !DIGlobalVariableExpression(var: !3476, expr: !DIExpression())
!3476 = distinct !DIGlobalVariable(scope: null, file: !360, line: 166, type: !38, isLocal: true, isDefinition: true)
!3477 = !DIGlobalVariableExpression(var: !3478, expr: !DIExpression())
!3478 = distinct !DIGlobalVariable(scope: null, file: !360, line: 167, type: !3390, isLocal: true, isDefinition: true)
!3479 = !DIGlobalVariableExpression(var: !3480, expr: !DIExpression())
!3480 = distinct !DIGlobalVariable(scope: null, file: !360, line: 168, type: !38, isLocal: true, isDefinition: true)
!3481 = !DIGlobalVariableExpression(var: !3482, expr: !DIExpression())
!3482 = distinct !DIGlobalVariable(scope: null, file: !360, line: 169, type: !2615, isLocal: true, isDefinition: true)
!3483 = !DIGlobalVariableExpression(var: !3484, expr: !DIExpression())
!3484 = distinct !DIGlobalVariable(name: "names", scope: !3485, file: !360, line: 97, type: !3490, isLocal: true, isDefinition: true)
!3485 = distinct !DISubprogram(name: "rd_kafka_ApiKey2str", scope: !360, file: !360, line: 96, type: !3486, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !3488)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!365, !862}
!3488 = !{!3489}
!3489 = !DILocalVariable(name: "ApiKey", arg: 1, scope: !3485, file: !360, line: 96, type: !862)
!3490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 4352, elements: !2381)
!3491 = !DIGlobalVariableExpression(var: !3492, expr: !DIExpression())
!3492 = distinct !DIGlobalVariable(name: "ret", scope: !3485, file: !360, line: 171, type: !1590, isLocal: true, isDefinition: true)
!3493 = !DIGlobalVariableExpression(var: !3494, expr: !DIExpression())
!3494 = distinct !DIGlobalVariable(scope: null, file: !360, line: 175, type: !3001, isLocal: true, isDefinition: true)
!3495 = !DIGlobalVariableExpression(var: !3496, expr: !DIExpression())
!3496 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1849, type: !3497, isLocal: true, isDefinition: true)
!3497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 176, elements: !3422)
!3498 = !DIGlobalVariableExpression(var: !3499, expr: !DIExpression())
!3499 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1857, type: !48, isLocal: true, isDefinition: true)
!3500 = !DIGlobalVariableExpression(var: !3501, expr: !DIExpression())
!3501 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1857, type: !3288, isLocal: true, isDefinition: true)
!3502 = !DIGlobalVariableExpression(var: !3503, expr: !DIExpression())
!3503 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1869, type: !3, isLocal: true, isDefinition: true)
!3504 = !DIGlobalVariableExpression(var: !3505, expr: !DIExpression())
!3505 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1869, type: !3090, isLocal: true, isDefinition: true)
!3506 = !DIGlobalVariableExpression(var: !3507, expr: !DIExpression())
!3507 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1893, type: !2948, isLocal: true, isDefinition: true)
!3508 = !DIGlobalVariableExpression(var: !3509, expr: !DIExpression())
!3509 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1899, type: !3510, isLocal: true, isDefinition: true)
!3510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 520, elements: !3012)
!3511 = !DIGlobalVariableExpression(var: !3512, expr: !DIExpression())
!3512 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1821, type: !2963, isLocal: true, isDefinition: true)
!3513 = !DIGlobalVariableExpression(var: !3514, expr: !DIExpression())
!3514 = distinct !DIGlobalVariable(name: "ret", scope: !3515, file: !2292, line: 110, type: !1408, isLocal: true, isDefinition: true)
!3515 = distinct !DISubprogram(name: "rd_strerror", scope: !2292, file: !2292, line: 109, type: !3516, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !3518)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!365, !126}
!3518 = !{!3519}
!3519 = !DILocalVariable(name: "err", arg: 1, scope: !3515, file: !2292, line: 109, type: !126)
!3520 = !DIGlobalVariableExpression(var: !3521, expr: !DIExpression())
!3521 = distinct !DIGlobalVariable(scope: null, file: !2, line: 193, type: !3288, isLocal: true, isDefinition: true)
!3522 = !DIGlobalVariableExpression(var: !3523, expr: !DIExpression())
!3523 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2431, type: !2929, isLocal: true, isDefinition: true)
!3524 = !DIGlobalVariableExpression(var: !3525, expr: !DIExpression())
!3525 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2431, type: !3085, isLocal: true, isDefinition: true)
!3526 = !DIGlobalVariableExpression(var: !3527, expr: !DIExpression())
!3527 = distinct !DIGlobalVariable(scope: null, file: !2, line: 232, type: !514, isLocal: true, isDefinition: true)
!3528 = !DIGlobalVariableExpression(var: !3529, expr: !DIExpression())
!3529 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2495, type: !3530, isLocal: true, isDefinition: true)
!3530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1480, elements: !3531)
!3531 = !{!3532}
!3532 = !DISubrange(count: 185)
!3533 = !DIGlobalVariableExpression(var: !3534, expr: !DIExpression())
!3534 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2512, type: !3058, isLocal: true, isDefinition: true)
!3535 = !DIGlobalVariableExpression(var: !3536, expr: !DIExpression())
!3536 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2530, type: !3537, isLocal: true, isDefinition: true)
!3537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 864, elements: !3538)
!3538 = !{!3539}
!3539 = !DISubrange(count: 108)
!3540 = !DIGlobalVariableExpression(var: !3541, expr: !DIExpression())
!3541 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2354, type: !3, isLocal: true, isDefinition: true)
!3542 = !DIGlobalVariableExpression(var: !3543, expr: !DIExpression())
!3543 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2354, type: !2917, isLocal: true, isDefinition: true)
!3544 = !DIGlobalVariableExpression(var: !3545, expr: !DIExpression())
!3545 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2354, type: !3, isLocal: true, isDefinition: true)
!3546 = !DIGlobalVariableExpression(var: !3547, expr: !DIExpression())
!3547 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2394, type: !3548, isLocal: true, isDefinition: true)
!3548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 360, elements: !3549)
!3549 = !{!3550}
!3550 = !DISubrange(count: 45)
!3551 = !DIGlobalVariableExpression(var: !3552, expr: !DIExpression())
!3552 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2285, type: !2893, isLocal: true, isDefinition: true)
!3553 = !DIGlobalVariableExpression(var: !3554, expr: !DIExpression())
!3554 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2294, type: !3555, isLocal: true, isDefinition: true)
!3555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 296, elements: !3556)
!3556 = !{!3557}
!3557 = !DISubrange(count: 37)
!3558 = !DIGlobalVariableExpression(var: !3559, expr: !DIExpression())
!3559 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2298, type: !48, isLocal: true, isDefinition: true)
!3560 = !DIGlobalVariableExpression(var: !3561, expr: !DIExpression())
!3561 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2298, type: !3562, isLocal: true, isDefinition: true)
!3562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 744, elements: !3563)
!3563 = !{!3564}
!3564 = !DISubrange(count: 93)
!3565 = !DIGlobalVariableExpression(var: !3566, expr: !DIExpression())
!3566 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2298, type: !33, isLocal: true, isDefinition: true)
!3567 = !DIGlobalVariableExpression(var: !3568, expr: !DIExpression())
!3568 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2298, type: !2955, isLocal: true, isDefinition: true)
!3569 = !DIGlobalVariableExpression(var: !3570, expr: !DIExpression())
!3570 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2310, type: !33, isLocal: true, isDefinition: true)
!3571 = !DIGlobalVariableExpression(var: !3572, expr: !DIExpression())
!3572 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2310, type: !3199, isLocal: true, isDefinition: true)
!3573 = !DIGlobalVariableExpression(var: !3574, expr: !DIExpression())
!3574 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2317, type: !2879, isLocal: true, isDefinition: true)
!3575 = !DIGlobalVariableExpression(var: !3576, expr: !DIExpression())
!3576 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2317, type: !3577, isLocal: true, isDefinition: true)
!3577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 296, elements: !3556)
!3578 = !DIGlobalVariableExpression(var: !3579, expr: !DIExpression())
!3579 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2333, type: !2924, isLocal: true, isDefinition: true)
!3580 = !DIGlobalVariableExpression(var: !3581, expr: !DIExpression())
!3581 = distinct !DIGlobalVariable(scope: null, file: !2, line: 966, type: !2912, isLocal: true, isDefinition: true)
!3582 = !DIGlobalVariableExpression(var: !3583, expr: !DIExpression())
!3583 = distinct !DIGlobalVariable(scope: null, file: !2, line: 966, type: !3102, isLocal: true, isDefinition: true)
!3584 = !DIGlobalVariableExpression(var: !3585, expr: !DIExpression())
!3585 = distinct !DIGlobalVariable(scope: null, file: !2, line: 968, type: !3170, isLocal: true, isDefinition: true)
!3586 = !DIGlobalVariableExpression(var: !3587, expr: !DIExpression())
!3587 = distinct !DIGlobalVariable(scope: null, file: !2, line: 975, type: !3025, isLocal: true, isDefinition: true)
!3588 = !DIGlobalVariableExpression(var: !3589, expr: !DIExpression())
!3589 = distinct !DIGlobalVariable(scope: null, file: !298, line: 65, type: !3, isLocal: true, isDefinition: true)
!3590 = !DIGlobalVariableExpression(var: !3591, expr: !DIExpression())
!3591 = distinct !DIGlobalVariable(scope: null, file: !314, line: 134, type: !3199, isLocal: true, isDefinition: true)
!3592 = !DIGlobalVariableExpression(var: !3593, expr: !DIExpression())
!3593 = distinct !DIGlobalVariable(scope: null, file: !314, line: 134, type: !3594, isLocal: true, isDefinition: true)
!3594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 256, elements: !3129)
!3595 = !DIGlobalVariableExpression(var: !3596, expr: !DIExpression())
!3596 = distinct !DIGlobalVariable(scope: null, file: !2, line: 144, type: !33, isLocal: true, isDefinition: true)
!3597 = !DIGlobalVariableExpression(var: !3598, expr: !DIExpression())
!3598 = distinct !DIGlobalVariable(scope: null, file: !2, line: 161, type: !2893, isLocal: true, isDefinition: true)
!3599 = !DIGlobalVariableExpression(var: !3600, expr: !DIExpression())
!3600 = distinct !DIGlobalVariable(scope: null, file: !2, line: 171, type: !3, isLocal: true, isDefinition: true)
!3601 = !DIGlobalVariableExpression(var: !3602, expr: !DIExpression())
!3602 = distinct !DIGlobalVariable(scope: null, file: !2, line: 171, type: !2879, isLocal: true, isDefinition: true)
!3603 = !DIGlobalVariableExpression(var: !3604, expr: !DIExpression())
!3604 = distinct !DIGlobalVariable(scope: null, file: !2, line: 171, type: !2929, isLocal: true, isDefinition: true)
!3605 = !DIGlobalVariableExpression(var: !3606, expr: !DIExpression())
!3606 = distinct !DIGlobalVariable(scope: null, file: !2, line: 177, type: !2893, isLocal: true, isDefinition: true)
!3607 = !DIGlobalVariableExpression(var: !3608, expr: !DIExpression())
!3608 = distinct !DIGlobalVariable(scope: null, file: !314, line: 160, type: !3199, isLocal: true, isDefinition: true)
!3609 = !DIGlobalVariableExpression(var: !3610, expr: !DIExpression())
!3610 = distinct !DIGlobalVariable(scope: null, file: !314, line: 160, type: !3611, isLocal: true, isDefinition: true)
!3611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 240, elements: !3612)
!3612 = !{!3613}
!3613 = !DISubrange(count: 30)
!3614 = !DIGlobalVariableExpression(var: !3615, expr: !DIExpression())
!3615 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4424, type: !3001, isLocal: true, isDefinition: true)
!3616 = !DIGlobalVariableExpression(var: !3617, expr: !DIExpression())
!3617 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4439, type: !16, isLocal: true, isDefinition: true)
!3618 = !DIGlobalVariableExpression(var: !3619, expr: !DIExpression())
!3619 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4439, type: !2948, isLocal: true, isDefinition: true)
!3620 = !DIGlobalVariableExpression(var: !3621, expr: !DIExpression(DW_OP_constu, 1000, DW_OP_stack_value))
!3621 = distinct !DIGlobalVariable(name: "rd_kafka_max_block_ms", scope: !55, file: !2, line: 81, type: !3622, isLocal: true, isDefinition: true)
!3622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!3623 = !DIGlobalVariableExpression(var: !3624, expr: !DIExpression())
!3624 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4506, type: !2879, isLocal: true, isDefinition: true)
!3625 = !DIGlobalVariableExpression(var: !3626, expr: !DIExpression())
!3626 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4506, type: !3128, isLocal: true, isDefinition: true)
!3627 = !DIGlobalVariableExpression(var: !3628, expr: !DIExpression())
!3628 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4572, type: !3116, isLocal: true, isDefinition: true)
!3629 = !DIGlobalVariableExpression(var: !3630, expr: !DIExpression())
!3630 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4581, type: !3079, isLocal: true, isDefinition: true)
!3631 = !DIGlobalVariableExpression(var: !3632, expr: !DIExpression())
!3632 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4581, type: !3633, isLocal: true, isDefinition: true)
!3633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 320, elements: !515)
!3634 = !DIGlobalVariableExpression(var: !3635, expr: !DIExpression())
!3635 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4618, type: !2879, isLocal: true, isDefinition: true)
!3636 = !DIGlobalVariableExpression(var: !3637, expr: !DIExpression())
!3637 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4618, type: !3638, isLocal: true, isDefinition: true)
!3638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1312, elements: !3639)
!3639 = !{!3640}
!3640 = !DISubrange(count: 164)
!3641 = !DIGlobalVariableExpression(var: !3642, expr: !DIExpression())
!3642 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4644, type: !3032, isLocal: true, isDefinition: true)
!3643 = !DIGlobalVariableExpression(var: !3644, expr: !DIExpression())
!3644 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4378, type: !3025, isLocal: true, isDefinition: true)
!3645 = !DIGlobalVariableExpression(var: !3646, expr: !DIExpression())
!3646 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4378, type: !3647, isLocal: true, isDefinition: true)
!3647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 424, elements: !3648)
!3648 = !{!3649}
!3649 = !DISubrange(count: 53)
!3650 = !DIGlobalVariableExpression(var: !3651, expr: !DIExpression())
!3651 = distinct !DIGlobalVariable(scope: null, file: !2, line: 905, type: !3652, isLocal: true, isDefinition: true)
!3652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 232, elements: !3033)
!3653 = !DIGlobalVariableExpression(var: !3654, expr: !DIExpression())
!3654 = distinct !DIGlobalVariable(scope: null, file: !2, line: 910, type: !2879, isLocal: true, isDefinition: true)
!3655 = !DIGlobalVariableExpression(var: !3656, expr: !DIExpression())
!3656 = distinct !DIGlobalVariable(scope: null, file: !2, line: 914, type: !43, isLocal: true, isDefinition: true)
!3657 = !DIGlobalVariableExpression(var: !3658, expr: !DIExpression())
!3658 = distinct !DIGlobalVariable(scope: null, file: !2, line: 920, type: !3025, isLocal: true, isDefinition: true)
!3659 = !DIGlobalVariableExpression(var: !3660, expr: !DIExpression())
!3660 = distinct !DIGlobalVariable(scope: null, file: !2, line: 923, type: !48, isLocal: true, isDefinition: true)
!3661 = !DIGlobalVariableExpression(var: !3662, expr: !DIExpression())
!3662 = distinct !DIGlobalVariable(scope: null, file: !2, line: 923, type: !3663, isLocal: true, isDefinition: true)
!3663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 656, elements: !3664)
!3664 = !{!3665}
!3665 = !DISubrange(count: 82)
!3666 = !DIGlobalVariableExpression(var: !3667, expr: !DIExpression())
!3667 = distinct !DIGlobalVariable(scope: null, file: !2, line: 945, type: !3421, isLocal: true, isDefinition: true)
!3668 = !DIGlobalVariableExpression(var: !3669, expr: !DIExpression())
!3669 = distinct !DIGlobalVariable(scope: null, file: !2, line: 953, type: !3163, isLocal: true, isDefinition: true)
!3670 = !DIGlobalVariableExpression(var: !3671, expr: !DIExpression())
!3671 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3655, type: !16, isLocal: true, isDefinition: true)
!3672 = !DIGlobalVariableExpression(var: !3673, expr: !DIExpression())
!3673 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3655, type: !3663, isLocal: true, isDefinition: true)
!3674 = !DIGlobalVariableExpression(var: !3675, expr: !DIExpression())
!3675 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4160, type: !3676, isLocal: true, isDefinition: true)
!3676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 248, elements: !3122)
!3677 = !DIGlobalVariableExpression(var: !3678, expr: !DIExpression())
!3678 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3860, type: !2991, isLocal: true, isDefinition: true)
!3679 = !DIGlobalVariableExpression(var: !3680, expr: !DIExpression())
!3680 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3929, type: !33, isLocal: true, isDefinition: true)
!3681 = !DIGlobalVariableExpression(var: !3682, expr: !DIExpression())
!3682 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3929, type: !3683, isLocal: true, isDefinition: true)
!3683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 760, elements: !3684)
!3684 = !{!3685}
!3685 = !DISubrange(count: 95)
!3686 = !DIGlobalVariableExpression(var: !3687, expr: !DIExpression())
!3687 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3951, type: !3683, isLocal: true, isDefinition: true)
!3688 = !DIGlobalVariableExpression(var: !3689, expr: !DIExpression())
!3689 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3973, type: !3085, isLocal: true, isDefinition: true)
!3690 = !DIGlobalVariableExpression(var: !3691, expr: !DIExpression())
!3691 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4000, type: !3692, isLocal: true, isDefinition: true)
!3692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 560, elements: !3305)
!3693 = !DIGlobalVariableExpression(var: !3694, expr: !DIExpression())
!3694 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4032, type: !3695, isLocal: true, isDefinition: true)
!3695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 392, elements: !3696)
!3696 = !{!3697}
!3697 = !DISubrange(count: 49)
!3698 = !DIGlobalVariableExpression(var: !3699, expr: !DIExpression())
!3699 = distinct !DIGlobalVariable(scope: null, file: !2, line: 750, type: !11, isLocal: true, isDefinition: true)
!3700 = !DIGlobalVariableExpression(var: !3701, expr: !DIExpression())
!3701 = distinct !DIGlobalVariable(scope: null, file: !2, line: 750, type: !3702, isLocal: true, isDefinition: true)
!3702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 1056, elements: !3703)
!3703 = !{!3704}
!3704 = !DISubrange(count: 132)
!3705 = !DIGlobalVariableExpression(var: !3706, expr: !DIExpression())
!3706 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2894, type: !2917, isLocal: true, isDefinition: true)
!3707 = !DIGlobalVariableExpression(var: !3708, expr: !DIExpression())
!3708 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4206, type: !3676, isLocal: true, isDefinition: true)
!3709 = !DIGlobalVariableExpression(var: !3710, expr: !DIExpression())
!3710 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4239, type: !2893, isLocal: true, isDefinition: true)
!3711 = !DIGlobalVariableExpression(var: !3712, expr: !DIExpression())
!3712 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4239, type: !2938, isLocal: true, isDefinition: true)
!3713 = !DIGlobalVariableExpression(var: !3714, expr: !DIExpression())
!3714 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4292, type: !3090, isLocal: true, isDefinition: true)
!3715 = !DIGlobalVariableExpression(var: !3716, expr: !DIExpression())
!3716 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2194, type: !3717, isLocal: true, isDefinition: true)
!3717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 240, elements: !3612)
!3718 = !DIGlobalVariableExpression(var: !3719, expr: !DIExpression())
!3719 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2213, type: !3720, isLocal: true, isDefinition: true)
!3720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 368, elements: !3721)
!3721 = !{!3722}
!3722 = !DISubrange(count: 46)
!3723 = !DIGlobalVariableExpression(var: !3724, expr: !DIExpression())
!3724 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2226, type: !3725, isLocal: true, isDefinition: true)
!3725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 192, elements: !2939)
!3726 = !DIGlobalVariableExpression(var: !3727, expr: !DIExpression())
!3727 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2226, type: !3444, isLocal: true, isDefinition: true)
!3728 = !DIGlobalVariableExpression(var: !3729, expr: !DIExpression())
!3729 = distinct !DIGlobalVariable(scope: null, file: !2, line: 995, type: !2898, isLocal: true, isDefinition: true)
!3730 = !DIGlobalVariableExpression(var: !3731, expr: !DIExpression())
!3731 = distinct !DIGlobalVariable(scope: null, file: !2, line: 838, type: !3732, isLocal: true, isDefinition: true)
!3732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 544, elements: !2381)
!3733 = !DIGlobalVariableExpression(var: !3734, expr: !DIExpression())
!3734 = distinct !DIGlobalVariable(scope: null, file: !2, line: 838, type: !2879, isLocal: true, isDefinition: true)
!3735 = !DIGlobalVariableExpression(var: !3736, expr: !DIExpression())
!3736 = distinct !DIGlobalVariable(scope: null, file: !2, line: 856, type: !3085, isLocal: true, isDefinition: true)
!3737 = !DIGlobalVariableExpression(var: !3738, expr: !DIExpression())
!3738 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3093, type: !3315, isLocal: true, isDefinition: true)
!3739 = !DIGlobalVariableExpression(var: !3740, expr: !DIExpression())
!3740 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3105, type: !3121, isLocal: true, isDefinition: true)
!3741 = !DIGlobalVariableExpression(var: !3742, expr: !DIExpression())
!3742 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3118, type: !3032, isLocal: true, isDefinition: true)
!3743 = !DIGlobalVariableExpression(var: !3744, expr: !DIExpression())
!3744 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3145, type: !3170, isLocal: true, isDefinition: true)
!3745 = !DIGlobalVariableExpression(var: !3746, expr: !DIExpression())
!3746 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3157, type: !2938, isLocal: true, isDefinition: true)
!3747 = !DIGlobalVariableExpression(var: !3748, expr: !DIExpression())
!3748 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3200, type: !33, isLocal: true, isDefinition: true)
!3749 = !DIGlobalVariableExpression(var: !3750, expr: !DIExpression())
!3750 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3200, type: !3163, isLocal: true, isDefinition: true)
!3751 = !DIGlobalVariableExpression(var: !3752, expr: !DIExpression())
!3752 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3200, type: !2938, isLocal: true, isDefinition: true)
!3753 = !DIGlobalVariableExpression(var: !3754, expr: !DIExpression())
!3754 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3200, type: !2969, isLocal: true, isDefinition: true)
!3755 = !DIGlobalVariableExpression(var: !3756, expr: !DIExpression())
!3756 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3218, type: !3102, isLocal: true, isDefinition: true)
!3757 = !DIGlobalVariableExpression(var: !3758, expr: !DIExpression())
!3758 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3218, type: !33, isLocal: true, isDefinition: true)
!3759 = !DIGlobalVariableExpression(var: !3760, expr: !DIExpression())
!3760 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3243, type: !3761, isLocal: true, isDefinition: true)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 496, elements: !3762)
!3762 = !{!3763}
!3763 = !DISubrange(count: 62)
!3764 = !DIGlobalVariableExpression(var: !3765, expr: !DIExpression())
!3765 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3250, type: !3766, isLocal: true, isDefinition: true)
!3766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 440, elements: !3332)
!3767 = !DIGlobalVariableExpression(var: !3768, expr: !DIExpression())
!3768 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3259, type: !2955, isLocal: true, isDefinition: true)
!3769 = !DIGlobalVariableExpression(var: !3770, expr: !DIExpression())
!3770 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3259, type: !3771, isLocal: true, isDefinition: true)
!3771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 584, elements: !3112)
!3772 = !DIGlobalVariableExpression(var: !3773, expr: !DIExpression())
!3773 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3264, type: !16, isLocal: true, isDefinition: true)
!3774 = !DIGlobalVariableExpression(var: !3775, expr: !DIExpression())
!3775 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3272, type: !3776, isLocal: true, isDefinition: true)
!3776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 568, elements: !3777)
!3777 = !{!3778}
!3778 = !DISubrange(count: 71)
!3779 = !DIGlobalVariableExpression(var: !3780, expr: !DIExpression())
!3780 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3301, type: !3692, isLocal: true, isDefinition: true)
!3781 = !DIGlobalVariableExpression(var: !3782, expr: !DIExpression())
!3782 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3301, type: !3, isLocal: true, isDefinition: true)
!3783 = !DIGlobalVariableExpression(var: !3784, expr: !DIExpression())
!3784 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3330, type: !3785, isLocal: true, isDefinition: true)
!3785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 624, elements: !3786)
!3786 = !{!3787}
!3787 = !DISubrange(count: 78)
!3788 = !DIGlobalVariableExpression(var: !3789, expr: !DIExpression())
!3789 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3348, type: !16, isLocal: true, isDefinition: true)
!3790 = !DIGlobalVariableExpression(var: !3791, expr: !DIExpression())
!3791 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3361, type: !2955, isLocal: true, isDefinition: true)
!3792 = !DIGlobalVariableExpression(var: !3793, expr: !DIExpression())
!3793 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3370, type: !3217, isLocal: true, isDefinition: true)
!3794 = !DIGlobalVariableExpression(var: !3795, expr: !DIExpression())
!3795 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3377, type: !3766, isLocal: true, isDefinition: true)
!3796 = !DIGlobalVariableExpression(var: !3797, expr: !DIExpression())
!3797 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3396, type: !3, isLocal: true, isDefinition: true)
!3798 = !DIGlobalVariableExpression(var: !3799, expr: !DIExpression())
!3799 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3396, type: !3800, isLocal: true, isDefinition: true)
!3800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 968, elements: !3801)
!3801 = !{!3802}
!3802 = !DISubrange(count: 121)
!3803 = !DIGlobalVariableExpression(var: !3804, expr: !DIExpression())
!3804 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3411, type: !3421, isLocal: true, isDefinition: true)
!3805 = !DIGlobalVariableExpression(var: !3806, expr: !DIExpression())
!3806 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3430, type: !2615, isLocal: true, isDefinition: true)
!3807 = !DIGlobalVariableExpression(var: !3808, expr: !DIExpression())
!3808 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3454, type: !3151, isLocal: true, isDefinition: true)
!3809 = !DIGlobalVariableExpression(var: !3810, expr: !DIExpression())
!3810 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3465, type: !3006, isLocal: true, isDefinition: true)
!3811 = !DIGlobalVariableExpression(var: !3812, expr: !DIExpression())
!3812 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3479, type: !3717, isLocal: true, isDefinition: true)
!3813 = !DIGlobalVariableExpression(var: !3814, expr: !DIExpression())
!3814 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3024, type: !3128, isLocal: true, isDefinition: true)
!3815 = !DIGlobalVariableExpression(var: !3816, expr: !DIExpression())
!3816 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3033, type: !33, isLocal: true, isDefinition: true)
!3817 = !DIGlobalVariableExpression(var: !3818, expr: !DIExpression())
!3818 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3033, type: !3079, isLocal: true, isDefinition: true)
!3819 = !DIGlobalVariableExpression(var: !3820, expr: !DIExpression())
!3820 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5662, type: !2893, isLocal: true, isDefinition: true)
!3821 = !DIGlobalVariableExpression(var: !3822, expr: !DIExpression())
!3822 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5662, type: !3032, isLocal: true, isDefinition: true)
!3823 = !DIGlobalVariableExpression(var: !3824, expr: !DIExpression())
!3824 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5697, type: !3825, isLocal: true, isDefinition: true)
!3825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 424, elements: !3648)
!3826 = !DIGlobalVariableExpression(var: !3827, expr: !DIExpression())
!3827 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5702, type: !33, isLocal: true, isDefinition: true)
!3828 = !DIGlobalVariableExpression(var: !3829, expr: !DIExpression())
!3829 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5702, type: !3830, isLocal: true, isDefinition: true)
!3830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 632, elements: !3831)
!3831 = !{!3832}
!3832 = !DISubrange(count: 79)
!3833 = !DIGlobalVariableExpression(var: !3834, expr: !DIExpression())
!3834 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5724, type: !3151, isLocal: true, isDefinition: true)
!3835 = !DIGlobalVariableExpression(var: !3836, expr: !DIExpression())
!3836 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5176, type: !302, isLocal: true, isDefinition: true)
!3837 = !DIGlobalVariableExpression(var: !3838, expr: !DIExpression())
!3838 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5181, type: !3063, isLocal: true, isDefinition: true)
!3839 = !DIGlobalVariableExpression(var: !3840, expr: !DIExpression())
!3840 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5201, type: !352, isLocal: true, isDefinition: true)
!3841 = !DIGlobalVariableExpression(var: !3842, expr: !DIExpression())
!3842 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5213, type: !3843, isLocal: true, isDefinition: true)
!3843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 720, elements: !3844)
!3844 = !{!3845}
!3845 = !DISubrange(count: 90)
!3846 = !DIGlobalVariableExpression(var: !3847, expr: !DIExpression())
!3847 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5253, type: !2879, isLocal: true, isDefinition: true)
!3848 = !DIGlobalVariableExpression(var: !3849, expr: !DIExpression())
!3849 = distinct !DIGlobalVariable(scope: null, file: !506, line: 227, type: !2960, isLocal: true, isDefinition: true)
!3850 = !DIGlobalVariableExpression(var: !3851, expr: !DIExpression())
!3851 = distinct !DIGlobalVariable(scope: null, file: !506, line: 227, type: !3444, isLocal: true, isDefinition: true)
!3852 = !DIGlobalVariableExpression(var: !3853, expr: !DIExpression())
!3853 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2148, type: !3854, isLocal: true, isDefinition: true)
!3854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 664, elements: !3855)
!3855 = !{!3856}
!3856 = !DISubrange(count: 83)
!3857 = !DIGlobalVariableExpression(var: !3858, expr: !DIExpression())
!3858 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2148, type: !3725, isLocal: true, isDefinition: true)
!3859 = !DIGlobalVariableExpression(var: !3860, expr: !DIExpression())
!3860 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2148, type: !2948, isLocal: true, isDefinition: true)
!3861 = !DIGlobalVariableExpression(var: !3862, expr: !DIExpression())
!3862 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2148, type: !2893, isLocal: true, isDefinition: true)
!3863 = !DIGlobalVariableExpression(var: !3864, expr: !DIExpression())
!3864 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2148, type: !3163, isLocal: true, isDefinition: true)
!3865 = !DIGlobalVariableExpression(var: !3866, expr: !DIExpression())
!3866 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2148, type: !3226, isLocal: true, isDefinition: true)
!3867 = !DIGlobalVariableExpression(var: !3868, expr: !DIExpression())
!3868 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2153, type: !3869, isLocal: true, isDefinition: true)
!3869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 672, elements: !3870)
!3870 = !{!3871}
!3871 = !DISubrange(count: 84)
!3872 = !DIGlobalVariableExpression(var: !3873, expr: !DIExpression())
!3873 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2153, type: !3116, isLocal: true, isDefinition: true)
!3874 = !DIGlobalVariableExpression(var: !3875, expr: !DIExpression())
!3875 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2158, type: !3869, isLocal: true, isDefinition: true)
!3876 = !DIGlobalVariableExpression(var: !3877, expr: !DIExpression())
!3877 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2158, type: !3116, isLocal: true, isDefinition: true)
!3878 = !DIGlobalVariableExpression(var: !3879, expr: !DIExpression())
!3879 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2163, type: !2983, isLocal: true, isDefinition: true)
!3880 = !DIGlobalVariableExpression(var: !3881, expr: !DIExpression())
!3881 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2163, type: !3882, isLocal: true, isDefinition: true)
!3882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 528, elements: !3883)
!3883 = !{!3884}
!3884 = !DISubrange(count: 66)
!3885 = !DIGlobalVariableExpression(var: !3886, expr: !DIExpression())
!3886 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2168, type: !2983, isLocal: true, isDefinition: true)
!3887 = !DIGlobalVariableExpression(var: !3888, expr: !DIExpression())
!3888 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2168, type: !3882, isLocal: true, isDefinition: true)
!3889 = !DIGlobalVariableExpression(var: !3890, expr: !DIExpression())
!3890 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2175, type: !3128, isLocal: true, isDefinition: true)
!3891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 768, elements: !12)
!3892 = !{i32 7, !"Dwarf Version", i32 5}
!3893 = !{i32 2, !"Debug Info Version", i32 3}
!3894 = !{i32 1, !"wchar_size", i32 4}
!3895 = !{i32 8, !"PIC Level", i32 2}
!3896 = !{i32 7, !"uwtable", i32 2}
!3897 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!3898 = distinct !DISubprogram(name: "rd_kafka_broker_ApiVersion_supported", scope: !2, file: !2, line: 247, type: !3899, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !3901)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!862, !412, !862, !862, !862, !1067}
!3901 = !{!3902, !3903, !3904, !3905, !3906, !3907, !3908, !3909}
!3902 = !DILocalVariable(name: "rkb", arg: 1, scope: !3898, file: !2, line: 247, type: !412)
!3903 = !DILocalVariable(name: "ApiKey", arg: 2, scope: !3898, file: !2, line: 248, type: !862)
!3904 = !DILocalVariable(name: "minver", arg: 3, scope: !3898, file: !2, line: 249, type: !862)
!3905 = !DILocalVariable(name: "maxver", arg: 4, scope: !3898, file: !2, line: 250, type: !862)
!3906 = !DILocalVariable(name: "featuresp", arg: 5, scope: !3898, file: !2, line: 251, type: !1067)
!3907 = !DILocalVariable(name: "skel", scope: !3898, file: !2, line: 252, type: !2346)
!3908 = !DILocalVariable(name: "ret", scope: !3898, file: !2, line: 253, type: !2346)
!3909 = !DILocalVariable(name: "retp", scope: !3898, file: !2, line: 253, type: !2345)
!3910 = !{!3911, !3911, i64 0}
!3911 = !{!"any pointer", !3912, i64 0}
!3912 = !{!"omnipotent char", !3913, i64 0}
!3913 = !{!"Simple C/C++ TBAA"}
!3914 = !DILocation(line: 247, column: 65, scope: !3898)
!3915 = !{!3916, !3916, i64 0}
!3916 = !{!"short", !3912, i64 0}
!3917 = !DILocation(line: 248, column: 54, scope: !3898)
!3918 = !DILocation(line: 249, column: 54, scope: !3898)
!3919 = !DILocation(line: 250, column: 54, scope: !3898)
!3920 = !DILocation(line: 251, column: 51, scope: !3898)
!3921 = !DILocation(line: 252, column: 9, scope: !3898)
!3922 = !DILocation(line: 252, column: 36, scope: !3898)
!3923 = !DILocation(line: 252, column: 43, scope: !3898)
!3924 = !DILocation(line: 252, column: 54, scope: !3898)
!3925 = !{!3926, !3916, i64 0}
!3926 = !{!"rd_kafka_ApiVersion", !3916, i64 0, !3916, i64 2, !3916, i64 4}
!3927 = !{!3926, !3916, i64 2}
!3928 = !{!3926, !3916, i64 4}
!3929 = !DILocation(line: 253, column: 9, scope: !3898)
!3930 = !DILocation(line: 253, column: 36, scope: !3898)
!3931 = !DILocation(line: 253, column: 58, scope: !3898)
!3932 = !DILocation(line: 255, column: 9, scope: !3898)
!3933 = !DILocation(line: 256, column: 13, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3898, file: !2, line: 256, column: 13)
!3935 = !DILocation(line: 256, column: 13, scope: !3898)
!3936 = !DILocation(line: 257, column: 30, scope: !3934)
!3937 = !DILocation(line: 257, column: 35, scope: !3934)
!3938 = !{!3939, !3941, i64 236}
!3939 = !{!"rd_kafka_broker_s", !3940, i64 0, !3941, i64 16, !3911, i64 24, !3942, i64 32, !3911, i64 40, !3911, i64 48, !3941, i64 56, !3941, i64 60, !3911, i64 64, !3912, i64 72, !3941, i64 112, !3940, i64 120, !3941, i64 136, !3940, i64 144, !3941, i64 160, !3911, i64 168, !3911, i64 176, !3942, i64 184, !3941, i64 192, !3912, i64 196, !3942, i64 200, !3943, i64 208, !3944, i64 232, !3941, i64 236, !3911, i64 240, !3942, i64 248, !3943, i64 256, !3912, i64 280, !3945, i64 288, !3941, i64 960, !3942, i64 968, !3944, i64 976, !3911, i64 984, !3911, i64 992, !3941, i64 1000, !3947, i64 1008, !3947, i64 1032, !3947, i64 1056, !3948, i64 1080, !3948, i64 1264, !3948, i64 1448, !3948, i64 1632, !3912, i64 1816, !3912, i64 2072, !3916, i64 2328, !3911, i64 2336, !3941, i64 2344, !3941, i64 2348, !3911, i64 2352, !3912, i64 2360, !3912, i64 2400, !3941, i64 2408, !3942, i64 2416, !3942, i64 2424, !3912, i64 2432, !3952, i64 2436, !3940, i64 2448, !3953, i64 2464, !3912, i64 2504, !3941, i64 2508, !3954, i64 2512, !3955, i64 2608, !3956, i64 3128}
!3940 = !{!"", !3911, i64 0, !3911, i64 8}
!3941 = !{!"int", !3912, i64 0}
!3942 = !{!"long", !3912, i64 0}
!3943 = !{!"rd_interval_s", !3942, i64 0, !3942, i64 8, !3941, i64 16}
!3944 = !{!"", !3941, i64 0}
!3945 = !{!"", !3946, i64 0, !3946, i64 8, !3946, i64 16, !3946, i64 24, !3946, i64 32, !3946, i64 40, !3946, i64 48, !3946, i64 56, !3946, i64 64, !3946, i64 72, !3946, i64 80, !3946, i64 88, !3946, i64 96, !3944, i64 104, !3944, i64 108, !3912, i64 112, !3946, i64 656, !3946, i64 664}
!3946 = !{!"", !3942, i64 0}
!3947 = !{!"rd_kafka_bufq_s", !3940, i64 0, !3944, i64 16, !3944, i64 20}
!3948 = !{!"rd_avg_s", !3949, i64 0, !3912, i64 48, !3941, i64 88, !3912, i64 92, !3911, i64 96, !3950, i64 104}
!3949 = !{!"", !3942, i64 0, !3942, i64 8, !3942, i64 16, !3942, i64 24, !3941, i64 32, !3942, i64 40}
!3950 = !{!"", !3942, i64 0, !3942, i64 8, !3942, i64 16, !3942, i64 24, !3942, i64 32, !3942, i64 40, !3942, i64 48, !3941, i64 56, !3951, i64 64, !3951, i64 72}
!3951 = !{!"double", !3912, i64 0}
!3952 = !{!"", !3941, i64 0, !3944, i64 4}
!3953 = !{!"rd_kafka_broker_monitor_s", !3940, i64 0, !3911, i64 16, !3911, i64 24, !3911, i64 32}
!3954 = !{!"", !3943, i64 0, !3943, i64 24, !3943, i64 48, !3943, i64 72}
!3955 = !{!"", !3912, i64 0, !3912, i64 512, !3941, i64 516}
!3956 = !{!"rd_kafka_timer_s", !3940, i64 0, !3942, i64 16, !3942, i64 24, !3912, i64 32, !3911, i64 40, !3911, i64 48}
!3957 = !DILocation(line: 257, column: 18, scope: !3934)
!3958 = !DILocation(line: 257, column: 28, scope: !3934)
!3959 = !{!3941, !3941, i64 0}
!3960 = !DILocation(line: 257, column: 17, scope: !3934)
!3961 = !DILocation(line: 259, column: 13, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3898, file: !2, line: 259, column: 13)
!3963 = !DILocation(line: 259, column: 18, scope: !3962)
!3964 = !DILocation(line: 259, column: 31, scope: !3962)
!3965 = !DILocation(line: 259, column: 13, scope: !3898)
!3966 = !DILocation(line: 261, column: 17, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3962, file: !2, line: 259, column: 60)
!3968 = !DILocation(line: 262, column: 24, scope: !3967)
!3969 = !DILocation(line: 262, column: 17, scope: !3967)
!3970 = !DILocation(line: 266, column: 28, scope: !3898)
!3971 = !DILocation(line: 266, column: 33, scope: !3898)
!3972 = !{!3939, !3911, i64 240}
!3973 = !DILocation(line: 266, column: 50, scope: !3898)
!3974 = !DILocation(line: 266, column: 55, scope: !3898)
!3975 = !{!3939, !3942, i64 248}
!3976 = !DILocation(line: 266, column: 13, scope: !3898)
!3977 = !DILocation(line: 265, column: 14, scope: !3898)
!3978 = !DILocation(line: 268, column: 13, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3898, file: !2, line: 268, column: 13)
!3980 = !DILocation(line: 268, column: 13, scope: !3898)
!3981 = !DILocation(line: 269, column: 24, scope: !3979)
!3982 = !DILocation(line: 269, column: 23, scope: !3979)
!3983 = !{i64 0, i64 2, !3915, i64 2, i64 2, !3915, i64 4, i64 2, !3915}
!3984 = !DILocation(line: 269, column: 17, scope: !3979)
!3985 = !DILocation(line: 270, column: 9, scope: !3898)
!3986 = !DILocation(line: 272, column: 14, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3898, file: !2, line: 272, column: 13)
!3988 = !DILocation(line: 272, column: 13, scope: !3898)
!3989 = !DILocation(line: 273, column: 17, scope: !3987)
!3990 = !DILocation(line: 275, column: 17, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3898, file: !2, line: 275, column: 13)
!3992 = !DILocation(line: 275, column: 13, scope: !3991)
!3993 = !DILocation(line: 275, column: 26, scope: !3991)
!3994 = !DILocation(line: 275, column: 24, scope: !3991)
!3995 = !DILocation(line: 275, column: 13, scope: !3898)
!3996 = !DILocation(line: 276, column: 25, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !2, line: 276, column: 21)
!3998 = distinct !DILexicalBlock(scope: !3991, file: !2, line: 275, column: 34)
!3999 = !DILocation(line: 276, column: 21, scope: !3997)
!4000 = !DILocation(line: 276, column: 34, scope: !3997)
!4001 = !DILocation(line: 276, column: 32, scope: !3997)
!4002 = !DILocation(line: 276, column: 21, scope: !3998)
!4003 = !DILocation(line: 277, column: 25, scope: !3997)
!4004 = !DILocation(line: 279, column: 36, scope: !3997)
!4005 = !DILocation(line: 279, column: 25, scope: !3997)
!4006 = !DILocation(line: 280, column: 24, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3991, file: !2, line: 280, column: 20)
!4008 = !DILocation(line: 280, column: 20, scope: !4007)
!4009 = !DILocation(line: 280, column: 33, scope: !4007)
!4010 = !DILocation(line: 280, column: 31, scope: !4007)
!4011 = !DILocation(line: 280, column: 20, scope: !3991)
!4012 = !DILocation(line: 281, column: 17, scope: !4007)
!4013 = !DILocation(line: 283, column: 24, scope: !4007)
!4014 = !DILocation(line: 283, column: 17, scope: !4007)
!4015 = !DILocation(line: 284, column: 1, scope: !3898)
!4016 = !DISubprogram(name: "mtx_lock", scope: !510, file: !510, line: 139, type: !4017, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!126, !1813}
!4019 = !DISubprogram(name: "mtx_unlock", scope: !510, file: !510, line: 165, type: !4017, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4020 = distinct !DISubprogram(name: "bsearch", scope: !4021, file: !4021, line: 20, type: !4022, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4026)
!4021 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "", checksumkind: CSK_MD5, checksum: "724ededa330cc3e0cbd34c5b4030a6f6")
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!607, !709, !709, !692, !692, !4024}
!4024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !4025, line: 816, baseType: !1194)
!4025 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "02258fad21adf111bb9df9825e61954a")
!4026 = !{!4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036}
!4027 = !DILocalVariable(name: "__key", arg: 1, scope: !4020, file: !4021, line: 20, type: !709)
!4028 = !DILocalVariable(name: "__base", arg: 2, scope: !4020, file: !4021, line: 20, type: !709)
!4029 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !4020, file: !4021, line: 20, type: !692)
!4030 = !DILocalVariable(name: "__size", arg: 4, scope: !4020, file: !4021, line: 20, type: !692)
!4031 = !DILocalVariable(name: "__compar", arg: 5, scope: !4020, file: !4021, line: 21, type: !4024)
!4032 = !DILocalVariable(name: "__l", scope: !4020, file: !4021, line: 23, type: !692)
!4033 = !DILocalVariable(name: "__u", scope: !4020, file: !4021, line: 23, type: !692)
!4034 = !DILocalVariable(name: "__idx", scope: !4020, file: !4021, line: 23, type: !692)
!4035 = !DILocalVariable(name: "__p", scope: !4020, file: !4021, line: 24, type: !709)
!4036 = !DILocalVariable(name: "__comparison", scope: !4020, file: !4021, line: 25, type: !126)
!4037 = !DILocation(line: 20, column: 22, scope: !4020)
!4038 = !DILocation(line: 20, column: 41, scope: !4020)
!4039 = !{!3942, !3942, i64 0}
!4040 = !DILocation(line: 20, column: 56, scope: !4020)
!4041 = !DILocation(line: 20, column: 72, scope: !4020)
!4042 = !DILocation(line: 21, column: 17, scope: !4020)
!4043 = !DILocation(line: 23, column: 3, scope: !4020)
!4044 = !DILocation(line: 23, column: 10, scope: !4020)
!4045 = !DILocation(line: 23, column: 15, scope: !4020)
!4046 = !DILocation(line: 23, column: 20, scope: !4020)
!4047 = !DILocation(line: 24, column: 3, scope: !4020)
!4048 = !DILocation(line: 24, column: 15, scope: !4020)
!4049 = !DILocation(line: 25, column: 3, scope: !4020)
!4050 = !DILocation(line: 25, column: 7, scope: !4020)
!4051 = !DILocation(line: 27, column: 7, scope: !4020)
!4052 = !DILocation(line: 28, column: 9, scope: !4020)
!4053 = !DILocation(line: 28, column: 7, scope: !4020)
!4054 = !DILocation(line: 29, column: 3, scope: !4020)
!4055 = !DILocation(line: 29, column: 10, scope: !4020)
!4056 = !DILocation(line: 29, column: 16, scope: !4020)
!4057 = !DILocation(line: 29, column: 14, scope: !4020)
!4058 = !DILocation(line: 31, column: 16, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4020, file: !4021, line: 30, column: 5)
!4060 = !DILocation(line: 31, column: 22, scope: !4059)
!4061 = !DILocation(line: 31, column: 20, scope: !4059)
!4062 = !DILocation(line: 31, column: 27, scope: !4059)
!4063 = !DILocation(line: 31, column: 13, scope: !4059)
!4064 = !DILocation(line: 32, column: 45, scope: !4059)
!4065 = !DILocation(line: 32, column: 56, scope: !4059)
!4066 = !DILocation(line: 32, column: 64, scope: !4059)
!4067 = !DILocation(line: 32, column: 62, scope: !4059)
!4068 = !DILocation(line: 32, column: 53, scope: !4059)
!4069 = !DILocation(line: 32, column: 11, scope: !4059)
!4070 = !DILocation(line: 33, column: 24, scope: !4059)
!4071 = !DILocation(line: 33, column: 35, scope: !4059)
!4072 = !DILocation(line: 33, column: 42, scope: !4059)
!4073 = !DILocation(line: 33, column: 22, scope: !4059)
!4074 = !DILocation(line: 33, column: 20, scope: !4059)
!4075 = !DILocation(line: 34, column: 11, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4059, file: !4021, line: 34, column: 11)
!4077 = !DILocation(line: 34, column: 24, scope: !4076)
!4078 = !DILocation(line: 34, column: 11, scope: !4059)
!4079 = !DILocation(line: 35, column: 8, scope: !4076)
!4080 = !DILocation(line: 35, column: 6, scope: !4076)
!4081 = !DILocation(line: 35, column: 2, scope: !4076)
!4082 = !DILocation(line: 36, column: 16, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4076, file: !4021, line: 36, column: 16)
!4084 = !DILocation(line: 36, column: 29, scope: !4083)
!4085 = !DILocation(line: 36, column: 16, scope: !4076)
!4086 = !DILocation(line: 37, column: 8, scope: !4083)
!4087 = !DILocation(line: 37, column: 14, scope: !4083)
!4088 = !DILocation(line: 37, column: 6, scope: !4083)
!4089 = !DILocation(line: 37, column: 2, scope: !4083)
!4090 = !DILocation(line: 44, column: 20, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4083, file: !4021, line: 39, column: 2)
!4092 = !DILocation(line: 44, column: 4, scope: !4091)
!4093 = distinct !{!4093, !4054, !4094, !4095}
!4094 = !DILocation(line: 49, column: 5, scope: !4020)
!4095 = !{!"llvm.loop.mustprogress"}
!4096 = !DILocation(line: 51, column: 3, scope: !4020)
!4097 = !DILocation(line: 52, column: 1, scope: !4020)
!4098 = distinct !DISubprogram(name: "rd_kafka_ApiVersion_key_cmp", scope: !360, file: !360, line: 196, type: !1195, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4099)
!4099 = !{!4100, !4101, !4102, !4103}
!4100 = !DILocalVariable(name: "_a", arg: 1, scope: !4098, file: !360, line: 196, type: !709)
!4101 = !DILocalVariable(name: "_b", arg: 2, scope: !4098, file: !360, line: 197, type: !709)
!4102 = !DILocalVariable(name: "a", scope: !4098, file: !360, line: 198, type: !2860)
!4103 = !DILocalVariable(name: "b", scope: !4098, file: !360, line: 200, type: !2860)
!4104 = !DILocation(line: 196, column: 62, scope: !4098)
!4105 = !DILocation(line: 197, column: 62, scope: !4098)
!4106 = !DILocation(line: 198, column: 9, scope: !4098)
!4107 = !DILocation(line: 198, column: 43, scope: !4098)
!4108 = !DILocation(line: 199, column: 49, scope: !4098)
!4109 = !DILocation(line: 200, column: 9, scope: !4098)
!4110 = !DILocation(line: 200, column: 43, scope: !4098)
!4111 = !DILocation(line: 201, column: 49, scope: !4098)
!4112 = !DILocation(line: 202, column: 16, scope: !4098)
!4113 = !DILocation(line: 203, column: 1, scope: !4098)
!4114 = !DILocation(line: 202, column: 9, scope: !4098)
!4115 = distinct !DISubprogram(name: "rd_kafka_broker_set_state", scope: !2, file: !2, line: 296, type: !4116, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4118)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{null, !412, !126}
!4118 = !{!4119, !4120, !4121}
!4119 = !DILocalVariable(name: "rkb", arg: 1, scope: !4115, file: !2, line: 296, type: !412)
!4120 = !DILocalVariable(name: "state", arg: 2, scope: !4115, file: !2, line: 296, type: !126)
!4121 = !DILocalVariable(name: "trigger_monitors", scope: !4115, file: !2, line: 297, type: !561)
!4122 = !DILocation(line: 296, column: 51, scope: !4115)
!4123 = !DILocation(line: 296, column: 60, scope: !4115)
!4124 = !DILocation(line: 297, column: 9, scope: !4115)
!4125 = !DILocation(line: 297, column: 19, scope: !4115)
!4126 = !{!3912, !3912, i64 0}
!4127 = !DILocation(line: 299, column: 18, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4115, file: !2, line: 299, column: 13)
!4129 = !DILocation(line: 299, column: 23, scope: !4128)
!4130 = !{!3939, !3912, i64 196}
!4131 = !DILocation(line: 299, column: 36, scope: !4128)
!4132 = !DILocation(line: 299, column: 33, scope: !4128)
!4133 = !DILocation(line: 299, column: 13, scope: !4115)
!4134 = !DILocation(line: 300, column: 17, scope: !4128)
!4135 = !DILocation(line: 302, column: 9, scope: !4115)
!4136 = !DILocation(line: 302, column: 9, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !2, line: 302, column: 9)
!4138 = distinct !DILexicalBlock(scope: !4115, file: !2, line: 302, column: 9)
!4139 = !{!3939, !3911, i64 984}
!4140 = !{!4141, !3941, i64 624}
!4141 = !{!"rd_kafka_s", !3911, i64 0, !3911, i64 8, !3940, i64 16, !4142, i64 32, !3944, i64 72, !3944, i64 76, !3944, i64 80, !3944, i64 84, !3944, i64 88, !3912, i64 96, !3911, i64 136, !3912, i64 144, !3912, i64 192, !3941, i64 232, !4142, i64 240, !3940, i64 280, !3941, i64 296, !3911, i64 304, !4143, i64 312, !3911, i64 2328, !3912, i64 2336, !3911, i64 2464, !3911, i64 2472, !3944, i64 2480, !3912, i64 2488, !3912, i64 2544, !4153, i64 2552, !3946, i64 2568, !4154, i64 2576, !3944, i64 2600, !3942, i64 2608, !3911, i64 2616, !3942, i64 2624, !4155, i64 2632, !3911, i64 3024, !3941, i64 3032, !3912, i64 3036, !3944, i64 3040, !4157, i64 3048, !3944, i64 3656, !4161, i64 3664, !4163, i64 3728, !3940, i64 3760, !4165, i64 3776, !4166, i64 3896, !3942, i64 4024, !3941, i64 4032, !3941, i64 4036, !3912, i64 4040, !3912, i64 4088, !3942, i64 4128, !4167, i64 4136, !4168, i64 4160, !3940, i64 4296, !4169, i64 4312}
!4142 = !{!"rd_list_s", !3941, i64 0, !3941, i64 4, !3911, i64 8, !3911, i64 16, !3941, i64 24, !3941, i64 28, !3911, i64 32}
!4143 = !{!"rd_kafka_conf_s", !4144, i64 0, !3941, i64 264, !3941, i64 268, !3941, i64 272, !3941, i64 276, !3941, i64 280, !3941, i64 284, !3941, i64 288, !3941, i64 292, !3941, i64 296, !3941, i64 300, !3941, i64 304, !3941, i64 308, !3941, i64 312, !3941, i64 316, !3941, i64 320, !3941, i64 324, !3941, i64 328, !3941, i64 332, !3941, i64 336, !3941, i64 340, !3941, i64 344, !3941, i64 348, !3911, i64 352, !3911, i64 360, !3941, i64 368, !3941, i64 372, !3941, i64 376, !3941, i64 380, !3941, i64 384, !3941, i64 388, !3941, i64 392, !3941, i64 396, !3941, i64 400, !3941, i64 404, !3941, i64 408, !3941, i64 412, !3911, i64 416, !3912, i64 424, !3912, i64 428, !4145, i64 432, !4146, i64 672, !3911, i64 880, !4142, i64 888, !4148, i64 928, !3941, i64 1528, !3941, i64 1532, !3941, i64 1536, !3941, i64 1540, !3941, i64 1544, !3941, i64 1548, !3942, i64 1552, !3941, i64 1560, !3941, i64 1564, !3941, i64 1568, !3941, i64 1572, !3941, i64 1576, !3941, i64 1580, !3911, i64 1584, !3911, i64 1592, !3941, i64 1600, !3911, i64 1608, !3911, i64 1616, !3941, i64 1624, !3941, i64 1628, !3941, i64 1632, !3941, i64 1636, !3941, i64 1640, !3911, i64 1648, !3911, i64 1656, !4142, i64 1664, !3941, i64 1704, !3911, i64 1712, !3911, i64 1720, !3912, i64 1728, !3912, i64 1732, !3941, i64 1736, !3911, i64 1744, !4149, i64 1752, !3941, i64 1776, !3941, i64 1780, !3951, i64 1784, !3942, i64 1792, !3941, i64 1800, !3941, i64 1804, !3941, i64 1808, !3941, i64 1812, !3941, i64 1816, !3912, i64 1820, !3941, i64 1824, !3941, i64 1828, !3911, i64 1832, !3911, i64 1840, !3911, i64 1848, !3911, i64 1856, !3941, i64 1864, !3941, i64 1868, !3941, i64 1872, !3941, i64 1876, !3941, i64 1880, !3911, i64 1888, !3911, i64 1896, !3911, i64 1904, !3911, i64 1912, !3911, i64 1920, !3911, i64 1928, !3911, i64 1936, !3911, i64 1944, !3911, i64 1952, !3911, i64 1960, !3941, i64 1968, !3944, i64 1972, !4150, i64 1976, !4151, i64 1984, !3911, i64 1992, !3911, i64 2000, !4152, i64 2008}
!4144 = !{!"rd_kafka_anyconf_hdr", !3912, i64 0}
!4145 = !{!"", !3911, i64 0, !3911, i64 8, !3911, i64 16, !3911, i64 24, !3911, i64 32, !3911, i64 40, !3911, i64 48, !3911, i64 56, !3911, i64 64, !3911, i64 72, !3911, i64 80, !3911, i64 88, !3911, i64 96, !3911, i64 104, !3911, i64 112, !3911, i64 120, !3911, i64 128, !3911, i64 136, !3911, i64 144, !3911, i64 152, !3911, i64 160, !4142, i64 168, !3911, i64 208, !3911, i64 216, !3941, i64 224, !3941, i64 228, !3911, i64 232}
!4146 = !{!"", !3911, i64 0, !3911, i64 8, !3911, i64 16, !3911, i64 24, !3911, i64 32, !3911, i64 40, !3941, i64 48, !3912, i64 56, !3911, i64 96, !3911, i64 104, !3911, i64 112, !3911, i64 120, !3942, i64 128, !3911, i64 136, !3941, i64 144, !3941, i64 148, !4147, i64 152}
!4147 = !{!"", !3912, i64 0, !3911, i64 8, !3911, i64 16, !3911, i64 24, !3911, i64 32, !3911, i64 40, !3911, i64 48}
!4148 = !{!"", !4142, i64 0, !4142, i64 40, !4142, i64 80, !4142, i64 120, !4142, i64 160, !4142, i64 200, !4142, i64 240, !4142, i64 280, !4142, i64 320, !4142, i64 360, !4142, i64 400, !4142, i64 440, !4142, i64 480, !4142, i64 520, !4142, i64 560}
!4149 = !{!"", !3941, i64 0, !3912, i64 4, !3911, i64 8, !3941, i64 16}
!4150 = !{!"", !3941, i64 0, !3941, i64 4}
!4151 = !{!"", !3911, i64 0}
!4152 = !{!"", !3912, i64 0}
!4153 = !{!"timeval", !3942, i64 0, !3942, i64 8}
!4154 = !{!"", !3944, i64 0, !3911, i64 8, !3941, i64 16}
!4155 = !{!"rd_kafka_metadata_cache", !4156, i64 0, !3940, i64 80, !3956, i64 96, !3941, i64 152, !4142, i64 160, !3912, i64 200, !3941, i64 240, !3941, i64 244, !3956, i64 248, !3912, i64 304, !3912, i64 352}
!4156 = !{!"rd_avl_s", !3911, i64 0, !3911, i64 8, !3941, i64 16, !3912, i64 24}
!4157 = !{!"", !3912, i64 0, !3942, i64 8, !4158, i64 16, !3941, i64 32, !3944, i64 36, !3956, i64 40, !3944, i64 96, !3911, i64 104, !3912, i64 112, !3942, i64 120, !3911, i64 128, !3911, i64 136, !3953, i64 144, !3912, i64 184, !4159, i64 192, !3941, i64 368, !3956, i64 376, !3912, i64 432, !4160, i64 472, !4160, i64 488, !4160, i64 504, !3946, i64 520, !3912, i64 528, !3911, i64 536, !3912, i64 544, !3912, i64 548, !3956, i64 552}
!4158 = !{!"rd_kafka_pid_s", !3942, i64 0, !3916, i64 8}
!4159 = !{!"", !3912, i64 0, !3912, i64 64, !3911, i64 72, !3912, i64 80, !3912, i64 88, !3912, i64 136}
!4160 = !{!"rd_kafka_toppar_tqhead_s", !3911, i64 0, !3911, i64 8}
!4161 = !{!"", !3911, i64 0, !4162, i64 8, !3941, i64 56}
!4162 = !{!"rd_kafka_assignment_s", !3911, i64 0, !3911, i64 8, !3911, i64 16, !3911, i64 24, !3941, i64 32, !3941, i64 36, !3942, i64 40}
!4163 = !{!"rd_kafka_coord_cache_s", !4164, i64 0, !3941, i64 16, !3942, i64 24}
!4164 = !{!"rd_kafka_coord_cache_head_s", !3911, i64 0, !3911, i64 8}
!4165 = !{!"", !3912, i64 0, !3912, i64 40, !3941, i64 88, !3942, i64 96, !3941, i64 104, !3942, i64 112}
!4166 = !{!"rd_kafka_timers_s", !3940, i64 0, !3911, i64 16, !3912, i64 24, !3912, i64 64, !3911, i64 112, !3941, i64 120}
!4167 = !{!"", !3911, i64 0, !3942, i64 8, !3941, i64 16}
!4168 = !{!"", !3943, i64 0, !3943, i64 24, !3912, i64 48, !3943, i64 88, !3943, i64 112}
!4169 = !{!"", !3911, i64 0, !3944, i64 8}
!4170 = !DILocation(line: 302, column: 9, scope: !4138)
!4171 = !DILocation(line: 307, column: 13, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4115, file: !2, line: 307, column: 13)
!4173 = !DILocation(line: 307, column: 18, scope: !4172)
!4174 = !{!3939, !3912, i64 280}
!4175 = !DILocation(line: 307, column: 29, scope: !4172)
!4176 = !DILocation(line: 307, column: 13, scope: !4115)
!4177 = !DILocation(line: 309, column: 9, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4172, file: !2, line: 307, column: 51)
!4179 = !DILocation(line: 309, column: 20, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4172, file: !2, line: 309, column: 20)
!4181 = !DILocation(line: 309, column: 26, scope: !4180)
!4182 = !DILocation(line: 309, column: 56, scope: !4180)
!4183 = !DILocation(line: 310, column: 21, scope: !4180)
!4184 = !DILocation(line: 310, column: 26, scope: !4180)
!4185 = !{!3939, !3941, i64 2508}
!4186 = !DILocation(line: 309, column: 20, scope: !4172)
!4187 = !DILocation(line: 315, column: 38, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !2, line: 315, column: 21)
!4189 = distinct !DILexicalBlock(scope: !4180, file: !2, line: 310, column: 45)
!4190 = !DILocation(line: 315, column: 43, scope: !4188)
!4191 = !DILocation(line: 315, column: 51, scope: !4188)
!4192 = !DILocation(line: 315, column: 21, scope: !4188)
!4193 = !DILocation(line: 316, column: 42, scope: !4188)
!4194 = !DILocation(line: 316, column: 47, scope: !4188)
!4195 = !DILocation(line: 316, column: 55, scope: !4188)
!4196 = !DILocation(line: 316, column: 25, scope: !4188)
!4197 = !DILocation(line: 318, column: 34, scope: !4188)
!4198 = !DILocation(line: 318, column: 39, scope: !4188)
!4199 = !DILocation(line: 318, column: 47, scope: !4188)
!4200 = !DILocation(line: 317, column: 29, scope: !4188)
!4201 = !DILocation(line: 316, column: 70, scope: !4188)
!4202 = !DILocation(line: 315, column: 74, scope: !4188)
!4203 = !DILocation(line: 318, column: 71, scope: !4188)
!4204 = !DILocation(line: 319, column: 22, scope: !4188)
!4205 = !DILocation(line: 319, column: 55, scope: !4188)
!4206 = !DILocation(line: 320, column: 22, scope: !4188)
!4207 = !DILocation(line: 315, column: 21, scope: !4189)
!4208 = !DILocation(line: 321, column: 25, scope: !4188)
!4209 = !DILocation(line: 321, column: 25, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !2, line: 321, column: 25)
!4211 = distinct !DILexicalBlock(scope: !4188, file: !2, line: 321, column: 25)
!4212 = !{!4141, !3941, i64 576}
!4213 = !DILocation(line: 321, column: 25, scope: !4211)
!4214 = !DILocation(line: 321, column: 25, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4210, file: !2, line: 321, column: 25)
!4216 = !{!4141, !3911, i64 0}
!4217 = !DILocation(line: 328, column: 17, scope: !4189)
!4218 = !DILocation(line: 328, column: 22, scope: !4189)
!4219 = !DILocation(line: 328, column: 40, scope: !4189)
!4220 = !DILocation(line: 330, column: 9, scope: !4189)
!4221 = !DILocation(line: 330, column: 20, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4180, file: !2, line: 330, column: 20)
!4223 = !DILocation(line: 330, column: 55, scope: !4222)
!4224 = !DILocation(line: 331, column: 20, scope: !4222)
!4225 = !DILocation(line: 331, column: 25, scope: !4222)
!4226 = !DILocation(line: 330, column: 20, scope: !4180)
!4227 = !DILocation(line: 332, column: 34, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4222, file: !2, line: 331, column: 44)
!4229 = !DILocation(line: 332, column: 39, scope: !4228)
!4230 = !DILocation(line: 332, column: 47, scope: !4228)
!4231 = !DILocation(line: 332, column: 17, scope: !4228)
!4232 = !DILocation(line: 333, column: 17, scope: !4228)
!4233 = !DILocation(line: 333, column: 22, scope: !4228)
!4234 = !DILocation(line: 333, column: 40, scope: !4228)
!4235 = !DILocation(line: 334, column: 9, scope: !4228)
!4236 = !DILocation(line: 336, column: 13, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4115, file: !2, line: 336, column: 13)
!4238 = !DILocation(line: 336, column: 18, scope: !4237)
!4239 = !DILocation(line: 336, column: 29, scope: !4237)
!4240 = !DILocation(line: 336, column: 13, scope: !4115)
!4241 = !DILocation(line: 337, column: 21, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !2, line: 337, column: 21)
!4243 = distinct !DILexicalBlock(scope: !4237, file: !2, line: 336, column: 51)
!4244 = !DILocation(line: 337, column: 56, scope: !4242)
!4245 = !DILocation(line: 338, column: 22, scope: !4242)
!4246 = !DILocation(line: 337, column: 21, scope: !4243)
!4247 = !DILocation(line: 340, column: 42, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4242, file: !2, line: 338, column: 67)
!4249 = !DILocation(line: 340, column: 47, scope: !4248)
!4250 = !DILocation(line: 340, column: 55, scope: !4248)
!4251 = !DILocation(line: 340, column: 25, scope: !4248)
!4252 = !DILocation(line: 342, column: 42, scope: !4248)
!4253 = !DILocation(line: 344, column: 29, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4248, file: !2, line: 344, column: 29)
!4255 = !DILocation(line: 344, column: 29, scope: !4248)
!4256 = !DILocation(line: 346, column: 38, scope: !4254)
!4257 = !DILocation(line: 346, column: 43, scope: !4254)
!4258 = !DILocation(line: 346, column: 51, scope: !4254)
!4259 = !DILocation(line: 345, column: 33, scope: !4254)
!4260 = !DILocation(line: 348, column: 17, scope: !4248)
!4261 = !DILocation(line: 348, column: 28, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4242, file: !2, line: 348, column: 28)
!4263 = !DILocation(line: 348, column: 72, scope: !4262)
!4264 = !DILocation(line: 349, column: 29, scope: !4262)
!4265 = !DILocation(line: 348, column: 28, scope: !4242)
!4266 = !DILocation(line: 351, column: 42, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4262, file: !2, line: 349, column: 65)
!4268 = !DILocation(line: 351, column: 47, scope: !4267)
!4269 = !DILocation(line: 351, column: 55, scope: !4267)
!4270 = !DILocation(line: 351, column: 25, scope: !4267)
!4271 = !DILocation(line: 353, column: 42, scope: !4267)
!4272 = !DILocation(line: 355, column: 29, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4267, file: !2, line: 355, column: 29)
!4274 = !DILocation(line: 355, column: 29, scope: !4267)
!4275 = !DILocation(line: 357, column: 38, scope: !4273)
!4276 = !DILocation(line: 357, column: 43, scope: !4273)
!4277 = !DILocation(line: 357, column: 51, scope: !4273)
!4278 = !DILocation(line: 356, column: 33, scope: !4273)
!4279 = !DILocation(line: 358, column: 17, scope: !4267)
!4280 = !DILocation(line: 365, column: 21, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4243, file: !2, line: 365, column: 21)
!4282 = !DILocation(line: 365, column: 27, scope: !4281)
!4283 = !DILocation(line: 365, column: 57, scope: !4281)
!4284 = !DILocation(line: 366, column: 38, scope: !4281)
!4285 = !DILocation(line: 366, column: 43, scope: !4281)
!4286 = !DILocation(line: 366, column: 59, scope: !4281)
!4287 = !DILocation(line: 366, column: 21, scope: !4281)
!4288 = !DILocation(line: 366, column: 66, scope: !4281)
!4289 = !DILocation(line: 365, column: 21, scope: !4243)
!4290 = !DILocation(line: 367, column: 42, scope: !4281)
!4291 = !DILocation(line: 367, column: 25, scope: !4281)
!4292 = !DILocation(line: 368, column: 9, scope: !4243)
!4293 = !DILocation(line: 370, column: 29, scope: !4115)
!4294 = !DILocation(line: 370, column: 9, scope: !4115)
!4295 = !DILocation(line: 370, column: 14, scope: !4115)
!4296 = !DILocation(line: 370, column: 27, scope: !4115)
!4297 = !DILocation(line: 371, column: 29, scope: !4115)
!4298 = !DILocation(line: 371, column: 9, scope: !4115)
!4299 = !DILocation(line: 371, column: 14, scope: !4115)
!4300 = !DILocation(line: 371, column: 27, scope: !4115)
!4301 = !{!3939, !3942, i64 200}
!4302 = !DILocation(line: 373, column: 13, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4115, file: !2, line: 373, column: 13)
!4304 = !DILocation(line: 373, column: 13, scope: !4115)
!4305 = !DILocation(line: 374, column: 50, scope: !4303)
!4306 = !DILocation(line: 374, column: 17, scope: !4303)
!4307 = !DILocation(line: 378, column: 13, scope: !4115)
!4308 = !DILocation(line: 378, column: 18, scope: !4115)
!4309 = !DILocation(line: 378, column: 26, scope: !4115)
!4310 = !DILocation(line: 378, column: 31, scope: !4115)
!4311 = !{!3939, !3941, i64 16}
!4312 = !DILocation(line: 379, column: 37, scope: !4115)
!4313 = !DILocation(line: 379, column: 42, scope: !4115)
!4314 = !{!3939, !3912, i64 2504}
!4315 = !DILocation(line: 379, column: 13, scope: !4115)
!4316 = !DILocation(line: 379, column: 54, scope: !4115)
!4317 = !DILocation(line: 379, column: 59, scope: !4115)
!4318 = !{!3939, !3911, i64 2336}
!4319 = !DILocation(line: 380, column: 13, scope: !4115)
!4320 = !DILocation(line: 380, column: 18, scope: !4115)
!4321 = !{!3939, !3916, i64 2328}
!4322 = !DILocation(line: 380, column: 56, scope: !4115)
!4323 = !DILocation(line: 380, column: 61, scope: !4115)
!4324 = !DILocation(line: 380, column: 28, scope: !4115)
!4325 = !DILocation(line: 377, column: 9, scope: !4115)
!4326 = !DILocation(line: 382, column: 49, scope: !4115)
!4327 = !DILocation(line: 382, column: 54, scope: !4115)
!4328 = !DILocation(line: 382, column: 9, scope: !4115)
!4329 = !DILocation(line: 383, column: 1, scope: !4115)
!4330 = !DISubprogram(name: "rd_kafka_log0", scope: !589, file: !589, line: 867, type: !4331, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{null, !4333, !1308, !365, !126, !126, !365, !365, null}
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!4335 = distinct !DISubprogram(name: "rd_atomic32_add", scope: !316, file: !316, line: 56, type: !4336, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4339)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!320, !4338, !320}
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!4339 = !{!4340, !4341}
!4340 = !DILocalVariable(name: "ra", arg: 1, scope: !4335, file: !316, line: 56, type: !4338)
!4341 = !DILocalVariable(name: "v", arg: 2, scope: !4335, file: !316, line: 57, type: !320)
!4342 = !DILocation(line: 56, column: 67, scope: !4335)
!4343 = !DILocation(line: 57, column: 60, scope: !4335)
!4344 = !DILocation(line: 70, column: 16, scope: !4335)
!4345 = !DILocation(line: 70, column: 9, scope: !4335)
!4346 = distinct !DISubprogram(name: "rd_atomic32_get", scope: !316, file: !316, line: 100, type: !4347, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4349)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!320, !4338}
!4349 = !{!4350}
!4350 = !DILocalVariable(name: "ra", arg: 1, scope: !4346, file: !316, line: 100, type: !4338)
!4351 = !DILocation(line: 100, column: 67, scope: !4346)
!4352 = !DILocation(line: 110, column: 16, scope: !4346)
!4353 = !DILocation(line: 110, column: 9, scope: !4346)
!4354 = !DISubprogram(name: "rd_kafka_q_op_err", scope: !58, file: !58, line: 697, type: !4355, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{null, !503, !550, !365, null}
!4357 = distinct !DISubprogram(name: "rd_atomic32_sub", scope: !316, file: !316, line: 74, type: !4336, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4358)
!4358 = !{!4359, !4360}
!4359 = !DILocalVariable(name: "ra", arg: 1, scope: !4357, file: !316, line: 74, type: !4338)
!4360 = !DILocalVariable(name: "v", arg: 2, scope: !4357, file: !316, line: 75, type: !320)
!4361 = !DILocation(line: 74, column: 67, scope: !4357)
!4362 = !DILocation(line: 75, column: 60, scope: !4357)
!4363 = !DILocation(line: 88, column: 16, scope: !4357)
!4364 = !DILocation(line: 88, column: 9, scope: !4357)
!4365 = distinct !DISubprogram(name: "rd_clock", scope: !4366, file: !4366, line: 85, type: !4367, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4369)
!4366 = !DIFile(filename: "./rdtime.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "1a5d127c31a904d42a78d659dc3ae824")
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!487}
!4369 = !{!4370}
!4370 = !DILocalVariable(name: "ts", scope: !4365, file: !4366, line: 104, type: !4371)
!4371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !4372, line: 11, size: 128, elements: !4373)
!4372 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "", checksumkind: CSK_MD5, checksum: "55dc154df3f21a5aa944dcafba9b43f6")
!4373 = !{!4374, !4375}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4371, file: !4372, line: 16, baseType: !1426, size: 64)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4371, file: !4372, line: 21, baseType: !4376, size: 64, offset: 64)
!4376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !323, line: 197, baseType: !356)
!4377 = !DILocation(line: 104, column: 9, scope: !4365)
!4378 = !DILocation(line: 104, column: 25, scope: !4365)
!4379 = !DILocation(line: 105, column: 9, scope: !4365)
!4380 = !DILocation(line: 106, column: 29, scope: !4365)
!4381 = !{!4382, !3942, i64 0}
!4382 = !{!"timespec", !3942, i64 0, !3942, i64 8}
!4383 = !DILocation(line: 106, column: 36, scope: !4365)
!4384 = !DILocation(line: 107, column: 29, scope: !4365)
!4385 = !{!4382, !3942, i64 8}
!4386 = !DILocation(line: 107, column: 37, scope: !4365)
!4387 = !DILocation(line: 106, column: 50, scope: !4365)
!4388 = !DILocation(line: 109, column: 1, scope: !4365)
!4389 = !DILocation(line: 106, column: 9, scope: !4365)
!4390 = distinct !DISubprogram(name: "rd_kafka_broker_trigger_monitors", scope: !2, file: !2, line: 5880, type: !1583, scopeLine: 5880, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4391)
!4391 = !{!4392, !4393, !4395}
!4392 = !DILocalVariable(name: "rkb", arg: 1, scope: !4390, file: !2, line: 5880, type: !412)
!4393 = !DILocalVariable(name: "rkbmon", scope: !4390, file: !2, line: 5881, type: !4394)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!4395 = !DILocalVariable(name: "rko", scope: !4396, file: !2, line: 5884, type: !914)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !2, line: 5883, column: 64)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !2, line: 5883, column: 9)
!4398 = distinct !DILexicalBlock(scope: !4390, file: !2, line: 5883, column: 9)
!4399 = !DILocation(line: 5880, column: 65, scope: !4390)
!4400 = !DILocation(line: 5881, column: 9, scope: !4390)
!4401 = !DILocation(line: 5881, column: 36, scope: !4390)
!4402 = !DILocation(line: 5883, column: 9, scope: !4398)
!4403 = !{!3939, !3911, i64 2448}
!4404 = !DILocation(line: 5883, column: 9, scope: !4397)
!4405 = !DILocation(line: 5884, column: 17, scope: !4396)
!4406 = !DILocation(line: 5884, column: 32, scope: !4396)
!4407 = !DILocation(line: 5885, column: 40, scope: !4396)
!4408 = !DILocation(line: 5885, column: 45, scope: !4396)
!4409 = !DILocation(line: 5885, column: 21, scope: !4396)
!4410 = !DILocation(line: 5887, column: 17, scope: !4396)
!4411 = !DILocation(line: 5888, column: 49, scope: !4396)
!4412 = !DILocation(line: 5888, column: 17, scope: !4396)
!4413 = !DILocation(line: 5888, column: 22, scope: !4396)
!4414 = !DILocation(line: 5888, column: 43, scope: !4396)
!4415 = !DILocation(line: 5888, column: 47, scope: !4396)
!4416 = !DILocation(line: 5889, column: 49, scope: !4396)
!4417 = !DILocation(line: 5889, column: 57, scope: !4396)
!4418 = !{!3953, !3911, i64 32}
!4419 = !DILocation(line: 5889, column: 17, scope: !4396)
!4420 = !DILocation(line: 5889, column: 22, scope: !4396)
!4421 = !DILocation(line: 5889, column: 43, scope: !4396)
!4422 = !DILocation(line: 5889, column: 47, scope: !4396)
!4423 = !DILocation(line: 5890, column: 32, scope: !4396)
!4424 = !DILocation(line: 5890, column: 40, scope: !4396)
!4425 = !{!3953, !3911, i64 24}
!4426 = !DILocation(line: 5890, column: 50, scope: !4396)
!4427 = !DILocation(line: 5890, column: 17, scope: !4396)
!4428 = !DILocation(line: 5891, column: 9, scope: !4397)
!4429 = !DILocation(line: 5891, column: 9, scope: !4396)
!4430 = !{!3953, !3911, i64 0}
!4431 = distinct !{!4431, !4402, !4432, !4095}
!4432 = !DILocation(line: 5891, column: 9, scope: !4398)
!4433 = !DILocation(line: 5892, column: 1, scope: !4390)
!4434 = !DISubprogram(name: "rd_kafka_interceptors_on_broker_state_change", scope: !4435, file: !4435, line: 85, type: !4436, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4435 = !DIFile(filename: "./rdkafka_interceptor.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "a8182543a00c75986d66802994318e51")
!4436 = !DISubroutineType(types: !4437)
!4437 = !{null, !586, !320, !365, !365, !126, !365}
!4438 = distinct !DISubprogram(name: "rd_kafka_brokers_broadcast_state_change", scope: !2, file: !2, line: 1302, type: !4439, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4441)
!4439 = !DISubroutineType(types: !4440)
!4440 = !{null, !586}
!4441 = !{!4442}
!4442 = !DILocalVariable(name: "rk", arg: 1, scope: !4438, file: !2, line: 1302, type: !586)
!4443 = !DILocation(line: 1302, column: 58, scope: !4438)
!4444 = !DILocation(line: 1304, column: 9, scope: !4438)
!4445 = !DILocation(line: 1304, column: 9, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !2, line: 1304, column: 9)
!4447 = distinct !DILexicalBlock(scope: !4438, file: !2, line: 1304, column: 9)
!4448 = !DILocation(line: 1304, column: 9, scope: !4447)
!4449 = !DILocation(line: 1306, column: 19, scope: !4438)
!4450 = !DILocation(line: 1306, column: 23, scope: !4438)
!4451 = !DILocation(line: 1306, column: 9, scope: !4438)
!4452 = !DILocation(line: 1309, column: 9, scope: !4438)
!4453 = !DILocation(line: 1309, column: 13, scope: !4438)
!4454 = !DILocation(line: 1309, column: 43, scope: !4438)
!4455 = !{!4141, !3941, i64 232}
!4456 = !DILocation(line: 1312, column: 24, scope: !4438)
!4457 = !DILocation(line: 1312, column: 28, scope: !4438)
!4458 = !DILocation(line: 1312, column: 9, scope: !4438)
!4459 = !DILocation(line: 1316, column: 24, scope: !4438)
!4460 = !DILocation(line: 1316, column: 28, scope: !4438)
!4461 = !DILocation(line: 1316, column: 9, scope: !4438)
!4462 = !DILocation(line: 1318, column: 21, scope: !4438)
!4463 = !DILocation(line: 1318, column: 25, scope: !4438)
!4464 = !DILocation(line: 1318, column: 9, scope: !4438)
!4465 = !DILocation(line: 1319, column: 1, scope: !4438)
!4466 = distinct !DISubprogram(name: "rd_kafka_broker_fail", scope: !2, file: !2, line: 551, type: !4467, scopeLine: 555, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4469)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{null, !412, !126, !550, !365, null}
!4469 = !{!4470, !4471, !4472, !4473, !4474, !4485, !4486, !4487, !4488, !4489}
!4470 = !DILocalVariable(name: "rkb", arg: 1, scope: !4466, file: !2, line: 551, type: !412)
!4471 = !DILocalVariable(name: "level", arg: 2, scope: !4466, file: !2, line: 552, type: !126)
!4472 = !DILocalVariable(name: "err", arg: 3, scope: !4466, file: !2, line: 553, type: !550)
!4473 = !DILocalVariable(name: "fmt", arg: 4, scope: !4466, file: !2, line: 554, type: !365)
!4474 = !DILocalVariable(name: "ap", scope: !4466, file: !2, line: 556, type: !4475)
!4475 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4476, line: 42, baseType: !4477)
!4476 = !DIFile(filename: "/usr/lib/clang/18/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "95ff2da58c2c75d7c246cff7935ff18b")
!4477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2, baseType: !4478)
!4478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4479, size: 192, elements: !714)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !4480)
!4480 = !{!4481, !4482, !4483, !4484}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4479, file: !2, line: 556, baseType: !59, size: 32)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4479, file: !2, line: 556, baseType: !59, size: 32, offset: 32)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4479, file: !2, line: 556, baseType: !607, size: 64, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4479, file: !2, line: 556, baseType: !607, size: 64, offset: 128)
!4485 = !DILocalVariable(name: "tmpq_waitresp", scope: !4466, file: !2, line: 557, type: !2392)
!4486 = !DILocalVariable(name: "tmpq", scope: !4466, file: !2, line: 557, type: !2392)
!4487 = !DILocalVariable(name: "old_state", scope: !4466, file: !2, line: 558, type: !126)
!4488 = !DILocalVariable(name: "rktp", scope: !4466, file: !2, line: 559, type: !368)
!4489 = !DILocalVariable(name: "_logname", scope: !4490, file: !2, line: 645, type: !924)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !2, line: 645, column: 17)
!4491 = distinct !DILexicalBlock(scope: !4492, file: !2, line: 645, column: 17)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !2, line: 645, column: 17)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !2, line: 645, column: 17)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !2, line: 644, column: 48)
!4495 = distinct !DILexicalBlock(scope: !4466, file: !2, line: 643, column: 13)
!4496 = !DILocation(line: 551, column: 46, scope: !4466)
!4497 = !DILocation(line: 552, column: 31, scope: !4466)
!4498 = !DILocation(line: 553, column: 47, scope: !4466)
!4499 = !DILocation(line: 554, column: 39, scope: !4466)
!4500 = !DILocation(line: 556, column: 9, scope: !4466)
!4501 = !DILocation(line: 556, column: 17, scope: !4466)
!4502 = !DILocation(line: 557, column: 9, scope: !4466)
!4503 = !DILocation(line: 557, column: 25, scope: !4466)
!4504 = !DILocation(line: 557, column: 40, scope: !4466)
!4505 = !DILocation(line: 558, column: 9, scope: !4466)
!4506 = !DILocation(line: 558, column: 13, scope: !4466)
!4507 = !DILocation(line: 559, column: 9, scope: !4466)
!4508 = !DILocation(line: 559, column: 28, scope: !4466)
!4509 = !DILocation(line: 561, column: 9, scope: !4466)
!4510 = !DILocation(line: 561, column: 9, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 561, column: 9)
!4512 = distinct !DILexicalBlock(scope: !4466, file: !2, line: 561, column: 9)
!4513 = !{!3939, !3942, i64 968}
!4514 = !DILocation(line: 561, column: 9, scope: !4512)
!4515 = !DILocation(line: 563, column: 13, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4466, file: !2, line: 563, column: 13)
!4517 = !DILocation(line: 563, column: 18, scope: !4516)
!4518 = !{!3939, !3911, i64 48}
!4519 = !DILocation(line: 563, column: 13, scope: !4466)
!4520 = !DILocation(line: 564, column: 42, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4516, file: !2, line: 563, column: 33)
!4522 = !DILocation(line: 564, column: 47, scope: !4521)
!4523 = !DILocation(line: 564, column: 17, scope: !4521)
!4524 = !DILocation(line: 565, column: 17, scope: !4521)
!4525 = !DILocation(line: 565, column: 22, scope: !4521)
!4526 = !DILocation(line: 565, column: 36, scope: !4521)
!4527 = !DILocation(line: 567, column: 21, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4521, file: !2, line: 567, column: 21)
!4529 = !DILocation(line: 567, column: 26, scope: !4528)
!4530 = !DILocation(line: 567, column: 36, scope: !4528)
!4531 = !DILocation(line: 567, column: 21, scope: !4521)
!4532 = !DILocation(line: 568, column: 42, scope: !4528)
!4533 = !DILocation(line: 568, column: 47, scope: !4528)
!4534 = !DILocation(line: 568, column: 53, scope: !4528)
!4535 = !DILocation(line: 568, column: 25, scope: !4528)
!4536 = !DILocation(line: 569, column: 9, scope: !4521)
!4537 = !DILocation(line: 571, column: 9, scope: !4466)
!4538 = !DILocation(line: 571, column: 14, scope: !4466)
!4539 = !DILocation(line: 571, column: 31, scope: !4466)
!4540 = !{!3939, !3941, i64 960}
!4541 = !DILocation(line: 573, column: 13, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4466, file: !2, line: 573, column: 13)
!4543 = !DILocation(line: 573, column: 18, scope: !4542)
!4544 = !{!3939, !3911, i64 992}
!4545 = !DILocation(line: 573, column: 13, scope: !4466)
!4546 = !DILocation(line: 574, column: 17, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4542, file: !2, line: 573, column: 32)
!4548 = !DILocation(line: 574, column: 17, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !2, line: 574, column: 17)
!4550 = distinct !DILexicalBlock(scope: !4547, file: !2, line: 574, column: 17)
!4551 = !DILocation(line: 574, column: 17, scope: !4550)
!4552 = !DILocation(line: 575, column: 17, scope: !4547)
!4553 = !DILocation(line: 575, column: 22, scope: !4547)
!4554 = !DILocation(line: 575, column: 35, scope: !4547)
!4555 = !DILocation(line: 576, column: 9, scope: !4547)
!4556 = !DILocation(line: 578, column: 9, scope: !4466)
!4557 = !DILocation(line: 578, column: 14, scope: !4466)
!4558 = !DILocation(line: 578, column: 37, scope: !4466)
!4559 = !{!3939, !3912, i64 2432}
!4560 = !DILocation(line: 580, column: 9, scope: !4466)
!4561 = !DILocation(line: 581, column: 35, scope: !4466)
!4562 = !DILocation(line: 581, column: 40, scope: !4466)
!4563 = !DILocation(line: 581, column: 47, scope: !4466)
!4564 = !DILocation(line: 581, column: 52, scope: !4466)
!4565 = !DILocation(line: 581, column: 57, scope: !4466)
!4566 = !DILocation(line: 581, column: 9, scope: !4466)
!4567 = !DILocation(line: 582, column: 9, scope: !4466)
!4568 = !DILocation(line: 584, column: 9, scope: !4466)
!4569 = !DILocation(line: 590, column: 13, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4466, file: !2, line: 590, column: 13)
!4571 = !DILocation(line: 590, column: 18, scope: !4570)
!4572 = !DILocation(line: 590, column: 28, scope: !4570)
!4573 = !DILocation(line: 590, column: 13, scope: !4466)
!4574 = !DILocation(line: 591, column: 49, scope: !4570)
!4575 = !DILocation(line: 591, column: 17, scope: !4570)
!4576 = !DILocation(line: 595, column: 21, scope: !4466)
!4577 = !DILocation(line: 595, column: 26, scope: !4466)
!4578 = !DILocation(line: 595, column: 19, scope: !4466)
!4579 = !DILocation(line: 596, column: 35, scope: !4466)
!4580 = !DILocation(line: 596, column: 9, scope: !4466)
!4581 = !DILocation(line: 600, column: 30, scope: !4466)
!4582 = !DILocation(line: 600, column: 35, scope: !4466)
!4583 = !DILocation(line: 600, column: 43, scope: !4466)
!4584 = !DILocation(line: 600, column: 55, scope: !4466)
!4585 = !DILocation(line: 600, column: 60, scope: !4466)
!4586 = !DILocation(line: 600, column: 9, scope: !4466)
!4587 = !DILocation(line: 604, column: 9, scope: !4466)
!4588 = !DILocation(line: 606, column: 26, scope: !4466)
!4589 = !DILocation(line: 606, column: 31, scope: !4466)
!4590 = !DILocation(line: 606, column: 37, scope: !4466)
!4591 = !DILocation(line: 606, column: 9, scope: !4466)
!4592 = !DILocation(line: 607, column: 26, scope: !4466)
!4593 = !DILocation(line: 607, column: 31, scope: !4466)
!4594 = !DILocation(line: 607, column: 37, scope: !4466)
!4595 = !DILocation(line: 607, column: 9, scope: !4466)
!4596 = !DILocation(line: 615, column: 9, scope: !4466)
!4597 = !DILocation(line: 616, column: 9, scope: !4466)
!4598 = !DILocation(line: 617, column: 47, scope: !4466)
!4599 = !DILocation(line: 617, column: 52, scope: !4466)
!4600 = !DILocation(line: 617, column: 9, scope: !4466)
!4601 = !DILocation(line: 618, column: 38, scope: !4466)
!4602 = !DILocation(line: 618, column: 43, scope: !4466)
!4603 = !DILocation(line: 618, column: 9, scope: !4466)
!4604 = !DILocation(line: 619, column: 27, scope: !4466)
!4605 = !DILocation(line: 619, column: 32, scope: !4466)
!4606 = !DILocation(line: 619, column: 9, scope: !4466)
!4607 = !DILocation(line: 623, column: 29, scope: !4466)
!4608 = !DILocation(line: 623, column: 50, scope: !4466)
!4609 = !DILocation(line: 623, column: 9, scope: !4466)
!4610 = !DILocation(line: 627, column: 29, scope: !4466)
!4611 = !DILocation(line: 630, column: 29, scope: !4466)
!4612 = !DILocation(line: 630, column: 33, scope: !4466)
!4613 = !DILocation(line: 632, column: 35, scope: !4466)
!4614 = !DILocation(line: 627, column: 9, scope: !4466)
!4615 = !DILocation(line: 639, column: 40, scope: !4466)
!4616 = !DILocation(line: 639, column: 46, scope: !4466)
!4617 = !DILocation(line: 639, column: 51, scope: !4466)
!4618 = !DILocation(line: 639, column: 9, scope: !4466)
!4619 = !DILocation(line: 643, column: 13, scope: !4495)
!4620 = !DILocation(line: 643, column: 47, scope: !4495)
!4621 = !DILocation(line: 644, column: 14, scope: !4495)
!4622 = !DILocation(line: 643, column: 13, scope: !4466)
!4623 = !DILocation(line: 645, column: 17, scope: !4494)
!4624 = !DILocation(line: 645, column: 17, scope: !4492)
!4625 = !DILocation(line: 645, column: 17, scope: !4493)
!4626 = !DILocation(line: 645, column: 17, scope: !4491)
!4627 = !DILocation(line: 645, column: 17, scope: !4490)
!4628 = !{!3939, !3911, i64 2352}
!4629 = !{!3939, !3941, i64 136}
!4630 = !DILocation(line: 651, column: 36, scope: !4494)
!4631 = !DILocation(line: 651, column: 56, scope: !4494)
!4632 = !DILocation(line: 651, column: 61, scope: !4494)
!4633 = !DILocation(line: 651, column: 17, scope: !4494)
!4634 = !DILocation(line: 652, column: 9, scope: !4494)
!4635 = !DILocation(line: 656, column: 9, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4466, file: !2, line: 656, column: 9)
!4637 = !{!3939, !3911, i64 120}
!4638 = !DILocation(line: 656, column: 9, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4636, file: !2, line: 656, column: 9)
!4640 = !DILocation(line: 657, column: 17, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4639, file: !2, line: 656, column: 62)
!4642 = !DILocation(line: 658, column: 21, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4641, file: !2, line: 658, column: 21)
!4644 = !{!4645, !3911, i64 128}
!4645 = !{!"rd_kafka_toppar_s", !3940, i64 0, !3940, i64 16, !3940, i64 32, !3940, i64 48, !3940, i64 64, !3940, i64 80, !3911, i64 96, !3941, i64 104, !3941, i64 108, !3941, i64 112, !3911, i64 120, !3911, i64 128, !3911, i64 136, !3944, i64 144, !3912, i64 152, !3911, i64 192, !4646, i64 200, !4646, i64 264, !3941, i64 328, !3911, i64 336, !3911, i64 344, !3944, i64 352, !3942, i64 360, !4649, i64 368, !3944, i64 416, !3941, i64 420, !3941, i64 424, !3912, i64 428, !3941, i64 432, !3941, i64 436, !3942, i64 440, !4650, i64 448, !4650, i64 464, !4650, i64 480, !4650, i64 496, !4650, i64 512, !4650, i64 528, !3911, i64 544, !3942, i64 552, !4650, i64 560, !4650, i64 576, !3942, i64 592, !4651, i64 600, !4651, i64 624, !3942, i64 648, !3942, i64 656, !3942, i64 664, !3942, i64 672, !3911, i64 680, !3911, i64 688, !3912, i64 696, !3911, i64 704, !3912, i64 712, !4652, i64 720, !3941, i64 736, !3956, i64 744, !3956, i64 800, !3956, i64 856, !3956, i64 912, !3956, i64 968, !3943, i64 1024, !3943, i64 1048, !3943, i64 1072, !3943, i64 1096, !3941, i64 1120, !4653, i64 1128, !4654, i64 1160}
!4646 = !{!"rd_kafka_msgq_s", !4647, i64 0, !3941, i64 16, !3942, i64 24, !4648, i64 32}
!4647 = !{!"rd_kafka_msgs_head_s", !3911, i64 0, !3911, i64 8}
!4648 = !{!"", !3942, i64 0, !3941, i64 8, !3942, i64 16, !3912, i64 24, !3912, i64 25}
!4649 = !{!"", !4158, i64 0, !3942, i64 16, !3942, i64 24, !3941, i64 32, !3941, i64 36, !3912, i64 40}
!4650 = !{!"rd_kafka_fetch_pos_s", !3942, i64 0, !3941, i64 8, !3912, i64 12}
!4651 = !{!"offset_stats", !4650, i64 0, !3942, i64 16}
!4652 = !{!"rd_kafka_replyq_s", !3911, i64 0, !3941, i64 8}
!4653 = !{!"rd_kafka_toppar_err", !3912, i64 0, !3941, i64 4, !3942, i64 8, !3942, i64 16, !3941, i64 24, !3941, i64 28}
!4654 = !{!"", !3946, i64 0, !3946, i64 8, !3946, i64 16, !3946, i64 24, !3946, i64 32, !3946, i64 40}
!4655 = !DILocation(line: 658, column: 21, scope: !4641)
!4656 = !DILocation(line: 661, column: 25, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4643, file: !2, line: 658, column: 57)
!4658 = !DILocation(line: 662, column: 25, scope: !4657)
!4659 = !DILocation(line: 664, column: 17, scope: !4641)
!4660 = !DILocation(line: 666, column: 21, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4641, file: !2, line: 666, column: 21)
!4662 = !DILocation(line: 666, column: 27, scope: !4661)
!4663 = !{!4645, !3941, i64 108}
!4664 = !DILocation(line: 666, column: 45, scope: !4661)
!4665 = !DILocation(line: 666, column: 51, scope: !4661)
!4666 = !{!4645, !3941, i64 112}
!4667 = !DILocation(line: 666, column: 42, scope: !4661)
!4668 = !DILocation(line: 666, column: 21, scope: !4641)
!4669 = !DILocation(line: 667, column: 60, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4661, file: !2, line: 666, column: 67)
!4671 = !DILocation(line: 667, column: 25, scope: !4670)
!4672 = !DILocation(line: 668, column: 17, scope: !4670)
!4673 = !DILocation(line: 669, column: 9, scope: !4641)
!4674 = !{!4645, !3911, i64 16}
!4675 = distinct !{!4675, !4635, !4676, !4095}
!4676 = !DILocation(line: 669, column: 9, scope: !4636)
!4677 = !DILocation(line: 672, column: 13, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4466, file: !2, line: 672, column: 13)
!4679 = !DILocation(line: 672, column: 17, scope: !4678)
!4680 = !DILocation(line: 672, column: 47, scope: !4678)
!4681 = !DILocation(line: 673, column: 13, scope: !4678)
!4682 = !DILocation(line: 673, column: 23, scope: !4678)
!4683 = !DILocation(line: 672, column: 13, scope: !4466)
!4684 = !DILocation(line: 675, column: 21, scope: !4678)
!4685 = !DILocation(line: 675, column: 26, scope: !4678)
!4686 = !DILocation(line: 674, column: 17, scope: !4678)
!4687 = !DILocation(line: 676, column: 1, scope: !4466)
!4688 = !DISubprogram(name: "thrd_is_current", scope: !326, file: !326, line: 54, type: !4689, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4689 = !DISubroutineType(types: !4690)
!4690 = !{!126, !1923}
!4691 = !DISubprogram(name: "rd_kafka_crash", scope: !589, file: !589, line: 69, type: !4692, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{null, !365, !126, !365, !586, !365}
!4694 = !DISubprogram(name: "rd_kafka_transport_close", scope: !497, file: !497, line: 76, type: !4695, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{null, !495}
!4697 = distinct !DISubprogram(name: "rd_refcnt_sub0", scope: !314, file: !314, line: 341, type: !4698, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4701)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!126, !4700}
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!4701 = !{!4702, !4703}
!4702 = !DILocalVariable(name: "R", arg: 1, scope: !4697, file: !314, line: 341, type: !4700)
!4703 = !DILocalVariable(name: "r", scope: !4697, file: !314, line: 342, type: !126)
!4704 = !DILocation(line: 341, column: 60, scope: !4697)
!4705 = !DILocation(line: 342, column: 9, scope: !4697)
!4706 = !DILocation(line: 342, column: 13, scope: !4697)
!4707 = !DILocation(line: 348, column: 29, scope: !4697)
!4708 = !DILocation(line: 348, column: 13, scope: !4697)
!4709 = !DILocation(line: 348, column: 11, scope: !4697)
!4710 = !DILocation(line: 350, column: 13, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4697, file: !314, line: 350, column: 13)
!4712 = !DILocation(line: 350, column: 15, scope: !4711)
!4713 = !DILocation(line: 350, column: 13, scope: !4697)
!4714 = !DILocation(line: 351, column: 17, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !314, line: 351, column: 17)
!4716 = distinct !DILexicalBlock(scope: !4711, file: !314, line: 351, column: 17)
!4717 = !DILocation(line: 352, column: 16, scope: !4697)
!4718 = !DILocation(line: 353, column: 1, scope: !4697)
!4719 = !DILocation(line: 352, column: 9, scope: !4697)
!4720 = !DISubprogram(name: "rd_kafka_buf_destroy_final", scope: !414, file: !414, line: 915, type: !4721, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{null, !1692}
!4723 = distinct !DISubprogram(name: "rd_kafka_broker_set_error", scope: !2, file: !2, line: 399, type: !4724, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4727)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{null, !412, !126, !550, !365, !4726}
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4727 = !{!4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4743}
!4728 = !DILocalVariable(name: "rkb", arg: 1, scope: !4723, file: !2, line: 399, type: !412)
!4729 = !DILocalVariable(name: "level", arg: 2, scope: !4723, file: !2, line: 400, type: !126)
!4730 = !DILocalVariable(name: "err", arg: 3, scope: !4723, file: !2, line: 401, type: !550)
!4731 = !DILocalVariable(name: "fmt", arg: 4, scope: !4723, file: !2, line: 402, type: !365)
!4732 = !DILocalVariable(name: "ap", arg: 5, scope: !4723, file: !2, line: 403, type: !4726)
!4733 = !DILocalVariable(name: "errstr", scope: !4723, file: !2, line: 404, type: !2502)
!4734 = !DILocalVariable(name: "extra", scope: !4723, file: !2, line: 405, type: !1408)
!4735 = !DILocalVariable(name: "of", scope: !4723, file: !2, line: 406, type: !692)
!4736 = !DILocalVariable(name: "ofe", scope: !4723, file: !2, line: 406, type: !692)
!4737 = !DILocalVariable(name: "identical", scope: !4723, file: !2, line: 407, type: !561)
!4738 = !DILocalVariable(name: "suppress", scope: !4723, file: !2, line: 407, type: !561)
!4739 = !DILocalVariable(name: "state_duration_ms", scope: !4723, file: !2, line: 408, type: !126)
!4740 = !DILocalVariable(name: "r", scope: !4741, file: !2, line: 502, type: !692)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !2, line: 501, column: 39)
!4742 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 500, column: 13)
!4743 = !DILocalVariable(name: "_logname", scope: !4744, file: !2, line: 525, type: !924)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !2, line: 525, column: 9)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !2, line: 525, column: 9)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !2, line: 525, column: 9)
!4747 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 525, column: 9)
!4748 = !DILocation(line: 399, column: 58, scope: !4723)
!4749 = !DILocation(line: 400, column: 43, scope: !4723)
!4750 = !DILocation(line: 401, column: 59, scope: !4723)
!4751 = !DILocation(line: 402, column: 51, scope: !4723)
!4752 = !DILocation(line: 403, column: 47, scope: !4723)
!4753 = !DILocation(line: 404, column: 9, scope: !4723)
!4754 = !DILocation(line: 404, column: 14, scope: !4723)
!4755 = !DILocation(line: 405, column: 9, scope: !4723)
!4756 = !DILocation(line: 405, column: 14, scope: !4723)
!4757 = !DILocation(line: 406, column: 9, scope: !4723)
!4758 = !DILocation(line: 406, column: 16, scope: !4723)
!4759 = !DILocation(line: 406, column: 24, scope: !4723)
!4760 = !DILocation(line: 407, column: 9, scope: !4723)
!4761 = !DILocation(line: 407, column: 19, scope: !4723)
!4762 = !DILocation(line: 407, column: 30, scope: !4723)
!4763 = !DILocation(line: 408, column: 9, scope: !4723)
!4764 = !DILocation(line: 408, column: 13, scope: !4723)
!4765 = !DILocation(line: 408, column: 40, scope: !4723)
!4766 = !DILocation(line: 408, column: 53, scope: !4723)
!4767 = !DILocation(line: 408, column: 58, scope: !4723)
!4768 = !DILocation(line: 408, column: 51, scope: !4723)
!4769 = !DILocation(line: 408, column: 72, scope: !4723)
!4770 = !DILocation(line: 408, column: 33, scope: !4723)
!4771 = !DILocation(line: 413, column: 9, scope: !4723)
!4772 = !DILocation(line: 414, column: 13, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 414, column: 13)
!4774 = !DILocation(line: 414, column: 18, scope: !4773)
!4775 = !DILocation(line: 414, column: 29, scope: !4773)
!4776 = !DILocation(line: 414, column: 49, scope: !4773)
!4777 = !DILocation(line: 415, column: 14, scope: !4773)
!4778 = !DILocation(line: 414, column: 13, scope: !4723)
!4779 = !DILocation(line: 416, column: 30, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4773, file: !2, line: 415, column: 48)
!4781 = !DILocation(line: 416, column: 22, scope: !4780)
!4782 = !DILocation(line: 416, column: 20, scope: !4780)
!4783 = !DILocation(line: 418, column: 21, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4780, file: !2, line: 418, column: 21)
!4785 = !DILocation(line: 418, column: 24, scope: !4784)
!4786 = !DILocation(line: 418, column: 21, scope: !4780)
!4787 = !DILocation(line: 419, column: 28, scope: !4784)
!4788 = !DILocation(line: 419, column: 25, scope: !4784)
!4789 = !DILocation(line: 422, column: 9, scope: !4780)
!4790 = !DILocation(line: 423, column: 9, scope: !4723)
!4791 = !DILocation(line: 425, column: 23, scope: !4723)
!4792 = !DILocation(line: 425, column: 15, scope: !4723)
!4793 = !DILocation(line: 425, column: 13, scope: !4723)
!4794 = !DILocation(line: 426, column: 13, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 426, column: 13)
!4796 = !DILocation(line: 426, column: 36, scope: !4795)
!4797 = !DILocation(line: 426, column: 34, scope: !4795)
!4798 = !DILocation(line: 426, column: 17, scope: !4795)
!4799 = !DILocation(line: 426, column: 13, scope: !4723)
!4800 = !DILocation(line: 427, column: 40, scope: !4795)
!4801 = !DILocation(line: 427, column: 38, scope: !4795)
!4802 = !DILocation(line: 427, column: 21, scope: !4795)
!4803 = !DILocation(line: 427, column: 17, scope: !4795)
!4804 = !DILocation(line: 428, column: 15, scope: !4723)
!4805 = !DILocation(line: 428, column: 12, scope: !4723)
!4806 = !DILocation(line: 431, column: 13, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 431, column: 13)
!4808 = !DILocation(line: 431, column: 17, scope: !4807)
!4809 = !DILocation(line: 431, column: 49, scope: !4807)
!4810 = !DILocation(line: 432, column: 21, scope: !4807)
!4811 = !DILocation(line: 432, column: 14, scope: !4807)
!4812 = !DILocation(line: 431, column: 13, scope: !4723)
!4813 = !DILocation(line: 433, column: 21, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !2, line: 433, column: 21)
!4815 = distinct !DILexicalBlock(scope: !4807, file: !2, line: 432, column: 46)
!4816 = !DILocation(line: 433, column: 26, scope: !4814)
!4817 = !DILocation(line: 433, column: 36, scope: !4814)
!4818 = !DILocation(line: 433, column: 21, scope: !4815)
!4819 = !DILocation(line: 439, column: 29, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !2, line: 439, column: 29)
!4821 = distinct !DILexicalBlock(scope: !4814, file: !2, line: 433, column: 79)
!4822 = !DILocation(line: 439, column: 34, scope: !4820)
!4823 = !DILocation(line: 439, column: 44, scope: !4820)
!4824 = !DILocation(line: 439, column: 66, scope: !4820)
!4825 = !DILocation(line: 440, column: 29, scope: !4820)
!4826 = !DILocation(line: 440, column: 34, scope: !4820)
!4827 = !DILocation(line: 440, column: 44, scope: !4820)
!4828 = !DILocation(line: 439, column: 29, scope: !4821)
!4829 = !DILocation(line: 442, column: 37, scope: !4820)
!4830 = !DILocation(line: 442, column: 42, scope: !4820)
!4831 = !DILocation(line: 442, column: 49, scope: !4820)
!4832 = !DILocation(line: 450, column: 37, scope: !4820)
!4833 = !DILocation(line: 441, column: 33, scope: !4820)
!4834 = !DILocation(line: 453, column: 37, scope: !4820)
!4835 = !DILocation(line: 453, column: 42, scope: !4820)
!4836 = !DILocation(line: 453, column: 49, scope: !4820)
!4837 = !DILocation(line: 458, column: 37, scope: !4820)
!4838 = !DILocation(line: 452, column: 33, scope: !4820)
!4839 = !DILocation(line: 459, column: 25, scope: !4821)
!4840 = !DILocation(line: 461, column: 28, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4814, file: !2, line: 461, column: 28)
!4842 = !DILocation(line: 461, column: 33, scope: !4841)
!4843 = !DILocation(line: 461, column: 43, scope: !4841)
!4844 = !DILocation(line: 461, column: 71, scope: !4841)
!4845 = !DILocation(line: 462, column: 28, scope: !4841)
!4846 = !DILocation(line: 462, column: 46, scope: !4841)
!4847 = !DILocation(line: 462, column: 60, scope: !4841)
!4848 = !DILocation(line: 463, column: 28, scope: !4841)
!4849 = !DILocation(line: 463, column: 33, scope: !4841)
!4850 = !DILocation(line: 463, column: 41, scope: !4841)
!4851 = !DILocation(line: 463, column: 49, scope: !4841)
!4852 = !{!4141, !3912, i64 736}
!4853 = !DILocation(line: 463, column: 67, scope: !4841)
!4854 = !DILocation(line: 464, column: 56, scope: !4841)
!4855 = !DILocation(line: 465, column: 28, scope: !4841)
!4856 = !DILocation(line: 465, column: 33, scope: !4841)
!4857 = !DILocation(line: 465, column: 41, scope: !4841)
!4858 = !DILocation(line: 465, column: 49, scope: !4841)
!4859 = !DILocation(line: 465, column: 67, scope: !4841)
!4860 = !DILocation(line: 461, column: 28, scope: !4814)
!4861 = !DILocation(line: 472, column: 29, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4841, file: !2, line: 466, column: 63)
!4863 = !DILocation(line: 472, column: 34, scope: !4862)
!4864 = !DILocation(line: 472, column: 41, scope: !4862)
!4865 = !DILocation(line: 476, column: 29, scope: !4862)
!4866 = !DILocation(line: 471, column: 25, scope: !4862)
!4867 = !DILocation(line: 477, column: 25, scope: !4862)
!4868 = !DILocation(line: 479, column: 9, scope: !4815)
!4869 = !DILocation(line: 484, column: 21, scope: !4723)
!4870 = !DILocation(line: 484, column: 28, scope: !4723)
!4871 = !DILocation(line: 484, column: 33, scope: !4723)
!4872 = !DILocation(line: 484, column: 46, scope: !4723)
!4873 = !{!3939, !3912, i64 3120}
!4874 = !DILocation(line: 484, column: 25, scope: !4723)
!4875 = !DILocation(line: 484, column: 50, scope: !4723)
!4876 = !DILocation(line: 485, column: 29, scope: !4723)
!4877 = !DILocation(line: 485, column: 34, scope: !4723)
!4878 = !DILocation(line: 485, column: 47, scope: !4723)
!4879 = !DILocation(line: 485, column: 55, scope: !4723)
!4880 = !DILocation(line: 485, column: 22, scope: !4723)
!4881 = !DILocation(line: 485, column: 21, scope: !4723)
!4882 = !DILocation(line: 0, scope: !4723)
!4883 = !DILocation(line: 484, column: 19, scope: !4723)
!4884 = !DILocation(line: 486, column: 20, scope: !4723)
!4885 = !DILocation(line: 486, column: 30, scope: !4723)
!4886 = !DILocation(line: 486, column: 33, scope: !4723)
!4887 = !DILocation(line: 487, column: 74, scope: !4723)
!4888 = !DILocation(line: 486, column: 18, scope: !4723)
!4889 = !DILocation(line: 490, column: 33, scope: !4723)
!4890 = !DILocation(line: 490, column: 9, scope: !4723)
!4891 = !DILocation(line: 490, column: 14, scope: !4723)
!4892 = !DILocation(line: 490, column: 27, scope: !4723)
!4893 = !DILocation(line: 490, column: 31, scope: !4723)
!4894 = !DILocation(line: 491, column: 20, scope: !4723)
!4895 = !DILocation(line: 491, column: 25, scope: !4723)
!4896 = !DILocation(line: 491, column: 38, scope: !4723)
!4897 = !DILocation(line: 491, column: 46, scope: !4723)
!4898 = !DILocation(line: 491, column: 9, scope: !4723)
!4899 = !DILocation(line: 495, column: 15, scope: !4723)
!4900 = !DILocation(line: 495, column: 13, scope: !4723)
!4901 = !DILocation(line: 500, column: 13, scope: !4742)
!4902 = !DILocation(line: 500, column: 23, scope: !4742)
!4903 = !DILocation(line: 500, column: 27, scope: !4742)
!4904 = !DILocation(line: 500, column: 36, scope: !4742)
!4905 = !DILocation(line: 500, column: 39, scope: !4742)
!4906 = !DILocation(line: 500, column: 44, scope: !4742)
!4907 = !DILocation(line: 500, column: 57, scope: !4742)
!4908 = !{!3939, !3941, i64 3124}
!4909 = !DILocation(line: 500, column: 61, scope: !4742)
!4910 = !DILocation(line: 500, column: 66, scope: !4742)
!4911 = !DILocation(line: 501, column: 13, scope: !4742)
!4912 = !DILocation(line: 501, column: 17, scope: !4742)
!4913 = !DILocation(line: 501, column: 22, scope: !4742)
!4914 = !DILocation(line: 500, column: 13, scope: !4723)
!4915 = !DILocation(line: 502, column: 17, scope: !4741)
!4916 = !DILocation(line: 502, column: 24, scope: !4741)
!4917 = !DILocation(line: 503, column: 29, scope: !4741)
!4918 = !DILocation(line: 503, column: 21, scope: !4741)
!4919 = !DILocation(line: 506, column: 21, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4741, file: !2, line: 506, column: 21)
!4921 = !DILocation(line: 506, column: 41, scope: !4920)
!4922 = !DILocation(line: 506, column: 39, scope: !4920)
!4923 = !DILocation(line: 506, column: 23, scope: !4920)
!4924 = !DILocation(line: 506, column: 21, scope: !4741)
!4925 = !DILocation(line: 507, column: 32, scope: !4920)
!4926 = !DILocation(line: 507, column: 29, scope: !4920)
!4927 = !DILocation(line: 507, column: 25, scope: !4920)
!4928 = !DILocation(line: 509, column: 29, scope: !4920)
!4929 = !DILocation(line: 510, column: 9, scope: !4742)
!4930 = !DILocation(line: 510, column: 9, scope: !4741)
!4931 = !DILocation(line: 513, column: 13, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 513, column: 13)
!4933 = !DILocation(line: 513, column: 17, scope: !4932)
!4934 = !DILocation(line: 513, column: 21, scope: !4932)
!4935 = !DILocation(line: 513, column: 24, scope: !4932)
!4936 = !DILocation(line: 513, column: 29, scope: !4932)
!4937 = !DILocation(line: 513, column: 27, scope: !4932)
!4938 = !DILocation(line: 513, column: 33, scope: !4932)
!4939 = !DILocation(line: 513, column: 37, scope: !4932)
!4940 = !DILocation(line: 513, column: 13, scope: !4723)
!4941 = !DILocation(line: 514, column: 17, scope: !4932)
!4942 = !DILocation(line: 517, column: 13, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 517, column: 13)
!4944 = !DILocation(line: 517, column: 17, scope: !4943)
!4945 = !DILocation(line: 517, column: 44, scope: !4943)
!4946 = !DILocation(line: 517, column: 47, scope: !4943)
!4947 = !DILocation(line: 517, column: 13, scope: !4723)
!4948 = !DILocation(line: 518, column: 26, scope: !4943)
!4949 = !DILocation(line: 518, column: 17, scope: !4943)
!4950 = !DILocation(line: 520, column: 14, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 520, column: 13)
!4952 = !DILocation(line: 520, column: 13, scope: !4723)
!4953 = !DILocation(line: 521, column: 17, scope: !4951)
!4954 = !DILocation(line: 521, column: 22, scope: !4951)
!4955 = !DILocation(line: 521, column: 35, scope: !4951)
!4956 = !DILocation(line: 521, column: 39, scope: !4951)
!4957 = !DILocation(line: 523, column: 17, scope: !4951)
!4958 = !DILocation(line: 523, column: 22, scope: !4951)
!4959 = !DILocation(line: 523, column: 35, scope: !4951)
!4960 = !DILocation(line: 523, column: 38, scope: !4951)
!4961 = !DILocation(line: 525, column: 9, scope: !4723)
!4962 = !DILocation(line: 525, column: 9, scope: !4746)
!4963 = !DILocation(line: 525, column: 9, scope: !4747)
!4964 = !DILocation(line: 525, column: 9, scope: !4745)
!4965 = !DILocation(line: 525, column: 9, scope: !4744)
!4966 = !DILocation(line: 530, column: 13, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4723, file: !2, line: 530, column: 13)
!4968 = !DILocation(line: 530, column: 19, scope: !4967)
!4969 = !DILocation(line: 530, column: 32, scope: !4967)
!4970 = !DILocation(line: 530, column: 36, scope: !4967)
!4971 = !DILocation(line: 530, column: 42, scope: !4967)
!4972 = !DILocation(line: 530, column: 54, scope: !4967)
!4973 = !DILocation(line: 530, column: 58, scope: !4967)
!4974 = !DILocation(line: 530, column: 13, scope: !4723)
!4975 = !DILocation(line: 531, column: 17, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4967, file: !2, line: 530, column: 69)
!4977 = !DILocation(line: 535, column: 35, scope: !4976)
!4978 = !DILocation(line: 535, column: 40, scope: !4976)
!4979 = !DILocation(line: 535, column: 48, scope: !4976)
!4980 = !DILocation(line: 535, column: 56, scope: !4976)
!4981 = !DILocation(line: 536, column: 35, scope: !4976)
!4982 = !DILocation(line: 536, column: 40, scope: !4976)
!4983 = !DILocation(line: 536, column: 50, scope: !4976)
!4984 = !DILocation(line: 535, column: 17, scope: !4976)
!4985 = !DILocation(line: 537, column: 9, scope: !4976)
!4986 = !DILocation(line: 538, column: 1, scope: !4723)
!4987 = distinct !DISubprogram(name: "rd_kafka_broker_feature_disable", scope: !2, file: !2, line: 206, type: !4116, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !4988)
!4988 = !{!4989, !4990, !4991}
!4989 = !DILocalVariable(name: "rkb", arg: 1, scope: !4987, file: !2, line: 206, type: !412)
!4990 = !DILocalVariable(name: "features", arg: 2, scope: !4987, file: !2, line: 207, type: !126)
!4991 = !DILocalVariable(name: "_logname", scope: !4992, file: !2, line: 212, type: !924)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !2, line: 212, column: 9)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !2, line: 212, column: 9)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !2, line: 212, column: 9)
!4995 = distinct !DILexicalBlock(scope: !4987, file: !2, line: 212, column: 9)
!4996 = !DILocation(line: 206, column: 64, scope: !4987)
!4997 = !DILocation(line: 207, column: 49, scope: !4987)
!4998 = !DILocation(line: 208, column: 15, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4987, file: !2, line: 208, column: 13)
!5000 = !DILocation(line: 208, column: 26, scope: !4999)
!5001 = !DILocation(line: 208, column: 31, scope: !4999)
!5002 = !DILocation(line: 208, column: 24, scope: !4999)
!5003 = !DILocation(line: 208, column: 13, scope: !4987)
!5004 = !DILocation(line: 209, column: 17, scope: !4999)
!5005 = !DILocation(line: 211, column: 31, scope: !4987)
!5006 = !DILocation(line: 211, column: 30, scope: !4987)
!5007 = !DILocation(line: 211, column: 9, scope: !4987)
!5008 = !DILocation(line: 211, column: 14, scope: !4987)
!5009 = !DILocation(line: 211, column: 27, scope: !4987)
!5010 = !DILocation(line: 212, column: 9, scope: !4987)
!5011 = !DILocation(line: 212, column: 9, scope: !4994)
!5012 = !DILocation(line: 212, column: 9, scope: !4995)
!5013 = !DILocation(line: 212, column: 9, scope: !4993)
!5014 = !DILocation(line: 212, column: 9, scope: !4992)
!5015 = !DILocation(line: 216, column: 1, scope: !4987)
!5016 = !DISubprogram(name: "rd_kafka_timer_stop", scope: !878, file: !878, line: 69, type: !5017, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{!126, !895, !5019, !126}
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!5020 = distinct !DISubprogram(name: "rd_atomic64_set", scope: !316, file: !316, line: 204, type: !5021, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5024)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!489, !5023, !489}
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!5024 = !{!5025, !5026}
!5025 = !DILocalVariable(name: "ra", arg: 1, scope: !5020, file: !316, line: 204, type: !5023)
!5026 = !DILocalVariable(name: "v", arg: 2, scope: !5020, file: !316, line: 205, type: !489)
!5027 = !DILocation(line: 204, column: 67, scope: !5020)
!5028 = !DILocation(line: 205, column: 60, scope: !5020)
!5029 = !DILocation(line: 216, column: 27, scope: !5020)
!5030 = !DILocation(line: 216, column: 31, scope: !5020)
!5031 = !DILocation(line: 216, column: 36, scope: !5020)
!5032 = !DILocation(line: 216, column: 9, scope: !5020)
!5033 = !DILocation(line: 217, column: 16, scope: !5020)
!5034 = !DILocation(line: 217, column: 9, scope: !5020)
!5035 = !DISubprogram(name: "rd_kafka_bufq_init", scope: !414, file: !414, line: 941, type: !5036, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5036 = !DISubroutineType(types: !5037)
!5037 = !{null, !5038}
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!5039 = !DISubprogram(name: "rd_kafka_bufq_concat", scope: !414, file: !414, line: 942, type: !5040, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5040 = !DISubroutineType(types: !5041)
!5041 = !{null, !5038, !5038}
!5042 = distinct !DISubprogram(name: "rd_atomic32_init", scope: !316, file: !316, line: 48, type: !5043, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5045)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{null, !4338, !320}
!5045 = !{!5046, !5047}
!5046 = !DILocalVariable(name: "ra", arg: 1, scope: !5042, file: !316, line: 48, type: !4338)
!5047 = !DILocalVariable(name: "v", arg: 2, scope: !5042, file: !316, line: 48, type: !320)
!5048 = !DILocation(line: 48, column: 65, scope: !5042)
!5049 = !DILocation(line: 48, column: 77, scope: !5042)
!5050 = !DILocation(line: 49, column: 19, scope: !5042)
!5051 = !DILocation(line: 49, column: 9, scope: !5042)
!5052 = !DILocation(line: 49, column: 13, scope: !5042)
!5053 = !DILocation(line: 49, column: 17, scope: !5042)
!5054 = !{!3944, !3941, i64 0}
!5055 = !DILocation(line: 53, column: 1, scope: !5042)
!5056 = !DISubprogram(name: "rd_kafka_bufq_purge", scope: !414, file: !414, line: 943, type: !5057, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{null, !412, !5038, !550}
!5059 = !DISubprogram(name: "rd_kafka_bufq_connection_reset", scope: !414, file: !414, line: 946, type: !5060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !412, !5038}
!5062 = distinct !DISubprogram(name: "rd_strlcpy", scope: !5063, file: !5063, line: 35, type: !5064, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5066)
!5063 = !DIFile(filename: "./rdstring.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "89a15bdd894e660219e80d0ccb27b269")
!5064 = !DISubroutineType(types: !5065)
!5065 = !{null, !559, !365, !692}
!5066 = !{!5067, !5068, !5069, !5070, !5073}
!5067 = !DILocalVariable(name: "dst", arg: 1, scope: !5062, file: !5063, line: 35, type: !559)
!5068 = !DILocalVariable(name: "src", arg: 2, scope: !5062, file: !5063, line: 35, type: !365)
!5069 = !DILocalVariable(name: "dstsize", arg: 3, scope: !5062, file: !5063, line: 35, type: !692)
!5070 = !DILocalVariable(name: "srclen", scope: !5071, file: !5063, line: 40, type: !692)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !5063, line: 39, column: 34)
!5072 = distinct !DILexicalBlock(scope: !5062, file: !5063, line: 39, column: 13)
!5073 = !DILocalVariable(name: "copylen", scope: !5071, file: !5063, line: 41, type: !692)
!5074 = !DILocation(line: 35, column: 18, scope: !5062)
!5075 = !DILocation(line: 35, column: 35, scope: !5062)
!5076 = !DILocation(line: 35, column: 47, scope: !5062)
!5077 = !DILocation(line: 39, column: 13, scope: !5072)
!5078 = !DILocation(line: 39, column: 13, scope: !5062)
!5079 = !DILocation(line: 40, column: 17, scope: !5071)
!5080 = !DILocation(line: 40, column: 24, scope: !5071)
!5081 = !DILocation(line: 40, column: 41, scope: !5071)
!5082 = !DILocation(line: 40, column: 34, scope: !5071)
!5083 = !DILocation(line: 41, column: 17, scope: !5071)
!5084 = !DILocation(line: 41, column: 24, scope: !5071)
!5085 = !DILocation(line: 41, column: 34, scope: !5071)
!5086 = !DILocation(line: 42, column: 24, scope: !5071)
!5087 = !DILocation(line: 42, column: 29, scope: !5071)
!5088 = !DILocation(line: 42, column: 34, scope: !5071)
!5089 = !DILocation(line: 42, column: 17, scope: !5071)
!5090 = !DILocation(line: 43, column: 17, scope: !5071)
!5091 = !DILocation(line: 43, column: 21, scope: !5071)
!5092 = !DILocation(line: 43, column: 30, scope: !5071)
!5093 = !DILocation(line: 44, column: 9, scope: !5072)
!5094 = !DILocation(line: 44, column: 9, scope: !5071)
!5095 = !DILocation(line: 46, column: 1, scope: !5062)
!5096 = !DISubprogram(name: "rd_kafka_bufq_dump", scope: !414, file: !414, line: 948, type: !5097, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{null, !412, !365, !5038}
!5099 = !DISubprogram(name: "rd_kafka_toppar_delegate_to_leader", scope: !298, file: !298, line: 292, type: !5100, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!126, !368}
!5102 = !DISubprogram(name: "rd_kafka_metadata_refresh_known_topics", scope: !814, file: !814, line: 132, type: !5103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!550, !586, !412, !561, !365}
!5105 = distinct !DISubprogram(name: "rd_kafka_broker_conn_closed", scope: !2, file: !2, line: 685, type: !5106, scopeLine: 687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5108)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{null, !412, !550, !365}
!5108 = !{!5109, !5110, !5111, !5112, !5113, !5116, !5117, !5118}
!5109 = !DILocalVariable(name: "rkb", arg: 1, scope: !5105, file: !2, line: 685, type: !412)
!5110 = !DILocalVariable(name: "err", arg: 2, scope: !5105, file: !2, line: 686, type: !550)
!5111 = !DILocalVariable(name: "errstr", arg: 3, scope: !5105, file: !2, line: 687, type: !365)
!5112 = !DILocalVariable(name: "log_level", scope: !5105, file: !2, line: 688, type: !126)
!5113 = !DILocalVariable(name: "now", scope: !5114, file: !2, line: 710, type: !487)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !2, line: 694, column: 16)
!5115 = distinct !DILexicalBlock(scope: !5105, file: !2, line: 690, column: 13)
!5116 = !DILocalVariable(name: "minidle", scope: !5114, file: !2, line: 711, type: !487)
!5117 = !DILocalVariable(name: "inflight", scope: !5114, file: !2, line: 715, type: !126)
!5118 = !DILocalVariable(name: "inqueue", scope: !5114, file: !2, line: 716, type: !126)
!5119 = !DILocation(line: 685, column: 53, scope: !5105)
!5120 = !DILocation(line: 686, column: 54, scope: !5105)
!5121 = !DILocation(line: 687, column: 46, scope: !5105)
!5122 = !DILocation(line: 688, column: 9, scope: !5105)
!5123 = !DILocation(line: 688, column: 13, scope: !5105)
!5124 = !DILocation(line: 690, column: 14, scope: !5115)
!5125 = !DILocation(line: 690, column: 19, scope: !5115)
!5126 = !DILocation(line: 690, column: 27, scope: !5115)
!5127 = !DILocation(line: 690, column: 35, scope: !5115)
!5128 = !{!4141, !3941, i64 2188}
!5129 = !DILocation(line: 690, column: 13, scope: !5105)
!5130 = !DILocation(line: 692, column: 27, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5115, file: !2, line: 690, column: 57)
!5132 = !DILocation(line: 694, column: 9, scope: !5131)
!5133 = !DILocation(line: 710, column: 17, scope: !5114)
!5134 = !DILocation(line: 710, column: 25, scope: !5114)
!5135 = !DILocation(line: 710, column: 31, scope: !5114)
!5136 = !DILocation(line: 711, column: 17, scope: !5114)
!5137 = !DILocation(line: 711, column: 25, scope: !5114)
!5138 = !DILocation(line: 712, column: 21, scope: !5114)
!5139 = !{!4141, !3941, i64 636}
!5140 = !DILocation(line: 713, column: 68, scope: !5114)
!5141 = !DILocation(line: 715, column: 17, scope: !5114)
!5142 = !DILocation(line: 715, column: 21, scope: !5114)
!5143 = !DILocation(line: 715, column: 32, scope: !5114)
!5144 = !DILocation(line: 716, column: 17, scope: !5114)
!5145 = !DILocation(line: 716, column: 21, scope: !5114)
!5146 = !DILocation(line: 716, column: 32, scope: !5114)
!5147 = !DILocation(line: 718, column: 21, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5114, file: !2, line: 718, column: 21)
!5149 = !DILocation(line: 718, column: 26, scope: !5148)
!5150 = !DILocation(line: 718, column: 41, scope: !5148)
!5151 = !DILocation(line: 718, column: 39, scope: !5148)
!5152 = !DILocation(line: 718, column: 51, scope: !5148)
!5153 = !DILocation(line: 718, column: 49, scope: !5148)
!5154 = !DILocation(line: 718, column: 55, scope: !5148)
!5155 = !DILocation(line: 719, column: 38, scope: !5148)
!5156 = !DILocation(line: 719, column: 43, scope: !5148)
!5157 = !DILocation(line: 719, column: 49, scope: !5148)
!5158 = !DILocation(line: 719, column: 21, scope: !5148)
!5159 = !DILocation(line: 719, column: 60, scope: !5148)
!5160 = !DILocation(line: 719, column: 58, scope: !5148)
!5161 = !DILocation(line: 719, column: 70, scope: !5148)
!5162 = !DILocation(line: 719, column: 68, scope: !5148)
!5163 = !DILocation(line: 719, column: 74, scope: !5148)
!5164 = !DILocation(line: 720, column: 21, scope: !5148)
!5165 = !DILocation(line: 720, column: 32, scope: !5148)
!5166 = !DILocation(line: 720, column: 30, scope: !5148)
!5167 = !DILocation(line: 720, column: 40, scope: !5148)
!5168 = !DILocation(line: 718, column: 21, scope: !5114)
!5169 = !DILocation(line: 721, column: 35, scope: !5148)
!5170 = !DILocation(line: 721, column: 25, scope: !5148)
!5171 = !DILocation(line: 722, column: 26, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5148, file: !2, line: 722, column: 26)
!5173 = !DILocation(line: 722, column: 35, scope: !5172)
!5174 = !DILocation(line: 722, column: 26, scope: !5148)
!5175 = !DILocation(line: 723, column: 35, scope: !5172)
!5176 = !DILocation(line: 723, column: 25, scope: !5172)
!5177 = !DILocation(line: 725, column: 35, scope: !5172)
!5178 = !DILocation(line: 726, column: 9, scope: !5115)
!5179 = !DILocation(line: 728, column: 30, scope: !5105)
!5180 = !DILocation(line: 728, column: 35, scope: !5105)
!5181 = !DILocation(line: 728, column: 46, scope: !5105)
!5182 = !DILocation(line: 728, column: 57, scope: !5105)
!5183 = !DILocation(line: 728, column: 9, scope: !5105)
!5184 = !DILocation(line: 729, column: 1, scope: !5105)
!5185 = distinct !DISubprogram(name: "rd_atomic64_get", scope: !316, file: !316, line: 189, type: !5186, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5188)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!489, !5023}
!5188 = !{!5189}
!5189 = !DILocalVariable(name: "ra", arg: 1, scope: !5185, file: !316, line: 189, type: !5023)
!5190 = !DILocation(line: 189, column: 67, scope: !5185)
!5191 = !DILocation(line: 199, column: 16, scope: !5185)
!5192 = !DILocation(line: 199, column: 9, scope: !5185)
!5193 = distinct !DISubprogram(name: "rd_kafka_broker_buf_enq1", scope: !2, file: !2, line: 1130, type: !5194, scopeLine: 1133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5196)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{null, !412, !1692, !1688, !607}
!5196 = !{!5197, !5198, !5199, !5200}
!5197 = !DILocalVariable(name: "rkb", arg: 1, scope: !5193, file: !2, line: 1130, type: !412)
!5198 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !5193, file: !2, line: 1131, type: !1692)
!5199 = !DILocalVariable(name: "resp_cb", arg: 3, scope: !5193, file: !2, line: 1132, type: !1688)
!5200 = !DILocalVariable(name: "opaque", arg: 4, scope: !5193, file: !2, line: 1133, type: !607)
!5201 = !DILocation(line: 1130, column: 50, scope: !5193)
!5202 = !DILocation(line: 1131, column: 47, scope: !5193)
!5203 = !DILocation(line: 1132, column: 51, scope: !5193)
!5204 = !DILocation(line: 1133, column: 37, scope: !5193)
!5205 = !DILocation(line: 1136, column: 31, scope: !5193)
!5206 = !DILocation(line: 1136, column: 9, scope: !5193)
!5207 = !DILocation(line: 1136, column: 16, scope: !5193)
!5208 = !DILocation(line: 1136, column: 29, scope: !5193)
!5209 = !{!5210, !3911, i64 240}
!5210 = !{!"rd_kafka_buf_s", !3940, i64 0, !3941, i64 16, !3942, i64 24, !3941, i64 32, !3912, i64 36, !5211, i64 40, !5213, i64 120, !3941, i64 160, !3942, i64 168, !3941, i64 176, !5214, i64 180, !5215, i64 192, !3941, i64 200, !4652, i64 208, !4652, i64 224, !3911, i64 240, !3911, i64 248, !3911, i64 256, !3911, i64 264, !3911, i64 272, !3911, i64 280, !3944, i64 288, !3911, i64 296, !3941, i64 304, !3941, i64 308, !3941, i64 312, !3942, i64 320, !3942, i64 328, !3942, i64 336, !3942, i64 344, !3941, i64 352, !3912, i64 356, !3942, i64 360, !3911, i64 368, !3912, i64 376, !3912, i64 384, !3911, i64 504}
!5211 = !{!"rd_buf_s", !5212, i64 0, !3942, i64 16, !3911, i64 24, !3942, i64 32, !3942, i64 40, !3942, i64 48, !3911, i64 56, !3942, i64 64, !3942, i64 72}
!5212 = !{!"rd_segment_head", !3911, i64 0, !3911, i64 8}
!5213 = !{!"rd_slice_s", !3911, i64 0, !3911, i64 8, !3942, i64 16, !3942, i64 24, !3942, i64 32}
!5214 = !{!"rd_kafkap_reqhdr", !3941, i64 0, !3916, i64 4, !3916, i64 6, !3941, i64 8}
!5215 = !{!"rd_kafkap_reshdr", !3941, i64 0, !3941, i64 4}
!5216 = !DILocation(line: 1137, column: 31, scope: !5193)
!5217 = !DILocation(line: 1137, column: 9, scope: !5193)
!5218 = !DILocation(line: 1137, column: 16, scope: !5193)
!5219 = !DILocation(line: 1137, column: 29, scope: !5193)
!5220 = !{!5210, !3911, i64 296}
!5221 = !DILocation(line: 1139, column: 31, scope: !5193)
!5222 = !DILocation(line: 1139, column: 36, scope: !5193)
!5223 = !DILocation(line: 1139, column: 44, scope: !5193)
!5224 = !DILocation(line: 1139, column: 9, scope: !5193)
!5225 = !DILocation(line: 1141, column: 34, scope: !5193)
!5226 = !DILocation(line: 1141, column: 39, scope: !5193)
!5227 = !DILocation(line: 1141, column: 9, scope: !5193)
!5228 = !DILocation(line: 1142, column: 1, scope: !5193)
!5229 = distinct !DISubprogram(name: "rd_kafka_buf_finalize", scope: !2, file: !2, line: 1103, type: !5230, scopeLine: 1103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5232)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{null, !586, !1692}
!5232 = !{!5233, !5234, !5235}
!5233 = !DILocalVariable(name: "rk", arg: 1, scope: !5229, file: !2, line: 1103, type: !586)
!5234 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !5229, file: !2, line: 1103, type: !1692)
!5235 = !DILocalVariable(name: "totsize", scope: !5229, file: !2, line: 1104, type: !692)
!5236 = !DILocation(line: 1103, column: 47, scope: !5229)
!5237 = !DILocation(line: 1103, column: 67, scope: !5229)
!5238 = !DILocation(line: 1104, column: 9, scope: !5229)
!5239 = !DILocation(line: 1104, column: 16, scope: !5229)
!5240 = !DILocation(line: 1106, column: 9, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5242, file: !2, line: 1106, column: 9)
!5242 = distinct !DILexicalBlock(scope: !5229, file: !2, line: 1106, column: 9)
!5243 = !{!5210, !3941, i64 32}
!5244 = !DILocation(line: 1106, column: 9, scope: !5242)
!5245 = !DILocation(line: 1108, column: 13, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5229, file: !2, line: 1108, column: 13)
!5247 = !DILocation(line: 1108, column: 20, scope: !5246)
!5248 = !DILocation(line: 1108, column: 32, scope: !5246)
!5249 = !DILocation(line: 1108, column: 13, scope: !5229)
!5250 = !DILocation(line: 1110, column: 39, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5246, file: !2, line: 1108, column: 57)
!5252 = !DILocation(line: 1110, column: 17, scope: !5251)
!5253 = !DILocation(line: 1111, column: 9, scope: !5251)
!5254 = !DILocation(line: 1114, column: 31, scope: !5229)
!5255 = !DILocation(line: 1114, column: 38, scope: !5229)
!5256 = !DILocation(line: 1114, column: 19, scope: !5229)
!5257 = !DILocation(line: 1114, column: 49, scope: !5229)
!5258 = !DILocation(line: 1114, column: 17, scope: !5229)
!5259 = !DILocation(line: 1117, column: 29, scope: !5229)
!5260 = !DILocation(line: 1117, column: 36, scope: !5229)
!5261 = !DILocation(line: 1117, column: 51, scope: !5229)
!5262 = !DILocation(line: 1117, column: 58, scope: !5229)
!5263 = !DILocation(line: 1117, column: 9, scope: !5229)
!5264 = !DILocation(line: 1123, column: 33, scope: !5229)
!5265 = !DILocation(line: 1123, column: 52, scope: !5229)
!5266 = !DILocation(line: 1123, column: 43, scope: !5229)
!5267 = !DILocation(line: 1123, column: 9, scope: !5229)
!5268 = !DILocation(line: 1126, column: 33, scope: !5229)
!5269 = !DILocation(line: 1126, column: 47, scope: !5229)
!5270 = !DILocation(line: 1126, column: 54, scope: !5229)
!5271 = !DILocation(line: 1126, column: 67, scope: !5229)
!5272 = !{!5210, !3916, i64 186}
!5273 = !DILocation(line: 1126, column: 9, scope: !5229)
!5274 = !DILocation(line: 1127, column: 1, scope: !5229)
!5275 = distinct !DISubprogram(name: "rd_kafka_broker_buf_enq0", scope: !2, file: !2, line: 1039, type: !5276, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{null, !412, !1692}
!5278 = !{!5279, !5280, !5281, !5282, !5285}
!5279 = !DILocalVariable(name: "rkb", arg: 1, scope: !5275, file: !2, line: 1039, type: !412)
!5280 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !5275, file: !2, line: 1040, type: !1692)
!5281 = !DILocalVariable(name: "now", scope: !5275, file: !2, line: 1041, type: !487)
!5282 = !DILocalVariable(name: "prev", scope: !5283, file: !2, line: 1076, type: !1692)
!5283 = distinct !DILexicalBlock(scope: !5284, file: !2, line: 1068, column: 16)
!5284 = distinct !DILexicalBlock(scope: !5275, file: !2, line: 1063, column: 13)
!5285 = !DILocalVariable(name: "after", scope: !5283, file: !2, line: 1076, type: !1692)
!5286 = !DILocation(line: 1039, column: 57, scope: !5275)
!5287 = !DILocation(line: 1040, column: 54, scope: !5275)
!5288 = !DILocation(line: 1041, column: 9, scope: !5275)
!5289 = !DILocation(line: 1041, column: 17, scope: !5275)
!5290 = !DILocation(line: 1043, column: 9, scope: !5275)
!5291 = !DILocation(line: 1043, column: 9, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !2, line: 1043, column: 9)
!5293 = distinct !DILexicalBlock(scope: !5275, file: !2, line: 1043, column: 9)
!5294 = !DILocation(line: 1043, column: 9, scope: !5293)
!5295 = !DILocation(line: 1045, column: 13, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5275, file: !2, line: 1045, column: 13)
!5297 = !DILocation(line: 1045, column: 18, scope: !5296)
!5298 = !DILocation(line: 1045, column: 26, scope: !5296)
!5299 = !DILocation(line: 1045, column: 34, scope: !5296)
!5300 = !{!4141, !3941, i64 708}
!5301 = !DILocation(line: 1045, column: 53, scope: !5296)
!5302 = !DILocation(line: 1046, column: 13, scope: !5296)
!5303 = !DILocation(line: 1046, column: 18, scope: !5296)
!5304 = !DILocation(line: 1046, column: 28, scope: !5296)
!5305 = !DILocation(line: 1045, column: 13, scope: !5275)
!5306 = !DILocation(line: 1049, column: 17, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5296, file: !2, line: 1046, column: 59)
!5308 = !DILocation(line: 1049, column: 22, scope: !5307)
!5309 = !DILocation(line: 1049, column: 38, scope: !5307)
!5310 = !DILocation(line: 1049, column: 46, scope: !5307)
!5311 = !{!3939, !3941, i64 2436}
!5312 = !DILocation(line: 1050, column: 17, scope: !5307)
!5313 = !DILocation(line: 1051, column: 43, scope: !5307)
!5314 = !DILocation(line: 1051, column: 17, scope: !5307)
!5315 = !DILocation(line: 1053, column: 17, scope: !5307)
!5316 = !DILocation(line: 1054, column: 9, scope: !5307)
!5317 = !DILocation(line: 1056, column: 31, scope: !5275)
!5318 = !DILocation(line: 1056, column: 29, scope: !5275)
!5319 = !DILocation(line: 1057, column: 31, scope: !5275)
!5320 = !DILocation(line: 1057, column: 9, scope: !5275)
!5321 = !DILocation(line: 1057, column: 16, scope: !5275)
!5322 = !DILocation(line: 1057, column: 29, scope: !5275)
!5323 = !{!5210, !3942, i64 320}
!5324 = !DILocation(line: 1058, column: 9, scope: !5275)
!5325 = !DILocation(line: 1058, column: 16, scope: !5275)
!5326 = !DILocation(line: 1058, column: 28, scope: !5275)
!5327 = !DILocation(line: 1061, column: 35, scope: !5275)
!5328 = !DILocation(line: 1061, column: 40, scope: !5275)
!5329 = !DILocation(line: 1061, column: 48, scope: !5275)
!5330 = !DILocation(line: 1061, column: 55, scope: !5275)
!5331 = !DILocation(line: 1061, column: 9, scope: !5275)
!5332 = !DILocation(line: 1063, column: 13, scope: !5284)
!5333 = !{!5210, !3912, i64 36}
!5334 = !DILocation(line: 1063, column: 13, scope: !5275)
!5335 = !DILocation(line: 1065, column: 17, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5284, file: !2, line: 1063, column: 64)
!5337 = !DILocation(line: 1065, column: 17, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5336, file: !2, line: 1065, column: 17)
!5339 = !{!5210, !3911, i64 0}
!5340 = !{!3939, !3911, i64 1016}
!5341 = !{!5210, !3911, i64 8}
!5342 = !DILocation(line: 1068, column: 9, scope: !5336)
!5343 = !DILocation(line: 1076, column: 17, scope: !5283)
!5344 = !DILocation(line: 1076, column: 33, scope: !5283)
!5345 = !DILocation(line: 1076, column: 40, scope: !5283)
!5346 = !DILocation(line: 1078, column: 17, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5283, file: !2, line: 1078, column: 17)
!5348 = !{!3939, !3911, i64 1008}
!5349 = !DILocation(line: 1078, column: 17, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5347, file: !2, line: 1078, column: 17)
!5351 = !DILocation(line: 1079, column: 29, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !2, line: 1079, column: 29)
!5353 = distinct !DILexicalBlock(scope: !5350, file: !2, line: 1078, column: 78)
!5354 = !DILocation(line: 1079, column: 35, scope: !5352)
!5355 = !DILocation(line: 1079, column: 48, scope: !5352)
!5356 = !DILocation(line: 1079, column: 55, scope: !5352)
!5357 = !DILocation(line: 1079, column: 46, scope: !5352)
!5358 = !DILocation(line: 1079, column: 66, scope: !5352)
!5359 = !DILocation(line: 1080, column: 29, scope: !5352)
!5360 = !DILocation(line: 1080, column: 35, scope: !5352)
!5361 = !{!5210, !3941, i64 16}
!5362 = !DILocation(line: 1080, column: 48, scope: !5352)
!5363 = !DILocation(line: 1079, column: 29, scope: !5353)
!5364 = !DILocation(line: 1081, column: 33, scope: !5352)
!5365 = !DILocation(line: 1082, column: 33, scope: !5353)
!5366 = !DILocation(line: 1082, column: 31, scope: !5353)
!5367 = !DILocation(line: 1083, column: 17, scope: !5353)
!5368 = distinct !{!5368, !5346, !5369, !4095}
!5369 = !DILocation(line: 1083, column: 17, scope: !5347)
!5370 = !DILocation(line: 1085, column: 21, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5283, file: !2, line: 1085, column: 21)
!5372 = !DILocation(line: 1085, column: 21, scope: !5283)
!5373 = !DILocation(line: 1086, column: 25, scope: !5371)
!5374 = !DILocation(line: 1086, column: 25, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !2, line: 1086, column: 25)
!5376 = distinct !DILexicalBlock(scope: !5371, file: !2, line: 1086, column: 25)
!5377 = !DILocation(line: 1086, column: 25, scope: !5376)
!5378 = !DILocation(line: 1089, column: 25, scope: !5371)
!5379 = !DILocation(line: 1089, column: 25, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5381, file: !2, line: 1089, column: 25)
!5381 = distinct !DILexicalBlock(scope: !5371, file: !2, line: 1089, column: 25)
!5382 = !DILocation(line: 1089, column: 25, scope: !5381)
!5383 = !DILocation(line: 1091, column: 9, scope: !5284)
!5384 = !DILocation(line: 1093, column: 26, scope: !5275)
!5385 = !DILocation(line: 1093, column: 31, scope: !5275)
!5386 = !DILocation(line: 1093, column: 43, scope: !5275)
!5387 = !DILocation(line: 1093, column: 9, scope: !5275)
!5388 = !DILocation(line: 1094, column: 13, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5275, file: !2, line: 1094, column: 13)
!5390 = !DILocation(line: 1094, column: 20, scope: !5389)
!5391 = !DILocation(line: 1094, column: 33, scope: !5389)
!5392 = !{!5210, !3916, i64 184}
!5393 = !DILocation(line: 1094, column: 40, scope: !5389)
!5394 = !DILocation(line: 1094, column: 13, scope: !5275)
!5395 = !DILocation(line: 1095, column: 34, scope: !5389)
!5396 = !DILocation(line: 1095, column: 39, scope: !5389)
!5397 = !DILocation(line: 1095, column: 51, scope: !5389)
!5398 = !DILocation(line: 1096, column: 52, scope: !5389)
!5399 = !DILocation(line: 1096, column: 59, scope: !5389)
!5400 = !DILocation(line: 1096, column: 71, scope: !5389)
!5401 = !DILocation(line: 1096, column: 33, scope: !5389)
!5402 = !DILocation(line: 1095, column: 17, scope: !5389)
!5403 = !DILocation(line: 1097, column: 1, scope: !5275)
!5404 = distinct !DISubprogram(name: "rd_kafka_broker_buf_enq_replyq", scope: !2, file: !2, line: 1174, type: !5405, scopeLine: 1178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5407)
!5405 = !DISubroutineType(types: !5406)
!5406 = !{null, !412, !1692, !569, !1688, !607}
!5407 = !{!5408, !5409, !5410, !5411, !5412, !5413}
!5408 = !DILocalVariable(name: "rkb", arg: 1, scope: !5404, file: !2, line: 1174, type: !412)
!5409 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !5404, file: !2, line: 1175, type: !1692)
!5410 = !DILocalVariable(name: "replyq", arg: 3, scope: !5404, file: !2, line: 1176, type: !569)
!5411 = !DILocalVariable(name: "resp_cb", arg: 4, scope: !5404, file: !2, line: 1177, type: !1688)
!5412 = !DILocalVariable(name: "opaque", arg: 5, scope: !5404, file: !2, line: 1178, type: !607)
!5413 = !DILocalVariable(name: "rko", scope: !5414, file: !2, line: 1197, type: !914)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !2, line: 1196, column: 16)
!5415 = distinct !DILexicalBlock(scope: !5404, file: !2, line: 1193, column: 13)
!5416 = !DILocation(line: 1174, column: 56, scope: !5404)
!5417 = !DILocation(line: 1175, column: 53, scope: !5404)
!5418 = !DILocation(line: 1176, column: 55, scope: !5404)
!5419 = !DILocation(line: 1177, column: 57, scope: !5404)
!5420 = !DILocation(line: 1178, column: 43, scope: !5404)
!5421 = !DILocation(line: 1180, column: 9, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !2, line: 1180, column: 9)
!5423 = distinct !DILexicalBlock(scope: !5404, file: !2, line: 1180, column: 9)
!5424 = !{!5210, !3911, i64 280}
!5425 = !DILocation(line: 1180, column: 9, scope: !5423)
!5426 = !DILocation(line: 1181, column: 13, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5404, file: !2, line: 1181, column: 13)
!5428 = !DILocation(line: 1181, column: 13, scope: !5404)
!5429 = !DILocation(line: 1182, column: 17, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5427, file: !2, line: 1181, column: 22)
!5431 = !DILocation(line: 1182, column: 24, scope: !5430)
!5432 = !DILocation(line: 1182, column: 39, scope: !5430)
!5433 = !{i64 0, i64 8, !3910, i64 8, i64 4, !3959}
!5434 = !DILocation(line: 1183, column: 39, scope: !5430)
!5435 = !DILocation(line: 1183, column: 17, scope: !5430)
!5436 = !DILocation(line: 1183, column: 24, scope: !5430)
!5437 = !DILocation(line: 1183, column: 37, scope: !5430)
!5438 = !DILocation(line: 1184, column: 39, scope: !5430)
!5439 = !DILocation(line: 1184, column: 17, scope: !5430)
!5440 = !DILocation(line: 1184, column: 24, scope: !5430)
!5441 = !DILocation(line: 1184, column: 37, scope: !5430)
!5442 = !DILocation(line: 1185, column: 9, scope: !5430)
!5443 = !DILocation(line: 1186, column: 17, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5427, file: !2, line: 1185, column: 16)
!5445 = !DILocation(line: 1186, column: 17, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5444, file: !2, line: 1186, column: 17)
!5447 = !DILocation(line: 1190, column: 15, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5404, file: !2, line: 1190, column: 13)
!5449 = !DILocation(line: 1190, column: 22, scope: !5448)
!5450 = !DILocation(line: 1190, column: 34, scope: !5448)
!5451 = !DILocation(line: 1190, column: 13, scope: !5404)
!5452 = !DILocation(line: 1191, column: 39, scope: !5448)
!5453 = !DILocation(line: 1191, column: 44, scope: !5448)
!5454 = !DILocation(line: 1191, column: 52, scope: !5448)
!5455 = !DILocation(line: 1191, column: 17, scope: !5448)
!5456 = !DILocation(line: 1193, column: 29, scope: !5415)
!5457 = !DILocation(line: 1193, column: 34, scope: !5415)
!5458 = !DILocation(line: 1193, column: 13, scope: !5415)
!5459 = !DILocation(line: 1193, column: 13, scope: !5404)
!5460 = !DILocation(line: 1194, column: 42, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5415, file: !2, line: 1193, column: 47)
!5462 = !DILocation(line: 1194, column: 47, scope: !5461)
!5463 = !DILocation(line: 1194, column: 17, scope: !5461)
!5464 = !DILocation(line: 1196, column: 9, scope: !5461)
!5465 = !DILocation(line: 1197, column: 17, scope: !5414)
!5466 = !DILocation(line: 1197, column: 32, scope: !5414)
!5467 = !DILocation(line: 1197, column: 41, scope: !5414)
!5468 = !DILocation(line: 1198, column: 41, scope: !5414)
!5469 = !DILocation(line: 1198, column: 17, scope: !5414)
!5470 = !DILocation(line: 1198, column: 22, scope: !5414)
!5471 = !DILocation(line: 1198, column: 33, scope: !5414)
!5472 = !DILocation(line: 1198, column: 39, scope: !5414)
!5473 = !DILocation(line: 1199, column: 32, scope: !5414)
!5474 = !DILocation(line: 1199, column: 37, scope: !5414)
!5475 = !{!3939, !3911, i64 64}
!5476 = !DILocation(line: 1199, column: 46, scope: !5414)
!5477 = !DILocation(line: 1199, column: 17, scope: !5414)
!5478 = !DILocation(line: 1200, column: 9, scope: !5415)
!5479 = !DILocation(line: 1201, column: 1, scope: !5404)
!5480 = !DISubprogram(name: "__assert_fail", scope: !5481, file: !5481, line: 69, type: !5482, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!5481 = !DIFile(filename: "/usr/include/assert.h", directory: "", checksumkind: CSK_MD5, checksum: "ab7dc6991d501750085448b20099a5a0")
!5482 = !DISubroutineType(types: !5483)
!5483 = !{null, !365, !365, !59, !365}
!5484 = distinct !DISubprogram(name: "rd_kafka_broker_buf_enq2", scope: !2, file: !2, line: 1151, type: !5485, scopeLine: 1152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5487)
!5485 = !DISubroutineType(types: !5486)
!5486 = !{!126, !412, !1692}
!5487 = !{!5488, !5489}
!5488 = !DILocalVariable(name: "rkb", arg: 1, scope: !5484, file: !2, line: 1151, type: !412)
!5489 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !5484, file: !2, line: 1152, type: !1692)
!5490 = !DILocation(line: 1151, column: 56, scope: !5484)
!5491 = !DILocation(line: 1152, column: 53, scope: !5484)
!5492 = !DILocation(line: 1153, column: 13, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5484, file: !2, line: 1153, column: 13)
!5494 = !DILocation(line: 1153, column: 13, scope: !5484)
!5495 = !DILocation(line: 1155, column: 39, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5493, file: !2, line: 1153, column: 61)
!5497 = !DILocation(line: 1155, column: 44, scope: !5496)
!5498 = !DILocation(line: 1155, column: 52, scope: !5496)
!5499 = !DILocation(line: 1157, column: 39, scope: !5496)
!5500 = !DILocation(line: 1155, column: 17, scope: !5496)
!5501 = !DILocation(line: 1158, column: 17, scope: !5496)
!5502 = !DILocation(line: 1161, column: 34, scope: !5484)
!5503 = !DILocation(line: 1161, column: 39, scope: !5484)
!5504 = !DILocation(line: 1161, column: 9, scope: !5484)
!5505 = !DILocation(line: 1163, column: 9, scope: !5484)
!5506 = !DILocation(line: 1164, column: 1, scope: !5484)
!5507 = !DISubprogram(name: "rd_kafka_op_new0", scope: !58, file: !58, line: 669, type: !5508, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{!914, !365, !544}
!5510 = distinct !DISubprogram(name: "rd_kafka_q_enq", scope: !506, file: !506, line: 478, type: !5511, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5513)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!126, !503, !914}
!5513 = !{!5514, !5515}
!5514 = !DILocalVariable(name: "rkq", arg: 1, scope: !5510, file: !506, line: 478, type: !503)
!5515 = !DILocalVariable(name: "rko", arg: 2, scope: !5510, file: !506, line: 479, type: !914)
!5516 = !DILocation(line: 478, column: 61, scope: !5510)
!5517 = !DILocation(line: 479, column: 62, scope: !5510)
!5518 = !DILocation(line: 480, column: 32, scope: !5510)
!5519 = !DILocation(line: 480, column: 37, scope: !5510)
!5520 = !DILocation(line: 480, column: 42, scope: !5510)
!5521 = !DILocation(line: 480, column: 16, scope: !5510)
!5522 = !DILocation(line: 480, column: 9, scope: !5510)
!5523 = distinct !DISubprogram(name: "rd_kafka_brokers_get_state_version", scope: !2, file: !2, line: 1212, type: !5524, scopeLine: 1212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5526)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!126, !586}
!5526 = !{!5527, !5528}
!5527 = !DILocalVariable(name: "rk", arg: 1, scope: !5523, file: !2, line: 1212, type: !586)
!5528 = !DILocalVariable(name: "version", scope: !5523, file: !2, line: 1213, type: !126)
!5529 = !DILocation(line: 1212, column: 52, scope: !5523)
!5530 = !DILocation(line: 1213, column: 9, scope: !5523)
!5531 = !DILocation(line: 1213, column: 13, scope: !5523)
!5532 = !DILocation(line: 1214, column: 19, scope: !5523)
!5533 = !DILocation(line: 1214, column: 23, scope: !5523)
!5534 = !DILocation(line: 1214, column: 9, scope: !5523)
!5535 = !DILocation(line: 1215, column: 19, scope: !5523)
!5536 = !DILocation(line: 1215, column: 23, scope: !5523)
!5537 = !DILocation(line: 1215, column: 17, scope: !5523)
!5538 = !DILocation(line: 1216, column: 21, scope: !5523)
!5539 = !DILocation(line: 1216, column: 25, scope: !5523)
!5540 = !DILocation(line: 1216, column: 9, scope: !5523)
!5541 = !DILocation(line: 1217, column: 16, scope: !5523)
!5542 = !DILocation(line: 1218, column: 1, scope: !5523)
!5543 = !DILocation(line: 1217, column: 9, scope: !5523)
!5544 = distinct !DISubprogram(name: "rd_kafka_brokers_wait_state_change", scope: !2, file: !2, line: 1238, type: !5545, scopeLine: 1240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5547)
!5545 = !DISubroutineType(types: !5546)
!5546 = !{!126, !586, !126, !126}
!5547 = !{!5548, !5549, !5550, !5551}
!5548 = !DILocalVariable(name: "rk", arg: 1, scope: !5544, file: !2, line: 1238, type: !586)
!5549 = !DILocalVariable(name: "stored_version", arg: 2, scope: !5544, file: !2, line: 1239, type: !126)
!5550 = !DILocalVariable(name: "timeout_ms", arg: 3, scope: !5544, file: !2, line: 1240, type: !126)
!5551 = !DILocalVariable(name: "r", scope: !5544, file: !2, line: 1241, type: !126)
!5552 = !DILocation(line: 1238, column: 52, scope: !5544)
!5553 = !DILocation(line: 1239, column: 44, scope: !5544)
!5554 = !DILocation(line: 1240, column: 44, scope: !5544)
!5555 = !DILocation(line: 1241, column: 9, scope: !5544)
!5556 = !DILocation(line: 1241, column: 13, scope: !5544)
!5557 = !DILocation(line: 1242, column: 19, scope: !5544)
!5558 = !DILocation(line: 1242, column: 23, scope: !5544)
!5559 = !DILocation(line: 1242, column: 9, scope: !5544)
!5560 = !DILocation(line: 1243, column: 13, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5544, file: !2, line: 1243, column: 13)
!5562 = !DILocation(line: 1243, column: 31, scope: !5561)
!5563 = !DILocation(line: 1243, column: 35, scope: !5561)
!5564 = !DILocation(line: 1243, column: 28, scope: !5561)
!5565 = !DILocation(line: 1243, column: 13, scope: !5544)
!5566 = !DILocation(line: 1244, column: 19, scope: !5561)
!5567 = !DILocation(line: 1244, column: 17, scope: !5561)
!5568 = !DILocation(line: 1246, column: 39, scope: !5561)
!5569 = !DILocation(line: 1246, column: 43, scope: !5561)
!5570 = !DILocation(line: 1247, column: 39, scope: !5561)
!5571 = !DILocation(line: 1247, column: 43, scope: !5561)
!5572 = !DILocation(line: 1248, column: 38, scope: !5561)
!5573 = !DILocation(line: 1246, column: 21, scope: !5561)
!5574 = !DILocation(line: 1248, column: 50, scope: !5561)
!5575 = !DILocation(line: 1246, column: 19, scope: !5561)
!5576 = !DILocation(line: 1249, column: 21, scope: !5544)
!5577 = !DILocation(line: 1249, column: 25, scope: !5544)
!5578 = !DILocation(line: 1249, column: 9, scope: !5544)
!5579 = !DILocation(line: 1250, column: 16, scope: !5544)
!5580 = !DILocation(line: 1251, column: 1, scope: !5544)
!5581 = !DILocation(line: 1250, column: 9, scope: !5544)
!5582 = !DISubprogram(name: "cnd_timedwait_ms", scope: !326, file: !326, line: 78, type: !5583, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!126, !5585, !1813, !126}
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!5586 = distinct !DISubprogram(name: "rd_kafka_brokers_wait_state_change_async", scope: !2, file: !2, line: 1266, type: !5587, scopeLine: 1268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5591)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!126, !586, !126, !5589}
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 64)
!5590 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_enq_once_t", file: !506, line: 929, baseType: !2178)
!5591 = !{!5592, !5593, !5594, !5595}
!5592 = !DILocalVariable(name: "rk", arg: 1, scope: !5586, file: !2, line: 1266, type: !586)
!5593 = !DILocalVariable(name: "stored_version", arg: 2, scope: !5586, file: !2, line: 1267, type: !126)
!5594 = !DILocalVariable(name: "eonce", arg: 3, scope: !5586, file: !2, line: 1268, type: !5589)
!5595 = !DILocalVariable(name: "r", scope: !5586, file: !2, line: 1269, type: !126)
!5596 = !DILocation(line: 1266, column: 58, scope: !5586)
!5597 = !DILocation(line: 1267, column: 50, scope: !5586)
!5598 = !DILocation(line: 1268, column: 67, scope: !5586)
!5599 = !DILocation(line: 1269, column: 9, scope: !5586)
!5600 = !DILocation(line: 1269, column: 13, scope: !5586)
!5601 = !DILocation(line: 1270, column: 19, scope: !5586)
!5602 = !DILocation(line: 1270, column: 23, scope: !5586)
!5603 = !DILocation(line: 1270, column: 9, scope: !5586)
!5604 = !DILocation(line: 1272, column: 13, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5586, file: !2, line: 1272, column: 13)
!5606 = !DILocation(line: 1272, column: 31, scope: !5605)
!5607 = !DILocation(line: 1272, column: 35, scope: !5605)
!5608 = !DILocation(line: 1272, column: 28, scope: !5605)
!5609 = !DILocation(line: 1272, column: 13, scope: !5586)
!5610 = !DILocation(line: 1273, column: 19, scope: !5605)
!5611 = !DILocation(line: 1273, column: 17, scope: !5605)
!5612 = !DILocation(line: 1275, column: 46, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5605, file: !2, line: 1274, column: 14)
!5614 = !DILocation(line: 1275, column: 17, scope: !5613)
!5615 = !DILocation(line: 1276, column: 30, scope: !5613)
!5616 = !DILocation(line: 1276, column: 34, scope: !5613)
!5617 = !DILocation(line: 1276, column: 66, scope: !5613)
!5618 = !DILocation(line: 1276, column: 17, scope: !5613)
!5619 = !DILocation(line: 1279, column: 21, scope: !5586)
!5620 = !DILocation(line: 1279, column: 25, scope: !5586)
!5621 = !DILocation(line: 1279, column: 9, scope: !5586)
!5622 = !DILocation(line: 1280, column: 16, scope: !5586)
!5623 = !DILocation(line: 1281, column: 1, scope: !5586)
!5624 = !DILocation(line: 1280, column: 9, scope: !5586)
!5625 = distinct !DISubprogram(name: "rd_kafka_enq_once_add_source", scope: !506, file: !506, line: 992, type: !5626, scopeLine: 992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5628)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{null, !5589, !365}
!5628 = !{!5629, !5630}
!5629 = !DILocalVariable(name: "eonce", arg: 1, scope: !5625, file: !506, line: 992, type: !5589)
!5630 = !DILocalVariable(name: "srcdesc", arg: 2, scope: !5625, file: !506, line: 992, type: !365)
!5631 = !DILocation(line: 992, column: 51, scope: !5625)
!5632 = !DILocation(line: 992, column: 70, scope: !5625)
!5633 = !DILocation(line: 993, column: 19, scope: !5625)
!5634 = !DILocation(line: 993, column: 26, scope: !5625)
!5635 = !DILocation(line: 993, column: 9, scope: !5625)
!5636 = !DILocation(line: 994, column: 9, scope: !5625)
!5637 = !DILocation(line: 994, column: 16, scope: !5625)
!5638 = !DILocation(line: 994, column: 22, scope: !5625)
!5639 = !{!5640, !3941, i64 40}
!5640 = !{!"rd_kafka_enq_once_s", !3912, i64 0, !3941, i64 40, !3911, i64 48, !4652, i64 56}
!5641 = !DILocation(line: 995, column: 21, scope: !5625)
!5642 = !DILocation(line: 995, column: 28, scope: !5625)
!5643 = !DILocation(line: 995, column: 9, scope: !5625)
!5644 = !DILocation(line: 996, column: 1, scope: !5625)
!5645 = !DISubprogram(name: "rd_list_add", scope: !600, file: !600, line: 138, type: !5646, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!607, !867, !607}
!5648 = !DISubprogram(name: "rd_list_apply", scope: !600, file: !600, line: 343, type: !5649, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !867, !5651, !607}
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 64)
!5652 = !DISubroutineType(types: !5653)
!5653 = !{!126, !607, !607}
!5654 = distinct !DISubprogram(name: "rd_kafka_broker_state_change_trigger_eonce", scope: !2, file: !2, line: 1288, type: !5652, scopeLine: 1289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5655)
!5655 = !{!5656, !5657, !5658}
!5656 = !DILocalVariable(name: "elem", arg: 1, scope: !5654, file: !2, line: 1288, type: !607)
!5657 = !DILocalVariable(name: "opaque", arg: 2, scope: !5654, file: !2, line: 1289, type: !607)
!5658 = !DILocalVariable(name: "eonce", scope: !5654, file: !2, line: 1290, type: !5589)
!5659 = !DILocation(line: 1288, column: 61, scope: !5654)
!5660 = !DILocation(line: 1289, column: 61, scope: !5654)
!5661 = !DILocation(line: 1290, column: 9, scope: !5654)
!5662 = !DILocation(line: 1290, column: 30, scope: !5654)
!5663 = !DILocation(line: 1290, column: 38, scope: !5654)
!5664 = !DILocation(line: 1291, column: 35, scope: !5654)
!5665 = !DILocation(line: 1291, column: 9, scope: !5654)
!5666 = !DILocation(line: 1294, column: 1, scope: !5654)
!5667 = !DILocation(line: 1293, column: 9, scope: !5654)
!5668 = !DISubprogram(name: "cnd_broadcast", scope: !510, file: !510, line: 187, type: !5669, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{!126, !5585}
!5671 = distinct !DISubprogram(name: "rd_kafka_broker_any", scope: !2, file: !2, line: 1509, type: !5672, scopeLine: 1514, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5677)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{!412, !586, !126, !5674, !607, !365}
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 64)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!126, !412, !607}
!5677 = !{!5678, !5679, !5680, !5681, !5682, !5683}
!5678 = !DILocalVariable(name: "rk", arg: 1, scope: !5671, file: !2, line: 1509, type: !586)
!5679 = !DILocalVariable(name: "state", arg: 2, scope: !5671, file: !2, line: 1510, type: !126)
!5680 = !DILocalVariable(name: "filter", arg: 3, scope: !5671, file: !2, line: 1511, type: !5674)
!5681 = !DILocalVariable(name: "opaque", arg: 4, scope: !5671, file: !2, line: 1513, type: !607)
!5682 = !DILocalVariable(name: "reason", arg: 5, scope: !5671, file: !2, line: 1514, type: !365)
!5683 = !DILocalVariable(name: "rkb", scope: !5671, file: !2, line: 1515, type: !412)
!5684 = !DILocation(line: 1509, column: 52, scope: !5671)
!5685 = !DILocation(line: 1510, column: 44, scope: !5671)
!5686 = !DILocation(line: 1511, column: 46, scope: !5671)
!5687 = !DILocation(line: 1513, column: 46, scope: !5671)
!5688 = !DILocation(line: 1514, column: 52, scope: !5671)
!5689 = !DILocation(line: 1515, column: 9, scope: !5671)
!5690 = !DILocation(line: 1515, column: 28, scope: !5671)
!5691 = !DILocation(line: 1517, column: 15, scope: !5671)
!5692 = !DILocation(line: 1517, column: 13, scope: !5671)
!5693 = !DILocation(line: 1519, column: 14, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5671, file: !2, line: 1519, column: 13)
!5695 = !DILocation(line: 1519, column: 18, scope: !5694)
!5696 = !DILocation(line: 1519, column: 21, scope: !5694)
!5697 = !DILocation(line: 1519, column: 25, scope: !5694)
!5698 = !DILocation(line: 1519, column: 33, scope: !5694)
!5699 = !DILocation(line: 1519, column: 13, scope: !5671)
!5700 = !DILocation(line: 1523, column: 38, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5694, file: !2, line: 1519, column: 53)
!5702 = !DILocation(line: 1523, column: 42, scope: !5701)
!5703 = !DILocation(line: 1523, column: 17, scope: !5701)
!5704 = !DILocation(line: 1524, column: 9, scope: !5701)
!5705 = !DILocation(line: 1526, column: 16, scope: !5671)
!5706 = !DILocation(line: 1527, column: 1, scope: !5671)
!5707 = !DILocation(line: 1526, column: 9, scope: !5671)
!5708 = distinct !DISubprogram(name: "rd_kafka_broker_random0", scope: !2, file: !2, line: 1342, type: !5709, scopeLine: 1349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5711)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{!412, !365, !126, !586, !561, !126, !1067, !5674, !607}
!5711 = !{!5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723}
!5712 = !DILocalVariable(name: "func", arg: 1, scope: !5708, file: !2, line: 1342, type: !365)
!5713 = !DILocalVariable(name: "line", arg: 2, scope: !5708, file: !2, line: 1343, type: !126)
!5714 = !DILocalVariable(name: "rk", arg: 3, scope: !5708, file: !2, line: 1344, type: !586)
!5715 = !DILocalVariable(name: "is_up", arg: 4, scope: !5708, file: !2, line: 1345, type: !561)
!5716 = !DILocalVariable(name: "state", arg: 5, scope: !5708, file: !2, line: 1346, type: !126)
!5717 = !DILocalVariable(name: "filtered_cnt", arg: 6, scope: !5708, file: !2, line: 1347, type: !1067)
!5718 = !DILocalVariable(name: "filter", arg: 7, scope: !5708, file: !2, line: 1348, type: !5674)
!5719 = !DILocalVariable(name: "opaque", arg: 8, scope: !5708, file: !2, line: 1349, type: !607)
!5720 = !DILocalVariable(name: "rkb", scope: !5708, file: !2, line: 1350, type: !412)
!5721 = !DILocalVariable(name: "good", scope: !5708, file: !2, line: 1350, type: !412)
!5722 = !DILocalVariable(name: "cnt", scope: !5708, file: !2, line: 1351, type: !126)
!5723 = !DILocalVariable(name: "fcnt", scope: !5708, file: !2, line: 1352, type: !126)
!5724 = !DILocation(line: 1342, column: 37, scope: !5708)
!5725 = !DILocation(line: 1343, column: 29, scope: !5708)
!5726 = !DILocation(line: 1344, column: 37, scope: !5708)
!5727 = !DILocation(line: 1345, column: 35, scope: !5708)
!5728 = !DILocation(line: 1346, column: 29, scope: !5708)
!5729 = !DILocation(line: 1347, column: 30, scope: !5708)
!5730 = !DILocation(line: 1348, column: 31, scope: !5708)
!5731 = !DILocation(line: 1349, column: 31, scope: !5708)
!5732 = !DILocation(line: 1350, column: 9, scope: !5708)
!5733 = !DILocation(line: 1350, column: 28, scope: !5708)
!5734 = !DILocation(line: 1350, column: 34, scope: !5708)
!5735 = !DILocation(line: 1351, column: 9, scope: !5708)
!5736 = !DILocation(line: 1351, column: 13, scope: !5708)
!5737 = !DILocation(line: 1352, column: 9, scope: !5708)
!5738 = !DILocation(line: 1352, column: 13, scope: !5708)
!5739 = !DILocation(line: 1354, column: 9, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5708, file: !2, line: 1354, column: 9)
!5741 = !{!4141, !3911, i64 16}
!5742 = !DILocation(line: 1354, column: 9, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5740, file: !2, line: 1354, column: 9)
!5744 = !DILocation(line: 1355, column: 21, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !2, line: 1355, column: 21)
!5746 = distinct !DILexicalBlock(scope: !5743, file: !2, line: 1354, column: 55)
!5747 = !DILocation(line: 1355, column: 21, scope: !5746)
!5748 = !DILocation(line: 1356, column: 25, scope: !5745)
!5749 = !DILocation(line: 1358, column: 17, scope: !5746)
!5750 = !DILocation(line: 1359, column: 22, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5746, file: !2, line: 1359, column: 21)
!5752 = !DILocation(line: 1359, column: 28, scope: !5751)
!5753 = !DILocation(line: 1359, column: 31, scope: !5751)
!5754 = !DILocation(line: 1359, column: 76, scope: !5751)
!5755 = !DILocation(line: 1360, column: 23, scope: !5751)
!5756 = !DILocation(line: 1360, column: 29, scope: !5751)
!5757 = !DILocation(line: 1360, column: 37, scope: !5751)
!5758 = !DILocation(line: 1360, column: 42, scope: !5751)
!5759 = !DILocation(line: 1360, column: 55, scope: !5751)
!5760 = !DILocation(line: 1360, column: 52, scope: !5751)
!5761 = !DILocation(line: 1359, column: 21, scope: !5746)
!5762 = !DILocation(line: 1361, column: 29, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5764, file: !2, line: 1361, column: 29)
!5764 = distinct !DILexicalBlock(scope: !5751, file: !2, line: 1360, column: 63)
!5765 = !DILocation(line: 1361, column: 36, scope: !5763)
!5766 = !DILocation(line: 1361, column: 39, scope: !5763)
!5767 = !DILocation(line: 1361, column: 46, scope: !5763)
!5768 = !DILocation(line: 1361, column: 51, scope: !5763)
!5769 = !DILocation(line: 1361, column: 29, scope: !5764)
!5770 = !DILocation(line: 1363, column: 37, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5763, file: !2, line: 1361, column: 60)
!5772 = !DILocation(line: 1364, column: 25, scope: !5771)
!5773 = !DILocation(line: 1365, column: 37, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !2, line: 1365, column: 37)
!5775 = distinct !DILexicalBlock(scope: !5763, file: !2, line: 1364, column: 32)
!5776 = !DILocation(line: 1365, column: 41, scope: !5774)
!5777 = !DILocation(line: 1365, column: 45, scope: !5774)
!5778 = !DILocation(line: 1365, column: 61, scope: !5774)
!5779 = !DILocation(line: 1365, column: 48, scope: !5774)
!5780 = !DILocation(line: 1365, column: 66, scope: !5774)
!5781 = !DILocation(line: 1365, column: 37, scope: !5775)
!5782 = !DILocation(line: 1366, column: 45, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !2, line: 1366, column: 45)
!5784 = distinct !DILexicalBlock(scope: !5774, file: !2, line: 1365, column: 71)
!5785 = !DILocation(line: 1366, column: 45, scope: !5784)
!5786 = !DILocation(line: 1367, column: 49, scope: !5783)
!5787 = !DILocation(line: 1367, column: 49, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !2, line: 1367, column: 49)
!5789 = distinct !DILexicalBlock(scope: !5783, file: !2, line: 1367, column: 49)
!5790 = !DILocation(line: 1367, column: 49, scope: !5789)
!5791 = !DILocation(line: 1368, column: 41, scope: !5784)
!5792 = !DILocation(line: 1370, column: 48, scope: !5784)
!5793 = !DILocation(line: 1370, column: 46, scope: !5784)
!5794 = !DILocation(line: 1371, column: 33, scope: !5784)
!5795 = !DILocation(line: 1372, column: 37, scope: !5775)
!5796 = !DILocation(line: 1374, column: 17, scope: !5764)
!5797 = !DILocation(line: 1375, column: 17, scope: !5746)
!5798 = !DILocation(line: 1376, column: 9, scope: !5746)
!5799 = !{!3939, !3911, i64 0}
!5800 = distinct !{!5800, !5739, !5801, !4095}
!5801 = !DILocation(line: 1376, column: 9, scope: !5740)
!5802 = !DILocation(line: 1378, column: 13, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5708, file: !2, line: 1378, column: 13)
!5804 = !DILocation(line: 1378, column: 13, scope: !5708)
!5805 = !DILocation(line: 1379, column: 33, scope: !5803)
!5806 = !DILocation(line: 1379, column: 18, scope: !5803)
!5807 = !DILocation(line: 1379, column: 31, scope: !5803)
!5808 = !DILocation(line: 1379, column: 17, scope: !5803)
!5809 = !DILocation(line: 1381, column: 16, scope: !5708)
!5810 = !DILocation(line: 1382, column: 1, scope: !5708)
!5811 = !DILocation(line: 1381, column: 9, scope: !5708)
!5812 = distinct !DISubprogram(name: "rd_kafka_connect_any", scope: !2, file: !2, line: 5571, type: !5813, scopeLine: 5571, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5815)
!5813 = !DISubroutineType(types: !5814)
!5814 = !{null, !586, !365}
!5815 = !{!5816, !5817, !5818, !5819, !5820}
!5816 = !DILocalVariable(name: "rk", arg: 1, scope: !5812, file: !2, line: 5571, type: !586)
!5817 = !DILocalVariable(name: "reason", arg: 2, scope: !5812, file: !2, line: 5571, type: !365)
!5818 = !DILocalVariable(name: "rkb", scope: !5812, file: !2, line: 5572, type: !412)
!5819 = !DILocalVariable(name: "suppr", scope: !5812, file: !2, line: 5573, type: !487)
!5820 = !DILocalVariable(name: "_logname", scope: !5821, file: !2, line: 5622, type: !924)
!5821 = distinct !DILexicalBlock(scope: !5822, file: !2, line: 5622, column: 9)
!5822 = distinct !DILexicalBlock(scope: !5823, file: !2, line: 5622, column: 9)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !2, line: 5622, column: 9)
!5824 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 5622, column: 9)
!5825 = !DILocation(line: 5571, column: 39, scope: !5812)
!5826 = !DILocation(line: 5571, column: 55, scope: !5812)
!5827 = !DILocation(line: 5572, column: 9, scope: !5812)
!5828 = !DILocation(line: 5572, column: 28, scope: !5812)
!5829 = !DILocation(line: 5573, column: 9, scope: !5812)
!5830 = !DILocation(line: 5573, column: 17, scope: !5812)
!5831 = !DILocation(line: 5579, column: 30, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 5579, column: 13)
!5833 = !DILocation(line: 5579, column: 34, scope: !5832)
!5834 = !DILocation(line: 5579, column: 13, scope: !5832)
!5835 = !DILocation(line: 5580, column: 38, scope: !5832)
!5836 = !DILocation(line: 5580, column: 42, scope: !5832)
!5837 = !DILocation(line: 5580, column: 21, scope: !5832)
!5838 = !DILocation(line: 5579, column: 52, scope: !5832)
!5839 = !DILocation(line: 5580, column: 68, scope: !5832)
!5840 = !DILocation(line: 5581, column: 19, scope: !5832)
!5841 = !DILocation(line: 5582, column: 30, scope: !5832)
!5842 = !DILocation(line: 5582, column: 34, scope: !5832)
!5843 = !DILocation(line: 5582, column: 13, scope: !5832)
!5844 = !DILocation(line: 5583, column: 38, scope: !5832)
!5845 = !DILocation(line: 5583, column: 42, scope: !5832)
!5846 = !DILocation(line: 5583, column: 21, scope: !5832)
!5847 = !DILocation(line: 5582, column: 49, scope: !5832)
!5848 = !DILocation(line: 5583, column: 66, scope: !5832)
!5849 = !DILocation(line: 5579, column: 13, scope: !5812)
!5850 = !DILocation(line: 5585, column: 17, scope: !5832)
!5851 = !DILocation(line: 5587, column: 19, scope: !5812)
!5852 = !DILocation(line: 5587, column: 23, scope: !5812)
!5853 = !DILocation(line: 5587, column: 35, scope: !5812)
!5854 = !DILocation(line: 5587, column: 9, scope: !5812)
!5855 = !DILocation(line: 5588, column: 17, scope: !5812)
!5856 = !{!4141, !3941, i64 712}
!5857 = !DILocation(line: 5588, column: 15, scope: !5812)
!5858 = !DILocation(line: 5590, column: 21, scope: !5812)
!5859 = !DILocation(line: 5590, column: 25, scope: !5812)
!5860 = !DILocation(line: 5590, column: 37, scope: !5812)
!5861 = !DILocation(line: 5590, column: 9, scope: !5812)
!5862 = !DILocation(line: 5592, column: 13, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 5592, column: 13)
!5864 = !DILocation(line: 5592, column: 19, scope: !5863)
!5865 = !DILocation(line: 5592, column: 13, scope: !5812)
!5866 = !DILocation(line: 5593, column: 17, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5863, file: !2, line: 5592, column: 25)
!5868 = !DILocation(line: 5593, column: 17, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !2, line: 5593, column: 17)
!5870 = distinct !DILexicalBlock(scope: !5867, file: !2, line: 5593, column: 17)
!5871 = !DILocation(line: 5593, column: 17, scope: !5870)
!5872 = !DILocation(line: 5597, column: 17, scope: !5867)
!5873 = !DILocation(line: 5603, column: 15, scope: !5812)
!5874 = !DILocation(line: 5603, column: 13, scope: !5812)
!5875 = !DILocation(line: 5607, column: 14, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 5607, column: 13)
!5877 = !DILocation(line: 5607, column: 13, scope: !5812)
!5878 = !DILocation(line: 5608, column: 23, scope: !5876)
!5879 = !DILocation(line: 5608, column: 21, scope: !5876)
!5880 = !DILocation(line: 5608, column: 17, scope: !5876)
!5881 = !DILocation(line: 5611, column: 14, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 5611, column: 13)
!5883 = !DILocation(line: 5611, column: 13, scope: !5812)
!5884 = !DILocation(line: 5616, column: 17, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5882, file: !2, line: 5611, column: 19)
!5886 = !DILocation(line: 5616, column: 17, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !2, line: 5616, column: 17)
!5888 = distinct !DILexicalBlock(scope: !5885, file: !2, line: 5616, column: 17)
!5889 = !DILocation(line: 5616, column: 17, scope: !5888)
!5890 = !DILocation(line: 5619, column: 17, scope: !5885)
!5891 = !DILocation(line: 5622, column: 9, scope: !5812)
!5892 = !DILocation(line: 5622, column: 9, scope: !5823)
!5893 = !DILocation(line: 5622, column: 9, scope: !5824)
!5894 = !DILocation(line: 5622, column: 9, scope: !5822)
!5895 = !DILocation(line: 5622, column: 9, scope: !5821)
!5896 = !DILocation(line: 5627, column: 45, scope: !5812)
!5897 = !DILocation(line: 5627, column: 9, scope: !5812)
!5898 = !DILocation(line: 5629, column: 9, scope: !5812)
!5899 = !DILocation(line: 5629, column: 9, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !2, line: 5629, column: 9)
!5901 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 5629, column: 9)
!5902 = !DILocation(line: 5629, column: 9, scope: !5901)
!5903 = !DILocation(line: 5630, column: 1, scope: !5812)
!5904 = distinct !DISubprogram(name: "rd_kafka_broker_any_up", scope: !2, file: !2, line: 1541, type: !5905, scopeLine: 1546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5907)
!5905 = !DISubroutineType(types: !5906)
!5906 = !{!412, !586, !1067, !5674, !607, !365}
!5907 = !{!5908, !5909, !5910, !5911, !5912, !5913}
!5908 = !DILocalVariable(name: "rk", arg: 1, scope: !5904, file: !2, line: 1541, type: !586)
!5909 = !DILocalVariable(name: "filtered_cnt", arg: 2, scope: !5904, file: !2, line: 1542, type: !1067)
!5910 = !DILocalVariable(name: "filter", arg: 3, scope: !5904, file: !2, line: 1543, type: !5674)
!5911 = !DILocalVariable(name: "opaque", arg: 4, scope: !5904, file: !2, line: 1545, type: !607)
!5912 = !DILocalVariable(name: "reason", arg: 5, scope: !5904, file: !2, line: 1546, type: !365)
!5913 = !DILocalVariable(name: "rkb", scope: !5904, file: !2, line: 1547, type: !412)
!5914 = !DILocation(line: 1541, column: 55, scope: !5904)
!5915 = !DILocation(line: 1542, column: 48, scope: !5904)
!5916 = !DILocation(line: 1543, column: 49, scope: !5904)
!5917 = !DILocation(line: 1545, column: 49, scope: !5904)
!5918 = !DILocation(line: 1546, column: 55, scope: !5904)
!5919 = !DILocation(line: 1547, column: 9, scope: !5904)
!5920 = !DILocation(line: 1547, column: 28, scope: !5904)
!5921 = !DILocation(line: 1549, column: 63, scope: !5904)
!5922 = !DILocation(line: 1550, column: 62, scope: !5904)
!5923 = !DILocation(line: 1551, column: 39, scope: !5904)
!5924 = !DILocation(line: 1551, column: 47, scope: !5904)
!5925 = !DILocation(line: 1549, column: 15, scope: !5904)
!5926 = !DILocation(line: 1549, column: 13, scope: !5904)
!5927 = !DILocation(line: 1553, column: 14, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5904, file: !2, line: 1553, column: 13)
!5929 = !DILocation(line: 1553, column: 18, scope: !5928)
!5930 = !DILocation(line: 1553, column: 21, scope: !5928)
!5931 = !DILocation(line: 1553, column: 25, scope: !5928)
!5932 = !DILocation(line: 1553, column: 33, scope: !5928)
!5933 = !DILocation(line: 1553, column: 13, scope: !5904)
!5934 = !DILocation(line: 1557, column: 38, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5928, file: !2, line: 1553, column: 53)
!5936 = !DILocation(line: 1557, column: 42, scope: !5935)
!5937 = !DILocation(line: 1557, column: 17, scope: !5935)
!5938 = !DILocation(line: 1558, column: 9, scope: !5935)
!5939 = !DILocation(line: 1560, column: 16, scope: !5904)
!5940 = !DILocation(line: 1561, column: 1, scope: !5904)
!5941 = !DILocation(line: 1560, column: 9, scope: !5904)
!5942 = distinct !DISubprogram(name: "rd_kafka_broker_any_usable", scope: !2, file: !2, line: 1577, type: !5943, scopeLine: 1581, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !5946)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{!412, !586, !126, !5945, !126, !365}
!5945 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_dolock_t", file: !488, line: 69, baseType: !2700)
!5946 = !{!5947, !5948, !5949, !5950, !5951, !5952, !5954, !5956, !5957}
!5947 = !DILocalVariable(name: "rk", arg: 1, scope: !5942, file: !2, line: 1577, type: !586)
!5948 = !DILocalVariable(name: "timeout_ms", arg: 2, scope: !5942, file: !2, line: 1578, type: !126)
!5949 = !DILocalVariable(name: "do_lock", arg: 3, scope: !5942, file: !2, line: 1579, type: !5945)
!5950 = !DILocalVariable(name: "features", arg: 4, scope: !5942, file: !2, line: 1580, type: !126)
!5951 = !DILocalVariable(name: "reason", arg: 5, scope: !5942, file: !2, line: 1581, type: !365)
!5952 = !DILocalVariable(name: "ts_end", scope: !5942, file: !2, line: 1582, type: !5953)
!5953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !487)
!5954 = !DILocalVariable(name: "rkb", scope: !5955, file: !2, line: 1585, type: !412)
!5955 = distinct !DILexicalBlock(scope: !5942, file: !2, line: 1584, column: 19)
!5956 = !DILocalVariable(name: "remains", scope: !5955, file: !2, line: 1586, type: !126)
!5957 = !DILocalVariable(name: "version", scope: !5955, file: !2, line: 1587, type: !126)
!5958 = !DILocation(line: 1577, column: 59, scope: !5942)
!5959 = !DILocation(line: 1578, column: 51, scope: !5942)
!5960 = !DILocation(line: 1579, column: 59, scope: !5942)
!5961 = !DILocation(line: 1580, column: 51, scope: !5942)
!5962 = !DILocation(line: 1581, column: 59, scope: !5942)
!5963 = !DILocation(line: 1582, column: 9, scope: !5942)
!5964 = !DILocation(line: 1582, column: 23, scope: !5942)
!5965 = !DILocation(line: 1582, column: 48, scope: !5942)
!5966 = !DILocation(line: 1582, column: 32, scope: !5942)
!5967 = !DILocation(line: 1584, column: 9, scope: !5942)
!5968 = !DILocation(line: 1585, column: 17, scope: !5955)
!5969 = !DILocation(line: 1585, column: 36, scope: !5955)
!5970 = !DILocation(line: 1586, column: 17, scope: !5955)
!5971 = !DILocation(line: 1586, column: 21, scope: !5955)
!5972 = !DILocation(line: 1587, column: 17, scope: !5955)
!5973 = !DILocation(line: 1587, column: 21, scope: !5955)
!5974 = !DILocation(line: 1587, column: 66, scope: !5955)
!5975 = !DILocation(line: 1587, column: 31, scope: !5955)
!5976 = !DILocation(line: 1589, column: 21, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5955, file: !2, line: 1589, column: 21)
!5978 = !DILocation(line: 1589, column: 21, scope: !5955)
!5979 = !DILocation(line: 1590, column: 25, scope: !5977)
!5980 = !DILocation(line: 1593, column: 21, scope: !5955)
!5981 = !DILocation(line: 1593, column: 56, scope: !5955)
!5982 = !DILocation(line: 1592, column: 23, scope: !5955)
!5983 = !DILocation(line: 1592, column: 21, scope: !5955)
!5984 = !DILocation(line: 1595, column: 22, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5955, file: !2, line: 1595, column: 21)
!5986 = !DILocation(line: 1595, column: 26, scope: !5985)
!5987 = !DILocation(line: 1595, column: 29, scope: !5985)
!5988 = !DILocation(line: 1595, column: 33, scope: !5985)
!5989 = !DILocation(line: 1595, column: 41, scope: !5985)
!5990 = !DILocation(line: 1595, column: 21, scope: !5955)
!5991 = !DILocation(line: 1599, column: 46, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5985, file: !2, line: 1595, column: 61)
!5993 = !DILocation(line: 1599, column: 50, scope: !5992)
!5994 = !DILocation(line: 1599, column: 25, scope: !5992)
!5995 = !DILocation(line: 1600, column: 17, scope: !5992)
!5996 = !DILocation(line: 1602, column: 21, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5955, file: !2, line: 1602, column: 21)
!5998 = !DILocation(line: 1602, column: 21, scope: !5955)
!5999 = !DILocation(line: 1603, column: 25, scope: !5997)
!6000 = !DILocation(line: 1605, column: 21, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5955, file: !2, line: 1605, column: 21)
!6002 = !DILocation(line: 1605, column: 21, scope: !5955)
!6003 = !DILocation(line: 1606, column: 32, scope: !6001)
!6004 = !DILocation(line: 1606, column: 25, scope: !6001)
!6005 = !DILocation(line: 1608, column: 46, scope: !5955)
!6006 = !DILocation(line: 1608, column: 27, scope: !5955)
!6007 = !DILocation(line: 1608, column: 25, scope: !5955)
!6008 = !DILocation(line: 1609, column: 40, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5955, file: !2, line: 1609, column: 21)
!6010 = !DILocation(line: 1609, column: 21, scope: !6009)
!6011 = !DILocation(line: 1609, column: 21, scope: !5955)
!6012 = !DILocation(line: 1610, column: 25, scope: !6009)
!6013 = !DILocation(line: 1612, column: 52, scope: !5955)
!6014 = !DILocation(line: 1612, column: 56, scope: !5955)
!6015 = !DILocation(line: 1612, column: 65, scope: !5955)
!6016 = !DILocation(line: 1612, column: 17, scope: !5955)
!6017 = !DILocation(line: 1613, column: 9, scope: !5942)
!6018 = distinct !{!6018, !5967, !6017}
!6019 = !DILocation(line: 1616, column: 1, scope: !5942)
!6020 = distinct !DISubprogram(name: "rd_timeout_init", scope: !4366, file: !4366, line: 178, type: !6021, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6023)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{!487, !126}
!6023 = !{!6024}
!6024 = !DILocalVariable(name: "timeout_ms", arg: 1, scope: !6020, file: !4366, line: 178, type: !126)
!6025 = !DILocation(line: 178, column: 46, scope: !6020)
!6026 = !DILocation(line: 179, column: 13, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6020, file: !4366, line: 179, column: 13)
!6028 = !DILocation(line: 179, column: 24, scope: !6027)
!6029 = !DILocation(line: 179, column: 44, scope: !6027)
!6030 = !DILocation(line: 179, column: 47, scope: !6027)
!6031 = !DILocation(line: 179, column: 58, scope: !6027)
!6032 = !DILocation(line: 179, column: 13, scope: !6020)
!6033 = !DILocation(line: 180, column: 24, scope: !6027)
!6034 = !DILocation(line: 180, column: 17, scope: !6027)
!6035 = !DILocation(line: 182, column: 16, scope: !6020)
!6036 = !DILocation(line: 182, column: 39, scope: !6020)
!6037 = !DILocation(line: 182, column: 30, scope: !6020)
!6038 = !DILocation(line: 182, column: 50, scope: !6020)
!6039 = !DILocation(line: 182, column: 27, scope: !6020)
!6040 = !DILocation(line: 182, column: 9, scope: !6020)
!6041 = !DILocation(line: 183, column: 1, scope: !6020)
!6042 = !DISubprogram(name: "rwlock_rdlock", scope: !326, file: !326, line: 200, type: !6043, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{!126, !6045}
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!6046 = distinct !DISubprogram(name: "rd_kafka_broker_weighted", scope: !2, file: !2, line: 1407, type: !6047, scopeLine: 1409, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6052)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!412, !586, !6049, !126}
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!126, !412}
!6052 = !{!6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060}
!6053 = !DILocalVariable(name: "rk", arg: 1, scope: !6046, file: !2, line: 1407, type: !586)
!6054 = !DILocalVariable(name: "weight_cb", arg: 2, scope: !6046, file: !2, line: 1408, type: !6049)
!6055 = !DILocalVariable(name: "features", arg: 3, scope: !6046, file: !2, line: 1409, type: !126)
!6056 = !DILocalVariable(name: "rkb", scope: !6046, file: !2, line: 1410, type: !412)
!6057 = !DILocalVariable(name: "good", scope: !6046, file: !2, line: 1410, type: !412)
!6058 = !DILocalVariable(name: "highest", scope: !6046, file: !2, line: 1411, type: !126)
!6059 = !DILocalVariable(name: "cnt", scope: !6046, file: !2, line: 1412, type: !126)
!6060 = !DILocalVariable(name: "weight", scope: !6061, file: !2, line: 1415, type: !126)
!6061 = distinct !DILexicalBlock(scope: !6062, file: !2, line: 1414, column: 55)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !2, line: 1414, column: 9)
!6063 = distinct !DILexicalBlock(scope: !6046, file: !2, line: 1414, column: 9)
!6064 = !DILocation(line: 1407, column: 38, scope: !6046)
!6065 = !DILocation(line: 1408, column: 32, scope: !6046)
!6066 = !DILocation(line: 1409, column: 30, scope: !6046)
!6067 = !DILocation(line: 1410, column: 9, scope: !6046)
!6068 = !DILocation(line: 1410, column: 28, scope: !6046)
!6069 = !DILocation(line: 1410, column: 34, scope: !6046)
!6070 = !DILocation(line: 1411, column: 9, scope: !6046)
!6071 = !DILocation(line: 1411, column: 13, scope: !6046)
!6072 = !DILocation(line: 1412, column: 9, scope: !6046)
!6073 = !DILocation(line: 1412, column: 13, scope: !6046)
!6074 = !DILocation(line: 1414, column: 9, scope: !6063)
!6075 = !DILocation(line: 1414, column: 9, scope: !6062)
!6076 = !DILocation(line: 1415, column: 17, scope: !6061)
!6077 = !DILocation(line: 1415, column: 21, scope: !6061)
!6078 = !DILocation(line: 1417, column: 17, scope: !6061)
!6079 = !DILocation(line: 1418, column: 21, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6061, file: !2, line: 1418, column: 21)
!6081 = !DILocation(line: 1418, column: 30, scope: !6080)
!6082 = !DILocation(line: 1418, column: 34, scope: !6080)
!6083 = !DILocation(line: 1418, column: 39, scope: !6080)
!6084 = !DILocation(line: 1418, column: 54, scope: !6080)
!6085 = !DILocation(line: 1418, column: 52, scope: !6080)
!6086 = !DILocation(line: 1418, column: 67, scope: !6080)
!6087 = !DILocation(line: 1418, column: 64, scope: !6080)
!6088 = !DILocation(line: 1418, column: 21, scope: !6061)
!6089 = !DILocation(line: 1419, column: 32, scope: !6080)
!6090 = !DILocation(line: 1419, column: 25, scope: !6080)
!6091 = !DILocation(line: 1421, column: 34, scope: !6080)
!6092 = !DILocation(line: 1421, column: 44, scope: !6080)
!6093 = !DILocation(line: 1421, column: 32, scope: !6080)
!6094 = !DILocation(line: 1422, column: 17, scope: !6061)
!6095 = !DILocation(line: 1424, column: 21, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6061, file: !2, line: 1424, column: 21)
!6097 = !DILocation(line: 1424, column: 28, scope: !6096)
!6098 = !DILocation(line: 1424, column: 33, scope: !6096)
!6099 = !DILocation(line: 1424, column: 36, scope: !6096)
!6100 = !DILocation(line: 1424, column: 45, scope: !6096)
!6101 = !DILocation(line: 1424, column: 43, scope: !6096)
!6102 = !DILocation(line: 1424, column: 21, scope: !6061)
!6103 = !DILocation(line: 1425, column: 25, scope: !6096)
!6104 = !DILocation(line: 1427, column: 21, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6061, file: !2, line: 1427, column: 21)
!6106 = !DILocation(line: 1427, column: 30, scope: !6105)
!6107 = !DILocation(line: 1427, column: 28, scope: !6105)
!6108 = !DILocation(line: 1427, column: 21, scope: !6061)
!6109 = !DILocation(line: 1428, column: 35, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6105, file: !2, line: 1427, column: 39)
!6111 = !DILocation(line: 1428, column: 33, scope: !6110)
!6112 = !DILocation(line: 1429, column: 33, scope: !6110)
!6113 = !DILocation(line: 1430, column: 17, scope: !6110)
!6114 = !DILocation(line: 1433, column: 21, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6061, file: !2, line: 1433, column: 21)
!6116 = !DILocation(line: 1433, column: 25, scope: !6115)
!6117 = !DILocation(line: 1433, column: 29, scope: !6115)
!6118 = !DILocation(line: 1433, column: 45, scope: !6115)
!6119 = !DILocation(line: 1433, column: 32, scope: !6115)
!6120 = !DILocation(line: 1433, column: 50, scope: !6115)
!6121 = !DILocation(line: 1433, column: 21, scope: !6061)
!6122 = !DILocation(line: 1434, column: 29, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !2, line: 1434, column: 29)
!6124 = distinct !DILexicalBlock(scope: !6115, file: !2, line: 1433, column: 55)
!6125 = !DILocation(line: 1434, column: 29, scope: !6124)
!6126 = !DILocation(line: 1435, column: 33, scope: !6123)
!6127 = !DILocation(line: 1435, column: 33, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !2, line: 1435, column: 33)
!6129 = distinct !DILexicalBlock(scope: !6123, file: !2, line: 1435, column: 33)
!6130 = !DILocation(line: 1435, column: 33, scope: !6129)
!6131 = !DILocation(line: 1436, column: 25, scope: !6124)
!6132 = !DILocation(line: 1437, column: 32, scope: !6124)
!6133 = !DILocation(line: 1437, column: 30, scope: !6124)
!6134 = !DILocation(line: 1438, column: 17, scope: !6124)
!6135 = !DILocation(line: 1439, column: 20, scope: !6061)
!6136 = !DILocation(line: 1440, column: 9, scope: !6062)
!6137 = !DILocation(line: 1440, column: 9, scope: !6061)
!6138 = distinct !{!6138, !6074, !6139, !4095}
!6139 = !DILocation(line: 1440, column: 9, scope: !6063)
!6140 = !DILocation(line: 1442, column: 16, scope: !6046)
!6141 = !DILocation(line: 1443, column: 1, scope: !6046)
!6142 = !DILocation(line: 1442, column: 9, scope: !6046)
!6143 = distinct !DISubprogram(name: "rd_kafka_broker_weight_usable", scope: !2, file: !2, line: 1466, type: !6050, scopeLine: 1466, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6144)
!6144 = !{!6145, !6146, !6147, !6150}
!6145 = !DILocalVariable(name: "rkb", arg: 1, scope: !6143, file: !2, line: 1466, type: !412)
!6146 = !DILocalVariable(name: "weight", scope: !6143, file: !2, line: 1467, type: !126)
!6147 = !DILocalVariable(name: "tx_last", scope: !6148, file: !2, line: 1477, type: !487)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !2, line: 1476, column: 71)
!6149 = distinct !DILexicalBlock(scope: !6143, file: !2, line: 1476, column: 13)
!6150 = !DILocalVariable(name: "idle", scope: !6148, file: !2, line: 1478, type: !126)
!6151 = !DILocation(line: 1466, column: 61, scope: !6143)
!6152 = !DILocation(line: 1467, column: 9, scope: !6143)
!6153 = !DILocation(line: 1467, column: 13, scope: !6143)
!6154 = !DILocation(line: 1469, column: 14, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6143, file: !2, line: 1469, column: 13)
!6156 = !DILocation(line: 1469, column: 13, scope: !6143)
!6157 = !DILocation(line: 1470, column: 17, scope: !6155)
!6158 = !DILocation(line: 1473, column: 21, scope: !6143)
!6159 = !DILocation(line: 1473, column: 26, scope: !6143)
!6160 = !DILocation(line: 1473, column: 37, scope: !6143)
!6161 = !DILocation(line: 1473, column: 43, scope: !6143)
!6162 = !DILocation(line: 1473, column: 47, scope: !6143)
!6163 = !DILocation(line: 1473, column: 46, scope: !6143)
!6164 = !DILocation(line: 0, scope: !6143)
!6165 = !DILocation(line: 1473, column: 18, scope: !6143)
!6166 = !DILocation(line: 1472, column: 16, scope: !6143)
!6167 = !DILocation(line: 1474, column: 25, scope: !6143)
!6168 = !DILocation(line: 1474, column: 24, scope: !6143)
!6169 = !DILocation(line: 1474, column: 22, scope: !6143)
!6170 = !DILocation(line: 1474, column: 16, scope: !6143)
!6171 = !DILocation(line: 1476, column: 13, scope: !6149)
!6172 = !DILocation(line: 1476, column: 13, scope: !6143)
!6173 = !DILocation(line: 1477, column: 17, scope: !6148)
!6174 = !DILocation(line: 1477, column: 25, scope: !6148)
!6175 = !DILocation(line: 1477, column: 52, scope: !6148)
!6176 = !DILocation(line: 1477, column: 57, scope: !6148)
!6177 = !DILocation(line: 1477, column: 63, scope: !6148)
!6178 = !DILocation(line: 1477, column: 35, scope: !6148)
!6179 = !DILocation(line: 1478, column: 17, scope: !6148)
!6180 = !DILocation(line: 1478, column: 21, scope: !6148)
!6181 = !DILocation(line: 1478, column: 42, scope: !6148)
!6182 = !DILocation(line: 1479, column: 36, scope: !6148)
!6183 = !DILocation(line: 1479, column: 44, scope: !6148)
!6184 = !DILocation(line: 1479, column: 50, scope: !6148)
!6185 = !DILocation(line: 1479, column: 60, scope: !6148)
!6186 = !DILocation(line: 1479, column: 65, scope: !6148)
!6187 = !DILocation(line: 1478, column: 53, scope: !6148)
!6188 = !DILocation(line: 1479, column: 80, scope: !6148)
!6189 = !DILocation(line: 1478, column: 35, scope: !6148)
!6190 = !DILocation(line: 1482, column: 24, scope: !6148)
!6191 = !DILocation(line: 1485, column: 21, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6148, file: !2, line: 1485, column: 21)
!6193 = !DILocation(line: 1485, column: 26, scope: !6192)
!6194 = !DILocation(line: 1485, column: 21, scope: !6148)
!6195 = !DILocation(line: 1487, column: 26, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6192, file: !2, line: 1487, column: 26)
!6197 = !DILocation(line: 1487, column: 31, scope: !6196)
!6198 = !DILocation(line: 1487, column: 26, scope: !6192)
!6199 = !DILocation(line: 1488, column: 49, scope: !6196)
!6200 = !DILocation(line: 1488, column: 47, scope: !6196)
!6201 = !DILocation(line: 1488, column: 40, scope: !6196)
!6202 = !DILocation(line: 1488, column: 32, scope: !6196)
!6203 = !DILocation(line: 1488, column: 25, scope: !6196)
!6204 = !DILocation(line: 1490, column: 48, scope: !6196)
!6205 = !DILocation(line: 1490, column: 46, scope: !6196)
!6206 = !DILocation(line: 1490, column: 39, scope: !6196)
!6207 = !DILocation(line: 1490, column: 32, scope: !6196)
!6208 = !DILocation(line: 1491, column: 9, scope: !6149)
!6209 = !DILocation(line: 1491, column: 9, scope: !6148)
!6210 = !DILocation(line: 1493, column: 16, scope: !6143)
!6211 = !DILocation(line: 1493, column: 9, scope: !6143)
!6212 = !DILocation(line: 1494, column: 1, scope: !6143)
!6213 = !DISubprogram(name: "rwlock_rdunlock", scope: !326, file: !326, line: 202, type: !6043, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6214 = distinct !DISubprogram(name: "rd_timeout_remains", scope: !4366, file: !4366, line: 275, type: !6215, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6217)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!126, !487}
!6217 = !{!6218}
!6218 = !DILocalVariable(name: "abs_timeout", arg: 1, scope: !6214, file: !4366, line: 275, type: !487)
!6219 = !DILocation(line: 275, column: 49, scope: !6214)
!6220 = !DILocation(line: 276, column: 52, scope: !6214)
!6221 = !DILocation(line: 276, column: 30, scope: !6214)
!6222 = !DILocation(line: 276, column: 16, scope: !6214)
!6223 = !DILocation(line: 276, column: 9, scope: !6214)
!6224 = distinct !DISubprogram(name: "rd_timeout_expired", scope: !4366, file: !4366, line: 305, type: !6225, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6227)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{!126, !126}
!6227 = !{!6228}
!6228 = !DILocalVariable(name: "timeout_ms", arg: 1, scope: !6224, file: !4366, line: 305, type: !126)
!6229 = !DILocation(line: 305, column: 45, scope: !6224)
!6230 = !DILocation(line: 306, column: 16, scope: !6224)
!6231 = !DILocation(line: 306, column: 27, scope: !6224)
!6232 = !DILocation(line: 306, column: 9, scope: !6224)
!6233 = distinct !DISubprogram(name: "rd_kafka_broker_get_async", scope: !2, file: !2, line: 1634, type: !6234, scopeLine: 1637, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6236)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!412, !586, !320, !126, !5589}
!6236 = !{!6237, !6238, !6239, !6240, !6241, !6242}
!6237 = !DILocalVariable(name: "rk", arg: 1, scope: !6233, file: !2, line: 1634, type: !586)
!6238 = !DILocalVariable(name: "broker_id", arg: 2, scope: !6233, file: !2, line: 1635, type: !320)
!6239 = !DILocalVariable(name: "state", arg: 3, scope: !6233, file: !2, line: 1636, type: !126)
!6240 = !DILocalVariable(name: "eonce", arg: 4, scope: !6233, file: !2, line: 1637, type: !5589)
!6241 = !DILocalVariable(name: "version", scope: !6233, file: !2, line: 1638, type: !126)
!6242 = !DILocalVariable(name: "rkb", scope: !6243, file: !2, line: 1640, type: !412)
!6243 = distinct !DILexicalBlock(scope: !6233, file: !2, line: 1639, column: 12)
!6244 = !DILocation(line: 1634, column: 58, scope: !6233)
!6245 = !DILocation(line: 1635, column: 54, scope: !6233)
!6246 = !DILocation(line: 1636, column: 50, scope: !6233)
!6247 = !DILocation(line: 1637, column: 67, scope: !6233)
!6248 = !DILocation(line: 1638, column: 9, scope: !6233)
!6249 = !DILocation(line: 1638, column: 13, scope: !6233)
!6250 = !DILocation(line: 1639, column: 9, scope: !6233)
!6251 = !DILocation(line: 1640, column: 17, scope: !6243)
!6252 = !DILocation(line: 1640, column: 36, scope: !6243)
!6253 = !DILocation(line: 1642, column: 62, scope: !6243)
!6254 = !DILocation(line: 1642, column: 27, scope: !6243)
!6255 = !DILocation(line: 1642, column: 25, scope: !6243)
!6256 = !DILocation(line: 1644, column: 17, scope: !6243)
!6257 = !DILocation(line: 1645, column: 23, scope: !6243)
!6258 = !DILocation(line: 1645, column: 21, scope: !6243)
!6259 = !DILocation(line: 1647, column: 17, scope: !6243)
!6260 = !DILocation(line: 1649, column: 21, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6243, file: !2, line: 1649, column: 21)
!6262 = !DILocation(line: 1649, column: 21, scope: !6243)
!6263 = !DILocation(line: 1650, column: 32, scope: !6261)
!6264 = !DILocation(line: 1650, column: 25, scope: !6261)
!6265 = !DILocation(line: 1652, column: 9, scope: !6233)
!6266 = !DILocation(line: 1652, column: 9, scope: !6243)
!6267 = !DILocation(line: 1652, column: 60, scope: !6233)
!6268 = !DILocation(line: 1652, column: 64, scope: !6233)
!6269 = !DILocation(line: 1652, column: 73, scope: !6233)
!6270 = !DILocation(line: 1652, column: 19, scope: !6233)
!6271 = !DILocation(line: 1652, column: 18, scope: !6233)
!6272 = distinct !{!6272, !6250, !6273, !4095}
!6273 = !DILocation(line: 1652, column: 79, scope: !6233)
!6274 = !DILocation(line: 1654, column: 9, scope: !6233)
!6275 = !DILocation(line: 1655, column: 1, scope: !6233)
!6276 = distinct !DISubprogram(name: "rd_kafka_broker_find_by_nodeid0_fl", scope: !2, file: !2, line: 5081, type: !6277, scopeLine: 5086, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!412, !365, !126, !586, !320, !126, !561}
!6279 = !{!6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288}
!6280 = !DILocalVariable(name: "func", arg: 1, scope: !6276, file: !2, line: 5081, type: !365)
!6281 = !DILocalVariable(name: "line", arg: 2, scope: !6276, file: !2, line: 5082, type: !126)
!6282 = !DILocalVariable(name: "rk", arg: 3, scope: !6276, file: !2, line: 5083, type: !586)
!6283 = !DILocalVariable(name: "nodeid", arg: 4, scope: !6276, file: !2, line: 5084, type: !320)
!6284 = !DILocalVariable(name: "state", arg: 5, scope: !6276, file: !2, line: 5085, type: !126)
!6285 = !DILocalVariable(name: "do_connect", arg: 6, scope: !6276, file: !2, line: 5086, type: !561)
!6286 = !DILocalVariable(name: "rkb", scope: !6276, file: !2, line: 5087, type: !412)
!6287 = !DILocalVariable(name: "skel", scope: !6276, file: !2, line: 5088, type: !413)
!6288 = !DILocalVariable(name: "broker_state", scope: !6289, file: !2, line: 5100, type: !126)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !2, line: 5099, column: 26)
!6290 = distinct !DILexicalBlock(scope: !6276, file: !2, line: 5099, column: 13)
!6291 = !DILocation(line: 5081, column: 67, scope: !6276)
!6292 = !DILocation(line: 5082, column: 59, scope: !6276)
!6293 = !DILocation(line: 5083, column: 67, scope: !6276)
!6294 = !DILocation(line: 5084, column: 63, scope: !6276)
!6295 = !DILocation(line: 5085, column: 59, scope: !6276)
!6296 = !DILocation(line: 5086, column: 65, scope: !6276)
!6297 = !DILocation(line: 5087, column: 9, scope: !6276)
!6298 = !DILocation(line: 5087, column: 28, scope: !6276)
!6299 = !DILocation(line: 5088, column: 9, scope: !6276)
!6300 = !DILocation(line: 5088, column: 27, scope: !6276)
!6301 = !DILocation(line: 5088, column: 34, scope: !6276)
!6302 = !DILocation(line: 5088, column: 49, scope: !6276)
!6303 = !DILocation(line: 5090, column: 13, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6276, file: !2, line: 5090, column: 13)
!6305 = !DILocation(line: 5090, column: 13, scope: !6276)
!6306 = !DILocation(line: 5091, column: 17, scope: !6304)
!6307 = !DILocation(line: 5093, column: 29, scope: !6276)
!6308 = !DILocation(line: 5093, column: 33, scope: !6276)
!6309 = !DILocation(line: 5093, column: 15, scope: !6276)
!6310 = !DILocation(line: 5093, column: 13, scope: !6276)
!6311 = !DILocation(line: 5096, column: 14, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6276, file: !2, line: 5096, column: 13)
!6313 = !DILocation(line: 5096, column: 13, scope: !6276)
!6314 = !DILocation(line: 5097, column: 17, scope: !6312)
!6315 = !DILocation(line: 5099, column: 13, scope: !6290)
!6316 = !DILocation(line: 5099, column: 19, scope: !6290)
!6317 = !DILocation(line: 5099, column: 13, scope: !6276)
!6318 = !DILocation(line: 5100, column: 17, scope: !6289)
!6319 = !DILocation(line: 5100, column: 21, scope: !6289)
!6320 = !DILocation(line: 5101, column: 17, scope: !6289)
!6321 = !DILocation(line: 5102, column: 37, scope: !6289)
!6322 = !DILocation(line: 5102, column: 42, scope: !6289)
!6323 = !DILocation(line: 5102, column: 30, scope: !6289)
!6324 = !DILocation(line: 5103, column: 17, scope: !6289)
!6325 = !DILocation(line: 5105, column: 21, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6289, file: !2, line: 5105, column: 21)
!6327 = !DILocation(line: 5105, column: 37, scope: !6326)
!6328 = !DILocation(line: 5105, column: 34, scope: !6326)
!6329 = !DILocation(line: 5105, column: 21, scope: !6289)
!6330 = !DILocation(line: 5106, column: 29, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !2, line: 5106, column: 29)
!6332 = distinct !DILexicalBlock(scope: !6326, file: !2, line: 5105, column: 44)
!6333 = !DILocation(line: 5106, column: 40, scope: !6331)
!6334 = !DILocation(line: 5107, column: 29, scope: !6331)
!6335 = !DILocation(line: 5107, column: 42, scope: !6331)
!6336 = !DILocation(line: 5107, column: 72, scope: !6331)
!6337 = !DILocation(line: 5108, column: 29, scope: !6331)
!6338 = !DILocation(line: 5108, column: 33, scope: !6331)
!6339 = !DILocation(line: 5108, column: 41, scope: !6331)
!6340 = !DILocation(line: 5106, column: 29, scope: !6332)
!6341 = !DILocation(line: 5109, column: 69, scope: !6331)
!6342 = !DILocation(line: 5109, column: 33, scope: !6331)
!6343 = !DILocation(line: 5110, column: 25, scope: !6332)
!6344 = !DILocation(line: 5112, column: 9, scope: !6290)
!6345 = !DILocation(line: 5112, column: 9, scope: !6289)
!6346 = !DILocation(line: 5114, column: 9, scope: !6276)
!6347 = !DILocation(line: 5115, column: 16, scope: !6276)
!6348 = !DILocation(line: 5115, column: 9, scope: !6276)
!6349 = !DILocation(line: 5116, column: 1, scope: !6276)
!6350 = distinct !DISubprogram(name: "rd_kafka_brokers_get_nodeids_async", scope: !2, file: !2, line: 1671, type: !6351, scopeLine: 1672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6353)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{!867, !586, !5589}
!6353 = !{!6354, !6355, !6356, !6357, !6358, !6359, !6360}
!6354 = !DILocalVariable(name: "rk", arg: 1, scope: !6350, file: !2, line: 1671, type: !586)
!6355 = !DILocalVariable(name: "eonce", arg: 2, scope: !6350, file: !2, line: 1672, type: !5589)
!6356 = !DILocalVariable(name: "nodeids", scope: !6350, file: !2, line: 1673, type: !867)
!6357 = !DILocalVariable(name: "version", scope: !6350, file: !2, line: 1674, type: !126)
!6358 = !DILocalVariable(name: "i", scope: !6350, file: !2, line: 1674, type: !126)
!6359 = !DILocalVariable(name: "broker_cnt", scope: !6350, file: !2, line: 1674, type: !126)
!6360 = !DILocalVariable(name: "rkb", scope: !6361, file: !2, line: 1677, type: !412)
!6361 = distinct !DILexicalBlock(scope: !6350, file: !2, line: 1676, column: 12)
!6362 = !DILocation(line: 1671, column: 59, scope: !6350)
!6363 = !DILocation(line: 1672, column: 68, scope: !6350)
!6364 = !DILocation(line: 1673, column: 9, scope: !6350)
!6365 = !DILocation(line: 1673, column: 20, scope: !6350)
!6366 = !DILocation(line: 1674, column: 9, scope: !6350)
!6367 = !DILocation(line: 1674, column: 13, scope: !6350)
!6368 = !DILocation(line: 1674, column: 22, scope: !6350)
!6369 = !DILocation(line: 1674, column: 25, scope: !6350)
!6370 = !DILocation(line: 1676, column: 9, scope: !6350)
!6371 = !DILocation(line: 1677, column: 17, scope: !6361)
!6372 = !DILocation(line: 1677, column: 36, scope: !6361)
!6373 = !DILocation(line: 1678, column: 62, scope: !6361)
!6374 = !DILocation(line: 1678, column: 27, scope: !6361)
!6375 = !DILocation(line: 1678, column: 25, scope: !6361)
!6376 = !DILocation(line: 1680, column: 17, scope: !6361)
!6377 = !DILocation(line: 1681, column: 47, scope: !6361)
!6378 = !DILocation(line: 1681, column: 51, scope: !6361)
!6379 = !DILocation(line: 1681, column: 30, scope: !6361)
!6380 = !DILocation(line: 1681, column: 28, scope: !6361)
!6381 = !DILocation(line: 1682, column: 21, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6361, file: !2, line: 1682, column: 21)
!6383 = !DILocation(line: 1682, column: 21, scope: !6361)
!6384 = !DILocation(line: 1683, column: 29, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !2, line: 1683, column: 29)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !2, line: 1682, column: 30)
!6387 = !DILocation(line: 1683, column: 54, scope: !6385)
!6388 = !DILocation(line: 1683, column: 42, scope: !6385)
!6389 = !DILocation(line: 1683, column: 40, scope: !6385)
!6390 = !DILocation(line: 1683, column: 29, scope: !6386)
!6391 = !DILocation(line: 1684, column: 49, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6385, file: !2, line: 1683, column: 64)
!6393 = !DILocation(line: 1684, column: 33, scope: !6392)
!6394 = !DILocation(line: 1686, column: 41, scope: !6392)
!6395 = !DILocation(line: 1687, column: 25, scope: !6392)
!6396 = !DILocation(line: 1688, column: 49, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6385, file: !2, line: 1687, column: 32)
!6398 = !DILocation(line: 1688, column: 33, scope: !6397)
!6399 = !DILocation(line: 1690, column: 17, scope: !6386)
!6400 = !DILocation(line: 1691, column: 22, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6361, file: !2, line: 1691, column: 21)
!6402 = !DILocation(line: 1691, column: 21, scope: !6361)
!6403 = !DILocation(line: 1692, column: 35, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6401, file: !2, line: 1691, column: 31)
!6405 = !DILocation(line: 1692, column: 33, scope: !6404)
!6406 = !DILocation(line: 1693, column: 44, scope: !6404)
!6407 = !DILocation(line: 1693, column: 53, scope: !6404)
!6408 = !DILocation(line: 1693, column: 25, scope: !6404)
!6409 = !DILocation(line: 1694, column: 17, scope: !6404)
!6410 = !DILocation(line: 1695, column: 19, scope: !6361)
!6411 = !DILocation(line: 1696, column: 17, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6361, file: !2, line: 1696, column: 17)
!6413 = !DILocation(line: 1696, column: 17, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6412, file: !2, line: 1696, column: 17)
!6415 = !DILocation(line: 1697, column: 25, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6414, file: !2, line: 1696, column: 63)
!6417 = !DILocation(line: 1698, column: 29, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6416, file: !2, line: 1698, column: 29)
!6419 = !DILocation(line: 1698, column: 34, scope: !6418)
!6420 = !DILocation(line: 1698, column: 45, scope: !6418)
!6421 = !DILocation(line: 1698, column: 51, scope: !6418)
!6422 = !DILocation(line: 1699, column: 30, scope: !6418)
!6423 = !DILocation(line: 1698, column: 29, scope: !6416)
!6424 = !DILocation(line: 1700, column: 51, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6418, file: !2, line: 1699, column: 63)
!6426 = !DILocation(line: 1700, column: 61, scope: !6425)
!6427 = !DILocation(line: 1701, column: 51, scope: !6425)
!6428 = !DILocation(line: 1701, column: 56, scope: !6425)
!6429 = !DILocation(line: 1700, column: 33, scope: !6425)
!6430 = !DILocation(line: 1702, column: 25, scope: !6425)
!6431 = !DILocation(line: 1703, column: 25, scope: !6416)
!6432 = !DILocation(line: 1704, column: 17, scope: !6416)
!6433 = distinct !{!6433, !6411, !6434, !4095}
!6434 = !DILocation(line: 1704, column: 17, scope: !6412)
!6435 = !DILocation(line: 1705, column: 17, scope: !6361)
!6436 = !DILocation(line: 1707, column: 22, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6361, file: !2, line: 1707, column: 21)
!6438 = !DILocation(line: 1707, column: 21, scope: !6361)
!6439 = !DILocation(line: 1708, column: 32, scope: !6437)
!6440 = !DILocation(line: 1708, column: 25, scope: !6437)
!6441 = !DILocation(line: 1709, column: 9, scope: !6350)
!6442 = !DILocation(line: 1709, column: 9, scope: !6361)
!6443 = !DILocation(line: 1709, column: 60, scope: !6350)
!6444 = !DILocation(line: 1709, column: 64, scope: !6350)
!6445 = !DILocation(line: 1709, column: 73, scope: !6350)
!6446 = !DILocation(line: 1709, column: 19, scope: !6350)
!6447 = !DILocation(line: 1709, column: 18, scope: !6350)
!6448 = distinct !{!6448, !6370, !6449, !4095}
!6449 = !DILocation(line: 1709, column: 79, scope: !6350)
!6450 = !DILocation(line: 1711, column: 13, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6350, file: !2, line: 1711, column: 13)
!6452 = !DILocation(line: 1711, column: 13, scope: !6350)
!6453 = !DILocation(line: 1712, column: 33, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6451, file: !2, line: 1711, column: 22)
!6455 = !DILocation(line: 1712, column: 17, scope: !6454)
!6456 = !DILocation(line: 1713, column: 9, scope: !6454)
!6457 = !DILocation(line: 1714, column: 9, scope: !6350)
!6458 = !DILocation(line: 1715, column: 1, scope: !6350)
!6459 = distinct !DISubprogram(name: "rd_list_cnt", scope: !600, file: !600, line: 245, type: !6460, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6462)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{!126, !832}
!6462 = !{!6463}
!6463 = !DILocalVariable(name: "rl", arg: 1, scope: !6459, file: !600, line: 245, type: !832)
!6464 = !DILocation(line: 245, column: 61, scope: !6459)
!6465 = !DILocation(line: 246, column: 16, scope: !6459)
!6466 = !DILocation(line: 246, column: 20, scope: !6459)
!6467 = !{!4142, !3941, i64 4}
!6468 = !DILocation(line: 246, column: 9, scope: !6459)
!6469 = !DISubprogram(name: "rd_list_destroy", scope: !600, file: !600, line: 215, type: !6470, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6470 = !DISubroutineType(types: !6471)
!6471 = !{null, !867}
!6472 = !DISubprogram(name: "rd_list_set_cnt", scope: !600, file: !600, line: 119, type: !6473, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{null, !867, !692}
!6475 = !DISubprogram(name: "rd_list_new", scope: !600, file: !600, line: 89, type: !6476, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!867, !126, !609}
!6478 = !DISubprogram(name: "rd_list_init_int32", scope: !600, file: !600, line: 407, type: !6479, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6479 = !DISubroutineType(types: !6480)
!6480 = !{!867, !867, !126}
!6481 = !DISubprogram(name: "rd_list_set_int32", scope: !600, file: !600, line: 423, type: !6482, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6482 = !DISubroutineType(types: !6483)
!6483 = !{null, !867, !126, !320}
!6484 = distinct !DISubprogram(name: "rd_kafka_broker_controller_async", scope: !2, file: !2, line: 1763, type: !6485, scopeLine: 1765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6487)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{!412, !586, !126, !5589}
!6487 = !{!6488, !6489, !6490, !6491, !6492}
!6488 = !DILocalVariable(name: "rk", arg: 1, scope: !6484, file: !2, line: 1763, type: !586)
!6489 = !DILocalVariable(name: "state", arg: 2, scope: !6484, file: !2, line: 1764, type: !126)
!6490 = !DILocalVariable(name: "eonce", arg: 3, scope: !6484, file: !2, line: 1765, type: !5589)
!6491 = !DILocalVariable(name: "version", scope: !6484, file: !2, line: 1766, type: !126)
!6492 = !DILocalVariable(name: "rkb", scope: !6493, file: !2, line: 1768, type: !412)
!6493 = distinct !DILexicalBlock(scope: !6484, file: !2, line: 1767, column: 12)
!6494 = !DILocation(line: 1763, column: 46, scope: !6484)
!6495 = !DILocation(line: 1764, column: 38, scope: !6484)
!6496 = !DILocation(line: 1765, column: 55, scope: !6484)
!6497 = !DILocation(line: 1766, column: 9, scope: !6484)
!6498 = !DILocation(line: 1766, column: 13, scope: !6484)
!6499 = !DILocation(line: 1767, column: 9, scope: !6484)
!6500 = !DILocation(line: 1768, column: 17, scope: !6493)
!6501 = !DILocation(line: 1768, column: 36, scope: !6493)
!6502 = !DILocation(line: 1770, column: 62, scope: !6493)
!6503 = !DILocation(line: 1770, column: 27, scope: !6493)
!6504 = !DILocation(line: 1770, column: 25, scope: !6493)
!6505 = !DILocation(line: 1772, column: 57, scope: !6493)
!6506 = !DILocation(line: 1772, column: 61, scope: !6493)
!6507 = !DILocation(line: 1772, column: 23, scope: !6493)
!6508 = !DILocation(line: 1772, column: 21, scope: !6493)
!6509 = !DILocation(line: 1773, column: 21, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6493, file: !2, line: 1773, column: 21)
!6511 = !DILocation(line: 1773, column: 21, scope: !6493)
!6512 = !DILocation(line: 1774, column: 32, scope: !6510)
!6513 = !DILocation(line: 1774, column: 25, scope: !6510)
!6514 = !DILocation(line: 1776, column: 9, scope: !6484)
!6515 = !DILocation(line: 1776, column: 9, scope: !6493)
!6516 = !DILocation(line: 1776, column: 60, scope: !6484)
!6517 = !DILocation(line: 1776, column: 64, scope: !6484)
!6518 = !DILocation(line: 1776, column: 73, scope: !6484)
!6519 = !DILocation(line: 1776, column: 19, scope: !6484)
!6520 = !DILocation(line: 1776, column: 18, scope: !6484)
!6521 = distinct !{!6521, !6499, !6522, !4095}
!6522 = !DILocation(line: 1776, column: 79, scope: !6484)
!6523 = !DILocation(line: 1778, column: 9, scope: !6484)
!6524 = !DILocation(line: 1779, column: 1, scope: !6484)
!6525 = distinct !DISubprogram(name: "rd_kafka_broker_controller_nowait", scope: !2, file: !2, line: 1727, type: !6526, scopeLine: 1728, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6528)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{!412, !586, !126}
!6528 = !{!6529, !6530, !6531}
!6529 = !DILocalVariable(name: "rk", arg: 1, scope: !6525, file: !2, line: 1727, type: !586)
!6530 = !DILocalVariable(name: "state", arg: 2, scope: !6525, file: !2, line: 1728, type: !126)
!6531 = !DILocalVariable(name: "rkb", scope: !6525, file: !2, line: 1729, type: !412)
!6532 = !DILocation(line: 1727, column: 73, scope: !6525)
!6533 = !DILocation(line: 1728, column: 65, scope: !6525)
!6534 = !DILocation(line: 1729, column: 9, scope: !6525)
!6535 = !DILocation(line: 1729, column: 28, scope: !6525)
!6536 = !DILocation(line: 1731, column: 9, scope: !6525)
!6537 = !DILocation(line: 1733, column: 13, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6525, file: !2, line: 1733, column: 13)
!6539 = !DILocation(line: 1733, column: 17, scope: !6538)
!6540 = !{!4141, !3941, i64 3032}
!6541 = !DILocation(line: 1733, column: 33, scope: !6538)
!6542 = !DILocation(line: 1733, column: 13, scope: !6525)
!6543 = !DILocation(line: 1734, column: 17, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6538, file: !2, line: 1733, column: 40)
!6545 = !DILocation(line: 1735, column: 51, scope: !6544)
!6546 = !DILocation(line: 1735, column: 17, scope: !6544)
!6547 = !DILocation(line: 1737, column: 17, scope: !6544)
!6548 = !DILocation(line: 1740, column: 15, scope: !6525)
!6549 = !DILocation(line: 1740, column: 13, scope: !6525)
!6550 = !DILocation(line: 1743, column: 9, scope: !6525)
!6551 = !DILocation(line: 1745, column: 16, scope: !6525)
!6552 = !DILocation(line: 1745, column: 9, scope: !6525)
!6553 = !DILocation(line: 1746, column: 1, scope: !6525)
!6554 = distinct !DISubprogram(name: "rd_kafka_broker_controller", scope: !2, file: !2, line: 1792, type: !6555, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6557)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!412, !586, !126, !487}
!6557 = !{!6558, !6559, !6560, !6561, !6563, !6564}
!6558 = !DILocalVariable(name: "rk", arg: 1, scope: !6554, file: !2, line: 1792, type: !586)
!6559 = !DILocalVariable(name: "state", arg: 2, scope: !6554, file: !2, line: 1792, type: !126)
!6560 = !DILocalVariable(name: "abs_timeout", arg: 3, scope: !6554, file: !2, line: 1792, type: !487)
!6561 = !DILocalVariable(name: "version", scope: !6562, file: !2, line: 1795, type: !126)
!6562 = distinct !DILexicalBlock(scope: !6554, file: !2, line: 1794, column: 19)
!6563 = !DILocalVariable(name: "rkb", scope: !6562, file: !2, line: 1796, type: !412)
!6564 = !DILocalVariable(name: "remains_ms", scope: !6562, file: !2, line: 1797, type: !126)
!6565 = !DILocation(line: 1792, column: 40, scope: !6554)
!6566 = !DILocation(line: 1792, column: 48, scope: !6554)
!6567 = !DILocation(line: 1792, column: 63, scope: !6554)
!6568 = !DILocation(line: 1794, column: 9, scope: !6554)
!6569 = !DILocation(line: 1795, column: 17, scope: !6562)
!6570 = !DILocation(line: 1795, column: 21, scope: !6562)
!6571 = !DILocation(line: 1795, column: 66, scope: !6562)
!6572 = !DILocation(line: 1795, column: 31, scope: !6562)
!6573 = !DILocation(line: 1796, column: 17, scope: !6562)
!6574 = !DILocation(line: 1796, column: 36, scope: !6562)
!6575 = !DILocation(line: 1797, column: 17, scope: !6562)
!6576 = !DILocation(line: 1797, column: 21, scope: !6562)
!6577 = !DILocation(line: 1799, column: 57, scope: !6562)
!6578 = !DILocation(line: 1799, column: 61, scope: !6562)
!6579 = !DILocation(line: 1799, column: 23, scope: !6562)
!6580 = !DILocation(line: 1799, column: 21, scope: !6562)
!6581 = !DILocation(line: 1800, column: 21, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6562, file: !2, line: 1800, column: 21)
!6583 = !DILocation(line: 1800, column: 21, scope: !6562)
!6584 = !DILocation(line: 1801, column: 32, scope: !6582)
!6585 = !DILocation(line: 1801, column: 25, scope: !6582)
!6586 = !DILocation(line: 1803, column: 49, scope: !6562)
!6587 = !DILocation(line: 1803, column: 30, scope: !6562)
!6588 = !DILocation(line: 1803, column: 28, scope: !6562)
!6589 = !DILocation(line: 1804, column: 40, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6562, file: !2, line: 1804, column: 21)
!6591 = !DILocation(line: 1804, column: 21, scope: !6590)
!6592 = !DILocation(line: 1804, column: 21, scope: !6562)
!6593 = !DILocation(line: 1805, column: 25, scope: !6590)
!6594 = !DILocation(line: 1807, column: 52, scope: !6562)
!6595 = !DILocation(line: 1807, column: 56, scope: !6562)
!6596 = !DILocation(line: 1807, column: 65, scope: !6562)
!6597 = !DILocation(line: 1807, column: 17, scope: !6562)
!6598 = !DILocation(line: 1808, column: 9, scope: !6554)
!6599 = distinct !{!6599, !6568, !6598}
!6600 = !DILocation(line: 1809, column: 1, scope: !6554)
!6601 = distinct !DISubprogram(name: "rd_kafka_recv", scope: !2, file: !2, line: 1915, type: !6050, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6602)
!6602 = !{!6603, !6604, !6605, !6606, !6607, !6608, !6609, !6613, !6614, !6616, !6619, !6625, !6627, !6629, !6630, !6632, !6635, !6641, !6643, !6644}
!6603 = !DILocalVariable(name: "rkb", arg: 1, scope: !6601, file: !2, line: 1915, type: !412)
!6604 = !DILocalVariable(name: "rkbuf", scope: !6601, file: !2, line: 1916, type: !1692)
!6605 = !DILocalVariable(name: "r", scope: !6601, file: !2, line: 1917, type: !2858)
!6606 = !DILocalVariable(name: "errstr", scope: !6601, file: !2, line: 1919, type: !2502)
!6607 = !DILocalVariable(name: "err", scope: !6601, file: !2, line: 1920, type: !550)
!6608 = !DILocalVariable(name: "log_decode_errors", scope: !6601, file: !2, line: 1921, type: !3622)
!6609 = !DILocalVariable(name: "_v", scope: !6610, file: !2, line: 1980, type: !320)
!6610 = distinct !DILexicalBlock(scope: !6611, file: !2, line: 1980, column: 17)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !2, line: 1957, column: 39)
!6612 = distinct !DILexicalBlock(scope: !6601, file: !2, line: 1957, column: 13)
!6613 = !DILocalVariable(name: "_vp", scope: !6610, file: !2, line: 1980, type: !795)
!6614 = !DILocalVariable(name: "__len2", scope: !6615, file: !2, line: 1980, type: !692)
!6615 = distinct !DILexicalBlock(scope: !6610, file: !2, line: 1980, column: 17)
!6616 = !DILocalVariable(name: "__len0", scope: !6617, file: !2, line: 1980, type: !692)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !2, line: 1980, column: 17)
!6618 = distinct !DILexicalBlock(scope: !6615, file: !2, line: 1980, column: 17)
!6619 = !DILocalVariable(name: "__tmpstr", scope: !6620, file: !2, line: 1980, type: !924)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !2, line: 1980, column: 17)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !2, line: 1980, column: 17)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !2, line: 1980, column: 17)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !2, line: 1980, column: 17)
!6624 = distinct !DILexicalBlock(scope: !6617, file: !2, line: 1980, column: 17)
!6625 = !DILocalVariable(name: "_logname", scope: !6626, file: !2, line: 1980, type: !924)
!6626 = distinct !DILexicalBlock(scope: !6620, file: !2, line: 1980, column: 17)
!6627 = !DILocalVariable(name: "_v", scope: !6628, file: !2, line: 1981, type: !320)
!6628 = distinct !DILexicalBlock(scope: !6611, file: !2, line: 1981, column: 17)
!6629 = !DILocalVariable(name: "_vp", scope: !6628, file: !2, line: 1981, type: !795)
!6630 = !DILocalVariable(name: "__len2", scope: !6631, file: !2, line: 1981, type: !692)
!6631 = distinct !DILexicalBlock(scope: !6628, file: !2, line: 1981, column: 17)
!6632 = !DILocalVariable(name: "__len0", scope: !6633, file: !2, line: 1981, type: !692)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !2, line: 1981, column: 17)
!6634 = distinct !DILexicalBlock(scope: !6631, file: !2, line: 1981, column: 17)
!6635 = !DILocalVariable(name: "__tmpstr", scope: !6636, file: !2, line: 1981, type: !924)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !2, line: 1981, column: 17)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !2, line: 1981, column: 17)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !2, line: 1981, column: 17)
!6639 = distinct !DILexicalBlock(scope: !6640, file: !2, line: 1981, column: 17)
!6640 = distinct !DILexicalBlock(scope: !6633, file: !2, line: 1981, column: 17)
!6641 = !DILocalVariable(name: "_logname", scope: !6642, file: !2, line: 1981, type: !924)
!6642 = distinct !DILexicalBlock(scope: !6636, file: !2, line: 1981, column: 17)
!6643 = !DILabel(scope: !6601, name: "err_parse", file: !2, line: 2026)
!6644 = !DILabel(scope: !6601, name: "err", file: !2, line: 2028)
!6645 = !DILocation(line: 1915, column: 38, scope: !6601)
!6646 = !DILocation(line: 1916, column: 9, scope: !6601)
!6647 = !DILocation(line: 1916, column: 25, scope: !6601)
!6648 = !DILocation(line: 1917, column: 9, scope: !6601)
!6649 = !DILocation(line: 1917, column: 17, scope: !6601)
!6650 = !DILocation(line: 1919, column: 9, scope: !6601)
!6651 = !DILocation(line: 1919, column: 14, scope: !6601)
!6652 = !DILocation(line: 1920, column: 9, scope: !6601)
!6653 = !DILocation(line: 1920, column: 29, scope: !6601)
!6654 = !DILocation(line: 1921, column: 9, scope: !6601)
!6655 = !DILocation(line: 1921, column: 19, scope: !6601)
!6656 = !DILocation(line: 1931, column: 23, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6601, file: !2, line: 1931, column: 13)
!6658 = !DILocation(line: 1931, column: 28, scope: !6657)
!6659 = !DILocation(line: 1931, column: 21, scope: !6657)
!6660 = !DILocation(line: 1931, column: 13, scope: !6601)
!6661 = !DILocation(line: 1934, column: 25, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6657, file: !2, line: 1931, column: 43)
!6663 = !DILocation(line: 1934, column: 23, scope: !6662)
!6664 = !DILocation(line: 1936, column: 37, scope: !6662)
!6665 = !DILocation(line: 1936, column: 17, scope: !6662)
!6666 = !DILocation(line: 1936, column: 22, scope: !6662)
!6667 = !DILocation(line: 1936, column: 35, scope: !6662)
!6668 = !DILocation(line: 1939, column: 38, scope: !6662)
!6669 = !DILocation(line: 1939, column: 45, scope: !6662)
!6670 = !DILocation(line: 1939, column: 17, scope: !6662)
!6671 = !DILocation(line: 1941, column: 9, scope: !6662)
!6672 = !DILocation(line: 1943, column: 9, scope: !6601)
!6673 = !DILocation(line: 1943, column: 9, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6601, file: !2, line: 1943, column: 9)
!6675 = !DILocation(line: 1945, column: 37, scope: !6601)
!6676 = !DILocation(line: 1945, column: 42, scope: !6601)
!6677 = !DILocation(line: 1945, column: 58, scope: !6601)
!6678 = !DILocation(line: 1945, column: 65, scope: !6601)
!6679 = !DILocation(line: 1946, column: 37, scope: !6601)
!6680 = !DILocation(line: 1945, column: 13, scope: !6601)
!6681 = !DILocation(line: 1945, column: 11, scope: !6601)
!6682 = !DILocation(line: 1947, column: 13, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6601, file: !2, line: 1947, column: 13)
!6684 = !DILocation(line: 1947, column: 13, scope: !6601)
!6685 = !DILocation(line: 1948, column: 21, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !2, line: 1948, column: 21)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !2, line: 1947, column: 31)
!6688 = !DILocation(line: 1948, column: 23, scope: !6686)
!6689 = !DILocation(line: 1948, column: 21, scope: !6687)
!6690 = !DILocation(line: 1949, column: 25, scope: !6686)
!6691 = !DILocation(line: 1950, column: 21, scope: !6687)
!6692 = !DILocation(line: 1951, column: 34, scope: !6687)
!6693 = !DILocation(line: 1951, column: 39, scope: !6687)
!6694 = !DILocation(line: 1951, column: 45, scope: !6687)
!6695 = !DILocation(line: 1951, column: 17, scope: !6687)
!6696 = !DILocation(line: 1952, column: 17, scope: !6687)
!6697 = !DILocation(line: 1955, column: 26, scope: !6601)
!6698 = !DILocation(line: 1955, column: 31, scope: !6601)
!6699 = !DILocation(line: 1955, column: 37, scope: !6601)
!6700 = !DILocation(line: 1955, column: 46, scope: !6601)
!6701 = !DILocation(line: 1955, column: 9, scope: !6601)
!6702 = !DILocation(line: 1957, column: 13, scope: !6612)
!6703 = !DILocation(line: 1957, column: 20, scope: !6612)
!6704 = !{!5210, !3942, i64 168}
!6705 = !DILocation(line: 1957, column: 33, scope: !6612)
!6706 = !DILocation(line: 1957, column: 13, scope: !6601)
!6707 = !DILocation(line: 1960, column: 21, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6611, file: !2, line: 1960, column: 21)
!6709 = !DILocation(line: 1960, column: 21, scope: !6611)
!6710 = !DILocation(line: 1964, column: 25, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6708, file: !2, line: 1961, column: 54)
!6712 = !DILocation(line: 1967, column: 17, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !2, line: 1967, column: 17)
!6714 = distinct !DILexicalBlock(scope: !6611, file: !2, line: 1967, column: 17)
!6715 = !DILocation(line: 1967, column: 17, scope: !6714)
!6716 = !DILocation(line: 1968, column: 36, scope: !6611)
!6717 = !DILocation(line: 1968, column: 17, scope: !6611)
!6718 = !DILocation(line: 1968, column: 24, scope: !6611)
!6719 = !DILocation(line: 1968, column: 34, scope: !6611)
!6720 = !DILocation(line: 1976, column: 32, scope: !6611)
!6721 = !DILocation(line: 1976, column: 39, scope: !6611)
!6722 = !DILocation(line: 1976, column: 54, scope: !6611)
!6723 = !DILocation(line: 1976, column: 61, scope: !6611)
!6724 = !DILocation(line: 1976, column: 17, scope: !6611)
!6725 = !DILocation(line: 1980, column: 17, scope: !6611)
!6726 = !DILocation(line: 1980, column: 17, scope: !6610)
!6727 = !DILocation(line: 1980, column: 17, scope: !6615)
!6728 = !DILocation(line: 1980, column: 17, scope: !6618)
!6729 = !DILocation(line: 1980, column: 17, scope: !6617)
!6730 = !DILocation(line: 1980, column: 17, scope: !6624)
!6731 = !{!5210, !3942, i64 152}
!6732 = !DILocation(line: 1980, column: 17, scope: !6623)
!6733 = !DILocation(line: 1980, column: 17, scope: !6621)
!6734 = !DILocation(line: 1980, column: 17, scope: !6622)
!6735 = !DILocation(line: 1980, column: 17, scope: !6620)
!6736 = !DILocation(line: 1980, column: 17, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6620, file: !2, line: 1980, column: 17)
!6738 = !DILocation(line: 1980, column: 17, scope: !6626)
!6739 = !{!5210, !3942, i64 144}
!6740 = !{!5210, !3911, i64 504}
!6741 = !{!5210, !3912, i64 376}
!6742 = !DILocation(line: 1981, column: 17, scope: !6611)
!6743 = !DILocation(line: 1981, column: 17, scope: !6628)
!6744 = !DILocation(line: 1981, column: 17, scope: !6631)
!6745 = !DILocation(line: 1981, column: 17, scope: !6634)
!6746 = !DILocation(line: 1981, column: 17, scope: !6633)
!6747 = !DILocation(line: 1981, column: 17, scope: !6640)
!6748 = !DILocation(line: 1981, column: 17, scope: !6639)
!6749 = !DILocation(line: 1981, column: 17, scope: !6637)
!6750 = !DILocation(line: 1981, column: 17, scope: !6638)
!6751 = !DILocation(line: 1981, column: 17, scope: !6636)
!6752 = !DILocation(line: 1981, column: 17, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6636, file: !2, line: 1981, column: 17)
!6754 = !DILocation(line: 1981, column: 17, scope: !6642)
!6755 = !DILocation(line: 1983, column: 17, scope: !6611)
!6756 = !DILocation(line: 1983, column: 24, scope: !6611)
!6757 = !DILocation(line: 1983, column: 34, scope: !6611)
!6758 = !DILocation(line: 1985, column: 39, scope: !6611)
!6759 = !DILocation(line: 1985, column: 46, scope: !6611)
!6760 = !DILocation(line: 1985, column: 59, scope: !6611)
!6761 = !{!5210, !3941, i64 192}
!6762 = !DILocation(line: 1985, column: 17, scope: !6611)
!6763 = !DILocation(line: 1985, column: 24, scope: !6611)
!6764 = !DILocation(line: 1985, column: 37, scope: !6611)
!6765 = !DILocation(line: 1988, column: 21, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6611, file: !2, line: 1988, column: 21)
!6767 = !DILocation(line: 1988, column: 28, scope: !6766)
!6768 = !DILocation(line: 1988, column: 41, scope: !6766)
!6769 = !DILocation(line: 1988, column: 56, scope: !6766)
!6770 = !DILocation(line: 1989, column: 21, scope: !6766)
!6771 = !DILocation(line: 1989, column: 28, scope: !6766)
!6772 = !DILocation(line: 1990, column: 33, scope: !6766)
!6773 = !DILocation(line: 1990, column: 38, scope: !6766)
!6774 = !DILocation(line: 1990, column: 46, scope: !6766)
!6775 = !DILocation(line: 1990, column: 54, scope: !6766)
!6776 = !{!4141, !3941, i64 588}
!6777 = !DILocation(line: 1990, column: 25, scope: !6766)
!6778 = !DILocation(line: 1989, column: 41, scope: !6766)
!6779 = !DILocation(line: 1988, column: 21, scope: !6611)
!6780 = !DILocation(line: 1991, column: 25, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6766, file: !2, line: 1990, column: 73)
!6782 = !DILocation(line: 1997, column: 29, scope: !6781)
!6783 = !DILocation(line: 1998, column: 42, scope: !6781)
!6784 = !DILocation(line: 1998, column: 47, scope: !6781)
!6785 = !DILocation(line: 1998, column: 53, scope: !6781)
!6786 = !DILocation(line: 1998, column: 25, scope: !6781)
!6787 = !DILocation(line: 1999, column: 25, scope: !6781)
!6788 = !DILocation(line: 2002, column: 17, scope: !6611)
!6789 = !DILocation(line: 2002, column: 24, scope: !6611)
!6790 = !DILocation(line: 2002, column: 37, scope: !6611)
!6791 = !DILocation(line: 2004, column: 21, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6611, file: !2, line: 2004, column: 21)
!6793 = !DILocation(line: 2004, column: 28, scope: !6792)
!6794 = !DILocation(line: 2004, column: 41, scope: !6792)
!6795 = !DILocation(line: 2004, column: 21, scope: !6611)
!6796 = !DILocation(line: 2009, column: 53, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6792, file: !2, line: 2004, column: 46)
!6798 = !DILocation(line: 2009, column: 60, scope: !6797)
!6799 = !DILocation(line: 2010, column: 52, scope: !6797)
!6800 = !DILocation(line: 2010, column: 59, scope: !6797)
!6801 = !DILocation(line: 2009, column: 25, scope: !6797)
!6802 = !DILocation(line: 2011, column: 17, scope: !6797)
!6803 = !DILocation(line: 2012, column: 9, scope: !6611)
!6804 = !DILocation(line: 2014, column: 31, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6601, file: !2, line: 2014, column: 13)
!6806 = !DILocation(line: 2014, column: 38, scope: !6805)
!6807 = !DILocation(line: 2014, column: 13, scope: !6805)
!6808 = !DILocation(line: 2014, column: 49, scope: !6805)
!6809 = !DILocation(line: 2015, column: 13, scope: !6805)
!6810 = !DILocation(line: 2015, column: 20, scope: !6805)
!6811 = !DILocation(line: 2014, column: 73, scope: !6805)
!6812 = !DILocation(line: 2014, column: 13, scope: !6601)
!6813 = !DILocation(line: 2017, column: 17, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6805, file: !2, line: 2015, column: 34)
!6815 = !DILocation(line: 2017, column: 22, scope: !6814)
!6816 = !DILocation(line: 2017, column: 35, scope: !6814)
!6817 = !DILocation(line: 2018, column: 34, scope: !6814)
!6818 = !DILocation(line: 2018, column: 39, scope: !6814)
!6819 = !DILocation(line: 2018, column: 45, scope: !6814)
!6820 = !DILocation(line: 2018, column: 17, scope: !6814)
!6821 = !DILocation(line: 2019, column: 34, scope: !6814)
!6822 = !DILocation(line: 2019, column: 39, scope: !6814)
!6823 = !DILocation(line: 2019, column: 45, scope: !6814)
!6824 = !DILocation(line: 2020, column: 51, scope: !6814)
!6825 = !DILocation(line: 2020, column: 58, scope: !6814)
!6826 = !DILocation(line: 2020, column: 33, scope: !6814)
!6827 = !DILocation(line: 2019, column: 17, scope: !6814)
!6828 = !DILocation(line: 2021, column: 39, scope: !6814)
!6829 = !DILocation(line: 2021, column: 44, scope: !6814)
!6830 = !DILocation(line: 2021, column: 17, scope: !6814)
!6831 = !DILocation(line: 2022, column: 9, scope: !6814)
!6832 = !DILocation(line: 2024, column: 9, scope: !6601)
!6833 = !DILocation(line: 2026, column: 1, scope: !6601)
!6834 = !DILocation(line: 2027, column: 15, scope: !6601)
!6835 = !DILocation(line: 2027, column: 22, scope: !6601)
!6836 = !DILocation(line: 2027, column: 13, scope: !6601)
!6837 = !DILocation(line: 2027, column: 9, scope: !6601)
!6838 = !DILocation(line: 2028, column: 1, scope: !6601)
!6839 = !DILocation(line: 2029, column: 21, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6601, file: !2, line: 2029, column: 13)
!6841 = !DILocation(line: 2029, column: 14, scope: !6840)
!6842 = !DILocation(line: 2029, column: 13, scope: !6601)
!6843 = !DILocation(line: 2030, column: 45, scope: !6840)
!6844 = !DILocation(line: 2030, column: 50, scope: !6840)
!6845 = !DILocation(line: 2030, column: 55, scope: !6840)
!6846 = !DILocation(line: 2030, column: 17, scope: !6840)
!6847 = !DILocation(line: 2032, column: 38, scope: !6840)
!6848 = !DILocation(line: 2032, column: 52, scope: !6840)
!6849 = !DILocation(line: 2033, column: 38, scope: !6840)
!6850 = !DILocation(line: 2032, column: 17, scope: !6840)
!6851 = !DILocation(line: 2034, column: 9, scope: !6601)
!6852 = !DILocation(line: 2035, column: 1, scope: !6601)
!6853 = !DISubprogram(name: "rd_kafka_buf_new0", scope: !414, file: !414, line: 923, type: !6854, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{!1692, !126, !692, !126}
!6856 = !DISubprogram(name: "rd_buf_write_ensure", scope: !1709, file: !1709, line: 212, type: !6857, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6857 = !DISubroutineType(types: !6858)
!6858 = !{null, !6859, !692, !692}
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!6860 = !DISubprogram(name: "rd_kafka_transport_recv", scope: !497, file: !497, line: 49, type: !6861, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{!2858, !495, !6859, !559, !692}
!6863 = distinct !DISubprogram(name: "rd_atomic64_add", scope: !316, file: !316, line: 144, type: !5021, scopeLine: 145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6864)
!6864 = !{!6865, !6866}
!6865 = !DILocalVariable(name: "ra", arg: 1, scope: !6863, file: !316, line: 144, type: !5023)
!6866 = !DILocalVariable(name: "v", arg: 2, scope: !6863, file: !316, line: 145, type: !489)
!6867 = !DILocation(line: 144, column: 67, scope: !6863)
!6868 = !DILocation(line: 145, column: 60, scope: !6863)
!6869 = !DILocation(line: 158, column: 16, scope: !6863)
!6870 = !DILocation(line: 158, column: 9, scope: !6863)
!6871 = distinct !DISubprogram(name: "rd_buf_write_pos", scope: !1709, file: !1709, line: 130, type: !6872, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6874)
!6872 = !DISubroutineType(types: !6873)
!6873 = !{!692, !1747}
!6874 = !{!6875, !6876}
!6875 = !DILocalVariable(name: "rbuf", arg: 1, scope: !6871, file: !1709, line: 130, type: !1747)
!6876 = !DILocalVariable(name: "seg", scope: !6871, file: !1709, line: 131, type: !1750)
!6877 = !DILocation(line: 130, column: 68, scope: !6871)
!6878 = !DILocation(line: 131, column: 9, scope: !6871)
!6879 = !DILocation(line: 131, column: 29, scope: !6871)
!6880 = !DILocation(line: 131, column: 35, scope: !6871)
!6881 = !DILocation(line: 131, column: 41, scope: !6871)
!6882 = !{!5211, !3911, i64 24}
!6883 = !DILocation(line: 133, column: 13, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6871, file: !1709, line: 133, column: 13)
!6885 = !DILocation(line: 133, column: 13, scope: !6871)
!6886 = !DILocation(line: 137, column: 17, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6884, file: !1709, line: 133, column: 29)
!6888 = !DILocation(line: 142, column: 16, scope: !6871)
!6889 = !DILocation(line: 142, column: 21, scope: !6871)
!6890 = !{!6891, !3942, i64 40}
!6891 = !{!"rd_segment_s", !3940, i64 0, !3911, i64 16, !3942, i64 24, !3942, i64 32, !3942, i64 40, !3911, i64 48, !3941, i64 56}
!6892 = !DILocation(line: 142, column: 33, scope: !6871)
!6893 = !DILocation(line: 142, column: 38, scope: !6871)
!6894 = !{!6891, !3942, i64 24}
!6895 = !DILocation(line: 142, column: 31, scope: !6871)
!6896 = !DILocation(line: 142, column: 9, scope: !6871)
!6897 = !DILocation(line: 143, column: 1, scope: !6871)
!6898 = !DISubprogram(name: "rd_slice_init", scope: !1709, file: !1709, line: 299, type: !6899, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6899 = !DISubroutineType(types: !6900)
!6900 = !{!126, !6901, !1747, !692, !692}
!6901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!6902 = !DISubprogram(name: "rd_slice_read", scope: !1709, file: !1709, line: 308, type: !6903, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!692, !6901, !607, !692}
!6905 = distinct !DISubprogram(name: "rd_slice_abs_offset", scope: !1709, file: !1709, line: 274, type: !6906, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6910)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!692, !6908}
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6909, size: 64)
!6909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1743)
!6910 = !{!6911}
!6911 = !DILocalVariable(name: "slice", arg: 1, scope: !6905, file: !1709, line: 274, type: !6908)
!6912 = !DILocation(line: 274, column: 73, scope: !6905)
!6913 = !DILocation(line: 275, column: 13, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6905, file: !1709, line: 275, column: 13)
!6915 = !{!5213, !3911, i64 8}
!6916 = !DILocation(line: 275, column: 13, scope: !6905)
!6917 = !DILocation(line: 276, column: 24, scope: !6914)
!6918 = !DILocation(line: 276, column: 31, scope: !6914)
!6919 = !{!5213, !3942, i64 32}
!6920 = !DILocation(line: 276, column: 17, scope: !6914)
!6921 = !DILocation(line: 278, column: 16, scope: !6905)
!6922 = !DILocation(line: 278, column: 23, scope: !6905)
!6923 = !DILocation(line: 278, column: 28, scope: !6905)
!6924 = !DILocation(line: 278, column: 40, scope: !6905)
!6925 = !DILocation(line: 278, column: 47, scope: !6905)
!6926 = !{!5213, !3942, i64 16}
!6927 = !DILocation(line: 278, column: 38, scope: !6905)
!6928 = !DILocation(line: 278, column: 9, scope: !6905)
!6929 = !DILocation(line: 279, column: 1, scope: !6905)
!6930 = !DISubprogram(name: "snprintf", scope: !6931, file: !6931, line: 378, type: !6932, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6931 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!6932 = !DISubroutineType(types: !6933)
!6933 = !{!126, !6934, !692, !6935, null}
!6934 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !559)
!6935 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !365)
!6936 = !DISubprogram(name: "strlen", scope: !6937, file: !6937, line: 407, type: !6938, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6937 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "f443da8025a0b7c1498fb6c554ec788d")
!6938 = !DISubroutineType(types: !6939)
!6939 = !{!349, !365}
!6940 = !DILocation(line: 96, column: 58, scope: !3485)
!6941 = !DILocation(line: 173, column: 13, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !3485, file: !360, line: 173, column: 13)
!6943 = !DILocation(line: 173, column: 20, scope: !6942)
!6944 = !DILocation(line: 173, column: 24, scope: !6942)
!6945 = !DILocation(line: 173, column: 27, scope: !6942)
!6946 = !DILocation(line: 173, column: 34, scope: !6942)
!6947 = !DILocation(line: 173, column: 62, scope: !6942)
!6948 = !DILocation(line: 174, column: 20, scope: !6942)
!6949 = !DILocation(line: 174, column: 14, scope: !6942)
!6950 = !DILocation(line: 173, column: 13, scope: !3485)
!6951 = !DILocation(line: 175, column: 17, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6942, file: !360, line: 174, column: 29)
!6953 = !DILocation(line: 176, column: 24, scope: !6952)
!6954 = !DILocation(line: 176, column: 17, scope: !6952)
!6955 = !DILocation(line: 179, column: 22, scope: !3485)
!6956 = !DILocation(line: 179, column: 16, scope: !3485)
!6957 = !DILocation(line: 179, column: 9, scope: !3485)
!6958 = !DILocation(line: 180, column: 1, scope: !3485)
!6959 = distinct !DISubprogram(name: "rd_slice_offset", scope: !1709, file: !1709, line: 285, type: !6906, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6960)
!6960 = !{!6961}
!6961 = !DILocalVariable(name: "slice", arg: 1, scope: !6959, file: !1709, line: 285, type: !6908)
!6962 = !DILocation(line: 285, column: 69, scope: !6959)
!6963 = !DILocation(line: 286, column: 13, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6959, file: !1709, line: 286, column: 13)
!6965 = !DILocation(line: 286, column: 13, scope: !6959)
!6966 = !DILocation(line: 287, column: 24, scope: !6964)
!6967 = !{!5213, !3942, i64 24}
!6968 = !DILocation(line: 287, column: 17, scope: !6964)
!6969 = !DILocation(line: 289, column: 17, scope: !6959)
!6970 = !DILocation(line: 289, column: 24, scope: !6959)
!6971 = !DILocation(line: 289, column: 29, scope: !6959)
!6972 = !DILocation(line: 289, column: 41, scope: !6959)
!6973 = !DILocation(line: 289, column: 48, scope: !6959)
!6974 = !DILocation(line: 289, column: 39, scope: !6959)
!6975 = !DILocation(line: 289, column: 55, scope: !6959)
!6976 = !DILocation(line: 289, column: 62, scope: !6959)
!6977 = !DILocation(line: 289, column: 53, scope: !6959)
!6978 = !DILocation(line: 289, column: 9, scope: !6959)
!6979 = !DILocation(line: 290, column: 1, scope: !6959)
!6980 = distinct !DISubprogram(name: "__bswap_32", scope: !6981, file: !6981, line: 49, type: !6982, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6984)
!6981 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/byteswap.h", directory: "", checksumkind: CSK_MD5, checksum: "98f83253ffd9c64e7486789204e9fa05")
!6982 = !DISubroutineType(types: !6983)
!6983 = !{!458, !458}
!6984 = !{!6985}
!6985 = !DILocalVariable(name: "__bsx", arg: 1, scope: !6980, file: !6981, line: 49, type: !458)
!6986 = !DILocation(line: 49, column: 24, scope: !6980)
!6987 = !DILocation(line: 54, column: 10, scope: !6980)
!6988 = !DILocation(line: 54, column: 3, scope: !6980)
!6989 = !DISubprogram(name: "rd_buf_write_ensure_contig", scope: !1709, file: !1709, line: 210, type: !6990, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{null, !6859, !692}
!6992 = distinct !DISubprogram(name: "rd_kafka_req_response", scope: !2, file: !2, line: 1844, type: !5485, scopeLine: 1845, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !6993)
!6993 = !{!6994, !6995, !6996, !6997, !6998, !7005, !7010, !7013, !7015, !7017, !7018, !7023, !7025, !7027, !7028, !7030, !7031, !7032, !7037, !7039, !7041, !7042, !7043, !7048, !7050, !7053, !7056, !7062, !7064}
!6994 = !DILocalVariable(name: "rkb", arg: 1, scope: !6992, file: !2, line: 1844, type: !412)
!6995 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !6992, file: !2, line: 1845, type: !1692)
!6996 = !DILocalVariable(name: "req", scope: !6992, file: !2, line: 1846, type: !1692)
!6997 = !DILocalVariable(name: "log_decode_errors", scope: !6992, file: !2, line: 1847, type: !126)
!6998 = !DILocalVariable(name: "_logname", scope: !6999, file: !2, line: 1857, type: !924)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !2, line: 1857, column: 17)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !2, line: 1857, column: 17)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !2, line: 1857, column: 17)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !2, line: 1857, column: 17)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !2, line: 1854, column: 64)
!7004 = distinct !DILexicalBlock(scope: !6992, file: !2, line: 1853, column: 13)
!7005 = !DILocalVariable(name: "_logname", scope: !7006, file: !2, line: 1869, type: !924)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !2, line: 1869, column: 9)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !2, line: 1869, column: 9)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !2, line: 1869, column: 9)
!7009 = distinct !DILexicalBlock(scope: !6992, file: !2, line: 1869, column: 9)
!7010 = !DILocalVariable(name: "_tagcnt", scope: !7011, file: !2, line: 1893, type: !937)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !2, line: 1893, column: 17)
!7012 = distinct !DILexicalBlock(scope: !6992, file: !2, line: 1892, column: 13)
!7013 = !DILocalVariable(name: "_v", scope: !7014, file: !2, line: 1893, type: !937)
!7014 = distinct !DILexicalBlock(scope: !7011, file: !2, line: 1893, column: 17)
!7015 = !DILocalVariable(name: "_vp", scope: !7014, file: !2, line: 1893, type: !7016)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!7017 = !DILocalVariable(name: "_r", scope: !7014, file: !2, line: 1893, type: !692)
!7018 = !DILocalVariable(name: "__tmpstr", scope: !7019, file: !2, line: 1893, type: !924)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !2, line: 1893, column: 17)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !2, line: 1893, column: 17)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !2, line: 1893, column: 17)
!7022 = distinct !DILexicalBlock(scope: !7014, file: !2, line: 1893, column: 17)
!7023 = !DILocalVariable(name: "_logname", scope: !7024, file: !2, line: 1893, type: !924)
!7024 = distinct !DILexicalBlock(scope: !7019, file: !2, line: 1893, column: 17)
!7025 = !DILocalVariable(name: "_tagtype", scope: !7026, file: !2, line: 1893, type: !937)
!7026 = distinct !DILexicalBlock(scope: !7011, file: !2, line: 1893, column: 17)
!7027 = !DILocalVariable(name: "_taglen", scope: !7026, file: !2, line: 1893, type: !937)
!7028 = !DILocalVariable(name: "_v", scope: !7029, file: !2, line: 1893, type: !937)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !2, line: 1893, column: 17)
!7030 = !DILocalVariable(name: "_vp", scope: !7029, file: !2, line: 1893, type: !7016)
!7031 = !DILocalVariable(name: "_r", scope: !7029, file: !2, line: 1893, type: !692)
!7032 = !DILocalVariable(name: "__tmpstr", scope: !7033, file: !2, line: 1893, type: !924)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !2, line: 1893, column: 17)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !2, line: 1893, column: 17)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !2, line: 1893, column: 17)
!7036 = distinct !DILexicalBlock(scope: !7029, file: !2, line: 1893, column: 17)
!7037 = !DILocalVariable(name: "_logname", scope: !7038, file: !2, line: 1893, type: !924)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !2, line: 1893, column: 17)
!7039 = !DILocalVariable(name: "_v", scope: !7040, file: !2, line: 1893, type: !937)
!7040 = distinct !DILexicalBlock(scope: !7026, file: !2, line: 1893, column: 17)
!7041 = !DILocalVariable(name: "_vp", scope: !7040, file: !2, line: 1893, type: !7016)
!7042 = !DILocalVariable(name: "_r", scope: !7040, file: !2, line: 1893, type: !692)
!7043 = !DILocalVariable(name: "__tmpstr", scope: !7044, file: !2, line: 1893, type: !924)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !2, line: 1893, column: 17)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !2, line: 1893, column: 17)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !2, line: 1893, column: 17)
!7047 = distinct !DILexicalBlock(scope: !7040, file: !2, line: 1893, column: 17)
!7048 = !DILocalVariable(name: "_logname", scope: !7049, file: !2, line: 1893, type: !924)
!7049 = distinct !DILexicalBlock(scope: !7044, file: !2, line: 1893, column: 17)
!7050 = !DILocalVariable(name: "__len1", scope: !7051, file: !2, line: 1893, type: !692)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !2, line: 1893, column: 17)
!7052 = distinct !DILexicalBlock(scope: !7026, file: !2, line: 1893, column: 17)
!7053 = !DILocalVariable(name: "__len0", scope: !7054, file: !2, line: 1893, type: !692)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !2, line: 1893, column: 17)
!7055 = distinct !DILexicalBlock(scope: !7051, file: !2, line: 1893, column: 17)
!7056 = !DILocalVariable(name: "__tmpstr", scope: !7057, file: !2, line: 1893, type: !924)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !2, line: 1893, column: 17)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !2, line: 1893, column: 17)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !2, line: 1893, column: 17)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !2, line: 1893, column: 17)
!7061 = distinct !DILexicalBlock(scope: !7054, file: !2, line: 1893, column: 17)
!7062 = !DILocalVariable(name: "_logname", scope: !7063, file: !2, line: 1893, type: !924)
!7063 = distinct !DILexicalBlock(scope: !7057, file: !2, line: 1893, column: 17)
!7064 = !DILabel(scope: !6992, name: "err_parse", file: !2, line: 1906)
!7065 = !DILocation(line: 1844, column: 53, scope: !6992)
!7066 = !DILocation(line: 1845, column: 50, scope: !6992)
!7067 = !DILocation(line: 1846, column: 9, scope: !6992)
!7068 = !DILocation(line: 1846, column: 25, scope: !6992)
!7069 = !DILocation(line: 1847, column: 9, scope: !6992)
!7070 = !DILocation(line: 1847, column: 13, scope: !6992)
!7071 = !DILocation(line: 1849, column: 9, scope: !6992)
!7072 = !DILocation(line: 1849, column: 9, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !2, line: 1849, column: 9)
!7074 = distinct !DILexicalBlock(scope: !6992, file: !2, line: 1849, column: 9)
!7075 = !DILocation(line: 1849, column: 9, scope: !7074)
!7076 = !DILocation(line: 1853, column: 13, scope: !7004)
!7077 = !{!5210, !3941, i64 196}
!7078 = !DILocation(line: 1853, column: 13, scope: !6992)
!7079 = !DILocation(line: 1856, column: 34, scope: !7003)
!7080 = !DILocation(line: 1856, column: 39, scope: !7003)
!7081 = !DILocation(line: 1856, column: 45, scope: !7003)
!7082 = !DILocation(line: 1856, column: 17, scope: !7003)
!7083 = !DILocation(line: 1857, column: 17, scope: !7003)
!7084 = !DILocation(line: 1857, column: 17, scope: !7001)
!7085 = !DILocation(line: 1857, column: 17, scope: !7002)
!7086 = !DILocation(line: 1857, column: 17, scope: !7000)
!7087 = !DILocation(line: 1857, column: 17, scope: !6999)
!7088 = !DILocation(line: 1862, column: 21, scope: !7003)
!7089 = !DILocation(line: 1862, column: 26, scope: !7003)
!7090 = !DILocation(line: 1862, column: 59, scope: !7003)
!7091 = !DILocation(line: 1862, column: 38, scope: !7003)
!7092 = !DILocation(line: 1862, column: 65, scope: !7003)
!7093 = !DILocation(line: 1862, column: 70, scope: !7003)
!7094 = !DILocation(line: 1863, column: 29, scope: !7003)
!7095 = !DILocation(line: 1863, column: 36, scope: !7003)
!7096 = !DILocation(line: 1863, column: 49, scope: !7003)
!7097 = !DILocation(line: 1863, column: 57, scope: !7003)
!7098 = !DILocation(line: 1863, column: 64, scope: !7003)
!7099 = !DILocation(line: 1861, column: 17, scope: !7003)
!7100 = !DILocation(line: 1865, column: 17, scope: !7003)
!7101 = !DILocation(line: 1865, column: 17, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !2, line: 1865, column: 17)
!7103 = distinct !DILexicalBlock(scope: !7003, file: !2, line: 1865, column: 17)
!7104 = !DILocation(line: 1865, column: 17, scope: !7103)
!7105 = !DILocation(line: 1866, column: 17, scope: !7003)
!7106 = !DILocation(line: 1869, column: 9, scope: !6992)
!7107 = !DILocation(line: 1869, column: 9, scope: !7008)
!7108 = !DILocation(line: 1869, column: 9, scope: !7009)
!7109 = !DILocation(line: 1869, column: 9, scope: !7007)
!7110 = !DILocation(line: 1869, column: 9, scope: !7006)
!7111 = !{!5210, !3942, i64 328}
!7112 = !DILocation(line: 1879, column: 9, scope: !6992)
!7113 = !DILocation(line: 1879, column: 16, scope: !6992)
!7114 = !DILocation(line: 1879, column: 31, scope: !6992)
!7115 = !DILocation(line: 1879, column: 36, scope: !6992)
!7116 = !{i64 0, i64 4, !3959, i64 4, i64 2, !3915, i64 6, i64 2, !3915, i64 8, i64 4, !3959}
!7117 = !DILocation(line: 1881, column: 14, scope: !6992)
!7118 = !DILocation(line: 1881, column: 19, scope: !6992)
!7119 = !DILocation(line: 1881, column: 31, scope: !6992)
!7120 = !DILocation(line: 1880, column: 9, scope: !6992)
!7121 = !DILocation(line: 1880, column: 16, scope: !6992)
!7122 = !DILocation(line: 1880, column: 28, scope: !6992)
!7123 = !DILocation(line: 1882, column: 32, scope: !6992)
!7124 = !DILocation(line: 1882, column: 37, scope: !6992)
!7125 = !DILocation(line: 1882, column: 9, scope: !6992)
!7126 = !DILocation(line: 1882, column: 16, scope: !6992)
!7127 = !DILocation(line: 1882, column: 30, scope: !6992)
!7128 = !DILocation(line: 1885, column: 24, scope: !6992)
!7129 = !DILocation(line: 1885, column: 31, scope: !6992)
!7130 = !DILocation(line: 1885, column: 46, scope: !6992)
!7131 = !DILocation(line: 1885, column: 53, scope: !6992)
!7132 = !DILocation(line: 1887, column: 35, scope: !6992)
!7133 = !DILocation(line: 1887, column: 42, scope: !6992)
!7134 = !DILocation(line: 1887, column: 23, scope: !6992)
!7135 = !DILocation(line: 1887, column: 53, scope: !6992)
!7136 = !DILocation(line: 1885, column: 9, scope: !6992)
!7137 = !DILocation(line: 1892, column: 13, scope: !7012)
!7138 = !DILocation(line: 1892, column: 18, scope: !7012)
!7139 = !DILocation(line: 1892, column: 31, scope: !7012)
!7140 = !DILocation(line: 1892, column: 38, scope: !7012)
!7141 = !DILocation(line: 1892, column: 13, scope: !6992)
!7142 = !DILocation(line: 1893, column: 17, scope: !7012)
!7143 = !DILocation(line: 1893, column: 17, scope: !7011)
!7144 = !DILocation(line: 1893, column: 17, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7011, file: !2, line: 1893, column: 17)
!7146 = !DILocation(line: 1893, column: 17, scope: !7014)
!7147 = !DILocation(line: 1893, column: 17, scope: !7022)
!7148 = !DILocation(line: 1893, column: 17, scope: !7020)
!7149 = !DILocation(line: 1893, column: 17, scope: !7021)
!7150 = !DILocation(line: 1893, column: 17, scope: !7019)
!7151 = !DILocation(line: 1893, column: 17, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7019, file: !2, line: 1893, column: 17)
!7153 = !DILocation(line: 1893, column: 17, scope: !7024)
!7154 = !DILocation(line: 1893, column: 17, scope: !7026)
!7155 = !DILocation(line: 1893, column: 17, scope: !7029)
!7156 = !DILocation(line: 1893, column: 17, scope: !7036)
!7157 = !DILocation(line: 1893, column: 17, scope: !7034)
!7158 = !DILocation(line: 1893, column: 17, scope: !7035)
!7159 = !DILocation(line: 1893, column: 17, scope: !7033)
!7160 = !DILocation(line: 1893, column: 17, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7033, file: !2, line: 1893, column: 17)
!7162 = !DILocation(line: 1893, column: 17, scope: !7038)
!7163 = !DILocation(line: 1893, column: 17, scope: !7040)
!7164 = !DILocation(line: 1893, column: 17, scope: !7047)
!7165 = !DILocation(line: 1893, column: 17, scope: !7045)
!7166 = !DILocation(line: 1893, column: 17, scope: !7046)
!7167 = !DILocation(line: 1893, column: 17, scope: !7044)
!7168 = !DILocation(line: 1893, column: 17, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7044, file: !2, line: 1893, column: 17)
!7170 = !DILocation(line: 1893, column: 17, scope: !7049)
!7171 = !DILocation(line: 1893, column: 17, scope: !7052)
!7172 = !DILocation(line: 1893, column: 17, scope: !7051)
!7173 = !DILocation(line: 1893, column: 17, scope: !7055)
!7174 = !DILocation(line: 1893, column: 17, scope: !7054)
!7175 = !DILocation(line: 1893, column: 17, scope: !7061)
!7176 = !DILocation(line: 1893, column: 17, scope: !7060)
!7177 = !DILocation(line: 1893, column: 17, scope: !7058)
!7178 = !DILocation(line: 1893, column: 17, scope: !7059)
!7179 = !DILocation(line: 1893, column: 17, scope: !7057)
!7180 = !DILocation(line: 1893, column: 17, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7057, file: !2, line: 1893, column: 17)
!7182 = !DILocation(line: 1893, column: 17, scope: !7063)
!7183 = distinct !{!7183, !7143, !7143, !4095}
!7184 = !DILocation(line: 1895, column: 14, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !6992, file: !2, line: 1895, column: 13)
!7186 = !DILocation(line: 1895, column: 21, scope: !7185)
!7187 = !DILocation(line: 1895, column: 13, scope: !6992)
!7188 = !DILocation(line: 1896, column: 36, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7185, file: !2, line: 1895, column: 32)
!7190 = !DILocation(line: 1896, column: 17, scope: !7189)
!7191 = !DILocation(line: 1896, column: 24, scope: !7189)
!7192 = !DILocation(line: 1896, column: 34, scope: !7189)
!7193 = !DILocation(line: 1897, column: 17, scope: !7189)
!7194 = !DILocation(line: 1898, column: 9, scope: !7189)
!7195 = !DILocation(line: 1899, column: 17, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !2, line: 1899, column: 17)
!7197 = distinct !DILexicalBlock(scope: !7185, file: !2, line: 1899, column: 17)
!7198 = !DILocation(line: 1899, column: 17, scope: !7197)
!7199 = !DILocation(line: 1902, column: 31, scope: !6992)
!7200 = !DILocation(line: 1902, column: 36, scope: !6992)
!7201 = !DILocation(line: 1902, column: 44, scope: !6992)
!7202 = !DILocation(line: 1902, column: 52, scope: !6992)
!7203 = !DILocation(line: 1902, column: 59, scope: !6992)
!7204 = !DILocation(line: 1902, column: 9, scope: !6992)
!7205 = !DILocation(line: 1904, column: 9, scope: !6992)
!7206 = !DILocation(line: 1906, column: 1, scope: !6992)
!7207 = !DILocation(line: 1907, column: 26, scope: !6992)
!7208 = !DILocation(line: 1907, column: 31, scope: !6992)
!7209 = !DILocation(line: 1907, column: 37, scope: !6992)
!7210 = !DILocation(line: 1907, column: 9, scope: !6992)
!7211 = !DILocation(line: 1908, column: 31, scope: !6992)
!7212 = !DILocation(line: 1908, column: 36, scope: !6992)
!7213 = !DILocation(line: 1908, column: 44, scope: !6992)
!7214 = !DILocation(line: 1908, column: 49, scope: !6992)
!7215 = !DILocation(line: 1908, column: 56, scope: !6992)
!7216 = !DILocation(line: 1908, column: 73, scope: !6992)
!7217 = !DILocation(line: 1908, column: 9, scope: !6992)
!7218 = !DILocation(line: 1909, column: 9, scope: !6992)
!7219 = !DILocation(line: 1909, column: 9, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !2, line: 1909, column: 9)
!7221 = distinct !DILexicalBlock(scope: !6992, file: !2, line: 1909, column: 9)
!7222 = !DILocation(line: 1909, column: 9, scope: !7221)
!7223 = !DILocation(line: 1910, column: 9, scope: !6992)
!7224 = !DILocation(line: 1911, column: 1, scope: !6992)
!7225 = !DISubprogram(name: "strcmp", scope: !6937, file: !6937, line: 156, type: !7226, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7226 = !DISubroutineType(types: !7227)
!7227 = !{!126, !365, !365}
!7228 = distinct !DISubprogram(name: "rd_kafka_socket_cb_linux", scope: !2, file: !2, line: 2041, type: !1329, scopeLine: 2041, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7229)
!7229 = !{!7230, !7231, !7232, !7233}
!7230 = !DILocalVariable(name: "domain", arg: 1, scope: !7228, file: !2, line: 2041, type: !126)
!7231 = !DILocalVariable(name: "type", arg: 2, scope: !7228, file: !2, line: 2041, type: !126)
!7232 = !DILocalVariable(name: "protocol", arg: 3, scope: !7228, file: !2, line: 2041, type: !126)
!7233 = !DILocalVariable(name: "opaque", arg: 4, scope: !7228, file: !2, line: 2041, type: !607)
!7234 = !DILocation(line: 2041, column: 34, scope: !7228)
!7235 = !DILocation(line: 2041, column: 46, scope: !7228)
!7236 = !DILocation(line: 2041, column: 56, scope: !7228)
!7237 = !DILocation(line: 2041, column: 72, scope: !7228)
!7238 = !DILocation(line: 2043, column: 23, scope: !7228)
!7239 = !DILocation(line: 2043, column: 31, scope: !7228)
!7240 = !DILocation(line: 2043, column: 36, scope: !7228)
!7241 = !DILocation(line: 2043, column: 52, scope: !7228)
!7242 = !DILocation(line: 2043, column: 16, scope: !7228)
!7243 = !DILocation(line: 2043, column: 9, scope: !7228)
!7244 = !DISubprogram(name: "socket", scope: !7245, file: !7245, line: 102, type: !7246, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7245 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/socket.h", directory: "", checksumkind: CSK_MD5, checksum: "dec166690c7633bc0eaee5d9f221c324")
!7246 = !DISubroutineType(types: !7247)
!7247 = !{!126, !126, !126, !126}
!7248 = distinct !DISubprogram(name: "rd_kafka_socket_cb_generic", scope: !2, file: !2, line: 2053, type: !1329, scopeLine: 2056, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7249)
!7249 = !{!7250, !7251, !7252, !7253, !7254, !7255}
!7250 = !DILocalVariable(name: "domain", arg: 1, scope: !7248, file: !2, line: 2053, type: !126)
!7251 = !DILocalVariable(name: "type", arg: 2, scope: !7248, file: !2, line: 2054, type: !126)
!7252 = !DILocalVariable(name: "protocol", arg: 3, scope: !7248, file: !2, line: 2055, type: !126)
!7253 = !DILocalVariable(name: "opaque", arg: 4, scope: !7248, file: !2, line: 2056, type: !607)
!7254 = !DILocalVariable(name: "s", scope: !7248, file: !2, line: 2057, type: !126)
!7255 = !DILocalVariable(name: "on", scope: !7248, file: !2, line: 2058, type: !126)
!7256 = !DILocation(line: 2053, column: 36, scope: !7248)
!7257 = !DILocation(line: 2054, column: 36, scope: !7248)
!7258 = !DILocation(line: 2055, column: 36, scope: !7248)
!7259 = !DILocation(line: 2056, column: 38, scope: !7248)
!7260 = !DILocation(line: 2057, column: 9, scope: !7248)
!7261 = !DILocation(line: 2057, column: 13, scope: !7248)
!7262 = !DILocation(line: 2058, column: 9, scope: !7248)
!7263 = !DILocation(line: 2058, column: 13, scope: !7248)
!7264 = !DILocation(line: 2059, column: 30, scope: !7248)
!7265 = !DILocation(line: 2059, column: 38, scope: !7248)
!7266 = !DILocation(line: 2059, column: 44, scope: !7248)
!7267 = !DILocation(line: 2059, column: 23, scope: !7248)
!7268 = !DILocation(line: 2059, column: 16, scope: !7248)
!7269 = !DILocation(line: 2060, column: 13, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7248, file: !2, line: 2060, column: 13)
!7271 = !DILocation(line: 2060, column: 15, scope: !7270)
!7272 = !DILocation(line: 2060, column: 13, scope: !7248)
!7273 = !DILocation(line: 2061, column: 17, scope: !7270)
!7274 = !DILocation(line: 2063, column: 19, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7248, file: !2, line: 2063, column: 13)
!7276 = !DILocation(line: 2063, column: 13, scope: !7275)
!7277 = !DILocation(line: 2063, column: 48, scope: !7275)
!7278 = !DILocation(line: 2063, column: 13, scope: !7248)
!7279 = !DILocation(line: 2064, column: 25, scope: !7275)
!7280 = !DILocation(line: 2067, column: 51, scope: !7275)
!7281 = !DILocation(line: 2067, column: 39, scope: !7275)
!7282 = !DILocation(line: 2064, column: 17, scope: !7275)
!7283 = !DILocation(line: 2069, column: 16, scope: !7248)
!7284 = !DILocation(line: 2069, column: 9, scope: !7248)
!7285 = !DILocation(line: 2070, column: 1, scope: !7248)
!7286 = !DISubprogram(name: "fcntl", scope: !7287, file: !7287, line: 149, type: !7288, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7287 = !DIFile(filename: "/usr/include/fcntl.h", directory: "", checksumkind: CSK_MD5, checksum: "1a9bb91818c37dc7bc291ca6e49fc221")
!7288 = !DISubroutineType(types: !7289)
!7289 = !{!126, !126, !126, null}
!7290 = !DISubprogram(name: "fprintf", scope: !6931, file: !6931, line: 350, type: !7291, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7291 = !DISubroutineType(types: !7292)
!7292 = !{!126, !7293, !6935, null}
!7293 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2568)
!7294 = !DILocation(line: 109, column: 56, scope: !3515)
!7295 = !DILocation(line: 113, column: 27, scope: !3515)
!7296 = !DILocation(line: 113, column: 32, scope: !3515)
!7297 = !DILocation(line: 113, column: 16, scope: !3515)
!7298 = !DILocation(line: 113, column: 9, scope: !3515)
!7299 = !DISubprogram(name: "__errno_location", scope: !7300, file: !7300, line: 37, type: !7301, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7300 = !DIFile(filename: "/usr/include/errno.h", directory: "", checksumkind: CSK_MD5, checksum: "01c14bf4ab600a3884f5da68eb763170")
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!1067}
!7303 = distinct !DISubprogram(name: "rd_kafka_broker_connect_up", scope: !2, file: !2, line: 2247, type: !1583, scopeLine: 2247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7304)
!7304 = !{!7305}
!7305 = !DILocalVariable(name: "rkb", arg: 1, scope: !7303, file: !2, line: 2247, type: !412)
!7306 = !DILocation(line: 2247, column: 52, scope: !7303)
!7307 = !DILocation(line: 2249, column: 39, scope: !7303)
!7308 = !DILocation(line: 2249, column: 44, scope: !7303)
!7309 = !DILocation(line: 2249, column: 52, scope: !7303)
!7310 = !DILocation(line: 2249, column: 60, scope: !7303)
!7311 = !{!4141, !3941, i64 592}
!7312 = !DILocation(line: 2249, column: 9, scope: !7303)
!7313 = !DILocation(line: 2249, column: 14, scope: !7303)
!7314 = !DILocation(line: 2249, column: 37, scope: !7303)
!7315 = !{!3939, !3941, i64 1000}
!7316 = !DILocation(line: 2250, column: 9, scope: !7303)
!7317 = !DILocation(line: 2250, column: 14, scope: !7303)
!7318 = !DILocation(line: 2250, column: 37, scope: !7303)
!7319 = !DILocation(line: 2252, column: 9, scope: !7303)
!7320 = !DILocation(line: 2253, column: 35, scope: !7303)
!7321 = !DILocation(line: 2253, column: 9, scope: !7303)
!7322 = !DILocation(line: 2254, column: 9, scope: !7303)
!7323 = !DILocation(line: 2260, column: 23, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7303, file: !2, line: 2259, column: 13)
!7325 = !DILocation(line: 2259, column: 13, scope: !7324)
!7326 = !DILocation(line: 2260, column: 66, scope: !7324)
!7327 = !DILocation(line: 2259, column: 13, scope: !7303)
!7328 = !DILocation(line: 2262, column: 57, scope: !7324)
!7329 = !DILocation(line: 2262, column: 17, scope: !7324)
!7330 = !DILocation(line: 2263, column: 1, scope: !7303)
!7331 = !DISubprogram(name: "rd_kafka_metadata_refresh_brokers", scope: !814, file: !814, line: 140, type: !7332, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7332 = !DISubroutineType(types: !7333)
!7333 = !{!550, !586, !412, !365}
!7334 = distinct !DISubprogram(name: "rd_kafka_broker_connect_done", scope: !2, file: !2, line: 2552, type: !7335, scopeLine: 2552, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7337)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{null, !412, !365}
!7337 = !{!7338, !7339, !7340}
!7338 = !DILocalVariable(name: "rkb", arg: 1, scope: !7334, file: !2, line: 2552, type: !412)
!7339 = !DILocalVariable(name: "errstr", arg: 2, scope: !7334, file: !2, line: 2552, type: !365)
!7340 = !DILocalVariable(name: "_logname", scope: !7341, file: !2, line: 2563, type: !924)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !2, line: 2563, column: 9)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !2, line: 2563, column: 9)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !2, line: 2563, column: 9)
!7344 = distinct !DILexicalBlock(scope: !7334, file: !2, line: 2563, column: 9)
!7345 = !DILocation(line: 2552, column: 54, scope: !7334)
!7346 = !DILocation(line: 2552, column: 71, scope: !7334)
!7347 = !DILocation(line: 2554, column: 13, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7334, file: !2, line: 2554, column: 13)
!7349 = !DILocation(line: 2554, column: 13, scope: !7334)
!7350 = !DILocation(line: 2556, column: 38, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7348, file: !2, line: 2554, column: 21)
!7352 = !DILocation(line: 2557, column: 44, scope: !7351)
!7353 = !DILocation(line: 2556, column: 17, scope: !7351)
!7354 = !DILocation(line: 2558, column: 17, scope: !7351)
!7355 = !DILocation(line: 2562, column: 9, scope: !7334)
!7356 = !DILocation(line: 2562, column: 14, scope: !7334)
!7357 = !DILocation(line: 2562, column: 24, scope: !7334)
!7358 = !{!3939, !3941, i64 60}
!7359 = !DILocation(line: 2563, column: 9, scope: !7334)
!7360 = !DILocation(line: 2563, column: 9, scope: !7343)
!7361 = !DILocation(line: 2563, column: 9, scope: !7344)
!7362 = !DILocation(line: 2563, column: 9, scope: !7342)
!7363 = !DILocation(line: 2563, column: 9, scope: !7341)
!7364 = !DILocation(line: 2565, column: 9, scope: !7334)
!7365 = !DILocation(line: 2565, column: 14, scope: !7334)
!7366 = !DILocation(line: 2565, column: 31, scope: !7334)
!7367 = !DILocation(line: 2569, column: 37, scope: !7334)
!7368 = !DILocation(line: 2569, column: 42, scope: !7334)
!7369 = !DILocation(line: 2569, column: 9, scope: !7334)
!7370 = !DILocation(line: 2571, column: 9, scope: !7334)
!7371 = !DILocation(line: 2573, column: 13, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7334, file: !2, line: 2573, column: 13)
!7373 = !DILocation(line: 2573, column: 18, scope: !7372)
!7374 = !DILocation(line: 2573, column: 26, scope: !7372)
!7375 = !DILocation(line: 2573, column: 34, scope: !7372)
!7376 = !{!4141, !3941, i64 716}
!7377 = !DILocation(line: 2573, column: 54, scope: !7372)
!7378 = !DILocation(line: 2574, column: 13, scope: !7372)
!7379 = !DILocation(line: 2574, column: 74, scope: !7372)
!7380 = !DILocation(line: 2573, column: 13, scope: !7334)
!7381 = !DILocation(line: 2576, column: 48, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7372, file: !2, line: 2574, column: 79)
!7383 = !DILocation(line: 2576, column: 17, scope: !7382)
!7384 = !DILocation(line: 2578, column: 9, scope: !7382)
!7385 = !DILocation(line: 2580, column: 15, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7334, file: !2, line: 2580, column: 13)
!7387 = !DILocation(line: 2580, column: 20, scope: !7386)
!7388 = !DILocation(line: 2580, column: 33, scope: !7386)
!7389 = !DILocation(line: 2580, column: 13, scope: !7334)
!7390 = !DILocation(line: 2587, column: 50, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7386, file: !2, line: 2580, column: 65)
!7392 = !DILocation(line: 2587, column: 17, scope: !7391)
!7393 = !DILocation(line: 2588, column: 9, scope: !7391)
!7394 = !DILocation(line: 2590, column: 13, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7334, file: !2, line: 2590, column: 13)
!7396 = !DILocation(line: 2590, column: 18, scope: !7395)
!7397 = !DILocation(line: 2590, column: 31, scope: !7395)
!7398 = !DILocation(line: 2590, column: 13, scope: !7334)
!7399 = !DILocation(line: 2597, column: 21, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7395, file: !2, line: 2590, column: 62)
!7401 = !DILocation(line: 2596, column: 17, scope: !7400)
!7402 = !DILocation(line: 2598, column: 17, scope: !7400)
!7403 = !DILocation(line: 2601, column: 21, scope: !7400)
!7404 = !DILocation(line: 2602, column: 21, scope: !7400)
!7405 = !{!4652, !3911, i64 0}
!7406 = !{!4652, !3941, i64 8}
!7407 = !DILocation(line: 2600, column: 17, scope: !7400)
!7408 = !DILocation(line: 2604, column: 9, scope: !7400)
!7409 = !DILocation(line: 2605, column: 17, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7395, file: !2, line: 2604, column: 16)
!7411 = !DILocation(line: 2608, column: 46, scope: !7410)
!7412 = !DILocation(line: 2608, column: 17, scope: !7410)
!7413 = !DILocation(line: 2610, column: 1, scope: !7334)
!7414 = !DISubprogram(name: "rd_kafka_transport_poll_set", scope: !497, file: !497, line: 78, type: !7415, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7415 = !DISubroutineType(types: !7416)
!7416 = !{null, !495, !126}
!7417 = distinct !DISubprogram(name: "rd_interval0", scope: !726, file: !726, line: 66, type: !7418, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7421)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{!487, !7420, !487, !487, !126}
!7420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!7421 = !{!7422, !7423, !7424, !7425, !7426}
!7422 = !DILocalVariable(name: "ri", arg: 1, scope: !7417, file: !726, line: 66, type: !7420)
!7423 = !DILocalVariable(name: "interval_us", arg: 2, scope: !7417, file: !726, line: 67, type: !487)
!7424 = !DILocalVariable(name: "now", arg: 3, scope: !7417, file: !726, line: 68, type: !487)
!7425 = !DILocalVariable(name: "immediate", arg: 4, scope: !7417, file: !726, line: 69, type: !126)
!7426 = !DILocalVariable(name: "diff", scope: !7417, file: !726, line: 70, type: !487)
!7427 = !DILocation(line: 66, column: 64, scope: !7417)
!7428 = !DILocation(line: 67, column: 57, scope: !7417)
!7429 = !DILocation(line: 68, column: 57, scope: !7417)
!7430 = !DILocation(line: 69, column: 53, scope: !7417)
!7431 = !DILocation(line: 70, column: 9, scope: !7417)
!7432 = !DILocation(line: 70, column: 17, scope: !7417)
!7433 = !DILocation(line: 72, column: 14, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7417, file: !726, line: 72, column: 13)
!7435 = !DILocation(line: 72, column: 13, scope: !7417)
!7436 = !DILocation(line: 73, column: 23, scope: !7434)
!7437 = !DILocation(line: 73, column: 21, scope: !7434)
!7438 = !DILocation(line: 73, column: 17, scope: !7434)
!7439 = !DILocation(line: 74, column: 14, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7417, file: !726, line: 74, column: 13)
!7441 = !DILocation(line: 74, column: 13, scope: !7417)
!7442 = !DILocation(line: 75, column: 31, scope: !7440)
!7443 = !DILocation(line: 75, column: 35, scope: !7440)
!7444 = !{!3943, !3942, i64 8}
!7445 = !DILocation(line: 75, column: 29, scope: !7440)
!7446 = !DILocation(line: 75, column: 17, scope: !7440)
!7447 = !DILocation(line: 77, column: 13, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7417, file: !726, line: 77, column: 13)
!7449 = !DILocation(line: 77, column: 17, scope: !7448)
!7450 = !{!3943, !3942, i64 0}
!7451 = !DILocation(line: 77, column: 28, scope: !7448)
!7452 = !DILocation(line: 77, column: 32, scope: !7448)
!7453 = !DILocation(line: 77, column: 13, scope: !7417)
!7454 = !DILocation(line: 78, column: 24, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7448, file: !726, line: 77, column: 43)
!7456 = !DILocation(line: 78, column: 31, scope: !7455)
!7457 = !DILocation(line: 78, column: 35, scope: !7455)
!7458 = !DILocation(line: 78, column: 48, scope: !7455)
!7459 = !DILocation(line: 78, column: 46, scope: !7455)
!7460 = !DILocation(line: 78, column: 62, scope: !7455)
!7461 = !DILocation(line: 78, column: 66, scope: !7455)
!7462 = !{!3943, !3941, i64 16}
!7463 = !DILocation(line: 78, column: 60, scope: !7455)
!7464 = !DILocation(line: 78, column: 28, scope: !7455)
!7465 = !DILocation(line: 78, column: 22, scope: !7455)
!7466 = !DILocation(line: 79, column: 9, scope: !7455)
!7467 = !DILocation(line: 80, column: 22, scope: !7448)
!7468 = !DILocation(line: 81, column: 13, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7417, file: !726, line: 81, column: 13)
!7470 = !DILocation(line: 81, column: 13, scope: !7417)
!7471 = !DILocation(line: 82, column: 34, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7469, file: !726, line: 81, column: 33)
!7473 = !DILocation(line: 82, column: 17, scope: !7472)
!7474 = !DILocation(line: 82, column: 21, scope: !7472)
!7475 = !DILocation(line: 82, column: 32, scope: !7472)
!7476 = !DILocation(line: 83, column: 17, scope: !7472)
!7477 = !DILocation(line: 83, column: 21, scope: !7472)
!7478 = !DILocation(line: 83, column: 32, scope: !7472)
!7479 = !DILocation(line: 84, column: 9, scope: !7472)
!7480 = !DILocation(line: 86, column: 16, scope: !7417)
!7481 = !DILocation(line: 87, column: 1, scope: !7417)
!7482 = !DILocation(line: 86, column: 9, scope: !7417)
!7483 = distinct !DISubprogram(name: "rd_kafka_broker_feature_enable", scope: !2, file: !2, line: 187, type: !4116, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7484)
!7484 = !{!7485, !7486, !7487}
!7485 = !DILocalVariable(name: "rkb", arg: 1, scope: !7483, file: !2, line: 187, type: !412)
!7486 = !DILocalVariable(name: "features", arg: 2, scope: !7483, file: !2, line: 188, type: !126)
!7487 = !DILocalVariable(name: "_logname", scope: !7488, file: !2, line: 193, type: !924)
!7488 = distinct !DILexicalBlock(scope: !7489, file: !2, line: 193, column: 9)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !2, line: 193, column: 9)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !2, line: 193, column: 9)
!7491 = distinct !DILexicalBlock(scope: !7483, file: !2, line: 193, column: 9)
!7492 = !DILocation(line: 187, column: 63, scope: !7483)
!7493 = !DILocation(line: 188, column: 48, scope: !7483)
!7494 = !DILocation(line: 189, column: 13, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7483, file: !2, line: 189, column: 13)
!7496 = !DILocation(line: 189, column: 24, scope: !7495)
!7497 = !DILocation(line: 189, column: 29, scope: !7495)
!7498 = !DILocation(line: 189, column: 22, scope: !7495)
!7499 = !DILocation(line: 189, column: 13, scope: !7483)
!7500 = !DILocation(line: 190, column: 17, scope: !7495)
!7501 = !DILocation(line: 192, column: 30, scope: !7483)
!7502 = !DILocation(line: 192, column: 9, scope: !7483)
!7503 = !DILocation(line: 192, column: 14, scope: !7483)
!7504 = !DILocation(line: 192, column: 27, scope: !7483)
!7505 = !DILocation(line: 193, column: 9, scope: !7483)
!7506 = !DILocation(line: 193, column: 9, scope: !7490)
!7507 = !DILocation(line: 193, column: 9, scope: !7491)
!7508 = !DILocation(line: 193, column: 9, scope: !7489)
!7509 = !DILocation(line: 193, column: 9, scope: !7488)
!7510 = !DILocation(line: 197, column: 1, scope: !7483)
!7511 = distinct !DISubprogram(name: "rd_kafka_broker_set_api_versions", scope: !2, file: !2, line: 2422, type: !7512, scopeLine: 2424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7514)
!7512 = !DISubroutineType(types: !7513)
!7513 = !{null, !412, !2345, !692}
!7514 = !{!7515, !7516, !7517, !7518}
!7515 = !DILocalVariable(name: "rkb", arg: 1, scope: !7511, file: !2, line: 2422, type: !412)
!7516 = !DILocalVariable(name: "apis", arg: 2, scope: !7511, file: !2, line: 2423, type: !2345)
!7517 = !DILocalVariable(name: "api_cnt", arg: 3, scope: !7511, file: !2, line: 2424, type: !692)
!7518 = !DILocalVariable(name: "_logname", scope: !7519, file: !2, line: 2431, type: !924)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !2, line: 2431, column: 17)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !2, line: 2431, column: 17)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !2, line: 2431, column: 17)
!7522 = distinct !DILexicalBlock(scope: !7523, file: !2, line: 2431, column: 17)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !2, line: 2430, column: 20)
!7524 = distinct !DILexicalBlock(scope: !7511, file: !2, line: 2430, column: 13)
!7525 = !DILocation(line: 2422, column: 65, scope: !7511)
!7526 = !DILocation(line: 2423, column: 74, scope: !7511)
!7527 = !DILocation(line: 2424, column: 53, scope: !7511)
!7528 = !DILocation(line: 2426, column: 13, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7511, file: !2, line: 2426, column: 13)
!7530 = !DILocation(line: 2426, column: 18, scope: !7529)
!7531 = !DILocation(line: 2426, column: 13, scope: !7511)
!7532 = !DILocation(line: 2427, column: 25, scope: !7529)
!7533 = !DILocation(line: 2427, column: 30, scope: !7529)
!7534 = !DILocation(line: 2427, column: 17, scope: !7529)
!7535 = !DILocation(line: 2430, column: 14, scope: !7524)
!7536 = !DILocation(line: 2430, column: 13, scope: !7511)
!7537 = !DILocation(line: 2431, column: 17, scope: !7523)
!7538 = !DILocation(line: 2431, column: 17, scope: !7521)
!7539 = !DILocation(line: 2431, column: 17, scope: !7522)
!7540 = !DILocation(line: 2431, column: 17, scope: !7520)
!7541 = !DILocation(line: 2431, column: 17, scope: !7519)
!7542 = !{!4141, !3911, i64 728}
!7543 = !DILocation(line: 2438, column: 21, scope: !7523)
!7544 = !DILocation(line: 2438, column: 26, scope: !7523)
!7545 = !DILocation(line: 2438, column: 34, scope: !7523)
!7546 = !DILocation(line: 2438, column: 42, scope: !7523)
!7547 = !DILocation(line: 2439, column: 31, scope: !7523)
!7548 = !DILocation(line: 2439, column: 36, scope: !7523)
!7549 = !DILocation(line: 2439, column: 44, scope: !7523)
!7550 = !DILocation(line: 2439, column: 52, scope: !7523)
!7551 = !DILocation(line: 2437, column: 17, scope: !7523)
!7552 = !DILocation(line: 2442, column: 43, scope: !7523)
!7553 = !DILocation(line: 2442, column: 49, scope: !7523)
!7554 = !DILocation(line: 2442, column: 17, scope: !7523)
!7555 = !DILocation(line: 2443, column: 9, scope: !7523)
!7556 = !DILocation(line: 2445, column: 36, scope: !7511)
!7557 = !DILocation(line: 2445, column: 9, scope: !7511)
!7558 = !DILocation(line: 2445, column: 14, scope: !7511)
!7559 = !DILocation(line: 2445, column: 34, scope: !7511)
!7560 = !DILocation(line: 2446, column: 36, scope: !7511)
!7561 = !DILocation(line: 2446, column: 9, scope: !7511)
!7562 = !DILocation(line: 2446, column: 14, scope: !7511)
!7563 = !DILocation(line: 2446, column: 34, scope: !7511)
!7564 = !DILocation(line: 2450, column: 13, scope: !7511)
!7565 = !DILocation(line: 2450, column: 42, scope: !7511)
!7566 = !DILocation(line: 2450, column: 47, scope: !7511)
!7567 = !DILocation(line: 2450, column: 53, scope: !7511)
!7568 = !DILocation(line: 2450, column: 18, scope: !7511)
!7569 = !DILocation(line: 2449, column: 9, scope: !7511)
!7570 = !DILocation(line: 2451, column: 1, scope: !7511)
!7571 = !DISubprogram(name: "rd_kafka_ApiVersionRequest", scope: !7572, file: !7572, line: 273, type: !7573, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7572 = !DIFile(filename: "./rdkafka_request.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "a6d1c4aa087c7d98868fdb55b0ce1654")
!7573 = !DISubroutineType(types: !7574)
!7574 = !{null, !412, !862, !569, !1688, !607}
!7575 = distinct !DISubprogram(name: "rd_kafka_broker_handle_ApiVersion", scope: !2, file: !2, line: 2457, type: !1690, scopeLine: 2462, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7576)
!7576 = !{!7577, !7578, !7579, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7589, !7593}
!7577 = !DILocalVariable(name: "rk", arg: 1, scope: !7575, file: !2, line: 2457, type: !586)
!7578 = !DILocalVariable(name: "rkb", arg: 2, scope: !7575, file: !2, line: 2458, type: !412)
!7579 = !DILocalVariable(name: "err", arg: 3, scope: !7575, file: !2, line: 2459, type: !550)
!7580 = !DILocalVariable(name: "rkbuf", arg: 4, scope: !7575, file: !2, line: 2460, type: !1692)
!7581 = !DILocalVariable(name: "request", arg: 5, scope: !7575, file: !2, line: 2461, type: !1692)
!7582 = !DILocalVariable(name: "opaque", arg: 6, scope: !7575, file: !2, line: 2462, type: !607)
!7583 = !DILocalVariable(name: "apis", scope: !7575, file: !2, line: 2463, type: !2345)
!7584 = !DILocalVariable(name: "api_cnt", scope: !7575, file: !2, line: 2464, type: !692)
!7585 = !DILocalVariable(name: "retry_ApiVersion", scope: !7575, file: !2, line: 2465, type: !862)
!7586 = !DILocalVariable(name: "i", scope: !7587, file: !2, line: 2476, type: !692)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !2, line: 2475, column: 59)
!7588 = distinct !DILexicalBlock(scope: !7575, file: !2, line: 2475, column: 13)
!7589 = !DILocalVariable(name: "_logname", scope: !7590, file: !2, line: 2495, type: !924)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !2, line: 2495, column: 17)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !2, line: 2494, column: 62)
!7592 = distinct !DILexicalBlock(scope: !7588, file: !2, line: 2494, column: 20)
!7593 = !DILocalVariable(name: "_logname", scope: !7594, file: !2, line: 2512, type: !924)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !2, line: 2512, column: 17)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !2, line: 2512, column: 17)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !2, line: 2512, column: 17)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !2, line: 2512, column: 17)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !2, line: 2510, column: 37)
!7599 = distinct !DILexicalBlock(scope: !7575, file: !2, line: 2510, column: 13)
!7600 = !DILocation(line: 2457, column: 59, scope: !7575)
!7601 = !DILocation(line: 2458, column: 66, scope: !7575)
!7602 = !DILocation(line: 2459, column: 67, scope: !7575)
!7603 = !DILocation(line: 2460, column: 63, scope: !7575)
!7604 = !DILocation(line: 2461, column: 63, scope: !7575)
!7605 = !DILocation(line: 2462, column: 53, scope: !7575)
!7606 = !DILocation(line: 2463, column: 9, scope: !7575)
!7607 = !DILocation(line: 2463, column: 37, scope: !7575)
!7608 = !DILocation(line: 2464, column: 9, scope: !7575)
!7609 = !DILocation(line: 2464, column: 16, scope: !7575)
!7610 = !DILocation(line: 2465, column: 9, scope: !7575)
!7611 = !DILocation(line: 2465, column: 17, scope: !7575)
!7612 = !DILocation(line: 2467, column: 13, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7575, file: !2, line: 2467, column: 13)
!7614 = !DILocation(line: 2467, column: 17, scope: !7613)
!7615 = !DILocation(line: 2467, column: 13, scope: !7575)
!7616 = !DILocation(line: 2468, column: 17, scope: !7613)
!7617 = !DILocation(line: 2470, column: 42, scope: !7575)
!7618 = !DILocation(line: 2470, column: 46, scope: !7575)
!7619 = !DILocation(line: 2470, column: 51, scope: !7575)
!7620 = !DILocation(line: 2470, column: 56, scope: !7575)
!7621 = !DILocation(line: 2470, column: 63, scope: !7575)
!7622 = !DILocation(line: 2470, column: 15, scope: !7575)
!7623 = !DILocation(line: 2470, column: 13, scope: !7575)
!7624 = !DILocation(line: 2475, column: 13, scope: !7588)
!7625 = !DILocation(line: 2475, column: 17, scope: !7588)
!7626 = !DILocation(line: 2475, column: 13, scope: !7575)
!7627 = !DILocation(line: 2476, column: 17, scope: !7587)
!7628 = !DILocation(line: 2476, column: 24, scope: !7587)
!7629 = !DILocation(line: 2480, column: 24, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7587, file: !2, line: 2480, column: 17)
!7631 = !DILocation(line: 2480, column: 22, scope: !7630)
!7632 = !DILocation(line: 2480, column: 29, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7630, file: !2, line: 2480, column: 17)
!7634 = !DILocation(line: 2480, column: 33, scope: !7633)
!7635 = !DILocation(line: 2480, column: 31, scope: !7633)
!7636 = !DILocation(line: 2480, column: 17, scope: !7630)
!7637 = !DILocation(line: 2481, column: 29, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !2, line: 2481, column: 29)
!7639 = distinct !DILexicalBlock(scope: !7633, file: !2, line: 2480, column: 47)
!7640 = !DILocation(line: 2481, column: 34, scope: !7638)
!7641 = !DILocation(line: 2481, column: 37, scope: !7638)
!7642 = !DILocation(line: 2481, column: 44, scope: !7638)
!7643 = !DILocation(line: 2481, column: 29, scope: !7639)
!7644 = !DILocation(line: 2483, column: 37, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7638, file: !2, line: 2481, column: 69)
!7646 = !DILocation(line: 2482, column: 50, scope: !7645)
!7647 = !DILocation(line: 2485, column: 33, scope: !7645)
!7648 = !DILocation(line: 2487, column: 17, scope: !7639)
!7649 = !DILocation(line: 2480, column: 43, scope: !7633)
!7650 = !DILocation(line: 2480, column: 17, scope: !7633)
!7651 = distinct !{!7651, !7636, !7652, !4095}
!7652 = !DILocation(line: 2487, column: 17, scope: !7630)
!7653 = !DILocation(line: 2491, column: 21, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7587, file: !2, line: 2491, column: 21)
!7655 = !DILocation(line: 2491, column: 26, scope: !7654)
!7656 = !DILocation(line: 2491, column: 23, scope: !7654)
!7657 = !DILocation(line: 2491, column: 34, scope: !7654)
!7658 = !DILocation(line: 2491, column: 37, scope: !7654)
!7659 = !DILocation(line: 2491, column: 46, scope: !7654)
!7660 = !DILocation(line: 2491, column: 59, scope: !7654)
!7661 = !DILocation(line: 2491, column: 70, scope: !7654)
!7662 = !DILocation(line: 2491, column: 21, scope: !7587)
!7663 = !DILocation(line: 2492, column: 42, scope: !7654)
!7664 = !DILocation(line: 2492, column: 25, scope: !7654)
!7665 = !DILocation(line: 2494, column: 9, scope: !7588)
!7666 = !DILocation(line: 2494, column: 9, scope: !7587)
!7667 = !DILocation(line: 2494, column: 20, scope: !7592)
!7668 = !DILocation(line: 2494, column: 24, scope: !7592)
!7669 = !DILocation(line: 2494, column: 20, scope: !7588)
!7670 = !DILocation(line: 2495, column: 17, scope: !7591)
!7671 = !DILocation(line: 2495, column: 17, scope: !7590)
!7672 = !{!4141, !3911, i64 2304}
!7673 = !{!4141, !3911, i64 2312}
!7674 = !DILocation(line: 2504, column: 34, scope: !7591)
!7675 = !DILocation(line: 2505, column: 9, scope: !7591)
!7676 = !DILocation(line: 2507, column: 13, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7575, file: !2, line: 2507, column: 13)
!7678 = !DILocation(line: 2507, column: 17, scope: !7677)
!7679 = !DILocation(line: 2507, column: 20, scope: !7677)
!7680 = !DILocation(line: 2507, column: 13, scope: !7575)
!7681 = !DILocation(line: 2508, column: 25, scope: !7677)
!7682 = !DILocation(line: 2508, column: 17, scope: !7677)
!7683 = !DILocation(line: 2510, column: 13, scope: !7599)
!7684 = !DILocation(line: 2510, column: 30, scope: !7599)
!7685 = !DILocation(line: 2510, column: 13, scope: !7575)
!7686 = !DILocation(line: 2512, column: 17, scope: !7598)
!7687 = !DILocation(line: 2512, column: 17, scope: !7596)
!7688 = !DILocation(line: 2512, column: 17, scope: !7597)
!7689 = !DILocation(line: 2512, column: 17, scope: !7595)
!7690 = !DILocation(line: 2512, column: 17, scope: !7594)
!7691 = !DILocation(line: 2520, column: 21, scope: !7598)
!7692 = !DILocation(line: 2520, column: 26, scope: !7598)
!7693 = !DILocation(line: 2520, column: 44, scope: !7598)
!7694 = !DILocation(line: 2519, column: 17, scope: !7598)
!7695 = !DILocation(line: 2522, column: 17, scope: !7598)
!7696 = !DILocation(line: 2526, column: 13, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7575, file: !2, line: 2526, column: 13)
!7698 = !DILocation(line: 2526, column: 13, scope: !7575)
!7699 = !DILocation(line: 2527, column: 21, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !2, line: 2527, column: 21)
!7701 = distinct !DILexicalBlock(scope: !7697, file: !2, line: 2526, column: 18)
!7702 = !DILocation(line: 2527, column: 26, scope: !7700)
!7703 = !DILocation(line: 2527, column: 21, scope: !7701)
!7704 = !DILocation(line: 2529, column: 29, scope: !7700)
!7705 = !DILocation(line: 2533, column: 46, scope: !7700)
!7706 = !DILocation(line: 2533, column: 29, scope: !7700)
!7707 = !DILocation(line: 2528, column: 25, scope: !7700)
!7708 = !DILocation(line: 2534, column: 17, scope: !7701)
!7709 = !DILocation(line: 2537, column: 9, scope: !7575)
!7710 = !DILocation(line: 2538, column: 42, scope: !7575)
!7711 = !DILocation(line: 2538, column: 47, scope: !7575)
!7712 = !DILocation(line: 2538, column: 53, scope: !7575)
!7713 = !DILocation(line: 2538, column: 9, scope: !7575)
!7714 = !DILocation(line: 2539, column: 9, scope: !7575)
!7715 = !DILocation(line: 2541, column: 38, scope: !7575)
!7716 = !DILocation(line: 2541, column: 9, scope: !7575)
!7717 = !DILocation(line: 2542, column: 1, scope: !7575)
!7718 = distinct !DISubprogram(name: "rd_kafka_broker_connect_auth", scope: !2, file: !2, line: 2349, type: !1583, scopeLine: 2349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7719)
!7719 = !{!7720, !7721, !7728}
!7720 = !DILocalVariable(name: "rkb", arg: 1, scope: !7718, file: !2, line: 2349, type: !412)
!7721 = !DILocalVariable(name: "_logname", scope: !7722, file: !2, line: 2354, type: !924)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !2, line: 2354, column: 17)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !2, line: 2354, column: 17)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !2, line: 2354, column: 17)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !2, line: 2354, column: 17)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !2, line: 2352, column: 58)
!7727 = distinct !DILexicalBlock(scope: !7718, file: !2, line: 2351, column: 13)
!7728 = !DILocalVariable(name: "sasl_errstr", scope: !7729, file: !2, line: 2378, type: !2502)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !2, line: 2374, column: 24)
!7730 = distinct !DILexicalBlock(scope: !7726, file: !2, line: 2362, column: 21)
!7731 = !DILocation(line: 2349, column: 61, scope: !7718)
!7732 = !DILocation(line: 2351, column: 14, scope: !7727)
!7733 = !DILocation(line: 2351, column: 19, scope: !7727)
!7734 = !DILocation(line: 2351, column: 29, scope: !7727)
!7735 = !DILocation(line: 2351, column: 62, scope: !7727)
!7736 = !DILocation(line: 2352, column: 14, scope: !7727)
!7737 = !DILocation(line: 2352, column: 19, scope: !7727)
!7738 = !DILocation(line: 2352, column: 29, scope: !7727)
!7739 = !DILocation(line: 2351, column: 13, scope: !7718)
!7740 = !DILocation(line: 2354, column: 17, scope: !7726)
!7741 = !DILocation(line: 2354, column: 17, scope: !7724)
!7742 = !DILocation(line: 2354, column: 17, scope: !7725)
!7743 = !DILocation(line: 2354, column: 17, scope: !7723)
!7744 = !DILocation(line: 2354, column: 17, scope: !7722)
!7745 = !DILocation(line: 2362, column: 21, scope: !7730)
!7746 = !DILocation(line: 2362, column: 26, scope: !7730)
!7747 = !DILocation(line: 2362, column: 36, scope: !7730)
!7748 = !DILocation(line: 2362, column: 76, scope: !7730)
!7749 = !DILocation(line: 2363, column: 22, scope: !7730)
!7750 = !DILocation(line: 2363, column: 27, scope: !7730)
!7751 = !DILocation(line: 2363, column: 40, scope: !7730)
!7752 = !DILocation(line: 2362, column: 21, scope: !7726)
!7753 = !DILocation(line: 2365, column: 25, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7730, file: !2, line: 2363, column: 76)
!7755 = !DILocation(line: 2367, column: 29, scope: !7754)
!7756 = !DILocation(line: 2366, column: 25, scope: !7754)
!7757 = !DILocation(line: 2368, column: 25, scope: !7754)
!7758 = !DILocation(line: 2371, column: 29, scope: !7754)
!7759 = !DILocation(line: 2371, column: 34, scope: !7754)
!7760 = !DILocation(line: 2371, column: 39, scope: !7754)
!7761 = !DILocation(line: 2371, column: 47, scope: !7754)
!7762 = !DILocation(line: 2371, column: 55, scope: !7754)
!7763 = !DILocation(line: 2371, column: 60, scope: !7754)
!7764 = !{!4141, !3911, i64 1000}
!7765 = !DILocation(line: 2372, column: 29, scope: !7754)
!7766 = !DILocation(line: 2370, column: 25, scope: !7754)
!7767 = !DILocation(line: 2374, column: 17, scope: !7754)
!7768 = !DILocation(line: 2378, column: 25, scope: !7729)
!7769 = !DILocation(line: 2378, column: 30, scope: !7729)
!7770 = !DILocation(line: 2380, column: 25, scope: !7729)
!7771 = !DILocation(line: 2382, column: 29, scope: !7729)
!7772 = !DILocation(line: 2383, column: 30, scope: !7729)
!7773 = !DILocation(line: 2383, column: 35, scope: !7729)
!7774 = !DILocation(line: 2383, column: 48, scope: !7729)
!7775 = !DILocation(line: 2383, column: 29, scope: !7729)
!7776 = !DILocation(line: 2381, column: 25, scope: !7729)
!7777 = !DILocation(line: 2386, column: 25, scope: !7729)
!7778 = !DILocation(line: 2389, column: 33, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7729, file: !2, line: 2388, column: 29)
!7780 = !DILocation(line: 2389, column: 38, scope: !7779)
!7781 = !DILocation(line: 2389, column: 53, scope: !7779)
!7782 = !DILocation(line: 2388, column: 29, scope: !7779)
!7783 = !DILocation(line: 2390, column: 54, scope: !7779)
!7784 = !DILocation(line: 2388, column: 29, scope: !7729)
!7785 = !DILocation(line: 2392, column: 37, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7779, file: !2, line: 2390, column: 61)
!7787 = !DILocation(line: 2396, column: 37, scope: !7786)
!7788 = !DILocation(line: 2391, column: 33, scope: !7786)
!7789 = !DILocation(line: 2397, column: 33, scope: !7786)
!7790 = !DILocation(line: 2399, column: 17, scope: !7730)
!7791 = !DILocation(line: 2401, column: 17, scope: !7726)
!7792 = !DILocation(line: 2405, column: 36, scope: !7718)
!7793 = !DILocation(line: 2405, column: 9, scope: !7718)
!7794 = !DILocation(line: 2406, column: 1, scope: !7718)
!7795 = distinct !DISubprogram(name: "rd_kafka_send", scope: !2, file: !2, line: 2654, type: !6050, scopeLine: 2654, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !7796)
!7796 = !{!7797, !7798, !7799, !7800, !7802, !7803, !7804, !7807, !7814, !7821, !7828}
!7797 = !DILocalVariable(name: "rkb", arg: 1, scope: !7795, file: !2, line: 2654, type: !412)
!7798 = !DILocalVariable(name: "rkbuf", scope: !7795, file: !2, line: 2655, type: !1692)
!7799 = !DILocalVariable(name: "cnt", scope: !7795, file: !2, line: 2656, type: !59)
!7800 = !DILocalVariable(name: "r", scope: !7801, file: !2, line: 2663, type: !2858)
!7801 = distinct !DILexicalBlock(scope: !7795, file: !2, line: 2662, column: 68)
!7802 = !DILocalVariable(name: "pre_of", scope: !7801, file: !2, line: 2664, type: !692)
!7803 = !DILocalVariable(name: "now", scope: !7801, file: !2, line: 2665, type: !487)
!7804 = !DILocalVariable(name: "err", scope: !7805, file: !2, line: 2670, type: !550)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !2, line: 2667, column: 77)
!7806 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2667, column: 21)
!7807 = !DILocalVariable(name: "_logname", scope: !7808, file: !2, line: 2687, type: !924)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !2, line: 2687, column: 33)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !2, line: 2687, column: 33)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !2, line: 2687, column: 33)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !2, line: 2687, column: 33)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !2, line: 2685, column: 44)
!7813 = distinct !DILexicalBlock(scope: !7805, file: !2, line: 2685, column: 29)
!7814 = !DILocalVariable(name: "_logname", scope: !7815, file: !2, line: 2704, type: !924)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !2, line: 2704, column: 25)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !2, line: 2704, column: 25)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !2, line: 2704, column: 25)
!7818 = distinct !DILexicalBlock(scope: !7819, file: !2, line: 2704, column: 25)
!7819 = distinct !DILexicalBlock(scope: !7820, file: !2, line: 2702, column: 79)
!7820 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2702, column: 21)
!7821 = !DILocalVariable(name: "_logname", scope: !7822, file: !2, line: 2761, type: !924)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !2, line: 2761, column: 25)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !2, line: 2761, column: 25)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !2, line: 2761, column: 25)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !2, line: 2761, column: 25)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !2, line: 2760, column: 65)
!7827 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2760, column: 21)
!7828 = !DILocalVariable(name: "_logname", scope: !7829, file: !2, line: 2775, type: !924)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !2, line: 2775, column: 17)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !2, line: 2775, column: 17)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !2, line: 2775, column: 17)
!7832 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2775, column: 17)
!7833 = !DILocation(line: 2654, column: 38, scope: !7795)
!7834 = !DILocation(line: 2655, column: 9, scope: !7795)
!7835 = !DILocation(line: 2655, column: 25, scope: !7795)
!7836 = !DILocation(line: 2656, column: 9, scope: !7795)
!7837 = !DILocation(line: 2656, column: 22, scope: !7795)
!7838 = !DILocation(line: 2658, column: 9, scope: !7795)
!7839 = !DILocation(line: 2658, column: 9, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !2, line: 2658, column: 9)
!7841 = distinct !DILexicalBlock(scope: !7795, file: !2, line: 2658, column: 9)
!7842 = !DILocation(line: 2658, column: 9, scope: !7841)
!7843 = !DILocation(line: 2660, column: 9, scope: !7795)
!7844 = !DILocation(line: 2660, column: 16, scope: !7795)
!7845 = !DILocation(line: 2660, column: 21, scope: !7795)
!7846 = !DILocation(line: 2660, column: 31, scope: !7795)
!7847 = !DILocation(line: 2660, column: 59, scope: !7795)
!7848 = !DILocation(line: 2661, column: 16, scope: !7795)
!7849 = !DILocation(line: 2661, column: 57, scope: !7795)
!7850 = !DILocation(line: 2661, column: 62, scope: !7795)
!7851 = !DILocation(line: 2661, column: 55, scope: !7795)
!7852 = !DILocation(line: 2661, column: 79, scope: !7795)
!7853 = !DILocation(line: 2662, column: 25, scope: !7795)
!7854 = !DILocation(line: 2662, column: 23, scope: !7795)
!7855 = !DILocation(line: 0, scope: !7795)
!7856 = !DILocation(line: 2663, column: 17, scope: !7801)
!7857 = !DILocation(line: 2663, column: 25, scope: !7801)
!7858 = !DILocation(line: 2664, column: 17, scope: !7801)
!7859 = !DILocation(line: 2664, column: 24, scope: !7801)
!7860 = !DILocation(line: 2664, column: 50, scope: !7801)
!7861 = !DILocation(line: 2664, column: 57, scope: !7801)
!7862 = !DILocation(line: 2664, column: 33, scope: !7801)
!7863 = !DILocation(line: 2665, column: 17, scope: !7801)
!7864 = !DILocation(line: 2665, column: 25, scope: !7801)
!7865 = !DILocation(line: 2667, column: 21, scope: !7806)
!7866 = !DILocation(line: 2667, column: 21, scope: !7801)
!7867 = !DILocation(line: 2670, column: 25, scope: !7805)
!7868 = !DILocation(line: 2670, column: 45, scope: !7805)
!7869 = !DILocation(line: 2672, column: 31, scope: !7805)
!7870 = !DILocation(line: 2672, column: 38, scope: !7805)
!7871 = !{!5210, !3911, i64 256}
!7872 = !DILocation(line: 2673, column: 29, scope: !7805)
!7873 = !DILocation(line: 2673, column: 34, scope: !7805)
!7874 = !DILocation(line: 2673, column: 41, scope: !7805)
!7875 = !DILocation(line: 2673, column: 48, scope: !7805)
!7876 = !{!5210, !3911, i64 264}
!7877 = !DILocation(line: 2672, column: 29, scope: !7805)
!7878 = !DILocation(line: 2675, column: 25, scope: !7805)
!7879 = !DILocation(line: 2675, column: 32, scope: !7805)
!7880 = !DILocation(line: 2675, column: 44, scope: !7805)
!7881 = !DILocation(line: 2678, column: 29, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7805, file: !2, line: 2678, column: 29)
!7883 = !DILocation(line: 2678, column: 36, scope: !7882)
!7884 = !{!5210, !3911, i64 272}
!7885 = !DILocation(line: 2678, column: 62, scope: !7882)
!7886 = !DILocation(line: 2679, column: 29, scope: !7882)
!7887 = !DILocation(line: 2679, column: 36, scope: !7882)
!7888 = !DILocation(line: 2678, column: 29, scope: !7805)
!7889 = !DILocation(line: 2680, column: 33, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7882, file: !2, line: 2679, column: 55)
!7891 = !DILocation(line: 2680, column: 40, scope: !7890)
!7892 = !DILocation(line: 2681, column: 37, scope: !7890)
!7893 = !DILocation(line: 2681, column: 44, scope: !7890)
!7894 = !DILocation(line: 2682, column: 33, scope: !7890)
!7895 = !DILocation(line: 2682, column: 40, scope: !7890)
!7896 = !DILocation(line: 2682, column: 58, scope: !7890)
!7897 = !DILocation(line: 2683, column: 25, scope: !7890)
!7898 = !DILocation(line: 2685, column: 29, scope: !7813)
!7899 = !DILocation(line: 2685, column: 29, scope: !7805)
!7900 = !DILocation(line: 2686, column: 52, scope: !7812)
!7901 = !DILocation(line: 2686, column: 57, scope: !7812)
!7902 = !DILocation(line: 2686, column: 70, scope: !7812)
!7903 = !DILocation(line: 2686, column: 33, scope: !7812)
!7904 = !DILocation(line: 2687, column: 33, scope: !7812)
!7905 = !DILocation(line: 2687, column: 33, scope: !7810)
!7906 = !DILocation(line: 2687, column: 33, scope: !7811)
!7907 = !DILocation(line: 2687, column: 33, scope: !7809)
!7908 = !DILocation(line: 2687, column: 33, scope: !7808)
!7909 = !DILocation(line: 2693, column: 55, scope: !7812)
!7910 = !DILocation(line: 2693, column: 60, scope: !7812)
!7911 = !DILocation(line: 2693, column: 68, scope: !7812)
!7912 = !DILocation(line: 2693, column: 73, scope: !7812)
!7913 = !DILocation(line: 2694, column: 61, scope: !7812)
!7914 = !DILocation(line: 2693, column: 33, scope: !7812)
!7915 = !DILocation(line: 2695, column: 33, scope: !7812)
!7916 = distinct !{!7916, !7843, !7917, !4095}
!7917 = !DILocation(line: 2815, column: 9, scope: !7795)
!7918 = !DILocation(line: 2698, column: 47, scope: !7805)
!7919 = !DILocation(line: 2698, column: 52, scope: !7805)
!7920 = !DILocation(line: 2698, column: 60, scope: !7805)
!7921 = !DILocation(line: 2698, column: 25, scope: !7805)
!7922 = !DILocation(line: 2699, column: 17, scope: !7806)
!7923 = !DILocation(line: 2699, column: 17, scope: !7805)
!7924 = !DILocation(line: 2702, column: 21, scope: !7820)
!7925 = !DILocation(line: 2702, column: 21, scope: !7801)
!7926 = !DILocation(line: 2703, column: 44, scope: !7819)
!7927 = !DILocation(line: 2703, column: 49, scope: !7819)
!7928 = !DILocation(line: 2703, column: 62, scope: !7819)
!7929 = !DILocation(line: 2703, column: 25, scope: !7819)
!7930 = !DILocation(line: 2704, column: 25, scope: !7819)
!7931 = !DILocation(line: 2704, column: 25, scope: !7817)
!7932 = !DILocation(line: 2704, column: 25, scope: !7818)
!7933 = !DILocation(line: 2704, column: 25, scope: !7816)
!7934 = !DILocation(line: 2704, column: 25, scope: !7815)
!7935 = !DILocation(line: 2716, column: 29, scope: !7819)
!7936 = !DILocation(line: 2716, column: 34, scope: !7819)
!7937 = !DILocation(line: 2716, column: 42, scope: !7819)
!7938 = !DILocation(line: 2718, column: 29, scope: !7819)
!7939 = !DILocation(line: 2715, column: 25, scope: !7819)
!7940 = !DILocation(line: 2719, column: 25, scope: !7819)
!7941 = !DILocation(line: 2730, column: 21, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2730, column: 21)
!7943 = !DILocation(line: 2730, column: 28, scope: !7942)
!7944 = !DILocation(line: 2730, column: 41, scope: !7942)
!7945 = !DILocation(line: 2730, column: 46, scope: !7942)
!7946 = !DILocation(line: 2731, column: 21, scope: !7942)
!7947 = !DILocation(line: 2731, column: 28, scope: !7942)
!7948 = !{!5210, !3941, i64 160}
!7949 = !DILocation(line: 2731, column: 44, scope: !7942)
!7950 = !DILocation(line: 2731, column: 49, scope: !7942)
!7951 = !DILocation(line: 2731, column: 41, scope: !7942)
!7952 = !DILocation(line: 2730, column: 21, scope: !7801)
!7953 = !DILocation(line: 2732, column: 25, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !2, line: 2732, column: 25)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !2, line: 2732, column: 25)
!7956 = distinct !DILexicalBlock(scope: !7942, file: !2, line: 2731, column: 61)
!7957 = !DILocation(line: 2732, column: 25, scope: !7955)
!7958 = !DILocation(line: 2733, column: 49, scope: !7956)
!7959 = !DILocation(line: 2733, column: 54, scope: !7956)
!7960 = !DILocation(line: 2733, column: 47, scope: !7956)
!7961 = !{!3939, !3941, i64 56}
!7962 = !DILocation(line: 2733, column: 25, scope: !7956)
!7963 = !DILocation(line: 2733, column: 32, scope: !7956)
!7964 = !DILocation(line: 2733, column: 45, scope: !7956)
!7965 = !DILocation(line: 2734, column: 49, scope: !7956)
!7966 = !DILocation(line: 2735, column: 49, scope: !7956)
!7967 = !DILocation(line: 2735, column: 56, scope: !7956)
!7968 = !DILocation(line: 2734, column: 25, scope: !7956)
!7969 = !DILocation(line: 2736, column: 47, scope: !7956)
!7970 = !DILocation(line: 2736, column: 52, scope: !7956)
!7971 = !DILocation(line: 2736, column: 25, scope: !7956)
!7972 = !DILocation(line: 2736, column: 32, scope: !7956)
!7973 = !DILocation(line: 2736, column: 45, scope: !7956)
!7974 = !DILocation(line: 2737, column: 17, scope: !7956)
!7975 = !DILocation(line: 2737, column: 28, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7942, file: !2, line: 2737, column: 28)
!7977 = !DILocation(line: 2737, column: 35, scope: !7976)
!7978 = !DILocation(line: 2737, column: 28, scope: !7942)
!7979 = !DILocation(line: 2738, column: 25, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7976, file: !2, line: 2737, column: 60)
!7981 = !DILocation(line: 2738, column: 25, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !2, line: 2738, column: 25)
!7983 = distinct !DILexicalBlock(scope: !7980, file: !2, line: 2738, column: 25)
!7984 = !DILocation(line: 2738, column: 25, scope: !7983)
!7985 = !DILocation(line: 2740, column: 17, scope: !7980)
!7986 = !DILocation(line: 2753, column: 47, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2753, column: 21)
!7988 = !DILocation(line: 2753, column: 53, scope: !7987)
!7989 = !DILocation(line: 2753, column: 60, scope: !7987)
!7990 = !DILocation(line: 2753, column: 26, scope: !7987)
!7991 = !DILocation(line: 2753, column: 24, scope: !7987)
!7992 = !DILocation(line: 2753, column: 75, scope: !7987)
!7993 = !DILocation(line: 2753, column: 21, scope: !7801)
!7994 = !DILocation(line: 2754, column: 25, scope: !7987)
!7995 = !DILocation(line: 2756, column: 23, scope: !7801)
!7996 = !DILocation(line: 2756, column: 21, scope: !7801)
!7997 = !DILocation(line: 2757, column: 34, scope: !7801)
!7998 = !DILocation(line: 2757, column: 39, scope: !7801)
!7999 = !DILocation(line: 2757, column: 45, scope: !7801)
!8000 = !DILocation(line: 2757, column: 54, scope: !7801)
!8001 = !DILocation(line: 2757, column: 17, scope: !7801)
!8002 = !DILocation(line: 2760, column: 21, scope: !7827)
!8003 = !DILocation(line: 2760, column: 60, scope: !7827)
!8004 = !DILocation(line: 2760, column: 21, scope: !7801)
!8005 = !DILocation(line: 2761, column: 25, scope: !7826)
!8006 = !DILocation(line: 2761, column: 25, scope: !7824)
!8007 = !DILocation(line: 2761, column: 25, scope: !7825)
!8008 = !DILocation(line: 2761, column: 25, scope: !7823)
!8009 = !DILocation(line: 2761, column: 25, scope: !7822)
!8010 = !DILocation(line: 2772, column: 25, scope: !7826)
!8011 = !DILocation(line: 2775, column: 17, scope: !7801)
!8012 = !DILocation(line: 2775, column: 17, scope: !7831)
!8013 = !DILocation(line: 2775, column: 17, scope: !7832)
!8014 = !DILocation(line: 2775, column: 17, scope: !7830)
!8015 = !DILocation(line: 2775, column: 17, scope: !7829)
!8016 = !DILocation(line: 2784, column: 34, scope: !7801)
!8017 = !DILocation(line: 2784, column: 39, scope: !7801)
!8018 = !DILocation(line: 2784, column: 45, scope: !7801)
!8019 = !DILocation(line: 2784, column: 53, scope: !7801)
!8020 = !DILocation(line: 2784, column: 60, scope: !7801)
!8021 = !DILocation(line: 2784, column: 73, scope: !7801)
!8022 = !DILocation(line: 2784, column: 17, scope: !7801)
!8023 = !DILocation(line: 2788, column: 21, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2788, column: 21)
!8025 = !DILocation(line: 2788, column: 21, scope: !7801)
!8026 = !DILocation(line: 2789, column: 57, scope: !8024)
!8027 = !DILocation(line: 2789, column: 62, scope: !8024)
!8028 = !DILocation(line: 2789, column: 25, scope: !8024)
!8029 = !DILocation(line: 2792, column: 36, scope: !7801)
!8030 = !DILocation(line: 2792, column: 41, scope: !7801)
!8031 = !DILocation(line: 2792, column: 54, scope: !7801)
!8032 = !DILocation(line: 2792, column: 17, scope: !7801)
!8033 = !DILocation(line: 2793, column: 17, scope: !7801)
!8034 = !DILocation(line: 2793, column: 24, scope: !7801)
!8035 = !DILocation(line: 2793, column: 36, scope: !7801)
!8036 = !DILocation(line: 2796, column: 40, scope: !7801)
!8037 = !DILocation(line: 2796, column: 17, scope: !7801)
!8038 = !DILocation(line: 2796, column: 24, scope: !7801)
!8039 = !DILocation(line: 2796, column: 38, scope: !7801)
!8040 = !DILocation(line: 2799, column: 29, scope: !7801)
!8041 = !DILocation(line: 2799, column: 34, scope: !7801)
!8042 = !DILocation(line: 2800, column: 28, scope: !7801)
!8043 = !DILocation(line: 2800, column: 35, scope: !7801)
!8044 = !DILocation(line: 2800, column: 51, scope: !7801)
!8045 = !DILocation(line: 2800, column: 58, scope: !7801)
!8046 = !DILocation(line: 2800, column: 49, scope: !7801)
!8047 = !DILocation(line: 2799, column: 17, scope: !7801)
!8048 = !DILocation(line: 2802, column: 21, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2802, column: 21)
!8050 = !DILocation(line: 2802, column: 28, scope: !8049)
!8051 = !DILocation(line: 2802, column: 40, scope: !8049)
!8052 = !DILocation(line: 2802, column: 65, scope: !8049)
!8053 = !DILocation(line: 2803, column: 38, scope: !8049)
!8054 = !DILocation(line: 2803, column: 43, scope: !8049)
!8055 = !DILocation(line: 2803, column: 21, scope: !8049)
!8056 = !DILocation(line: 2803, column: 72, scope: !8049)
!8057 = !DILocation(line: 2802, column: 21, scope: !7801)
!8058 = !DILocation(line: 2804, column: 65, scope: !8049)
!8059 = !DILocation(line: 2804, column: 70, scope: !8049)
!8060 = !DILocation(line: 2804, column: 25, scope: !8049)
!8061 = !DILocation(line: 2808, column: 23, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !7801, file: !2, line: 2808, column: 21)
!8063 = !DILocation(line: 2808, column: 30, scope: !8062)
!8064 = !DILocation(line: 2808, column: 42, scope: !8062)
!8065 = !DILocation(line: 2808, column: 21, scope: !7801)
!8066 = !DILocation(line: 2809, column: 44, scope: !8062)
!8067 = !DILocation(line: 2809, column: 49, scope: !8062)
!8068 = !DILocation(line: 2809, column: 64, scope: !8062)
!8069 = !DILocation(line: 2809, column: 25, scope: !8062)
!8070 = !DILocation(line: 2811, column: 47, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8062, file: !2, line: 2810, column: 22)
!8072 = !DILocation(line: 2811, column: 52, scope: !8071)
!8073 = !DILocation(line: 2811, column: 60, scope: !8071)
!8074 = !DILocation(line: 2811, column: 74, scope: !8071)
!8075 = !DILocation(line: 2811, column: 25, scope: !8071)
!8076 = !DILocation(line: 2814, column: 20, scope: !7801)
!8077 = !DILocation(line: 2817, column: 16, scope: !7795)
!8078 = !DILocation(line: 2817, column: 9, scope: !7795)
!8079 = !DILocation(line: 2818, column: 1, scope: !7795)
!8080 = !DISubprogram(name: "rd_kafka_bufq_deq", scope: !414, file: !414, line: 940, type: !8081, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8081 = !DISubroutineType(types: !8082)
!8082 = !{null, !5038, !1692}
!8083 = !DISubprogram(name: "rd_kafka_err2str", scope: !125, file: !125, line: 665, type: !8084, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{!365, !550}
!8086 = !DISubprogram(name: "rd_kafka_buf_callback", scope: !414, file: !414, line: 955, type: !8087, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8087 = !DISubroutineType(types: !8088)
!8088 = !{null, !586, !412, !550, !1692, !1692}
!8089 = distinct !DISubprogram(name: "rd_kafka_broker_request_supported", scope: !2, file: !2, line: 2620, type: !5485, scopeLine: 2621, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8090)
!8090 = !{!8091, !8092, !8093, !8094}
!8091 = !DILocalVariable(name: "rkb", arg: 1, scope: !8089, file: !2, line: 2620, type: !412)
!8092 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !8089, file: !2, line: 2621, type: !1692)
!8093 = !DILocalVariable(name: "skel", scope: !8089, file: !2, line: 2622, type: !2346)
!8094 = !DILocalVariable(name: "ret", scope: !8089, file: !2, line: 2624, type: !2345)
!8095 = !DILocation(line: 2620, column: 75, scope: !8089)
!8096 = !DILocation(line: 2621, column: 72, scope: !8089)
!8097 = !DILocation(line: 2622, column: 9, scope: !8089)
!8098 = !DILocation(line: 2622, column: 36, scope: !8089)
!8099 = !DILocation(line: 2622, column: 43, scope: !8089)
!8100 = !DILocation(line: 2623, column: 48, scope: !8089)
!8101 = !DILocation(line: 2623, column: 55, scope: !8089)
!8102 = !DILocation(line: 2623, column: 68, scope: !8089)
!8103 = !DILocation(line: 2624, column: 9, scope: !8089)
!8104 = !DILocation(line: 2624, column: 37, scope: !8089)
!8105 = !DILocation(line: 2626, column: 13, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8089, file: !2, line: 2626, column: 13)
!8107 = !DILocation(line: 2626, column: 13, scope: !8089)
!8108 = !DILocation(line: 2627, column: 17, scope: !8106)
!8109 = !DILocation(line: 2633, column: 13, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8089, file: !2, line: 2633, column: 13)
!8111 = !DILocation(line: 2633, column: 20, scope: !8110)
!8112 = !{!5210, !3941, i64 312}
!8113 = !DILocation(line: 2633, column: 13, scope: !8089)
!8114 = !DILocation(line: 2634, column: 25, scope: !8110)
!8115 = !DILocation(line: 2634, column: 30, scope: !8110)
!8116 = !DILocation(line: 2634, column: 45, scope: !8110)
!8117 = !DILocation(line: 2634, column: 52, scope: !8110)
!8118 = !DILocation(line: 2634, column: 43, scope: !8110)
!8119 = !DILocation(line: 2635, column: 24, scope: !8110)
!8120 = !DILocation(line: 2635, column: 31, scope: !8110)
!8121 = !DILocation(line: 2634, column: 68, scope: !8110)
!8122 = !DILocation(line: 2634, column: 17, scope: !8110)
!8123 = !DILocation(line: 2639, column: 28, scope: !8089)
!8124 = !DILocation(line: 2639, column: 33, scope: !8089)
!8125 = !DILocation(line: 2639, column: 50, scope: !8089)
!8126 = !DILocation(line: 2639, column: 55, scope: !8089)
!8127 = !DILocation(line: 2639, column: 13, scope: !8089)
!8128 = !DILocation(line: 2638, column: 13, scope: !8089)
!8129 = !DILocation(line: 2641, column: 14, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8089, file: !2, line: 2641, column: 13)
!8131 = !DILocation(line: 2641, column: 13, scope: !8089)
!8132 = !DILocation(line: 2642, column: 17, scope: !8130)
!8133 = !DILocation(line: 2644, column: 16, scope: !8089)
!8134 = !DILocation(line: 2644, column: 21, scope: !8089)
!8135 = !DILocation(line: 2644, column: 31, scope: !8089)
!8136 = !DILocation(line: 2644, column: 38, scope: !8089)
!8137 = !DILocation(line: 2644, column: 51, scope: !8089)
!8138 = !DILocation(line: 2644, column: 28, scope: !8089)
!8139 = !DILocation(line: 2644, column: 62, scope: !8089)
!8140 = !DILocation(line: 2645, column: 16, scope: !8089)
!8141 = !DILocation(line: 2645, column: 23, scope: !8089)
!8142 = !DILocation(line: 2645, column: 36, scope: !8089)
!8143 = !DILocation(line: 2645, column: 50, scope: !8089)
!8144 = !DILocation(line: 2645, column: 55, scope: !8089)
!8145 = !DILocation(line: 2645, column: 47, scope: !8089)
!8146 = !DILocation(line: 0, scope: !8089)
!8147 = !DILocation(line: 2644, column: 9, scope: !8089)
!8148 = !DILocation(line: 2646, column: 1, scope: !8089)
!8149 = distinct !DISubprogram(name: "rd_kafka_buf_update_i32", scope: !414, file: !414, line: 1075, type: !8150, scopeLine: 1075, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8152)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{null, !1692, !692, !320}
!8152 = !{!8153, !8154, !8155}
!8153 = !DILocalVariable(name: "rkbuf", arg: 1, scope: !8149, file: !414, line: 1075, type: !1692)
!8154 = !DILocalVariable(name: "of", arg: 2, scope: !8149, file: !414, line: 1075, type: !692)
!8155 = !DILocalVariable(name: "v", arg: 3, scope: !8149, file: !414, line: 1075, type: !320)
!8156 = !DILocation(line: 1075, column: 41, scope: !8149)
!8157 = !DILocation(line: 1075, column: 55, scope: !8149)
!8158 = !DILocation(line: 1075, column: 67, scope: !8149)
!8159 = !DILocation(line: 1076, column: 13, scope: !8149)
!8160 = !DILocation(line: 1076, column: 11, scope: !8149)
!8161 = !DILocation(line: 1077, column: 29, scope: !8149)
!8162 = !DILocation(line: 1077, column: 36, scope: !8149)
!8163 = !DILocation(line: 1077, column: 9, scope: !8149)
!8164 = !DILocation(line: 1078, column: 1, scope: !8149)
!8165 = distinct !DISubprogram(name: "rd_kafka_broker_send", scope: !2, file: !2, line: 962, type: !8166, scopeLine: 962, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8168)
!8166 = !DISubroutineType(types: !8167)
!8167 = !{!2858, !412, !6901}
!8168 = !{!8169, !8170, !8171, !8172}
!8169 = !DILocalVariable(name: "rkb", arg: 1, scope: !8165, file: !2, line: 962, type: !412)
!8170 = !DILocalVariable(name: "slice", arg: 2, scope: !8165, file: !2, line: 962, type: !6901)
!8171 = !DILocalVariable(name: "r", scope: !8165, file: !2, line: 963, type: !2858)
!8172 = !DILocalVariable(name: "errstr", scope: !8165, file: !2, line: 964, type: !1408)
!8173 = !DILocation(line: 962, column: 56, scope: !8165)
!8174 = !DILocation(line: 962, column: 73, scope: !8165)
!8175 = !DILocation(line: 963, column: 9, scope: !8165)
!8176 = !DILocation(line: 963, column: 17, scope: !8165)
!8177 = !DILocation(line: 964, column: 9, scope: !8165)
!8178 = !DILocation(line: 964, column: 14, scope: !8165)
!8179 = !DILocation(line: 966, column: 9, scope: !8165)
!8180 = !DILocation(line: 966, column: 9, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !2, line: 966, column: 9)
!8182 = distinct !DILexicalBlock(scope: !8165, file: !2, line: 966, column: 9)
!8183 = !DILocation(line: 966, column: 9, scope: !8182)
!8184 = !DILocation(line: 968, column: 9, scope: !8165)
!8185 = !DILocation(line: 968, column: 9, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !2, line: 968, column: 9)
!8187 = distinct !DILexicalBlock(scope: !8165, file: !2, line: 968, column: 9)
!8188 = !DILocation(line: 968, column: 9, scope: !8187)
!8189 = !DILocation(line: 970, column: 37, scope: !8165)
!8190 = !DILocation(line: 970, column: 42, scope: !8165)
!8191 = !DILocation(line: 970, column: 57, scope: !8165)
!8192 = !DILocation(line: 970, column: 64, scope: !8165)
!8193 = !DILocation(line: 970, column: 13, scope: !8165)
!8194 = !DILocation(line: 970, column: 11, scope: !8165)
!8195 = !DILocation(line: 973, column: 13, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8165, file: !2, line: 973, column: 13)
!8197 = !DILocation(line: 973, column: 15, scope: !8196)
!8198 = !DILocation(line: 973, column: 13, scope: !8165)
!8199 = !DILocation(line: 974, column: 38, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8196, file: !2, line: 973, column: 22)
!8201 = !DILocation(line: 975, column: 57, scope: !8200)
!8202 = !DILocation(line: 974, column: 17, scope: !8200)
!8203 = !DILocation(line: 976, column: 34, scope: !8200)
!8204 = !DILocation(line: 976, column: 39, scope: !8200)
!8205 = !DILocation(line: 976, column: 45, scope: !8200)
!8206 = !DILocation(line: 976, column: 17, scope: !8200)
!8207 = !DILocation(line: 977, column: 17, scope: !8200)
!8208 = !DILocation(line: 980, column: 26, scope: !8165)
!8209 = !DILocation(line: 980, column: 31, scope: !8165)
!8210 = !DILocation(line: 980, column: 37, scope: !8165)
!8211 = !DILocation(line: 980, column: 47, scope: !8165)
!8212 = !DILocation(line: 980, column: 9, scope: !8165)
!8213 = !DILocation(line: 981, column: 26, scope: !8165)
!8214 = !DILocation(line: 981, column: 31, scope: !8165)
!8215 = !DILocation(line: 981, column: 37, scope: !8165)
!8216 = !DILocation(line: 981, column: 9, scope: !8165)
!8217 = !DILocation(line: 982, column: 16, scope: !8165)
!8218 = !DILocation(line: 982, column: 9, scope: !8165)
!8219 = !DILocation(line: 983, column: 1, scope: !8165)
!8220 = !DISubprogram(name: "rd_kafka_transport_request_sent", scope: !497, file: !497, line: 54, type: !5276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8221 = distinct !DISubprogram(name: "rd_avg_add", scope: !2406, file: !2406, line: 76, type: !8222, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8225)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{null, !8224, !489}
!8224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!8225 = !{!8226, !8227}
!8226 = !DILocalVariable(name: "ra", arg: 1, scope: !8221, file: !2406, line: 76, type: !8224)
!8227 = !DILocalVariable(name: "v", arg: 2, scope: !8221, file: !2406, line: 76, type: !489)
!8228 = !DILocation(line: 76, column: 44, scope: !8221)
!8229 = !DILocation(line: 76, column: 56, scope: !8221)
!8230 = !DILocation(line: 77, column: 19, scope: !8221)
!8231 = !DILocation(line: 77, column: 23, scope: !8221)
!8232 = !DILocation(line: 77, column: 9, scope: !8221)
!8233 = !DILocation(line: 78, column: 14, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8221, file: !2406, line: 78, column: 13)
!8235 = !DILocation(line: 78, column: 18, scope: !8234)
!8236 = !{!3948, !3941, i64 88}
!8237 = !DILocation(line: 78, column: 13, scope: !8221)
!8238 = !DILocation(line: 79, column: 29, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8234, file: !2406, line: 78, column: 30)
!8240 = !DILocation(line: 79, column: 33, scope: !8239)
!8241 = !DILocation(line: 79, column: 17, scope: !8239)
!8242 = !DILocation(line: 80, column: 17, scope: !8239)
!8243 = !DILocation(line: 82, column: 13, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8221, file: !2406, line: 82, column: 13)
!8245 = !DILocation(line: 82, column: 17, scope: !8244)
!8246 = !DILocation(line: 82, column: 21, scope: !8244)
!8247 = !DILocation(line: 82, column: 26, scope: !8244)
!8248 = !{!3948, !3942, i64 0}
!8249 = !DILocation(line: 82, column: 15, scope: !8244)
!8250 = !DILocation(line: 82, column: 13, scope: !8221)
!8251 = !DILocation(line: 83, column: 33, scope: !8244)
!8252 = !DILocation(line: 83, column: 17, scope: !8244)
!8253 = !DILocation(line: 83, column: 21, scope: !8244)
!8254 = !DILocation(line: 83, column: 26, scope: !8244)
!8255 = !DILocation(line: 83, column: 31, scope: !8244)
!8256 = !DILocation(line: 84, column: 13, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8221, file: !2406, line: 84, column: 13)
!8258 = !DILocation(line: 84, column: 17, scope: !8257)
!8259 = !DILocation(line: 84, column: 22, scope: !8257)
!8260 = !{!3948, !3942, i64 8}
!8261 = !DILocation(line: 84, column: 27, scope: !8257)
!8262 = !DILocation(line: 84, column: 32, scope: !8257)
!8263 = !DILocation(line: 84, column: 35, scope: !8257)
!8264 = !DILocation(line: 84, column: 39, scope: !8257)
!8265 = !DILocation(line: 84, column: 43, scope: !8257)
!8266 = !DILocation(line: 84, column: 48, scope: !8257)
!8267 = !DILocation(line: 84, column: 37, scope: !8257)
!8268 = !DILocation(line: 84, column: 13, scope: !8221)
!8269 = !DILocation(line: 85, column: 33, scope: !8257)
!8270 = !DILocation(line: 85, column: 17, scope: !8257)
!8271 = !DILocation(line: 85, column: 21, scope: !8257)
!8272 = !DILocation(line: 85, column: 26, scope: !8257)
!8273 = !DILocation(line: 85, column: 31, scope: !8257)
!8274 = !DILocation(line: 86, column: 25, scope: !8221)
!8275 = !DILocation(line: 86, column: 9, scope: !8221)
!8276 = !DILocation(line: 86, column: 13, scope: !8221)
!8277 = !DILocation(line: 86, column: 18, scope: !8221)
!8278 = !DILocation(line: 86, column: 22, scope: !8221)
!8279 = !{!3948, !3942, i64 24}
!8280 = !DILocation(line: 87, column: 9, scope: !8221)
!8281 = !DILocation(line: 87, column: 13, scope: !8221)
!8282 = !DILocation(line: 87, column: 18, scope: !8221)
!8283 = !DILocation(line: 87, column: 21, scope: !8221)
!8284 = !{!3948, !3941, i64 32}
!8285 = !DILocation(line: 89, column: 33, scope: !8221)
!8286 = !DILocation(line: 89, column: 37, scope: !8221)
!8287 = !{!3948, !3911, i64 96}
!8288 = !DILocation(line: 89, column: 45, scope: !8221)
!8289 = !DILocation(line: 89, column: 9, scope: !8221)
!8290 = !DILocation(line: 91, column: 21, scope: !8221)
!8291 = !DILocation(line: 91, column: 25, scope: !8221)
!8292 = !DILocation(line: 91, column: 9, scope: !8221)
!8293 = !DILocation(line: 92, column: 1, scope: !8221)
!8294 = !DISubprogram(name: "rd_kafka_bufq_enq", scope: !414, file: !414, line: 939, type: !8081, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8295 = distinct !DISubprogram(name: "rd_kafka_broker_buf_retry", scope: !2, file: !2, line: 2824, type: !5276, scopeLine: 2824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8296)
!8296 = !{!8297, !8298, !8299, !8302}
!8297 = !DILocalVariable(name: "rkb", arg: 1, scope: !8295, file: !2, line: 2824, type: !412)
!8298 = !DILocalVariable(name: "rkbuf", arg: 2, scope: !8295, file: !2, line: 2824, type: !1692)
!8299 = !DILocalVariable(name: "rko", scope: !8300, file: !2, line: 2836, type: !914)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !2, line: 2835, column: 48)
!8301 = distinct !DILexicalBlock(scope: !8295, file: !2, line: 2835, column: 13)
!8302 = !DILocalVariable(name: "_logname", scope: !8303, file: !2, line: 2842, type: !924)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !2, line: 2842, column: 9)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !2, line: 2842, column: 9)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !2, line: 2842, column: 9)
!8306 = distinct !DILexicalBlock(scope: !8295, file: !2, line: 2842, column: 9)
!8307 = !DILocation(line: 2824, column: 51, scope: !8295)
!8308 = !DILocation(line: 2824, column: 72, scope: !8295)
!8309 = !DILocation(line: 2828, column: 14, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8295, file: !2, line: 2828, column: 13)
!8311 = !DILocation(line: 2828, column: 21, scope: !8310)
!8312 = !DILocation(line: 2828, column: 34, scope: !8310)
!8313 = !{!5210, !3911, i64 208}
!8314 = !DILocation(line: 2828, column: 36, scope: !8310)
!8315 = !DILocation(line: 2828, column: 39, scope: !8310)
!8316 = !DILocation(line: 2828, column: 46, scope: !8310)
!8317 = !DILocation(line: 2828, column: 64, scope: !8310)
!8318 = !{!5210, !3911, i64 224}
!8319 = !DILocation(line: 2828, column: 13, scope: !8295)
!8320 = !DILocation(line: 2829, column: 17, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8310, file: !2, line: 2828, column: 67)
!8322 = !DILocation(line: 2829, column: 24, scope: !8321)
!8323 = !DILocation(line: 2829, column: 39, scope: !8321)
!8324 = !DILocation(line: 2829, column: 46, scope: !8321)
!8325 = !DILocation(line: 2830, column: 40, scope: !8321)
!8326 = !DILocation(line: 2830, column: 47, scope: !8321)
!8327 = !DILocation(line: 2830, column: 17, scope: !8321)
!8328 = !DILocation(line: 2831, column: 9, scope: !8321)
!8329 = !DILocation(line: 2835, column: 30, scope: !8301)
!8330 = !DILocation(line: 2835, column: 35, scope: !8301)
!8331 = !DILocation(line: 2835, column: 14, scope: !8301)
!8332 = !DILocation(line: 2835, column: 13, scope: !8295)
!8333 = !DILocation(line: 2836, column: 17, scope: !8300)
!8334 = !DILocation(line: 2836, column: 32, scope: !8300)
!8335 = !DILocation(line: 2836, column: 41, scope: !8300)
!8336 = !DILocation(line: 2837, column: 41, scope: !8300)
!8337 = !DILocation(line: 2837, column: 17, scope: !8300)
!8338 = !DILocation(line: 2837, column: 22, scope: !8300)
!8339 = !DILocation(line: 2837, column: 33, scope: !8300)
!8340 = !DILocation(line: 2837, column: 39, scope: !8300)
!8341 = !DILocation(line: 2838, column: 32, scope: !8300)
!8342 = !DILocation(line: 2838, column: 37, scope: !8300)
!8343 = !DILocation(line: 2838, column: 46, scope: !8300)
!8344 = !DILocation(line: 2838, column: 17, scope: !8300)
!8345 = !DILocation(line: 2840, column: 9, scope: !8301)
!8346 = !DILocation(line: 2842, column: 9, scope: !8295)
!8347 = !DILocation(line: 2842, column: 9, scope: !8305)
!8348 = !DILocation(line: 2842, column: 9, scope: !8306)
!8349 = !DILocation(line: 2842, column: 9, scope: !8304)
!8350 = !DILocation(line: 2842, column: 9, scope: !8303)
!8351 = !{!5210, !3941, i64 308}
!8352 = !{!5210, !3941, i64 304}
!8353 = !{!4141, !3941, i64 2120}
!8354 = !DILocation(line: 2852, column: 26, scope: !8295)
!8355 = !DILocation(line: 2852, column: 31, scope: !8295)
!8356 = !DILocation(line: 2852, column: 37, scope: !8295)
!8357 = !DILocation(line: 2852, column: 9, scope: !8295)
!8358 = !DILocation(line: 2855, column: 13, scope: !8295)
!8359 = !DILocation(line: 2855, column: 27, scope: !8295)
!8360 = !DILocation(line: 2855, column: 32, scope: !8295)
!8361 = !DILocation(line: 2855, column: 40, scope: !8295)
!8362 = !DILocation(line: 2855, column: 48, scope: !8295)
!8363 = !DILocation(line: 2855, column: 65, scope: !8295)
!8364 = !DILocation(line: 2855, column: 26, scope: !8295)
!8365 = !DILocation(line: 2855, column: 24, scope: !8295)
!8366 = !DILocation(line: 2854, column: 9, scope: !8295)
!8367 = !DILocation(line: 2854, column: 16, scope: !8295)
!8368 = !DILocation(line: 2854, column: 31, scope: !8295)
!8369 = !{!5210, !3942, i64 24}
!8370 = !DILocation(line: 2860, column: 35, scope: !8295)
!8371 = !DILocation(line: 2860, column: 42, scope: !8295)
!8372 = !DILocation(line: 2860, column: 57, scope: !8295)
!8373 = !DILocation(line: 2860, column: 9, scope: !8295)
!8374 = !DILocation(line: 2860, column: 16, scope: !8295)
!8375 = !DILocation(line: 2860, column: 33, scope: !8295)
!8376 = !{!5210, !3942, i64 336}
!8377 = !DILocation(line: 2863, column: 24, scope: !8295)
!8378 = !DILocation(line: 2863, column: 31, scope: !8295)
!8379 = !DILocation(line: 2863, column: 9, scope: !8295)
!8380 = !DILocation(line: 2864, column: 9, scope: !8295)
!8381 = !DILocation(line: 2864, column: 16, scope: !8295)
!8382 = !DILocation(line: 2864, column: 29, scope: !8295)
!8383 = !DILocation(line: 2866, column: 28, scope: !8295)
!8384 = !DILocation(line: 2866, column: 33, scope: !8295)
!8385 = !DILocation(line: 2866, column: 48, scope: !8295)
!8386 = !DILocation(line: 2866, column: 9, scope: !8295)
!8387 = !DILocation(line: 2867, column: 1, scope: !8295)
!8388 = distinct !DISubprogram(name: "rd_kafka_replyq_clear", scope: !506, file: !506, line: 755, type: !8389, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8392)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{null, !8391}
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!8392 = !{!8393}
!8393 = !DILocalVariable(name: "replyq", arg: 1, scope: !8388, file: !506, line: 755, type: !8391)
!8394 = !DILocation(line: 755, column: 42, scope: !8388)
!8395 = !DILocation(line: 756, column: 16, scope: !8388)
!8396 = !DILocation(line: 756, column: 9, scope: !8388)
!8397 = !DILocation(line: 757, column: 1, scope: !8388)
!8398 = !DISubprogram(name: "rd_slice_seek", scope: !1709, file: !1709, line: 339, type: !8399, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8399 = !DISubroutineType(types: !8400)
!8400 = !{!126, !6901, !692}
!8401 = distinct !DISubprogram(name: "rd_kafka_dr_msgq", scope: !2, file: !2, line: 2908, type: !8402, scopeLine: 2910, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8405)
!8402 = !DISubroutineType(types: !8403)
!8403 = !{null, !406, !8404, !550}
!8404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!8405 = !{!8406, !8407, !8408, !8409, !8410}
!8406 = !DILocalVariable(name: "rkt", arg: 1, scope: !8401, file: !2, line: 2908, type: !406)
!8407 = !DILocalVariable(name: "rkmq", arg: 2, scope: !8401, file: !2, line: 2909, type: !8404)
!8408 = !DILocalVariable(name: "err", arg: 3, scope: !8401, file: !2, line: 2910, type: !550)
!8409 = !DILocalVariable(name: "rk", scope: !8401, file: !2, line: 2911, type: !586)
!8410 = !DILocalVariable(name: "rko", scope: !8411, file: !2, line: 2926, type: !914)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !2, line: 2924, column: 48)
!8412 = distinct !DILexicalBlock(scope: !8401, file: !2, line: 2923, column: 13)
!8413 = !DILocation(line: 2908, column: 41, scope: !8401)
!8414 = !DILocation(line: 2909, column: 40, scope: !8401)
!8415 = !DILocation(line: 2910, column: 43, scope: !8401)
!8416 = !DILocation(line: 2911, column: 9, scope: !8401)
!8417 = !DILocation(line: 2911, column: 21, scope: !8401)
!8418 = !DILocation(line: 2911, column: 26, scope: !8401)
!8419 = !DILocation(line: 2911, column: 31, scope: !8401)
!8420 = !{!8421, !3911, i64 240}
!8421 = !{!"rd_kafka_topic_s", !3912, i64 0, !3940, i64 8, !3944, i64 24, !3912, i64 32, !3911, i64 88, !3911, i64 96, !3911, i64 104, !3941, i64 112, !3941, i64 116, !3943, i64 120, !4142, i64 144, !3943, i64 184, !3942, i64 208, !3942, i64 216, !3944, i64 224, !3912, i64 228, !3941, i64 232, !3912, i64 236, !3911, i64 240, !3948, i64 248, !3948, i64 432, !8422, i64 616, !3940, i64 984}
!8422 = !{!"rd_kafka_topic_conf_s", !4144, i64 0, !3941, i64 264, !3941, i64 268, !3941, i64 272, !3911, i64 280, !3911, i64 288, !3912, i64 296, !3941, i64 300, !3911, i64 304, !3912, i64 312, !3912, i64 316, !3941, i64 320, !3941, i64 324, !3941, i64 328, !3941, i64 332, !3941, i64 336, !3911, i64 344, !3941, i64 352, !3912, i64 356, !3911, i64 360}
!8423 = !DILocation(line: 2913, column: 13, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8401, file: !2, line: 2913, column: 13)
!8425 = !DILocation(line: 2913, column: 13, scope: !8401)
!8426 = !DILocation(line: 2914, column: 17, scope: !8424)
!8427 = !DILocation(line: 2916, column: 13, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8401, file: !2, line: 2916, column: 13)
!8429 = !DILocation(line: 2916, column: 17, scope: !8428)
!8430 = !DILocation(line: 2916, column: 20, scope: !8428)
!8431 = !{!4141, !3911, i64 2072}
!8432 = !DILocation(line: 2916, column: 13, scope: !8401)
!8433 = !DILocation(line: 2917, column: 34, scope: !8428)
!8434 = !DILocation(line: 2917, column: 38, scope: !8428)
!8435 = !DILocation(line: 2917, column: 45, scope: !8428)
!8436 = !DILocation(line: 2918, column: 51, scope: !8428)
!8437 = !DILocation(line: 2918, column: 33, scope: !8428)
!8438 = !DILocation(line: 2917, column: 17, scope: !8428)
!8439 = !DILocation(line: 2921, column: 56, scope: !8401)
!8440 = !DILocation(line: 2921, column: 60, scope: !8401)
!8441 = !DILocation(line: 2921, column: 66, scope: !8401)
!8442 = !DILocation(line: 2921, column: 9, scope: !8401)
!8443 = !DILocation(line: 2923, column: 13, scope: !8412)
!8444 = !DILocation(line: 2923, column: 17, scope: !8412)
!8445 = !{!4141, !3912, i64 3036}
!8446 = !DILocation(line: 2923, column: 27, scope: !8412)
!8447 = !DILocation(line: 2923, column: 52, scope: !8412)
!8448 = !DILocation(line: 2924, column: 15, scope: !8412)
!8449 = !DILocation(line: 2924, column: 19, scope: !8412)
!8450 = !DILocation(line: 2924, column: 27, scope: !8412)
!8451 = !{!4141, !3941, i64 2136}
!8452 = !DILocation(line: 2924, column: 39, scope: !8412)
!8453 = !DILocation(line: 2924, column: 42, scope: !8412)
!8454 = !DILocation(line: 2923, column: 13, scope: !8401)
!8455 = !DILocation(line: 2926, column: 17, scope: !8411)
!8456 = !DILocation(line: 2926, column: 32, scope: !8411)
!8457 = !DILocation(line: 2928, column: 37, scope: !8411)
!8458 = !DILocation(line: 2928, column: 35, scope: !8411)
!8459 = !DILocation(line: 2929, column: 37, scope: !8411)
!8460 = !DILocation(line: 2929, column: 17, scope: !8411)
!8461 = !DILocation(line: 2929, column: 22, scope: !8411)
!8462 = !DILocation(line: 2929, column: 35, scope: !8411)
!8463 = !{!8464, !3912, i64 32}
!8464 = !{!"rd_kafka_op_s", !3940, i64 0, !3912, i64 16, !3941, i64 20, !3941, i64 24, !3941, i64 28, !3912, i64 32, !3911, i64 40, !3941, i64 48, !3912, i64 52, !3911, i64 56, !4652, i64 64, !3911, i64 80, !3911, i64 88, !3911, i64 96, !3911, i64 104, !3912, i64 112}
!8465 = !DILocation(line: 2930, column: 57, scope: !8411)
!8466 = !DILocation(line: 2930, column: 37, scope: !8411)
!8467 = !DILocation(line: 2930, column: 17, scope: !8411)
!8468 = !DILocation(line: 2930, column: 22, scope: !8411)
!8469 = !DILocation(line: 2930, column: 31, scope: !8411)
!8470 = !DILocation(line: 2930, column: 35, scope: !8411)
!8471 = !DILocation(line: 2931, column: 37, scope: !8411)
!8472 = !DILocation(line: 2931, column: 42, scope: !8411)
!8473 = !DILocation(line: 2931, column: 51, scope: !8411)
!8474 = !DILocation(line: 2931, column: 17, scope: !8411)
!8475 = !DILocation(line: 2934, column: 37, scope: !8411)
!8476 = !DILocation(line: 2934, column: 42, scope: !8411)
!8477 = !DILocation(line: 2934, column: 51, scope: !8411)
!8478 = !DILocation(line: 2934, column: 57, scope: !8411)
!8479 = !DILocation(line: 2934, column: 17, scope: !8411)
!8480 = !DILocation(line: 2936, column: 32, scope: !8411)
!8481 = !DILocation(line: 2936, column: 36, scope: !8411)
!8482 = !DILocation(line: 2936, column: 44, scope: !8411)
!8483 = !DILocation(line: 2936, column: 17, scope: !8411)
!8484 = !DILocation(line: 2938, column: 9, scope: !8412)
!8485 = !DILocation(line: 2938, column: 9, scope: !8411)
!8486 = !DILocation(line: 2942, column: 37, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8412, file: !2, line: 2938, column: 16)
!8488 = !DILocation(line: 2942, column: 41, scope: !8487)
!8489 = !DILocation(line: 2942, column: 17, scope: !8487)
!8490 = !DILocation(line: 2944, column: 1, scope: !8401)
!8491 = distinct !DISubprogram(name: "rd_kafka_msgq_len", scope: !1825, file: !1825, line: 223, type: !8492, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8496)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!126, !8494}
!8494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8495, size: 64)
!8495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1824)
!8496 = !{!8497}
!8497 = !DILocalVariable(name: "rkmq", arg: 1, scope: !8491, file: !1825, line: 223, type: !8494)
!8498 = !DILocation(line: 223, column: 73, scope: !8491)
!8499 = !DILocation(line: 224, column: 21, scope: !8491)
!8500 = !DILocation(line: 224, column: 27, scope: !8491)
!8501 = !{!4646, !3941, i64 16}
!8502 = !DILocation(line: 224, column: 9, scope: !8491)
!8503 = !DISubprogram(name: "rd_kafka_interceptors_on_acknowledgement_queue", scope: !4435, file: !4435, line: 48, type: !8504, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{null, !586, !8404, !550}
!8506 = distinct !DISubprogram(name: "rd_kafka_topic_keep", scope: !298, file: !298, line: 188, type: !8507, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8509)
!8507 = !DISubroutineType(types: !8508)
!8508 = !{!406, !406}
!8509 = !{!8510, !8511}
!8510 = !DILocalVariable(name: "rkt", arg: 1, scope: !8506, file: !298, line: 188, type: !406)
!8511 = !DILocalVariable(name: "lrkt", scope: !8506, file: !298, line: 189, type: !2865)
!8512 = !DILocation(line: 188, column: 39, scope: !8506)
!8513 = !DILocation(line: 189, column: 9, scope: !8506)
!8514 = !DILocation(line: 189, column: 29, scope: !8506)
!8515 = !DILocation(line: 190, column: 13, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8506, file: !298, line: 190, column: 13)
!8517 = !DILocation(line: 190, column: 13, scope: !8506)
!8518 = !DILocation(line: 191, column: 39, scope: !8516)
!8519 = !DILocation(line: 191, column: 17, scope: !8516)
!8520 = !DILocation(line: 193, column: 17, scope: !8516)
!8521 = !DILocation(line: 194, column: 16, scope: !8506)
!8522 = !DILocation(line: 195, column: 1, scope: !8506)
!8523 = !DILocation(line: 194, column: 9, scope: !8506)
!8524 = distinct !DISubprogram(name: "rd_kafka_msgq_init", scope: !1825, file: !1825, line: 247, type: !8525, scopeLine: 247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8527)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{null, !8404}
!8527 = !{!8528}
!8528 = !DILocalVariable(name: "rkmq", arg: 1, scope: !8524, file: !1825, line: 247, type: !8404)
!8529 = !DILocation(line: 247, column: 69, scope: !8524)
!8530 = !DILocation(line: 248, column: 9, scope: !8524)
!8531 = !DILocation(line: 248, column: 9, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8524, file: !1825, line: 248, column: 9)
!8533 = !{!4646, !3911, i64 0}
!8534 = !{!4646, !3911, i64 8}
!8535 = !DILocation(line: 249, column: 9, scope: !8524)
!8536 = !DILocation(line: 249, column: 15, scope: !8524)
!8537 = !DILocation(line: 249, column: 30, scope: !8524)
!8538 = !DILocation(line: 250, column: 9, scope: !8524)
!8539 = !DILocation(line: 250, column: 15, scope: !8524)
!8540 = !DILocation(line: 250, column: 30, scope: !8524)
!8541 = !{!4646, !3942, i64 24}
!8542 = !DILocation(line: 251, column: 1, scope: !8524)
!8543 = distinct !DISubprogram(name: "rd_kafka_msgq_move", scope: !1825, file: !1825, line: 289, type: !8544, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8546)
!8544 = !DISubroutineType(types: !8545)
!8545 = !{null, !8404, !8404}
!8546 = !{!8547, !8548}
!8547 = !DILocalVariable(name: "dst", arg: 1, scope: !8543, file: !1825, line: 289, type: !8404)
!8548 = !DILocalVariable(name: "src", arg: 2, scope: !8543, file: !1825, line: 290, type: !8404)
!8549 = !DILocation(line: 289, column: 69, scope: !8543)
!8550 = !DILocation(line: 290, column: 69, scope: !8543)
!8551 = !DILocation(line: 291, column: 9, scope: !8543)
!8552 = !DILocation(line: 291, column: 9, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !1825, line: 291, column: 9)
!8554 = distinct !DILexicalBlock(scope: !8543, file: !1825, line: 291, column: 9)
!8555 = !DILocation(line: 291, column: 9, scope: !8554)
!8556 = !DILocation(line: 291, column: 9, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8553, file: !1825, line: 291, column: 9)
!8558 = !{!8559, !3911, i64 80}
!8559 = !{!"rd_kafka_msg_s", !8560, i64 0, !3940, i64 72, !3941, i64 88, !3912, i64 92, !3942, i64 96, !3911, i64 104, !3912, i64 112, !3941, i64 116, !3912, i64 120}
!8560 = !{!"rd_kafka_message_s", !3912, i64 0, !3911, i64 8, !3941, i64 16, !3911, i64 24, !3942, i64 32, !3911, i64 40, !3942, i64 48, !3942, i64 56, !3911, i64 64}
!8561 = !DILocation(line: 291, column: 9, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8557, file: !1825, line: 291, column: 9)
!8563 = !DILocation(line: 291, column: 9, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8553, file: !1825, line: 291, column: 9)
!8565 = !DILocation(line: 292, column: 31, scope: !8543)
!8566 = !DILocation(line: 292, column: 36, scope: !8543)
!8567 = !DILocation(line: 292, column: 9, scope: !8543)
!8568 = !DILocation(line: 292, column: 14, scope: !8543)
!8569 = !DILocation(line: 292, column: 29, scope: !8543)
!8570 = !DILocation(line: 293, column: 31, scope: !8543)
!8571 = !DILocation(line: 293, column: 36, scope: !8543)
!8572 = !DILocation(line: 293, column: 9, scope: !8543)
!8573 = !DILocation(line: 293, column: 14, scope: !8543)
!8574 = !DILocation(line: 293, column: 29, scope: !8543)
!8575 = !DILocation(line: 294, column: 28, scope: !8543)
!8576 = !DILocation(line: 294, column: 9, scope: !8543)
!8577 = !DILocation(line: 295, column: 9, scope: !8543)
!8578 = !DILocation(line: 295, column: 9, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8543, file: !1825, line: 295, column: 9)
!8580 = !DILocation(line: 296, column: 1, scope: !8543)
!8581 = distinct !DISubprogram(name: "rd_kafka_msgq_purge", scope: !1825, file: !1825, line: 316, type: !8582, scopeLine: 317, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8584)
!8582 = !DISubroutineType(types: !8583)
!8583 = !{null, !586, !8404}
!8584 = !{!8585, !8586, !8587, !8589}
!8585 = !DILocalVariable(name: "rk", arg: 1, scope: !8581, file: !1825, line: 316, type: !586)
!8586 = !DILocalVariable(name: "rkmq", arg: 2, scope: !8581, file: !1825, line: 317, type: !8404)
!8587 = !DILocalVariable(name: "rkm", scope: !8581, file: !1825, line: 318, type: !8588)
!8588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!8589 = !DILocalVariable(name: "next", scope: !8581, file: !1825, line: 318, type: !8588)
!8590 = !DILocation(line: 316, column: 65, scope: !8581)
!8591 = !DILocation(line: 317, column: 70, scope: !8581)
!8592 = !DILocation(line: 318, column: 9, scope: !8581)
!8593 = !DILocation(line: 318, column: 25, scope: !8581)
!8594 = !DILocation(line: 318, column: 31, scope: !8581)
!8595 = !DILocation(line: 320, column: 16, scope: !8581)
!8596 = !DILocation(line: 320, column: 14, scope: !8581)
!8597 = !DILocation(line: 321, column: 9, scope: !8581)
!8598 = !DILocation(line: 321, column: 16, scope: !8581)
!8599 = !DILocation(line: 322, column: 24, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8581, file: !1825, line: 321, column: 22)
!8601 = !DILocation(line: 322, column: 22, scope: !8600)
!8602 = !DILocation(line: 323, column: 24, scope: !8600)
!8603 = !{!8559, !3911, i64 72}
!8604 = !DILocation(line: 323, column: 22, scope: !8600)
!8605 = !DILocation(line: 325, column: 38, scope: !8600)
!8606 = !DILocation(line: 325, column: 42, scope: !8600)
!8607 = !DILocation(line: 325, column: 17, scope: !8600)
!8608 = distinct !{!8608, !8597, !8609, !4095}
!8609 = !DILocation(line: 326, column: 9, scope: !8581)
!8610 = !DILocation(line: 328, column: 28, scope: !8581)
!8611 = !DILocation(line: 328, column: 9, scope: !8581)
!8612 = !DILocation(line: 329, column: 1, scope: !8581)
!8613 = distinct !DISubprogram(name: "rd_kafka_dr_implicit_ack", scope: !2, file: !2, line: 2953, type: !8614, scopeLine: 2955, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8616)
!8614 = !DISubroutineType(types: !8615)
!8615 = !{null, !412, !368, !937}
!8616 = !{!8617, !8618, !8619, !8620, !8621, !8622, !8623}
!8617 = !DILocalVariable(name: "rkb", arg: 1, scope: !8613, file: !2, line: 2953, type: !412)
!8618 = !DILocalVariable(name: "rktp", arg: 2, scope: !8613, file: !2, line: 2954, type: !368)
!8619 = !DILocalVariable(name: "last_msgid", arg: 3, scope: !8613, file: !2, line: 2955, type: !937)
!8620 = !DILocalVariable(name: "acked", scope: !8613, file: !2, line: 2956, type: !1824)
!8621 = !DILocalVariable(name: "acked2", scope: !8613, file: !2, line: 2957, type: !1824)
!8622 = !DILocalVariable(name: "status", scope: !8613, file: !2, line: 2958, type: !1860)
!8623 = !DILocalVariable(name: "_logname", scope: !8624, file: !2, line: 2974, type: !924)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !2, line: 2974, column: 9)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !2, line: 2974, column: 9)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !2, line: 2974, column: 9)
!8627 = distinct !DILexicalBlock(scope: !8613, file: !2, line: 2974, column: 9)
!8628 = !DILocation(line: 2953, column: 50, scope: !8613)
!8629 = !DILocation(line: 2954, column: 50, scope: !8613)
!8630 = !DILocation(line: 2955, column: 40, scope: !8613)
!8631 = !DILocation(line: 2956, column: 9, scope: !8613)
!8632 = !DILocation(line: 2956, column: 25, scope: !8613)
!8633 = !DILocation(line: 2956, column: 40, scope: !8613)
!8634 = !{!4647, !3911, i64 8}
!8635 = !DILocation(line: 2957, column: 9, scope: !8613)
!8636 = !DILocation(line: 2957, column: 25, scope: !8613)
!8637 = !DILocation(line: 2957, column: 40, scope: !8613)
!8638 = !DILocation(line: 2958, column: 9, scope: !8613)
!8639 = !DILocation(line: 2958, column: 31, scope: !8613)
!8640 = !DILocation(line: 2960, column: 13, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8613, file: !2, line: 2960, column: 13)
!8642 = !DILocation(line: 2960, column: 19, scope: !8641)
!8643 = !{!4645, !3911, i64 96}
!8644 = !DILocation(line: 2960, column: 29, scope: !8641)
!8645 = !DILocation(line: 2960, column: 38, scope: !8641)
!8646 = !{!8421, !3941, i64 880}
!8647 = !DILocation(line: 2960, column: 52, scope: !8641)
!8648 = !DILocation(line: 2960, column: 13, scope: !8613)
!8649 = !DILocation(line: 2961, column: 24, scope: !8641)
!8650 = !DILocation(line: 2961, column: 17, scope: !8641)
!8651 = !DILocation(line: 2963, column: 43, scope: !8613)
!8652 = !DILocation(line: 2963, column: 49, scope: !8613)
!8653 = !DILocation(line: 2963, column: 65, scope: !8613)
!8654 = !DILocation(line: 2964, column: 34, scope: !8613)
!8655 = !DILocation(line: 2963, column: 9, scope: !8613)
!8656 = !DILocation(line: 2965, column: 44, scope: !8613)
!8657 = !DILocation(line: 2965, column: 50, scope: !8613)
!8658 = !DILocation(line: 2965, column: 61, scope: !8613)
!8659 = !DILocation(line: 2965, column: 73, scope: !8613)
!8660 = !DILocation(line: 2965, column: 9, scope: !8613)
!8661 = !DILocation(line: 2969, column: 35, scope: !8613)
!8662 = !DILocation(line: 2969, column: 41, scope: !8613)
!8663 = !DILocation(line: 2969, column: 51, scope: !8613)
!8664 = !DILocation(line: 2969, column: 60, scope: !8613)
!8665 = !{!8421, !3911, i64 920}
!8666 = !DILocation(line: 2968, column: 9, scope: !8613)
!8667 = !DILocation(line: 2971, column: 14, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8613, file: !2, line: 2971, column: 13)
!8669 = !DILocation(line: 2971, column: 13, scope: !8613)
!8670 = !DILocation(line: 2972, column: 17, scope: !8668)
!8671 = !DILocation(line: 2974, column: 9, scope: !8613)
!8672 = !DILocation(line: 2974, column: 9, scope: !8626)
!8673 = !DILocation(line: 2974, column: 9, scope: !8627)
!8674 = !DILocation(line: 2974, column: 9, scope: !8625)
!8675 = !DILocation(line: 2974, column: 9, scope: !8624)
!8676 = !{!8421, !3911, i64 88}
!8677 = !{!8678, !3941, i64 0}
!8678 = !{!"rd_kafkap_str_s", !3941, i64 0, !3911, i64 8}
!8679 = !{!8678, !3911, i64 8}
!8680 = !{!4645, !3941, i64 104}
!8681 = !DILocation(line: 2988, column: 26, scope: !8613)
!8682 = !DILocation(line: 2988, column: 32, scope: !8613)
!8683 = !DILocation(line: 2988, column: 9, scope: !8613)
!8684 = !DILocation(line: 2989, column: 1, scope: !8613)
!8685 = !DISubprogram(name: "rd_kafka_msgq_move_acked", scope: !1825, file: !1825, line: 553, type: !8686, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{null, !8404, !8404, !937, !1860}
!8688 = !DISubprogram(name: "rd_kafka_msgq_insert_msgq", scope: !371, file: !371, line: 564, type: !8689, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8689 = !DISubroutineType(types: !8690)
!8690 = !{null, !8404, !8404, !1194}
!8691 = distinct !DISubprogram(name: "rd_kafka_msgq_first", scope: !1825, file: !1825, line: 368, type: !8692, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8694)
!8692 = !DISubroutineType(types: !8693)
!8693 = !{!8588, !8494}
!8694 = !{!8695}
!8695 = !DILocalVariable(name: "rkmq", arg: 1, scope: !8691, file: !1825, line: 368, type: !8494)
!8696 = !DILocation(line: 368, column: 44, scope: !8691)
!8697 = !DILocation(line: 369, column: 16, scope: !8691)
!8698 = !DILocation(line: 369, column: 9, scope: !8691)
!8699 = distinct !DISubprogram(name: "rd_kafka_msgq_last", scope: !1825, file: !1825, line: 378, type: !8692, scopeLine: 378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8700)
!8700 = !{!8701}
!8701 = !DILocalVariable(name: "rkmq", arg: 1, scope: !8699, file: !1825, line: 378, type: !8494)
!8702 = !DILocation(line: 378, column: 43, scope: !8699)
!8703 = !DILocation(line: 379, column: 16, scope: !8699)
!8704 = !DILocation(line: 379, column: 9, scope: !8699)
!8705 = distinct !DISubprogram(name: "rd_kafka_broker_destroy_final", scope: !2, file: !2, line: 4678, type: !1583, scopeLine: 4678, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8706)
!8706 = !{!8707}
!8707 = !DILocalVariable(name: "rkb", arg: 1, scope: !8705, file: !2, line: 4678, type: !412)
!8708 = !DILocation(line: 4678, column: 55, scope: !8705)
!8709 = !DILocation(line: 4680, column: 9, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !2, line: 4680, column: 9)
!8711 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4680, column: 9)
!8712 = !DILocation(line: 4680, column: 9, scope: !8711)
!8713 = !DILocation(line: 4681, column: 9, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !2, line: 4681, column: 9)
!8715 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4681, column: 9)
!8716 = !DILocation(line: 4681, column: 9, scope: !8715)
!8717 = !DILocation(line: 4682, column: 9, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !2, line: 4682, column: 9)
!8719 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4682, column: 9)
!8720 = !DILocation(line: 4682, column: 9, scope: !8719)
!8721 = !DILocation(line: 4683, column: 9, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !2, line: 4683, column: 9)
!8723 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4683, column: 9)
!8724 = !{!3939, !3911, i64 1032}
!8725 = !DILocation(line: 4683, column: 9, scope: !8723)
!8726 = !DILocation(line: 4684, column: 9, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !2, line: 4684, column: 9)
!8728 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4684, column: 9)
!8729 = !{!3939, !3911, i64 1056}
!8730 = !DILocation(line: 4684, column: 9, scope: !8728)
!8731 = !DILocation(line: 4685, column: 9, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !2, line: 4685, column: 9)
!8733 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4685, column: 9)
!8734 = !DILocation(line: 4685, column: 9, scope: !8733)
!8735 = !DILocation(line: 4687, column: 13, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4687, column: 13)
!8737 = !DILocation(line: 4687, column: 18, scope: !8736)
!8738 = !DILocation(line: 4687, column: 29, scope: !8736)
!8739 = !DILocation(line: 4687, column: 50, scope: !8736)
!8740 = !DILocation(line: 4688, column: 14, scope: !8736)
!8741 = !DILocation(line: 4688, column: 19, scope: !8736)
!8742 = !DILocation(line: 4688, column: 27, scope: !8736)
!8743 = !DILocation(line: 4688, column: 35, scope: !8736)
!8744 = !DILocation(line: 4688, column: 53, scope: !8736)
!8745 = !DILocation(line: 4689, column: 48, scope: !8736)
!8746 = !DILocation(line: 4690, column: 14, scope: !8736)
!8747 = !DILocation(line: 4690, column: 19, scope: !8736)
!8748 = !DILocation(line: 4690, column: 27, scope: !8736)
!8749 = !DILocation(line: 4690, column: 35, scope: !8736)
!8750 = !DILocation(line: 4690, column: 53, scope: !8736)
!8751 = !DILocation(line: 4687, column: 13, scope: !8705)
!8752 = !DILocation(line: 4691, column: 43, scope: !8736)
!8753 = !DILocation(line: 4691, column: 17, scope: !8736)
!8754 = !DILocation(line: 4693, column: 13, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4693, column: 13)
!8756 = !DILocation(line: 4693, column: 18, scope: !8755)
!8757 = !DILocation(line: 4693, column: 35, scope: !8755)
!8758 = !DILocation(line: 4693, column: 13, scope: !8705)
!8759 = !DILocation(line: 4694, column: 17, scope: !8755)
!8760 = !DILocation(line: 4695, column: 13, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4695, column: 13)
!8762 = !DILocation(line: 4695, column: 18, scope: !8761)
!8763 = !DILocation(line: 4695, column: 35, scope: !8761)
!8764 = !DILocation(line: 4695, column: 13, scope: !8705)
!8765 = !DILocation(line: 4696, column: 17, scope: !8761)
!8766 = !DILocation(line: 4698, column: 13, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4698, column: 13)
!8768 = !DILocation(line: 4698, column: 18, scope: !8767)
!8769 = !DILocation(line: 4698, column: 13, scope: !8705)
!8770 = !DILocation(line: 4699, column: 17, scope: !8767)
!8771 = !DILocation(line: 4699, column: 17, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !2, line: 4699, column: 17)
!8773 = distinct !DILexicalBlock(scope: !8767, file: !2, line: 4699, column: 17)
!8774 = !DILocation(line: 4699, column: 17, scope: !8773)
!8775 = !DILocation(line: 4701, column: 13, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4701, column: 13)
!8777 = !DILocation(line: 4701, column: 18, scope: !8776)
!8778 = !{!3939, !3911, i64 24}
!8779 = !DILocation(line: 4701, column: 13, scope: !8705)
!8780 = !DILocation(line: 4702, column: 42, scope: !8776)
!8781 = !DILocation(line: 4702, column: 47, scope: !8776)
!8782 = !DILocation(line: 4702, column: 17, scope: !8776)
!8783 = !DILocation(line: 4704, column: 13, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4704, column: 13)
!8785 = !DILocation(line: 4704, column: 18, scope: !8784)
!8786 = !DILocation(line: 4704, column: 13, scope: !8705)
!8787 = !DILocation(line: 4705, column: 25, scope: !8784)
!8788 = !DILocation(line: 4705, column: 30, scope: !8784)
!8789 = !DILocation(line: 4705, column: 17, scope: !8784)
!8790 = !DILocation(line: 4706, column: 17, scope: !8705)
!8791 = !DILocation(line: 4706, column: 22, scope: !8705)
!8792 = !DILocation(line: 4706, column: 9, scope: !8705)
!8793 = !DILocation(line: 4708, column: 9, scope: !8705)
!8794 = !DILocation(line: 4709, column: 34, scope: !8705)
!8795 = !DILocation(line: 4709, column: 39, scope: !8705)
!8796 = !DILocation(line: 4709, column: 9, scope: !8705)
!8797 = !DILocation(line: 4711, column: 25, scope: !8705)
!8798 = !DILocation(line: 4711, column: 30, scope: !8705)
!8799 = !DILocation(line: 4711, column: 9, scope: !8705)
!8800 = !DILocation(line: 4712, column: 25, scope: !8705)
!8801 = !DILocation(line: 4712, column: 30, scope: !8705)
!8802 = !DILocation(line: 4712, column: 9, scope: !8705)
!8803 = !DILocation(line: 4713, column: 25, scope: !8705)
!8804 = !DILocation(line: 4713, column: 30, scope: !8705)
!8805 = !DILocation(line: 4713, column: 9, scope: !8705)
!8806 = !DILocation(line: 4714, column: 25, scope: !8705)
!8807 = !DILocation(line: 4714, column: 30, scope: !8705)
!8808 = !DILocation(line: 4714, column: 9, scope: !8705)
!8809 = !DILocation(line: 4716, column: 19, scope: !8705)
!8810 = !DILocation(line: 4716, column: 24, scope: !8705)
!8811 = !DILocation(line: 4716, column: 9, scope: !8705)
!8812 = !DILocation(line: 4717, column: 17, scope: !8705)
!8813 = !DILocation(line: 4717, column: 22, scope: !8705)
!8814 = !DILocation(line: 4717, column: 9, scope: !8705)
!8815 = !DILocation(line: 4718, column: 9, scope: !8705)
!8816 = !DILocation(line: 4718, column: 14, scope: !8705)
!8817 = !DILocation(line: 4718, column: 26, scope: !8705)
!8818 = !DILocation(line: 4719, column: 21, scope: !8705)
!8819 = !DILocation(line: 4719, column: 26, scope: !8705)
!8820 = !DILocation(line: 4719, column: 9, scope: !8705)
!8821 = !DILocation(line: 4720, column: 22, scope: !8705)
!8822 = !DILocation(line: 4720, column: 27, scope: !8705)
!8823 = !DILocation(line: 4720, column: 9, scope: !8705)
!8824 = !DILocation(line: 4722, column: 30, scope: !8705)
!8825 = !DILocation(line: 4722, column: 35, scope: !8705)
!8826 = !DILocation(line: 4722, column: 43, scope: !8705)
!8827 = !DILocation(line: 4722, column: 55, scope: !8705)
!8828 = !DILocation(line: 4722, column: 60, scope: !8705)
!8829 = !DILocation(line: 4722, column: 9, scope: !8705)
!8830 = !DILocation(line: 4725, column: 22, scope: !8705)
!8831 = !DILocation(line: 4725, column: 27, scope: !8705)
!8832 = !DILocation(line: 4725, column: 9, scope: !8705)
!8833 = !DILocation(line: 4727, column: 9, scope: !8705)
!8834 = !DILocation(line: 4727, column: 9, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8705, file: !2, line: 4727, column: 9)
!8836 = !DILocation(line: 4729, column: 17, scope: !8705)
!8837 = !DILocation(line: 4729, column: 9, scope: !8705)
!8838 = !DILocation(line: 4730, column: 1, scope: !8705)
!8839 = !DISubprogram(name: "rd_kafka_sasl_broker_term", scope: !8840, file: !8840, line: 48, type: !1583, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8840 = !DIFile(filename: "./rdkafka_sasl.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "f1ee2e3ee966d0f30abc88faec3616c5")
!8841 = !DISubprogram(name: "close", scope: !1368, file: !1368, line: 358, type: !6225, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8842 = !DISubprogram(name: "rd_sockaddr_list_destroy", scope: !429, file: !429, line: 184, type: !8843, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8843 = !DISubroutineType(types: !8844)
!8844 = !{null, !427}
!8845 = distinct !DISubprogram(name: "rd_free", scope: !314, file: !314, line: 150, type: !610, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8846)
!8846 = !{!8847}
!8847 = !DILocalVariable(name: "ptr", arg: 1, scope: !8845, file: !314, line: 150, type: !607)
!8848 = !DILocation(line: 150, column: 47, scope: !8845)
!8849 = !DILocation(line: 151, column: 14, scope: !8845)
!8850 = !DILocation(line: 151, column: 9, scope: !8845)
!8851 = !DILocation(line: 152, column: 1, scope: !8845)
!8852 = !DISubprogram(name: "rd_kafka_q_purge0", scope: !506, file: !506, line: 201, type: !8853, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8853 = !DISubroutineType(types: !8854)
!8854 = !{!126, !503, !126}
!8855 = distinct !DISubprogram(name: "rd_kafka_q_destroy_owner", scope: !506, file: !506, line: 247, type: !8856, scopeLine: 247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8858)
!8856 = !DISubroutineType(types: !8857)
!8857 = !{null, !503}
!8858 = !{!8859}
!8859 = !DILocalVariable(name: "rkq", arg: 1, scope: !8855, file: !506, line: 247, type: !503)
!8860 = !DILocation(line: 247, column: 72, scope: !8855)
!8861 = !DILocation(line: 248, column: 29, scope: !8855)
!8862 = !DILocation(line: 248, column: 9, scope: !8855)
!8863 = !DILocation(line: 249, column: 1, scope: !8855)
!8864 = distinct !DISubprogram(name: "rd_avg_destroy", scope: !2406, file: !2406, line: 251, type: !8865, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8867)
!8865 = !DISubroutineType(types: !8866)
!8866 = !{null, !8224}
!8867 = !{!8868}
!8868 = !DILocalVariable(name: "ra", arg: 1, scope: !8864, file: !2406, line: 251, type: !8224)
!8869 = !DILocation(line: 251, column: 48, scope: !8864)
!8870 = !DILocation(line: 253, column: 13, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8864, file: !2406, line: 253, column: 13)
!8872 = !DILocation(line: 253, column: 17, scope: !8871)
!8873 = !DILocation(line: 253, column: 13, scope: !8864)
!8874 = !DILocation(line: 254, column: 42, scope: !8871)
!8875 = !DILocation(line: 254, column: 46, scope: !8871)
!8876 = !DILocation(line: 254, column: 17, scope: !8871)
!8877 = !DILocation(line: 256, column: 22, scope: !8864)
!8878 = !DILocation(line: 256, column: 26, scope: !8864)
!8879 = !DILocation(line: 256, column: 9, scope: !8864)
!8880 = !DILocation(line: 257, column: 1, scope: !8864)
!8881 = !DISubprogram(name: "mtx_destroy", scope: !510, file: !510, line: 168, type: !8882, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{null, !1813}
!8884 = distinct !DISubprogram(name: "rd_kafka_broker_internal", scope: !2, file: !2, line: 4736, type: !8885, scopeLine: 4736, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8887)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!412, !586}
!8887 = !{!8888, !8889}
!8888 = !DILocalVariable(name: "rk", arg: 1, scope: !8884, file: !2, line: 4736, type: !586)
!8889 = !DILocalVariable(name: "rkb", scope: !8884, file: !2, line: 4737, type: !412)
!8890 = !DILocation(line: 4736, column: 57, scope: !8884)
!8891 = !DILocation(line: 4737, column: 9, scope: !8884)
!8892 = !DILocation(line: 4737, column: 28, scope: !8884)
!8893 = !DILocation(line: 4739, column: 19, scope: !8884)
!8894 = !DILocation(line: 4739, column: 23, scope: !8884)
!8895 = !DILocation(line: 4739, column: 9, scope: !8884)
!8896 = !DILocation(line: 4740, column: 15, scope: !8884)
!8897 = !DILocation(line: 4740, column: 19, scope: !8884)
!8898 = !{!4141, !3911, i64 136}
!8899 = !DILocation(line: 4740, column: 13, scope: !8884)
!8900 = !DILocation(line: 4741, column: 13, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8884, file: !2, line: 4741, column: 13)
!8902 = !DILocation(line: 4741, column: 13, scope: !8884)
!8903 = !DILocation(line: 4742, column: 17, scope: !8901)
!8904 = !DILocation(line: 4743, column: 21, scope: !8884)
!8905 = !DILocation(line: 4743, column: 25, scope: !8884)
!8906 = !DILocation(line: 4743, column: 9, scope: !8884)
!8907 = !DILocation(line: 4745, column: 16, scope: !8884)
!8908 = !DILocation(line: 4746, column: 1, scope: !8884)
!8909 = !DILocation(line: 4745, column: 9, scope: !8884)
!8910 = distinct !DISubprogram(name: "rd_kafka_broker_add", scope: !2, file: !2, line: 4757, type: !8911, scopeLine: 4762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !8913)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{!412, !586, !2354, !979, !365, !449, !320}
!8913 = !{!8914, !8915, !8916, !8917, !8918, !8919, !8920, !8921, !8922, !8931, !8932, !8936, !8939, !8944}
!8914 = !DILocalVariable(name: "rk", arg: 1, scope: !8910, file: !2, line: 4757, type: !586)
!8915 = !DILocalVariable(name: "source", arg: 2, scope: !8910, file: !2, line: 4758, type: !2354)
!8916 = !DILocalVariable(name: "proto", arg: 3, scope: !8910, file: !2, line: 4759, type: !979)
!8917 = !DILocalVariable(name: "name", arg: 4, scope: !8910, file: !2, line: 4760, type: !365)
!8918 = !DILocalVariable(name: "port", arg: 5, scope: !8910, file: !2, line: 4761, type: !449)
!8919 = !DILocalVariable(name: "nodeid", arg: 6, scope: !8910, file: !2, line: 4762, type: !320)
!8920 = !DILocalVariable(name: "rkb", scope: !8910, file: !2, line: 4763, type: !412)
!8921 = !DILocalVariable(name: "r", scope: !8910, file: !2, line: 4765, type: !126)
!8922 = !DILocalVariable(name: "newset", scope: !8910, file: !2, line: 4766, type: !8923)
!8923 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !8924, line: 7, baseType: !8925)
!8924 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", directory: "", checksumkind: CSK_MD5, checksum: "c2b978aaf49d5c0e2b1e9c2e1b7f7848")
!8925 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !8926, line: 8, baseType: !8927)
!8926 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "", checksumkind: CSK_MD5, checksum: "acc6b14c0967857fec362a8d433e1cf2")
!8927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8926, line: 5, size: 1024, elements: !8928)
!8928 = !{!8929}
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !8927, file: !8926, line: 7, baseType: !8930, size: 1024)
!8930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 1024, elements: !477)
!8931 = !DILocalVariable(name: "oldset", scope: !8910, file: !2, line: 4766, type: !8923)
!8932 = !DILocalVariable(name: "_logname", scope: !8933, file: !2, line: 4857, type: !924)
!8933 = distinct !DILexicalBlock(scope: !8934, file: !2, line: 4857, column: 17)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !2, line: 4856, column: 66)
!8935 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4856, column: 13)
!8936 = !DILocalVariable(name: "onebyte", scope: !8937, file: !2, line: 4866, type: !4)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !2, line: 4865, column: 16)
!8938 = distinct !DILexicalBlock(scope: !8935, file: !2, line: 4862, column: 20)
!8939 = !DILocalVariable(name: "_logname", scope: !8940, file: !2, line: 4868, type: !924)
!8940 = distinct !DILexicalBlock(scope: !8941, file: !2, line: 4868, column: 17)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !2, line: 4868, column: 17)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !2, line: 4868, column: 17)
!8943 = distinct !DILexicalBlock(scope: !8937, file: !2, line: 4868, column: 17)
!8944 = !DILocalVariable(name: "_logname", scope: !8945, file: !2, line: 4919, type: !924)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !2, line: 4919, column: 17)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !2, line: 4919, column: 17)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !2, line: 4919, column: 17)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !2, line: 4919, column: 17)
!8949 = distinct !DILexicalBlock(scope: !8950, file: !2, line: 4900, column: 51)
!8950 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4900, column: 13)
!8951 = !DILocation(line: 4757, column: 52, scope: !8910)
!8952 = !DILocation(line: 4758, column: 62, scope: !8910)
!8953 = !DILocation(line: 4759, column: 60, scope: !8910)
!8954 = !DILocation(line: 4760, column: 52, scope: !8910)
!8955 = !DILocation(line: 4761, column: 49, scope: !8910)
!8956 = !DILocation(line: 4762, column: 48, scope: !8910)
!8957 = !DILocation(line: 4763, column: 9, scope: !8910)
!8958 = !DILocation(line: 4763, column: 28, scope: !8910)
!8959 = !DILocation(line: 4765, column: 9, scope: !8910)
!8960 = !DILocation(line: 4765, column: 13, scope: !8910)
!8961 = !DILocation(line: 4766, column: 9, scope: !8910)
!8962 = !DILocation(line: 4766, column: 18, scope: !8910)
!8963 = !DILocation(line: 4766, column: 26, scope: !8910)
!8964 = !DILocation(line: 4769, column: 15, scope: !8910)
!8965 = !DILocation(line: 4769, column: 13, scope: !8910)
!8966 = !DILocation(line: 4771, column: 13, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4771, column: 13)
!8968 = !DILocation(line: 4771, column: 20, scope: !8967)
!8969 = !DILocation(line: 4771, column: 13, scope: !8910)
!8970 = !DILocation(line: 4772, column: 38, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8967, file: !2, line: 4771, column: 41)
!8972 = !DILocation(line: 4772, column: 43, scope: !8971)
!8973 = !DILocation(line: 4773, column: 65, scope: !8971)
!8974 = !DILocation(line: 4773, column: 71, scope: !8971)
!8975 = !DILocation(line: 4772, column: 17, scope: !8971)
!8976 = !DILocation(line: 4774, column: 40, scope: !8971)
!8977 = !DILocation(line: 4774, column: 45, scope: !8971)
!8978 = !DILocation(line: 4775, column: 40, scope: !8971)
!8979 = !DILocation(line: 4775, column: 47, scope: !8971)
!8980 = !DILocation(line: 4775, column: 52, scope: !8971)
!8981 = !DILocation(line: 4775, column: 66, scope: !8971)
!8982 = !DILocation(line: 4776, column: 40, scope: !8971)
!8983 = !DILocation(line: 4774, column: 17, scope: !8971)
!8984 = !DILocation(line: 4777, column: 9, scope: !8971)
!8985 = !DILocation(line: 4780, column: 17, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8967, file: !2, line: 4777, column: 16)
!8987 = !DILocation(line: 4783, column: 29, scope: !8910)
!8988 = !DILocation(line: 4783, column: 9, scope: !8910)
!8989 = !DILocation(line: 4783, column: 14, scope: !8910)
!8990 = !DILocation(line: 4783, column: 27, scope: !8910)
!8991 = !DILocation(line: 4784, column: 29, scope: !8910)
!8992 = !DILocation(line: 4784, column: 9, scope: !8910)
!8993 = !DILocation(line: 4784, column: 14, scope: !8910)
!8994 = !DILocation(line: 4784, column: 27, scope: !8910)
!8995 = !DILocation(line: 4785, column: 29, scope: !8910)
!8996 = !DILocation(line: 4785, column: 9, scope: !8910)
!8997 = !DILocation(line: 4785, column: 14, scope: !8910)
!8998 = !DILocation(line: 4785, column: 27, scope: !8910)
!8999 = !DILocation(line: 4786, column: 29, scope: !8910)
!9000 = !DILocation(line: 4786, column: 9, scope: !8910)
!9001 = !DILocation(line: 4786, column: 14, scope: !8910)
!9002 = !DILocation(line: 4786, column: 27, scope: !8910)
!9003 = !DILocation(line: 4787, column: 29, scope: !8910)
!9004 = !DILocation(line: 4787, column: 9, scope: !8910)
!9005 = !DILocation(line: 4787, column: 14, scope: !8910)
!9006 = !DILocation(line: 4787, column: 27, scope: !8910)
!9007 = !DILocation(line: 4788, column: 29, scope: !8910)
!9008 = !DILocation(line: 4788, column: 9, scope: !8910)
!9009 = !DILocation(line: 4788, column: 14, scope: !8910)
!9010 = !DILocation(line: 4788, column: 27, scope: !8910)
!9011 = !DILocation(line: 4789, column: 39, scope: !8910)
!9012 = !DILocation(line: 4789, column: 29, scope: !8910)
!9013 = !DILocation(line: 4789, column: 9, scope: !8910)
!9014 = !DILocation(line: 4789, column: 14, scope: !8910)
!9015 = !DILocation(line: 4789, column: 27, scope: !8910)
!9016 = !DILocation(line: 4791, column: 19, scope: !8910)
!9017 = !DILocation(line: 4791, column: 24, scope: !8910)
!9018 = !DILocation(line: 4791, column: 9, scope: !8910)
!9019 = !DILocation(line: 4792, column: 19, scope: !8910)
!9020 = !DILocation(line: 4792, column: 24, scope: !8910)
!9021 = !DILocation(line: 4792, column: 9, scope: !8910)
!9022 = !DILocation(line: 4793, column: 38, scope: !8910)
!9023 = !DILocation(line: 4793, column: 43, scope: !8910)
!9024 = !DILocation(line: 4793, column: 28, scope: !8910)
!9025 = !DILocation(line: 4793, column: 9, scope: !8910)
!9026 = !DILocation(line: 4793, column: 14, scope: !8910)
!9027 = !DILocation(line: 4793, column: 26, scope: !8910)
!9028 = !DILocation(line: 4794, column: 9, scope: !8910)
!9029 = !DILocation(line: 4794, column: 9, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4794, column: 9)
!9031 = !{!3939, !3911, i64 128}
!9032 = !DILocation(line: 4795, column: 9, scope: !8910)
!9033 = !DILocation(line: 4795, column: 9, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4795, column: 9)
!9035 = !{!3939, !3911, i64 144}
!9036 = !{!3939, !3911, i64 152}
!9037 = !DILocation(line: 4796, column: 9, scope: !8910)
!9038 = !DILocation(line: 4796, column: 9, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4796, column: 9)
!9040 = !{!3939, !3911, i64 2456}
!9041 = !DILocation(line: 4797, column: 29, scope: !8910)
!9042 = !DILocation(line: 4797, column: 34, scope: !8910)
!9043 = !DILocation(line: 4797, column: 9, scope: !8910)
!9044 = !DILocation(line: 4798, column: 29, scope: !8910)
!9045 = !DILocation(line: 4798, column: 34, scope: !8910)
!9046 = !DILocation(line: 4798, column: 9, scope: !8910)
!9047 = !DILocation(line: 4799, column: 29, scope: !8910)
!9048 = !DILocation(line: 4799, column: 34, scope: !8910)
!9049 = !DILocation(line: 4799, column: 9, scope: !8910)
!9050 = !DILocation(line: 4800, column: 24, scope: !8910)
!9051 = !DILocation(line: 4800, column: 9, scope: !8910)
!9052 = !DILocation(line: 4800, column: 14, scope: !8910)
!9053 = !DILocation(line: 4800, column: 22, scope: !8910)
!9054 = !DILocation(line: 4801, column: 22, scope: !8910)
!9055 = !DILocation(line: 4801, column: 27, scope: !8910)
!9056 = !DILocation(line: 4802, column: 21, scope: !8910)
!9057 = !DILocation(line: 4802, column: 25, scope: !8910)
!9058 = !DILocation(line: 4802, column: 33, scope: !8910)
!9059 = !{!4141, !3941, i64 680}
!9060 = !DILocation(line: 4801, column: 9, scope: !8910)
!9061 = !DILocation(line: 4803, column: 22, scope: !8910)
!9062 = !DILocation(line: 4803, column: 27, scope: !8910)
!9063 = !DILocation(line: 4804, column: 24, scope: !8910)
!9064 = !DILocation(line: 4804, column: 28, scope: !8910)
!9065 = !DILocation(line: 4804, column: 36, scope: !8910)
!9066 = !DILocation(line: 4803, column: 9, scope: !8910)
!9067 = !DILocation(line: 4805, column: 22, scope: !8910)
!9068 = !DILocation(line: 4805, column: 27, scope: !8910)
!9069 = !DILocation(line: 4806, column: 21, scope: !8910)
!9070 = !DILocation(line: 4806, column: 25, scope: !8910)
!9071 = !DILocation(line: 4806, column: 33, scope: !8910)
!9072 = !DILocation(line: 4805, column: 9, scope: !8910)
!9073 = !DILocation(line: 4807, column: 22, scope: !8910)
!9074 = !DILocation(line: 4807, column: 27, scope: !8910)
!9075 = !DILocation(line: 4808, column: 21, scope: !8910)
!9076 = !DILocation(line: 4808, column: 25, scope: !8910)
!9077 = !DILocation(line: 4808, column: 33, scope: !8910)
!9078 = !DILocation(line: 4807, column: 9, scope: !8910)
!9079 = !DILocation(line: 4809, column: 9, scope: !8910)
!9080 = !DILocation(line: 4810, column: 9, scope: !8910)
!9081 = !DILocation(line: 4812, column: 41, scope: !8910)
!9082 = !DILocation(line: 4812, column: 45, scope: !8910)
!9083 = !DILocation(line: 4812, column: 53, scope: !8910)
!9084 = !{!4141, !3941, i64 688}
!9085 = !DILocation(line: 4812, column: 9, scope: !8910)
!9086 = !DILocation(line: 4812, column: 14, scope: !8910)
!9087 = !DILocation(line: 4812, column: 39, scope: !8910)
!9088 = !{!3939, !3941, i64 2408}
!9089 = !DILocation(line: 4813, column: 27, scope: !8910)
!9090 = !DILocation(line: 4813, column: 32, scope: !8910)
!9091 = !DILocation(line: 4813, column: 48, scope: !8910)
!9092 = !DILocation(line: 4813, column: 9, scope: !8910)
!9093 = !DILocation(line: 4815, column: 27, scope: !8910)
!9094 = !DILocation(line: 4815, column: 32, scope: !8910)
!9095 = !DILocation(line: 4815, column: 38, scope: !8910)
!9096 = !DILocation(line: 4815, column: 9, scope: !8910)
!9097 = !DILocation(line: 4816, column: 27, scope: !8910)
!9098 = !DILocation(line: 4816, column: 32, scope: !8910)
!9099 = !DILocation(line: 4816, column: 38, scope: !8910)
!9100 = !DILocation(line: 4816, column: 9, scope: !8910)
!9101 = !DILocation(line: 4819, column: 13, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4819, column: 13)
!9103 = !DILocation(line: 4819, column: 18, scope: !9102)
!9104 = !DILocation(line: 4819, column: 26, scope: !9102)
!9105 = !DILocation(line: 4819, column: 34, scope: !9102)
!9106 = !DILocation(line: 4819, column: 13, scope: !8910)
!9107 = !DILocation(line: 4820, column: 35, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9102, file: !2, line: 4819, column: 55)
!9109 = !DILocation(line: 4820, column: 40, scope: !9108)
!9110 = !DILocation(line: 4820, column: 17, scope: !9108)
!9111 = !DILocation(line: 4822, column: 22, scope: !9108)
!9112 = !DILocation(line: 4822, column: 27, scope: !9108)
!9113 = !DILocation(line: 4823, column: 30, scope: !9108)
!9114 = !DILocation(line: 4823, column: 35, scope: !9108)
!9115 = !DILocation(line: 4823, column: 43, scope: !9108)
!9116 = !DILocation(line: 4823, column: 51, scope: !9108)
!9117 = !{!4141, !3941, i64 724}
!9118 = !DILocation(line: 4823, column: 21, scope: !9108)
!9119 = !DILocation(line: 4823, column: 75, scope: !9108)
!9120 = !DILocation(line: 4821, column: 17, scope: !9108)
!9121 = !DILocation(line: 4825, column: 9, scope: !9108)
!9122 = !DILocation(line: 4827, column: 27, scope: !8910)
!9123 = !DILocation(line: 4827, column: 32, scope: !8910)
!9124 = !DILocation(line: 4827, column: 45, scope: !8910)
!9125 = !DILocation(line: 4827, column: 9, scope: !8910)
!9126 = !DILocation(line: 4828, column: 27, scope: !8910)
!9127 = !DILocation(line: 4828, column: 32, scope: !8910)
!9128 = !DILocation(line: 4828, column: 45, scope: !8910)
!9129 = !DILocation(line: 4828, column: 9, scope: !8910)
!9130 = !DILocation(line: 4829, column: 27, scope: !8910)
!9131 = !DILocation(line: 4829, column: 32, scope: !8910)
!9132 = !DILocation(line: 4829, column: 45, scope: !8910)
!9133 = !DILocation(line: 4829, column: 9, scope: !8910)
!9134 = !DILocation(line: 4839, column: 9, scope: !8910)
!9135 = !DILocation(line: 4840, column: 9, scope: !8910)
!9136 = !DILocation(line: 4841, column: 13, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4841, column: 13)
!9138 = !DILocation(line: 4841, column: 18, scope: !9137)
!9139 = !DILocation(line: 4841, column: 26, scope: !9137)
!9140 = !DILocation(line: 4841, column: 34, scope: !9137)
!9141 = !{!4141, !3941, i64 684}
!9142 = !DILocation(line: 4841, column: 13, scope: !8910)
!9143 = !DILocation(line: 4842, column: 36, scope: !9137)
!9144 = !DILocation(line: 4842, column: 41, scope: !9137)
!9145 = !DILocation(line: 4842, column: 49, scope: !9137)
!9146 = !DILocation(line: 4842, column: 57, scope: !9137)
!9147 = !DILocation(line: 4842, column: 17, scope: !9137)
!9148 = !DILocation(line: 4843, column: 9, scope: !8910)
!9149 = !DILocation(line: 4852, column: 9, scope: !8910)
!9150 = !DILocation(line: 4852, column: 14, scope: !8910)
!9151 = !DILocation(line: 4852, column: 31, scope: !8910)
!9152 = !DILocation(line: 4853, column: 9, scope: !8910)
!9153 = !DILocation(line: 4853, column: 14, scope: !8910)
!9154 = !DILocation(line: 4853, column: 31, scope: !8910)
!9155 = !DILocation(line: 4856, column: 38, scope: !8935)
!9156 = !DILocation(line: 4856, column: 43, scope: !8935)
!9157 = !DILocation(line: 4856, column: 18, scope: !8935)
!9158 = !DILocation(line: 4856, column: 16, scope: !8935)
!9159 = !DILocation(line: 4856, column: 59, scope: !8935)
!9160 = !DILocation(line: 4856, column: 13, scope: !8910)
!9161 = !DILocation(line: 4857, column: 17, scope: !8934)
!9162 = !DILocation(line: 4857, column: 17, scope: !8933)
!9163 = !DILocation(line: 4862, column: 9, scope: !8934)
!9164 = !DILocation(line: 4862, column: 20, scope: !8938)
!9165 = !DILocation(line: 4862, column: 27, scope: !8938)
!9166 = !DILocation(line: 4862, column: 20, scope: !8935)
!9167 = !DILocation(line: 4865, column: 9, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !8938, file: !2, line: 4862, column: 49)
!9169 = !DILocation(line: 4866, column: 17, scope: !8937)
!9170 = !DILocation(line: 4866, column: 22, scope: !8937)
!9171 = !DILocation(line: 4868, column: 17, scope: !8937)
!9172 = !DILocation(line: 4868, column: 17, scope: !8942)
!9173 = !DILocation(line: 4868, column: 17, scope: !8943)
!9174 = !DILocation(line: 4868, column: 17, scope: !8941)
!9175 = !DILocation(line: 4868, column: 17, scope: !8940)
!9176 = !DILocation(line: 4870, column: 44, scope: !8937)
!9177 = !DILocation(line: 4870, column: 49, scope: !8937)
!9178 = !DILocation(line: 4870, column: 58, scope: !8937)
!9179 = !DILocation(line: 4870, column: 63, scope: !8937)
!9180 = !DILocation(line: 4870, column: 17, scope: !8937)
!9181 = !DILocation(line: 4872, column: 9, scope: !8938)
!9182 = !DILocation(line: 4877, column: 9, scope: !8910)
!9183 = !DILocation(line: 4878, column: 9, scope: !8910)
!9184 = !DILocation(line: 4879, column: 26, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !8910, file: !2, line: 4879, column: 13)
!9186 = !DILocation(line: 4879, column: 31, scope: !9185)
!9187 = !DILocation(line: 4879, column: 72, scope: !9185)
!9188 = !DILocation(line: 4879, column: 13, scope: !9185)
!9189 = !DILocation(line: 4879, column: 77, scope: !9185)
!9190 = !DILocation(line: 4879, column: 13, scope: !8910)
!9191 = !DILocation(line: 4881, column: 17, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9185, file: !2, line: 4880, column: 27)
!9193 = !DILocation(line: 4883, column: 17, scope: !9192)
!9194 = !DILocation(line: 4887, column: 17, scope: !9192)
!9195 = !DILocation(line: 4887, column: 17, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !2, line: 4887, column: 17)
!9197 = distinct !DILexicalBlock(scope: !9192, file: !2, line: 4887, column: 17)
!9198 = !DILocation(line: 4887, column: 17, scope: !9197)
!9199 = !DILocation(line: 4887, column: 17, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9196, file: !2, line: 4887, column: 17)
!9201 = !DILocation(line: 4890, column: 25, scope: !9192)
!9202 = !DILocation(line: 4890, column: 17, scope: !9192)
!9203 = !DILocation(line: 4894, column: 17, scope: !9192)
!9204 = !DILocation(line: 4897, column: 17, scope: !9192)
!9205 = !DILocation(line: 4900, column: 13, scope: !8950)
!9206 = !DILocation(line: 4900, column: 18, scope: !8950)
!9207 = !DILocation(line: 4900, column: 29, scope: !8950)
!9208 = !DILocation(line: 4900, column: 13, scope: !8910)
!9209 = !DILocation(line: 4901, column: 21, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !8949, file: !2, line: 4901, column: 21)
!9211 = !DILocation(line: 4901, column: 25, scope: !9210)
!9212 = !DILocation(line: 4901, column: 33, scope: !9210)
!9213 = !DILocation(line: 4901, column: 51, scope: !9210)
!9214 = !DILocation(line: 4902, column: 55, scope: !9210)
!9215 = !DILocation(line: 4903, column: 21, scope: !9210)
!9216 = !DILocation(line: 4903, column: 25, scope: !9210)
!9217 = !DILocation(line: 4903, column: 33, scope: !9210)
!9218 = !DILocation(line: 4903, column: 51, scope: !9210)
!9219 = !DILocation(line: 4901, column: 21, scope: !8949)
!9220 = !DILocation(line: 4904, column: 51, scope: !9210)
!9221 = !DILocation(line: 4904, column: 25, scope: !9210)
!9222 = !DILocation(line: 4910, column: 17, scope: !8949)
!9223 = !DILocation(line: 4910, column: 17, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !2, line: 4910, column: 17)
!9225 = distinct !DILexicalBlock(scope: !8949, file: !2, line: 4910, column: 17)
!9226 = !DILocation(line: 4910, column: 17, scope: !9225)
!9227 = !{!3939, !3911, i64 8}
!9228 = !{!4141, !3911, i64 24}
!9229 = !DILocation(line: 4911, column: 40, scope: !8949)
!9230 = !DILocation(line: 4911, column: 45, scope: !8949)
!9231 = !DILocation(line: 4911, column: 53, scope: !8949)
!9232 = !DILocation(line: 4911, column: 23, scope: !8949)
!9233 = !DILocation(line: 4913, column: 21, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !8949, file: !2, line: 4913, column: 21)
!9235 = !DILocation(line: 4913, column: 26, scope: !9234)
!9236 = !DILocation(line: 4913, column: 37, scope: !9234)
!9237 = !DILocation(line: 4913, column: 43, scope: !9234)
!9238 = !DILocation(line: 4913, column: 47, scope: !9234)
!9239 = !DILocation(line: 4913, column: 21, scope: !8949)
!9240 = !DILocation(line: 4914, column: 38, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9234, file: !2, line: 4913, column: 80)
!9242 = !DILocation(line: 4914, column: 43, scope: !9241)
!9243 = !DILocation(line: 4914, column: 51, scope: !9241)
!9244 = !DILocation(line: 4914, column: 68, scope: !9241)
!9245 = !DILocation(line: 4914, column: 25, scope: !9241)
!9246 = !DILocation(line: 4915, column: 39, scope: !9241)
!9247 = !DILocation(line: 4915, column: 44, scope: !9241)
!9248 = !DILocation(line: 4915, column: 52, scope: !9241)
!9249 = !DILocation(line: 4915, column: 25, scope: !9241)
!9250 = !DILocation(line: 4917, column: 17, scope: !9241)
!9251 = !DILocation(line: 4919, column: 17, scope: !8949)
!9252 = !DILocation(line: 4919, column: 17, scope: !8947)
!9253 = !DILocation(line: 4919, column: 17, scope: !8948)
!9254 = !DILocation(line: 4919, column: 17, scope: !8946)
!9255 = !DILocation(line: 4919, column: 17, scope: !8945)
!9256 = !DILocation(line: 4922, column: 9, scope: !8949)
!9257 = !DILocation(line: 4926, column: 13, scope: !8910)
!9258 = !DILocation(line: 4926, column: 17, scope: !8910)
!9259 = !DILocation(line: 4926, column: 22, scope: !8910)
!9260 = !DILocation(line: 4926, column: 58, scope: !8910)
!9261 = !DILocation(line: 4926, column: 63, scope: !8910)
!9262 = !DILocation(line: 4926, column: 34, scope: !8910)
!9263 = !DILocation(line: 4927, column: 13, scope: !8910)
!9264 = !DILocation(line: 4927, column: 18, scope: !8910)
!9265 = !DILocation(line: 4927, column: 32, scope: !8910)
!9266 = !DILocation(line: 4927, column: 37, scope: !8910)
!9267 = !DILocation(line: 4928, column: 41, scope: !8910)
!9268 = !DILocation(line: 4928, column: 46, scope: !8910)
!9269 = !DILocation(line: 4928, column: 13, scope: !8910)
!9270 = !DILocation(line: 4925, column: 9, scope: !8910)
!9271 = !DILocation(line: 4930, column: 9, scope: !8910)
!9272 = !DILocation(line: 4935, column: 38, scope: !8910)
!9273 = !DILocation(line: 4935, column: 43, scope: !8910)
!9274 = !DILocation(line: 4935, column: 62, scope: !8910)
!9275 = !DILocation(line: 4935, column: 67, scope: !8910)
!9276 = !DILocation(line: 4935, column: 71, scope: !8910)
!9277 = !{!4141, !3911, i64 8}
!9278 = !DILocation(line: 4935, column: 9, scope: !8910)
!9279 = !DILocation(line: 4941, column: 9, scope: !8910)
!9280 = !DILocation(line: 4944, column: 16, scope: !8910)
!9281 = !DILocation(line: 4944, column: 9, scope: !8910)
!9282 = !DILocation(line: 4945, column: 1, scope: !8910)
!9283 = distinct !DISubprogram(name: "rd_calloc", scope: !314, file: !314, line: 132, type: !9284, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9286)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{!607, !692, !692}
!9286 = !{!9287, !9288, !9289}
!9287 = !DILocalVariable(name: "num", arg: 1, scope: !9283, file: !314, line: 132, type: !692)
!9288 = !DILocalVariable(name: "sz", arg: 2, scope: !9283, file: !314, line: 132, type: !692)
!9289 = !DILocalVariable(name: "p", scope: !9283, file: !314, line: 133, type: !607)
!9290 = !DILocation(line: 132, column: 51, scope: !9283)
!9291 = !DILocation(line: 132, column: 63, scope: !9283)
!9292 = !DILocation(line: 133, column: 9, scope: !9283)
!9293 = !DILocation(line: 133, column: 15, scope: !9283)
!9294 = !DILocation(line: 133, column: 26, scope: !9283)
!9295 = !DILocation(line: 133, column: 31, scope: !9283)
!9296 = !DILocation(line: 133, column: 19, scope: !9283)
!9297 = !DILocation(line: 134, column: 9, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !314, line: 134, column: 9)
!9299 = distinct !DILexicalBlock(scope: !9283, file: !314, line: 134, column: 9)
!9300 = !DILocation(line: 134, column: 9, scope: !9299)
!9301 = !DILocation(line: 135, column: 16, scope: !9283)
!9302 = !DILocation(line: 136, column: 1, scope: !9283)
!9303 = !DILocation(line: 135, column: 9, scope: !9283)
!9304 = distinct !DISubprogram(name: "rd_kafka_mk_nodename", scope: !2, file: !2, line: 140, type: !9305, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9307)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{null, !559, !692, !365, !449}
!9307 = !{!9308, !9309, !9310, !9311}
!9308 = !DILocalVariable(name: "dest", arg: 1, scope: !9304, file: !2, line: 140, type: !559)
!9309 = !DILocalVariable(name: "dsize", arg: 2, scope: !9304, file: !2, line: 141, type: !692)
!9310 = !DILocalVariable(name: "name", arg: 3, scope: !9304, file: !2, line: 142, type: !365)
!9311 = !DILocalVariable(name: "port", arg: 4, scope: !9304, file: !2, line: 143, type: !449)
!9312 = !DILocation(line: 140, column: 40, scope: !9304)
!9313 = !DILocation(line: 141, column: 41, scope: !9304)
!9314 = !DILocation(line: 142, column: 46, scope: !9304)
!9315 = !DILocation(line: 143, column: 43, scope: !9304)
!9316 = !DILocation(line: 144, column: 9, scope: !9304)
!9317 = !DILocation(line: 145, column: 1, scope: !9304)
!9318 = distinct !DISubprogram(name: "rd_kafka_mk_brokername", scope: !2, file: !2, line: 150, type: !9319, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9321)
!9319 = !DISubroutineType(types: !9320)
!9320 = !{null, !559, !692, !979, !365, !320, !2354}
!9321 = !{!9322, !9323, !9324, !9325, !9326, !9327, !9328}
!9322 = !DILocalVariable(name: "dest", arg: 1, scope: !9318, file: !2, line: 150, type: !559)
!9323 = !DILocalVariable(name: "dsize", arg: 2, scope: !9318, file: !2, line: 151, type: !692)
!9324 = !DILocalVariable(name: "proto", arg: 3, scope: !9318, file: !2, line: 152, type: !979)
!9325 = !DILocalVariable(name: "nodename", arg: 4, scope: !9318, file: !2, line: 153, type: !365)
!9326 = !DILocalVariable(name: "nodeid", arg: 5, scope: !9318, file: !2, line: 154, type: !320)
!9327 = !DILocalVariable(name: "source", arg: 6, scope: !9318, file: !2, line: 155, type: !2354)
!9328 = !DILocalVariable(name: "r", scope: !9329, file: !2, line: 161, type: !126)
!9329 = distinct !DILexicalBlock(scope: !9330, file: !2, line: 160, column: 78)
!9330 = distinct !DILexicalBlock(scope: !9318, file: !2, line: 160, column: 13)
!9331 = !DILocation(line: 150, column: 42, scope: !9318)
!9332 = !DILocation(line: 151, column: 43, scope: !9318)
!9333 = !DILocation(line: 152, column: 56, scope: !9318)
!9334 = !DILocation(line: 153, column: 48, scope: !9318)
!9335 = !DILocation(line: 154, column: 44, scope: !9318)
!9336 = !DILocation(line: 155, column: 58, scope: !9318)
!9337 = !DILocation(line: 160, column: 13, scope: !9330)
!9338 = !DILocation(line: 160, column: 19, scope: !9330)
!9339 = !DILocation(line: 160, column: 47, scope: !9330)
!9340 = !DILocation(line: 160, column: 50, scope: !9330)
!9341 = !DILocation(line: 160, column: 57, scope: !9330)
!9342 = !DILocation(line: 160, column: 13, scope: !9318)
!9343 = !DILocation(line: 161, column: 17, scope: !9329)
!9344 = !DILocation(line: 161, column: 21, scope: !9329)
!9345 = !DILocation(line: 161, column: 25, scope: !9329)
!9346 = !DILocation(line: 163, column: 21, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9329, file: !2, line: 163, column: 21)
!9348 = !DILocation(line: 163, column: 31, scope: !9347)
!9349 = !DILocation(line: 163, column: 26, scope: !9347)
!9350 = !DILocation(line: 163, column: 23, scope: !9347)
!9351 = !DILocation(line: 163, column: 21, scope: !9329)
!9352 = !DILocation(line: 164, column: 27, scope: !9347)
!9353 = !DILocation(line: 164, column: 25, scope: !9347)
!9354 = !DILocation(line: 166, column: 25, scope: !9329)
!9355 = !DILocation(line: 166, column: 22, scope: !9329)
!9356 = !DILocation(line: 167, column: 26, scope: !9329)
!9357 = !DILocation(line: 167, column: 23, scope: !9329)
!9358 = !DILocation(line: 168, column: 9, scope: !9330)
!9359 = !DILocation(line: 168, column: 9, scope: !9329)
!9360 = !DILocation(line: 170, column: 13, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9318, file: !2, line: 170, column: 13)
!9362 = !DILocation(line: 170, column: 20, scope: !9361)
!9363 = !DILocation(line: 170, column: 13, scope: !9318)
!9364 = !DILocation(line: 171, column: 17, scope: !9361)
!9365 = !DILocation(line: 177, column: 17, scope: !9361)
!9366 = !DILocation(line: 178, column: 1, scope: !9318)
!9367 = distinct !DISubprogram(name: "rd_strdup", scope: !314, file: !314, line: 154, type: !9368, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9370)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!559, !365}
!9370 = !{!9371, !9372}
!9371 = !DILocalVariable(name: "s", arg: 1, scope: !9367, file: !314, line: 154, type: !365)
!9372 = !DILocalVariable(name: "n", scope: !9367, file: !314, line: 156, type: !559)
!9373 = !DILocation(line: 154, column: 56, scope: !9367)
!9374 = !DILocation(line: 156, column: 9, scope: !9367)
!9375 = !DILocation(line: 156, column: 15, scope: !9367)
!9376 = !DILocation(line: 156, column: 26, scope: !9367)
!9377 = !DILocation(line: 156, column: 19, scope: !9367)
!9378 = !DILocation(line: 160, column: 9, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9380, file: !314, line: 160, column: 9)
!9380 = distinct !DILexicalBlock(scope: !9367, file: !314, line: 160, column: 9)
!9381 = !DILocation(line: 160, column: 9, scope: !9380)
!9382 = !DILocation(line: 161, column: 16, scope: !9367)
!9383 = !DILocation(line: 162, column: 1, scope: !9367)
!9384 = !DILocation(line: 161, column: 9, scope: !9367)
!9385 = !DISubprogram(name: "mtx_init", scope: !510, file: !510, line: 135, type: !9386, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9386 = !DISubroutineType(types: !9387)
!9387 = !{!126, !1813, !126}
!9388 = !DISubprogram(name: "rd_kafka_q_new0", scope: !506, file: !506, line: 139, type: !9389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9389 = !DISubroutineType(types: !9390)
!9390 = !{!503, !586, !561, !365, !126}
!9391 = distinct !DISubprogram(name: "rd_avg_init", scope: !2406, file: !2406, line: 227, type: !9392, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9394)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{null, !8224, !126, !489, !489, !126, !126}
!9394 = !{!9395, !9396, !9397, !9398, !9399, !9400}
!9395 = !DILocalVariable(name: "ra", arg: 1, scope: !9391, file: !2406, line: 227, type: !8224)
!9396 = !DILocalVariable(name: "type", arg: 2, scope: !9391, file: !2406, line: 228, type: !126)
!9397 = !DILocalVariable(name: "exp_min", arg: 3, scope: !9391, file: !2406, line: 229, type: !489)
!9398 = !DILocalVariable(name: "exp_max", arg: 4, scope: !9391, file: !2406, line: 230, type: !489)
!9399 = !DILocalVariable(name: "sigfigs", arg: 5, scope: !9391, file: !2406, line: 231, type: !126)
!9400 = !DILocalVariable(name: "enable", arg: 6, scope: !9391, file: !2406, line: 232, type: !126)
!9401 = !DILocation(line: 227, column: 45, scope: !9391)
!9402 = !DILocation(line: 228, column: 39, scope: !9391)
!9403 = !DILocation(line: 229, column: 43, scope: !9391)
!9404 = !DILocation(line: 230, column: 43, scope: !9391)
!9405 = !DILocation(line: 231, column: 39, scope: !9391)
!9406 = !DILocation(line: 232, column: 39, scope: !9391)
!9407 = !DILocation(line: 233, column: 16, scope: !9391)
!9408 = !DILocation(line: 233, column: 9, scope: !9391)
!9409 = !DILocation(line: 234, column: 19, scope: !9391)
!9410 = !DILocation(line: 234, column: 23, scope: !9391)
!9411 = !DILocation(line: 234, column: 9, scope: !9391)
!9412 = !DILocation(line: 235, column: 26, scope: !9391)
!9413 = !DILocation(line: 235, column: 9, scope: !9391)
!9414 = !DILocation(line: 235, column: 13, scope: !9391)
!9415 = !DILocation(line: 235, column: 24, scope: !9391)
!9416 = !DILocation(line: 236, column: 14, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9391, file: !2406, line: 236, column: 13)
!9418 = !DILocation(line: 236, column: 13, scope: !9391)
!9419 = !DILocation(line: 237, column: 17, scope: !9417)
!9420 = !DILocation(line: 238, column: 26, scope: !9391)
!9421 = !DILocation(line: 238, column: 9, scope: !9391)
!9422 = !DILocation(line: 238, column: 13, scope: !9391)
!9423 = !DILocation(line: 238, column: 24, scope: !9391)
!9424 = !{!3948, !3912, i64 92}
!9425 = !DILocation(line: 239, column: 26, scope: !9391)
!9426 = !DILocation(line: 239, column: 9, scope: !9391)
!9427 = !DILocation(line: 239, column: 13, scope: !9391)
!9428 = !DILocation(line: 239, column: 18, scope: !9391)
!9429 = !DILocation(line: 239, column: 24, scope: !9391)
!9430 = !{!3948, !3942, i64 40}
!9431 = !DILocation(line: 243, column: 43, scope: !9391)
!9432 = !DILocation(line: 243, column: 52, scope: !9391)
!9433 = !DILocation(line: 243, column: 61, scope: !9391)
!9434 = !DILocation(line: 243, column: 22, scope: !9391)
!9435 = !DILocation(line: 243, column: 9, scope: !9391)
!9436 = !DILocation(line: 243, column: 13, scope: !9391)
!9437 = !DILocation(line: 243, column: 20, scope: !9391)
!9438 = !DILocation(line: 245, column: 1, scope: !9391)
!9439 = distinct !DISubprogram(name: "rd_atomic64_init", scope: !316, file: !316, line: 137, type: !9440, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9442)
!9440 = !DISubroutineType(types: !9441)
!9441 = !{null, !5023, !489}
!9442 = !{!9443, !9444}
!9443 = !DILocalVariable(name: "ra", arg: 1, scope: !9439, file: !316, line: 137, type: !5023)
!9444 = !DILocalVariable(name: "v", arg: 2, scope: !9439, file: !316, line: 137, type: !489)
!9445 = !DILocation(line: 137, column: 65, scope: !9439)
!9446 = !DILocation(line: 137, column: 77, scope: !9439)
!9447 = !DILocation(line: 138, column: 19, scope: !9439)
!9448 = !DILocation(line: 138, column: 9, scope: !9439)
!9449 = !DILocation(line: 138, column: 13, scope: !9439)
!9450 = !DILocation(line: 138, column: 17, scope: !9439)
!9451 = !{!3946, !3942, i64 0}
!9452 = !DILocation(line: 142, column: 1, scope: !9439)
!9453 = distinct !DISubprogram(name: "rd_interval_init", scope: !726, file: !726, line: 41, type: !9454, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9456)
!9454 = !DISubroutineType(types: !9455)
!9455 = !{null, !7420}
!9456 = !{!9457}
!9457 = !DILocalVariable(name: "ri", arg: 1, scope: !9453, file: !726, line: 41, type: !7420)
!9458 = !DILocation(line: 41, column: 65, scope: !9453)
!9459 = !DILocation(line: 42, column: 16, scope: !9453)
!9460 = !DILocation(line: 42, column: 9, scope: !9453)
!9461 = !DILocation(line: 43, column: 1, scope: !9453)
!9462 = distinct !DISubprogram(name: "rd_interval_fixed", scope: !726, file: !726, line: 137, type: !9463, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9465)
!9463 = !DISubroutineType(types: !9464)
!9464 = !{null, !7420, !487}
!9465 = !{!9466, !9467}
!9466 = !DILocalVariable(name: "ri", arg: 1, scope: !9462, file: !726, line: 137, type: !7420)
!9467 = !DILocalVariable(name: "fixed_us", arg: 2, scope: !9462, file: !726, line: 138, type: !487)
!9468 = !DILocation(line: 137, column: 66, scope: !9462)
!9469 = !DILocation(line: 138, column: 59, scope: !9462)
!9470 = !DILocation(line: 139, column: 24, scope: !9462)
!9471 = !DILocation(line: 139, column: 9, scope: !9462)
!9472 = !DILocation(line: 139, column: 13, scope: !9462)
!9473 = !DILocation(line: 139, column: 22, scope: !9462)
!9474 = !DILocation(line: 140, column: 1, scope: !9462)
!9475 = !DISubprogram(name: "sigemptyset", scope: !9476, file: !9476, line: 199, type: !9477, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9476 = !DIFile(filename: "/usr/include/signal.h", directory: "", checksumkind: CSK_MD5, checksum: "331e107bf774bb600ec675d0db0b92ce")
!9477 = !DISubroutineType(types: !9478)
!9478 = !{!126, !9479}
!9479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8923, size: 64)
!9480 = !DISubprogram(name: "sigfillset", scope: !9476, file: !9476, line: 202, type: !9477, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9481 = !DISubprogram(name: "sigdelset", scope: !9476, file: !9476, line: 208, type: !9482, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{!126, !9479, !126}
!9484 = !DISubprogram(name: "pthread_sigmask", scope: !9485, file: !9485, line: 31, type: !9486, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9485 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigthread.h", directory: "", checksumkind: CSK_MD5, checksum: "d940c5b4954a0a2c917ac4439b95f766")
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!126, !126, !9488, !9491}
!9488 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !9489)
!9489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9490, size: 64)
!9490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8925)
!9491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !9492)
!9492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8925, size: 64)
!9493 = distinct !DISubprogram(name: "rd_pipe_nonblocking", scope: !2292, file: !2292, line: 225, type: !9494, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9497)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!126, !9496}
!9496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!9497 = !{!9498}
!9498 = !DILocalVariable(name: "fds", arg: 1, scope: !9493, file: !2292, line: 225, type: !9496)
!9499 = !DILocation(line: 225, column: 55, scope: !9493)
!9500 = !DILocation(line: 226, column: 18, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9493, file: !2292, line: 226, column: 13)
!9502 = !DILocation(line: 226, column: 13, scope: !9501)
!9503 = !DILocation(line: 226, column: 23, scope: !9501)
!9504 = !DILocation(line: 226, column: 29, scope: !9501)
!9505 = !DILocation(line: 226, column: 54, scope: !9501)
!9506 = !DILocation(line: 226, column: 32, scope: !9501)
!9507 = !DILocation(line: 226, column: 62, scope: !9501)
!9508 = !DILocation(line: 226, column: 68, scope: !9501)
!9509 = !DILocation(line: 227, column: 35, scope: !9501)
!9510 = !DILocation(line: 227, column: 13, scope: !9501)
!9511 = !DILocation(line: 226, column: 13, scope: !9493)
!9512 = !DILocation(line: 228, column: 24, scope: !9501)
!9513 = !DILocation(line: 228, column: 17, scope: !9501)
!9514 = !DILocation(line: 236, column: 15, scope: !9493)
!9515 = !DILocation(line: 236, column: 9, scope: !9493)
!9516 = !DILocation(line: 237, column: 15, scope: !9493)
!9517 = !DILocation(line: 237, column: 9, scope: !9493)
!9518 = !DILocation(line: 239, column: 9, scope: !9493)
!9519 = !DILocation(line: 240, column: 1, scope: !9493)
!9520 = !DISubprogram(name: "rd_kafka_q_io_event_enable", scope: !506, file: !506, line: 891, type: !9521, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9521 = !DISubroutineType(types: !9522)
!9522 = !{null, !503, !2291, !709, !692}
!9523 = !DISubprogram(name: "thrd_create", scope: !510, file: !510, line: 79, type: !9524, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9524 = !DISubroutineType(types: !9525)
!9525 = !{!126, !9526, !9527, !607}
!9526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!9527 = !DIDerivedType(tag: DW_TAG_typedef, name: "thrd_start_t", file: !510, line: 39, baseType: !9528)
!9528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9529, size: 64)
!9529 = !DISubroutineType(types: !9530)
!9530 = !{!126, !607}
!9531 = distinct !DISubprogram(name: "rd_kafka_broker_thread_main", scope: !2, file: !2, line: 4419, type: !9529, scopeLine: 4419, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9532)
!9532 = !{!9533, !9534, !9535, !9536, !9541, !9543, !9544, !9545, !9546, !9554}
!9533 = !DILocalVariable(name: "arg", arg: 1, scope: !9531, file: !2, line: 4419, type: !607)
!9534 = !DILocalVariable(name: "rkb", scope: !9531, file: !2, line: 4420, type: !412)
!9535 = !DILocalVariable(name: "rk", scope: !9531, file: !2, line: 4421, type: !586)
!9536 = !DILocalVariable(name: "_logname", scope: !9537, file: !2, line: 4439, type: !924)
!9537 = distinct !DILexicalBlock(scope: !9538, file: !2, line: 4439, column: 9)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !2, line: 4439, column: 9)
!9539 = distinct !DILexicalBlock(scope: !9540, file: !2, line: 4439, column: 9)
!9540 = distinct !DILexicalBlock(scope: !9531, file: !2, line: 4439, column: 9)
!9541 = !DILocalVariable(name: "backoff", scope: !9542, file: !2, line: 4442, type: !126)
!9542 = distinct !DILexicalBlock(scope: !9531, file: !2, line: 4441, column: 51)
!9543 = !DILocalVariable(name: "r", scope: !9542, file: !2, line: 4443, type: !126)
!9544 = !DILocalVariable(name: "orig_state", scope: !9542, file: !2, line: 4444, type: !2325)
!9545 = !DILabel(scope: !9542, name: "redo", file: !2, line: 4446)
!9546 = !DILocalVariable(name: "_logname", scope: !9547, file: !2, line: 4506, type: !924)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !2, line: 4506, column: 33)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !2, line: 4506, column: 33)
!9549 = distinct !DILexicalBlock(scope: !9550, file: !2, line: 4506, column: 33)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !2, line: 4506, column: 33)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !2, line: 4505, column: 42)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4505, column: 29)
!9553 = distinct !DILexicalBlock(scope: !9542, file: !2, line: 4449, column: 41)
!9554 = !DILocalVariable(name: "_logname", scope: !9555, file: !2, line: 4618, type: !924)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !2, line: 4618, column: 25)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !2, line: 4618, column: 25)
!9557 = distinct !DILexicalBlock(scope: !9558, file: !2, line: 4618, column: 25)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !2, line: 4618, column: 25)
!9559 = distinct !DILexicalBlock(scope: !9560, file: !2, line: 4608, column: 56)
!9560 = distinct !DILexicalBlock(scope: !9542, file: !2, line: 4608, column: 21)
!9561 = !DILocation(line: 4419, column: 46, scope: !9531)
!9562 = !DILocation(line: 4420, column: 9, scope: !9531)
!9563 = !DILocation(line: 4420, column: 28, scope: !9531)
!9564 = !DILocation(line: 4420, column: 34, scope: !9531)
!9565 = !DILocation(line: 4421, column: 9, scope: !9531)
!9566 = !DILocation(line: 4421, column: 21, scope: !9531)
!9567 = !DILocation(line: 4421, column: 34, scope: !9531)
!9568 = !DILocation(line: 4421, column: 39, scope: !9531)
!9569 = !DILocation(line: 4423, column: 40, scope: !9531)
!9570 = !DILocation(line: 4423, column: 45, scope: !9531)
!9571 = !DILocation(line: 4423, column: 9, scope: !9531)
!9572 = !DILocation(line: 4424, column: 59, scope: !9531)
!9573 = !DILocation(line: 4424, column: 64, scope: !9531)
!9574 = !DILocation(line: 4424, column: 9, scope: !9531)
!9575 = !DILocation(line: 4426, column: 47, scope: !9531)
!9576 = !DILocation(line: 4426, column: 9, scope: !9531)
!9577 = !DILocation(line: 4428, column: 15, scope: !9531)
!9578 = !DILocation(line: 4436, column: 9, scope: !9531)
!9579 = !DILocation(line: 4437, column: 9, scope: !9531)
!9580 = !DILocation(line: 4439, column: 9, scope: !9531)
!9581 = !DILocation(line: 4439, column: 9, scope: !9539)
!9582 = !DILocation(line: 4439, column: 9, scope: !9540)
!9583 = !DILocation(line: 4439, column: 9, scope: !9538)
!9584 = !DILocation(line: 4439, column: 9, scope: !9537)
!9585 = !DILocation(line: 4441, column: 9, scope: !9531)
!9586 = !DILocation(line: 4441, column: 17, scope: !9531)
!9587 = !DILocation(line: 4441, column: 16, scope: !9531)
!9588 = !DILocation(line: 4442, column: 17, scope: !9542)
!9589 = !DILocation(line: 4442, column: 21, scope: !9542)
!9590 = !DILocation(line: 4443, column: 17, scope: !9542)
!9591 = !DILocation(line: 4443, column: 21, scope: !9542)
!9592 = !DILocation(line: 4444, column: 17, scope: !9542)
!9593 = !DILocation(line: 4444, column: 41, scope: !9542)
!9594 = !DILocation(line: 4446, column: 9, scope: !9542)
!9595 = !DILocation(line: 4447, column: 30, scope: !9542)
!9596 = !DILocation(line: 4447, column: 35, scope: !9542)
!9597 = !DILocation(line: 4447, column: 28, scope: !9542)
!9598 = !DILocation(line: 4449, column: 25, scope: !9542)
!9599 = !DILocation(line: 4449, column: 30, scope: !9542)
!9600 = !DILocation(line: 4449, column: 17, scope: !9542)
!9601 = !DILocation(line: 4453, column: 63, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4453, column: 29)
!9603 = !DILocation(line: 4453, column: 30, scope: !9602)
!9604 = !DILocation(line: 4453, column: 29, scope: !9553)
!9605 = !DILocation(line: 4454, column: 55, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9602, file: !2, line: 4453, column: 69)
!9607 = !DILocation(line: 4454, column: 33, scope: !9606)
!9608 = !DILocation(line: 4456, column: 33, scope: !9606)
!9609 = !DILocation(line: 4462, column: 25, scope: !9553)
!9610 = !DILocation(line: 4464, column: 29, scope: !9553)
!9611 = !DILocation(line: 4463, column: 25, scope: !9553)
!9612 = !DILocation(line: 4465, column: 25, scope: !9553)
!9613 = !DILocation(line: 4466, column: 25, scope: !9553)
!9614 = !DILocation(line: 4469, column: 25, scope: !9553)
!9615 = !DILocation(line: 4470, column: 29, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4470, column: 29)
!9617 = !DILocation(line: 4470, column: 34, scope: !9616)
!9618 = !DILocation(line: 4470, column: 42, scope: !9616)
!9619 = !DILocation(line: 4470, column: 50, scope: !9616)
!9620 = !DILocation(line: 4470, column: 29, scope: !9553)
!9621 = !DILocation(line: 4472, column: 37, scope: !9616)
!9622 = !DILocation(line: 4471, column: 33, scope: !9616)
!9623 = !DILocation(line: 4475, column: 37, scope: !9616)
!9624 = !DILocation(line: 4474, column: 33, scope: !9616)
!9625 = !DILocation(line: 4476, column: 25, scope: !9553)
!9626 = !DILocation(line: 4477, column: 25, scope: !9553)
!9627 = !DILocation(line: 4480, column: 29, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4480, column: 29)
!9629 = !DILocation(line: 4480, column: 34, scope: !9628)
!9630 = !DILocation(line: 4480, column: 45, scope: !9628)
!9631 = !DILocation(line: 4480, column: 29, scope: !9553)
!9632 = !DILocation(line: 4481, column: 33, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9628, file: !2, line: 4480, column: 67)
!9634 = !DILocation(line: 4483, column: 37, scope: !9633)
!9635 = !DILocation(line: 4482, column: 33, scope: !9633)
!9636 = !DILocation(line: 4484, column: 33, scope: !9633)
!9637 = !DILocation(line: 4485, column: 33, scope: !9633)
!9638 = !DILocation(line: 4488, column: 29, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4488, column: 29)
!9640 = !DILocation(line: 4488, column: 29, scope: !9553)
!9641 = !DILocation(line: 4489, column: 55, scope: !9639)
!9642 = !DILocation(line: 4489, column: 33, scope: !9639)
!9643 = !DILocation(line: 4491, column: 50, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4491, column: 29)
!9645 = !DILocation(line: 4491, column: 55, scope: !9644)
!9646 = !DILocation(line: 4491, column: 30, scope: !9644)
!9647 = !DILocation(line: 4491, column: 29, scope: !9553)
!9648 = !DILocation(line: 4493, column: 55, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9644, file: !2, line: 4491, column: 64)
!9650 = !DILocation(line: 4493, column: 33, scope: !9649)
!9651 = !DILocation(line: 4497, column: 33, scope: !9649)
!9652 = distinct !{!9652, !9585, !9653, !4095}
!9653 = !DILocation(line: 4632, column: 9, scope: !9531)
!9654 = !DILocation(line: 4504, column: 63, scope: !9553)
!9655 = !DILocation(line: 4504, column: 68, scope: !9553)
!9656 = !DILocation(line: 4504, column: 29, scope: !9553)
!9657 = !DILocation(line: 4503, column: 33, scope: !9553)
!9658 = !DILocation(line: 4505, column: 29, scope: !9552)
!9659 = !DILocation(line: 4505, column: 37, scope: !9552)
!9660 = !DILocation(line: 4505, column: 29, scope: !9553)
!9661 = !DILocation(line: 4506, column: 33, scope: !9551)
!9662 = !DILocation(line: 4506, column: 33, scope: !9549)
!9663 = !DILocation(line: 4506, column: 33, scope: !9550)
!9664 = !DILocation(line: 4506, column: 33, scope: !9548)
!9665 = !DILocation(line: 4506, column: 33, scope: !9547)
!9666 = !DILocation(line: 4509, column: 55, scope: !9551)
!9667 = !DILocation(line: 4509, column: 65, scope: !9551)
!9668 = !DILocation(line: 4509, column: 33, scope: !9551)
!9669 = !DILocation(line: 4510, column: 33, scope: !9551)
!9670 = !DILocation(line: 4515, column: 53, scope: !9553)
!9671 = !DILocation(line: 4515, column: 29, scope: !9553)
!9672 = !DILocation(line: 4515, column: 27, scope: !9553)
!9673 = !DILocation(line: 4516, column: 29, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4516, column: 29)
!9675 = !DILocation(line: 4516, column: 31, scope: !9674)
!9676 = !DILocation(line: 4516, column: 29, scope: !9553)
!9677 = !DILocation(line: 4522, column: 73, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !2, line: 4522, column: 37)
!9679 = distinct !DILexicalBlock(scope: !9674, file: !2, line: 4516, column: 38)
!9680 = !DILocation(line: 4522, column: 37, scope: !9678)
!9681 = !DILocation(line: 4522, column: 37, scope: !9679)
!9682 = !DILocation(line: 4524, column: 45, scope: !9678)
!9683 = !DILocation(line: 4523, column: 41, scope: !9678)
!9684 = !DILocation(line: 4525, column: 25, scope: !9679)
!9685 = !DILocation(line: 4525, column: 36, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9674, file: !2, line: 4525, column: 36)
!9687 = !DILocation(line: 4525, column: 38, scope: !9686)
!9688 = !DILocation(line: 4525, column: 36, scope: !9674)
!9689 = !DILocation(line: 4529, column: 55, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9686, file: !2, line: 4525, column: 44)
!9691 = !DILocation(line: 4529, column: 33, scope: !9690)
!9692 = !DILocation(line: 4531, column: 25, scope: !9690)
!9693 = !DILocation(line: 4536, column: 25, scope: !9553)
!9694 = !DILocation(line: 4545, column: 47, scope: !9553)
!9695 = !DILocation(line: 4545, column: 25, scope: !9553)
!9696 = !DILocation(line: 4551, column: 29, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4551, column: 29)
!9698 = !DILocation(line: 4551, column: 34, scope: !9697)
!9699 = !DILocation(line: 4551, column: 44, scope: !9697)
!9700 = !DILocation(line: 4551, column: 74, scope: !9697)
!9701 = !DILocation(line: 4552, column: 65, scope: !9697)
!9702 = !DILocation(line: 4552, column: 29, scope: !9697)
!9703 = !DILocation(line: 4551, column: 29, scope: !9553)
!9704 = !DILocation(line: 4554, column: 37, scope: !9697)
!9705 = !DILocation(line: 4554, column: 43, scope: !9697)
!9706 = !DILocation(line: 4554, column: 48, scope: !9697)
!9707 = !DILocation(line: 4554, column: 56, scope: !9697)
!9708 = !DILocation(line: 4554, column: 65, scope: !9697)
!9709 = !DILocation(line: 4553, column: 33, scope: !9697)
!9710 = !DILocation(line: 4562, column: 29, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9697, file: !2, line: 4562, column: 29)
!9712 = !DILocation(line: 4562, column: 34, scope: !9711)
!9713 = !DILocation(line: 4562, column: 47, scope: !9711)
!9714 = !DILocation(line: 4562, column: 44, scope: !9711)
!9715 = !DILocation(line: 4562, column: 58, scope: !9711)
!9716 = !DILocation(line: 4563, column: 30, scope: !9711)
!9717 = !DILocation(line: 4563, column: 35, scope: !9711)
!9718 = !DILocation(line: 4563, column: 58, scope: !9711)
!9719 = !DILocation(line: 4564, column: 29, scope: !9711)
!9720 = !DILocation(line: 4565, column: 34, scope: !9711)
!9721 = !DILocation(line: 4565, column: 39, scope: !9711)
!9722 = !{!3939, !3942, i64 2424}
!9723 = !DILocation(line: 4566, column: 43, scope: !9711)
!9724 = !DILocation(line: 4566, column: 47, scope: !9711)
!9725 = !DILocation(line: 4567, column: 43, scope: !9711)
!9726 = !{!4141, !3941, i64 700}
!9727 = !DILocation(line: 4566, column: 34, scope: !9711)
!9728 = !DILocation(line: 4567, column: 78, scope: !9711)
!9729 = !DILocation(line: 4565, column: 54, scope: !9711)
!9730 = !DILocation(line: 4564, column: 40, scope: !9711)
!9731 = !DILocation(line: 4562, column: 29, scope: !9697)
!9732 = !DILocation(line: 4570, column: 37, scope: !9711)
!9733 = !DILocation(line: 4574, column: 42, scope: !9711)
!9734 = !DILocation(line: 4574, column: 47, scope: !9711)
!9735 = !DILocation(line: 4573, column: 37, scope: !9711)
!9736 = !DILocation(line: 4569, column: 33, scope: !9711)
!9737 = !DILocation(line: 4576, column: 25, scope: !9553)
!9738 = !DILocation(line: 4581, column: 25, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !2, line: 4581, column: 25)
!9740 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4581, column: 25)
!9741 = !DILocation(line: 4581, column: 25, scope: !9740)
!9742 = !DILocation(line: 4587, column: 45, scope: !9553)
!9743 = !DILocation(line: 4587, column: 50, scope: !9553)
!9744 = !DILocation(line: 4587, column: 25, scope: !9553)
!9745 = !DILocation(line: 4589, column: 25, scope: !9553)
!9746 = !DILocation(line: 4589, column: 30, scope: !9553)
!9747 = !DILocation(line: 4589, column: 53, scope: !9553)
!9748 = !DILocation(line: 4591, column: 54, scope: !9553)
!9749 = !DILocation(line: 4591, column: 25, scope: !9553)
!9750 = !DILocation(line: 4592, column: 25, scope: !9553)
!9751 = !DILocation(line: 4597, column: 47, scope: !9553)
!9752 = !DILocation(line: 4597, column: 25, scope: !9553)
!9753 = !DILocation(line: 4599, column: 29, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9553, file: !2, line: 4599, column: 29)
!9755 = !DILocation(line: 4599, column: 34, scope: !9754)
!9756 = !DILocation(line: 4599, column: 44, scope: !9754)
!9757 = !DILocation(line: 4599, column: 29, scope: !9553)
!9758 = !DILocation(line: 4600, column: 33, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9754, file: !2, line: 4599, column: 77)
!9760 = !DILocation(line: 4602, column: 37, scope: !9759)
!9761 = !DILocation(line: 4601, column: 33, scope: !9759)
!9762 = !DILocation(line: 4603, column: 33, scope: !9759)
!9763 = !DILocation(line: 4604, column: 25, scope: !9759)
!9764 = !DILocation(line: 4605, column: 25, scope: !9553)
!9765 = !DILocation(line: 4608, column: 21, scope: !9560)
!9766 = !DILocation(line: 4608, column: 21, scope: !9542)
!9767 = !DILocation(line: 4613, column: 29, scope: !9559)
!9768 = !DILocation(line: 4613, column: 38, scope: !9559)
!9769 = !DILocation(line: 4613, column: 43, scope: !9559)
!9770 = !DILocation(line: 4612, column: 29, scope: !9559)
!9771 = !DILocation(line: 4612, column: 27, scope: !9559)
!9772 = !DILocation(line: 4616, column: 29, scope: !9559)
!9773 = !DILocation(line: 4616, column: 38, scope: !9559)
!9774 = !DILocation(line: 4616, column: 43, scope: !9559)
!9775 = !DILocation(line: 4615, column: 30, scope: !9559)
!9776 = !DILocation(line: 4615, column: 27, scope: !9559)
!9777 = !DILocation(line: 4618, column: 25, scope: !9559)
!9778 = !DILocation(line: 4618, column: 25, scope: !9557)
!9779 = !DILocation(line: 4618, column: 25, scope: !9558)
!9780 = !DILocation(line: 4618, column: 25, scope: !9556)
!9781 = !DILocation(line: 4618, column: 25, scope: !9555)
!9782 = !{!3939, !3941, i64 160}
!9783 = !DILocation(line: 4631, column: 17, scope: !9559)
!9784 = !DILocation(line: 4634, column: 13, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9531, file: !2, line: 4634, column: 13)
!9786 = !DILocation(line: 4634, column: 18, scope: !9785)
!9787 = !DILocation(line: 4634, column: 29, scope: !9785)
!9788 = !DILocation(line: 4634, column: 13, scope: !9531)
!9789 = !DILocation(line: 4635, column: 17, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9785, file: !2, line: 4634, column: 51)
!9791 = !DILocation(line: 4636, column: 17, scope: !9790)
!9792 = !DILocation(line: 4636, column: 17, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9794, file: !2, line: 4636, column: 17)
!9794 = distinct !DILexicalBlock(scope: !9790, file: !2, line: 4636, column: 17)
!9795 = !DILocation(line: 4636, column: 17, scope: !9794)
!9796 = !DILocation(line: 4637, column: 21, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9790, file: !2, line: 4637, column: 21)
!9798 = !DILocation(line: 4637, column: 26, scope: !9797)
!9799 = !DILocation(line: 4637, column: 37, scope: !9797)
!9800 = !DILocation(line: 4637, column: 43, scope: !9797)
!9801 = !DILocation(line: 4637, column: 47, scope: !9797)
!9802 = !DILocation(line: 4637, column: 21, scope: !9790)
!9803 = !DILocation(line: 4638, column: 41, scope: !9797)
!9804 = !DILocation(line: 4638, column: 46, scope: !9797)
!9805 = !DILocation(line: 4638, column: 54, scope: !9797)
!9806 = !DILocation(line: 4638, column: 71, scope: !9797)
!9807 = !DILocation(line: 4638, column: 25, scope: !9797)
!9808 = !DILocation(line: 4639, column: 40, scope: !9790)
!9809 = !DILocation(line: 4639, column: 45, scope: !9790)
!9810 = !DILocation(line: 4639, column: 53, scope: !9790)
!9811 = !DILocation(line: 4639, column: 23, scope: !9790)
!9812 = !DILocation(line: 4640, column: 17, scope: !9790)
!9813 = !DILocation(line: 4641, column: 9, scope: !9790)
!9814 = !DILocation(line: 4643, column: 30, scope: !9531)
!9815 = !DILocation(line: 4643, column: 9, scope: !9531)
!9816 = !DILocation(line: 4651, column: 9, scope: !9531)
!9817 = !DILocation(line: 4652, column: 9, scope: !9531)
!9818 = !DILocation(line: 4652, column: 42, scope: !9531)
!9819 = !DILocation(line: 4652, column: 16, scope: !9531)
!9820 = distinct !{!9820, !9817, !9821, !4095}
!9821 = !DILocation(line: 4653, column: 17, scope: !9531)
!9822 = !DILocation(line: 4655, column: 9, scope: !9531)
!9823 = !DILocation(line: 4655, column: 9, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !2, line: 4655, column: 9)
!9825 = distinct !DILexicalBlock(scope: !9531, file: !2, line: 4655, column: 9)
!9826 = !DILocation(line: 4655, column: 9, scope: !9825)
!9827 = !DILocation(line: 4667, column: 46, scope: !9531)
!9828 = !DILocation(line: 4667, column: 9, scope: !9531)
!9829 = !DILocation(line: 4669, column: 9, scope: !9531)
!9830 = !DILocation(line: 4672, column: 1, scope: !9531)
!9831 = !DILocation(line: 4671, column: 9, scope: !9531)
!9832 = !DISubprogram(name: "rd_kafka_sasl_broker_init", scope: !8840, file: !8840, line: 49, type: !1583, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9833 = !DISubprogram(name: "rd_list_sort", scope: !600, file: !600, line: 200, type: !9834, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9834 = !DISubroutineType(types: !9835)
!9835 = !{null, !867, !1194}
!9836 = distinct !DISubprogram(name: "rd_kafka_broker_cmp_by_id", scope: !2, file: !2, line: 3041, type: !1195, scopeLine: 3041, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9837)
!9837 = !{!9838, !9839, !9840, !9843}
!9838 = !DILocalVariable(name: "_a", arg: 1, scope: !9836, file: !2, line: 3041, type: !709)
!9839 = !DILocalVariable(name: "_b", arg: 2, scope: !9836, file: !2, line: 3041, type: !709)
!9840 = !DILocalVariable(name: "a", scope: !9836, file: !2, line: 3042, type: !9841)
!9841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9842, size: 64)
!9842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!9843 = !DILocalVariable(name: "b", scope: !9836, file: !2, line: 3042, type: !9841)
!9844 = !DILocation(line: 3041, column: 50, scope: !9836)
!9845 = !DILocation(line: 3041, column: 66, scope: !9836)
!9846 = !DILocation(line: 3042, column: 9, scope: !9836)
!9847 = !DILocation(line: 3042, column: 34, scope: !9836)
!9848 = !DILocation(line: 3042, column: 38, scope: !9836)
!9849 = !DILocation(line: 3042, column: 43, scope: !9836)
!9850 = !DILocation(line: 3042, column: 47, scope: !9836)
!9851 = !DILocation(line: 3043, column: 16, scope: !9836)
!9852 = !DILocation(line: 3044, column: 1, scope: !9836)
!9853 = !DILocation(line: 3043, column: 9, scope: !9836)
!9854 = distinct !DISubprogram(name: "rd_kafka_broker_monitor_add", scope: !2, file: !2, line: 5913, type: !9855, scopeLine: 5916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9857)
!9855 = !DISubroutineType(types: !9856)
!9856 = !{null, !4394, !412, !503, !1582}
!9857 = !{!9858, !9859, !9860, !9861}
!9858 = !DILocalVariable(name: "rkbmon", arg: 1, scope: !9854, file: !2, line: 5913, type: !4394)
!9859 = !DILocalVariable(name: "rkb", arg: 2, scope: !9854, file: !2, line: 5914, type: !412)
!9860 = !DILocalVariable(name: "rkq", arg: 3, scope: !9854, file: !2, line: 5915, type: !503)
!9861 = !DILocalVariable(name: "callback", arg: 4, scope: !9854, file: !2, line: 5916, type: !1582)
!9862 = !DILocation(line: 5913, column: 61, scope: !9854)
!9863 = !DILocation(line: 5914, column: 53, scope: !9854)
!9864 = !DILocation(line: 5915, column: 48, scope: !9854)
!9865 = !DILocation(line: 5916, column: 41, scope: !9854)
!9866 = !DILocation(line: 5917, column: 9, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !2, line: 5917, column: 9)
!9868 = distinct !DILexicalBlock(scope: !9854, file: !2, line: 5917, column: 9)
!9869 = !{!3953, !3911, i64 16}
!9870 = !DILocation(line: 5917, column: 9, scope: !9868)
!9871 = !DILocation(line: 5918, column: 30, scope: !9854)
!9872 = !DILocation(line: 5918, column: 9, scope: !9854)
!9873 = !DILocation(line: 5918, column: 17, scope: !9854)
!9874 = !DILocation(line: 5918, column: 28, scope: !9854)
!9875 = !DILocation(line: 5919, column: 30, scope: !9854)
!9876 = !DILocation(line: 5919, column: 9, scope: !9854)
!9877 = !DILocation(line: 5919, column: 17, scope: !9854)
!9878 = !DILocation(line: 5919, column: 28, scope: !9854)
!9879 = !DILocation(line: 5920, column: 25, scope: !9854)
!9880 = !DILocation(line: 5920, column: 33, scope: !9854)
!9881 = !DILocation(line: 5920, column: 9, scope: !9854)
!9882 = !DILocation(line: 5921, column: 29, scope: !9854)
!9883 = !DILocation(line: 5921, column: 9, scope: !9854)
!9884 = !DILocation(line: 5921, column: 17, scope: !9854)
!9885 = !DILocation(line: 5921, column: 27, scope: !9854)
!9886 = !DILocation(line: 5923, column: 9, scope: !9854)
!9887 = !DILocation(line: 5925, column: 9, scope: !9854)
!9888 = !DILocation(line: 5926, column: 9, scope: !9854)
!9889 = !DILocation(line: 5926, column: 9, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9854, file: !2, line: 5926, column: 9)
!9891 = !{!3953, !3911, i64 8}
!9892 = !DILocation(line: 5927, column: 9, scope: !9854)
!9893 = !DILocation(line: 5928, column: 1, scope: !9854)
!9894 = distinct !DISubprogram(name: "rd_kafka_broker_add_logical", scope: !2, file: !2, line: 4971, type: !9895, scopeLine: 4972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9897)
!9895 = !DISubroutineType(types: !9896)
!9896 = !{!412, !586, !365}
!9897 = !{!9898, !9899, !9900}
!9898 = !DILocalVariable(name: "rk", arg: 1, scope: !9894, file: !2, line: 4971, type: !586)
!9899 = !DILocalVariable(name: "name", arg: 2, scope: !9894, file: !2, line: 4972, type: !365)
!9900 = !DILocalVariable(name: "rkb", scope: !9894, file: !2, line: 4973, type: !412)
!9901 = !DILocation(line: 4971, column: 60, scope: !9894)
!9902 = !DILocation(line: 4972, column: 60, scope: !9894)
!9903 = !DILocation(line: 4973, column: 9, scope: !9894)
!9904 = !DILocation(line: 4973, column: 28, scope: !9894)
!9905 = !DILocation(line: 4975, column: 9, scope: !9894)
!9906 = !DILocation(line: 4976, column: 35, scope: !9894)
!9907 = !DILocation(line: 4977, column: 35, scope: !9894)
!9908 = !DILocation(line: 4977, column: 39, scope: !9894)
!9909 = !DILocation(line: 4977, column: 47, scope: !9894)
!9910 = !DILocation(line: 4977, column: 66, scope: !9894)
!9911 = !DILocation(line: 4976, column: 15, scope: !9894)
!9912 = !DILocation(line: 4976, column: 13, scope: !9894)
!9913 = !DILocation(line: 4979, column: 9, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !2, line: 4979, column: 9)
!9915 = distinct !DILexicalBlock(scope: !9894, file: !2, line: 4979, column: 9)
!9916 = !DILocation(line: 4979, column: 9, scope: !9915)
!9917 = !DILocation(line: 4980, column: 9, scope: !9894)
!9918 = !DILocation(line: 4982, column: 26, scope: !9894)
!9919 = !DILocation(line: 4982, column: 30, scope: !9894)
!9920 = !DILocation(line: 4982, column: 9, scope: !9894)
!9921 = !DILocation(line: 4984, column: 9, scope: !9894)
!9922 = !DILocation(line: 4984, column: 9, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9894, file: !2, line: 4984, column: 9)
!9924 = !DILocation(line: 4985, column: 9, scope: !9894)
!9925 = !DILocation(line: 4986, column: 16, scope: !9894)
!9926 = !DILocation(line: 4987, column: 1, scope: !9894)
!9927 = !DILocation(line: 4986, column: 9, scope: !9894)
!9928 = !DISubprogram(name: "rwlock_wrlock", scope: !326, file: !326, line: 201, type: !6043, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9929 = !DISubprogram(name: "rwlock_wrunlock", scope: !326, file: !326, line: 203, type: !6043, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9930 = distinct !DISubprogram(name: "rd_kafka_broker_set_nodename", scope: !2, file: !2, line: 5008, type: !9931, scopeLine: 5009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !9933)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{null, !412, !412}
!9933 = !{!9934, !9935, !9936, !9937, !9938, !9939, !9940, !9947}
!9934 = !DILocalVariable(name: "rkb", arg: 1, scope: !9930, file: !2, line: 5008, type: !412)
!9935 = !DILocalVariable(name: "from_rkb", arg: 2, scope: !9930, file: !2, line: 5009, type: !412)
!9936 = !DILocalVariable(name: "nodename", scope: !9930, file: !2, line: 5010, type: !924)
!9937 = !DILocalVariable(name: "brokername", scope: !9930, file: !2, line: 5011, type: !924)
!9938 = !DILocalVariable(name: "nodeid", scope: !9930, file: !2, line: 5012, type: !320)
!9939 = !DILocalVariable(name: "changed", scope: !9930, file: !2, line: 5013, type: !561)
!9940 = !DILocalVariable(name: "_logname", scope: !9941, file: !2, line: 5033, type: !924)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !2, line: 5033, column: 17)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !2, line: 5033, column: 17)
!9943 = distinct !DILexicalBlock(scope: !9944, file: !2, line: 5033, column: 17)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !2, line: 5033, column: 17)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !2, line: 5032, column: 50)
!9946 = distinct !DILexicalBlock(scope: !9930, file: !2, line: 5032, column: 13)
!9947 = !DILocalVariable(name: "_logname", scope: !9948, file: !2, line: 5043, type: !924)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !2, line: 5043, column: 17)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !2, line: 5043, column: 17)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !2, line: 5043, column: 17)
!9951 = distinct !DILexicalBlock(scope: !9952, file: !2, line: 5043, column: 17)
!9952 = distinct !DILexicalBlock(scope: !9953, file: !2, line: 5042, column: 40)
!9953 = distinct !DILexicalBlock(scope: !9930, file: !2, line: 5042, column: 13)
!9954 = !DILocation(line: 5008, column: 54, scope: !9930)
!9955 = !DILocation(line: 5009, column: 54, scope: !9930)
!9956 = !DILocation(line: 5010, column: 9, scope: !9930)
!9957 = !DILocation(line: 5010, column: 14, scope: !9930)
!9958 = !DILocation(line: 5011, column: 9, scope: !9930)
!9959 = !DILocation(line: 5011, column: 14, scope: !9930)
!9960 = !DILocation(line: 5012, column: 9, scope: !9930)
!9961 = !DILocation(line: 5012, column: 17, scope: !9930)
!9962 = !DILocation(line: 5013, column: 9, scope: !9930)
!9963 = !DILocation(line: 5013, column: 19, scope: !9930)
!9964 = !DILocation(line: 5015, column: 9, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !2, line: 5015, column: 9)
!9966 = distinct !DILexicalBlock(scope: !9930, file: !2, line: 5015, column: 9)
!9967 = !DILocation(line: 5015, column: 9, scope: !9966)
!9968 = !DILocation(line: 5017, column: 9, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !2, line: 5017, column: 9)
!9970 = distinct !DILexicalBlock(scope: !9930, file: !2, line: 5017, column: 9)
!9971 = !DILocation(line: 5017, column: 9, scope: !9970)
!9972 = !DILocation(line: 5020, column: 13, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9930, file: !2, line: 5020, column: 13)
!9974 = !DILocation(line: 5020, column: 13, scope: !9930)
!9975 = !DILocation(line: 5021, column: 17, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9973, file: !2, line: 5020, column: 23)
!9977 = !DILocation(line: 5022, column: 28, scope: !9976)
!9978 = !DILocation(line: 5022, column: 38, scope: !9976)
!9979 = !DILocation(line: 5022, column: 48, scope: !9976)
!9980 = !DILocation(line: 5022, column: 17, scope: !9976)
!9981 = !DILocation(line: 5023, column: 26, scope: !9976)
!9982 = !DILocation(line: 5023, column: 36, scope: !9976)
!9983 = !DILocation(line: 5023, column: 24, scope: !9976)
!9984 = !DILocation(line: 5024, column: 17, scope: !9976)
!9985 = !DILocation(line: 5025, column: 9, scope: !9976)
!9986 = !DILocation(line: 5026, column: 17, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9973, file: !2, line: 5025, column: 16)
!9988 = !DILocation(line: 5026, column: 27, scope: !9987)
!9989 = !DILocation(line: 5027, column: 27, scope: !9987)
!9990 = !DILocation(line: 5031, column: 9, scope: !9930)
!9991 = !DILocation(line: 5032, column: 20, scope: !9946)
!9992 = !DILocation(line: 5032, column: 25, scope: !9946)
!9993 = !DILocation(line: 5032, column: 39, scope: !9946)
!9994 = !DILocation(line: 5032, column: 13, scope: !9946)
!9995 = !DILocation(line: 5032, column: 13, scope: !9930)
!9996 = !DILocation(line: 5033, column: 17, scope: !9945)
!9997 = !DILocation(line: 5033, column: 17, scope: !9943)
!9998 = !DILocation(line: 5033, column: 17, scope: !9944)
!9999 = !DILocation(line: 5033, column: 17, scope: !9942)
!10000 = !DILocation(line: 5033, column: 17, scope: !9941)
!10001 = !DILocation(line: 5036, column: 28, scope: !9945)
!10002 = !DILocation(line: 5036, column: 33, scope: !9945)
!10003 = !DILocation(line: 5036, column: 47, scope: !9945)
!10004 = !DILocation(line: 5036, column: 17, scope: !9945)
!10005 = !DILocation(line: 5038, column: 17, scope: !9945)
!10006 = !DILocation(line: 5038, column: 22, scope: !9945)
!10007 = !DILocation(line: 5038, column: 40, scope: !9945)
!10008 = !{!3939, !3941, i64 2344}
!10009 = !DILocation(line: 5039, column: 25, scope: !9945)
!10010 = !DILocation(line: 5040, column: 9, scope: !9945)
!10011 = !DILocation(line: 5042, column: 13, scope: !9953)
!10012 = !DILocation(line: 5042, column: 18, scope: !9953)
!10013 = !DILocation(line: 5042, column: 32, scope: !9953)
!10014 = !DILocation(line: 5042, column: 29, scope: !9953)
!10015 = !DILocation(line: 5042, column: 13, scope: !9930)
!10016 = !DILocation(line: 5043, column: 17, scope: !9952)
!10017 = !DILocation(line: 5043, column: 17, scope: !9950)
!10018 = !DILocation(line: 5043, column: 17, scope: !9951)
!10019 = !DILocation(line: 5043, column: 17, scope: !9949)
!10020 = !DILocation(line: 5043, column: 17, scope: !9948)
!10021 = !DILocation(line: 5046, column: 35, scope: !9952)
!10022 = !DILocation(line: 5046, column: 17, scope: !9952)
!10023 = !DILocation(line: 5046, column: 22, scope: !9952)
!10024 = !DILocation(line: 5046, column: 33, scope: !9952)
!10025 = !DILocation(line: 5047, column: 9, scope: !9952)
!10026 = !DILocation(line: 5049, column: 9, scope: !9930)
!10027 = !DILocation(line: 5053, column: 32, scope: !9930)
!10028 = !DILocation(line: 5053, column: 64, scope: !9930)
!10029 = !DILocation(line: 5053, column: 69, scope: !9930)
!10030 = !DILocation(line: 5054, column: 32, scope: !9930)
!10031 = !DILocation(line: 5054, column: 37, scope: !9930)
!10032 = !DILocation(line: 5054, column: 47, scope: !9930)
!10033 = !DILocation(line: 5054, column: 55, scope: !9930)
!10034 = !DILocation(line: 5054, column: 60, scope: !9930)
!10035 = !DILocation(line: 5053, column: 9, scope: !9930)
!10036 = !DILocation(line: 5056, column: 37, scope: !9930)
!10037 = !DILocation(line: 5056, column: 42, scope: !9930)
!10038 = !DILocation(line: 5056, column: 9, scope: !9930)
!10039 = !DILocation(line: 5058, column: 14, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !9930, file: !2, line: 5058, column: 13)
!10041 = !DILocation(line: 5058, column: 13, scope: !9930)
!10042 = !DILocation(line: 5059, column: 17, scope: !10040)
!10043 = !DILocation(line: 5061, column: 14, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !9930, file: !2, line: 5061, column: 13)
!10045 = !DILocation(line: 5061, column: 13, scope: !9930)
!10046 = !DILocation(line: 5062, column: 34, scope: !10044)
!10047 = !DILocation(line: 5062, column: 39, scope: !10044)
!10048 = !DILocation(line: 5062, column: 47, scope: !10044)
!10049 = !DILocation(line: 5062, column: 17, scope: !10044)
!10050 = !DILocation(line: 5064, column: 34, scope: !10044)
!10051 = !DILocation(line: 5064, column: 39, scope: !10044)
!10052 = !DILocation(line: 5064, column: 47, scope: !10044)
!10053 = !DILocation(line: 5064, column: 17, scope: !10044)
!10054 = !DILocation(line: 5067, column: 45, scope: !9930)
!10055 = !DILocation(line: 5067, column: 9, scope: !9930)
!10056 = !DILocation(line: 5068, column: 1, scope: !9930)
!10057 = distinct !DISubprogram(name: "rd_kafka_broker_set_logname", scope: !2, file: !2, line: 3053, type: !7335, scopeLine: 3054, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10058)
!10058 = !{!10059, !10060}
!10059 = !DILocalVariable(name: "rkb", arg: 1, scope: !10057, file: !2, line: 3053, type: !412)
!10060 = !DILocalVariable(name: "logname", arg: 2, scope: !10057, file: !2, line: 3054, type: !365)
!10061 = !DILocation(line: 3053, column: 60, scope: !10057)
!10062 = !DILocation(line: 3054, column: 53, scope: !10057)
!10063 = !DILocation(line: 3055, column: 19, scope: !10057)
!10064 = !DILocation(line: 3055, column: 24, scope: !10057)
!10065 = !DILocation(line: 3055, column: 9, scope: !10057)
!10066 = !DILocation(line: 3056, column: 13, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10057, file: !2, line: 3056, column: 13)
!10068 = !DILocation(line: 3056, column: 18, scope: !10067)
!10069 = !DILocation(line: 3056, column: 13, scope: !10057)
!10070 = !DILocation(line: 3057, column: 25, scope: !10067)
!10071 = !DILocation(line: 3057, column: 30, scope: !10067)
!10072 = !DILocation(line: 3057, column: 17, scope: !10067)
!10073 = !DILocation(line: 3058, column: 38, scope: !10057)
!10074 = !DILocation(line: 3058, column: 28, scope: !10057)
!10075 = !DILocation(line: 3058, column: 9, scope: !10057)
!10076 = !DILocation(line: 3058, column: 14, scope: !10057)
!10077 = !DILocation(line: 3058, column: 26, scope: !10057)
!10078 = !DILocation(line: 3059, column: 21, scope: !10057)
!10079 = !DILocation(line: 3059, column: 26, scope: !10057)
!10080 = !DILocation(line: 3059, column: 9, scope: !10057)
!10081 = !DILocation(line: 3060, column: 1, scope: !10057)
!10082 = distinct !DISubprogram(name: "rd_kafka_broker_schedule_connection", scope: !2, file: !2, line: 5817, type: !1583, scopeLine: 5817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10083)
!10083 = !{!10084, !10085}
!10084 = !DILocalVariable(name: "rkb", arg: 1, scope: !10082, file: !2, line: 5817, type: !412)
!10085 = !DILocalVariable(name: "rko", scope: !10082, file: !2, line: 5818, type: !914)
!10086 = !DILocation(line: 5817, column: 61, scope: !10082)
!10087 = !DILocation(line: 5818, column: 9, scope: !10082)
!10088 = !DILocation(line: 5818, column: 24, scope: !10082)
!10089 = !DILocation(line: 5820, column: 15, scope: !10082)
!10090 = !DILocation(line: 5820, column: 13, scope: !10082)
!10091 = !DILocation(line: 5821, column: 9, scope: !10082)
!10092 = !{!8464, !3912, i64 52}
!10093 = !DILocation(line: 5822, column: 24, scope: !10082)
!10094 = !DILocation(line: 5822, column: 29, scope: !10082)
!10095 = !DILocation(line: 5822, column: 38, scope: !10082)
!10096 = !DILocation(line: 5822, column: 9, scope: !10082)
!10097 = !DILocation(line: 5823, column: 1, scope: !10082)
!10098 = !DISubprogram(name: "rd_list_find", scope: !600, file: !600, line: 279, type: !10099, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10099 = !DISubroutineType(types: !10100)
!10100 = !{!607, !832, !709, !1194}
!10101 = distinct !DISubprogram(name: "rd_kafka_brokers_add0", scope: !2, file: !2, line: 5293, type: !10102, scopeLine: 5295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10104)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{!126, !586, !365, !561}
!10104 = !{!10105, !10106, !10107, !10108, !10109, !10110, !10111, !10112, !10114, !10115, !10117, !10118, !10119, !10120}
!10105 = !DILocalVariable(name: "rk", arg: 1, scope: !10101, file: !2, line: 5293, type: !586)
!10106 = !DILocalVariable(name: "brokerlist", arg: 2, scope: !10101, file: !2, line: 5294, type: !365)
!10107 = !DILocalVariable(name: "is_bootstrap_server_list", arg: 3, scope: !10101, file: !2, line: 5295, type: !561)
!10108 = !DILocalVariable(name: "s_copy", scope: !10101, file: !2, line: 5296, type: !559)
!10109 = !DILocalVariable(name: "s", scope: !10101, file: !2, line: 5297, type: !559)
!10110 = !DILocalVariable(name: "cnt", scope: !10101, file: !2, line: 5298, type: !126)
!10111 = !DILocalVariable(name: "pre_cnt", scope: !10101, file: !2, line: 5299, type: !126)
!10112 = !DILocalVariable(name: "sinx", scope: !10101, file: !2, line: 5300, type: !10113)
!10113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!10114 = !DILocalVariable(name: "sockaddr_list", scope: !10101, file: !2, line: 5301, type: !427)
!10115 = !DILocalVariable(name: "port", scope: !10116, file: !2, line: 5305, type: !449)
!10116 = distinct !DILexicalBlock(scope: !10101, file: !2, line: 5304, column: 20)
!10117 = !DILocalVariable(name: "host", scope: !10116, file: !2, line: 5306, type: !365)
!10118 = !DILocalVariable(name: "err_str", scope: !10116, file: !2, line: 5307, type: !365)
!10119 = !DILocalVariable(name: "resolved_FQDN", scope: !10116, file: !2, line: 5308, type: !365)
!10120 = !DILocalVariable(name: "proto", scope: !10116, file: !2, line: 5309, type: !979)
!10121 = !DILocation(line: 5293, column: 39, scope: !10101)
!10122 = !DILocation(line: 5294, column: 39, scope: !10101)
!10123 = !DILocation(line: 5295, column: 37, scope: !10101)
!10124 = !DILocation(line: 5296, column: 9, scope: !10101)
!10125 = !DILocation(line: 5296, column: 15, scope: !10101)
!10126 = !DILocation(line: 5296, column: 34, scope: !10101)
!10127 = !DILocation(line: 5296, column: 24, scope: !10101)
!10128 = !DILocation(line: 5297, column: 9, scope: !10101)
!10129 = !DILocation(line: 5297, column: 15, scope: !10101)
!10130 = !DILocation(line: 5297, column: 24, scope: !10101)
!10131 = !DILocation(line: 5298, column: 9, scope: !10101)
!10132 = !DILocation(line: 5298, column: 13, scope: !10101)
!10133 = !DILocation(line: 5299, column: 9, scope: !10101)
!10134 = !DILocation(line: 5299, column: 13, scope: !10101)
!10135 = !DILocation(line: 5299, column: 41, scope: !10101)
!10136 = !DILocation(line: 5299, column: 45, scope: !10101)
!10137 = !DILocation(line: 5299, column: 24, scope: !10101)
!10138 = !DILocation(line: 5300, column: 9, scope: !10101)
!10139 = !DILocation(line: 5300, column: 28, scope: !10101)
!10140 = !DILocation(line: 5301, column: 9, scope: !10101)
!10141 = !DILocation(line: 5301, column: 29, scope: !10101)
!10142 = !DILocation(line: 5304, column: 9, scope: !10101)
!10143 = !DILocation(line: 5304, column: 17, scope: !10101)
!10144 = !DILocation(line: 5304, column: 16, scope: !10101)
!10145 = !DILocation(line: 5305, column: 17, scope: !10116)
!10146 = !DILocation(line: 5305, column: 26, scope: !10116)
!10147 = !DILocation(line: 5306, column: 17, scope: !10116)
!10148 = !DILocation(line: 5306, column: 29, scope: !10116)
!10149 = !DILocation(line: 5307, column: 17, scope: !10116)
!10150 = !DILocation(line: 5307, column: 29, scope: !10116)
!10151 = !DILocation(line: 5308, column: 17, scope: !10116)
!10152 = !DILocation(line: 5308, column: 29, scope: !10116)
!10153 = !DILocation(line: 5309, column: 17, scope: !10116)
!10154 = !DILocation(line: 5309, column: 37, scope: !10116)
!10155 = !DILocation(line: 5311, column: 22, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10116, file: !2, line: 5311, column: 21)
!10157 = !DILocation(line: 5311, column: 21, scope: !10156)
!10158 = !DILocation(line: 5311, column: 24, scope: !10156)
!10159 = !DILocation(line: 5311, column: 31, scope: !10156)
!10160 = !DILocation(line: 5311, column: 35, scope: !10156)
!10161 = !DILocation(line: 5311, column: 34, scope: !10156)
!10162 = !DILocation(line: 5311, column: 37, scope: !10156)
!10163 = !DILocation(line: 5311, column: 21, scope: !10116)
!10164 = !DILocation(line: 5312, column: 26, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10156, file: !2, line: 5311, column: 45)
!10166 = !DILocation(line: 5313, column: 25, scope: !10165)
!10167 = distinct !{!10167, !10142, !10168, !4095}
!10168 = !DILocation(line: 5360, column: 9, scope: !10101)
!10169 = !DILocation(line: 5316, column: 48, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10116, file: !2, line: 5316, column: 21)
!10171 = !DILocation(line: 5316, column: 21, scope: !10170)
!10172 = !DILocation(line: 5316, column: 78, scope: !10170)
!10173 = !DILocation(line: 5316, column: 21, scope: !10116)
!10174 = !DILocation(line: 5318, column: 25, scope: !10170)
!10175 = !DILocation(line: 5320, column: 17, scope: !10116)
!10176 = !DILocation(line: 5321, column: 21, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10116, file: !2, line: 5321, column: 21)
!10178 = !DILocation(line: 5321, column: 46, scope: !10177)
!10179 = !DILocation(line: 5322, column: 21, scope: !10177)
!10180 = !DILocation(line: 5322, column: 25, scope: !10177)
!10181 = !DILocation(line: 5322, column: 33, scope: !10177)
!10182 = !{!4141, !3912, i64 740}
!10183 = !DILocation(line: 5322, column: 51, scope: !10177)
!10184 = !DILocation(line: 5321, column: 21, scope: !10116)
!10185 = !DILocation(line: 5324, column: 25, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10177, file: !2, line: 5323, column: 76)
!10187 = !DILocation(line: 5324, column: 25, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10189, file: !2, line: 5324, column: 25)
!10189 = distinct !DILexicalBlock(scope: !10186, file: !2, line: 5324, column: 25)
!10190 = !DILocation(line: 5324, column: 25, scope: !10189)
!10191 = !DILocation(line: 5328, column: 29, scope: !10186)
!10192 = !DILocation(line: 5329, column: 29, scope: !10186)
!10193 = !DILocation(line: 5329, column: 33, scope: !10186)
!10194 = !DILocation(line: 5329, column: 41, scope: !10186)
!10195 = !{!4141, !3941, i64 632}
!10196 = !DILocation(line: 5330, column: 42, scope: !10186)
!10197 = !DILocation(line: 5330, column: 46, scope: !10186)
!10198 = !DILocation(line: 5330, column: 54, scope: !10186)
!10199 = !{!4141, !3911, i64 2256}
!10200 = !DILocation(line: 5331, column: 29, scope: !10186)
!10201 = !DILocation(line: 5331, column: 33, scope: !10186)
!10202 = !DILocation(line: 5331, column: 41, scope: !10186)
!10203 = !{!4141, !3911, i64 2272}
!10204 = !DILocation(line: 5327, column: 41, scope: !10186)
!10205 = !DILocation(line: 5327, column: 39, scope: !10186)
!10206 = !DILocation(line: 5333, column: 30, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10186, file: !2, line: 5333, column: 29)
!10208 = !DILocation(line: 5333, column: 29, scope: !10186)
!10209 = !DILocation(line: 5334, column: 33, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10207, file: !2, line: 5333, column: 45)
!10211 = !DILocation(line: 5337, column: 33, scope: !10210)
!10212 = !DILocation(line: 5338, column: 33, scope: !10210)
!10213 = !DILocation(line: 5341, column: 25, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10186, file: !2, line: 5341, column: 25)
!10215 = !DILocation(line: 5341, column: 25, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10214, file: !2, line: 5341, column: 25)
!10217 = !DILocation(line: 5343, column: 37, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10216, file: !2, line: 5341, column: 71)
!10219 = !DILocation(line: 5342, column: 49, scope: !10218)
!10220 = !DILocation(line: 5342, column: 47, scope: !10218)
!10221 = !DILocation(line: 5344, column: 33, scope: !10218)
!10222 = !DILocation(line: 5344, column: 33, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10224, file: !2, line: 5344, column: 33)
!10224 = distinct !DILexicalBlock(scope: !10218, file: !2, line: 5344, column: 33)
!10225 = !DILocation(line: 5344, column: 33, scope: !10224)
!10226 = !DILocation(line: 5350, column: 37, scope: !10218)
!10227 = !DILocation(line: 5350, column: 41, scope: !10218)
!10228 = !DILocation(line: 5350, column: 48, scope: !10218)
!10229 = !DILocation(line: 5350, column: 63, scope: !10218)
!10230 = !DILocation(line: 5349, column: 33, scope: !10218)
!10231 = !DILocation(line: 5351, column: 25, scope: !10218)
!10232 = distinct !{!10232, !10213, !10233, !4095}
!10233 = !DILocation(line: 5351, column: 25, scope: !10214)
!10234 = !DILocation(line: 5353, column: 50, scope: !10186)
!10235 = !DILocation(line: 5353, column: 25, scope: !10186)
!10236 = !DILocation(line: 5354, column: 17, scope: !10186)
!10237 = !DILocation(line: 5355, column: 53, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10177, file: !2, line: 5354, column: 24)
!10239 = !DILocation(line: 5355, column: 57, scope: !10238)
!10240 = !DILocation(line: 5355, column: 64, scope: !10238)
!10241 = !DILocation(line: 5355, column: 70, scope: !10238)
!10242 = !DILocation(line: 5355, column: 25, scope: !10238)
!10243 = !DILocation(line: 5359, column: 17, scope: !10116)
!10244 = !DILocation(line: 5362, column: 17, scope: !10101)
!10245 = !DILocation(line: 5362, column: 9, scope: !10101)
!10246 = !DILocation(line: 5364, column: 13, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10101, file: !2, line: 5364, column: 13)
!10248 = !DILocation(line: 5364, column: 17, scope: !10247)
!10249 = !DILocation(line: 5364, column: 25, scope: !10247)
!10250 = !DILocation(line: 5364, column: 44, scope: !10247)
!10251 = !DILocation(line: 5364, column: 47, scope: !10247)
!10252 = !DILocation(line: 5364, column: 51, scope: !10247)
!10253 = !DILocation(line: 5364, column: 55, scope: !10247)
!10254 = !DILocation(line: 5364, column: 58, scope: !10247)
!10255 = !DILocation(line: 5364, column: 66, scope: !10247)
!10256 = !DILocation(line: 5364, column: 13, scope: !10101)
!10257 = !DILocation(line: 5369, column: 17, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10247, file: !2, line: 5364, column: 72)
!10259 = !DILocation(line: 5370, column: 38, scope: !10258)
!10260 = !DILocation(line: 5370, column: 17, scope: !10258)
!10261 = !DILocation(line: 5371, column: 17, scope: !10258)
!10262 = !DILocation(line: 5372, column: 9, scope: !10258)
!10263 = !DILocation(line: 5374, column: 16, scope: !10101)
!10264 = !DILocation(line: 5375, column: 1, scope: !10101)
!10265 = !DILocation(line: 5374, column: 9, scope: !10101)
!10266 = distinct !DISubprogram(name: "rd_kafka_broker_name_parse", scope: !2, file: !2, line: 5156, type: !10267, scopeLine: 5160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10272)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{!126, !586, !825, !10269, !10270, !10271}
!10269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!10270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!10271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!10272 = !{!10273, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281, !10282, !10283, !10285, !10286, !10287, !10290}
!10273 = !DILocalVariable(name: "rk", arg: 1, scope: !10266, file: !2, line: 5156, type: !586)
!10274 = !DILocalVariable(name: "name", arg: 2, scope: !10266, file: !2, line: 5157, type: !825)
!10275 = !DILocalVariable(name: "proto", arg: 3, scope: !10266, file: !2, line: 5158, type: !10269)
!10276 = !DILocalVariable(name: "host", arg: 4, scope: !10266, file: !2, line: 5159, type: !10270)
!10277 = !DILocalVariable(name: "port", arg: 5, scope: !10266, file: !2, line: 5160, type: !10271)
!10278 = !DILocalVariable(name: "s", scope: !10266, file: !2, line: 5161, type: !559)
!10279 = !DILocalVariable(name: "orig", scope: !10266, file: !2, line: 5162, type: !559)
!10280 = !DILocalVariable(name: "n", scope: !10266, file: !2, line: 5163, type: !559)
!10281 = !DILocalVariable(name: "t", scope: !10266, file: !2, line: 5163, type: !559)
!10282 = !DILocalVariable(name: "t2", scope: !10266, file: !2, line: 5163, type: !559)
!10283 = !DILocalVariable(name: "__old", scope: !10284, file: !2, line: 5166, type: !365)
!10284 = distinct !DILexicalBlock(scope: !10266, file: !2, line: 5166, column: 9)
!10285 = !DILocalVariable(name: "__len", scope: !10284, file: !2, line: 5166, type: !692)
!10286 = !DILocalVariable(name: "__new", scope: !10284, file: !2, line: 5166, type: !559)
!10287 = !DILocalVariable(name: "i", scope: !10288, file: !2, line: 5177, type: !126)
!10288 = distinct !DILexicalBlock(scope: !10289, file: !2, line: 5176, column: 37)
!10289 = distinct !DILexicalBlock(scope: !10266, file: !2, line: 5176, column: 13)
!10290 = !DILocalVariable(name: "__res", scope: !10291, file: !2, line: 5190, type: !126)
!10291 = distinct !DILexicalBlock(scope: !10292, file: !2, line: 5190, column: 31)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !2, line: 5189, column: 17)
!10293 = distinct !DILexicalBlock(scope: !10288, file: !2, line: 5189, column: 17)
!10294 = !DILocation(line: 5156, column: 51, scope: !10266)
!10295 = !DILocation(line: 5157, column: 46, scope: !10266)
!10296 = !DILocation(line: 5158, column: 60, scope: !10266)
!10297 = !DILocation(line: 5159, column: 52, scope: !10266)
!10298 = !DILocation(line: 5160, column: 49, scope: !10266)
!10299 = !DILocation(line: 5161, column: 9, scope: !10266)
!10300 = !DILocation(line: 5161, column: 15, scope: !10266)
!10301 = !DILocation(line: 5161, column: 20, scope: !10266)
!10302 = !DILocation(line: 5161, column: 19, scope: !10266)
!10303 = !DILocation(line: 5162, column: 9, scope: !10266)
!10304 = !DILocation(line: 5162, column: 15, scope: !10266)
!10305 = !DILocation(line: 5163, column: 9, scope: !10266)
!10306 = !DILocation(line: 5163, column: 15, scope: !10266)
!10307 = !DILocation(line: 5163, column: 19, scope: !10266)
!10308 = !DILocation(line: 5163, column: 23, scope: !10266)
!10309 = !DILocation(line: 5166, column: 9, scope: !10284)
!10310 = !DILocation(line: 5166, column: 9, scope: !10266)
!10311 = !DILocation(line: 5169, column: 25, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10266, file: !2, line: 5169, column: 13)
!10313 = !DILocation(line: 5169, column: 18, scope: !10312)
!10314 = !DILocation(line: 5169, column: 16, scope: !10312)
!10315 = !DILocation(line: 5169, column: 13, scope: !10266)
!10316 = !DILocation(line: 5170, column: 18, scope: !10312)
!10317 = !DILocation(line: 5170, column: 20, scope: !10312)
!10318 = !DILocation(line: 5170, column: 17, scope: !10312)
!10319 = !DILocation(line: 5172, column: 21, scope: !10312)
!10320 = !DILocation(line: 5172, column: 32, scope: !10312)
!10321 = !DILocation(line: 5172, column: 25, scope: !10312)
!10322 = !DILocation(line: 5172, column: 23, scope: !10312)
!10323 = !DILocation(line: 5172, column: 35, scope: !10312)
!10324 = !DILocation(line: 5172, column: 19, scope: !10312)
!10325 = !DILocation(line: 5176, column: 25, scope: !10289)
!10326 = !DILocation(line: 5176, column: 18, scope: !10289)
!10327 = !DILocation(line: 5176, column: 16, scope: !10289)
!10328 = !DILocation(line: 5176, column: 13, scope: !10266)
!10329 = !DILocation(line: 5177, column: 17, scope: !10288)
!10330 = !DILocation(line: 5177, column: 21, scope: !10288)
!10331 = !DILocation(line: 5180, column: 21, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10288, file: !2, line: 5180, column: 21)
!10333 = !DILocation(line: 5180, column: 26, scope: !10332)
!10334 = !DILocation(line: 5180, column: 23, scope: !10332)
!10335 = !DILocation(line: 5180, column: 21, scope: !10288)
!10336 = !DILocation(line: 5181, column: 25, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10332, file: !2, line: 5180, column: 29)
!10338 = !DILocation(line: 5185, column: 25, scope: !10337)
!10339 = !DILocation(line: 5189, column: 27, scope: !10293)
!10340 = !DILocation(line: 5189, column: 25, scope: !10293)
!10341 = !DILocation(line: 5189, column: 22, scope: !10293)
!10342 = !DILocation(line: 5189, column: 30, scope: !10292)
!10343 = !DILocation(line: 5189, column: 35, scope: !10292)
!10344 = !DILocation(line: 5189, column: 33, scope: !10292)
!10345 = !DILocation(line: 5189, column: 17, scope: !10293)
!10346 = !DILocation(line: 5190, column: 31, scope: !10291)
!10347 = !DILocation(line: 5190, column: 31, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10291, file: !2, line: 5190, column: 31)
!10349 = !DILocation(line: 5190, column: 31, scope: !10292)
!10350 = !DILocation(line: 5190, column: 26, scope: !10292)
!10351 = !DILocation(line: 5190, column: 29, scope: !10292)
!10352 = !DILocation(line: 5190, column: 25, scope: !10292)
!10353 = !DILocation(line: 5189, column: 40, scope: !10292)
!10354 = !DILocation(line: 5189, column: 17, scope: !10292)
!10355 = distinct !{!10355, !10345, !10356, !4095}
!10356 = !DILocation(line: 5190, column: 31, scope: !10293)
!10357 = !DILocation(line: 5192, column: 18, scope: !10288)
!10358 = !DILocation(line: 5192, column: 20, scope: !10288)
!10359 = !DILocation(line: 5195, column: 24, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10288, file: !2, line: 5195, column: 17)
!10361 = !DILocation(line: 5195, column: 22, scope: !10360)
!10362 = !DILocation(line: 5195, column: 29, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10360, file: !2, line: 5195, column: 17)
!10364 = !DILocation(line: 5195, column: 31, scope: !10363)
!10365 = !DILocation(line: 5195, column: 17, scope: !10360)
!10366 = !DILocation(line: 5196, column: 30, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10363, file: !2, line: 5196, column: 29)
!10368 = !DILocation(line: 5196, column: 29, scope: !10363)
!10369 = !DILocation(line: 5197, column: 33, scope: !10367)
!10370 = !DILocation(line: 5195, column: 54, scope: !10363)
!10371 = !DILocation(line: 5195, column: 17, scope: !10363)
!10372 = distinct !{!10372, !10365, !10373, !4095}
!10373 = !DILocation(line: 5197, column: 33, scope: !10360)
!10374 = !DILocation(line: 5200, column: 21, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10288, file: !2, line: 5200, column: 21)
!10376 = !DILocation(line: 5200, column: 23, scope: !10375)
!10377 = !DILocation(line: 5200, column: 21, scope: !10288)
!10378 = !DILocation(line: 5201, column: 25, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10375, file: !2, line: 5200, column: 46)
!10380 = !DILocation(line: 5206, column: 25, scope: !10379)
!10381 = !DILocation(line: 5209, column: 26, scope: !10288)
!10382 = !DILocation(line: 5209, column: 18, scope: !10288)
!10383 = !DILocation(line: 5209, column: 24, scope: !10288)
!10384 = !DILocation(line: 5212, column: 21, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10288, file: !2, line: 5212, column: 21)
!10386 = !DILocation(line: 5212, column: 25, scope: !10385)
!10387 = !DILocation(line: 5212, column: 33, scope: !10385)
!10388 = !DILocation(line: 5212, column: 55, scope: !10385)
!10389 = !DILocation(line: 5212, column: 54, scope: !10385)
!10390 = !DILocation(line: 5212, column: 51, scope: !10385)
!10391 = !DILocation(line: 5212, column: 21, scope: !10288)
!10392 = !DILocation(line: 5213, column: 25, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10385, file: !2, line: 5212, column: 62)
!10394 = !DILocation(line: 5221, column: 25, scope: !10393)
!10395 = !DILocation(line: 5225, column: 21, scope: !10288)
!10396 = !DILocation(line: 5225, column: 23, scope: !10288)
!10397 = !DILocation(line: 5225, column: 19, scope: !10288)
!10398 = !DILocation(line: 5228, column: 33, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10288, file: !2, line: 5228, column: 21)
!10400 = !DILocation(line: 5228, column: 26, scope: !10399)
!10401 = !DILocation(line: 5228, column: 24, scope: !10399)
!10402 = !DILocation(line: 5228, column: 21, scope: !10288)
!10403 = !DILocation(line: 5229, column: 26, scope: !10399)
!10404 = !DILocation(line: 5229, column: 28, scope: !10399)
!10405 = !DILocation(line: 5229, column: 25, scope: !10399)
!10406 = !DILocation(line: 5231, column: 9, scope: !10289)
!10407 = !DILocation(line: 5231, column: 9, scope: !10288)
!10408 = !DILocation(line: 5232, column: 26, scope: !10289)
!10409 = !DILocation(line: 5232, column: 30, scope: !10289)
!10410 = !DILocation(line: 5232, column: 38, scope: !10289)
!10411 = !DILocation(line: 5232, column: 18, scope: !10289)
!10412 = !DILocation(line: 5232, column: 24, scope: !10289)
!10413 = !DILocation(line: 5235, column: 10, scope: !10266)
!10414 = !DILocation(line: 5235, column: 15, scope: !10266)
!10415 = !DILocation(line: 5245, column: 26, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10266, file: !2, line: 5245, column: 13)
!10417 = !DILocation(line: 5245, column: 18, scope: !10416)
!10418 = !DILocation(line: 5245, column: 16, scope: !10416)
!10419 = !DILocation(line: 5245, column: 35, scope: !10416)
!10420 = !DILocation(line: 5246, column: 27, scope: !10416)
!10421 = !DILocation(line: 5246, column: 20, scope: !10416)
!10422 = !DILocation(line: 5246, column: 18, scope: !10416)
!10423 = !DILocation(line: 5246, column: 39, scope: !10416)
!10424 = !DILocation(line: 5246, column: 36, scope: !10416)
!10425 = !DILocation(line: 5246, column: 41, scope: !10416)
!10426 = !DILocation(line: 5246, column: 46, scope: !10416)
!10427 = !DILocation(line: 5246, column: 48, scope: !10416)
!10428 = !DILocation(line: 5246, column: 44, scope: !10416)
!10429 = !DILocation(line: 5246, column: 53, scope: !10416)
!10430 = !DILocation(line: 5245, column: 13, scope: !10266)
!10431 = !DILocation(line: 5247, column: 18, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10416, file: !2, line: 5246, column: 62)
!10433 = !DILocation(line: 5247, column: 23, scope: !10432)
!10434 = !DILocation(line: 5248, column: 30, scope: !10432)
!10435 = !DILocation(line: 5248, column: 32, scope: !10432)
!10436 = !DILocation(line: 5248, column: 25, scope: !10432)
!10437 = !DILocation(line: 5248, column: 18, scope: !10432)
!10438 = !DILocation(line: 5248, column: 23, scope: !10432)
!10439 = !DILocation(line: 5249, column: 9, scope: !10432)
!10440 = !DILocation(line: 5252, column: 15, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10266, file: !2, line: 5252, column: 13)
!10442 = !DILocation(line: 5252, column: 14, scope: !10441)
!10443 = !DILocation(line: 5252, column: 13, scope: !10266)
!10444 = !DILocation(line: 5253, column: 19, scope: !10441)
!10445 = !DILocation(line: 5253, column: 17, scope: !10441)
!10446 = !DILocation(line: 5255, column: 17, scope: !10266)
!10447 = !DILocation(line: 5255, column: 10, scope: !10266)
!10448 = !DILocation(line: 5255, column: 15, scope: !10266)
!10449 = !DILocation(line: 5256, column: 17, scope: !10266)
!10450 = !DILocation(line: 5256, column: 19, scope: !10266)
!10451 = !DILocation(line: 5256, column: 10, scope: !10266)
!10452 = !DILocation(line: 5256, column: 15, scope: !10266)
!10453 = !DILocation(line: 5258, column: 9, scope: !10266)
!10454 = !DILocation(line: 5259, column: 1, scope: !10266)
!10455 = !DISubprogram(name: "rd_getaddrinfo", scope: !429, file: !429, line: 163, type: !10456, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10456 = !DISubroutineType(types: !10457)
!10457 = !{!427, !365, !365, !126, !126, !126, !126, !1354, !607, !10270}
!10458 = !DISubprogram(name: "rd_sockaddr2str", scope: !429, file: !429, line: 92, type: !10459, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10459 = !DISubroutineType(types: !10460)
!10460 = !{!365, !709, !126}
!10461 = distinct !DISubprogram(name: "rd_kafka_find_or_add_broker", scope: !2, file: !2, line: 5265, type: !10462, scopeLine: 5269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10464)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{null, !586, !979, !365, !449, !1067}
!10464 = !{!10465, !10466, !10467, !10468, !10469, !10470}
!10465 = !DILocalVariable(name: "rk", arg: 1, scope: !10461, file: !2, line: 5265, type: !586)
!10466 = !DILocalVariable(name: "proto", arg: 2, scope: !10461, file: !2, line: 5266, type: !979)
!10467 = !DILocalVariable(name: "host", arg: 3, scope: !10461, file: !2, line: 5267, type: !365)
!10468 = !DILocalVariable(name: "port", arg: 4, scope: !10461, file: !2, line: 5268, type: !449)
!10469 = !DILocalVariable(name: "cnt", arg: 5, scope: !10461, file: !2, line: 5269, type: !1067)
!10470 = !DILocalVariable(name: "rkb", scope: !10461, file: !2, line: 5270, type: !412)
!10471 = !DILocation(line: 5265, column: 53, scope: !10461)
!10472 = !DILocation(line: 5266, column: 61, scope: !10461)
!10473 = !DILocation(line: 5267, column: 53, scope: !10461)
!10474 = !DILocation(line: 5268, column: 50, scope: !10461)
!10475 = !DILocation(line: 5269, column: 46, scope: !10461)
!10476 = !DILocation(line: 5270, column: 9, scope: !10461)
!10477 = !DILocation(line: 5270, column: 28, scope: !10461)
!10478 = !DILocation(line: 5272, column: 41, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10461, file: !2, line: 5272, column: 13)
!10480 = !DILocation(line: 5272, column: 45, scope: !10479)
!10481 = !DILocation(line: 5272, column: 52, scope: !10479)
!10482 = !DILocation(line: 5272, column: 58, scope: !10479)
!10483 = !DILocation(line: 5272, column: 20, scope: !10479)
!10484 = !DILocation(line: 5272, column: 18, scope: !10479)
!10485 = !DILocation(line: 5272, column: 65, scope: !10479)
!10486 = !DILocation(line: 5273, column: 13, scope: !10479)
!10487 = !DILocation(line: 5273, column: 18, scope: !10479)
!10488 = !DILocation(line: 5273, column: 29, scope: !10479)
!10489 = !DILocation(line: 5272, column: 13, scope: !10461)
!10490 = !DILocation(line: 5274, column: 19, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10479, file: !2, line: 5273, column: 53)
!10492 = !DILocation(line: 5274, column: 23, scope: !10491)
!10493 = !DILocation(line: 5275, column: 9, scope: !10491)
!10494 = !DILocation(line: 5275, column: 40, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10479, file: !2, line: 5275, column: 20)
!10496 = !DILocation(line: 5275, column: 65, scope: !10495)
!10497 = !DILocation(line: 5275, column: 72, scope: !10495)
!10498 = !DILocation(line: 5276, column: 40, scope: !10495)
!10499 = !DILocation(line: 5275, column: 20, scope: !10495)
!10500 = !DILocation(line: 5276, column: 66, scope: !10495)
!10501 = !DILocation(line: 5275, column: 20, scope: !10479)
!10502 = !DILocation(line: 5277, column: 19, scope: !10495)
!10503 = !DILocation(line: 5277, column: 23, scope: !10495)
!10504 = !DILocation(line: 5277, column: 17, scope: !10495)
!10505 = !DILocation(line: 5282, column: 13, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10461, file: !2, line: 5282, column: 13)
!10507 = !DILocation(line: 5282, column: 13, scope: !10461)
!10508 = !DILocation(line: 5283, column: 17, scope: !10506)
!10509 = !DILocation(line: 5283, column: 17, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !2, line: 5283, column: 17)
!10511 = distinct !DILexicalBlock(scope: !10506, file: !2, line: 5283, column: 17)
!10512 = !DILocation(line: 5283, column: 17, scope: !10511)
!10513 = !DILocation(line: 5284, column: 1, scope: !10461)
!10514 = distinct !DISubprogram(name: "rd_kafka_brokers_add", scope: !2, file: !2, line: 5378, type: !10515, scopeLine: 5378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10517)
!10515 = !DISubroutineType(types: !10516)
!10516 = !{!126, !586, !365}
!10517 = !{!10518, !10519}
!10518 = !DILocalVariable(name: "rk", arg: 1, scope: !10514, file: !2, line: 5378, type: !586)
!10519 = !DILocalVariable(name: "brokerlist", arg: 2, scope: !10514, file: !2, line: 5378, type: !365)
!10520 = !DILocation(line: 5378, column: 38, scope: !10514)
!10521 = !DILocation(line: 5378, column: 54, scope: !10514)
!10522 = !DILocation(line: 5379, column: 38, scope: !10514)
!10523 = !DILocation(line: 5379, column: 42, scope: !10514)
!10524 = !DILocation(line: 5379, column: 16, scope: !10514)
!10525 = !DILocation(line: 5379, column: 9, scope: !10514)
!10526 = distinct !DISubprogram(name: "rd_kafka_broker_update", scope: !2, file: !2, line: 5392, type: !10527, scopeLine: 5395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10532)
!10527 = !DISubroutineType(types: !10528)
!10528 = !{null, !586, !979, !10529, !10531}
!10529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10530, size: 64)
!10530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !774)
!10531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!10532 = !{!10533, !10534, !10535, !10536, !10537, !10538, !10539, !10540}
!10533 = !DILocalVariable(name: "rk", arg: 1, scope: !10526, file: !2, line: 5392, type: !586)
!10534 = !DILocalVariable(name: "proto", arg: 2, scope: !10526, file: !2, line: 5393, type: !979)
!10535 = !DILocalVariable(name: "mdb", arg: 3, scope: !10526, file: !2, line: 5394, type: !10529)
!10536 = !DILocalVariable(name: "rkbp", arg: 4, scope: !10526, file: !2, line: 5395, type: !10531)
!10537 = !DILocalVariable(name: "rkb", scope: !10526, file: !2, line: 5396, type: !412)
!10538 = !DILocalVariable(name: "nodename", scope: !10526, file: !2, line: 5397, type: !924)
!10539 = !DILocalVariable(name: "needs_update", scope: !10526, file: !2, line: 5398, type: !126)
!10540 = !DILocalVariable(name: "rko", scope: !10541, file: !2, line: 5433, type: !914)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !2, line: 5432, column: 35)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !2, line: 5432, column: 21)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !2, line: 5430, column: 18)
!10544 = distinct !DILexicalBlock(scope: !10526, file: !2, line: 5430, column: 13)
!10545 = !DILocation(line: 5392, column: 41, scope: !10526)
!10546 = !DILocation(line: 5393, column: 49, scope: !10526)
!10547 = !DILocation(line: 5394, column: 68, scope: !10526)
!10548 = !DILocation(line: 5395, column: 49, scope: !10526)
!10549 = !DILocation(line: 5396, column: 9, scope: !10526)
!10550 = !DILocation(line: 5396, column: 28, scope: !10526)
!10551 = !DILocation(line: 5397, column: 9, scope: !10526)
!10552 = !DILocation(line: 5397, column: 14, scope: !10526)
!10553 = !DILocation(line: 5398, column: 9, scope: !10526)
!10554 = !DILocation(line: 5398, column: 13, scope: !10526)
!10555 = !DILocation(line: 5400, column: 30, scope: !10526)
!10556 = !DILocation(line: 5400, column: 58, scope: !10526)
!10557 = !DILocation(line: 5400, column: 63, scope: !10526)
!10558 = !{!10559, !3911, i64 8}
!10559 = !{!"rd_kafka_metadata_broker", !3941, i64 0, !3911, i64 8, !3941, i64 16}
!10560 = !DILocation(line: 5400, column: 69, scope: !10526)
!10561 = !DILocation(line: 5400, column: 74, scope: !10526)
!10562 = !{!10559, !3941, i64 16}
!10563 = !DILocation(line: 5400, column: 9, scope: !10526)
!10564 = !DILocation(line: 5402, column: 9, scope: !10526)
!10565 = !DILocation(line: 5403, column: 13, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10526, file: !2, line: 5403, column: 13)
!10567 = !DILocation(line: 5403, column: 13, scope: !10526)
!10568 = !DILocation(line: 5406, column: 17, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10566, file: !2, line: 5403, column: 49)
!10570 = !DILocation(line: 5407, column: 21, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10569, file: !2, line: 5407, column: 21)
!10572 = !DILocation(line: 5407, column: 21, scope: !10569)
!10573 = !DILocation(line: 5408, column: 26, scope: !10571)
!10574 = !DILocation(line: 5408, column: 31, scope: !10571)
!10575 = !DILocation(line: 5408, column: 25, scope: !10571)
!10576 = !DILocation(line: 5409, column: 17, scope: !10569)
!10577 = !DILocation(line: 5412, column: 20, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10526, file: !2, line: 5412, column: 13)
!10579 = !{!10559, !3941, i64 0}
!10580 = !DILocation(line: 5412, column: 18, scope: !10578)
!10581 = !DILocation(line: 5412, column: 13, scope: !10526)
!10582 = !DILocation(line: 5415, column: 28, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10584, file: !2, line: 5415, column: 21)
!10584 = distinct !DILexicalBlock(scope: !10578, file: !2, line: 5412, column: 66)
!10585 = !DILocation(line: 5415, column: 33, scope: !10583)
!10586 = !DILocation(line: 5415, column: 47, scope: !10583)
!10587 = !DILocation(line: 5415, column: 21, scope: !10583)
!10588 = !DILocation(line: 5415, column: 21, scope: !10584)
!10589 = !DILocation(line: 5416, column: 38, scope: !10583)
!10590 = !DILocation(line: 5416, column: 25, scope: !10583)
!10591 = !DILocation(line: 5417, column: 9, scope: !10584)
!10592 = !DILocation(line: 5417, column: 48, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10578, file: !2, line: 5417, column: 20)
!10594 = !DILocation(line: 5417, column: 52, scope: !10593)
!10595 = !DILocation(line: 5417, column: 59, scope: !10593)
!10596 = !DILocation(line: 5417, column: 64, scope: !10593)
!10597 = !DILocation(line: 5418, column: 48, scope: !10593)
!10598 = !DILocation(line: 5418, column: 53, scope: !10593)
!10599 = !DILocation(line: 5417, column: 27, scope: !10593)
!10600 = !DILocation(line: 5417, column: 25, scope: !10593)
!10601 = !DILocation(line: 5417, column: 20, scope: !10578)
!10602 = !DILocation(line: 5421, column: 30, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10593, file: !2, line: 5418, column: 61)
!10604 = !DILocation(line: 5423, column: 9, scope: !10603)
!10605 = !DILocation(line: 5423, column: 47, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10593, file: !2, line: 5423, column: 20)
!10607 = !DILocation(line: 5423, column: 69, scope: !10606)
!10608 = !DILocation(line: 5424, column: 47, scope: !10606)
!10609 = !DILocation(line: 5424, column: 52, scope: !10606)
!10610 = !DILocation(line: 5424, column: 58, scope: !10606)
!10611 = !DILocation(line: 5424, column: 63, scope: !10606)
!10612 = !DILocation(line: 5424, column: 69, scope: !10606)
!10613 = !DILocation(line: 5424, column: 74, scope: !10606)
!10614 = !DILocation(line: 5423, column: 27, scope: !10606)
!10615 = !DILocation(line: 5423, column: 25, scope: !10606)
!10616 = !DILocation(line: 5423, column: 20, scope: !10593)
!10617 = !DILocation(line: 5425, column: 17, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10606, file: !2, line: 5424, column: 80)
!10619 = !DILocation(line: 5426, column: 9, scope: !10618)
!10620 = !DILocation(line: 5428, column: 9, scope: !10526)
!10621 = !DILocation(line: 5430, column: 13, scope: !10544)
!10622 = !DILocation(line: 5430, column: 13, scope: !10526)
!10623 = !DILocation(line: 5432, column: 21, scope: !10542)
!10624 = !DILocation(line: 5432, column: 21, scope: !10543)
!10625 = !DILocation(line: 5433, column: 25, scope: !10541)
!10626 = !DILocation(line: 5433, column: 40, scope: !10541)
!10627 = !DILocation(line: 5434, column: 31, scope: !10541)
!10628 = !DILocation(line: 5434, column: 29, scope: !10541)
!10629 = !DILocation(line: 5435, column: 36, scope: !10541)
!10630 = !DILocation(line: 5435, column: 41, scope: !10541)
!10631 = !DILocation(line: 5435, column: 52, scope: !10541)
!10632 = !DILocation(line: 5435, column: 62, scope: !10541)
!10633 = !DILocation(line: 5435, column: 25, scope: !10541)
!10634 = !DILocation(line: 5437, column: 50, scope: !10541)
!10635 = !DILocation(line: 5437, column: 55, scope: !10541)
!10636 = !DILocation(line: 5437, column: 25, scope: !10541)
!10637 = !DILocation(line: 5437, column: 30, scope: !10541)
!10638 = !DILocation(line: 5437, column: 41, scope: !10541)
!10639 = !DILocation(line: 5437, column: 48, scope: !10541)
!10640 = !DILocation(line: 5443, column: 45, scope: !10541)
!10641 = !DILocation(line: 5443, column: 50, scope: !10541)
!10642 = !DILocation(line: 5443, column: 59, scope: !10541)
!10643 = !DILocation(line: 5443, column: 29, scope: !10541)
!10644 = !DILocation(line: 5442, column: 25, scope: !10541)
!10645 = !DILocation(line: 5444, column: 17, scope: !10542)
!10646 = !DILocation(line: 5444, column: 17, scope: !10541)
!10647 = !DILocation(line: 5445, column: 9, scope: !10543)
!10648 = !DILocation(line: 5447, column: 13, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10526, file: !2, line: 5447, column: 13)
!10650 = !DILocation(line: 5447, column: 13, scope: !10526)
!10651 = !DILocation(line: 5448, column: 25, scope: !10649)
!10652 = !DILocation(line: 5448, column: 18, scope: !10649)
!10653 = !DILocation(line: 5448, column: 23, scope: !10649)
!10654 = !DILocation(line: 5448, column: 17, scope: !10649)
!10655 = !DILocation(line: 5449, column: 18, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10649, file: !2, line: 5449, column: 18)
!10657 = !DILocation(line: 5449, column: 18, scope: !10649)
!10658 = !DILocation(line: 5450, column: 17, scope: !10656)
!10659 = !DILocation(line: 5450, column: 17, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !2, line: 5450, column: 17)
!10661 = distinct !DILexicalBlock(scope: !10656, file: !2, line: 5450, column: 17)
!10662 = !DILocation(line: 5450, column: 17, scope: !10661)
!10663 = !DILocation(line: 5451, column: 1, scope: !10526)
!10664 = distinct !DISubprogram(name: "rd_kafka_broker_find", scope: !2, file: !2, line: 5122, type: !10665, scopeLine: 5125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10667)
!10665 = !DISubroutineType(types: !10666)
!10666 = !{!412, !586, !979, !365, !449}
!10667 = !{!10668, !10669, !10670, !10671, !10672, !10673}
!10668 = !DILocalVariable(name: "rk", arg: 1, scope: !10664, file: !2, line: 5122, type: !586)
!10669 = !DILocalVariable(name: "proto", arg: 2, scope: !10664, file: !2, line: 5123, type: !979)
!10670 = !DILocalVariable(name: "name", arg: 3, scope: !10664, file: !2, line: 5124, type: !365)
!10671 = !DILocalVariable(name: "port", arg: 4, scope: !10664, file: !2, line: 5125, type: !449)
!10672 = !DILocalVariable(name: "rkb", scope: !10664, file: !2, line: 5126, type: !412)
!10673 = !DILocalVariable(name: "nodename", scope: !10664, file: !2, line: 5127, type: !924)
!10674 = !DILocation(line: 5122, column: 60, scope: !10664)
!10675 = !DILocation(line: 5123, column: 68, scope: !10664)
!10676 = !DILocation(line: 5124, column: 60, scope: !10664)
!10677 = !DILocation(line: 5125, column: 57, scope: !10664)
!10678 = !DILocation(line: 5126, column: 9, scope: !10664)
!10679 = !DILocation(line: 5126, column: 28, scope: !10664)
!10680 = !DILocation(line: 5127, column: 9, scope: !10664)
!10681 = !DILocation(line: 5127, column: 14, scope: !10664)
!10682 = !DILocation(line: 5129, column: 30, scope: !10664)
!10683 = !DILocation(line: 5129, column: 58, scope: !10664)
!10684 = !DILocation(line: 5129, column: 64, scope: !10664)
!10685 = !DILocation(line: 5129, column: 9, scope: !10664)
!10686 = !DILocation(line: 5131, column: 9, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10664, file: !2, line: 5131, column: 9)
!10688 = !DILocation(line: 5131, column: 9, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10687, file: !2, line: 5131, column: 9)
!10690 = !DILocation(line: 5132, column: 21, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !2, line: 5132, column: 21)
!10692 = distinct !DILexicalBlock(scope: !10689, file: !2, line: 5131, column: 55)
!10693 = !DILocation(line: 5132, column: 21, scope: !10692)
!10694 = !DILocation(line: 5133, column: 25, scope: !10691)
!10695 = !DILocation(line: 5135, column: 17, scope: !10692)
!10696 = !DILocation(line: 5136, column: 22, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10692, file: !2, line: 5136, column: 21)
!10698 = !DILocation(line: 5136, column: 47, scope: !10697)
!10699 = !DILocation(line: 5136, column: 50, scope: !10697)
!10700 = !DILocation(line: 5136, column: 55, scope: !10697)
!10701 = !DILocation(line: 5136, column: 68, scope: !10697)
!10702 = !DILocation(line: 5136, column: 65, scope: !10697)
!10703 = !DILocation(line: 5136, column: 74, scope: !10697)
!10704 = !DILocation(line: 5137, column: 29, scope: !10697)
!10705 = !DILocation(line: 5137, column: 34, scope: !10697)
!10706 = !DILocation(line: 5137, column: 48, scope: !10697)
!10707 = !DILocation(line: 5137, column: 22, scope: !10697)
!10708 = !DILocation(line: 5136, column: 21, scope: !10692)
!10709 = !DILocation(line: 5138, column: 25, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10697, file: !2, line: 5137, column: 59)
!10711 = !DILocation(line: 5139, column: 25, scope: !10710)
!10712 = !DILocation(line: 5140, column: 32, scope: !10710)
!10713 = !DILocation(line: 5140, column: 25, scope: !10710)
!10714 = !DILocation(line: 5142, column: 17, scope: !10692)
!10715 = !DILocation(line: 5143, column: 9, scope: !10692)
!10716 = distinct !{!10716, !10686, !10717, !4095}
!10717 = !DILocation(line: 5143, column: 9, scope: !10687)
!10718 = !DILocation(line: 5145, column: 9, scope: !10664)
!10719 = !DILocation(line: 5146, column: 1, scope: !10664)
!10720 = !DISubprogram(name: "rd_kafka_op_err_destroy", scope: !58, file: !58, line: 717, type: !10721, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10721 = !DISubroutineType(types: !10722)
!10722 = !{!550, !914}
!10723 = !DISubprogram(name: "rd_kafka_op_req", scope: !58, file: !58, line: 715, type: !10724, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10724 = !DISubroutineType(types: !10725)
!10725 = !{!914, !503, !914, !126}
!10726 = distinct !DISubprogram(name: "rd_kafka_broker_id", scope: !2, file: !2, line: 5461, type: !10727, scopeLine: 5461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10729)
!10727 = !DISubroutineType(types: !10728)
!10728 = !{!320, !412}
!10729 = !{!10730, !10731}
!10730 = !DILocalVariable(name: "rkb", arg: 1, scope: !10726, file: !2, line: 5461, type: !412)
!10731 = !DILocalVariable(name: "broker_id", scope: !10726, file: !2, line: 5462, type: !320)
!10732 = !DILocation(line: 5461, column: 47, scope: !10726)
!10733 = !DILocation(line: 5462, column: 9, scope: !10726)
!10734 = !DILocation(line: 5462, column: 17, scope: !10726)
!10735 = !DILocation(line: 5464, column: 13, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10726, file: !2, line: 5464, column: 13)
!10737 = !DILocation(line: 5464, column: 13, scope: !10726)
!10738 = !DILocation(line: 5465, column: 17, scope: !10736)
!10739 = !DILocation(line: 5468, column: 29, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10726, file: !2, line: 5468, column: 13)
!10741 = !DILocation(line: 5468, column: 34, scope: !10740)
!10742 = !DILocation(line: 5468, column: 13, scope: !10740)
!10743 = !DILocation(line: 5468, column: 13, scope: !10726)
!10744 = !DILocation(line: 5469, column: 24, scope: !10740)
!10745 = !DILocation(line: 5469, column: 29, scope: !10740)
!10746 = !DILocation(line: 5469, column: 17, scope: !10740)
!10747 = !DILocation(line: 5471, column: 9, scope: !10726)
!10748 = !DILocation(line: 5472, column: 21, scope: !10726)
!10749 = !DILocation(line: 5472, column: 26, scope: !10726)
!10750 = !DILocation(line: 5472, column: 19, scope: !10726)
!10751 = !DILocation(line: 5473, column: 9, scope: !10726)
!10752 = !DILocation(line: 5475, column: 16, scope: !10726)
!10753 = !DILocation(line: 5475, column: 9, scope: !10726)
!10754 = !DILocation(line: 5476, column: 1, scope: !10726)
!10755 = !DILocation(line: 5486, column: 53, scope: !3179)
!10756 = !DILocation(line: 5490, column: 17, scope: !3179)
!10757 = !DILocation(line: 5490, column: 22, scope: !3179)
!10758 = !DILocation(line: 5490, column: 27, scope: !3179)
!10759 = !DILocation(line: 5490, column: 9, scope: !3179)
!10760 = !DILocation(line: 5490, column: 14, scope: !3179)
!10761 = !DILocation(line: 5491, column: 19, scope: !3179)
!10762 = !DILocation(line: 5491, column: 24, scope: !3179)
!10763 = !DILocation(line: 5491, column: 9, scope: !3179)
!10764 = !DILocation(line: 5492, column: 9, scope: !3179)
!10765 = !DILocation(line: 5493, column: 21, scope: !3179)
!10766 = !DILocation(line: 5493, column: 26, scope: !3179)
!10767 = !DILocation(line: 5493, column: 9, scope: !3179)
!10768 = !DILocation(line: 5495, column: 16, scope: !3179)
!10769 = !DILocation(line: 5495, column: 20, scope: !3179)
!10770 = !DILocation(line: 5495, column: 9, scope: !3179)
!10771 = distinct !DISubprogram(name: "rd_kafka_broker_wakeup", scope: !2, file: !2, line: 5506, type: !7335, scopeLine: 5506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10772)
!10772 = !{!10773, !10774, !10775, !10776}
!10773 = !DILocalVariable(name: "rkb", arg: 1, scope: !10771, file: !2, line: 5506, type: !412)
!10774 = !DILocalVariable(name: "reason", arg: 2, scope: !10771, file: !2, line: 5506, type: !365)
!10775 = !DILocalVariable(name: "rko", scope: !10771, file: !2, line: 5507, type: !914)
!10776 = !DILocalVariable(name: "_logname", scope: !10777, file: !2, line: 5510, type: !924)
!10777 = distinct !DILexicalBlock(scope: !10778, file: !2, line: 5510, column: 9)
!10778 = distinct !DILexicalBlock(scope: !10779, file: !2, line: 5510, column: 9)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !2, line: 5510, column: 9)
!10780 = distinct !DILexicalBlock(scope: !10771, file: !2, line: 5510, column: 9)
!10781 = !DILocation(line: 5506, column: 48, scope: !10771)
!10782 = !DILocation(line: 5506, column: 65, scope: !10771)
!10783 = !DILocation(line: 5507, column: 9, scope: !10771)
!10784 = !DILocation(line: 5507, column: 24, scope: !10771)
!10785 = !DILocation(line: 5507, column: 30, scope: !10771)
!10786 = !DILocation(line: 5508, column: 9, scope: !10771)
!10787 = !DILocation(line: 5509, column: 24, scope: !10771)
!10788 = !DILocation(line: 5509, column: 29, scope: !10771)
!10789 = !DILocation(line: 5509, column: 38, scope: !10771)
!10790 = !DILocation(line: 5509, column: 9, scope: !10771)
!10791 = !DILocation(line: 5510, column: 9, scope: !10771)
!10792 = !DILocation(line: 5510, column: 9, scope: !10779)
!10793 = !DILocation(line: 5510, column: 9, scope: !10780)
!10794 = !DILocation(line: 5510, column: 9, scope: !10778)
!10795 = !DILocation(line: 5510, column: 9, scope: !10777)
!10796 = !DILocation(line: 5511, column: 1, scope: !10771)
!10797 = distinct !DISubprogram(name: "rd_kafka_all_brokers_wakeup", scope: !2, file: !2, line: 5521, type: !10798, scopeLine: 5523, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10800)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{!126, !586, !126, !365}
!10800 = !{!10801, !10802, !10803, !10804, !10805, !10806}
!10801 = !DILocalVariable(name: "rk", arg: 1, scope: !10797, file: !2, line: 5521, type: !586)
!10802 = !DILocalVariable(name: "min_state", arg: 2, scope: !10797, file: !2, line: 5522, type: !126)
!10803 = !DILocalVariable(name: "reason", arg: 3, scope: !10797, file: !2, line: 5523, type: !365)
!10804 = !DILocalVariable(name: "cnt", scope: !10797, file: !2, line: 5524, type: !126)
!10805 = !DILocalVariable(name: "rkb", scope: !10797, file: !2, line: 5525, type: !412)
!10806 = !DILocalVariable(name: "do_wakeup", scope: !10807, file: !2, line: 5529, type: !126)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !2, line: 5528, column: 55)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !2, line: 5528, column: 9)
!10809 = distinct !DILexicalBlock(scope: !10797, file: !2, line: 5528, column: 9)
!10810 = !DILocation(line: 5521, column: 45, scope: !10797)
!10811 = !DILocation(line: 5522, column: 37, scope: !10797)
!10812 = !DILocation(line: 5523, column: 45, scope: !10797)
!10813 = !DILocation(line: 5524, column: 9, scope: !10797)
!10814 = !DILocation(line: 5524, column: 13, scope: !10797)
!10815 = !DILocation(line: 5525, column: 9, scope: !10797)
!10816 = !DILocation(line: 5525, column: 28, scope: !10797)
!10817 = !DILocation(line: 5527, column: 9, scope: !10797)
!10818 = !DILocation(line: 5528, column: 9, scope: !10809)
!10819 = !DILocation(line: 5528, column: 9, scope: !10808)
!10820 = !DILocation(line: 5529, column: 17, scope: !10807)
!10821 = !DILocation(line: 5529, column: 21, scope: !10807)
!10822 = !DILocation(line: 5531, column: 17, scope: !10807)
!10823 = !DILocation(line: 5532, column: 34, scope: !10807)
!10824 = !DILocation(line: 5532, column: 39, scope: !10807)
!10825 = !DILocation(line: 5532, column: 52, scope: !10807)
!10826 = !DILocation(line: 5532, column: 49, scope: !10807)
!10827 = !DILocation(line: 5532, column: 27, scope: !10807)
!10828 = !DILocation(line: 5533, column: 17, scope: !10807)
!10829 = !DILocation(line: 5535, column: 21, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10807, file: !2, line: 5535, column: 21)
!10831 = !DILocation(line: 5535, column: 21, scope: !10807)
!10832 = !DILocation(line: 5536, column: 48, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10830, file: !2, line: 5535, column: 32)
!10834 = !DILocation(line: 5536, column: 53, scope: !10833)
!10835 = !DILocation(line: 5536, column: 25, scope: !10833)
!10836 = !DILocation(line: 5537, column: 29, scope: !10833)
!10837 = !DILocation(line: 5538, column: 17, scope: !10833)
!10838 = !DILocation(line: 5539, column: 9, scope: !10808)
!10839 = !DILocation(line: 5539, column: 9, scope: !10807)
!10840 = distinct !{!10840, !10818, !10841, !4095}
!10841 = !DILocation(line: 5539, column: 9, scope: !10809)
!10842 = !DILocation(line: 5540, column: 9, scope: !10797)
!10843 = !DILocation(line: 5542, column: 13, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10797, file: !2, line: 5542, column: 13)
!10845 = !DILocation(line: 5542, column: 17, scope: !10844)
!10846 = !DILocation(line: 5542, column: 13, scope: !10797)
!10847 = !DILocation(line: 5543, column: 17, scope: !10844)
!10848 = !DILocation(line: 5543, column: 17, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !2, line: 5543, column: 17)
!10850 = distinct !DILexicalBlock(scope: !10844, file: !2, line: 5543, column: 17)
!10851 = !DILocation(line: 5543, column: 17, scope: !10850)
!10852 = !DILocation(line: 5549, column: 16, scope: !10797)
!10853 = !DILocation(line: 5550, column: 1, scope: !10797)
!10854 = !DILocation(line: 5549, column: 9, scope: !10797)
!10855 = distinct !DISubprogram(name: "rd_kafka_broker_filter_never_connected", scope: !2, file: !2, line: 5555, type: !5675, scopeLine: 5556, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10856)
!10856 = !{!10857, !10858}
!10857 = !DILocalVariable(name: "rkb", arg: 1, scope: !10855, file: !2, line: 5555, type: !412)
!10858 = !DILocalVariable(name: "opaque", arg: 2, scope: !10855, file: !2, line: 5556, type: !607)
!10859 = !DILocation(line: 5555, column: 70, scope: !10855)
!10860 = !DILocation(line: 5556, column: 57, scope: !10855)
!10861 = !DILocation(line: 5557, column: 33, scope: !10855)
!10862 = !DILocation(line: 5557, column: 38, scope: !10855)
!10863 = !DILocation(line: 5557, column: 44, scope: !10855)
!10864 = !DILocation(line: 5557, column: 16, scope: !10855)
!10865 = !DILocation(line: 5557, column: 9, scope: !10855)
!10866 = distinct !DISubprogram(name: "rd_kafka_broker_purge_queues", scope: !2, file: !2, line: 5640, type: !10867, scopeLine: 5642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10869)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{null, !412, !126, !569}
!10869 = !{!10870, !10871, !10872, !10873}
!10870 = !DILocalVariable(name: "rkb", arg: 1, scope: !10866, file: !2, line: 5640, type: !412)
!10871 = !DILocalVariable(name: "purge_flags", arg: 2, scope: !10866, file: !2, line: 5641, type: !126)
!10872 = !DILocalVariable(name: "replyq", arg: 3, scope: !10866, file: !2, line: 5642, type: !569)
!10873 = !DILocalVariable(name: "rko", scope: !10866, file: !2, line: 5643, type: !914)
!10874 = !DILocation(line: 5640, column: 54, scope: !10866)
!10875 = !DILocation(line: 5641, column: 39, scope: !10866)
!10876 = !DILocation(line: 5642, column: 53, scope: !10866)
!10877 = !DILocation(line: 5643, column: 9, scope: !10866)
!10878 = !DILocation(line: 5643, column: 24, scope: !10866)
!10879 = !DILocation(line: 5643, column: 30, scope: !10866)
!10880 = !DILocation(line: 5644, column: 9, scope: !10866)
!10881 = !DILocation(line: 5645, column: 9, scope: !10866)
!10882 = !DILocation(line: 5645, column: 14, scope: !10866)
!10883 = !DILocation(line: 5645, column: 34, scope: !10866)
!10884 = !DILocation(line: 5646, column: 34, scope: !10866)
!10885 = !DILocation(line: 5646, column: 9, scope: !10866)
!10886 = !DILocation(line: 5646, column: 14, scope: !10866)
!10887 = !DILocation(line: 5646, column: 26, scope: !10866)
!10888 = !DILocation(line: 5646, column: 32, scope: !10866)
!10889 = !DILocation(line: 5647, column: 24, scope: !10866)
!10890 = !DILocation(line: 5647, column: 29, scope: !10866)
!10891 = !DILocation(line: 5647, column: 38, scope: !10866)
!10892 = !DILocation(line: 5647, column: 9, scope: !10866)
!10893 = !DILocation(line: 5648, column: 1, scope: !10866)
!10894 = distinct !DISubprogram(name: "rd_kafka_broker_active_toppar_add", scope: !2, file: !2, line: 5742, type: !10895, scopeLine: 5744, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10897)
!10895 = !DISubroutineType(types: !10896)
!10896 = !{null, !412, !368, !365}
!10897 = !{!10898, !10899, !10900, !10901, !10902}
!10898 = !DILocalVariable(name: "rkb", arg: 1, scope: !10894, file: !2, line: 5742, type: !412)
!10899 = !DILocalVariable(name: "rktp", arg: 2, scope: !10894, file: !2, line: 5743, type: !368)
!10900 = !DILocalVariable(name: "reason", arg: 3, scope: !10894, file: !2, line: 5744, type: !365)
!10901 = !DILocalVariable(name: "is_consumer", scope: !10894, file: !2, line: 5745, type: !126)
!10902 = !DILocalVariable(name: "_logname", scope: !10903, file: !2, line: 5759, type: !924)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !2, line: 5759, column: 9)
!10904 = distinct !DILexicalBlock(scope: !10905, file: !2, line: 5759, column: 9)
!10905 = distinct !DILexicalBlock(scope: !10906, file: !2, line: 5759, column: 9)
!10906 = distinct !DILexicalBlock(scope: !10894, file: !2, line: 5759, column: 9)
!10907 = !DILocation(line: 5742, column: 59, scope: !10894)
!10908 = !DILocation(line: 5743, column: 59, scope: !10894)
!10909 = !DILocation(line: 5744, column: 52, scope: !10894)
!10910 = !DILocation(line: 5745, column: 9, scope: !10894)
!10911 = !DILocation(line: 5745, column: 13, scope: !10894)
!10912 = !DILocation(line: 5745, column: 27, scope: !10894)
!10913 = !DILocation(line: 5745, column: 32, scope: !10894)
!10914 = !DILocation(line: 5745, column: 40, scope: !10894)
!10915 = !{!4141, !3912, i64 2544}
!10916 = !DILocation(line: 5745, column: 48, scope: !10894)
!10917 = !DILocation(line: 5747, column: 13, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10894, file: !2, line: 5747, column: 13)
!10919 = !DILocation(line: 5747, column: 25, scope: !10918)
!10920 = !DILocation(line: 5747, column: 28, scope: !10918)
!10921 = !DILocation(line: 5747, column: 34, scope: !10918)
!10922 = !{!4645, !3941, i64 328}
!10923 = !DILocation(line: 5747, column: 13, scope: !10894)
!10924 = !DILocation(line: 5748, column: 17, scope: !10918)
!10925 = !DILocation(line: 5750, column: 9, scope: !10894)
!10926 = !DILocation(line: 5750, column: 9, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10894, file: !2, line: 5750, column: 9)
!10928 = !{!4645, !3911, i64 32}
!10929 = !{!4645, !3911, i64 40}
!10930 = !DILocation(line: 5750, column: 9, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10927, file: !2, line: 5750, column: 9)
!10932 = !DILocation(line: 5751, column: 9, scope: !10894)
!10933 = !DILocation(line: 5751, column: 14, scope: !10894)
!10934 = !DILocation(line: 5751, column: 35, scope: !10894)
!10935 = !DILocation(line: 5753, column: 13, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10894, file: !2, line: 5753, column: 13)
!10937 = !DILocation(line: 5753, column: 13, scope: !10894)
!10938 = !DILocation(line: 5754, column: 17, scope: !10936)
!10939 = !DILocation(line: 5754, column: 23, scope: !10936)
!10940 = !DILocation(line: 5754, column: 34, scope: !10936)
!10941 = !DILocation(line: 5756, column: 13, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10894, file: !2, line: 5756, column: 13)
!10943 = !DILocation(line: 5756, column: 13, scope: !10894)
!10944 = !DILocation(line: 5757, column: 52, scope: !10942)
!10945 = !DILocation(line: 5757, column: 57, scope: !10942)
!10946 = !DILocation(line: 5757, column: 17, scope: !10942)
!10947 = !DILocation(line: 5759, column: 9, scope: !10894)
!10948 = !DILocation(line: 5759, column: 9, scope: !10905)
!10949 = !DILocation(line: 5759, column: 9, scope: !10906)
!10950 = !DILocation(line: 5759, column: 9, scope: !10904)
!10951 = !DILocation(line: 5759, column: 9, scope: !10903)
!10952 = !{!4645, !3941, i64 424}
!10953 = !DILocation(line: 5767, column: 1, scope: !10894)
!10954 = distinct !DISubprogram(name: "__launder_type", scope: !10955, file: !10955, line: 686, type: !10956, scopeLine: 687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10958)
!10955 = !DIFile(filename: "./queue.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "07b6a86d8c4538fdda843179ebf84f4c")
!10956 = !DISubroutineType(types: !10957)
!10957 = !{!709, !709}
!10958 = !{!10959}
!10959 = !DILocalVariable(name: "__x", arg: 1, scope: !10954, file: !10955, line: 686, type: !709)
!10960 = !DILocation(line: 686, column: 28, scope: !10954)
!10961 = !DILocation(line: 688, column: 2, scope: !10954)
!10962 = !{i64 1024792}
!10963 = !DILocation(line: 689, column: 9, scope: !10954)
!10964 = !DILocation(line: 689, column: 2, scope: !10954)
!10965 = distinct !DISubprogram(name: "rd_kafka_broker_active_toppar_next", scope: !416, file: !416, line: 577, type: !10966, scopeLine: 578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10968)
!10966 = !DISubroutineType(types: !10967)
!10967 = !{null, !412, !368}
!10968 = !{!10969, !10970}
!10969 = !DILocalVariable(name: "rkb", arg: 1, scope: !10965, file: !416, line: 577, type: !412)
!10970 = !DILocalVariable(name: "sugg_next", arg: 2, scope: !10965, file: !416, line: 578, type: !368)
!10971 = !DILocation(line: 577, column: 55, scope: !10965)
!10972 = !DILocation(line: 578, column: 55, scope: !10965)
!10973 = !DILocation(line: 579, column: 13, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10965, file: !416, line: 579, column: 13)
!10975 = !DILocation(line: 579, column: 53, scope: !10974)
!10976 = !DILocation(line: 580, column: 21, scope: !10974)
!10977 = !DILocation(line: 580, column: 34, scope: !10974)
!10978 = !DILocation(line: 580, column: 31, scope: !10974)
!10979 = !DILocation(line: 579, column: 13, scope: !10965)
!10980 = !DILocation(line: 581, column: 17, scope: !10974)
!10981 = !DILocation(line: 581, column: 22, scope: !10974)
!10982 = !DILocation(line: 581, column: 45, scope: !10974)
!10983 = !{!3939, !3911, i64 168}
!10984 = !DILocation(line: 582, column: 18, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10974, file: !416, line: 582, column: 18)
!10986 = !DILocation(line: 582, column: 18, scope: !10974)
!10987 = !DILocation(line: 583, column: 47, scope: !10985)
!10988 = !DILocation(line: 583, column: 17, scope: !10985)
!10989 = !DILocation(line: 583, column: 22, scope: !10985)
!10990 = !DILocation(line: 583, column: 45, scope: !10985)
!10991 = !DILocation(line: 586, column: 21, scope: !10985)
!10992 = !DILocation(line: 585, column: 17, scope: !10985)
!10993 = !DILocation(line: 585, column: 22, scope: !10985)
!10994 = !DILocation(line: 585, column: 45, scope: !10985)
!10995 = !DILocation(line: 587, column: 1, scope: !10965)
!10996 = distinct !DISubprogram(name: "rd_kafka_broker_active_toppar_del", scope: !2, file: !2, line: 5776, type: !10895, scopeLine: 5778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !10997)
!10997 = !{!10998, !10999, !11000, !11001, !11002}
!10998 = !DILocalVariable(name: "rkb", arg: 1, scope: !10996, file: !2, line: 5776, type: !412)
!10999 = !DILocalVariable(name: "rktp", arg: 2, scope: !10996, file: !2, line: 5777, type: !368)
!11000 = !DILocalVariable(name: "reason", arg: 3, scope: !10996, file: !2, line: 5778, type: !365)
!11001 = !DILocalVariable(name: "is_consumer", scope: !10996, file: !2, line: 5779, type: !126)
!11002 = !DILocalVariable(name: "_logname", scope: !11003, file: !2, line: 5798, type: !924)
!11003 = distinct !DILexicalBlock(scope: !11004, file: !2, line: 5798, column: 9)
!11004 = distinct !DILexicalBlock(scope: !11005, file: !2, line: 5798, column: 9)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !2, line: 5798, column: 9)
!11006 = distinct !DILexicalBlock(scope: !10996, file: !2, line: 5798, column: 9)
!11007 = !DILocation(line: 5776, column: 59, scope: !10996)
!11008 = !DILocation(line: 5777, column: 59, scope: !10996)
!11009 = !DILocation(line: 5778, column: 52, scope: !10996)
!11010 = !DILocation(line: 5779, column: 9, scope: !10996)
!11011 = !DILocation(line: 5779, column: 13, scope: !10996)
!11012 = !DILocation(line: 5779, column: 27, scope: !10996)
!11013 = !DILocation(line: 5779, column: 32, scope: !10996)
!11014 = !DILocation(line: 5779, column: 40, scope: !10996)
!11015 = !DILocation(line: 5779, column: 48, scope: !10996)
!11016 = !DILocation(line: 5781, column: 13, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10996, file: !2, line: 5781, column: 13)
!11018 = !DILocation(line: 5781, column: 25, scope: !11017)
!11019 = !DILocation(line: 5781, column: 29, scope: !11017)
!11020 = !DILocation(line: 5781, column: 35, scope: !11017)
!11021 = !DILocation(line: 5781, column: 13, scope: !10996)
!11022 = !DILocation(line: 5782, column: 17, scope: !11017)
!11023 = !DILocation(line: 5784, column: 9, scope: !10996)
!11024 = !DILocation(line: 5784, column: 9, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !2, line: 5784, column: 9)
!11026 = distinct !DILexicalBlock(scope: !10996, file: !2, line: 5784, column: 9)
!11027 = !DILocation(line: 5784, column: 9, scope: !11026)
!11028 = !DILocation(line: 5784, column: 9, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11026, file: !2, line: 5784, column: 9)
!11030 = !DILocation(line: 5785, column: 9, scope: !10996)
!11031 = !DILocation(line: 5785, column: 9, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !2, line: 5785, column: 9)
!11033 = distinct !DILexicalBlock(scope: !10996, file: !2, line: 5785, column: 9)
!11034 = !DILocation(line: 5785, column: 9, scope: !11033)
!11035 = !DILocation(line: 5786, column: 9, scope: !10996)
!11036 = !DILocation(line: 5786, column: 14, scope: !10996)
!11037 = !DILocation(line: 5786, column: 35, scope: !10996)
!11038 = !DILocation(line: 5788, column: 13, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !10996, file: !2, line: 5788, column: 13)
!11040 = !DILocation(line: 5788, column: 13, scope: !10996)
!11041 = !DILocation(line: 5789, column: 17, scope: !11039)
!11042 = !DILocation(line: 5789, column: 23, scope: !11039)
!11043 = !DILocation(line: 5789, column: 34, scope: !11039)
!11044 = !DILocation(line: 5791, column: 13, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !10996, file: !2, line: 5791, column: 13)
!11046 = !DILocation(line: 5791, column: 18, scope: !11045)
!11047 = !DILocation(line: 5791, column: 44, scope: !11045)
!11048 = !DILocation(line: 5791, column: 41, scope: !11045)
!11049 = !DILocation(line: 5791, column: 13, scope: !10996)
!11050 = !DILocation(line: 5794, column: 21, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11045, file: !2, line: 5791, column: 50)
!11052 = !DILocation(line: 5794, column: 26, scope: !11051)
!11053 = !DILocation(line: 5793, column: 17, scope: !11051)
!11054 = !DILocation(line: 5796, column: 9, scope: !11051)
!11055 = !DILocation(line: 5798, column: 9, scope: !10996)
!11056 = !DILocation(line: 5798, column: 9, scope: !11005)
!11057 = !DILocation(line: 5798, column: 9, scope: !11006)
!11058 = !DILocation(line: 5798, column: 9, scope: !11004)
!11059 = !DILocation(line: 5798, column: 9, scope: !11003)
!11060 = !DILocation(line: 5806, column: 1, scope: !10996)
!11061 = distinct !DISubprogram(name: "rd_kafka_broker_persistent_connection_add", scope: !2, file: !2, line: 5833, type: !11062, scopeLine: 5834, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11064)
!11062 = !DISubroutineType(types: !11063)
!11063 = !{null, !412, !4338}
!11064 = !{!11065, !11066}
!11065 = !DILocalVariable(name: "rkb", arg: 1, scope: !11061, file: !2, line: 5833, type: !412)
!11066 = !DILocalVariable(name: "acntp", arg: 2, scope: !11061, file: !2, line: 5834, type: !4338)
!11067 = !DILocation(line: 5833, column: 67, scope: !11061)
!11068 = !DILocation(line: 5834, column: 63, scope: !11061)
!11069 = !DILocation(line: 5836, column: 29, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11061, file: !2, line: 5836, column: 13)
!11071 = !DILocation(line: 5836, column: 13, scope: !11070)
!11072 = !DILocation(line: 5836, column: 39, scope: !11070)
!11073 = !DILocation(line: 5836, column: 13, scope: !11061)
!11074 = !DILocation(line: 5838, column: 53, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11070, file: !2, line: 5836, column: 45)
!11076 = !DILocation(line: 5838, column: 17, scope: !11075)
!11077 = !DILocation(line: 5839, column: 9, scope: !11075)
!11078 = !DILocation(line: 5840, column: 1, scope: !11061)
!11079 = distinct !DISubprogram(name: "rd_kafka_broker_persistent_connection_del", scope: !2, file: !2, line: 5850, type: !11062, scopeLine: 5851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11080)
!11080 = !{!11081, !11082, !11083}
!11081 = !DILocalVariable(name: "rkb", arg: 1, scope: !11079, file: !2, line: 5850, type: !412)
!11082 = !DILocalVariable(name: "acntp", arg: 2, scope: !11079, file: !2, line: 5851, type: !4338)
!11083 = !DILocalVariable(name: "r", scope: !11079, file: !2, line: 5852, type: !320)
!11084 = !DILocation(line: 5850, column: 67, scope: !11079)
!11085 = !DILocation(line: 5851, column: 63, scope: !11079)
!11086 = !DILocation(line: 5852, column: 9, scope: !11079)
!11087 = !DILocation(line: 5852, column: 17, scope: !11079)
!11088 = !DILocation(line: 5852, column: 37, scope: !11079)
!11089 = !DILocation(line: 5852, column: 21, scope: !11079)
!11090 = !DILocation(line: 5853, column: 9, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11092, file: !2, line: 5853, column: 9)
!11092 = distinct !DILexicalBlock(scope: !11079, file: !2, line: 5853, column: 9)
!11093 = !DILocation(line: 5853, column: 9, scope: !11092)
!11094 = !DILocation(line: 5854, column: 1, scope: !11079)
!11095 = distinct !DISubprogram(name: "rd_kafka_q_keep", scope: !506, file: !506, line: 151, type: !11096, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11098)
!11096 = !DISubroutineType(types: !11097)
!11097 = !{!503, !503}
!11098 = !{!11099}
!11099 = !DILocalVariable(name: "rkq", arg: 1, scope: !11095, file: !506, line: 151, type: !503)
!11100 = !DILocation(line: 151, column: 72, scope: !11095)
!11101 = !DILocation(line: 152, column: 19, scope: !11095)
!11102 = !DILocation(line: 152, column: 24, scope: !11095)
!11103 = !DILocation(line: 152, column: 9, scope: !11095)
!11104 = !DILocation(line: 153, column: 9, scope: !11095)
!11105 = !DILocation(line: 153, column: 14, scope: !11095)
!11106 = !DILocation(line: 153, column: 24, scope: !11095)
!11107 = !{!11108, !3941, i64 128}
!11108 = !{!"rd_kafka_q_s", !3912, i64 0, !3912, i64 40, !3911, i64 88, !11109, i64 96, !3941, i64 112, !3942, i64 120, !3941, i64 128, !3941, i64 132, !3911, i64 136, !3911, i64 144, !3911, i64 152, !3911, i64 160, !3911, i64 168}
!11109 = !{!"rd_kafka_op_tailq", !3911, i64 0, !3911, i64 8}
!11110 = !DILocation(line: 154, column: 21, scope: !11095)
!11111 = !DILocation(line: 154, column: 26, scope: !11095)
!11112 = !DILocation(line: 154, column: 9, scope: !11095)
!11113 = !DILocation(line: 155, column: 16, scope: !11095)
!11114 = !DILocation(line: 155, column: 9, scope: !11095)
!11115 = distinct !DISubprogram(name: "rd_kafka_broker_monitor_del", scope: !2, file: !2, line: 5942, type: !11116, scopeLine: 5942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11118)
!11116 = !DISubroutineType(types: !11117)
!11117 = !{null, !4394}
!11118 = !{!11119, !11120}
!11119 = !DILocalVariable(name: "rkbmon", arg: 1, scope: !11115, file: !2, line: 5942, type: !4394)
!11120 = !DILocalVariable(name: "rkb", scope: !11115, file: !2, line: 5943, type: !412)
!11121 = !DILocation(line: 5942, column: 61, scope: !11115)
!11122 = !DILocation(line: 5943, column: 9, scope: !11115)
!11123 = !DILocation(line: 5943, column: 28, scope: !11115)
!11124 = !DILocation(line: 5943, column: 34, scope: !11115)
!11125 = !DILocation(line: 5943, column: 42, scope: !11115)
!11126 = !DILocation(line: 5945, column: 14, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11115, file: !2, line: 5945, column: 13)
!11128 = !DILocation(line: 5945, column: 13, scope: !11115)
!11129 = !DILocation(line: 5946, column: 17, scope: !11127)
!11130 = !DILocation(line: 5948, column: 9, scope: !11115)
!11131 = !DILocation(line: 5949, column: 9, scope: !11115)
!11132 = !DILocation(line: 5949, column: 17, scope: !11115)
!11133 = !DILocation(line: 5949, column: 28, scope: !11115)
!11134 = !DILocation(line: 5950, column: 9, scope: !11115)
!11135 = !DILocation(line: 5951, column: 9, scope: !11115)
!11136 = !DILocation(line: 5951, column: 9, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11138, file: !2, line: 5951, column: 9)
!11138 = distinct !DILexicalBlock(scope: !11115, file: !2, line: 5951, column: 9)
!11139 = !DILocation(line: 5951, column: 9, scope: !11138)
!11140 = !DILocation(line: 5952, column: 9, scope: !11115)
!11141 = !DILocation(line: 5954, column: 9, scope: !11115)
!11142 = !DILocation(line: 5954, column: 9, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !2, line: 5954, column: 9)
!11144 = distinct !DILexicalBlock(scope: !11115, file: !2, line: 5954, column: 9)
!11145 = !DILocation(line: 5954, column: 9, scope: !11144)
!11146 = !DILocation(line: 5955, column: 1, scope: !11115)
!11147 = distinct !DISubprogram(name: "rd_kafka_q_destroy0", scope: !506, file: !506, line: 213, type: !11148, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11150)
!11148 = !DISubroutineType(types: !11149)
!11149 = !{null, !503, !126}
!11150 = !{!11151, !11152, !11153}
!11151 = !DILocalVariable(name: "rkq", arg: 1, scope: !11147, file: !506, line: 213, type: !503)
!11152 = !DILocalVariable(name: "disable", arg: 2, scope: !11147, file: !506, line: 214, type: !126)
!11153 = !DILocalVariable(name: "do_delete", scope: !11147, file: !506, line: 215, type: !126)
!11154 = !DILocation(line: 213, column: 67, scope: !11147)
!11155 = !DILocation(line: 214, column: 57, scope: !11147)
!11156 = !DILocation(line: 215, column: 9, scope: !11147)
!11157 = !DILocation(line: 215, column: 13, scope: !11147)
!11158 = !DILocation(line: 217, column: 13, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11147, file: !506, line: 217, column: 13)
!11160 = !DILocation(line: 217, column: 13, scope: !11147)
!11161 = !DILocation(line: 222, column: 37, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11159, file: !506, line: 217, column: 22)
!11163 = !DILocation(line: 222, column: 17, scope: !11162)
!11164 = !DILocation(line: 223, column: 35, scope: !11162)
!11165 = !DILocation(line: 223, column: 17, scope: !11162)
!11166 = !DILocation(line: 224, column: 9, scope: !11162)
!11167 = !DILocation(line: 226, column: 19, scope: !11147)
!11168 = !DILocation(line: 226, column: 24, scope: !11147)
!11169 = !DILocation(line: 226, column: 9, scope: !11147)
!11170 = !DILocation(line: 227, column: 9, scope: !11147)
!11171 = !DILocation(line: 227, column: 9, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !506, line: 227, column: 9)
!11173 = distinct !DILexicalBlock(scope: !11147, file: !506, line: 227, column: 9)
!11174 = !DILocation(line: 227, column: 9, scope: !11173)
!11175 = !DILocation(line: 228, column: 24, scope: !11147)
!11176 = !DILocation(line: 228, column: 29, scope: !11147)
!11177 = !DILocation(line: 228, column: 22, scope: !11147)
!11178 = !DILocation(line: 228, column: 21, scope: !11147)
!11179 = !DILocation(line: 228, column: 19, scope: !11147)
!11180 = !DILocation(line: 229, column: 21, scope: !11147)
!11181 = !DILocation(line: 229, column: 26, scope: !11147)
!11182 = !DILocation(line: 229, column: 9, scope: !11147)
!11183 = !DILocation(line: 231, column: 13, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11147, file: !506, line: 231, column: 13)
!11185 = !DILocation(line: 231, column: 13, scope: !11147)
!11186 = !DILocation(line: 232, column: 42, scope: !11184)
!11187 = !DILocation(line: 232, column: 17, scope: !11184)
!11188 = !DILocation(line: 233, column: 1, scope: !11147)
!11189 = distinct !DISubprogram(name: "rd_kafka_broker_start_reauth_timer", scope: !2, file: !2, line: 5964, type: !11190, scopeLine: 5965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11192)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{null, !412, !489}
!11192 = !{!11193, !11194}
!11193 = !DILocalVariable(name: "rkb", arg: 1, scope: !11189, file: !2, line: 5964, type: !412)
!11194 = !DILocalVariable(name: "connections_max_reauth_ms", arg: 2, scope: !11189, file: !2, line: 5965, type: !489)
!11195 = !DILocation(line: 5964, column: 60, scope: !11189)
!11196 = !DILocation(line: 5965, column: 49, scope: !11189)
!11197 = !DILocation(line: 5969, column: 40, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11189, file: !2, line: 5969, column: 13)
!11199 = !DILocation(line: 5969, column: 45, scope: !11198)
!11200 = !DILocation(line: 5969, column: 53, scope: !11198)
!11201 = !DILocation(line: 5970, column: 40, scope: !11198)
!11202 = !DILocation(line: 5970, column: 45, scope: !11198)
!11203 = !DILocation(line: 5969, column: 13, scope: !11198)
!11204 = !DILocation(line: 5969, column: 13, scope: !11189)
!11205 = !DILocation(line: 5971, column: 38, scope: !11198)
!11206 = !DILocation(line: 5971, column: 43, scope: !11198)
!11207 = !DILocation(line: 5971, column: 51, scope: !11198)
!11208 = !DILocation(line: 5972, column: 38, scope: !11198)
!11209 = !DILocation(line: 5972, column: 43, scope: !11198)
!11210 = !DILocation(line: 5971, column: 17, scope: !11198)
!11211 = !DILocation(line: 5974, column: 13, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11189, file: !2, line: 5974, column: 13)
!11213 = !DILocation(line: 5974, column: 39, scope: !11212)
!11214 = !DILocation(line: 5974, column: 13, scope: !11189)
!11215 = !DILocation(line: 5975, column: 17, scope: !11212)
!11216 = !DILocation(line: 5977, column: 9, scope: !11189)
!11217 = !DILocation(line: 5981, column: 1, scope: !11189)
!11218 = !DISubprogram(name: "rd_kafka_timer_is_started", scope: !878, file: !878, line: 102, type: !11219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11219 = !DISubroutineType(types: !11220)
!11220 = !{!561, !895, !11221}
!11221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11222, size: 64)
!11222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !877)
!11223 = !DISubprogram(name: "rd_kafka_timer_start0", scope: !878, file: !878, line: 72, type: !11224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{null, !895, !5019, !487, !561, !561, !892, !607}
!11226 = distinct !DISubprogram(name: "rd_kafka_broker_start_reauth_cb", scope: !2, file: !2, line: 5989, type: !893, scopeLine: 5989, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11227)
!11227 = !{!11228, !11229, !11230, !11231}
!11228 = !DILocalVariable(name: "rkts", arg: 1, scope: !11226, file: !2, line: 5989, type: !895)
!11229 = !DILocalVariable(name: "_rkb", arg: 2, scope: !11226, file: !2, line: 5989, type: !607)
!11230 = !DILocalVariable(name: "rko", scope: !11226, file: !2, line: 5990, type: !914)
!11231 = !DILocalVariable(name: "rkb", scope: !11226, file: !2, line: 5991, type: !412)
!11232 = !DILocation(line: 5989, column: 57, scope: !11226)
!11233 = !DILocation(line: 5989, column: 69, scope: !11226)
!11234 = !DILocation(line: 5990, column: 9, scope: !11226)
!11235 = !DILocation(line: 5990, column: 24, scope: !11226)
!11236 = !DILocation(line: 5991, column: 9, scope: !11226)
!11237 = !DILocation(line: 5991, column: 28, scope: !11226)
!11238 = !DILocation(line: 5991, column: 55, scope: !11226)
!11239 = !DILocation(line: 5992, column: 9, scope: !11226)
!11240 = !DILocation(line: 5992, column: 9, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11226, file: !2, line: 5992, column: 9)
!11242 = !DILocation(line: 5993, column: 15, scope: !11226)
!11243 = !DILocation(line: 5993, column: 13, scope: !11226)
!11244 = !DILocation(line: 5994, column: 24, scope: !11226)
!11245 = !DILocation(line: 5994, column: 29, scope: !11226)
!11246 = !DILocation(line: 5994, column: 38, scope: !11226)
!11247 = !DILocation(line: 5994, column: 9, scope: !11226)
!11248 = !DILocation(line: 5995, column: 1, scope: !11226)
!11249 = distinct !DISubprogram(name: "unittest_broker", scope: !2, file: !2, line: 6002, type: !854, scopeLine: 6002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11250)
!11250 = !{!11251}
!11251 = !DILocalVariable(name: "fails", scope: !11249, file: !2, line: 6003, type: !126)
!11252 = !DILocation(line: 6003, column: 9, scope: !11249)
!11253 = !DILocation(line: 6003, column: 13, scope: !11249)
!11254 = !DILocation(line: 6005, column: 18, scope: !11249)
!11255 = !DILocation(line: 6005, column: 15, scope: !11249)
!11256 = !DILocation(line: 6007, column: 16, scope: !11249)
!11257 = !DILocation(line: 6008, column: 1, scope: !11249)
!11258 = !DILocation(line: 6007, column: 9, scope: !11249)
!11259 = distinct !DISubprogram(name: "rd_ut_reconnect_backoff", scope: !2, file: !2, line: 2136, type: !854, scopeLine: 2136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11260)
!11260 = !{!11261, !11262, !11263, !11264}
!11261 = !DILocalVariable(name: "rkb", scope: !11259, file: !2, line: 2137, type: !413)
!11262 = !DILocalVariable(name: "conf", scope: !11259, file: !2, line: 2138, type: !929)
!11263 = !DILocalVariable(name: "now", scope: !11259, file: !2, line: 2140, type: !487)
!11264 = !DILocalVariable(name: "backoff", scope: !11259, file: !2, line: 2141, type: !126)
!11265 = !DILocation(line: 2137, column: 9, scope: !11259)
!11266 = !DILocation(line: 2137, column: 27, scope: !11259)
!11267 = !DILocation(line: 2138, column: 9, scope: !11259)
!11268 = !DILocation(line: 2138, column: 25, scope: !11259)
!11269 = !DILocation(line: 2140, column: 9, scope: !11259)
!11270 = !DILocation(line: 2140, column: 17, scope: !11259)
!11271 = !DILocation(line: 2141, column: 9, scope: !11259)
!11272 = !DILocation(line: 2141, column: 13, scope: !11259)
!11273 = !DILocation(line: 2143, column: 45, scope: !11259)
!11274 = !{!4143, !3941, i64 376}
!11275 = !DILocation(line: 2143, column: 13, scope: !11259)
!11276 = !DILocation(line: 2143, column: 38, scope: !11259)
!11277 = !DILocation(line: 2146, column: 63, scope: !11259)
!11278 = !DILocation(line: 2146, column: 9, scope: !11259)
!11279 = !DILocation(line: 2147, column: 59, scope: !11259)
!11280 = !DILocation(line: 2147, column: 19, scope: !11259)
!11281 = !DILocation(line: 2147, column: 17, scope: !11259)
!11282 = !DILocation(line: 2148, column: 9, scope: !11259)
!11283 = !DILocation(line: 2148, column: 9, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !2, line: 2148, column: 9)
!11285 = distinct !DILexicalBlock(scope: !11259, file: !2, line: 2148, column: 9)
!11286 = !DILocation(line: 2148, column: 9, scope: !11285)
!11287 = !DILocation(line: 2148, column: 9, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11284, file: !2, line: 2148, column: 9)
!11289 = !DILocation(line: 2148, column: 9, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11288, file: !2, line: 2148, column: 9)
!11291 = !DILocation(line: 2148, column: 9, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !2, line: 2148, column: 9)
!11293 = distinct !DILexicalBlock(scope: !11290, file: !2, line: 2148, column: 9)
!11294 = !DILocation(line: 2148, column: 9, scope: !11293)
!11295 = !DILocation(line: 2151, column: 63, scope: !11259)
!11296 = !DILocation(line: 2151, column: 9, scope: !11259)
!11297 = !DILocation(line: 2152, column: 59, scope: !11259)
!11298 = !DILocation(line: 2152, column: 19, scope: !11259)
!11299 = !DILocation(line: 2152, column: 17, scope: !11259)
!11300 = !DILocation(line: 2153, column: 9, scope: !11259)
!11301 = !DILocation(line: 2153, column: 9, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !2, line: 2153, column: 9)
!11303 = distinct !DILexicalBlock(scope: !11259, file: !2, line: 2153, column: 9)
!11304 = !DILocation(line: 2153, column: 9, scope: !11303)
!11305 = !DILocation(line: 2153, column: 9, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11302, file: !2, line: 2153, column: 9)
!11307 = !DILocation(line: 2153, column: 9, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11306, file: !2, line: 2153, column: 9)
!11309 = !DILocation(line: 2153, column: 9, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !2, line: 2153, column: 9)
!11311 = distinct !DILexicalBlock(scope: !11308, file: !2, line: 2153, column: 9)
!11312 = !DILocation(line: 2153, column: 9, scope: !11311)
!11313 = !DILocation(line: 2156, column: 63, scope: !11259)
!11314 = !DILocation(line: 2156, column: 9, scope: !11259)
!11315 = !DILocation(line: 2157, column: 59, scope: !11259)
!11316 = !DILocation(line: 2157, column: 19, scope: !11259)
!11317 = !DILocation(line: 2157, column: 17, scope: !11259)
!11318 = !DILocation(line: 2158, column: 9, scope: !11259)
!11319 = !DILocation(line: 2158, column: 9, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !2, line: 2158, column: 9)
!11321 = distinct !DILexicalBlock(scope: !11259, file: !2, line: 2158, column: 9)
!11322 = !DILocation(line: 2158, column: 9, scope: !11321)
!11323 = !DILocation(line: 2158, column: 9, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11320, file: !2, line: 2158, column: 9)
!11325 = !DILocation(line: 2158, column: 9, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11324, file: !2, line: 2158, column: 9)
!11327 = !DILocation(line: 2158, column: 9, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !2, line: 2158, column: 9)
!11329 = distinct !DILexicalBlock(scope: !11326, file: !2, line: 2158, column: 9)
!11330 = !DILocation(line: 2158, column: 9, scope: !11329)
!11331 = !DILocation(line: 2161, column: 63, scope: !11259)
!11332 = !DILocation(line: 2161, column: 9, scope: !11259)
!11333 = !DILocation(line: 2162, column: 59, scope: !11259)
!11334 = !DILocation(line: 2162, column: 19, scope: !11259)
!11335 = !DILocation(line: 2162, column: 17, scope: !11259)
!11336 = !DILocation(line: 2163, column: 9, scope: !11259)
!11337 = !DILocation(line: 2163, column: 9, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !2, line: 2163, column: 9)
!11339 = distinct !DILexicalBlock(scope: !11259, file: !2, line: 2163, column: 9)
!11340 = !{!4143, !3941, i64 380}
!11341 = !DILocation(line: 2163, column: 9, scope: !11339)
!11342 = !DILocation(line: 2163, column: 9, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11338, file: !2, line: 2163, column: 9)
!11344 = !DILocation(line: 2163, column: 9, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11343, file: !2, line: 2163, column: 9)
!11346 = !DILocation(line: 2163, column: 9, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !2, line: 2163, column: 9)
!11348 = distinct !DILexicalBlock(scope: !11345, file: !2, line: 2163, column: 9)
!11349 = !DILocation(line: 2163, column: 9, scope: !11348)
!11350 = !DILocation(line: 2166, column: 63, scope: !11259)
!11351 = !DILocation(line: 2166, column: 9, scope: !11259)
!11352 = !DILocation(line: 2167, column: 59, scope: !11259)
!11353 = !DILocation(line: 2167, column: 19, scope: !11259)
!11354 = !DILocation(line: 2167, column: 17, scope: !11259)
!11355 = !DILocation(line: 2168, column: 9, scope: !11259)
!11356 = !DILocation(line: 2168, column: 9, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !2, line: 2168, column: 9)
!11358 = distinct !DILexicalBlock(scope: !11259, file: !2, line: 2168, column: 9)
!11359 = !DILocation(line: 2168, column: 9, scope: !11358)
!11360 = !DILocation(line: 2168, column: 9, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11357, file: !2, line: 2168, column: 9)
!11362 = !DILocation(line: 2168, column: 9, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11361, file: !2, line: 2168, column: 9)
!11364 = !DILocation(line: 2168, column: 9, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !2, line: 2168, column: 9)
!11366 = distinct !DILexicalBlock(scope: !11363, file: !2, line: 2168, column: 9)
!11367 = !DILocation(line: 2168, column: 9, scope: !11366)
!11368 = !DILocation(line: 2171, column: 63, scope: !11259)
!11369 = !DILocation(line: 2171, column: 9, scope: !11259)
!11370 = !DILocation(line: 2172, column: 59, scope: !11259)
!11371 = !DILocation(line: 2172, column: 19, scope: !11259)
!11372 = !DILocation(line: 2172, column: 17, scope: !11259)
!11373 = !DILocation(line: 2173, column: 9, scope: !11259)
!11374 = !DILocation(line: 2173, column: 9, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11376, file: !2, line: 2173, column: 9)
!11376 = distinct !DILexicalBlock(scope: !11259, file: !2, line: 2173, column: 9)
!11377 = !DILocation(line: 2173, column: 9, scope: !11376)
!11378 = !DILocation(line: 2173, column: 9, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11375, file: !2, line: 2173, column: 9)
!11380 = !DILocation(line: 2173, column: 9, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11379, file: !2, line: 2173, column: 9)
!11382 = !DILocation(line: 2173, column: 9, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !2, line: 2173, column: 9)
!11384 = distinct !DILexicalBlock(scope: !11381, file: !2, line: 2173, column: 9)
!11385 = !DILocation(line: 2173, column: 9, scope: !11384)
!11386 = !DILocation(line: 2175, column: 9, scope: !11259)
!11387 = !DILocation(line: 2175, column: 9, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11259, file: !2, line: 2175, column: 9)
!11389 = !DILocation(line: 2176, column: 1, scope: !11259)
!11390 = !DISubprogram(name: "clock_gettime", scope: !11391, file: !11391, line: 279, type: !11392, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11391 = !DIFile(filename: "/usr/include/time.h", directory: "", checksumkind: CSK_MD5, checksum: "db37158473a25e1d89b19f8bc6892801")
!11392 = !DISubroutineType(types: !11393)
!11393 = !{!126, !11394, !11397}
!11394 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !11395, line: 7, baseType: !11396)
!11395 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h", directory: "", checksumkind: CSK_MD5, checksum: "099a80153c2ad48bc7f5f4a188cb6d24")
!11396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clockid_t", file: !323, line: 169, baseType: !126)
!11397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4371, size: 64)
!11398 = !DISubprogram(name: "vsnprintf", scope: !6931, file: !6931, line: 382, type: !11399, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11399 = !DISubroutineType(types: !11400)
!11400 = !{!126, !6934, !692, !6935, !4726}
!11401 = !DISubprogram(name: "rd_kafka_err2name", scope: !125, file: !125, line: 675, type: !8084, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11402 = !DISubprogram(name: "rd_kafka_features2str", scope: !11403, file: !11403, line: 100, type: !3516, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11403 = !DIFile(filename: "./rdkafka_feature.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "ffdcb965990cff1ce039f80d62d9c894")
!11404 = distinct !DISubprogram(name: "rd_kafka_buf_write_i8", scope: !414, file: !414, line: 1027, type: !11405, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11409)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{!692, !1692, !11407}
!11407 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !321, line: 24, baseType: !11408)
!11408 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !323, line: 37, baseType: !344)
!11409 = !{!11410, !11411}
!11410 = !DILocalVariable(name: "rkbuf", arg: 1, scope: !11404, file: !414, line: 1027, type: !1692)
!11411 = !DILocalVariable(name: "v", arg: 2, scope: !11404, file: !414, line: 1027, type: !11407)
!11412 = !DILocation(line: 1027, column: 63, scope: !11404)
!11413 = !DILocation(line: 1027, column: 77, scope: !11404)
!11414 = !DILocation(line: 1028, column: 35, scope: !11404)
!11415 = !DILocation(line: 1028, column: 16, scope: !11404)
!11416 = !DILocation(line: 1028, column: 9, scope: !11404)
!11417 = distinct !DISubprogram(name: "rd_buf_len", scope: !1709, file: !1709, line: 182, type: !6872, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11418)
!11418 = !{!11419}
!11419 = !DILocalVariable(name: "rbuf", arg: 1, scope: !11417, file: !1709, line: 182, type: !1747)
!11420 = !DILocation(line: 182, column: 62, scope: !11417)
!11421 = !DILocation(line: 183, column: 16, scope: !11417)
!11422 = !DILocation(line: 183, column: 22, scope: !11417)
!11423 = !{!5211, !3942, i64 32}
!11424 = !DILocation(line: 183, column: 9, scope: !11417)
!11425 = !DISubprogram(name: "rd_slice_init_full", scope: !1709, file: !1709, line: 303, type: !11426, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{null, !6901, !1747}
!11428 = distinct !DISubprogram(name: "rd_kafka_buf_update_i16", scope: !414, file: !414, line: 1055, type: !11429, scopeLine: 1055, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11431)
!11429 = !DISubroutineType(types: !11430)
!11430 = !{null, !1692, !692, !862}
!11431 = !{!11432, !11433, !11434}
!11432 = !DILocalVariable(name: "rkbuf", arg: 1, scope: !11428, file: !414, line: 1055, type: !1692)
!11433 = !DILocalVariable(name: "of", arg: 2, scope: !11428, file: !414, line: 1055, type: !692)
!11434 = !DILocalVariable(name: "v", arg: 3, scope: !11428, file: !414, line: 1055, type: !862)
!11435 = !DILocation(line: 1055, column: 41, scope: !11428)
!11436 = !DILocation(line: 1055, column: 55, scope: !11428)
!11437 = !DILocation(line: 1055, column: 67, scope: !11428)
!11438 = !DILocation(line: 1056, column: 13, scope: !11428)
!11439 = !DILocation(line: 1056, column: 11, scope: !11428)
!11440 = !DILocation(line: 1057, column: 29, scope: !11428)
!11441 = !DILocation(line: 1057, column: 36, scope: !11428)
!11442 = !DILocation(line: 1057, column: 9, scope: !11428)
!11443 = !DILocation(line: 1058, column: 1, scope: !11428)
!11444 = distinct !DISubprogram(name: "rd_kafka_buf_write", scope: !414, file: !414, line: 993, type: !11445, scopeLine: 995, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11447)
!11445 = !DISubroutineType(types: !11446)
!11446 = !{!692, !1692, !709, !692}
!11447 = !{!11448, !11449, !11450, !11451}
!11448 = !DILocalVariable(name: "rkbuf", arg: 1, scope: !11444, file: !414, line: 993, type: !1692)
!11449 = !DILocalVariable(name: "data", arg: 2, scope: !11444, file: !414, line: 994, type: !709)
!11450 = !DILocalVariable(name: "len", arg: 3, scope: !11444, file: !414, line: 995, type: !692)
!11451 = !DILocalVariable(name: "r", scope: !11444, file: !414, line: 996, type: !692)
!11452 = !DILocation(line: 993, column: 60, scope: !11444)
!11453 = !DILocation(line: 994, column: 56, scope: !11444)
!11454 = !DILocation(line: 995, column: 51, scope: !11444)
!11455 = !DILocation(line: 996, column: 9, scope: !11444)
!11456 = !DILocation(line: 996, column: 16, scope: !11444)
!11457 = !DILocation(line: 998, column: 27, scope: !11444)
!11458 = !DILocation(line: 998, column: 34, scope: !11444)
!11459 = !DILocation(line: 998, column: 45, scope: !11444)
!11460 = !DILocation(line: 998, column: 51, scope: !11444)
!11461 = !DILocation(line: 998, column: 13, scope: !11444)
!11462 = !DILocation(line: 998, column: 11, scope: !11444)
!11463 = !DILocation(line: 1000, column: 13, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11444, file: !414, line: 1000, column: 13)
!11465 = !DILocation(line: 1000, column: 20, scope: !11464)
!11466 = !DILocation(line: 1000, column: 32, scope: !11464)
!11467 = !DILocation(line: 1000, column: 13, scope: !11444)
!11468 = !DILocation(line: 1001, column: 52, scope: !11464)
!11469 = !DILocation(line: 1001, column: 59, scope: !11464)
!11470 = !{!5210, !3941, i64 176}
!11471 = !DILocation(line: 1001, column: 70, scope: !11464)
!11472 = !DILocation(line: 1001, column: 76, scope: !11464)
!11473 = !DILocation(line: 1001, column: 36, scope: !11464)
!11474 = !DILocation(line: 1001, column: 17, scope: !11464)
!11475 = !DILocation(line: 1001, column: 24, scope: !11464)
!11476 = !DILocation(line: 1001, column: 34, scope: !11464)
!11477 = !DILocation(line: 1003, column: 16, scope: !11444)
!11478 = !DILocation(line: 1004, column: 1, scope: !11444)
!11479 = !DILocation(line: 1003, column: 9, scope: !11444)
!11480 = !DISubprogram(name: "rd_buf_write", scope: !1709, file: !1709, line: 190, type: !11481, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11481 = !DISubroutineType(types: !11482)
!11482 = !{!692, !6859, !709, !692}
!11483 = distinct !DISubprogram(name: "rd_crc32_update", scope: !1759, file: !1759, line: 123, type: !11484, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11486)
!11484 = !DISubroutineType(types: !11485)
!11485 = !{!1758, !1758, !1090, !692}
!11486 = !{!11487, !11488, !11489}
!11487 = !DILocalVariable(name: "crc", arg: 1, scope: !11483, file: !1759, line: 123, type: !1758)
!11488 = !DILocalVariable(name: "data", arg: 2, scope: !11483, file: !1759, line: 124, type: !1090)
!11489 = !DILocalVariable(name: "data_len", arg: 3, scope: !11483, file: !1759, line: 125, type: !692)
!11490 = !DILocation(line: 123, column: 66, scope: !11483)
!11491 = !DILocation(line: 124, column: 76, scope: !11483)
!11492 = !DILocation(line: 125, column: 62, scope: !11483)
!11493 = !DILocation(line: 127, column: 9, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11495, file: !1759, line: 127, column: 9)
!11495 = distinct !DILexicalBlock(scope: !11483, file: !1759, line: 127, column: 9)
!11496 = !DILocation(line: 127, column: 9, scope: !11495)
!11497 = !DILocation(line: 128, column: 22, scope: !11483)
!11498 = !DILocation(line: 128, column: 27, scope: !11483)
!11499 = !DILocation(line: 128, column: 39, scope: !11483)
!11500 = !DILocation(line: 128, column: 33, scope: !11483)
!11501 = !DILocation(line: 128, column: 16, scope: !11483)
!11502 = !DILocation(line: 128, column: 9, scope: !11483)
!11503 = !DISubprogram(name: "crc32", scope: !11504, file: !11504, line: 1726, type: !11505, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11504 = !DIFile(filename: "/usr/include/zlib.h", directory: "", checksumkind: CSK_MD5, checksum: "69c0882c2071430ea4822b4f6c1edd30")
!11505 = !DISubroutineType(types: !11506)
!11506 = !{!11507, !11507, !11508, !2862}
!11507 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !2863, line: 394, baseType: !349)
!11508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11509, size: 64)
!11509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11510)
!11510 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !2863, line: 400, baseType: !11511)
!11511 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !2863, line: 391, baseType: !347)
!11512 = distinct !DISubprogram(name: "__bswap_16", scope: !6981, file: !6981, line: 34, type: !11513, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11515)
!11513 = !DISubroutineType(types: !11514)
!11514 = !{!451, !451}
!11515 = !{!11516}
!11516 = !DILocalVariable(name: "__bsx", arg: 1, scope: !11512, file: !6981, line: 34, type: !451)
!11517 = !DILocation(line: 34, column: 24, scope: !11512)
!11518 = !DILocation(line: 39, column: 10, scope: !11512)
!11519 = !DILocation(line: 39, column: 3, scope: !11512)
!11520 = distinct !DISubprogram(name: "rd_kafka_buf_update", scope: !414, file: !414, line: 1016, type: !11521, scopeLine: 1019, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11523)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{null, !1692, !692, !709, !692}
!11523 = !{!11524, !11525, !11526, !11527}
!11524 = !DILocalVariable(name: "rkbuf", arg: 1, scope: !11520, file: !414, line: 1016, type: !1692)
!11525 = !DILocalVariable(name: "of", arg: 2, scope: !11520, file: !414, line: 1017, type: !692)
!11526 = !DILocalVariable(name: "data", arg: 3, scope: !11520, file: !414, line: 1018, type: !709)
!11527 = !DILocalVariable(name: "len", arg: 4, scope: !11520, file: !414, line: 1019, type: !692)
!11528 = !DILocation(line: 1016, column: 59, scope: !11520)
!11529 = !DILocation(line: 1017, column: 50, scope: !11520)
!11530 = !DILocation(line: 1018, column: 55, scope: !11520)
!11531 = !DILocation(line: 1019, column: 50, scope: !11520)
!11532 = !DILocation(line: 1020, column: 9, scope: !11520)
!11533 = !DILocation(line: 1020, column: 9, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11535, file: !414, line: 1020, column: 9)
!11535 = distinct !DILexicalBlock(scope: !11520, file: !414, line: 1020, column: 9)
!11536 = !DILocation(line: 1020, column: 9, scope: !11535)
!11537 = !DILocation(line: 1021, column: 30, scope: !11520)
!11538 = !DILocation(line: 1021, column: 37, scope: !11520)
!11539 = !DILocation(line: 1021, column: 48, scope: !11520)
!11540 = !DILocation(line: 1021, column: 52, scope: !11520)
!11541 = !DILocation(line: 1021, column: 58, scope: !11520)
!11542 = !DILocation(line: 1021, column: 9, scope: !11520)
!11543 = !DILocation(line: 1022, column: 1, scope: !11520)
!11544 = !DISubprogram(name: "rd_buf_write_update", scope: !1709, file: !1709, line: 192, type: !11545, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11545 = !DISubroutineType(types: !11546)
!11546 = !{!692, !6859, !692, !709, !692}
!11547 = !DISubprogram(name: "rd_kafka_buf_calc_timeout", scope: !414, file: !414, line: 875, type: !11548, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11548 = !DISubroutineType(types: !11549)
!11549 = !{null, !1308, !1692, !487}
!11550 = distinct !DISubprogram(name: "rd_kafka_q_enq1", scope: !506, file: !506, line: 422, type: !11551, scopeLine: 426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11553)
!11551 = !DISubroutineType(types: !11552)
!11552 = !{!126, !503, !914, !503, !126, !126}
!11553 = !{!11554, !11555, !11556, !11557, !11558, !11559}
!11554 = !DILocalVariable(name: "rkq", arg: 1, scope: !11550, file: !506, line: 422, type: !503)
!11555 = !DILocalVariable(name: "rko", arg: 2, scope: !11550, file: !506, line: 423, type: !914)
!11556 = !DILocalVariable(name: "orig_destq", arg: 3, scope: !11550, file: !506, line: 424, type: !503)
!11557 = !DILocalVariable(name: "at_head", arg: 4, scope: !11550, file: !506, line: 425, type: !126)
!11558 = !DILocalVariable(name: "do_lock", arg: 5, scope: !11550, file: !506, line: 426, type: !126)
!11559 = !DILocalVariable(name: "fwdq", scope: !11550, file: !506, line: 427, type: !503)
!11560 = !DILocation(line: 422, column: 62, scope: !11550)
!11561 = !DILocation(line: 423, column: 63, scope: !11550)
!11562 = !DILocation(line: 424, column: 62, scope: !11550)
!11563 = !DILocation(line: 425, column: 52, scope: !11550)
!11564 = !DILocation(line: 426, column: 52, scope: !11550)
!11565 = !DILocation(line: 427, column: 9, scope: !11550)
!11566 = !DILocation(line: 427, column: 23, scope: !11550)
!11567 = !DILocation(line: 429, column: 13, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11550, file: !506, line: 429, column: 13)
!11569 = !DILocation(line: 429, column: 13, scope: !11550)
!11570 = !DILocation(line: 430, column: 27, scope: !11568)
!11571 = !DILocation(line: 430, column: 32, scope: !11568)
!11572 = !DILocation(line: 430, column: 17, scope: !11568)
!11573 = !DILocation(line: 432, column: 9, scope: !11550)
!11574 = !DILocation(line: 432, column: 9, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11550, file: !506, line: 432, column: 9)
!11576 = !DILocation(line: 434, column: 13, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11550, file: !506, line: 434, column: 13)
!11578 = !{!11108, !3941, i64 132}
!11579 = !DILocation(line: 434, column: 13, scope: !11550)
!11580 = !DILocation(line: 436, column: 21, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !506, line: 436, column: 21)
!11582 = distinct !DILexicalBlock(scope: !11577, file: !506, line: 434, column: 63)
!11583 = !DILocation(line: 436, column: 21, scope: !11582)
!11584 = !DILocation(line: 437, column: 37, scope: !11581)
!11585 = !DILocation(line: 437, column: 42, scope: !11581)
!11586 = !DILocation(line: 437, column: 25, scope: !11581)
!11587 = !DILocation(line: 439, column: 42, scope: !11582)
!11588 = !DILocation(line: 439, column: 24, scope: !11582)
!11589 = !DILocation(line: 439, column: 17, scope: !11582)
!11590 = !DILocation(line: 442, column: 41, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11550, file: !506, line: 442, column: 13)
!11592 = !DILocation(line: 442, column: 22, scope: !11591)
!11593 = !DILocation(line: 442, column: 20, scope: !11591)
!11594 = !DILocation(line: 442, column: 13, scope: !11550)
!11595 = !DILocation(line: 443, column: 22, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11597, file: !506, line: 443, column: 21)
!11597 = distinct !DILexicalBlock(scope: !11591, file: !506, line: 442, column: 51)
!11598 = !DILocation(line: 443, column: 27, scope: !11596)
!11599 = !{!8464, !3911, i64 80}
!11600 = !DILocation(line: 443, column: 37, scope: !11596)
!11601 = !DILocation(line: 443, column: 40, scope: !11596)
!11602 = !DILocation(line: 443, column: 52, scope: !11596)
!11603 = !{!11108, !3911, i64 152}
!11604 = !DILocation(line: 443, column: 21, scope: !11597)
!11605 = !DILocation(line: 446, column: 49, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11596, file: !506, line: 443, column: 63)
!11607 = !DILocation(line: 446, column: 61, scope: !11606)
!11608 = !DILocation(line: 446, column: 25, scope: !11606)
!11609 = !DILocation(line: 446, column: 30, scope: !11606)
!11610 = !DILocation(line: 446, column: 47, scope: !11606)
!11611 = !DILocation(line: 447, column: 49, scope: !11606)
!11612 = !DILocation(line: 447, column: 61, scope: !11606)
!11613 = !{!11108, !3911, i64 160}
!11614 = !DILocation(line: 447, column: 25, scope: !11606)
!11615 = !DILocation(line: 447, column: 30, scope: !11606)
!11616 = !DILocation(line: 447, column: 47, scope: !11606)
!11617 = !{!8464, !3911, i64 88}
!11618 = !DILocation(line: 448, column: 17, scope: !11606)
!11619 = !DILocation(line: 450, column: 33, scope: !11597)
!11620 = !DILocation(line: 450, column: 38, scope: !11597)
!11621 = !DILocation(line: 450, column: 43, scope: !11597)
!11622 = !DILocation(line: 450, column: 17, scope: !11597)
!11623 = !DILocation(line: 451, column: 29, scope: !11597)
!11624 = !DILocation(line: 451, column: 34, scope: !11597)
!11625 = !DILocation(line: 451, column: 17, scope: !11597)
!11626 = !DILocation(line: 452, column: 21, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11597, file: !506, line: 452, column: 21)
!11628 = !DILocation(line: 452, column: 26, scope: !11627)
!11629 = !{!11108, !3941, i64 112}
!11630 = !DILocation(line: 452, column: 35, scope: !11627)
!11631 = !DILocation(line: 452, column: 21, scope: !11597)
!11632 = !DILocation(line: 453, column: 45, scope: !11627)
!11633 = !DILocation(line: 453, column: 25, scope: !11627)
!11634 = !DILocation(line: 455, column: 21, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11597, file: !506, line: 455, column: 21)
!11636 = !DILocation(line: 455, column: 21, scope: !11597)
!11637 = !DILocation(line: 456, column: 37, scope: !11635)
!11638 = !DILocation(line: 456, column: 42, scope: !11635)
!11639 = !DILocation(line: 456, column: 25, scope: !11635)
!11640 = !DILocation(line: 457, column: 9, scope: !11597)
!11641 = !DILocation(line: 458, column: 21, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !506, line: 458, column: 21)
!11643 = distinct !DILexicalBlock(scope: !11591, file: !506, line: 457, column: 16)
!11644 = !DILocation(line: 458, column: 21, scope: !11643)
!11645 = !DILocation(line: 459, column: 37, scope: !11642)
!11646 = !DILocation(line: 459, column: 42, scope: !11642)
!11647 = !DILocation(line: 459, column: 25, scope: !11642)
!11648 = !DILocation(line: 460, column: 33, scope: !11643)
!11649 = !DILocation(line: 460, column: 39, scope: !11643)
!11650 = !DILocation(line: 460, column: 44, scope: !11643)
!11651 = !DILocation(line: 460, column: 56, scope: !11643)
!11652 = !DILocation(line: 460, column: 17, scope: !11643)
!11653 = !DILocation(line: 461, column: 17, scope: !11643)
!11654 = !DILocation(line: 464, column: 9, scope: !11550)
!11655 = !DILocation(line: 465, column: 1, scope: !11550)
!11656 = !DISubprogram(name: "rd_kafka_op_reply", scope: !58, file: !58, line: 683, type: !11657, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{!126, !914, !550}
!11659 = distinct !DISubprogram(name: "rd_kafka_q_fwd_get", scope: !506, file: !506, line: 280, type: !11660, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11662)
!11660 = !DISubroutineType(types: !11661)
!11661 = !{!503, !503, !126}
!11662 = !{!11663, !11664, !11665}
!11663 = !DILocalVariable(name: "rkq", arg: 1, scope: !11659, file: !506, line: 280, type: !503)
!11664 = !DILocalVariable(name: "do_lock", arg: 2, scope: !11659, file: !506, line: 281, type: !126)
!11665 = !DILocalVariable(name: "fwdq", scope: !11659, file: !506, line: 282, type: !503)
!11666 = !DILocation(line: 280, column: 75, scope: !11659)
!11667 = !DILocation(line: 281, column: 65, scope: !11659)
!11668 = !DILocation(line: 282, column: 9, scope: !11659)
!11669 = !DILocation(line: 282, column: 23, scope: !11659)
!11670 = !DILocation(line: 283, column: 13, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11659, file: !506, line: 283, column: 13)
!11672 = !DILocation(line: 283, column: 13, scope: !11659)
!11673 = !DILocation(line: 284, column: 27, scope: !11671)
!11674 = !DILocation(line: 284, column: 32, scope: !11671)
!11675 = !DILocation(line: 284, column: 17, scope: !11671)
!11676 = !DILocation(line: 286, column: 21, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11659, file: !506, line: 286, column: 13)
!11678 = !DILocation(line: 286, column: 26, scope: !11677)
!11679 = !{!11108, !3911, i64 88}
!11680 = !DILocation(line: 286, column: 19, scope: !11677)
!11681 = !DILocation(line: 286, column: 13, scope: !11659)
!11682 = !DILocation(line: 287, column: 33, scope: !11677)
!11683 = !DILocation(line: 287, column: 17, scope: !11677)
!11684 = !DILocation(line: 289, column: 13, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11659, file: !506, line: 289, column: 13)
!11686 = !DILocation(line: 289, column: 13, scope: !11659)
!11687 = !DILocation(line: 290, column: 29, scope: !11685)
!11688 = !DILocation(line: 290, column: 34, scope: !11685)
!11689 = !DILocation(line: 290, column: 17, scope: !11685)
!11690 = !DILocation(line: 292, column: 16, scope: !11659)
!11691 = !DILocation(line: 293, column: 1, scope: !11659)
!11692 = !DILocation(line: 292, column: 9, scope: !11659)
!11693 = distinct !DISubprogram(name: "rd_kafka_q_enq0", scope: !506, file: !506, line: 393, type: !11694, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11696)
!11694 = !DISubroutineType(types: !11695)
!11695 = !{null, !503, !914, !126}
!11696 = !{!11697, !11698, !11699, !11700}
!11697 = !DILocalVariable(name: "rkq", arg: 1, scope: !11693, file: !506, line: 393, type: !503)
!11698 = !DILocalVariable(name: "rko", arg: 2, scope: !11693, file: !506, line: 393, type: !914)
!11699 = !DILocalVariable(name: "at_head", arg: 3, scope: !11693, file: !506, line: 393, type: !126)
!11700 = !DILocalVariable(name: "_tmp", scope: !11701, file: !506, line: 399, type: !914)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !506, line: 399, column: 17)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !506, line: 399, column: 17)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !506, line: 399, column: 17)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !506, line: 396, column: 18)
!11705 = distinct !DILexicalBlock(scope: !11693, file: !506, line: 394, column: 13)
!11706 = !DILocation(line: 393, column: 31, scope: !11693)
!11707 = !DILocation(line: 393, column: 51, scope: !11693)
!11708 = !DILocation(line: 393, column: 60, scope: !11693)
!11709 = !DILocation(line: 394, column: 13, scope: !11705)
!11710 = !DILocation(line: 394, column: 13, scope: !11693)
!11711 = !DILocation(line: 395, column: 17, scope: !11705)
!11712 = !DILocation(line: 395, column: 17, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11705, file: !506, line: 395, column: 17)
!11714 = !{!8464, !3911, i64 0}
!11715 = !{!11108, !3911, i64 104}
!11716 = !{!8464, !3911, i64 8}
!11717 = !DILocation(line: 396, column: 18, scope: !11704)
!11718 = !DILocation(line: 396, column: 18, scope: !11705)
!11719 = !DILocation(line: 397, column: 17, scope: !11704)
!11720 = !DILocation(line: 397, column: 17, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !506, line: 397, column: 17)
!11722 = distinct !DILexicalBlock(scope: !11704, file: !506, line: 397, column: 17)
!11723 = !{!11108, !3911, i64 96}
!11724 = !DILocation(line: 397, column: 17, scope: !11722)
!11725 = !DILocation(line: 399, column: 17, scope: !11704)
!11726 = !DILocation(line: 399, column: 17, scope: !11702)
!11727 = !DILocation(line: 399, column: 17, scope: !11703)
!11728 = !DILocation(line: 399, column: 17, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11702, file: !506, line: 399, column: 17)
!11730 = !DILocation(line: 399, column: 17, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11732, file: !506, line: 399, column: 17)
!11732 = distinct !DILexicalBlock(scope: !11729, file: !506, line: 399, column: 17)
!11733 = !DILocation(line: 399, column: 17, scope: !11732)
!11734 = !DILocation(line: 399, column: 17, scope: !11701)
!11735 = !DILocation(line: 399, column: 17, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11701, file: !506, line: 399, column: 17)
!11737 = !DILocation(line: 399, column: 17, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11736, file: !506, line: 399, column: 17)
!11739 = !DILocation(line: 399, column: 17, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11741, file: !506, line: 399, column: 17)
!11741 = distinct !DILexicalBlock(scope: !11738, file: !506, line: 399, column: 17)
!11742 = !DILocation(line: 399, column: 17, scope: !11741)
!11743 = !DILocation(line: 399, column: 17, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11740, file: !506, line: 399, column: 17)
!11745 = !DILocation(line: 399, column: 17, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11744, file: !506, line: 399, column: 17)
!11747 = !DILocation(line: 399, column: 17, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11741, file: !506, line: 399, column: 17)
!11749 = !DILocation(line: 399, column: 17, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11748, file: !506, line: 399, column: 17)
!11751 = !DILocation(line: 399, column: 17, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !506, line: 399, column: 17)
!11753 = distinct !DILexicalBlock(scope: !11750, file: !506, line: 399, column: 17)
!11754 = !DILocation(line: 399, column: 17, scope: !11753)
!11755 = distinct !{!11755, !11735, !11735, !4095}
!11756 = !DILocation(line: 401, column: 9, scope: !11693)
!11757 = !DILocation(line: 401, column: 14, scope: !11693)
!11758 = !DILocation(line: 401, column: 22, scope: !11693)
!11759 = !DILocation(line: 402, column: 27, scope: !11693)
!11760 = !DILocation(line: 402, column: 32, scope: !11693)
!11761 = !{!8464, !3941, i64 48}
!11762 = !DILocation(line: 402, column: 9, scope: !11693)
!11763 = !DILocation(line: 402, column: 14, scope: !11693)
!11764 = !DILocation(line: 402, column: 24, scope: !11693)
!11765 = !{!11108, !3942, i64 120}
!11766 = !DILocation(line: 403, column: 1, scope: !11693)
!11767 = !DISubprogram(name: "cnd_signal", scope: !510, file: !510, line: 183, type: !5669, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11768 = distinct !DISubprogram(name: "rd_kafka_q_io_event", scope: !506, file: !506, line: 316, type: !8856, scopeLine: 316, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11769)
!11769 = !{!11770}
!11770 = !DILocalVariable(name: "rkq", arg: 1, scope: !11768, file: !506, line: 316, type: !503)
!11771 = !DILocation(line: 316, column: 67, scope: !11768)
!11772 = !DILocation(line: 318, column: 13, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11768, file: !506, line: 318, column: 13)
!11774 = !{!11108, !3911, i64 144}
!11775 = !DILocation(line: 318, column: 13, scope: !11768)
!11776 = !DILocation(line: 319, column: 17, scope: !11773)
!11777 = !DILocation(line: 321, column: 13, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11768, file: !506, line: 321, column: 13)
!11779 = !DILocation(line: 321, column: 18, scope: !11778)
!11780 = !DILocation(line: 321, column: 27, scope: !11778)
!11781 = !{!11782, !3911, i64 32}
!11782 = !{!"rd_kafka_q_io", !3941, i64 0, !3911, i64 8, !3942, i64 16, !3912, i64 24, !3911, i64 32, !3911, i64 40}
!11783 = !DILocation(line: 321, column: 13, scope: !11768)
!11784 = !DILocation(line: 322, column: 17, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11778, file: !506, line: 321, column: 37)
!11786 = !DILocation(line: 322, column: 22, scope: !11785)
!11787 = !DILocation(line: 322, column: 31, scope: !11785)
!11788 = !DILocation(line: 322, column: 40, scope: !11785)
!11789 = !DILocation(line: 322, column: 45, scope: !11785)
!11790 = !{!11108, !3911, i64 136}
!11791 = !DILocation(line: 323, column: 40, scope: !11785)
!11792 = !DILocation(line: 323, column: 45, scope: !11785)
!11793 = !DILocation(line: 323, column: 54, scope: !11785)
!11794 = !{!11782, !3911, i64 40}
!11795 = !DILocation(line: 324, column: 17, scope: !11785)
!11796 = !DILocation(line: 332, column: 13, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11768, file: !506, line: 332, column: 13)
!11798 = !DILocation(line: 332, column: 18, scope: !11797)
!11799 = !DILocation(line: 332, column: 27, scope: !11797)
!11800 = !{!11782, !3912, i64 24}
!11801 = !DILocation(line: 332, column: 13, scope: !11768)
!11802 = !DILocation(line: 333, column: 17, scope: !11797)
!11803 = !DILocation(line: 335, column: 9, scope: !11768)
!11804 = !DILocation(line: 335, column: 14, scope: !11768)
!11805 = !DILocation(line: 335, column: 23, scope: !11768)
!11806 = !DILocation(line: 335, column: 28, scope: !11768)
!11807 = !DILocation(line: 339, column: 13, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11768, file: !506, line: 339, column: 13)
!11809 = !{!11782, !3941, i64 0}
!11810 = !{!11782, !3911, i64 8}
!11811 = !{!11782, !3942, i64 16}
!11812 = !DILocation(line: 340, column: 54, scope: !11808)
!11813 = !DILocation(line: 339, column: 13, scope: !11768)
!11814 = !DILocation(line: 342, column: 1, scope: !11768)
!11815 = distinct !DISubprogram(name: "rd_kafka_op_cmp_prio", scope: !506, file: !506, line: 349, type: !1195, scopeLine: 350, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11816)
!11816 = !{!11817, !11818, !11819, !11822}
!11817 = !DILocalVariable(name: "_a", arg: 1, scope: !11815, file: !506, line: 349, type: !709)
!11818 = !DILocalVariable(name: "_b", arg: 2, scope: !11815, file: !506, line: 350, type: !709)
!11819 = !DILocalVariable(name: "a", scope: !11815, file: !506, line: 351, type: !11820)
!11820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11821, size: 64)
!11821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !915)
!11822 = !DILocalVariable(name: "b", scope: !11815, file: !506, line: 351, type: !11820)
!11823 = !DILocation(line: 349, column: 65, scope: !11815)
!11824 = !DILocation(line: 350, column: 65, scope: !11815)
!11825 = !DILocation(line: 351, column: 9, scope: !11815)
!11826 = !DILocation(line: 351, column: 30, scope: !11815)
!11827 = !DILocation(line: 351, column: 34, scope: !11815)
!11828 = !DILocation(line: 351, column: 39, scope: !11815)
!11829 = !DILocation(line: 351, column: 43, scope: !11815)
!11830 = !DILocation(line: 353, column: 16, scope: !11815)
!11831 = !DILocation(line: 354, column: 1, scope: !11815)
!11832 = !DILocation(line: 353, column: 9, scope: !11815)
!11833 = !DISubprogram(name: "write", scope: !1368, file: !1368, line: 378, type: !11834, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11834 = !DISubroutineType(types: !11835)
!11835 = !{!2858, !126, !709, !692}
!11836 = distinct !DISubprogram(name: "rd_kafka_enq_once_trigger", scope: !506, file: !506, line: 1077, type: !11837, scopeLine: 1079, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11839)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{null, !5589, !550, !365}
!11839 = !{!11840, !11841, !11842, !11843, !11844, !11845}
!11840 = !DILocalVariable(name: "eonce", arg: 1, scope: !11836, file: !506, line: 1077, type: !5589)
!11841 = !DILocalVariable(name: "err", arg: 2, scope: !11836, file: !506, line: 1078, type: !550)
!11842 = !DILocalVariable(name: "srcdesc", arg: 3, scope: !11836, file: !506, line: 1079, type: !365)
!11843 = !DILocalVariable(name: "do_destroy", scope: !11836, file: !506, line: 1080, type: !126)
!11844 = !DILocalVariable(name: "rko", scope: !11836, file: !506, line: 1081, type: !914)
!11845 = !DILocalVariable(name: "replyq", scope: !11836, file: !506, line: 1082, type: !569)
!11846 = !DILocation(line: 1077, column: 48, scope: !11836)
!11847 = !DILocation(line: 1078, column: 47, scope: !11836)
!11848 = !DILocation(line: 1079, column: 39, scope: !11836)
!11849 = !DILocation(line: 1080, column: 9, scope: !11836)
!11850 = !DILocation(line: 1080, column: 13, scope: !11836)
!11851 = !DILocation(line: 1081, column: 9, scope: !11836)
!11852 = !DILocation(line: 1081, column: 24, scope: !11836)
!11853 = !DILocation(line: 1082, column: 9, scope: !11836)
!11854 = !DILocation(line: 1082, column: 27, scope: !11836)
!11855 = !DILocation(line: 1084, column: 19, scope: !11836)
!11856 = !DILocation(line: 1084, column: 26, scope: !11836)
!11857 = !DILocation(line: 1084, column: 9, scope: !11836)
!11858 = !DILocation(line: 1086, column: 9, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !506, line: 1086, column: 9)
!11860 = distinct !DILexicalBlock(scope: !11836, file: !506, line: 1086, column: 9)
!11861 = !DILocation(line: 1086, column: 9, scope: !11860)
!11862 = !DILocation(line: 1087, column: 9, scope: !11836)
!11863 = !DILocation(line: 1087, column: 16, scope: !11836)
!11864 = !DILocation(line: 1087, column: 22, scope: !11836)
!11865 = !DILocation(line: 1088, column: 22, scope: !11836)
!11866 = !DILocation(line: 1088, column: 29, scope: !11836)
!11867 = !DILocation(line: 1088, column: 36, scope: !11836)
!11868 = !DILocation(line: 1088, column: 20, scope: !11836)
!11869 = !DILocation(line: 1090, column: 13, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11836, file: !506, line: 1090, column: 13)
!11871 = !DILocation(line: 1090, column: 20, scope: !11870)
!11872 = !{!5640, !3911, i64 48}
!11873 = !DILocation(line: 1090, column: 13, scope: !11836)
!11874 = !DILocation(line: 1097, column: 26, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11870, file: !506, line: 1090, column: 25)
!11876 = !DILocation(line: 1097, column: 33, scope: !11875)
!11877 = !DILocation(line: 1097, column: 24, scope: !11875)
!11878 = !DILocation(line: 1098, column: 26, scope: !11875)
!11879 = !DILocation(line: 1098, column: 33, scope: !11875)
!11880 = !DILocation(line: 1100, column: 17, scope: !11875)
!11881 = !DILocation(line: 1100, column: 24, scope: !11875)
!11882 = !DILocation(line: 1100, column: 28, scope: !11875)
!11883 = !DILocation(line: 1101, column: 40, scope: !11875)
!11884 = !DILocation(line: 1101, column: 47, scope: !11875)
!11885 = !DILocation(line: 1101, column: 17, scope: !11875)
!11886 = !DILocation(line: 1104, column: 9, scope: !11875)
!11887 = !DILocation(line: 1105, column: 21, scope: !11836)
!11888 = !DILocation(line: 1105, column: 28, scope: !11836)
!11889 = !DILocation(line: 1105, column: 9, scope: !11836)
!11890 = !DILocation(line: 1107, column: 13, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11836, file: !506, line: 1107, column: 13)
!11892 = !DILocation(line: 1107, column: 13, scope: !11836)
!11893 = !DILocation(line: 1109, column: 44, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11891, file: !506, line: 1107, column: 25)
!11895 = !DILocation(line: 1109, column: 17, scope: !11894)
!11896 = !DILocation(line: 1110, column: 9, scope: !11894)
!11897 = !DILocation(line: 1112, column: 13, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11836, file: !506, line: 1112, column: 13)
!11899 = !DILocation(line: 1112, column: 13, scope: !11836)
!11900 = !DILocation(line: 1113, column: 32, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11898, file: !506, line: 1112, column: 18)
!11902 = !DILocation(line: 1113, column: 17, scope: !11901)
!11903 = !DILocation(line: 1113, column: 22, scope: !11901)
!11904 = !DILocation(line: 1113, column: 30, scope: !11901)
!11905 = !DILocation(line: 1114, column: 46, scope: !11901)
!11906 = !DILocation(line: 1114, column: 58, scope: !11901)
!11907 = !DILocation(line: 1114, column: 17, scope: !11901)
!11908 = !DILocation(line: 1115, column: 17, scope: !11901)
!11909 = !DILocation(line: 1116, column: 9, scope: !11901)
!11910 = !DILocation(line: 1117, column: 1, scope: !11836)
!11911 = distinct !DISubprogram(name: "rd_kafka_enq_once_destroy0", scope: !506, file: !506, line: 969, type: !11912, scopeLine: 969, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11914)
!11912 = !DISubroutineType(types: !11913)
!11913 = !{null, !5589}
!11914 = !{!11915}
!11915 = !DILocalVariable(name: "eonce", arg: 1, scope: !11911, file: !506, line: 969, type: !5589)
!11916 = !DILocation(line: 969, column: 49, scope: !11911)
!11917 = !DILocation(line: 973, column: 9, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11919, file: !506, line: 973, column: 9)
!11919 = distinct !DILexicalBlock(scope: !11911, file: !506, line: 973, column: 9)
!11920 = !DILocation(line: 973, column: 9, scope: !11919)
!11921 = !DILocation(line: 974, column: 9, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11923, file: !506, line: 974, column: 9)
!11923 = distinct !DILexicalBlock(scope: !11911, file: !506, line: 974, column: 9)
!11924 = !{!5640, !3911, i64 56}
!11925 = !DILocation(line: 974, column: 9, scope: !11923)
!11926 = !DILocation(line: 978, column: 9, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !506, line: 978, column: 9)
!11928 = distinct !DILexicalBlock(scope: !11911, file: !506, line: 978, column: 9)
!11929 = !DILocation(line: 978, column: 9, scope: !11928)
!11930 = !DILocation(line: 980, column: 22, scope: !11911)
!11931 = !DILocation(line: 980, column: 29, scope: !11911)
!11932 = !DILocation(line: 980, column: 9, scope: !11911)
!11933 = !DILocation(line: 981, column: 17, scope: !11911)
!11934 = !DILocation(line: 981, column: 9, scope: !11911)
!11935 = !DILocation(line: 982, column: 1, scope: !11911)
!11936 = distinct !DISubprogram(name: "rd_kafka_replyq_enq", scope: !506, file: !506, line: 803, type: !11937, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11939)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{!126, !8391, !914, !126}
!11939 = !{!11940, !11941, !11942, !11943, !11944}
!11940 = !DILocalVariable(name: "replyq", arg: 1, scope: !11936, file: !506, line: 803, type: !8391)
!11941 = !DILocalVariable(name: "rko", arg: 2, scope: !11936, file: !506, line: 804, type: !914)
!11942 = !DILocalVariable(name: "version", arg: 3, scope: !11936, file: !506, line: 805, type: !126)
!11943 = !DILocalVariable(name: "rkq", scope: !11936, file: !506, line: 806, type: !503)
!11944 = !DILocalVariable(name: "r", scope: !11936, file: !506, line: 807, type: !126)
!11945 = !DILocation(line: 803, column: 71, scope: !11936)
!11946 = !DILocation(line: 804, column: 67, scope: !11936)
!11947 = !DILocation(line: 805, column: 56, scope: !11936)
!11948 = !DILocation(line: 806, column: 9, scope: !11936)
!11949 = !DILocation(line: 806, column: 23, scope: !11936)
!11950 = !DILocation(line: 806, column: 29, scope: !11936)
!11951 = !DILocation(line: 806, column: 37, scope: !11936)
!11952 = !DILocation(line: 807, column: 9, scope: !11936)
!11953 = !DILocation(line: 807, column: 13, scope: !11936)
!11954 = !DILocation(line: 809, column: 13, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11936, file: !506, line: 809, column: 13)
!11956 = !DILocation(line: 809, column: 13, scope: !11936)
!11957 = !DILocation(line: 810, column: 36, scope: !11955)
!11958 = !DILocation(line: 810, column: 17, scope: !11955)
!11959 = !DILocation(line: 810, column: 22, scope: !11955)
!11960 = !DILocation(line: 810, column: 34, scope: !11955)
!11961 = !{!8464, !3941, i64 28}
!11962 = !DILocation(line: 812, column: 36, scope: !11955)
!11963 = !DILocation(line: 812, column: 44, scope: !11955)
!11964 = !DILocation(line: 812, column: 17, scope: !11955)
!11965 = !DILocation(line: 812, column: 22, scope: !11955)
!11966 = !DILocation(line: 812, column: 34, scope: !11955)
!11967 = !DILocation(line: 816, column: 9, scope: !11936)
!11968 = !DILocation(line: 816, column: 17, scope: !11936)
!11969 = !DILocation(line: 816, column: 19, scope: !11936)
!11970 = !DILocation(line: 828, column: 28, scope: !11936)
!11971 = !DILocation(line: 828, column: 33, scope: !11936)
!11972 = !DILocation(line: 828, column: 13, scope: !11936)
!11973 = !DILocation(line: 828, column: 11, scope: !11936)
!11974 = !DILocation(line: 830, column: 9, scope: !11936)
!11975 = !DILocation(line: 832, column: 16, scope: !11936)
!11976 = !DILocation(line: 833, column: 1, scope: !11936)
!11977 = !DILocation(line: 832, column: 9, scope: !11936)
!11978 = distinct !DISubprogram(name: "rd_kafka_replyq_destroy", scope: !506, file: !506, line: 781, type: !8389, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11979)
!11979 = !{!11980}
!11980 = !DILocalVariable(name: "replyq", arg: 1, scope: !11978, file: !506, line: 781, type: !8391)
!11981 = !DILocation(line: 781, column: 44, scope: !11978)
!11982 = !DILocation(line: 782, column: 13, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11978, file: !506, line: 782, column: 13)
!11984 = !DILocation(line: 782, column: 21, scope: !11983)
!11985 = !DILocation(line: 782, column: 13, scope: !11978)
!11986 = !DILocation(line: 783, column: 17, scope: !11983)
!11987 = !DILocation(line: 790, column: 31, scope: !11978)
!11988 = !DILocation(line: 790, column: 9, scope: !11978)
!11989 = !DILocation(line: 791, column: 1, scope: !11978)
!11990 = !DISubprogram(name: "rd_jitter", scope: !11991, file: !11991, line: 36, type: !11992, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11991 = !DIFile(filename: "./rdrand.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "27b097d3ccb9de55fe6cf807c8b9d31a")
!11992 = !DISubroutineType(types: !11993)
!11993 = !{!126, !126, !126}
!11994 = distinct !DISubprogram(name: "rd_timeout_ms", scope: !4366, file: !4366, line: 157, type: !6215, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !11995)
!11995 = !{!11996}
!11996 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !11994, file: !4366, line: 157, type: !487)
!11997 = !DILocation(line: 157, column: 44, scope: !11994)
!11998 = !DILocation(line: 158, column: 13, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11994, file: !4366, line: 158, column: 13)
!12000 = !DILocation(line: 158, column: 24, scope: !11999)
!12001 = !DILocation(line: 158, column: 13, scope: !11994)
!12002 = !DILocation(line: 159, column: 29, scope: !11999)
!12003 = !DILocation(line: 159, column: 24, scope: !11999)
!12004 = !DILocation(line: 159, column: 17, scope: !11999)
!12005 = !DILocation(line: 164, column: 31, scope: !11999)
!12006 = !DILocation(line: 164, column: 42, scope: !11999)
!12007 = !DILocation(line: 164, column: 49, scope: !11999)
!12008 = !DILocation(line: 164, column: 24, scope: !11999)
!12009 = !DILocation(line: 164, column: 17, scope: !11999)
!12010 = !DILocation(line: 165, column: 1, scope: !11994)
!12011 = distinct !DISubprogram(name: "rd_timeout_remains_us", scope: !4366, file: !4366, line: 250, type: !12012, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12014)
!12012 = !DISubroutineType(types: !12013)
!12013 = !{!487, !487}
!12014 = !{!12015, !12016}
!12015 = !DILocalVariable(name: "abs_timeout", arg: 1, scope: !12011, file: !4366, line: 250, type: !487)
!12016 = !DILocalVariable(name: "timeout_us", scope: !12011, file: !4366, line: 251, type: !487)
!12017 = !DILocation(line: 250, column: 56, scope: !12011)
!12018 = !DILocation(line: 251, column: 9, scope: !12011)
!12019 = !DILocation(line: 251, column: 17, scope: !12011)
!12020 = !DILocation(line: 253, column: 13, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12011, file: !4366, line: 253, column: 13)
!12022 = !DILocation(line: 253, column: 25, scope: !12021)
!12023 = !DILocation(line: 253, column: 45, scope: !12021)
!12024 = !DILocation(line: 253, column: 48, scope: !12021)
!12025 = !DILocation(line: 253, column: 60, scope: !12021)
!12026 = !DILocation(line: 253, column: 13, scope: !12011)
!12027 = !DILocation(line: 254, column: 33, scope: !12021)
!12028 = !DILocation(line: 254, column: 17, scope: !12021)
!12029 = !DILocation(line: 256, column: 22, scope: !12011)
!12030 = !DILocation(line: 256, column: 36, scope: !12011)
!12031 = !DILocation(line: 256, column: 34, scope: !12011)
!12032 = !DILocation(line: 256, column: 20, scope: !12011)
!12033 = !DILocation(line: 257, column: 13, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12011, file: !4366, line: 257, column: 13)
!12035 = !DILocation(line: 257, column: 24, scope: !12034)
!12036 = !DILocation(line: 257, column: 13, scope: !12011)
!12037 = !DILocation(line: 258, column: 17, scope: !12034)
!12038 = !DILocation(line: 260, column: 24, scope: !12034)
!12039 = !DILocation(line: 260, column: 17, scope: !12034)
!12040 = !DILocation(line: 261, column: 1, scope: !12011)
!12041 = distinct !DISubprogram(name: "rd_kafka_waitresp_find", scope: !2, file: !2, line: 1816, type: !12042, scopeLine: 1817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12044)
!12042 = !DISubroutineType(types: !12043)
!12043 = !{!1692, !412, !320}
!12044 = !{!12045, !12046, !12047, !12048}
!12045 = !DILocalVariable(name: "rkb", arg: 1, scope: !12041, file: !2, line: 1816, type: !412)
!12046 = !DILocalVariable(name: "corrid", arg: 2, scope: !12041, file: !2, line: 1817, type: !320)
!12047 = !DILocalVariable(name: "rkbuf", scope: !12041, file: !2, line: 1818, type: !1692)
!12048 = !DILocalVariable(name: "now", scope: !12041, file: !2, line: 1819, type: !487)
!12049 = !DILocation(line: 1816, column: 66, scope: !12041)
!12050 = !DILocation(line: 1817, column: 55, scope: !12041)
!12051 = !DILocation(line: 1818, column: 9, scope: !12041)
!12052 = !DILocation(line: 1818, column: 25, scope: !12041)
!12053 = !DILocation(line: 1819, column: 9, scope: !12041)
!12054 = !DILocation(line: 1819, column: 17, scope: !12041)
!12055 = !DILocation(line: 1819, column: 23, scope: !12041)
!12056 = !DILocation(line: 1821, column: 9, scope: !12041)
!12057 = !DILocation(line: 1821, column: 9, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12059, file: !2, line: 1821, column: 9)
!12059 = distinct !DILexicalBlock(scope: !12041, file: !2, line: 1821, column: 9)
!12060 = !DILocation(line: 1821, column: 9, scope: !12059)
!12061 = !DILocation(line: 1823, column: 9, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12041, file: !2, line: 1823, column: 9)
!12063 = !DILocation(line: 1823, column: 9, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12062, file: !2, line: 1823, column: 9)
!12065 = !DILocation(line: 1824, column: 13, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12064, file: !2, line: 1824, column: 13)
!12067 = !DILocation(line: 1824, column: 20, scope: !12066)
!12068 = !DILocation(line: 1824, column: 36, scope: !12066)
!12069 = !DILocation(line: 1824, column: 33, scope: !12066)
!12070 = !DILocation(line: 1824, column: 13, scope: !12064)
!12071 = !DILocation(line: 1826, column: 40, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12066, file: !2, line: 1824, column: 44)
!12073 = !DILocation(line: 1826, column: 46, scope: !12072)
!12074 = !DILocation(line: 1826, column: 53, scope: !12072)
!12075 = !DILocation(line: 1826, column: 44, scope: !12072)
!12076 = !DILocation(line: 1826, column: 17, scope: !12072)
!12077 = !DILocation(line: 1826, column: 24, scope: !12072)
!12078 = !DILocation(line: 1826, column: 38, scope: !12072)
!12079 = !DILocation(line: 1827, column: 29, scope: !12072)
!12080 = !DILocation(line: 1827, column: 34, scope: !12072)
!12081 = !DILocation(line: 1827, column: 47, scope: !12072)
!12082 = !DILocation(line: 1827, column: 54, scope: !12072)
!12083 = !DILocation(line: 1827, column: 17, scope: !12072)
!12084 = !DILocation(line: 1829, column: 21, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12072, file: !2, line: 1829, column: 21)
!12086 = !DILocation(line: 1829, column: 28, scope: !12085)
!12087 = !DILocation(line: 1829, column: 40, scope: !12085)
!12088 = !DILocation(line: 1829, column: 65, scope: !12085)
!12089 = !DILocation(line: 1830, column: 38, scope: !12085)
!12090 = !DILocation(line: 1830, column: 43, scope: !12085)
!12091 = !DILocation(line: 1830, column: 21, scope: !12085)
!12092 = !DILocation(line: 1830, column: 72, scope: !12085)
!12093 = !DILocation(line: 1829, column: 21, scope: !12072)
!12094 = !DILocation(line: 1831, column: 65, scope: !12085)
!12095 = !DILocation(line: 1831, column: 70, scope: !12085)
!12096 = !DILocation(line: 1831, column: 25, scope: !12085)
!12097 = !DILocation(line: 1833, column: 36, scope: !12072)
!12098 = !DILocation(line: 1833, column: 41, scope: !12072)
!12099 = !DILocation(line: 1833, column: 56, scope: !12072)
!12100 = !DILocation(line: 1833, column: 17, scope: !12072)
!12101 = !DILocation(line: 1834, column: 24, scope: !12072)
!12102 = !DILocation(line: 1834, column: 17, scope: !12072)
!12103 = distinct !{!12103, !12061, !12104, !4095}
!12104 = !DILocation(line: 1835, column: 9, scope: !12062)
!12105 = !DILocation(line: 1836, column: 9, scope: !12041)
!12106 = !DILocation(line: 1837, column: 1, scope: !12041)
!12107 = !DISubprogram(name: "rd_kafka_interceptors_on_response_received", scope: !4435, file: !4435, line: 69, type: !12108, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12108 = !DISubroutineType(types: !12109)
!12109 = !{null, !586, !126, !365, !320, !862, !862, !320, !692, !489, !550}
!12110 = !DISubprogram(name: "rd_slice_read_uvarint", scope: !1709, file: !1709, line: 312, type: !12111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12111 = !DISubroutineType(types: !12112)
!12112 = !{!692, !6901, !7016}
!12113 = !DISubprogram(name: "strerror_r", scope: !6937, file: !6937, line: 444, type: !12114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12114 = !DISubroutineType(types: !12115)
!12115 = !{!559, !126, !559, !692}
!12116 = !DISubprogram(name: "rd_kafka_get_legacy_ApiVersions", scope: !11403, file: !11403, line: 87, type: !12117, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12117 = !DISubroutineType(types: !12118)
!12118 = !{!126, !365, !12119, !12120, !365}
!12119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!12120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!12121 = !DISubprogram(name: "rd_kafka_ApiVersions_copy", scope: !11403, file: !11403, line: 92, type: !12122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12122 = !DISubroutineType(types: !12123)
!12123 = !{null, !2860, !692, !12119, !12120}
!12124 = distinct !DISubprogram(name: "rd_kafka_broker_features_set", scope: !2, file: !2, line: 227, type: !4116, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12125)
!12125 = !{!12126, !12127, !12128}
!12126 = !DILocalVariable(name: "rkb", arg: 1, scope: !12124, file: !2, line: 227, type: !412)
!12127 = !DILocalVariable(name: "features", arg: 2, scope: !12124, file: !2, line: 227, type: !126)
!12128 = !DILocalVariable(name: "_logname", scope: !12129, file: !2, line: 232, type: !924)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !2, line: 232, column: 9)
!12130 = distinct !DILexicalBlock(scope: !12131, file: !2, line: 232, column: 9)
!12131 = distinct !DILexicalBlock(scope: !12132, file: !2, line: 232, column: 9)
!12132 = distinct !DILexicalBlock(scope: !12124, file: !2, line: 232, column: 9)
!12133 = !DILocation(line: 227, column: 61, scope: !12124)
!12134 = !DILocation(line: 227, column: 70, scope: !12124)
!12135 = !DILocation(line: 228, column: 13, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12124, file: !2, line: 228, column: 13)
!12137 = !DILocation(line: 228, column: 18, scope: !12136)
!12138 = !DILocation(line: 228, column: 34, scope: !12136)
!12139 = !DILocation(line: 228, column: 31, scope: !12136)
!12140 = !DILocation(line: 228, column: 13, scope: !12124)
!12141 = !DILocation(line: 229, column: 17, scope: !12136)
!12142 = !DILocation(line: 231, column: 29, scope: !12124)
!12143 = !DILocation(line: 231, column: 9, scope: !12124)
!12144 = !DILocation(line: 231, column: 14, scope: !12124)
!12145 = !DILocation(line: 231, column: 27, scope: !12124)
!12146 = !DILocation(line: 232, column: 9, scope: !12124)
!12147 = !DILocation(line: 232, column: 9, scope: !12131)
!12148 = !DILocation(line: 232, column: 9, scope: !12132)
!12149 = !DILocation(line: 232, column: 9, scope: !12130)
!12150 = !DILocation(line: 232, column: 9, scope: !12129)
!12151 = !DILocation(line: 235, column: 1, scope: !12124)
!12152 = !DISubprogram(name: "rd_kafka_features_check", scope: !11403, file: !11403, line: 96, type: !12153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12153 = !DISubroutineType(types: !12154)
!12154 = !{!126, !412, !2345, !692}
!12155 = !DISubprogram(name: "rd_kafka_handle_ApiVersion", scope: !7572, file: !7572, line: 266, type: !12156, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{!550, !586, !412, !550, !1692, !1692, !12119, !12120}
!12158 = !DISubprogram(name: "rd_kafka_SaslHandshakeRequest", scope: !7572, file: !7572, line: 279, type: !12159, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12159 = !DISubroutineType(types: !12160)
!12160 = !{null, !412, !365, !569, !1688, !607}
!12161 = distinct !DISubprogram(name: "rd_kafka_broker_handle_SaslHandshake", scope: !2, file: !2, line: 2275, type: !1690, scopeLine: 2280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12162)
!12162 = !{!12163, !12164, !12165, !12166, !12167, !12168, !12169, !12170, !12171, !12172, !12173, !12174, !12175, !12176, !12178, !12180, !12182, !12185, !12191, !12193, !12195, !12196, !12198, !12201, !12207, !12209, !12215, !12217, !12221, !12223, !12226, !12228, !12229, !12230, !12235, !12237, !12240, !12242, !12245, !12251, !12253, !12258, !12264, !12266, !12271, !12272}
!12163 = !DILocalVariable(name: "rk", arg: 1, scope: !12161, file: !2, line: 2275, type: !586)
!12164 = !DILocalVariable(name: "rkb", arg: 2, scope: !12161, file: !2, line: 2276, type: !412)
!12165 = !DILocalVariable(name: "err", arg: 3, scope: !12161, file: !2, line: 2277, type: !550)
!12166 = !DILocalVariable(name: "rkbuf", arg: 4, scope: !12161, file: !2, line: 2278, type: !1692)
!12167 = !DILocalVariable(name: "request", arg: 5, scope: !12161, file: !2, line: 2279, type: !1692)
!12168 = !DILocalVariable(name: "opaque", arg: 6, scope: !12161, file: !2, line: 2280, type: !607)
!12169 = !DILocalVariable(name: "log_decode_errors", scope: !12161, file: !2, line: 2281, type: !3622)
!12170 = !DILocalVariable(name: "MechCnt", scope: !12161, file: !2, line: 2282, type: !320)
!12171 = !DILocalVariable(name: "ErrorCode", scope: !12161, file: !2, line: 2283, type: !862)
!12172 = !DILocalVariable(name: "i", scope: !12161, file: !2, line: 2284, type: !126)
!12173 = !DILocalVariable(name: "mechs", scope: !12161, file: !2, line: 2285, type: !559)
!12174 = !DILocalVariable(name: "msz", scope: !12161, file: !2, line: 2286, type: !692)
!12175 = !DILocalVariable(name: "mof", scope: !12161, file: !2, line: 2286, type: !692)
!12176 = !DILocalVariable(name: "_v", scope: !12177, file: !2, line: 2294, type: !862)
!12177 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2294, column: 9)
!12178 = !DILocalVariable(name: "_vp", scope: !12177, file: !2, line: 2294, type: !12179)
!12179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!12180 = !DILocalVariable(name: "__len2", scope: !12181, file: !2, line: 2294, type: !692)
!12181 = distinct !DILexicalBlock(scope: !12177, file: !2, line: 2294, column: 9)
!12182 = !DILocalVariable(name: "__len0", scope: !12183, file: !2, line: 2294, type: !692)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !2, line: 2294, column: 9)
!12184 = distinct !DILexicalBlock(scope: !12181, file: !2, line: 2294, column: 9)
!12185 = !DILocalVariable(name: "__tmpstr", scope: !12186, file: !2, line: 2294, type: !924)
!12186 = distinct !DILexicalBlock(scope: !12187, file: !2, line: 2294, column: 9)
!12187 = distinct !DILexicalBlock(scope: !12188, file: !2, line: 2294, column: 9)
!12188 = distinct !DILexicalBlock(scope: !12189, file: !2, line: 2294, column: 9)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !2, line: 2294, column: 9)
!12190 = distinct !DILexicalBlock(scope: !12183, file: !2, line: 2294, column: 9)
!12191 = !DILocalVariable(name: "_logname", scope: !12192, file: !2, line: 2294, type: !924)
!12192 = distinct !DILexicalBlock(scope: !12186, file: !2, line: 2294, column: 9)
!12193 = !DILocalVariable(name: "_v", scope: !12194, file: !2, line: 2295, type: !320)
!12194 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2295, column: 9)
!12195 = !DILocalVariable(name: "_vp", scope: !12194, file: !2, line: 2295, type: !795)
!12196 = !DILocalVariable(name: "__len2", scope: !12197, file: !2, line: 2295, type: !692)
!12197 = distinct !DILexicalBlock(scope: !12194, file: !2, line: 2295, column: 9)
!12198 = !DILocalVariable(name: "__len0", scope: !12199, file: !2, line: 2295, type: !692)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !2, line: 2295, column: 9)
!12200 = distinct !DILexicalBlock(scope: !12197, file: !2, line: 2295, column: 9)
!12201 = !DILocalVariable(name: "__tmpstr", scope: !12202, file: !2, line: 2295, type: !924)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !2, line: 2295, column: 9)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !2, line: 2295, column: 9)
!12204 = distinct !DILexicalBlock(scope: !12205, file: !2, line: 2295, column: 9)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !2, line: 2295, column: 9)
!12206 = distinct !DILexicalBlock(scope: !12199, file: !2, line: 2295, column: 9)
!12207 = !DILocalVariable(name: "_logname", scope: !12208, file: !2, line: 2295, type: !924)
!12208 = distinct !DILexicalBlock(scope: !12202, file: !2, line: 2295, column: 9)
!12209 = !DILocalVariable(name: "_logname", scope: !12210, file: !2, line: 2298, type: !924)
!12210 = distinct !DILexicalBlock(scope: !12211, file: !2, line: 2298, column: 17)
!12211 = distinct !DILexicalBlock(scope: !12212, file: !2, line: 2298, column: 17)
!12212 = distinct !DILexicalBlock(scope: !12213, file: !2, line: 2298, column: 17)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !2, line: 2298, column: 17)
!12214 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2297, column: 13)
!12215 = !DILocalVariable(name: "_logname", scope: !12216, file: !2, line: 2298, type: !924)
!12216 = distinct !DILexicalBlock(scope: !12211, file: !2, line: 2298, column: 17)
!12217 = !DILocalVariable(name: "mech", scope: !12218, file: !2, line: 2307, type: !359)
!12218 = distinct !DILexicalBlock(scope: !12219, file: !2, line: 2306, column: 39)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !2, line: 2306, column: 9)
!12220 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2306, column: 9)
!12221 = !DILocalVariable(name: "_klen", scope: !12222, file: !2, line: 2308, type: !126)
!12222 = distinct !DILexicalBlock(scope: !12218, file: !2, line: 2308, column: 17)
!12223 = !DILocalVariable(name: "_uva", scope: !12224, file: !2, line: 2308, type: !937)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !2, line: 2308, column: 17)
!12225 = distinct !DILexicalBlock(scope: !12222, file: !2, line: 2308, column: 17)
!12226 = !DILocalVariable(name: "_v", scope: !12227, file: !2, line: 2308, type: !937)
!12227 = distinct !DILexicalBlock(scope: !12224, file: !2, line: 2308, column: 17)
!12228 = !DILocalVariable(name: "_vp", scope: !12227, file: !2, line: 2308, type: !7016)
!12229 = !DILocalVariable(name: "_r", scope: !12227, file: !2, line: 2308, type: !692)
!12230 = !DILocalVariable(name: "__tmpstr", scope: !12231, file: !2, line: 2308, type: !924)
!12231 = distinct !DILexicalBlock(scope: !12232, file: !2, line: 2308, column: 17)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !2, line: 2308, column: 17)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !2, line: 2308, column: 17)
!12234 = distinct !DILexicalBlock(scope: !12227, file: !2, line: 2308, column: 17)
!12235 = !DILocalVariable(name: "_logname", scope: !12236, file: !2, line: 2308, type: !924)
!12236 = distinct !DILexicalBlock(scope: !12231, file: !2, line: 2308, column: 17)
!12237 = !DILocalVariable(name: "_v", scope: !12238, file: !2, line: 2308, type: !862)
!12238 = distinct !DILexicalBlock(scope: !12239, file: !2, line: 2308, column: 17)
!12239 = distinct !DILexicalBlock(scope: !12225, file: !2, line: 2308, column: 17)
!12240 = !DILocalVariable(name: "__len2", scope: !12241, file: !2, line: 2308, type: !692)
!12241 = distinct !DILexicalBlock(scope: !12238, file: !2, line: 2308, column: 17)
!12242 = !DILocalVariable(name: "__len0", scope: !12243, file: !2, line: 2308, type: !692)
!12243 = distinct !DILexicalBlock(scope: !12244, file: !2, line: 2308, column: 17)
!12244 = distinct !DILexicalBlock(scope: !12241, file: !2, line: 2308, column: 17)
!12245 = !DILocalVariable(name: "__tmpstr", scope: !12246, file: !2, line: 2308, type: !924)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !2, line: 2308, column: 17)
!12247 = distinct !DILexicalBlock(scope: !12248, file: !2, line: 2308, column: 17)
!12248 = distinct !DILexicalBlock(scope: !12249, file: !2, line: 2308, column: 17)
!12249 = distinct !DILexicalBlock(scope: !12250, file: !2, line: 2308, column: 17)
!12250 = distinct !DILexicalBlock(scope: !12243, file: !2, line: 2308, column: 17)
!12251 = !DILocalVariable(name: "_logname", scope: !12252, file: !2, line: 2308, type: !924)
!12252 = distinct !DILexicalBlock(scope: !12246, file: !2, line: 2308, column: 17)
!12253 = !DILocalVariable(name: "__len0", scope: !12254, file: !2, line: 2308, type: !692)
!12254 = distinct !DILexicalBlock(scope: !12255, file: !2, line: 2308, column: 17)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !2, line: 2308, column: 17)
!12256 = distinct !DILexicalBlock(scope: !12257, file: !2, line: 2308, column: 17)
!12257 = distinct !DILexicalBlock(scope: !12222, file: !2, line: 2308, column: 17)
!12258 = !DILocalVariable(name: "__tmpstr", scope: !12259, file: !2, line: 2308, type: !924)
!12259 = distinct !DILexicalBlock(scope: !12260, file: !2, line: 2308, column: 17)
!12260 = distinct !DILexicalBlock(scope: !12261, file: !2, line: 2308, column: 17)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !2, line: 2308, column: 17)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !2, line: 2308, column: 17)
!12263 = distinct !DILexicalBlock(scope: !12254, file: !2, line: 2308, column: 17)
!12264 = !DILocalVariable(name: "_logname", scope: !12265, file: !2, line: 2308, type: !924)
!12265 = distinct !DILexicalBlock(scope: !12259, file: !2, line: 2308, column: 17)
!12266 = !DILocalVariable(name: "_logname", scope: !12267, file: !2, line: 2317, type: !924)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !2, line: 2317, column: 9)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !2, line: 2317, column: 9)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !2, line: 2317, column: 9)
!12270 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2317, column: 9)
!12271 = !DILabel(scope: !12161, name: "err_parse", file: !2, line: 2329)
!12272 = !DILabel(scope: !12161, name: "err", file: !2, line: 2331)
!12273 = !DILocation(line: 2275, column: 62, scope: !12161)
!12274 = !DILocation(line: 2276, column: 69, scope: !12161)
!12275 = !DILocation(line: 2277, column: 70, scope: !12161)
!12276 = !DILocation(line: 2278, column: 66, scope: !12161)
!12277 = !DILocation(line: 2279, column: 66, scope: !12161)
!12278 = !DILocation(line: 2280, column: 56, scope: !12161)
!12279 = !DILocation(line: 2281, column: 9, scope: !12161)
!12280 = !DILocation(line: 2281, column: 19, scope: !12161)
!12281 = !DILocation(line: 2282, column: 9, scope: !12161)
!12282 = !DILocation(line: 2282, column: 17, scope: !12161)
!12283 = !DILocation(line: 2283, column: 9, scope: !12161)
!12284 = !DILocation(line: 2283, column: 17, scope: !12161)
!12285 = !DILocation(line: 2284, column: 9, scope: !12161)
!12286 = !DILocation(line: 2284, column: 13, scope: !12161)
!12287 = !DILocation(line: 2285, column: 9, scope: !12161)
!12288 = !DILocation(line: 2285, column: 15, scope: !12161)
!12289 = !DILocation(line: 2286, column: 9, scope: !12161)
!12290 = !DILocation(line: 2286, column: 16, scope: !12161)
!12291 = !DILocation(line: 2286, column: 21, scope: !12161)
!12292 = !DILocation(line: 2288, column: 13, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2288, column: 13)
!12294 = !DILocation(line: 2288, column: 17, scope: !12293)
!12295 = !DILocation(line: 2288, column: 13, scope: !12161)
!12296 = !DILocation(line: 2289, column: 17, scope: !12293)
!12297 = !DILocation(line: 2291, column: 13, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2291, column: 13)
!12299 = !DILocation(line: 2291, column: 13, scope: !12161)
!12300 = !DILocation(line: 2292, column: 17, scope: !12298)
!12301 = !DILocation(line: 2294, column: 9, scope: !12161)
!12302 = !DILocation(line: 2294, column: 9, scope: !12177)
!12303 = !DILocation(line: 2294, column: 9, scope: !12181)
!12304 = !DILocation(line: 2294, column: 9, scope: !12184)
!12305 = !DILocation(line: 2294, column: 9, scope: !12183)
!12306 = !DILocation(line: 2294, column: 9, scope: !12190)
!12307 = !DILocation(line: 2294, column: 9, scope: !12189)
!12308 = !DILocation(line: 2294, column: 9, scope: !12187)
!12309 = !DILocation(line: 2294, column: 9, scope: !12188)
!12310 = !DILocation(line: 2294, column: 9, scope: !12186)
!12311 = !DILocation(line: 2294, column: 9, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12186, file: !2, line: 2294, column: 9)
!12313 = !DILocation(line: 2294, column: 9, scope: !12192)
!12314 = !DILocation(line: 2295, column: 9, scope: !12161)
!12315 = !DILocation(line: 2295, column: 9, scope: !12194)
!12316 = !DILocation(line: 2295, column: 9, scope: !12197)
!12317 = !DILocation(line: 2295, column: 9, scope: !12200)
!12318 = !DILocation(line: 2295, column: 9, scope: !12199)
!12319 = !DILocation(line: 2295, column: 9, scope: !12206)
!12320 = !DILocation(line: 2295, column: 9, scope: !12205)
!12321 = !DILocation(line: 2295, column: 9, scope: !12203)
!12322 = !DILocation(line: 2295, column: 9, scope: !12204)
!12323 = !DILocation(line: 2295, column: 9, scope: !12202)
!12324 = !DILocation(line: 2295, column: 9, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12202, file: !2, line: 2295, column: 9)
!12326 = !DILocation(line: 2295, column: 9, scope: !12208)
!12327 = !DILocation(line: 2297, column: 13, scope: !12214)
!12328 = !DILocation(line: 2297, column: 21, scope: !12214)
!12329 = !DILocation(line: 2297, column: 25, scope: !12214)
!12330 = !DILocation(line: 2297, column: 28, scope: !12214)
!12331 = !DILocation(line: 2297, column: 36, scope: !12214)
!12332 = !DILocation(line: 2297, column: 13, scope: !12161)
!12333 = !DILocation(line: 2298, column: 17, scope: !12214)
!12334 = !DILocation(line: 2298, column: 17, scope: !12212)
!12335 = !DILocation(line: 2298, column: 17, scope: !12213)
!12336 = !DILocation(line: 2298, column: 17, scope: !12211)
!12337 = !DILocation(line: 2298, column: 17, scope: !12210)
!12338 = !DILocation(line: 2298, column: 17, scope: !12216)
!12339 = !DILocation(line: 2302, column: 18, scope: !12161)
!12340 = !DILocation(line: 2302, column: 16, scope: !12161)
!12341 = !DILocation(line: 2303, column: 18, scope: !12161)
!12342 = !DILocation(line: 2303, column: 16, scope: !12161)
!12343 = !DILocation(line: 2304, column: 10, scope: !12161)
!12344 = !DILocation(line: 2304, column: 16, scope: !12161)
!12345 = !DILocation(line: 2306, column: 16, scope: !12220)
!12346 = !DILocation(line: 2306, column: 14, scope: !12220)
!12347 = !DILocation(line: 2306, column: 21, scope: !12219)
!12348 = !DILocation(line: 2306, column: 25, scope: !12219)
!12349 = !DILocation(line: 2306, column: 23, scope: !12219)
!12350 = !DILocation(line: 2306, column: 9, scope: !12220)
!12351 = !DILocation(line: 2307, column: 17, scope: !12218)
!12352 = !DILocation(line: 2307, column: 33, scope: !12218)
!12353 = !DILocation(line: 2308, column: 17, scope: !12218)
!12354 = !DILocation(line: 2308, column: 17, scope: !12222)
!12355 = !DILocation(line: 2308, column: 17, scope: !12225)
!12356 = !DILocation(line: 2308, column: 17, scope: !12224)
!12357 = !DILocation(line: 2308, column: 17, scope: !12227)
!12358 = !DILocation(line: 2308, column: 17, scope: !12234)
!12359 = !DILocation(line: 2308, column: 17, scope: !12232)
!12360 = !DILocation(line: 2308, column: 17, scope: !12233)
!12361 = !DILocation(line: 2308, column: 17, scope: !12231)
!12362 = !DILocation(line: 2308, column: 17, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12231, file: !2, line: 2308, column: 17)
!12364 = !DILocation(line: 2308, column: 17, scope: !12236)
!12365 = !DILocation(line: 2308, column: 17, scope: !12239)
!12366 = !DILocation(line: 2308, column: 17, scope: !12238)
!12367 = !DILocation(line: 2308, column: 17, scope: !12241)
!12368 = !DILocation(line: 2308, column: 17, scope: !12244)
!12369 = !DILocation(line: 2308, column: 17, scope: !12243)
!12370 = !DILocation(line: 2308, column: 17, scope: !12250)
!12371 = !DILocation(line: 2308, column: 17, scope: !12249)
!12372 = !DILocation(line: 2308, column: 17, scope: !12247)
!12373 = !DILocation(line: 2308, column: 17, scope: !12248)
!12374 = !DILocation(line: 2308, column: 17, scope: !12246)
!12375 = !DILocation(line: 2308, column: 17, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12246, file: !2, line: 2308, column: 17)
!12377 = !DILocation(line: 2308, column: 17, scope: !12252)
!12378 = !DILocation(line: 2308, column: 17, scope: !12257)
!12379 = !DILocation(line: 2308, column: 17, scope: !12256)
!12380 = !DILocation(line: 2308, column: 17, scope: !12255)
!12381 = !DILocation(line: 2308, column: 17, scope: !12254)
!12382 = !DILocation(line: 2308, column: 17, scope: !12263)
!12383 = !DILocation(line: 2308, column: 17, scope: !12262)
!12384 = !DILocation(line: 2308, column: 17, scope: !12260)
!12385 = !DILocation(line: 2308, column: 17, scope: !12261)
!12386 = !DILocation(line: 2308, column: 17, scope: !12259)
!12387 = !DILocation(line: 2308, column: 17, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12259, file: !2, line: 2308, column: 17)
!12389 = !DILocation(line: 2308, column: 17, scope: !12265)
!12390 = !DILocation(line: 2310, column: 24, scope: !12218)
!12391 = !DILocation(line: 2310, column: 21, scope: !12218)
!12392 = !DILocation(line: 2313, column: 21, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12218, file: !2, line: 2313, column: 21)
!12394 = !DILocation(line: 2313, column: 28, scope: !12393)
!12395 = !DILocation(line: 2313, column: 25, scope: !12393)
!12396 = !DILocation(line: 2313, column: 21, scope: !12218)
!12397 = !DILocation(line: 2314, column: 25, scope: !12393)
!12398 = !DILocation(line: 2315, column: 9, scope: !12219)
!12399 = !DILocation(line: 2315, column: 9, scope: !12218)
!12400 = !DILocation(line: 2306, column: 35, scope: !12219)
!12401 = !DILocation(line: 2306, column: 9, scope: !12219)
!12402 = distinct !{!12402, !12350, !12403, !4095}
!12403 = !DILocation(line: 2315, column: 9, scope: !12220)
!12404 = !DILocation(line: 2317, column: 9, scope: !12161)
!12405 = !DILocation(line: 2317, column: 9, scope: !12269)
!12406 = !DILocation(line: 2317, column: 9, scope: !12270)
!12407 = !DILocation(line: 2317, column: 9, scope: !12268)
!12408 = !DILocation(line: 2317, column: 9, scope: !12267)
!12409 = !DILocation(line: 2320, column: 13, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12161, file: !2, line: 2320, column: 13)
!12411 = !DILocation(line: 2320, column: 13, scope: !12161)
!12412 = !DILocation(line: 2321, column: 23, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12410, file: !2, line: 2320, column: 24)
!12414 = !DILocation(line: 2321, column: 21, scope: !12413)
!12415 = !DILocation(line: 2322, column: 17, scope: !12413)
!12416 = !DILocation(line: 2326, column: 38, scope: !12161)
!12417 = !DILocation(line: 2326, column: 9, scope: !12161)
!12418 = !DILocation(line: 2327, column: 9, scope: !12161)
!12419 = !DILocation(line: 2329, column: 1, scope: !12161)
!12420 = !DILocation(line: 2330, column: 15, scope: !12161)
!12421 = !DILocation(line: 2330, column: 22, scope: !12161)
!12422 = !DILocation(line: 2330, column: 13, scope: !12161)
!12423 = !DILocation(line: 2330, column: 9, scope: !12161)
!12424 = !DILocation(line: 2331, column: 1, scope: !12161)
!12425 = !DILocation(line: 2332, column: 30, scope: !12161)
!12426 = !DILocation(line: 2335, column: 30, scope: !12161)
!12427 = !DILocation(line: 2335, column: 35, scope: !12161)
!12428 = !DILocation(line: 2335, column: 43, scope: !12161)
!12429 = !DILocation(line: 2335, column: 51, scope: !12161)
!12430 = !DILocation(line: 2335, column: 56, scope: !12161)
!12431 = !DILocation(line: 2336, column: 47, scope: !12161)
!12432 = !DILocation(line: 2336, column: 30, scope: !12161)
!12433 = !DILocation(line: 2336, column: 53, scope: !12161)
!12434 = !DILocation(line: 2332, column: 9, scope: !12161)
!12435 = !DILocation(line: 2337, column: 1, scope: !12161)
!12436 = !DISubprogram(name: "rd_kafka_sasl_client_new", scope: !8840, file: !8840, line: 44, type: !12437, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12437 = !DISubroutineType(types: !12438)
!12438 = !{!126, !495, !559, !692}
!12439 = !DISubprogram(name: "rd_slice_ensure_contig", scope: !1709, file: !1709, line: 337, type: !12440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12440 = !DISubroutineType(types: !12441)
!12441 = !{!709, !6901, !692}
!12442 = !DISubprogram(name: "rd_kafka_transport_send", scope: !497, file: !497, line: 45, type: !12443, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12443 = !DISubroutineType(types: !12444)
!12444 = !{!2858, !495, !6901, !559, !692}
!12445 = !DISubprogram(name: "rd_hdr_histogram_record", scope: !2428, file: !2428, line: 78, type: !12446, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12446 = !DISubroutineType(types: !12447)
!12447 = !{!126, !2426, !489}
!12448 = distinct !DISubprogram(name: "rd_kafka_rkt_get_lw", scope: !298, file: !298, line: 70, type: !12449, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12451)
!12449 = !DISubroutineType(types: !12450)
!12450 = !{!2865, !406}
!12451 = !{!12452}
!12452 = !DILocalVariable(name: "rkt", arg: 1, scope: !12448, file: !298, line: 70, type: !406)
!12453 = !DILocation(line: 70, column: 39, scope: !12448)
!12454 = !DILocation(line: 71, column: 32, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12448, file: !298, line: 71, column: 13)
!12456 = !DILocation(line: 71, column: 13, scope: !12455)
!12457 = !DILocation(line: 71, column: 13, scope: !12448)
!12458 = !DILocation(line: 72, column: 24, scope: !12455)
!12459 = !DILocation(line: 72, column: 17, scope: !12455)
!12460 = !DILocation(line: 73, column: 9, scope: !12448)
!12461 = !DILocation(line: 74, column: 1, scope: !12448)
!12462 = distinct !DISubprogram(name: "rd_kafka_lwtopic_keep", scope: !298, file: !298, line: 80, type: !12463, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12465)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{null, !2865}
!12465 = !{!12466}
!12466 = !DILocalVariable(name: "lrkt", arg: 1, scope: !12462, file: !298, line: 80, type: !2865)
!12467 = !DILocation(line: 80, column: 43, scope: !12462)
!12468 = !DILocation(line: 81, column: 9, scope: !12462)
!12469 = !DILocation(line: 82, column: 1, scope: !12462)
!12470 = distinct !DISubprogram(name: "rd_kafka_rkt_is_lw", scope: !298, file: !298, line: 63, type: !12471, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12473)
!12471 = !DISubroutineType(types: !12472)
!12472 = !{!561, !1188}
!12473 = !{!12474, !12475}
!12474 = !DILocalVariable(name: "app_rkt", arg: 1, scope: !12470, file: !298, line: 63, type: !1188)
!12475 = !DILocalVariable(name: "lrkt", scope: !12470, file: !298, line: 64, type: !2873)
!12476 = !DILocation(line: 63, column: 44, scope: !12470)
!12477 = !DILocation(line: 64, column: 9, scope: !12470)
!12478 = !DILocation(line: 64, column: 35, scope: !12470)
!12479 = !DILocation(line: 64, column: 42, scope: !12470)
!12480 = !DILocation(line: 65, column: 24, scope: !12470)
!12481 = !DILocation(line: 65, column: 30, scope: !12470)
!12482 = !DILocation(line: 65, column: 17, scope: !12470)
!12483 = !DILocation(line: 65, column: 16, scope: !12470)
!12484 = !DILocation(line: 66, column: 1, scope: !12470)
!12485 = !DILocation(line: 65, column: 9, scope: !12470)
!12486 = !DISubprogram(name: "memcmp", scope: !6937, file: !6937, line: 64, type: !12487, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12487 = !DISubroutineType(types: !12488)
!12488 = !{!126, !709, !709, !692}
!12489 = !DISubprogram(name: "rd_kafka_msg_destroy", scope: !1825, file: !1825, line: 236, type: !12490, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12490 = !DISubroutineType(types: !12491)
!12491 = !{null, !586, !8588}
!12492 = !DISubprogram(name: "free", scope: !4025, file: !4025, line: 555, type: !610, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12493 = !DISubprogram(name: "rd_hdr_histogram_destroy", scope: !2428, file: !2428, line: 61, type: !12494, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{null, !2426}
!12496 = !DISubprogram(name: "calloc", scope: !4025, file: !4025, line: 543, type: !9284, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12497 = !DISubprogram(name: "strdup", scope: !6937, file: !6937, line: 187, type: !9368, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12498 = !DISubprogram(name: "rd_hdr_histogram_new", scope: !2428, file: !2428, line: 72, type: !12499, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12499 = !DISubroutineType(types: !12500)
!12500 = !{!2426, !489, !489, !126}
!12501 = !DISubprogram(name: "pipe", scope: !1368, file: !1368, line: 437, type: !12502, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12502 = !DISubroutineType(types: !12503)
!12503 = !{!126, !1067}
!12504 = distinct !DISubprogram(name: "rd_fd_set_nonblocking", scope: !2292, file: !2292, line: 214, type: !6225, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12505)
!12505 = !{!12506, !12507}
!12506 = !DILocalVariable(name: "fd", arg: 1, scope: !12504, file: !2292, line: 214, type: !126)
!12507 = !DILocalVariable(name: "fl", scope: !12504, file: !2292, line: 215, type: !126)
!12508 = !DILocation(line: 214, column: 48, scope: !12504)
!12509 = !DILocation(line: 215, column: 9, scope: !12504)
!12510 = !DILocation(line: 215, column: 13, scope: !12504)
!12511 = !DILocation(line: 215, column: 24, scope: !12504)
!12512 = !DILocation(line: 215, column: 18, scope: !12504)
!12513 = !DILocation(line: 216, column: 13, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12504, file: !2292, line: 216, column: 13)
!12515 = !DILocation(line: 216, column: 16, scope: !12514)
!12516 = !DILocation(line: 216, column: 22, scope: !12514)
!12517 = !DILocation(line: 216, column: 31, scope: !12514)
!12518 = !DILocation(line: 216, column: 44, scope: !12514)
!12519 = !DILocation(line: 216, column: 47, scope: !12514)
!12520 = !DILocation(line: 216, column: 25, scope: !12514)
!12521 = !DILocation(line: 216, column: 61, scope: !12514)
!12522 = !DILocation(line: 216, column: 13, scope: !12504)
!12523 = !DILocation(line: 217, column: 24, scope: !12514)
!12524 = !DILocation(line: 217, column: 17, scope: !12514)
!12525 = !DILocation(line: 218, column: 9, scope: !12504)
!12526 = !DILocation(line: 219, column: 1, scope: !12504)
!12527 = !DISubprogram(name: "rd_kafka_set_thread_name", scope: !589, file: !589, line: 967, type: !12528, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{null, !365, null}
!12530 = !DISubprogram(name: "rd_kafka_set_thread_sysname", scope: !589, file: !589, line: 968, type: !12528, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12531 = !DISubprogram(name: "rd_kafka_interceptors_on_thread_start", scope: !4435, file: !4435, line: 80, type: !12532, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12532 = !DISubroutineType(types: !12533)
!12533 = !{null, !586, !12534}
!12534 = !DIDerivedType(tag: DW_TAG_typedef, name: "rd_kafka_thread_type_t", file: !125, line: 5274, baseType: !2751)
!12535 = distinct !DISubprogram(name: "rd_kafka_broker_needs_connection", scope: !2, file: !2, line: 119, type: !6050, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12536)
!12536 = !{!12537}
!12537 = !DILocalVariable(name: "rkb", arg: 1, scope: !12535, file: !2, line: 119, type: !412)
!12538 = !DILocation(line: 119, column: 74, scope: !12535)
!12539 = !DILocation(line: 120, column: 16, scope: !12535)
!12540 = !DILocation(line: 120, column: 21, scope: !12535)
!12541 = !DILocation(line: 120, column: 31, scope: !12535)
!12542 = !DILocation(line: 120, column: 61, scope: !12535)
!12543 = !DILocation(line: 121, column: 17, scope: !12535)
!12544 = !DILocation(line: 121, column: 51, scope: !12535)
!12545 = !DILocation(line: 122, column: 43, scope: !12535)
!12546 = !DILocation(line: 122, column: 48, scope: !12535)
!12547 = !DILocation(line: 122, column: 17, scope: !12535)
!12548 = !DILocation(line: 122, column: 56, scope: !12535)
!12549 = !DILocation(line: 123, column: 18, scope: !12535)
!12550 = !DILocation(line: 123, column: 23, scope: !12535)
!12551 = !DILocation(line: 123, column: 31, scope: !12535)
!12552 = !DILocation(line: 123, column: 39, scope: !12535)
!12553 = !DILocation(line: 123, column: 58, scope: !12535)
!12554 = !DILocation(line: 124, column: 61, scope: !12535)
!12555 = !DILocation(line: 124, column: 17, scope: !12535)
!12556 = !DILocation(line: 0, scope: !12535)
!12557 = !DILocation(line: 120, column: 9, scope: !12535)
!12558 = distinct !DISubprogram(name: "rd_kafka_broker_serve", scope: !2, file: !2, line: 4367, type: !4116, scopeLine: 4367, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12559)
!12559 = !{!12560, !12561, !12562}
!12560 = !DILocalVariable(name: "rkb", arg: 1, scope: !12558, file: !2, line: 4367, type: !412)
!12561 = !DILocalVariable(name: "timeout_ms", arg: 2, scope: !12558, file: !2, line: 4367, type: !126)
!12562 = !DILocalVariable(name: "abs_timeout", scope: !12558, file: !2, line: 4368, type: !487)
!12563 = !DILocation(line: 4367, column: 54, scope: !12558)
!12564 = !DILocation(line: 4367, column: 63, scope: !12558)
!12565 = !DILocation(line: 4368, column: 9, scope: !12558)
!12566 = !DILocation(line: 4368, column: 17, scope: !12558)
!12567 = !DILocation(line: 4370, column: 13, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12558, file: !2, line: 4370, column: 13)
!12569 = !DILocation(line: 4370, column: 13, scope: !12558)
!12570 = !DILocation(line: 4372, column: 28, scope: !12568)
!12571 = !DILocation(line: 4372, column: 17, scope: !12568)
!12572 = !DILocation(line: 4373, column: 18, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12568, file: !2, line: 4373, column: 18)
!12574 = !DILocation(line: 4373, column: 29, scope: !12573)
!12575 = !DILocation(line: 4373, column: 18, scope: !12568)
!12576 = !DILocation(line: 4374, column: 28, scope: !12573)
!12577 = !DILocation(line: 4374, column: 17, scope: !12573)
!12578 = !DILocation(line: 4376, column: 39, scope: !12558)
!12579 = !DILocation(line: 4376, column: 23, scope: !12558)
!12580 = !DILocation(line: 4376, column: 21, scope: !12558)
!12581 = !DILocation(line: 4378, column: 9, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12583, file: !2, line: 4378, column: 9)
!12583 = distinct !DILexicalBlock(scope: !12558, file: !2, line: 4378, column: 9)
!12584 = !DILocation(line: 4378, column: 9, scope: !12583)
!12585 = !DILocation(line: 4387, column: 30, scope: !12558)
!12586 = !DILocation(line: 4387, column: 35, scope: !12558)
!12587 = !DILocation(line: 4387, column: 47, scope: !12558)
!12588 = !DILocation(line: 4387, column: 13, scope: !12558)
!12589 = !DILocation(line: 4387, column: 57, scope: !12558)
!12590 = !DILocation(line: 4386, column: 9, scope: !12558)
!12591 = !DILocation(line: 4386, column: 14, scope: !12558)
!12592 = !DILocation(line: 4386, column: 30, scope: !12558)
!12593 = !DILocation(line: 4386, column: 39, scope: !12558)
!12594 = !DILocation(line: 4389, column: 13, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12558, file: !2, line: 4389, column: 13)
!12596 = !DILocation(line: 4389, column: 18, scope: !12595)
!12597 = !DILocation(line: 4389, column: 29, scope: !12595)
!12598 = !DILocation(line: 4389, column: 13, scope: !12558)
!12599 = !DILocation(line: 4390, column: 48, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12595, file: !2, line: 4389, column: 51)
!12601 = !DILocation(line: 4390, column: 53, scope: !12600)
!12602 = !DILocation(line: 4390, column: 17, scope: !12600)
!12603 = !DILocation(line: 4391, column: 17, scope: !12600)
!12604 = !DILocation(line: 4394, column: 13, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12558, file: !2, line: 4394, column: 13)
!12606 = !DILocation(line: 4394, column: 18, scope: !12605)
!12607 = !DILocation(line: 4394, column: 26, scope: !12605)
!12608 = !DILocation(line: 4394, column: 34, scope: !12605)
!12609 = !DILocation(line: 4394, column: 13, scope: !12558)
!12610 = !DILocation(line: 4395, column: 48, scope: !12605)
!12611 = !DILocation(line: 4395, column: 53, scope: !12605)
!12612 = !DILocation(line: 4395, column: 17, scope: !12605)
!12613 = !DILocation(line: 4396, column: 18, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12605, file: !2, line: 4396, column: 18)
!12615 = !DILocation(line: 4396, column: 23, scope: !12614)
!12616 = !DILocation(line: 4396, column: 31, scope: !12614)
!12617 = !DILocation(line: 4396, column: 39, scope: !12614)
!12618 = !DILocation(line: 4396, column: 18, scope: !12605)
!12619 = !DILocation(line: 4397, column: 48, scope: !12614)
!12620 = !DILocation(line: 4397, column: 53, scope: !12614)
!12621 = !DILocation(line: 4397, column: 17, scope: !12614)
!12622 = !DILocation(line: 4399, column: 13, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12558, file: !2, line: 4399, column: 13)
!12624 = !DILocation(line: 4399, column: 18, scope: !12623)
!12625 = !DILocation(line: 4399, column: 26, scope: !12623)
!12626 = !DILocation(line: 4399, column: 34, scope: !12623)
!12627 = !{!4141, !3941, i64 704}
!12628 = !DILocation(line: 4399, column: 58, scope: !12623)
!12629 = !DILocation(line: 4400, column: 13, scope: !12623)
!12630 = !DILocation(line: 4400, column: 18, scope: !12623)
!12631 = !DILocation(line: 4400, column: 28, scope: !12623)
!12632 = !DILocation(line: 4399, column: 13, scope: !12558)
!12633 = !DILocation(line: 4401, column: 44, scope: !12623)
!12634 = !DILocation(line: 4401, column: 17, scope: !12623)
!12635 = !DILocation(line: 4402, column: 1, scope: !12558)
!12636 = !DISubprogram(name: "rd_kafka_sasl_ready", scope: !8840, file: !8840, line: 54, type: !12637, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12637 = !DISubroutineType(types: !12638)
!12638 = !{!561, !586}
!12639 = distinct !DISubprogram(name: "rd_kafka_broker_reconnect_backoff", scope: !2, file: !2, line: 2119, type: !12640, scopeLine: 2119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12642)
!12640 = !DISubroutineType(types: !12641)
!12641 = !{!126, !9841, !487}
!12642 = !{!12643, !12644, !12645}
!12643 = !DILocalVariable(name: "rkb", arg: 1, scope: !12639, file: !2, line: 2119, type: !9841)
!12644 = !DILocalVariable(name: "now", arg: 2, scope: !12639, file: !2, line: 2119, type: !487)
!12645 = !DILocalVariable(name: "remains", scope: !12639, file: !2, line: 2120, type: !487)
!12646 = !DILocation(line: 2119, column: 60, scope: !12639)
!12647 = !DILocation(line: 2119, column: 73, scope: !12639)
!12648 = !DILocation(line: 2120, column: 9, scope: !12639)
!12649 = !DILocation(line: 2120, column: 17, scope: !12639)
!12650 = !DILocation(line: 2122, column: 13, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12639, file: !2, line: 2122, column: 13)
!12652 = !{!3939, !3942, i64 2416}
!12653 = !DILocation(line: 2122, column: 13, scope: !12639)
!12654 = !DILocation(line: 2123, column: 17, scope: !12651)
!12655 = !DILocation(line: 2125, column: 19, scope: !12639)
!12656 = !DILocation(line: 2125, column: 24, scope: !12639)
!12657 = !DILocation(line: 2125, column: 43, scope: !12639)
!12658 = !DILocation(line: 2125, column: 41, scope: !12639)
!12659 = !DILocation(line: 2125, column: 17, scope: !12639)
!12660 = !DILocation(line: 2126, column: 13, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12639, file: !2, line: 2126, column: 13)
!12662 = !DILocation(line: 2126, column: 21, scope: !12661)
!12663 = !DILocation(line: 2126, column: 13, scope: !12639)
!12664 = !DILocation(line: 2127, column: 17, scope: !12661)
!12665 = !DILocation(line: 2129, column: 22, scope: !12639)
!12666 = !DILocation(line: 2129, column: 30, scope: !12639)
!12667 = !DILocation(line: 2129, column: 16, scope: !12639)
!12668 = !DILocation(line: 2129, column: 9, scope: !12639)
!12669 = !DILocation(line: 2130, column: 1, scope: !12639)
!12670 = distinct !DISubprogram(name: "rd_kafka_broker_connect", scope: !2, file: !2, line: 2188, type: !6050, scopeLine: 2188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12671)
!12671 = !{!12672, !12673, !12674, !12675, !12676, !12677, !12682}
!12672 = !DILocalVariable(name: "rkb", arg: 1, scope: !12670, file: !2, line: 2188, type: !412)
!12673 = !DILocalVariable(name: "sinx", scope: !12670, file: !2, line: 2189, type: !492)
!12674 = !DILocalVariable(name: "errstr", scope: !12670, file: !2, line: 2190, type: !2502)
!12675 = !DILocalVariable(name: "nodename", scope: !12670, file: !2, line: 2191, type: !924)
!12676 = !DILocalVariable(name: "reset_cached_addr", scope: !12670, file: !2, line: 2192, type: !561)
!12677 = !DILocalVariable(name: "_logname", scope: !12678, file: !2, line: 2194, type: !924)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !2, line: 2194, column: 9)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !2, line: 2194, column: 9)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !2, line: 2194, column: 9)
!12681 = distinct !DILexicalBlock(scope: !12670, file: !2, line: 2194, column: 9)
!12682 = !DILocalVariable(name: "_logname", scope: !12683, file: !2, line: 2213, type: !924)
!12683 = distinct !DILexicalBlock(scope: !12684, file: !2, line: 2213, column: 17)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !2, line: 2213, column: 17)
!12685 = distinct !DILexicalBlock(scope: !12686, file: !2, line: 2213, column: 17)
!12686 = distinct !DILexicalBlock(scope: !12687, file: !2, line: 2213, column: 17)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !2, line: 2212, column: 25)
!12688 = distinct !DILexicalBlock(scope: !12670, file: !2, line: 2212, column: 13)
!12689 = !DILocation(line: 2188, column: 55, scope: !12670)
!12690 = !DILocation(line: 2189, column: 9, scope: !12670)
!12691 = !DILocation(line: 2189, column: 34, scope: !12670)
!12692 = !DILocation(line: 2190, column: 9, scope: !12670)
!12693 = !DILocation(line: 2190, column: 14, scope: !12670)
!12694 = !DILocation(line: 2191, column: 9, scope: !12670)
!12695 = !DILocation(line: 2191, column: 14, scope: !12670)
!12696 = !DILocation(line: 2192, column: 9, scope: !12670)
!12697 = !DILocation(line: 2192, column: 19, scope: !12670)
!12698 = !DILocation(line: 2194, column: 9, scope: !12670)
!12699 = !DILocation(line: 2194, column: 9, scope: !12680)
!12700 = !DILocation(line: 2194, column: 9, scope: !12681)
!12701 = !DILocation(line: 2194, column: 9, scope: !12679)
!12702 = !DILocation(line: 2194, column: 9, scope: !12678)
!12703 = !DILocation(line: 2197, column: 26, scope: !12670)
!12704 = !DILocation(line: 2197, column: 31, scope: !12670)
!12705 = !DILocation(line: 2197, column: 37, scope: !12670)
!12706 = !DILocation(line: 2197, column: 9, scope: !12670)
!12707 = !DILocation(line: 2199, column: 9, scope: !12670)
!12708 = !DILocation(line: 2200, column: 20, scope: !12670)
!12709 = !DILocation(line: 2200, column: 30, scope: !12670)
!12710 = !DILocation(line: 2200, column: 35, scope: !12670)
!12711 = !DILocation(line: 2200, column: 9, scope: !12670)
!12712 = !DILocation(line: 2204, column: 30, scope: !12670)
!12713 = !DILocation(line: 2204, column: 35, scope: !12670)
!12714 = !{!3939, !3941, i64 2348}
!12715 = !DILocation(line: 2204, column: 56, scope: !12670)
!12716 = !DILocation(line: 2204, column: 61, scope: !12670)
!12717 = !DILocation(line: 2204, column: 53, scope: !12670)
!12718 = !DILocation(line: 2204, column: 29, scope: !12670)
!12719 = !DILocation(line: 2204, column: 27, scope: !12670)
!12720 = !DILocation(line: 2205, column: 34, scope: !12670)
!12721 = !DILocation(line: 2205, column: 39, scope: !12670)
!12722 = !DILocation(line: 2205, column: 9, scope: !12670)
!12723 = !DILocation(line: 2205, column: 14, scope: !12670)
!12724 = !DILocation(line: 2205, column: 32, scope: !12670)
!12725 = !DILocation(line: 2208, column: 13, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12670, file: !2, line: 2208, column: 13)
!12727 = !DILocation(line: 2208, column: 13, scope: !12670)
!12728 = !DILocation(line: 2209, column: 43, scope: !12726)
!12729 = !DILocation(line: 2209, column: 17, scope: !12726)
!12730 = !DILocation(line: 2210, column: 9, scope: !12670)
!12731 = !DILocation(line: 2212, column: 14, scope: !12688)
!12732 = !DILocation(line: 2212, column: 13, scope: !12670)
!12733 = !DILocation(line: 2213, column: 17, scope: !12687)
!12734 = !DILocation(line: 2213, column: 17, scope: !12685)
!12735 = !DILocation(line: 2213, column: 17, scope: !12686)
!12736 = !DILocation(line: 2213, column: 17, scope: !12684)
!12737 = !DILocation(line: 2213, column: 17, scope: !12683)
!12738 = !DILocation(line: 2215, column: 17, scope: !12687)
!12739 = !DILocation(line: 2218, column: 50, scope: !12670)
!12740 = !DILocation(line: 2218, column: 56, scope: !12670)
!12741 = !DILocation(line: 2218, column: 61, scope: !12670)
!12742 = !DILocation(line: 2218, column: 69, scope: !12670)
!12743 = !DILocation(line: 2219, column: 50, scope: !12670)
!12744 = !DILocation(line: 2218, column: 9, scope: !12670)
!12745 = !DILocation(line: 2221, column: 37, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12670, file: !2, line: 2221, column: 13)
!12747 = !DILocation(line: 2221, column: 42, scope: !12746)
!12748 = !DILocation(line: 2221, column: 52, scope: !12746)
!12749 = !DILocation(line: 2221, column: 13, scope: !12746)
!12750 = !DILocation(line: 2221, column: 71, scope: !12746)
!12751 = !DILocation(line: 2221, column: 13, scope: !12670)
!12752 = !DILocation(line: 2222, column: 17, scope: !12746)
!12753 = !DILocation(line: 2224, column: 38, scope: !12670)
!12754 = !DILocation(line: 2224, column: 43, scope: !12670)
!12755 = !DILocation(line: 2224, column: 16, scope: !12670)
!12756 = !DILocation(line: 2224, column: 14, scope: !12670)
!12757 = !DILocation(line: 2226, column: 9, scope: !12670)
!12758 = !DILocation(line: 2226, column: 9, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !2, line: 2226, column: 9)
!12760 = distinct !DILexicalBlock(scope: !12670, file: !2, line: 2226, column: 9)
!12761 = !DILocation(line: 2226, column: 9, scope: !12760)
!12762 = !DILocation(line: 2229, column: 19, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12670, file: !2, line: 2228, column: 13)
!12764 = !DILocation(line: 2229, column: 24, scope: !12763)
!12765 = !DILocation(line: 2229, column: 30, scope: !12763)
!12766 = !DILocation(line: 2228, column: 36, scope: !12763)
!12767 = !DILocation(line: 2228, column: 15, scope: !12763)
!12768 = !DILocation(line: 2228, column: 20, scope: !12763)
!12769 = !DILocation(line: 2228, column: 34, scope: !12763)
!12770 = !DILocation(line: 2228, column: 13, scope: !12670)
!12771 = !DILocation(line: 2230, column: 38, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12763, file: !2, line: 2229, column: 56)
!12773 = !DILocation(line: 2231, column: 44, scope: !12772)
!12774 = !DILocation(line: 2230, column: 17, scope: !12772)
!12775 = !DILocation(line: 2232, column: 17, scope: !12772)
!12776 = !DILocation(line: 2235, column: 31, scope: !12670)
!12777 = !DILocation(line: 2235, column: 9, scope: !12670)
!12778 = !DILocation(line: 2235, column: 14, scope: !12670)
!12779 = !DILocation(line: 2235, column: 29, scope: !12670)
!12780 = !DILocation(line: 2237, column: 9, scope: !12670)
!12781 = !DILocation(line: 2238, column: 1, scope: !12670)
!12782 = distinct !DISubprogram(name: "rd_kafka_broker_addresses_exhausted", scope: !2, file: !2, line: 4413, type: !12783, scopeLine: 4413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12785)
!12783 = !DISubroutineType(types: !12784)
!12784 = !{!561, !9841}
!12785 = !{!12786}
!12786 = !DILocalVariable(name: "rkb", arg: 1, scope: !12782, file: !2, line: 4413, type: !9841)
!12787 = !DILocation(line: 4413, column: 62, scope: !12782)
!12788 = !DILocation(line: 4414, column: 17, scope: !12782)
!12789 = !DILocation(line: 4414, column: 22, scope: !12782)
!12790 = !DILocation(line: 4414, column: 31, scope: !12782)
!12791 = !DILocation(line: 4414, column: 34, scope: !12782)
!12792 = !DILocation(line: 4414, column: 39, scope: !12782)
!12793 = !DILocation(line: 4414, column: 49, scope: !12782)
!12794 = !DILocation(line: 4414, column: 58, scope: !12782)
!12795 = !DILocation(line: 4414, column: 63, scope: !12782)
!12796 = !DILocation(line: 4415, column: 16, scope: !12782)
!12797 = !DILocation(line: 4415, column: 21, scope: !12782)
!12798 = !DILocation(line: 4415, column: 31, scope: !12782)
!12799 = !DILocation(line: 4415, column: 41, scope: !12782)
!12800 = !DILocation(line: 4415, column: 48, scope: !12782)
!12801 = !DILocation(line: 4415, column: 53, scope: !12782)
!12802 = !DILocation(line: 4415, column: 63, scope: !12782)
!12803 = !DILocation(line: 4415, column: 45, scope: !12782)
!12804 = !DILocation(line: 4414, column: 16, scope: !12782)
!12805 = !DILocation(line: 4414, column: 9, scope: !12782)
!12806 = distinct !DISubprogram(name: "rd_kafka_broker_update_reconnect_backoff", scope: !2, file: !2, line: 2083, type: !12807, scopeLine: 2085, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12809)
!12807 = !DISubroutineType(types: !12808)
!12808 = !{null, !412, !4333, !487}
!12809 = !{!12810, !12811, !12812, !12813}
!12810 = !DILocalVariable(name: "rkb", arg: 1, scope: !12806, file: !2, line: 2083, type: !412)
!12811 = !DILocalVariable(name: "conf", arg: 2, scope: !12806, file: !2, line: 2084, type: !4333)
!12812 = !DILocalVariable(name: "now", arg: 3, scope: !12806, file: !2, line: 2085, type: !487)
!12813 = !DILocalVariable(name: "backoff", scope: !12806, file: !2, line: 2086, type: !126)
!12814 = !DILocation(line: 2083, column: 61, scope: !12806)
!12815 = !DILocation(line: 2084, column: 65, scope: !12806)
!12816 = !DILocation(line: 2085, column: 50, scope: !12806)
!12817 = !DILocation(line: 2086, column: 9, scope: !12806)
!12818 = !DILocation(line: 2086, column: 13, scope: !12806)
!12819 = !DILocation(line: 2091, column: 13, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12806, file: !2, line: 2091, column: 13)
!12821 = !DILocation(line: 2091, column: 18, scope: !12820)
!12822 = !DILocation(line: 2091, column: 38, scope: !12820)
!12823 = !DILocation(line: 2091, column: 44, scope: !12820)
!12824 = !DILocation(line: 2091, column: 69, scope: !12820)
!12825 = !DILocation(line: 2091, column: 37, scope: !12820)
!12826 = !DILocation(line: 2091, column: 35, scope: !12820)
!12827 = !DILocation(line: 2092, column: 13, scope: !12820)
!12828 = !DILocation(line: 2091, column: 77, scope: !12820)
!12829 = !DILocation(line: 2091, column: 13, scope: !12806)
!12830 = !DILocation(line: 2093, column: 49, scope: !12820)
!12831 = !DILocation(line: 2093, column: 55, scope: !12820)
!12832 = !DILocation(line: 2093, column: 17, scope: !12820)
!12833 = !DILocation(line: 2093, column: 22, scope: !12820)
!12834 = !DILocation(line: 2093, column: 47, scope: !12820)
!12835 = !DILocation(line: 2096, column: 42, scope: !12806)
!12836 = !DILocation(line: 2096, column: 47, scope: !12806)
!12837 = !DILocation(line: 2096, column: 35, scope: !12806)
!12838 = !DILocation(line: 2096, column: 72, scope: !12806)
!12839 = !DILocation(line: 2096, column: 29, scope: !12806)
!12840 = !DILocation(line: 2097, column: 42, scope: !12806)
!12841 = !DILocation(line: 2097, column: 47, scope: !12806)
!12842 = !DILocation(line: 2097, column: 35, scope: !12806)
!12843 = !DILocation(line: 2097, column: 72, scope: !12806)
!12844 = !DILocation(line: 2097, column: 29, scope: !12806)
!12845 = !DILocation(line: 2096, column: 19, scope: !12806)
!12846 = !DILocation(line: 2096, column: 17, scope: !12806)
!12847 = !DILocation(line: 2100, column: 19, scope: !12806)
!12848 = !DILocation(line: 2100, column: 17, scope: !12806)
!12849 = !DILocation(line: 2103, column: 41, scope: !12806)
!12850 = !DILocation(line: 2103, column: 48, scope: !12806)
!12851 = !DILocation(line: 2103, column: 56, scope: !12806)
!12852 = !DILocation(line: 2103, column: 47, scope: !12806)
!12853 = !DILocation(line: 2103, column: 45, scope: !12806)
!12854 = !DILocation(line: 2103, column: 9, scope: !12806)
!12855 = !DILocation(line: 2103, column: 14, scope: !12806)
!12856 = !DILocation(line: 2103, column: 39, scope: !12806)
!12857 = !DILocation(line: 2104, column: 41, scope: !12806)
!12858 = !DILocation(line: 2104, column: 9, scope: !12806)
!12859 = !DILocation(line: 2104, column: 14, scope: !12806)
!12860 = !DILocation(line: 2104, column: 39, scope: !12806)
!12861 = !DILocation(line: 2106, column: 1, scope: !12806)
!12862 = !DISubprogram(name: "rd_kafka_sasl_close", scope: !8840, file: !8840, line: 43, type: !4695, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12863 = distinct !DISubprogram(name: "rd_kafka_broker_bufq_timeout_scan", scope: !2, file: !2, line: 788, type: !12864, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !12866)
!12864 = !DISubroutineType(types: !12865)
!12865 = !{!126, !412, !126, !5038, !1067, !862, !550, !487, !365, !126}
!12866 = !{!12867, !12868, !12869, !12870, !12871, !12872, !12873, !12874, !12875, !12876, !12877, !12878, !12879, !12880, !12883, !12884, !12888, !12889, !12892}
!12867 = !DILocalVariable(name: "rkb", arg: 1, scope: !12863, file: !2, line: 788, type: !412)
!12868 = !DILocalVariable(name: "is_waitresp_q", arg: 2, scope: !12863, file: !2, line: 789, type: !126)
!12869 = !DILocalVariable(name: "rkbq", arg: 3, scope: !12863, file: !2, line: 790, type: !5038)
!12870 = !DILocalVariable(name: "partial_cntp", arg: 4, scope: !12863, file: !2, line: 791, type: !1067)
!12871 = !DILocalVariable(name: "ApiKey", arg: 5, scope: !12863, file: !2, line: 792, type: !862)
!12872 = !DILocalVariable(name: "err", arg: 6, scope: !12863, file: !2, line: 793, type: !550)
!12873 = !DILocalVariable(name: "now", arg: 7, scope: !12863, file: !2, line: 794, type: !487)
!12874 = !DILocalVariable(name: "description", arg: 8, scope: !12863, file: !2, line: 795, type: !365)
!12875 = !DILocalVariable(name: "log_first_n", arg: 9, scope: !12863, file: !2, line: 796, type: !126)
!12876 = !DILocalVariable(name: "rkbuf", scope: !12863, file: !2, line: 797, type: !1692)
!12877 = !DILocalVariable(name: "tmp", scope: !12863, file: !2, line: 797, type: !1692)
!12878 = !DILocalVariable(name: "cnt", scope: !12863, file: !2, line: 798, type: !126)
!12879 = !DILocalVariable(name: "idx", scope: !12863, file: !2, line: 799, type: !126)
!12880 = !DILocalVariable(name: "holb", scope: !12863, file: !2, line: 800, type: !12881)
!12881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12882, size: 64)
!12882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!12883 = !DILabel(scope: !12863, name: "restart", file: !2, line: 802)
!12884 = !DILocalVariable(name: "pre_state", scope: !12885, file: !2, line: 806, type: !2325)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !2, line: 805, column: 70)
!12886 = distinct !DILexicalBlock(scope: !12887, file: !2, line: 805, column: 9)
!12887 = distinct !DILexicalBlock(scope: !12863, file: !2, line: 805, column: 9)
!12888 = !DILocalVariable(name: "post_state", scope: !12885, file: !2, line: 806, type: !2325)
!12889 = !DILocalVariable(name: "holbstr", scope: !12890, file: !2, line: 828, type: !924)
!12890 = distinct !DILexicalBlock(scope: !12891, file: !2, line: 827, column: 47)
!12891 = distinct !DILexicalBlock(scope: !12885, file: !2, line: 827, column: 21)
!12892 = !DILocalVariable(name: "_logname", scope: !12893, file: !2, line: 856, type: !924)
!12893 = distinct !DILexicalBlock(scope: !12890, file: !2, line: 856, column: 25)
!12894 = !DILocation(line: 788, column: 65, scope: !12863)
!12895 = !DILocation(line: 789, column: 50, scope: !12863)
!12896 = !DILocation(line: 790, column: 63, scope: !12863)
!12897 = !DILocation(line: 791, column: 51, scope: !12863)
!12898 = !DILocation(line: 792, column: 54, scope: !12863)
!12899 = !DILocation(line: 793, column: 66, scope: !12863)
!12900 = !DILocation(line: 794, column: 54, scope: !12863)
!12901 = !DILocation(line: 795, column: 58, scope: !12863)
!12902 = !DILocation(line: 796, column: 50, scope: !12863)
!12903 = !DILocation(line: 797, column: 9, scope: !12863)
!12904 = !DILocation(line: 797, column: 25, scope: !12863)
!12905 = !DILocation(line: 797, column: 33, scope: !12863)
!12906 = !DILocation(line: 798, column: 9, scope: !12863)
!12907 = !DILocation(line: 798, column: 13, scope: !12863)
!12908 = !DILocation(line: 799, column: 9, scope: !12863)
!12909 = !DILocation(line: 799, column: 13, scope: !12863)
!12910 = !DILocation(line: 800, column: 9, scope: !12863)
!12911 = !DILocation(line: 800, column: 31, scope: !12863)
!12912 = !DILocation(line: 802, column: 1, scope: !12863)
!12913 = !DILocation(line: 803, column: 16, scope: !12863)
!12914 = !{!3947, !3911, i64 0}
!12915 = !DILocation(line: 803, column: 14, scope: !12863)
!12916 = !DILocation(line: 805, column: 9, scope: !12887)
!12917 = !DILocation(line: 805, column: 9, scope: !12886)
!12918 = !DILocation(line: 0, scope: !12886)
!12919 = !DILocation(line: 806, column: 17, scope: !12885)
!12920 = !DILocation(line: 806, column: 41, scope: !12885)
!12921 = !DILocation(line: 806, column: 52, scope: !12885)
!12922 = !DILocation(line: 808, column: 20, scope: !12885)
!12923 = !DILocation(line: 810, column: 21, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12885, file: !2, line: 810, column: 21)
!12925 = !DILocation(line: 0, scope: !12924)
!12926 = !DILocation(line: 810, column: 21, scope: !12885)
!12927 = !DILocation(line: 811, column: 25, scope: !12924)
!12928 = !DILocation(line: 813, column: 21, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12885, file: !2, line: 813, column: 21)
!12930 = !DILocation(line: 813, column: 28, scope: !12929)
!12931 = !DILocation(line: 813, column: 34, scope: !12929)
!12932 = !DILocation(line: 813, column: 37, scope: !12929)
!12933 = !DILocation(line: 813, column: 44, scope: !12929)
!12934 = !DILocation(line: 813, column: 57, scope: !12929)
!12935 = !DILocation(line: 813, column: 67, scope: !12929)
!12936 = !DILocation(line: 813, column: 64, scope: !12929)
!12937 = !DILocation(line: 813, column: 21, scope: !12885)
!12938 = !DILocation(line: 814, column: 25, scope: !12929)
!12939 = !DILocation(line: 816, column: 21, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12885, file: !2, line: 816, column: 21)
!12941 = !DILocation(line: 816, column: 34, scope: !12940)
!12942 = !DILocation(line: 816, column: 54, scope: !12940)
!12943 = !DILocation(line: 816, column: 61, scope: !12940)
!12944 = !DILocation(line: 816, column: 37, scope: !12940)
!12945 = !DILocation(line: 816, column: 75, scope: !12940)
!12946 = !DILocation(line: 816, column: 21, scope: !12885)
!12947 = !DILocation(line: 817, column: 27, scope: !12940)
!12948 = !DILocation(line: 817, column: 40, scope: !12940)
!12949 = !DILocation(line: 817, column: 25, scope: !12940)
!12950 = !DILocation(line: 820, column: 21, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12885, file: !2, line: 820, column: 21)
!12952 = !DILocation(line: 820, column: 28, scope: !12951)
!12953 = !DILocation(line: 820, column: 21, scope: !12885)
!12954 = !DILocation(line: 821, column: 48, scope: !12951)
!12955 = !DILocation(line: 821, column: 54, scope: !12951)
!12956 = !DILocation(line: 821, column: 61, scope: !12951)
!12957 = !DILocation(line: 821, column: 52, scope: !12951)
!12958 = !DILocation(line: 821, column: 25, scope: !12951)
!12959 = !DILocation(line: 821, column: 32, scope: !12951)
!12960 = !DILocation(line: 821, column: 46, scope: !12951)
!12961 = !DILocation(line: 823, column: 48, scope: !12951)
!12962 = !DILocation(line: 823, column: 54, scope: !12951)
!12963 = !DILocation(line: 823, column: 61, scope: !12951)
!12964 = !DILocation(line: 823, column: 52, scope: !12951)
!12965 = !DILocation(line: 823, column: 25, scope: !12951)
!12966 = !DILocation(line: 823, column: 32, scope: !12951)
!12967 = !DILocation(line: 823, column: 46, scope: !12951)
!12968 = !DILocation(line: 825, column: 35, scope: !12885)
!12969 = !DILocation(line: 825, column: 41, scope: !12885)
!12970 = !DILocation(line: 825, column: 17, scope: !12885)
!12971 = !DILocation(line: 827, column: 21, scope: !12891)
!12972 = !DILocation(line: 827, column: 25, scope: !12891)
!12973 = !DILocation(line: 827, column: 28, scope: !12891)
!12974 = !DILocation(line: 827, column: 34, scope: !12891)
!12975 = !DILocation(line: 827, column: 32, scope: !12891)
!12976 = !DILocation(line: 827, column: 21, scope: !12885)
!12977 = !DILocation(line: 828, column: 25, scope: !12890)
!12978 = !DILocation(line: 828, column: 30, scope: !12890)
!12979 = !DILocation(line: 837, column: 29, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12890, file: !2, line: 837, column: 29)
!12981 = !DILocation(line: 837, column: 34, scope: !12980)
!12982 = !DILocation(line: 837, column: 37, scope: !12980)
!12983 = !DILocation(line: 837, column: 45, scope: !12980)
!12984 = !DILocation(line: 837, column: 42, scope: !12980)
!12985 = !DILocation(line: 837, column: 29, scope: !12890)
!12986 = !DILocation(line: 838, column: 33, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12980, file: !2, line: 837, column: 76)
!12988 = !DILocation(line: 851, column: 38, scope: !12987)
!12989 = !DILocation(line: 852, column: 25, scope: !12987)
!12990 = !DILocation(line: 853, column: 33, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12980, file: !2, line: 852, column: 32)
!12992 = !DILocation(line: 853, column: 42, scope: !12991)
!12993 = !DILocation(line: 856, column: 25, scope: !12890)
!12994 = !DILocation(line: 856, column: 25, scope: !12893)
!12995 = !DILocation(line: 863, column: 17, scope: !12891)
!12996 = !DILocation(line: 863, column: 17, scope: !12890)
!12997 = !DILocation(line: 865, column: 21, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12885, file: !2, line: 865, column: 21)
!12999 = !DILocation(line: 865, column: 35, scope: !12998)
!13000 = !DILocation(line: 866, column: 21, scope: !12998)
!13001 = !DILocation(line: 866, column: 28, scope: !12998)
!13002 = !DILocation(line: 866, column: 40, scope: !12998)
!13003 = !DILocation(line: 866, column: 65, scope: !12998)
!13004 = !DILocation(line: 867, column: 38, scope: !12998)
!13005 = !DILocation(line: 867, column: 43, scope: !12998)
!13006 = !DILocation(line: 867, column: 21, scope: !12998)
!13007 = !DILocation(line: 867, column: 72, scope: !12998)
!13008 = !DILocation(line: 865, column: 21, scope: !12885)
!13009 = !DILocation(line: 868, column: 65, scope: !12998)
!13010 = !DILocation(line: 868, column: 70, scope: !12998)
!13011 = !DILocation(line: 868, column: 25, scope: !12998)
!13012 = !DILocation(line: 870, column: 55, scope: !12885)
!13013 = !DILocation(line: 870, column: 29, scope: !12885)
!13014 = !DILocation(line: 870, column: 27, scope: !12885)
!13015 = !DILocation(line: 872, column: 39, scope: !12885)
!13016 = !DILocation(line: 872, column: 44, scope: !12885)
!13017 = !DILocation(line: 872, column: 52, scope: !12885)
!13018 = !DILocation(line: 872, column: 57, scope: !12885)
!13019 = !DILocation(line: 872, column: 68, scope: !12885)
!13020 = !DILocation(line: 872, column: 17, scope: !12885)
!13021 = !DILocation(line: 873, column: 20, scope: !12885)
!13022 = !DILocation(line: 880, column: 56, scope: !12885)
!13023 = !DILocation(line: 880, column: 30, scope: !12885)
!13024 = !DILocation(line: 880, column: 28, scope: !12885)
!13025 = !DILocation(line: 881, column: 21, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !12885, file: !2, line: 881, column: 21)
!13027 = !DILocation(line: 881, column: 34, scope: !13026)
!13028 = !DILocation(line: 881, column: 31, scope: !13026)
!13029 = !DILocation(line: 881, column: 21, scope: !12885)
!13030 = !DILocation(line: 885, column: 29, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13032, file: !2, line: 885, column: 29)
!13032 = distinct !DILexicalBlock(scope: !13026, file: !2, line: 881, column: 46)
!13033 = !DILocation(line: 885, column: 40, scope: !13031)
!13034 = !DILocation(line: 885, column: 29, scope: !13032)
!13035 = !DILocation(line: 886, column: 33, scope: !13031)
!13036 = !DILocation(line: 888, column: 25, scope: !13032)
!13037 = !DILocation(line: 890, column: 9, scope: !12886)
!13038 = !DILocation(line: 890, column: 9, scope: !12885)
!13039 = distinct !{!13039, !12916, !13040, !4095}
!13040 = !DILocation(line: 890, column: 9, scope: !12887)
!13041 = !DILocation(line: 892, column: 16, scope: !12863)
!13042 = !DILocation(line: 893, column: 1, scope: !12863)
!13043 = !DILocation(line: 892, column: 9, scope: !12863)
!13044 = !DISubprogram(name: "rd_list_remove", scope: !600, file: !600, line: 156, type: !5646, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13045 = distinct !DISubprogram(name: "rd_kafka_q_disable0", scope: !506, file: !506, line: 191, type: !11148, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13046)
!13046 = !{!13047, !13048}
!13047 = !DILocalVariable(name: "rkq", arg: 1, scope: !13045, file: !506, line: 191, type: !503)
!13048 = !DILocalVariable(name: "do_lock", arg: 2, scope: !13045, file: !506, line: 192, type: !126)
!13049 = !DILocation(line: 191, column: 67, scope: !13045)
!13050 = !DILocation(line: 192, column: 57, scope: !13045)
!13051 = !DILocation(line: 193, column: 13, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13045, file: !506, line: 193, column: 13)
!13053 = !DILocation(line: 193, column: 13, scope: !13045)
!13054 = !DILocation(line: 194, column: 27, scope: !13052)
!13055 = !DILocation(line: 194, column: 32, scope: !13052)
!13056 = !DILocation(line: 194, column: 17, scope: !13052)
!13057 = !DILocation(line: 195, column: 9, scope: !13045)
!13058 = !DILocation(line: 195, column: 14, scope: !13045)
!13059 = !DILocation(line: 195, column: 24, scope: !13045)
!13060 = !DILocation(line: 196, column: 13, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13045, file: !506, line: 196, column: 13)
!13062 = !DILocation(line: 196, column: 13, scope: !13045)
!13063 = !DILocation(line: 197, column: 29, scope: !13061)
!13064 = !DILocation(line: 197, column: 34, scope: !13061)
!13065 = !DILocation(line: 197, column: 17, scope: !13061)
!13066 = !DILocation(line: 198, column: 1, scope: !13045)
!13067 = distinct !DISubprogram(name: "rd_kafka_broker_ops_serve", scope: !2, file: !2, line: 3496, type: !13068, scopeLine: 3496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13070)
!13068 = !DISubroutineType(types: !13069)
!13069 = !{!126, !412, !487}
!13070 = !{!13071, !13072, !13073, !13074}
!13071 = !DILocalVariable(name: "rkb", arg: 1, scope: !13067, file: !2, line: 3496, type: !412)
!13072 = !DILocalVariable(name: "timeout_us", arg: 2, scope: !13067, file: !2, line: 3496, type: !487)
!13073 = !DILocalVariable(name: "rko", scope: !13067, file: !2, line: 3497, type: !914)
!13074 = !DILocalVariable(name: "cnt", scope: !13067, file: !2, line: 3498, type: !126)
!13075 = !DILocation(line: 3496, column: 46, scope: !13067)
!13076 = !DILocation(line: 3496, column: 59, scope: !13067)
!13077 = !DILocation(line: 3497, column: 9, scope: !13067)
!13078 = !DILocation(line: 3497, column: 24, scope: !13067)
!13079 = !DILocation(line: 3498, column: 9, scope: !13067)
!13080 = !DILocation(line: 3498, column: 13, scope: !13067)
!13081 = !DILocation(line: 3500, column: 9, scope: !13067)
!13082 = !DILocation(line: 3500, column: 38, scope: !13067)
!13083 = !DILocation(line: 3500, column: 43, scope: !13067)
!13084 = !DILocation(line: 3500, column: 52, scope: !13067)
!13085 = !DILocation(line: 3500, column: 23, scope: !13067)
!13086 = !DILocation(line: 3500, column: 21, scope: !13067)
!13087 = !DILocation(line: 3500, column: 68, scope: !13067)
!13088 = !DILocation(line: 3501, column: 20, scope: !13067)
!13089 = !DILocation(line: 3501, column: 50, scope: !13067)
!13090 = !DILocation(line: 3501, column: 55, scope: !13067)
!13091 = !DILocation(line: 3501, column: 25, scope: !13067)
!13092 = !DILocation(line: 3501, column: 24, scope: !13067)
!13093 = !DILocation(line: 0, scope: !13067)
!13094 = !DILocation(line: 3502, column: 28, scope: !13067)
!13095 = distinct !{!13095, !13081, !13096, !4095}
!13096 = !DILocation(line: 3502, column: 30, scope: !13067)
!13097 = !DILocation(line: 3504, column: 16, scope: !13067)
!13098 = !DILocation(line: 3505, column: 1, scope: !13067)
!13099 = !DILocation(line: 3504, column: 9, scope: !13067)
!13100 = !DISubprogram(name: "rd_kafka_interceptors_on_thread_exit", scope: !4435, file: !4435, line: 82, type: !12532, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13101 = distinct !DISubprogram(name: "rd_kafka_fatal_error_code", scope: !589, file: !589, line: 951, type: !13102, scopeLine: 951, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13104)
!13102 = !DISubroutineType(types: !13103)
!13103 = !{!550, !586}
!13104 = !{!13105}
!13105 = !DILocalVariable(name: "rk", arg: 1, scope: !13101, file: !589, line: 951, type: !586)
!13106 = !DILocation(line: 951, column: 39, scope: !13101)
!13107 = !DILocation(line: 956, column: 14, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13101, file: !589, line: 956, column: 13)
!13109 = !DILocation(line: 956, column: 18, scope: !13108)
!13110 = !DILocation(line: 956, column: 26, scope: !13108)
!13111 = !DILocation(line: 956, column: 47, scope: !13108)
!13112 = !DILocation(line: 956, column: 50, scope: !13108)
!13113 = !DILocation(line: 956, column: 54, scope: !13108)
!13114 = !DILocation(line: 956, column: 62, scope: !13108)
!13115 = !DILocation(line: 956, column: 66, scope: !13108)
!13116 = !{!4141, !3941, i64 2064}
!13117 = !DILocation(line: 956, column: 79, scope: !13108)
!13118 = !DILocation(line: 957, column: 14, scope: !13108)
!13119 = !DILocation(line: 957, column: 18, scope: !13108)
!13120 = !DILocation(line: 957, column: 26, scope: !13108)
!13121 = !DILocation(line: 957, column: 47, scope: !13108)
!13122 = !DILocation(line: 957, column: 50, scope: !13108)
!13123 = !DILocation(line: 957, column: 54, scope: !13108)
!13124 = !DILocation(line: 957, column: 62, scope: !13108)
!13125 = !{!4141, !3911, i64 1904}
!13126 = !DILocation(line: 956, column: 13, scope: !13101)
!13127 = !DILocation(line: 958, column: 41, scope: !13108)
!13128 = !DILocation(line: 958, column: 45, scope: !13108)
!13129 = !DILocation(line: 958, column: 54, scope: !13108)
!13130 = !DILocation(line: 958, column: 24, scope: !13108)
!13131 = !DILocation(line: 958, column: 17, scope: !13108)
!13132 = !DILocation(line: 960, column: 9, scope: !13101)
!13133 = !DILocation(line: 961, column: 1, scope: !13101)
!13134 = distinct !DISubprogram(name: "rd_kafka_broker_needs_persistent_connection", scope: !2, file: !2, line: 108, type: !13135, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13137)
!13135 = !DISubroutineType(types: !13136)
!13136 = !{!561, !412}
!13137 = !{!13138}
!13138 = !DILocalVariable(name: "rkb", arg: 1, scope: !13134, file: !2, line: 108, type: !412)
!13139 = !DILocation(line: 108, column: 64, scope: !13134)
!13140 = !DILocation(line: 109, column: 16, scope: !13134)
!13141 = !DILocation(line: 109, column: 21, scope: !13134)
!13142 = !DILocation(line: 109, column: 37, scope: !13134)
!13143 = !DILocation(line: 109, column: 46, scope: !13134)
!13144 = !DILocation(line: 110, column: 33, scope: !13134)
!13145 = !DILocation(line: 110, column: 38, scope: !13134)
!13146 = !DILocation(line: 110, column: 54, scope: !13134)
!13147 = !DILocation(line: 110, column: 16, scope: !13134)
!13148 = !DILocation(line: 109, column: 9, scope: !13134)
!13149 = distinct !DISubprogram(name: "rd_kafka_broker_internal_serve", scope: !2, file: !2, line: 3713, type: !13150, scopeLine: 3714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13152)
!13150 = !DISubroutineType(types: !13151)
!13151 = !{null, !412, !487}
!13152 = !{!13153, !13154, !13155, !13156, !13157, !13160}
!13153 = !DILocalVariable(name: "rkb", arg: 1, scope: !13149, file: !2, line: 3713, type: !412)
!13154 = !DILocalVariable(name: "abs_timeout", arg: 2, scope: !13149, file: !2, line: 3714, type: !487)
!13155 = !DILocalVariable(name: "initial_state", scope: !13149, file: !2, line: 3715, type: !126)
!13156 = !DILocalVariable(name: "wakeup", scope: !13149, file: !2, line: 3716, type: !561)
!13157 = !DILocalVariable(name: "next_timeout_scan", scope: !13158, file: !2, line: 3730, type: !487)
!13158 = distinct !DILexicalBlock(scope: !13159, file: !2, line: 3728, column: 16)
!13159 = distinct !DILexicalBlock(scope: !13149, file: !2, line: 3718, column: 13)
!13160 = !DILocalVariable(name: "now", scope: !13161, file: !2, line: 3733, type: !487)
!13161 = distinct !DILexicalBlock(scope: !13158, file: !2, line: 3732, column: 20)
!13162 = !DILocation(line: 3713, column: 63, scope: !13149)
!13163 = !DILocation(line: 3714, column: 52, scope: !13149)
!13164 = !DILocation(line: 3715, column: 9, scope: !13149)
!13165 = !DILocation(line: 3715, column: 13, scope: !13149)
!13166 = !DILocation(line: 3715, column: 29, scope: !13149)
!13167 = !DILocation(line: 3715, column: 34, scope: !13149)
!13168 = !DILocation(line: 3716, column: 9, scope: !13149)
!13169 = !DILocation(line: 3716, column: 19, scope: !13149)
!13170 = !DILocation(line: 3718, column: 13, scope: !13159)
!13171 = !DILocation(line: 3718, column: 18, scope: !13159)
!13172 = !DILocation(line: 3718, column: 26, scope: !13159)
!13173 = !DILocation(line: 3718, column: 34, scope: !13159)
!13174 = !DILocation(line: 3718, column: 13, scope: !13149)
!13175 = !DILocation(line: 3720, column: 17, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13159, file: !2, line: 3718, column: 56)
!13177 = !DILocation(line: 3721, column: 64, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13176, file: !2, line: 3720, column: 20)
!13179 = !DILocation(line: 3721, column: 25, scope: !13178)
!13180 = !DILocation(line: 3723, column: 63, scope: !13178)
!13181 = !DILocation(line: 3723, column: 68, scope: !13178)
!13182 = !DILocation(line: 3723, column: 34, scope: !13178)
!13183 = !DILocation(line: 3723, column: 32, scope: !13178)
!13184 = !DILocation(line: 3725, column: 17, scope: !13178)
!13185 = !DILocation(line: 3725, column: 27, scope: !13176)
!13186 = !DILocation(line: 3725, column: 60, scope: !13176)
!13187 = !DILocation(line: 3726, column: 31, scope: !13176)
!13188 = !DILocation(line: 3726, column: 36, scope: !13176)
!13189 = !DILocation(line: 3726, column: 49, scope: !13176)
!13190 = !DILocation(line: 3726, column: 46, scope: !13176)
!13191 = !DILocation(line: 3726, column: 63, scope: !13176)
!13192 = !DILocation(line: 3726, column: 67, scope: !13176)
!13193 = !DILocation(line: 3726, column: 74, scope: !13176)
!13194 = !DILocation(line: 3727, column: 65, scope: !13176)
!13195 = !DILocation(line: 3727, column: 46, scope: !13176)
!13196 = !DILocation(line: 3727, column: 27, scope: !13176)
!13197 = !DILocation(line: 3727, column: 26, scope: !13176)
!13198 = !DILocation(line: 0, scope: !13176)
!13199 = distinct !{!13199, !13175, !13200, !4095}
!13200 = !DILocation(line: 3727, column: 78, scope: !13176)
!13201 = !DILocation(line: 3728, column: 9, scope: !13176)
!13202 = !DILocation(line: 3730, column: 17, scope: !13158)
!13203 = !DILocation(line: 3730, column: 25, scope: !13158)
!13204 = !DILocation(line: 3732, column: 17, scope: !13158)
!13205 = !DILocation(line: 3733, column: 25, scope: !13161)
!13206 = !DILocation(line: 3733, column: 33, scope: !13161)
!13207 = !DILocation(line: 3733, column: 39, scope: !13161)
!13208 = !DILocation(line: 3735, column: 29, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13161, file: !2, line: 3735, column: 29)
!13210 = !DILocation(line: 3735, column: 36, scope: !13209)
!13211 = !DILocation(line: 3735, column: 33, scope: !13209)
!13212 = !DILocation(line: 3735, column: 29, scope: !13161)
!13213 = !DILocation(line: 3737, column: 74, scope: !13209)
!13214 = !DILocation(line: 3738, column: 74, scope: !13209)
!13215 = !DILocation(line: 3737, column: 37, scope: !13209)
!13216 = !DILocation(line: 3736, column: 51, scope: !13209)
!13217 = !DILocation(line: 3736, column: 33, scope: !13209)
!13218 = !DILocation(line: 3741, column: 29, scope: !13161)
!13219 = !DILocation(line: 3741, column: 34, scope: !13161)
!13220 = !DILocation(line: 3740, column: 34, scope: !13161)
!13221 = !DILocation(line: 3740, column: 32, scope: !13161)
!13222 = !DILocation(line: 3743, column: 17, scope: !13158)
!13223 = !DILocation(line: 3743, column: 17, scope: !13161)
!13224 = !DILocation(line: 3743, column: 27, scope: !13158)
!13225 = !DILocation(line: 3743, column: 60, scope: !13158)
!13226 = !DILocation(line: 3744, column: 31, scope: !13158)
!13227 = !DILocation(line: 3744, column: 36, scope: !13158)
!13228 = !DILocation(line: 3744, column: 49, scope: !13158)
!13229 = !DILocation(line: 3744, column: 46, scope: !13158)
!13230 = !DILocation(line: 3744, column: 63, scope: !13158)
!13231 = !DILocation(line: 3744, column: 67, scope: !13158)
!13232 = !DILocation(line: 3744, column: 74, scope: !13158)
!13233 = !DILocation(line: 3745, column: 65, scope: !13158)
!13234 = !DILocation(line: 3745, column: 46, scope: !13158)
!13235 = !DILocation(line: 3745, column: 27, scope: !13158)
!13236 = !DILocation(line: 3745, column: 26, scope: !13158)
!13237 = !DILocation(line: 0, scope: !13158)
!13238 = distinct !{!13238, !13204, !13239, !4095}
!13239 = !DILocation(line: 3745, column: 78, scope: !13158)
!13240 = !DILocation(line: 3746, column: 9, scope: !13159)
!13241 = !DILocation(line: 3747, column: 1, scope: !13149)
!13242 = distinct !DISubprogram(name: "rd_kafka_broker_producer_serve", scope: !2, file: !2, line: 4151, type: !13150, scopeLine: 4152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13243)
!13243 = !{!13244, !13245, !13246, !13247, !13248, !13249, !13250, !13252, !13253}
!13244 = !DILocalVariable(name: "rkb", arg: 1, scope: !13242, file: !2, line: 4151, type: !412)
!13245 = !DILocalVariable(name: "abs_timeout", arg: 2, scope: !13242, file: !2, line: 4152, type: !487)
!13246 = !DILocalVariable(name: "timeout_scan", scope: !13242, file: !2, line: 4153, type: !725)
!13247 = !DILocalVariable(name: "initial_state", scope: !13242, file: !2, line: 4154, type: !59)
!13248 = !DILocalVariable(name: "now", scope: !13242, file: !2, line: 4155, type: !487)
!13249 = !DILocalVariable(name: "cnt", scope: !13242, file: !2, line: 4156, type: !126)
!13250 = !DILocalVariable(name: "do_timeout_scan", scope: !13251, file: !2, line: 4167, type: !561)
!13251 = distinct !DILexicalBlock(scope: !13242, file: !2, line: 4166, column: 52)
!13252 = !DILocalVariable(name: "next_wakeup", scope: !13251, file: !2, line: 4168, type: !487)
!13253 = !DILocalVariable(name: "overshot", scope: !13251, file: !2, line: 4169, type: !561)
!13254 = !DILocation(line: 4151, column: 63, scope: !13242)
!13255 = !DILocation(line: 4152, column: 52, scope: !13242)
!13256 = !DILocation(line: 4153, column: 9, scope: !13242)
!13257 = !DILocation(line: 4153, column: 23, scope: !13242)
!13258 = !DILocation(line: 4154, column: 9, scope: !13242)
!13259 = !DILocation(line: 4154, column: 22, scope: !13242)
!13260 = !DILocation(line: 4154, column: 38, scope: !13242)
!13261 = !DILocation(line: 4154, column: 43, scope: !13242)
!13262 = !DILocation(line: 4155, column: 9, scope: !13242)
!13263 = !DILocation(line: 4155, column: 17, scope: !13242)
!13264 = !DILocation(line: 4156, column: 9, scope: !13242)
!13265 = !DILocation(line: 4156, column: 13, scope: !13242)
!13266 = !DILocation(line: 4158, column: 9, scope: !13242)
!13267 = !DILocation(line: 4160, column: 9, scope: !13242)
!13268 = !DILocation(line: 4160, column: 9, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !2, line: 4160, column: 9)
!13270 = distinct !DILexicalBlock(scope: !13242, file: !2, line: 4160, column: 9)
!13271 = !DILocation(line: 4160, column: 9, scope: !13270)
!13272 = !DILocation(line: 4162, column: 9, scope: !13242)
!13273 = !DILocation(line: 4164, column: 9, scope: !13242)
!13274 = !DILocation(line: 4164, column: 17, scope: !13242)
!13275 = !DILocation(line: 4164, column: 50, scope: !13242)
!13276 = !DILocation(line: 4165, column: 16, scope: !13242)
!13277 = !DILocation(line: 4165, column: 21, scope: !13242)
!13278 = !DILocation(line: 4165, column: 34, scope: !13242)
!13279 = !DILocation(line: 4165, column: 31, scope: !13242)
!13280 = !DILocation(line: 4165, column: 48, scope: !13242)
!13281 = !DILocation(line: 4166, column: 17, scope: !13242)
!13282 = !DILocation(line: 4166, column: 38, scope: !13242)
!13283 = !DILocation(line: 4166, column: 36, scope: !13242)
!13284 = !DILocation(line: 4166, column: 29, scope: !13242)
!13285 = !DILocation(line: 0, scope: !13242)
!13286 = !DILocation(line: 4167, column: 17, scope: !13251)
!13287 = !DILocation(line: 4167, column: 27, scope: !13251)
!13288 = !DILocation(line: 4168, column: 17, scope: !13251)
!13289 = !DILocation(line: 4168, column: 25, scope: !13251)
!13290 = !DILocation(line: 4168, column: 39, scope: !13251)
!13291 = !DILocation(line: 4169, column: 17, scope: !13251)
!13292 = !DILocation(line: 4169, column: 27, scope: !13251)
!13293 = !DILocation(line: 4171, column: 17, scope: !13251)
!13294 = !DILocation(line: 4177, column: 28, scope: !13251)
!13295 = !DILocation(line: 4177, column: 73, scope: !13251)
!13296 = !DILocation(line: 4177, column: 26, scope: !13251)
!13297 = !DILocation(line: 4178, column: 38, scope: !13251)
!13298 = !DILocation(line: 4178, column: 41, scope: !13251)
!13299 = !DILocation(line: 4178, column: 46, scope: !13251)
!13300 = !DILocation(line: 4178, column: 49, scope: !13251)
!13301 = !DILocation(line: 4178, column: 35, scope: !13251)
!13302 = !DILocation(line: 4178, column: 33, scope: !13251)
!13303 = !DILocation(line: 4180, column: 49, scope: !13251)
!13304 = !DILocation(line: 4180, column: 54, scope: !13251)
!13305 = !DILocation(line: 4181, column: 49, scope: !13251)
!13306 = !DILocation(line: 4180, column: 17, scope: !13251)
!13307 = !DILocation(line: 4184, column: 21, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13251, file: !2, line: 4184, column: 21)
!13309 = !DILocation(line: 4184, column: 21, scope: !13251)
!13310 = !DILocation(line: 4185, column: 57, scope: !13308)
!13311 = !DILocation(line: 4185, column: 25, scope: !13308)
!13312 = !DILocation(line: 4187, column: 50, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13251, file: !2, line: 4187, column: 21)
!13314 = !DILocation(line: 4187, column: 55, scope: !13313)
!13315 = !DILocation(line: 4187, column: 21, scope: !13313)
!13316 = !DILocation(line: 4187, column: 21, scope: !13251)
!13317 = !DILocation(line: 4188, column: 25, scope: !13313)
!13318 = !DILocation(line: 4190, column: 17, scope: !13251)
!13319 = !DILocation(line: 4191, column: 9, scope: !13242)
!13320 = distinct !{!13320, !13273, !13319, !4095}
!13321 = !DILocation(line: 4193, column: 9, scope: !13242)
!13322 = !DILocation(line: 4194, column: 1, scope: !13242)
!13323 = distinct !DISubprogram(name: "rd_kafka_broker_consumer_serve", scope: !2, file: !2, line: 4201, type: !13150, scopeLine: 4202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13324)
!13324 = !{!13325, !13326, !13327, !13328, !13329, !13331}
!13325 = !DILocalVariable(name: "rkb", arg: 1, scope: !13323, file: !2, line: 4201, type: !412)
!13326 = !DILocalVariable(name: "abs_timeout", arg: 2, scope: !13323, file: !2, line: 4202, type: !487)
!13327 = !DILocalVariable(name: "initial_state", scope: !13323, file: !2, line: 4203, type: !59)
!13328 = !DILocalVariable(name: "now", scope: !13323, file: !2, line: 4204, type: !487)
!13329 = !DILocalVariable(name: "min_backoff", scope: !13330, file: !2, line: 4213, type: !487)
!13330 = distinct !DILexicalBlock(scope: !13323, file: !2, line: 4212, column: 50)
!13331 = !DILocalVariable(name: "_logname", scope: !13332, file: !2, line: 4239, type: !924)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !2, line: 4239, column: 33)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !2, line: 4239, column: 33)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !2, line: 4239, column: 33)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !2, line: 4239, column: 33)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !2, line: 4238, column: 36)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !2, line: 4235, column: 29)
!13338 = distinct !DILexicalBlock(scope: !13339, file: !2, line: 4234, column: 65)
!13339 = distinct !DILexicalBlock(scope: !13330, file: !2, line: 4233, column: 21)
!13340 = !DILocation(line: 4201, column: 63, scope: !13323)
!13341 = !DILocation(line: 4202, column: 52, scope: !13323)
!13342 = !DILocation(line: 4203, column: 9, scope: !13323)
!13343 = !DILocation(line: 4203, column: 22, scope: !13323)
!13344 = !DILocation(line: 4203, column: 38, scope: !13323)
!13345 = !DILocation(line: 4203, column: 43, scope: !13323)
!13346 = !DILocation(line: 4204, column: 9, scope: !13323)
!13347 = !DILocation(line: 4204, column: 17, scope: !13323)
!13348 = !DILocation(line: 4206, column: 9, scope: !13323)
!13349 = !DILocation(line: 4206, column: 9, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13351, file: !2, line: 4206, column: 9)
!13351 = distinct !DILexicalBlock(scope: !13323, file: !2, line: 4206, column: 9)
!13352 = !DILocation(line: 4206, column: 9, scope: !13351)
!13353 = !DILocation(line: 4208, column: 9, scope: !13323)
!13354 = !DILocation(line: 4210, column: 9, scope: !13323)
!13355 = !DILocation(line: 4210, column: 17, scope: !13323)
!13356 = !DILocation(line: 4210, column: 50, scope: !13323)
!13357 = !DILocation(line: 4211, column: 16, scope: !13323)
!13358 = !DILocation(line: 4211, column: 21, scope: !13323)
!13359 = !DILocation(line: 4211, column: 34, scope: !13323)
!13360 = !DILocation(line: 4211, column: 31, scope: !13323)
!13361 = !DILocation(line: 4211, column: 48, scope: !13323)
!13362 = !DILocation(line: 4212, column: 16, scope: !13323)
!13363 = !DILocation(line: 4212, column: 37, scope: !13323)
!13364 = !DILocation(line: 4212, column: 35, scope: !13323)
!13365 = !DILocation(line: 4212, column: 28, scope: !13323)
!13366 = !DILocation(line: 0, scope: !13323)
!13367 = !DILocation(line: 4213, column: 17, scope: !13330)
!13368 = !DILocation(line: 4213, column: 25, scope: !13330)
!13369 = !DILocation(line: 4215, column: 17, scope: !13330)
!13370 = !DILocation(line: 4218, column: 70, scope: !13330)
!13371 = !DILocation(line: 4218, column: 31, scope: !13330)
!13372 = !DILocation(line: 4218, column: 29, scope: !13330)
!13373 = !DILocation(line: 4219, column: 21, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13330, file: !2, line: 4219, column: 21)
!13375 = !DILocation(line: 4219, column: 26, scope: !13374)
!13376 = !{!3939, !3942, i64 184}
!13377 = !DILocation(line: 4219, column: 49, scope: !13374)
!13378 = !DILocation(line: 4219, column: 47, scope: !13374)
!13379 = !DILocation(line: 4219, column: 53, scope: !13374)
!13380 = !DILocation(line: 4220, column: 21, scope: !13374)
!13381 = !DILocation(line: 4220, column: 26, scope: !13374)
!13382 = !DILocation(line: 4220, column: 49, scope: !13374)
!13383 = !DILocation(line: 4220, column: 47, scope: !13374)
!13384 = !DILocation(line: 4219, column: 21, scope: !13330)
!13385 = !DILocation(line: 4221, column: 39, scope: !13374)
!13386 = !DILocation(line: 4221, column: 44, scope: !13374)
!13387 = !DILocation(line: 4221, column: 37, scope: !13374)
!13388 = !DILocation(line: 4221, column: 25, scope: !13374)
!13389 = !DILocation(line: 4223, column: 21, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13330, file: !2, line: 4223, column: 21)
!13391 = !DILocation(line: 4223, column: 33, scope: !13390)
!13392 = !DILocation(line: 4223, column: 45, scope: !13390)
!13393 = !DILocation(line: 4224, column: 21, scope: !13390)
!13394 = !DILocation(line: 4224, column: 26, scope: !13390)
!13395 = !DILocation(line: 4224, column: 36, scope: !13390)
!13396 = !DILocation(line: 4223, column: 21, scope: !13330)
!13397 = !DILocation(line: 4227, column: 25, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13390, file: !2, line: 4224, column: 65)
!13399 = !DILocation(line: 4227, column: 30, scope: !13398)
!13400 = !DILocation(line: 4227, column: 46, scope: !13398)
!13401 = !DILocation(line: 4227, column: 54, scope: !13398)
!13402 = !DILocation(line: 4228, column: 17, scope: !13398)
!13403 = !DILocation(line: 4233, column: 22, scope: !13339)
!13404 = !DILocation(line: 4233, column: 27, scope: !13339)
!13405 = !{!3939, !3941, i64 192}
!13406 = !DILocation(line: 4233, column: 40, scope: !13339)
!13407 = !DILocation(line: 4234, column: 21, scope: !13339)
!13408 = !DILocation(line: 4234, column: 26, scope: !13339)
!13409 = !DILocation(line: 4234, column: 36, scope: !13339)
!13410 = !DILocation(line: 4233, column: 21, scope: !13330)
!13411 = !DILocation(line: 4235, column: 29, scope: !13337)
!13412 = !DILocation(line: 4235, column: 43, scope: !13337)
!13413 = !DILocation(line: 4235, column: 41, scope: !13337)
!13414 = !DILocation(line: 4235, column: 29, scope: !13338)
!13415 = !DILocation(line: 4236, column: 63, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13337, file: !2, line: 4235, column: 48)
!13417 = !DILocation(line: 4236, column: 68, scope: !13416)
!13418 = !DILocation(line: 4236, column: 33, scope: !13416)
!13419 = !DILocation(line: 4237, column: 47, scope: !13416)
!13420 = !DILocation(line: 4237, column: 45, scope: !13416)
!13421 = !DILocation(line: 4238, column: 25, scope: !13416)
!13422 = !DILocation(line: 4238, column: 36, scope: !13336)
!13423 = !DILocation(line: 4238, column: 48, scope: !13336)
!13424 = !DILocation(line: 4238, column: 36, scope: !13337)
!13425 = !DILocation(line: 4239, column: 33, scope: !13336)
!13426 = !DILocation(line: 4239, column: 33, scope: !13334)
!13427 = !DILocation(line: 4239, column: 33, scope: !13335)
!13428 = !DILocation(line: 4239, column: 33, scope: !13333)
!13429 = !DILocation(line: 4239, column: 33, scope: !13332)
!13430 = !DILocation(line: 4242, column: 17, scope: !13338)
!13431 = !DILocation(line: 4245, column: 39, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13339, file: !2, line: 4242, column: 24)
!13433 = !DILocation(line: 4245, column: 37, scope: !13432)
!13434 = !DILocation(line: 4249, column: 21, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13330, file: !2, line: 4249, column: 21)
!13436 = !DILocation(line: 4249, column: 21, scope: !13330)
!13437 = !DILocation(line: 4250, column: 57, scope: !13435)
!13438 = !DILocation(line: 4250, column: 25, scope: !13435)
!13439 = !DILocation(line: 4252, column: 21, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13330, file: !2, line: 4252, column: 21)
!13441 = !DILocation(line: 4252, column: 35, scope: !13440)
!13442 = !DILocation(line: 4252, column: 33, scope: !13440)
!13443 = !DILocation(line: 4252, column: 21, scope: !13330)
!13444 = !DILocation(line: 4253, column: 39, scope: !13440)
!13445 = !DILocation(line: 4253, column: 37, scope: !13440)
!13446 = !DILocation(line: 4253, column: 25, scope: !13440)
!13447 = !DILocation(line: 4255, column: 50, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13330, file: !2, line: 4255, column: 21)
!13449 = !DILocation(line: 4255, column: 55, scope: !13448)
!13450 = !DILocation(line: 4255, column: 21, scope: !13448)
!13451 = !DILocation(line: 4255, column: 21, scope: !13330)
!13452 = !DILocation(line: 4256, column: 25, scope: !13448)
!13453 = !DILocation(line: 4258, column: 17, scope: !13330)
!13454 = !DILocation(line: 4259, column: 9, scope: !13323)
!13455 = distinct !{!13455, !13354, !13454, !4095}
!13456 = !DILocation(line: 4261, column: 9, scope: !13323)
!13457 = !DILocation(line: 4262, column: 1, scope: !13323)
!13458 = distinct !DISubprogram(name: "rd_kafka_broker_idle_check", scope: !2, file: !2, line: 4275, type: !1583, scopeLine: 4275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13459)
!13459 = !{!13460, !13461, !13462, !13463, !13464}
!13460 = !DILocalVariable(name: "rkb", arg: 1, scope: !13458, file: !2, line: 4275, type: !412)
!13461 = !DILocalVariable(name: "ts_send", scope: !13458, file: !2, line: 4276, type: !487)
!13462 = !DILocalVariable(name: "ts_recv", scope: !13458, file: !2, line: 4277, type: !487)
!13463 = !DILocalVariable(name: "ts_last_activity", scope: !13458, file: !2, line: 4278, type: !487)
!13464 = !DILocalVariable(name: "idle_ms", scope: !13458, file: !2, line: 4279, type: !126)
!13465 = !DILocation(line: 4275, column: 69, scope: !13458)
!13466 = !DILocation(line: 4276, column: 9, scope: !13458)
!13467 = !DILocation(line: 4276, column: 17, scope: !13458)
!13468 = !DILocation(line: 4276, column: 53, scope: !13458)
!13469 = !DILocation(line: 4276, column: 58, scope: !13458)
!13470 = !DILocation(line: 4276, column: 64, scope: !13458)
!13471 = !DILocation(line: 4276, column: 36, scope: !13458)
!13472 = !DILocation(line: 4277, column: 9, scope: !13458)
!13473 = !DILocation(line: 4277, column: 17, scope: !13458)
!13474 = !DILocation(line: 4277, column: 53, scope: !13458)
!13475 = !DILocation(line: 4277, column: 58, scope: !13458)
!13476 = !DILocation(line: 4277, column: 64, scope: !13458)
!13477 = !DILocation(line: 4277, column: 36, scope: !13458)
!13478 = !DILocation(line: 4278, column: 9, scope: !13458)
!13479 = !DILocation(line: 4278, column: 17, scope: !13458)
!13480 = !DILocation(line: 4278, column: 36, scope: !13458)
!13481 = !DILocation(line: 4279, column: 9, scope: !13458)
!13482 = !DILocation(line: 4279, column: 13, scope: !13458)
!13483 = !DILocation(line: 4283, column: 13, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13458, file: !2, line: 4283, column: 13)
!13485 = !DILocation(line: 4283, column: 13, scope: !13458)
!13486 = !DILocation(line: 4284, column: 36, scope: !13484)
!13487 = !DILocation(line: 4284, column: 41, scope: !13484)
!13488 = !DILocation(line: 4284, column: 34, scope: !13484)
!13489 = !DILocation(line: 4284, column: 17, scope: !13484)
!13490 = !DILocation(line: 4286, column: 26, scope: !13458)
!13491 = !DILocation(line: 4286, column: 39, scope: !13458)
!13492 = !DILocation(line: 4286, column: 37, scope: !13458)
!13493 = !DILocation(line: 4286, column: 57, scope: !13458)
!13494 = !DILocation(line: 4286, column: 19, scope: !13458)
!13495 = !DILocation(line: 4286, column: 17, scope: !13458)
!13496 = !DILocation(line: 4288, column: 13, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13458, file: !2, line: 4288, column: 13)
!13498 = !DILocation(line: 4288, column: 13, scope: !13458)
!13499 = !DILocation(line: 4289, column: 17, scope: !13497)
!13500 = !DILocation(line: 4291, column: 30, scope: !13458)
!13501 = !DILocation(line: 4294, column: 30, scope: !13458)
!13502 = !DILocation(line: 4291, column: 9, scope: !13458)
!13503 = !DILocation(line: 4295, column: 1, scope: !13458)
!13504 = distinct !DISubprogram(name: "rd_kafka_broker_consumer_toppars_serve", scope: !2, file: !2, line: 3593, type: !13505, scopeLine: 3593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13507)
!13505 = !DISubroutineType(types: !13506)
!13506 = !{!487, !412}
!13507 = !{!13508, !13509, !13510, !13511, !13512}
!13508 = !DILocalVariable(name: "rkb", arg: 1, scope: !13504, file: !2, line: 3593, type: !412)
!13509 = !DILocalVariable(name: "rktp", scope: !13504, file: !2, line: 3594, type: !368)
!13510 = !DILocalVariable(name: "rktp_tmp", scope: !13504, file: !2, line: 3594, type: !368)
!13511 = !DILocalVariable(name: "min_backoff", scope: !13504, file: !2, line: 3595, type: !487)
!13512 = !DILocalVariable(name: "backoff", scope: !13513, file: !2, line: 3598, type: !487)
!13513 = distinct !DILexicalBlock(scope: !13514, file: !2, line: 3597, column: 77)
!13514 = distinct !DILexicalBlock(scope: !13515, file: !2, line: 3597, column: 9)
!13515 = distinct !DILexicalBlock(scope: !13504, file: !2, line: 3597, column: 9)
!13516 = !DILocation(line: 3593, column: 74, scope: !13504)
!13517 = !DILocation(line: 3594, column: 9, scope: !13504)
!13518 = !DILocation(line: 3594, column: 28, scope: !13504)
!13519 = !DILocation(line: 3594, column: 35, scope: !13504)
!13520 = !DILocation(line: 3595, column: 9, scope: !13504)
!13521 = !DILocation(line: 3595, column: 17, scope: !13504)
!13522 = !DILocation(line: 3597, column: 9, scope: !13515)
!13523 = !DILocation(line: 3597, column: 9, scope: !13514)
!13524 = !DILocation(line: 0, scope: !13514)
!13525 = !DILocation(line: 3598, column: 17, scope: !13513)
!13526 = !DILocation(line: 3598, column: 25, scope: !13513)
!13527 = !DILocation(line: 3601, column: 65, scope: !13513)
!13528 = !DILocation(line: 3601, column: 70, scope: !13513)
!13529 = !DILocation(line: 3601, column: 27, scope: !13513)
!13530 = !DILocation(line: 3601, column: 25, scope: !13513)
!13531 = !DILocation(line: 3602, column: 21, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13513, file: !2, line: 3602, column: 21)
!13533 = !DILocation(line: 3602, column: 31, scope: !13532)
!13534 = !DILocation(line: 3602, column: 29, scope: !13532)
!13535 = !DILocation(line: 3602, column: 21, scope: !13513)
!13536 = !DILocation(line: 3603, column: 39, scope: !13532)
!13537 = !DILocation(line: 3603, column: 37, scope: !13532)
!13538 = !DILocation(line: 3603, column: 25, scope: !13532)
!13539 = !DILocation(line: 3604, column: 9, scope: !13514)
!13540 = !DILocation(line: 3604, column: 9, scope: !13513)
!13541 = distinct !{!13541, !13522, !13542, !4095}
!13542 = !DILocation(line: 3604, column: 9, scope: !13515)
!13543 = !DILocation(line: 3606, column: 16, scope: !13504)
!13544 = !DILocation(line: 3607, column: 1, scope: !13504)
!13545 = !DILocation(line: 3606, column: 9, scope: !13504)
!13546 = distinct !DISubprogram(name: "rd_kafka_broker_ops_io_serve", scope: !2, file: !2, line: 3527, type: !13547, scopeLine: 3527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13549)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{!561, !412, !487}
!13549 = !{!13550, !13551, !13552, !13553}
!13550 = !DILocalVariable(name: "rkb", arg: 1, scope: !13546, file: !2, line: 3527, type: !412)
!13551 = !DILocalVariable(name: "abs_timeout", arg: 2, scope: !13546, file: !2, line: 3527, type: !487)
!13552 = !DILocalVariable(name: "now", scope: !13546, file: !2, line: 3528, type: !487)
!13553 = !DILocalVariable(name: "wakeup", scope: !13546, file: !2, line: 3529, type: !561)
!13554 = !DILocation(line: 3527, column: 49, scope: !13546)
!13555 = !DILocation(line: 3527, column: 62, scope: !13546)
!13556 = !DILocation(line: 3528, column: 9, scope: !13546)
!13557 = !DILocation(line: 3528, column: 17, scope: !13546)
!13558 = !DILocation(line: 3529, column: 9, scope: !13546)
!13559 = !DILocation(line: 3529, column: 19, scope: !13546)
!13560 = !DILocation(line: 3531, column: 13, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13546, file: !2, line: 3531, column: 13)
!13562 = !DILocation(line: 3531, column: 13, scope: !13546)
!13563 = !DILocation(line: 3532, column: 31, scope: !13561)
!13564 = !DILocation(line: 3532, column: 42, scope: !13561)
!13565 = !DILocation(line: 3532, column: 29, scope: !13561)
!13566 = !DILocation(line: 3532, column: 17, scope: !13561)
!13567 = !DILocation(line: 3533, column: 18, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13561, file: !2, line: 3533, column: 18)
!13569 = !DILocation(line: 3533, column: 18, scope: !13561)
!13570 = !DILocation(line: 3534, column: 29, scope: !13568)
!13571 = !DILocation(line: 3534, column: 17, scope: !13568)
!13572 = !DILocation(line: 3535, column: 18, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13568, file: !2, line: 3535, column: 18)
!13574 = !DILocation(line: 3535, column: 18, scope: !13568)
!13575 = !DILocation(line: 3537, column: 21, scope: !13573)
!13576 = !DILocation(line: 3537, column: 32, scope: !13573)
!13577 = !DILocation(line: 3536, column: 29, scope: !13573)
!13578 = !DILocation(line: 3536, column: 17, scope: !13573)
!13579 = !DILocation(line: 3540, column: 13, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13546, file: !2, line: 3540, column: 13)
!13581 = !DILocation(line: 3540, column: 13, scope: !13546)
!13582 = !DILocation(line: 3549, column: 21, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13584, file: !2, line: 3549, column: 21)
!13584 = distinct !DILexicalBlock(scope: !13580, file: !2, line: 3540, column: 49)
!13585 = !DILocation(line: 3549, column: 33, scope: !13583)
!13586 = !DILocation(line: 3549, column: 37, scope: !13583)
!13587 = !DILocation(line: 3549, column: 55, scope: !13583)
!13588 = !DILocation(line: 3549, column: 60, scope: !13583)
!13589 = !DILocation(line: 3549, column: 40, scope: !13583)
!13590 = !DILocation(line: 3549, column: 69, scope: !13583)
!13591 = !DILocation(line: 3549, column: 21, scope: !13584)
!13592 = !DILocation(line: 3550, column: 37, scope: !13583)
!13593 = !DILocation(line: 3550, column: 25, scope: !13583)
!13594 = !DILocation(line: 3553, column: 25, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13584, file: !2, line: 3552, column: 21)
!13596 = !DILocation(line: 3553, column: 30, scope: !13595)
!13597 = !DILocation(line: 3553, column: 45, scope: !13595)
!13598 = !DILocation(line: 3553, column: 50, scope: !13595)
!13599 = !DILocation(line: 3554, column: 44, scope: !13595)
!13600 = !DILocation(line: 3554, column: 25, scope: !13595)
!13601 = !DILocation(line: 3552, column: 21, scope: !13595)
!13602 = !DILocation(line: 3552, column: 21, scope: !13584)
!13603 = !DILocation(line: 3555, column: 37, scope: !13595)
!13604 = !DILocation(line: 3555, column: 25, scope: !13595)
!13605 = !DILocation(line: 3556, column: 9, scope: !13584)
!13606 = !DILocation(line: 3561, column: 39, scope: !13546)
!13607 = !DILocation(line: 3561, column: 66, scope: !13546)
!13608 = !DILocation(line: 3561, column: 44, scope: !13546)
!13609 = !DILocation(line: 3561, column: 13, scope: !13546)
!13610 = !DILocation(line: 3560, column: 16, scope: !13546)
!13611 = !DILocation(line: 3563, column: 26, scope: !13546)
!13612 = !DILocation(line: 3563, column: 31, scope: !13546)
!13613 = !DILocation(line: 3563, column: 37, scope: !13546)
!13614 = !DILocation(line: 3563, column: 9, scope: !13546)
!13615 = !DILocation(line: 3567, column: 13, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13546, file: !2, line: 3567, column: 13)
!13617 = !DILocation(line: 0, scope: !13616)
!13618 = !DILocation(line: 3567, column: 13, scope: !13546)
!13619 = !DILocation(line: 3569, column: 17, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13616, file: !2, line: 3568, column: 69)
!13621 = !DILocation(line: 3570, column: 43, scope: !13620)
!13622 = !DILocation(line: 3570, column: 17, scope: !13620)
!13623 = !DILocation(line: 3572, column: 17, scope: !13620)
!13624 = !DILocation(line: 3573, column: 24, scope: !13620)
!13625 = !DILocation(line: 3574, column: 9, scope: !13620)
!13626 = !DILocation(line: 3577, column: 15, scope: !13546)
!13627 = !DILocation(line: 3577, column: 13, scope: !13546)
!13628 = !DILocation(line: 3578, column: 13, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13546, file: !2, line: 3578, column: 13)
!13630 = !DILocation(line: 3578, column: 69, scope: !13629)
!13631 = !DILocation(line: 3578, column: 13, scope: !13546)
!13632 = !DILocation(line: 3579, column: 46, scope: !13629)
!13633 = !DILocation(line: 3579, column: 51, scope: !13629)
!13634 = !DILocation(line: 3579, column: 17, scope: !13629)
!13635 = !DILocation(line: 3581, column: 16, scope: !13546)
!13636 = !DILocation(line: 3582, column: 1, scope: !13546)
!13637 = !DILocation(line: 3581, column: 9, scope: !13546)
!13638 = distinct !DISubprogram(name: "rd_kafka_broker_toppars_timeout_scan", scope: !2, file: !2, line: 3680, type: !13639, scopeLine: 3681, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13641)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{!487, !412, !487}
!13641 = !{!13642, !13643, !13644, !13645, !13646}
!13642 = !DILocalVariable(name: "rkb", arg: 1, scope: !13638, file: !2, line: 3680, type: !412)
!13643 = !DILocalVariable(name: "now", arg: 2, scope: !13638, file: !2, line: 3681, type: !487)
!13644 = !DILocalVariable(name: "rktp", scope: !13638, file: !2, line: 3682, type: !368)
!13645 = !DILocalVariable(name: "next", scope: !13638, file: !2, line: 3683, type: !487)
!13646 = !DILocalVariable(name: "this_next", scope: !13647, file: !2, line: 3686, type: !487)
!13647 = distinct !DILexicalBlock(scope: !13648, file: !2, line: 3685, column: 62)
!13648 = distinct !DILexicalBlock(scope: !13649, file: !2, line: 3685, column: 9)
!13649 = distinct !DILexicalBlock(scope: !13638, file: !2, line: 3685, column: 9)
!13650 = !DILocation(line: 3680, column: 72, scope: !13638)
!13651 = !DILocation(line: 3681, column: 61, scope: !13638)
!13652 = !DILocation(line: 3682, column: 9, scope: !13638)
!13653 = !DILocation(line: 3682, column: 28, scope: !13638)
!13654 = !DILocation(line: 3683, column: 9, scope: !13638)
!13655 = !DILocation(line: 3683, column: 17, scope: !13638)
!13656 = !DILocation(line: 3683, column: 24, scope: !13638)
!13657 = !DILocation(line: 3683, column: 28, scope: !13638)
!13658 = !DILocation(line: 3685, column: 9, scope: !13649)
!13659 = !DILocation(line: 3685, column: 9, scope: !13648)
!13660 = !DILocation(line: 3686, column: 17, scope: !13647)
!13661 = !DILocation(line: 3686, column: 25, scope: !13647)
!13662 = !DILocation(line: 3688, column: 17, scope: !13647)
!13663 = !DILocation(line: 3690, column: 21, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13647, file: !2, line: 3690, column: 21)
!13665 = !DILocation(line: 3690, column: 21, scope: !13647)
!13666 = !DILocation(line: 3693, column: 25, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13664, file: !2, line: 3690, column: 57)
!13668 = !DILocation(line: 3694, column: 25, scope: !13667)
!13669 = !DILocation(line: 3698, column: 50, scope: !13647)
!13670 = !DILocation(line: 3698, column: 55, scope: !13647)
!13671 = !DILocation(line: 3698, column: 61, scope: !13647)
!13672 = !DILocation(line: 3698, column: 17, scope: !13647)
!13673 = !DILocation(line: 3700, column: 17, scope: !13647)
!13674 = !DILocation(line: 3702, column: 21, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13647, file: !2, line: 3702, column: 21)
!13676 = !DILocation(line: 3702, column: 31, scope: !13675)
!13677 = !DILocation(line: 3702, column: 34, scope: !13675)
!13678 = !DILocation(line: 3702, column: 46, scope: !13675)
!13679 = !DILocation(line: 3702, column: 44, scope: !13675)
!13680 = !DILocation(line: 3702, column: 21, scope: !13647)
!13681 = !DILocation(line: 3703, column: 32, scope: !13675)
!13682 = !DILocation(line: 3703, column: 30, scope: !13675)
!13683 = !DILocation(line: 3703, column: 25, scope: !13675)
!13684 = !DILocation(line: 3704, column: 9, scope: !13648)
!13685 = !DILocation(line: 3704, column: 9, scope: !13647)
!13686 = distinct !{!13686, !13658, !13687, !4095}
!13687 = !DILocation(line: 3704, column: 9, scope: !13649)
!13688 = !DILocation(line: 3706, column: 16, scope: !13638)
!13689 = !DILocation(line: 3707, column: 1, scope: !13638)
!13690 = !DILocation(line: 3706, column: 9, scope: !13638)
!13691 = !DISubprogram(name: "rd_kafka_broker_consumer_toppar_serve", scope: !371, file: !371, line: 629, type: !13692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!487, !412, !368}
!13694 = distinct !DISubprogram(name: "rd_kafka_q_len", scope: !506, file: !506, line: 632, type: !13695, scopeLine: 632, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13697)
!13695 = !DISubroutineType(types: !13696)
!13696 = !{!126, !503}
!13697 = !{!13698, !13699, !13700}
!13698 = !DILocalVariable(name: "rkq", arg: 1, scope: !13694, file: !506, line: 632, type: !503)
!13699 = !DILocalVariable(name: "qlen", scope: !13694, file: !506, line: 633, type: !126)
!13700 = !DILocalVariable(name: "fwdq", scope: !13694, file: !506, line: 634, type: !503)
!13701 = !DILocation(line: 632, column: 61, scope: !13694)
!13702 = !DILocation(line: 633, column: 9, scope: !13694)
!13703 = !DILocation(line: 633, column: 13, scope: !13694)
!13704 = !DILocation(line: 634, column: 9, scope: !13694)
!13705 = !DILocation(line: 634, column: 23, scope: !13694)
!13706 = !DILocation(line: 635, column: 19, scope: !13694)
!13707 = !DILocation(line: 635, column: 24, scope: !13694)
!13708 = !DILocation(line: 635, column: 9, scope: !13694)
!13709 = !DILocation(line: 636, column: 41, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13694, file: !506, line: 636, column: 13)
!13711 = !DILocation(line: 636, column: 22, scope: !13710)
!13712 = !DILocation(line: 636, column: 20, scope: !13710)
!13713 = !DILocation(line: 636, column: 13, scope: !13694)
!13714 = !DILocation(line: 637, column: 24, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13710, file: !506, line: 636, column: 51)
!13716 = !DILocation(line: 637, column: 29, scope: !13715)
!13717 = !DILocation(line: 637, column: 22, scope: !13715)
!13718 = !DILocation(line: 638, column: 29, scope: !13715)
!13719 = !DILocation(line: 638, column: 34, scope: !13715)
!13720 = !DILocation(line: 638, column: 17, scope: !13715)
!13721 = !DILocation(line: 639, column: 9, scope: !13715)
!13722 = !DILocation(line: 640, column: 29, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13710, file: !506, line: 639, column: 16)
!13724 = !DILocation(line: 640, column: 34, scope: !13723)
!13725 = !DILocation(line: 640, column: 17, scope: !13723)
!13726 = !DILocation(line: 641, column: 39, scope: !13723)
!13727 = !DILocation(line: 641, column: 24, scope: !13723)
!13728 = !DILocation(line: 641, column: 22, scope: !13723)
!13729 = !DILocation(line: 642, column: 17, scope: !13723)
!13730 = !DILocation(line: 644, column: 16, scope: !13694)
!13731 = !DILocation(line: 645, column: 1, scope: !13694)
!13732 = !DILocation(line: 644, column: 9, scope: !13694)
!13733 = !DISubprogram(name: "rd_kafka_transport_io_serve", scope: !497, file: !497, line: 41, type: !13734, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13734 = !DISubroutineType(types: !13735)
!13735 = !{!126, !495, !503, !126}
!13736 = distinct !DISubprogram(name: "rd_kafka_broker_timeout_scan", scope: !2, file: !2, line: 901, type: !13150, scopeLine: 901, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13737)
!13737 = !{!13738, !13739, !13740, !13741, !13742, !13743, !13744, !13748}
!13738 = !DILocalVariable(name: "rkb", arg: 1, scope: !13736, file: !2, line: 901, type: !412)
!13739 = !DILocalVariable(name: "now", arg: 2, scope: !13736, file: !2, line: 901, type: !487)
!13740 = !DILocalVariable(name: "inflight_cnt", scope: !13736, file: !2, line: 902, type: !126)
!13741 = !DILocalVariable(name: "retry_cnt", scope: !13736, file: !2, line: 902, type: !126)
!13742 = !DILocalVariable(name: "outq_cnt", scope: !13736, file: !2, line: 902, type: !126)
!13743 = !DILocalVariable(name: "partial_cnt", scope: !13736, file: !2, line: 903, type: !126)
!13744 = !DILocalVariable(name: "_logname", scope: !13745, file: !2, line: 923, type: !924)
!13745 = distinct !DILexicalBlock(scope: !13746, file: !2, line: 923, column: 17)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !2, line: 922, column: 68)
!13747 = distinct !DILexicalBlock(scope: !13736, file: !2, line: 922, column: 13)
!13748 = !DILocalVariable(name: "rttinfo", scope: !13749, file: !2, line: 941, type: !3128)
!13749 = distinct !DILexicalBlock(scope: !13750, file: !2, line: 940, column: 67)
!13750 = distinct !DILexicalBlock(scope: !13746, file: !2, line: 936, column: 21)
!13751 = !DILocation(line: 901, column: 61, scope: !13736)
!13752 = !DILocation(line: 901, column: 74, scope: !13736)
!13753 = !DILocation(line: 902, column: 9, scope: !13736)
!13754 = !DILocation(line: 902, column: 13, scope: !13736)
!13755 = !DILocation(line: 902, column: 27, scope: !13736)
!13756 = !DILocation(line: 902, column: 38, scope: !13736)
!13757 = !DILocation(line: 903, column: 9, scope: !13736)
!13758 = !DILocation(line: 903, column: 13, scope: !13736)
!13759 = !DILocation(line: 905, column: 9, scope: !13736)
!13760 = !DILocation(line: 905, column: 9, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13762, file: !2, line: 905, column: 9)
!13762 = distinct !DILexicalBlock(scope: !13736, file: !2, line: 905, column: 9)
!13763 = !DILocation(line: 905, column: 9, scope: !13762)
!13764 = !DILocation(line: 909, column: 13, scope: !13736)
!13765 = !DILocation(line: 909, column: 22, scope: !13736)
!13766 = !DILocation(line: 909, column: 27, scope: !13736)
!13767 = !DILocation(line: 910, column: 13, scope: !13736)
!13768 = !DILocation(line: 908, column: 24, scope: !13736)
!13769 = !DILocation(line: 908, column: 22, scope: !13736)
!13770 = !DILocation(line: 913, column: 13, scope: !13736)
!13771 = !DILocation(line: 913, column: 22, scope: !13736)
!13772 = !DILocation(line: 913, column: 27, scope: !13736)
!13773 = !DILocation(line: 914, column: 49, scope: !13736)
!13774 = !DILocation(line: 912, column: 21, scope: !13736)
!13775 = !DILocation(line: 912, column: 19, scope: !13736)
!13776 = !DILocation(line: 919, column: 13, scope: !13736)
!13777 = !DILocation(line: 919, column: 22, scope: !13736)
!13778 = !DILocation(line: 919, column: 27, scope: !13736)
!13779 = !DILocation(line: 920, column: 49, scope: !13736)
!13780 = !DILocation(line: 918, column: 20, scope: !13736)
!13781 = !DILocation(line: 918, column: 18, scope: !13736)
!13782 = !DILocation(line: 922, column: 13, scope: !13747)
!13783 = !DILocation(line: 922, column: 28, scope: !13747)
!13784 = !DILocation(line: 922, column: 26, scope: !13747)
!13785 = !DILocation(line: 922, column: 40, scope: !13747)
!13786 = !DILocation(line: 922, column: 38, scope: !13747)
!13787 = !DILocation(line: 922, column: 51, scope: !13747)
!13788 = !DILocation(line: 922, column: 49, scope: !13747)
!13789 = !DILocation(line: 922, column: 63, scope: !13747)
!13790 = !DILocation(line: 922, column: 13, scope: !13736)
!13791 = !DILocation(line: 923, column: 17, scope: !13746)
!13792 = !DILocation(line: 923, column: 17, scope: !13745)
!13793 = !DILocation(line: 928, column: 42, scope: !13746)
!13794 = !DILocation(line: 928, column: 57, scope: !13746)
!13795 = !DILocation(line: 928, column: 55, scope: !13746)
!13796 = !DILocation(line: 928, column: 17, scope: !13746)
!13797 = !DILocation(line: 928, column: 22, scope: !13746)
!13798 = !DILocation(line: 928, column: 39, scope: !13746)
!13799 = !DILocation(line: 929, column: 34, scope: !13746)
!13800 = !DILocation(line: 929, column: 39, scope: !13746)
!13801 = !DILocation(line: 929, column: 45, scope: !13746)
!13802 = !DILocation(line: 930, column: 33, scope: !13746)
!13803 = !DILocation(line: 930, column: 48, scope: !13746)
!13804 = !DILocation(line: 930, column: 46, scope: !13746)
!13805 = !DILocation(line: 929, column: 17, scope: !13746)
!13806 = !DILocation(line: 936, column: 21, scope: !13750)
!13807 = !DILocation(line: 936, column: 33, scope: !13750)
!13808 = !DILocation(line: 936, column: 37, scope: !13750)
!13809 = !DILocation(line: 937, column: 22, scope: !13750)
!13810 = !DILocation(line: 937, column: 27, scope: !13750)
!13811 = !DILocation(line: 937, column: 35, scope: !13750)
!13812 = !DILocation(line: 937, column: 43, scope: !13750)
!13813 = !{!4141, !3941, i64 660}
!13814 = !DILocation(line: 937, column: 60, scope: !13750)
!13815 = !DILocation(line: 938, column: 22, scope: !13750)
!13816 = !DILocation(line: 938, column: 27, scope: !13750)
!13817 = !DILocation(line: 939, column: 26, scope: !13750)
!13818 = !DILocation(line: 939, column: 31, scope: !13750)
!13819 = !DILocation(line: 939, column: 39, scope: !13750)
!13820 = !DILocation(line: 939, column: 47, scope: !13750)
!13821 = !DILocation(line: 938, column: 44, scope: !13750)
!13822 = !DILocation(line: 939, column: 64, scope: !13750)
!13823 = !DILocation(line: 940, column: 22, scope: !13750)
!13824 = !DILocation(line: 940, column: 27, scope: !13750)
!13825 = !DILocation(line: 940, column: 37, scope: !13750)
!13826 = !DILocation(line: 936, column: 21, scope: !13746)
!13827 = !DILocation(line: 941, column: 25, scope: !13749)
!13828 = !DILocation(line: 941, column: 30, scope: !13749)
!13829 = !DILocation(line: 943, column: 38, scope: !13749)
!13830 = !DILocation(line: 943, column: 43, scope: !13749)
!13831 = !DILocation(line: 943, column: 56, scope: !13749)
!13832 = !DILocation(line: 943, column: 25, scope: !13749)
!13833 = !DILocation(line: 944, column: 29, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13749, file: !2, line: 944, column: 29)
!13835 = !DILocation(line: 944, column: 34, scope: !13834)
!13836 = !DILocation(line: 944, column: 46, scope: !13834)
!13837 = !DILocation(line: 944, column: 51, scope: !13834)
!13838 = !{!3939, !3942, i64 1464}
!13839 = !DILocation(line: 944, column: 29, scope: !13749)
!13840 = !DILocation(line: 945, column: 33, scope: !13834)
!13841 = !DILocation(line: 950, column: 33, scope: !13834)
!13842 = !DILocation(line: 950, column: 44, scope: !13834)
!13843 = !DILocation(line: 951, column: 46, scope: !13749)
!13844 = !DILocation(line: 955, column: 46, scope: !13749)
!13845 = !DILocation(line: 955, column: 51, scope: !13749)
!13846 = !DILocation(line: 955, column: 69, scope: !13749)
!13847 = !DILocation(line: 951, column: 25, scope: !13749)
!13848 = !DILocation(line: 956, column: 17, scope: !13750)
!13849 = !DILocation(line: 956, column: 17, scope: !13749)
!13850 = !DILocation(line: 957, column: 9, scope: !13746)
!13851 = !DILocation(line: 958, column: 1, scope: !13736)
!13852 = distinct !DISubprogram(name: "rd_avg_calc", scope: !2406, file: !2406, line: 98, type: !13853, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13855)
!13853 = !DISubroutineType(types: !13854)
!13854 = !{null, !8224, !487}
!13855 = !{!13856, !13857, !13858}
!13856 = !DILocalVariable(name: "ra", arg: 1, scope: !13852, file: !2406, line: 98, type: !8224)
!13857 = !DILocalVariable(name: "now", arg: 2, scope: !13852, file: !2406, line: 98, type: !487)
!13858 = !DILocalVariable(name: "elapsed", scope: !13859, file: !2406, line: 105, type: !487)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !2406, line: 104, column: 16)
!13860 = distinct !DILexicalBlock(scope: !13852, file: !2406, line: 99, column: 13)
!13861 = !DILocation(line: 98, column: 45, scope: !13852)
!13862 = !DILocation(line: 98, column: 57, scope: !13852)
!13863 = !DILocation(line: 99, column: 13, scope: !13860)
!13864 = !DILocation(line: 99, column: 17, scope: !13860)
!13865 = !DILocation(line: 99, column: 25, scope: !13860)
!13866 = !DILocation(line: 99, column: 13, scope: !13852)
!13867 = !DILocation(line: 100, column: 21, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13869, file: !2406, line: 100, column: 21)
!13869 = distinct !DILexicalBlock(scope: !13860, file: !2406, line: 99, column: 42)
!13870 = !DILocation(line: 100, column: 25, scope: !13868)
!13871 = !DILocation(line: 100, column: 30, scope: !13868)
!13872 = !DILocation(line: 100, column: 21, scope: !13869)
!13873 = !DILocation(line: 101, column: 40, scope: !13868)
!13874 = !DILocation(line: 101, column: 44, scope: !13868)
!13875 = !DILocation(line: 101, column: 49, scope: !13868)
!13876 = !DILocation(line: 101, column: 55, scope: !13868)
!13877 = !DILocation(line: 101, column: 59, scope: !13868)
!13878 = !DILocation(line: 101, column: 64, scope: !13868)
!13879 = !DILocation(line: 101, column: 53, scope: !13868)
!13880 = !DILocation(line: 101, column: 25, scope: !13868)
!13881 = !DILocation(line: 101, column: 29, scope: !13868)
!13882 = !DILocation(line: 101, column: 34, scope: !13868)
!13883 = !DILocation(line: 101, column: 38, scope: !13868)
!13884 = !{!3948, !3942, i64 16}
!13885 = !DILocation(line: 103, column: 25, scope: !13868)
!13886 = !DILocation(line: 103, column: 29, scope: !13868)
!13887 = !DILocation(line: 103, column: 34, scope: !13868)
!13888 = !DILocation(line: 103, column: 38, scope: !13868)
!13889 = !DILocation(line: 104, column: 9, scope: !13869)
!13890 = !DILocation(line: 105, column: 17, scope: !13859)
!13891 = !DILocation(line: 105, column: 25, scope: !13859)
!13892 = !DILocation(line: 105, column: 35, scope: !13859)
!13893 = !DILocation(line: 105, column: 41, scope: !13859)
!13894 = !DILocation(line: 105, column: 45, scope: !13859)
!13895 = !DILocation(line: 105, column: 50, scope: !13859)
!13896 = !DILocation(line: 105, column: 39, scope: !13859)
!13897 = !DILocation(line: 107, column: 21, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13859, file: !2406, line: 107, column: 21)
!13899 = !DILocation(line: 107, column: 21, scope: !13859)
!13900 = !DILocation(line: 108, column: 41, scope: !13898)
!13901 = !DILocation(line: 108, column: 45, scope: !13898)
!13902 = !DILocation(line: 108, column: 50, scope: !13898)
!13903 = !DILocation(line: 108, column: 54, scope: !13898)
!13904 = !DILocation(line: 108, column: 70, scope: !13898)
!13905 = !DILocation(line: 108, column: 68, scope: !13898)
!13906 = !DILocation(line: 108, column: 25, scope: !13898)
!13907 = !DILocation(line: 108, column: 29, scope: !13898)
!13908 = !DILocation(line: 108, column: 34, scope: !13898)
!13909 = !DILocation(line: 108, column: 38, scope: !13898)
!13910 = !DILocation(line: 110, column: 25, scope: !13898)
!13911 = !DILocation(line: 110, column: 29, scope: !13898)
!13912 = !DILocation(line: 110, column: 34, scope: !13898)
!13913 = !DILocation(line: 110, column: 38, scope: !13898)
!13914 = !DILocation(line: 112, column: 34, scope: !13859)
!13915 = !DILocation(line: 112, column: 17, scope: !13859)
!13916 = !DILocation(line: 112, column: 21, scope: !13859)
!13917 = !DILocation(line: 112, column: 26, scope: !13859)
!13918 = !DILocation(line: 112, column: 32, scope: !13859)
!13919 = !DILocation(line: 113, column: 9, scope: !13860)
!13920 = !DILocation(line: 114, column: 1, scope: !13852)
!13921 = distinct !DISubprogram(name: "rd_kafka_broker_toppar_msgq_scan", scope: !2, file: !2, line: 3622, type: !13922, scopeLine: 3625, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !13925)
!13922 = !DISubroutineType(types: !13923)
!13923 = !{!126, !412, !368, !487, !13924}
!13924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!13925 = !{!13926, !13927, !13928, !13929, !13930, !13931, !13932, !13933, !13934, !13935, !13936, !13937, !13938}
!13926 = !DILocalVariable(name: "rkb", arg: 1, scope: !13921, file: !2, line: 3622, type: !412)
!13927 = !DILocalVariable(name: "rktp", arg: 2, scope: !13921, file: !2, line: 3623, type: !368)
!13928 = !DILocalVariable(name: "now", arg: 3, scope: !13921, file: !2, line: 3624, type: !487)
!13929 = !DILocalVariable(name: "abs_next_timeout", arg: 4, scope: !13921, file: !2, line: 3625, type: !13924)
!13930 = !DILocalVariable(name: "xtimedout", scope: !13921, file: !2, line: 3626, type: !1824)
!13931 = !DILocalVariable(name: "qtimedout", scope: !13921, file: !2, line: 3627, type: !1824)
!13932 = !DILocalVariable(name: "xcnt", scope: !13921, file: !2, line: 3628, type: !126)
!13933 = !DILocalVariable(name: "qcnt", scope: !13921, file: !2, line: 3628, type: !126)
!13934 = !DILocalVariable(name: "cnt", scope: !13921, file: !2, line: 3628, type: !126)
!13935 = !DILocalVariable(name: "first", scope: !13921, file: !2, line: 3629, type: !937)
!13936 = !DILocalVariable(name: "last", scope: !13921, file: !2, line: 3629, type: !937)
!13937 = !DILocalVariable(name: "next", scope: !13921, file: !2, line: 3630, type: !487)
!13938 = !DILocalVariable(name: "_logname", scope: !13939, file: !2, line: 3655, type: !924)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !2, line: 3655, column: 9)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !2, line: 3655, column: 9)
!13941 = distinct !DILexicalBlock(scope: !13942, file: !2, line: 3655, column: 9)
!13942 = distinct !DILexicalBlock(scope: !13921, file: !2, line: 3655, column: 9)
!13943 = !DILocation(line: 3622, column: 64, scope: !13921)
!13944 = !DILocation(line: 3623, column: 64, scope: !13921)
!13945 = !DILocation(line: 3624, column: 53, scope: !13921)
!13946 = !DILocation(line: 3625, column: 54, scope: !13921)
!13947 = !DILocation(line: 3626, column: 9, scope: !13921)
!13948 = !DILocation(line: 3626, column: 25, scope: !13921)
!13949 = !DILocation(line: 3626, column: 37, scope: !13921)
!13950 = !DILocation(line: 3627, column: 9, scope: !13921)
!13951 = !DILocation(line: 3627, column: 25, scope: !13921)
!13952 = !DILocation(line: 3627, column: 37, scope: !13921)
!13953 = !DILocation(line: 3628, column: 9, scope: !13921)
!13954 = !DILocation(line: 3628, column: 13, scope: !13921)
!13955 = !DILocation(line: 3628, column: 19, scope: !13921)
!13956 = !DILocation(line: 3628, column: 25, scope: !13921)
!13957 = !DILocation(line: 3629, column: 9, scope: !13921)
!13958 = !DILocation(line: 3629, column: 18, scope: !13921)
!13959 = !DILocation(line: 3629, column: 25, scope: !13921)
!13960 = !DILocation(line: 3630, column: 9, scope: !13921)
!13961 = !DILocation(line: 3630, column: 17, scope: !13921)
!13962 = !DILocation(line: 3632, column: 10, scope: !13921)
!13963 = !DILocation(line: 3632, column: 27, scope: !13921)
!13964 = !DILocation(line: 3634, column: 39, scope: !13921)
!13965 = !DILocation(line: 3634, column: 46, scope: !13921)
!13966 = !DILocation(line: 3634, column: 52, scope: !13921)
!13967 = !DILocation(line: 3635, column: 39, scope: !13921)
!13968 = !DILocation(line: 3634, column: 16, scope: !13921)
!13969 = !DILocation(line: 3634, column: 14, scope: !13921)
!13970 = !DILocation(line: 3636, column: 13, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13921, file: !2, line: 3636, column: 13)
!13972 = !DILocation(line: 3636, column: 18, scope: !13971)
!13973 = !DILocation(line: 3636, column: 21, scope: !13971)
!13974 = !DILocation(line: 3636, column: 29, scope: !13971)
!13975 = !DILocation(line: 3636, column: 28, scope: !13971)
!13976 = !DILocation(line: 3636, column: 26, scope: !13971)
!13977 = !DILocation(line: 3636, column: 13, scope: !13921)
!13978 = !DILocation(line: 3637, column: 37, scope: !13971)
!13979 = !DILocation(line: 3637, column: 18, scope: !13971)
!13980 = !DILocation(line: 3637, column: 35, scope: !13971)
!13981 = !DILocation(line: 3637, column: 17, scope: !13971)
!13982 = !DILocation(line: 3639, column: 39, scope: !13921)
!13983 = !DILocation(line: 3639, column: 46, scope: !13921)
!13984 = !DILocation(line: 3639, column: 52, scope: !13921)
!13985 = !DILocation(line: 3639, column: 75, scope: !13921)
!13986 = !DILocation(line: 3639, column: 16, scope: !13921)
!13987 = !DILocation(line: 3639, column: 14, scope: !13921)
!13988 = !DILocation(line: 3641, column: 13, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13921, file: !2, line: 3641, column: 13)
!13990 = !DILocation(line: 3641, column: 18, scope: !13989)
!13991 = !DILocation(line: 3641, column: 24, scope: !13989)
!13992 = !DILocation(line: 3641, column: 23, scope: !13989)
!13993 = !DILocation(line: 3641, column: 41, scope: !13989)
!13994 = !DILocation(line: 3641, column: 44, scope: !13989)
!13995 = !DILocation(line: 3641, column: 52, scope: !13989)
!13996 = !DILocation(line: 3641, column: 51, scope: !13989)
!13997 = !DILocation(line: 3641, column: 49, scope: !13989)
!13998 = !DILocation(line: 3641, column: 13, scope: !13921)
!13999 = !DILocation(line: 3642, column: 37, scope: !13989)
!14000 = !DILocation(line: 3642, column: 18, scope: !13989)
!14001 = !DILocation(line: 3642, column: 35, scope: !13989)
!14002 = !DILocation(line: 3642, column: 17, scope: !13989)
!14003 = !DILocation(line: 3644, column: 15, scope: !13921)
!14004 = !DILocation(line: 3644, column: 22, scope: !13921)
!14005 = !DILocation(line: 3644, column: 20, scope: !13921)
!14006 = !DILocation(line: 3644, column: 13, scope: !13921)
!14007 = !DILocation(line: 3645, column: 13, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !13921, file: !2, line: 3645, column: 13)
!14009 = !DILocation(line: 3645, column: 13, scope: !13921)
!14010 = !DILocation(line: 3646, column: 17, scope: !14008)
!14011 = !DILocation(line: 3650, column: 35, scope: !13921)
!14012 = !DILocation(line: 3650, column: 41, scope: !13921)
!14013 = !DILocation(line: 3650, column: 51, scope: !13921)
!14014 = !DILocation(line: 3650, column: 60, scope: !13921)
!14015 = !DILocation(line: 3649, column: 9, scope: !13921)
!14016 = !DILocation(line: 3652, column: 17, scope: !13921)
!14017 = !DILocation(line: 3652, column: 50, scope: !13921)
!14018 = !DILocation(line: 3652, column: 65, scope: !13921)
!14019 = !DILocation(line: 3652, column: 15, scope: !13921)
!14020 = !DILocation(line: 3653, column: 17, scope: !13921)
!14021 = !DILocation(line: 3653, column: 49, scope: !13921)
!14022 = !DILocation(line: 3653, column: 64, scope: !13921)
!14023 = !DILocation(line: 3653, column: 15, scope: !13921)
!14024 = !DILocation(line: 3655, column: 9, scope: !13921)
!14025 = !DILocation(line: 3655, column: 9, scope: !13941)
!14026 = !DILocation(line: 3655, column: 9, scope: !13942)
!14027 = !DILocation(line: 3655, column: 9, scope: !13940)
!14028 = !DILocation(line: 3655, column: 9, scope: !13939)
!14029 = !DILocation(line: 3664, column: 26, scope: !13921)
!14030 = !DILocation(line: 3664, column: 32, scope: !13921)
!14031 = !DILocation(line: 3664, column: 9, scope: !13921)
!14032 = !DILocation(line: 3667, column: 16, scope: !13921)
!14033 = !DILocation(line: 3667, column: 9, scope: !13921)
!14034 = !DILocation(line: 3668, column: 1, scope: !13921)
!14035 = !DISubprogram(name: "rd_kafka_msgq_age_scan", scope: !1825, file: !1825, line: 528, type: !14036, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14036 = !DISubroutineType(types: !14037)
!14037 = !{!126, !377, !8404, !8404, !487, !13924}
!14038 = distinct !DISubprogram(name: "rd_kafka_broker_produce_toppars", scope: !2, file: !2, line: 4087, type: !14039, scopeLine: 4090, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14041)
!14039 = !DISubroutineType(types: !14040)
!14040 = !{!126, !412, !487, !13924, !561}
!14041 = !{!14042, !14043, !14044, !14045, !14046, !14047, !14048, !14049, !14050, !14051, !14052, !14054, !14056}
!14042 = !DILocalVariable(name: "rkb", arg: 1, scope: !14038, file: !2, line: 4087, type: !412)
!14043 = !DILocalVariable(name: "now", arg: 2, scope: !14038, file: !2, line: 4088, type: !487)
!14044 = !DILocalVariable(name: "next_wakeup", arg: 3, scope: !14038, file: !2, line: 4089, type: !13924)
!14045 = !DILocalVariable(name: "do_timeout_scan", arg: 4, scope: !14038, file: !2, line: 4090, type: !561)
!14046 = !DILocalVariable(name: "rktp", scope: !14038, file: !2, line: 4091, type: !368)
!14047 = !DILocalVariable(name: "cnt", scope: !14038, file: !2, line: 4092, type: !126)
!14048 = !DILocalVariable(name: "ret_next_wakeup", scope: !14038, file: !2, line: 4093, type: !487)
!14049 = !DILocalVariable(name: "pid", scope: !14038, file: !2, line: 4094, type: !1538)
!14050 = !DILocalVariable(name: "may_send", scope: !14038, file: !2, line: 4095, type: !561)
!14051 = !DILocalVariable(name: "flushing", scope: !14038, file: !2, line: 4096, type: !561)
!14052 = !DILocalVariable(name: "this_next_wakeup", scope: !14053, file: !2, line: 4125, type: !487)
!14053 = distinct !DILexicalBlock(scope: !14038, file: !2, line: 4124, column: 12)
!14054 = !DILocalVariable(name: "__n", scope: !14055, file: !2, line: 4132, type: !13924)
!14055 = distinct !DILexicalBlock(scope: !14053, file: !2, line: 4132, column: 17)
!14056 = !DILocalVariable(name: "__m", scope: !14055, file: !2, line: 4132, type: !487)
!14057 = !DILocation(line: 4087, column: 63, scope: !14038)
!14058 = !DILocation(line: 4088, column: 52, scope: !14038)
!14059 = !DILocation(line: 4089, column: 53, scope: !14038)
!14060 = !DILocation(line: 4090, column: 54, scope: !14038)
!14061 = !DILocation(line: 4091, column: 9, scope: !14038)
!14062 = !DILocation(line: 4091, column: 28, scope: !14038)
!14063 = !DILocation(line: 4092, column: 9, scope: !14038)
!14064 = !DILocation(line: 4092, column: 13, scope: !14038)
!14065 = !DILocation(line: 4093, column: 9, scope: !14038)
!14066 = !DILocation(line: 4093, column: 17, scope: !14038)
!14067 = !DILocation(line: 4093, column: 36, scope: !14038)
!14068 = !DILocation(line: 4093, column: 35, scope: !14038)
!14069 = !DILocation(line: 4094, column: 9, scope: !14038)
!14070 = !DILocation(line: 4094, column: 24, scope: !14038)
!14071 = !DILocation(line: 4095, column: 9, scope: !14038)
!14072 = !DILocation(line: 4095, column: 19, scope: !14038)
!14073 = !DILocation(line: 4096, column: 9, scope: !14038)
!14074 = !DILocation(line: 4096, column: 19, scope: !14038)
!14075 = !DILocation(line: 4099, column: 16, scope: !14038)
!14076 = !DILocation(line: 4099, column: 21, scope: !14038)
!14077 = !DILocation(line: 4099, column: 14, scope: !14038)
!14078 = !DILocation(line: 4100, column: 13, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14038, file: !2, line: 4100, column: 13)
!14080 = !DILocation(line: 4100, column: 13, scope: !14038)
!14081 = !DILocation(line: 4101, column: 17, scope: !14079)
!14082 = !DILocation(line: 4103, column: 13, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14038, file: !2, line: 4103, column: 13)
!14084 = !DILocation(line: 4103, column: 13, scope: !14038)
!14085 = !DILocation(line: 4105, column: 23, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14083, file: !2, line: 4103, column: 50)
!14087 = !{i64 0, i64 8, !4039, i64 8, i64 2, !3915}
!14088 = !DILocation(line: 4112, column: 22, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14086, file: !2, line: 4112, column: 21)
!14090 = !{!4158, !3942, i64 0}
!14091 = !DILocation(line: 4112, column: 21, scope: !14086)
!14092 = !DILocation(line: 4113, column: 34, scope: !14089)
!14093 = !DILocation(line: 4113, column: 25, scope: !14089)
!14094 = !DILocation(line: 4114, column: 26, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14089, file: !2, line: 4114, column: 26)
!14096 = !DILocation(line: 4114, column: 65, scope: !14095)
!14097 = !DILocation(line: 4115, column: 53, scope: !14095)
!14098 = !DILocation(line: 4115, column: 58, scope: !14095)
!14099 = !DILocation(line: 4115, column: 27, scope: !14095)
!14100 = !DILocation(line: 4114, column: 26, scope: !14089)
!14101 = !DILocation(line: 4116, column: 34, scope: !14095)
!14102 = !DILocation(line: 4116, column: 25, scope: !14095)
!14103 = !DILocation(line: 4118, column: 22, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14086, file: !2, line: 4118, column: 21)
!14105 = !DILocation(line: 4118, column: 31, scope: !14104)
!14106 = !DILocation(line: 4118, column: 35, scope: !14104)
!14107 = !DILocation(line: 4118, column: 21, scope: !14086)
!14108 = !DILocation(line: 4119, column: 25, scope: !14104)
!14109 = !DILocation(line: 4120, column: 9, scope: !14086)
!14110 = !DILocation(line: 4122, column: 20, scope: !14038)
!14111 = !DILocation(line: 4122, column: 29, scope: !14038)
!14112 = !DILocation(line: 4122, column: 49, scope: !14038)
!14113 = !DILocation(line: 4122, column: 54, scope: !14038)
!14114 = !DILocation(line: 4122, column: 62, scope: !14038)
!14115 = !DILocation(line: 4122, column: 32, scope: !14038)
!14116 = !DILocation(line: 4122, column: 75, scope: !14038)
!14117 = !DILocation(line: 0, scope: !14038)
!14118 = !DILocation(line: 4122, column: 18, scope: !14038)
!14119 = !DILocation(line: 4124, column: 9, scope: !14038)
!14120 = !DILocation(line: 4125, column: 17, scope: !14053)
!14121 = !DILocation(line: 4125, column: 25, scope: !14053)
!14122 = !DILocation(line: 4125, column: 44, scope: !14053)
!14123 = !DILocation(line: 4129, column: 21, scope: !14053)
!14124 = !DILocation(line: 4129, column: 26, scope: !14053)
!14125 = !DILocation(line: 4129, column: 37, scope: !14053)
!14126 = !DILocation(line: 4129, column: 61, scope: !14053)
!14127 = !DILocation(line: 4130, column: 21, scope: !14053)
!14128 = !DILocation(line: 4130, column: 31, scope: !14053)
!14129 = !DILocation(line: 4128, column: 24, scope: !14053)
!14130 = !DILocation(line: 4128, column: 21, scope: !14053)
!14131 = !DILocation(line: 4132, column: 17, scope: !14053)
!14132 = !DILocation(line: 4132, column: 17, scope: !14055)
!14133 = !DILocation(line: 4132, column: 17, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14055, file: !2, line: 4132, column: 17)
!14135 = !DILocation(line: 4132, column: 17, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14055, file: !2, line: 4132, column: 17)
!14137 = !DILocation(line: 4134, column: 9, scope: !14038)
!14138 = !DILocation(line: 4134, column: 9, scope: !14053)
!14139 = !DILocation(line: 4134, column: 26, scope: !14038)
!14140 = !DILocation(line: 4134, column: 24, scope: !14038)
!14141 = !DILocation(line: 4136, column: 18, scope: !14038)
!14142 = !DILocation(line: 4136, column: 23, scope: !14038)
!14143 = !DILocation(line: 4135, column: 62, scope: !14038)
!14144 = distinct !{!14144, !14119, !14145, !4095}
!14145 = !DILocation(line: 4136, column: 45, scope: !14038)
!14146 = !DILocation(line: 4140, column: 13, scope: !14038)
!14147 = !DILocation(line: 4141, column: 13, scope: !14038)
!14148 = !DILocation(line: 4139, column: 9, scope: !14038)
!14149 = !DILocation(line: 4143, column: 24, scope: !14038)
!14150 = !DILocation(line: 4143, column: 10, scope: !14038)
!14151 = !DILocation(line: 4143, column: 22, scope: !14038)
!14152 = !DILocation(line: 4145, column: 16, scope: !14038)
!14153 = !DILocation(line: 4145, column: 9, scope: !14038)
!14154 = !DILocation(line: 4146, column: 1, scope: !14038)
!14155 = distinct !DISubprogram(name: "rd_kafka_broker_retry_bufs_move", scope: !2, file: !2, line: 2874, type: !14156, scopeLine: 2875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14158)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{null, !412, !13924}
!14158 = !{!14159, !14160, !14161, !14162, !14163, !14164}
!14159 = !DILocalVariable(name: "rkb", arg: 1, scope: !14155, file: !2, line: 2874, type: !412)
!14160 = !DILocalVariable(name: "next_wakeup", arg: 2, scope: !14155, file: !2, line: 2875, type: !13924)
!14161 = !DILocalVariable(name: "now", scope: !14155, file: !2, line: 2876, type: !487)
!14162 = !DILocalVariable(name: "rkbuf", scope: !14155, file: !2, line: 2877, type: !1692)
!14163 = !DILocalVariable(name: "cnt", scope: !14155, file: !2, line: 2878, type: !126)
!14164 = !DILocalVariable(name: "_logname", scope: !14165, file: !2, line: 2894, type: !924)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !2, line: 2894, column: 17)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !2, line: 2894, column: 17)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !2, line: 2894, column: 17)
!14168 = distinct !DILexicalBlock(scope: !14169, file: !2, line: 2894, column: 17)
!14169 = distinct !DILexicalBlock(scope: !14155, file: !2, line: 2893, column: 13)
!14170 = !DILocation(line: 2874, column: 64, scope: !14155)
!14171 = !DILocation(line: 2875, column: 54, scope: !14155)
!14172 = !DILocation(line: 2876, column: 9, scope: !14155)
!14173 = !DILocation(line: 2876, column: 17, scope: !14155)
!14174 = !DILocation(line: 2876, column: 23, scope: !14155)
!14175 = !DILocation(line: 2877, column: 9, scope: !14155)
!14176 = !DILocation(line: 2877, column: 25, scope: !14155)
!14177 = !DILocation(line: 2878, column: 9, scope: !14155)
!14178 = !DILocation(line: 2878, column: 13, scope: !14155)
!14179 = !DILocation(line: 2880, column: 9, scope: !14155)
!14180 = !DILocation(line: 2880, column: 25, scope: !14155)
!14181 = !DILocation(line: 2880, column: 23, scope: !14155)
!14182 = !DILocation(line: 2881, column: 21, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14184, file: !2, line: 2881, column: 21)
!14184 = distinct !DILexicalBlock(scope: !14155, file: !2, line: 2880, column: 70)
!14185 = !DILocation(line: 2881, column: 28, scope: !14183)
!14186 = !DILocation(line: 2881, column: 45, scope: !14183)
!14187 = !DILocation(line: 2881, column: 43, scope: !14183)
!14188 = !DILocation(line: 2881, column: 21, scope: !14184)
!14189 = !DILocation(line: 2882, column: 29, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14191, file: !2, line: 2882, column: 29)
!14191 = distinct !DILexicalBlock(scope: !14183, file: !2, line: 2881, column: 50)
!14192 = !DILocation(line: 2882, column: 36, scope: !14190)
!14193 = !DILocation(line: 2882, column: 54, scope: !14190)
!14194 = !DILocation(line: 2882, column: 53, scope: !14190)
!14195 = !DILocation(line: 2882, column: 51, scope: !14190)
!14196 = !DILocation(line: 2882, column: 29, scope: !14191)
!14197 = !DILocation(line: 2883, column: 48, scope: !14190)
!14198 = !DILocation(line: 2883, column: 55, scope: !14190)
!14199 = !DILocation(line: 2883, column: 34, scope: !14190)
!14200 = !DILocation(line: 2883, column: 46, scope: !14190)
!14201 = !DILocation(line: 2883, column: 33, scope: !14190)
!14202 = !DILocation(line: 2884, column: 25, scope: !14191)
!14203 = !DILocation(line: 2887, column: 36, scope: !14184)
!14204 = !DILocation(line: 2887, column: 41, scope: !14184)
!14205 = !DILocation(line: 2887, column: 56, scope: !14184)
!14206 = !DILocation(line: 2887, column: 17, scope: !14184)
!14207 = !DILocation(line: 2889, column: 42, scope: !14184)
!14208 = !DILocation(line: 2889, column: 47, scope: !14184)
!14209 = !DILocation(line: 2889, column: 17, scope: !14184)
!14210 = !DILocation(line: 2890, column: 20, scope: !14184)
!14211 = distinct !{!14211, !14179, !14212, !4095}
!14212 = !DILocation(line: 2891, column: 9, scope: !14155)
!14213 = !DILocation(line: 2893, column: 13, scope: !14169)
!14214 = !DILocation(line: 2893, column: 17, scope: !14169)
!14215 = !DILocation(line: 2893, column: 13, scope: !14155)
!14216 = !DILocation(line: 2894, column: 17, scope: !14169)
!14217 = !DILocation(line: 2894, column: 17, scope: !14167)
!14218 = !DILocation(line: 2894, column: 17, scope: !14168)
!14219 = !DILocation(line: 2894, column: 17, scope: !14166)
!14220 = !DILocation(line: 2894, column: 17, scope: !14165)
!14221 = !DILocation(line: 2896, column: 1, scope: !14155)
!14222 = distinct !DISubprogram(name: "rd_kafka_idemp_get_pid0", scope: !14223, file: !14223, line: 55, type: !14224, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14226)
!14223 = !DIFile(filename: "./rdkafka_idempotence.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "1bf57ce6bfaa760617305cef70bcbb4c")
!14224 = !DISubroutineType(types: !14225)
!14225 = !{!1538, !586, !5945, !561}
!14226 = !{!14227, !14228, !14229, !14230}
!14227 = !DILocalVariable(name: "rk", arg: 1, scope: !14222, file: !14223, line: 55, type: !586)
!14228 = !DILocalVariable(name: "do_lock", arg: 2, scope: !14222, file: !14223, line: 56, type: !5945)
!14229 = !DILocalVariable(name: "bumpable", arg: 3, scope: !14222, file: !14223, line: 57, type: !561)
!14230 = !DILocalVariable(name: "pid", scope: !14222, file: !14223, line: 58, type: !1538)
!14231 = !DILocation(line: 55, column: 37, scope: !14222)
!14232 = !DILocation(line: 56, column: 37, scope: !14222)
!14233 = !DILocation(line: 57, column: 35, scope: !14222)
!14234 = !DILocation(line: 58, column: 24, scope: !14222)
!14235 = !DILocation(line: 60, column: 13, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14222, file: !14223, line: 60, column: 13)
!14237 = !DILocation(line: 60, column: 13, scope: !14222)
!14238 = !DILocation(line: 61, column: 17, scope: !14236)
!14239 = !DILocation(line: 62, column: 13, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14222, file: !14223, line: 62, column: 13)
!14241 = !{!4141, !3912, i64 3048}
!14242 = !DILocation(line: 62, column: 13, scope: !14222)
!14243 = !DILocation(line: 63, column: 23, scope: !14240)
!14244 = !DILocation(line: 63, column: 27, scope: !14240)
!14245 = !DILocation(line: 63, column: 34, scope: !14240)
!14246 = !DILocation(line: 63, column: 17, scope: !14240)
!14247 = !DILocation(line: 64, column: 18, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14240, file: !14223, line: 64, column: 18)
!14249 = !DILocation(line: 0, scope: !14248)
!14250 = !DILocation(line: 64, column: 18, scope: !14240)
!14251 = !DILocation(line: 66, column: 23, scope: !14248)
!14252 = !DILocation(line: 66, column: 27, scope: !14248)
!14253 = !DILocation(line: 66, column: 34, scope: !14248)
!14254 = !DILocation(line: 66, column: 17, scope: !14248)
!14255 = !DILocation(line: 68, column: 17, scope: !14248)
!14256 = !DILocation(line: 69, column: 13, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14222, file: !14223, line: 69, column: 13)
!14258 = !DILocation(line: 69, column: 13, scope: !14222)
!14259 = !DILocation(line: 70, column: 17, scope: !14257)
!14260 = !DILocation(line: 72, column: 9, scope: !14222)
!14261 = distinct !DISubprogram(name: "rd_kafka_txn_may_send_msg", scope: !14262, file: !14262, line: 52, type: !12637, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14263)
!14262 = !DIFile(filename: "./rdkafka_txnmgr.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "bdabb76137597e36d13c2ebfa537f35c")
!14263 = !{!14264, !14265}
!14264 = !DILocalVariable(name: "rk", arg: 1, scope: !14261, file: !14262, line: 52, type: !586)
!14265 = !DILocalVariable(name: "ret", scope: !14261, file: !14262, line: 53, type: !561)
!14266 = !DILocation(line: 52, column: 76, scope: !14261)
!14267 = !DILocation(line: 53, column: 9, scope: !14261)
!14268 = !DILocation(line: 53, column: 19, scope: !14261)
!14269 = !DILocation(line: 55, column: 9, scope: !14261)
!14270 = !DILocation(line: 56, column: 16, scope: !14261)
!14271 = !DILocation(line: 56, column: 20, scope: !14261)
!14272 = !DILocation(line: 56, column: 27, scope: !14261)
!14273 = !{!4141, !3912, i64 3160}
!14274 = !DILocation(line: 56, column: 37, scope: !14261)
!14275 = !DILocation(line: 56, column: 74, scope: !14261)
!14276 = !DILocation(line: 57, column: 16, scope: !14261)
!14277 = !DILocation(line: 57, column: 20, scope: !14261)
!14278 = !DILocation(line: 57, column: 27, scope: !14261)
!14279 = !DILocation(line: 57, column: 37, scope: !14261)
!14280 = !DILocation(line: 56, column: 15, scope: !14261)
!14281 = !DILocation(line: 56, column: 13, scope: !14261)
!14282 = !DILocation(line: 58, column: 9, scope: !14261)
!14283 = !DILocation(line: 60, column: 16, scope: !14261)
!14284 = !DILocation(line: 61, column: 1, scope: !14261)
!14285 = !DILocation(line: 60, column: 9, scope: !14261)
!14286 = distinct !DISubprogram(name: "rd_kafka_toppar_producer_serve", scope: !2, file: !2, line: 3797, type: !14287, scopeLine: 3804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14290)
!14287 = !DISubroutineType(types: !14288)
!14288 = !{!126, !412, !368, !14289, !487, !13924, !561, !561, !561}
!14289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!14290 = !{!14291, !14292, !14293, !14294, !14295, !14296, !14297, !14298, !14299, !14300, !14301, !14302, !14303, !14304, !14305, !14306, !14307, !14308, !14311, !14312, !14315, !14316, !14319, !14327, !14336, !14341, !14346}
!14291 = !DILocalVariable(name: "rkb", arg: 1, scope: !14286, file: !2, line: 3797, type: !412)
!14292 = !DILocalVariable(name: "rktp", arg: 2, scope: !14286, file: !2, line: 3798, type: !368)
!14293 = !DILocalVariable(name: "pid", arg: 3, scope: !14286, file: !2, line: 3799, type: !14289)
!14294 = !DILocalVariable(name: "now", arg: 4, scope: !14286, file: !2, line: 3800, type: !487)
!14295 = !DILocalVariable(name: "next_wakeup", arg: 5, scope: !14286, file: !2, line: 3801, type: !13924)
!14296 = !DILocalVariable(name: "do_timeout_scan", arg: 6, scope: !14286, file: !2, line: 3802, type: !561)
!14297 = !DILocalVariable(name: "may_send", arg: 7, scope: !14286, file: !2, line: 3803, type: !561)
!14298 = !DILocalVariable(name: "flushing", arg: 8, scope: !14286, file: !2, line: 3804, type: !561)
!14299 = !DILocalVariable(name: "cnt", scope: !14286, file: !2, line: 3805, type: !126)
!14300 = !DILocalVariable(name: "r", scope: !14286, file: !2, line: 3806, type: !126)
!14301 = !DILocalVariable(name: "rkm", scope: !14286, file: !2, line: 3807, type: !8588)
!14302 = !DILocalVariable(name: "move_cnt", scope: !14286, file: !2, line: 3808, type: !126)
!14303 = !DILocalVariable(name: "max_requests", scope: !14286, file: !2, line: 3809, type: !126)
!14304 = !DILocalVariable(name: "reqcnt", scope: !14286, file: !2, line: 3810, type: !126)
!14305 = !DILocalVariable(name: "inflight", scope: !14286, file: !2, line: 3811, type: !126)
!14306 = !DILocalVariable(name: "epoch_base_msgid", scope: !14286, file: !2, line: 3812, type: !937)
!14307 = !DILocalVariable(name: "batch_ready", scope: !14286, file: !2, line: 3813, type: !561)
!14308 = !DILocalVariable(name: "timeoutcnt", scope: !14309, file: !2, line: 3833, type: !126)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !2, line: 3832, column: 40)
!14310 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 3832, column: 13)
!14311 = !DILocalVariable(name: "next", scope: !14309, file: !2, line: 3834, type: !487)
!14312 = !DILocalVariable(name: "__n", scope: !14313, file: !2, line: 3841, type: !13924)
!14313 = distinct !DILexicalBlock(scope: !14314, file: !2, line: 3841, column: 25)
!14314 = distinct !DILexicalBlock(scope: !14309, file: !2, line: 3840, column: 21)
!14315 = !DILocalVariable(name: "__m", scope: !14313, file: !2, line: 3841, type: !487)
!14316 = !DILocalVariable(name: "did_purge", scope: !14317, file: !2, line: 3918, type: !561)
!14317 = distinct !DILexicalBlock(scope: !14318, file: !2, line: 3915, column: 50)
!14318 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 3915, column: 13)
!14319 = !DILocalVariable(name: "_logname", scope: !14320, file: !2, line: 3929, type: !924)
!14320 = distinct !DILexicalBlock(scope: !14321, file: !2, line: 3929, column: 33)
!14321 = distinct !DILexicalBlock(scope: !14322, file: !2, line: 3929, column: 33)
!14322 = distinct !DILexicalBlock(scope: !14323, file: !2, line: 3929, column: 33)
!14323 = distinct !DILexicalBlock(scope: !14324, file: !2, line: 3929, column: 33)
!14324 = distinct !DILexicalBlock(scope: !14325, file: !2, line: 3928, column: 29)
!14325 = distinct !DILexicalBlock(scope: !14326, file: !2, line: 3920, column: 74)
!14326 = distinct !DILexicalBlock(scope: !14317, file: !2, line: 3920, column: 21)
!14327 = !DILocalVariable(name: "_logname", scope: !14328, file: !2, line: 3951, type: !924)
!14328 = distinct !DILexicalBlock(scope: !14329, file: !2, line: 3951, column: 33)
!14329 = distinct !DILexicalBlock(scope: !14330, file: !2, line: 3951, column: 33)
!14330 = distinct !DILexicalBlock(scope: !14331, file: !2, line: 3951, column: 33)
!14331 = distinct !DILexicalBlock(scope: !14332, file: !2, line: 3951, column: 33)
!14332 = distinct !DILexicalBlock(scope: !14333, file: !2, line: 3943, column: 39)
!14333 = distinct !DILexicalBlock(scope: !14334, file: !2, line: 3943, column: 29)
!14334 = distinct !DILexicalBlock(scope: !14335, file: !2, line: 3942, column: 58)
!14335 = distinct !DILexicalBlock(scope: !14317, file: !2, line: 3942, column: 21)
!14336 = !DILocalVariable(name: "_logname", scope: !14337, file: !2, line: 3973, type: !924)
!14337 = distinct !DILexicalBlock(scope: !14338, file: !2, line: 3973, column: 25)
!14338 = distinct !DILexicalBlock(scope: !14339, file: !2, line: 3973, column: 25)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !2, line: 3973, column: 25)
!14340 = distinct !DILexicalBlock(scope: !14334, file: !2, line: 3973, column: 25)
!14341 = !DILocalVariable(name: "_logname", scope: !14342, file: !2, line: 4000, type: !924)
!14342 = distinct !DILexicalBlock(scope: !14343, file: !2, line: 4000, column: 9)
!14343 = distinct !DILexicalBlock(scope: !14344, file: !2, line: 4000, column: 9)
!14344 = distinct !DILexicalBlock(scope: !14345, file: !2, line: 4000, column: 9)
!14345 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 4000, column: 9)
!14346 = !DILocalVariable(name: "_logname", scope: !14347, file: !2, line: 4032, type: !924)
!14347 = distinct !DILexicalBlock(scope: !14348, file: !2, line: 4032, column: 17)
!14348 = distinct !DILexicalBlock(scope: !14349, file: !2, line: 4032, column: 17)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !2, line: 4032, column: 17)
!14350 = distinct !DILexicalBlock(scope: !14351, file: !2, line: 4032, column: 17)
!14351 = distinct !DILexicalBlock(scope: !14352, file: !2, line: 4030, column: 67)
!14352 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 4030, column: 13)
!14353 = !DILocation(line: 3797, column: 62, scope: !14286)
!14354 = !DILocation(line: 3798, column: 62, scope: !14286)
!14355 = !DILocation(line: 3799, column: 64, scope: !14286)
!14356 = !DILocation(line: 3800, column: 51, scope: !14286)
!14357 = !DILocation(line: 3801, column: 52, scope: !14286)
!14358 = !DILocation(line: 3802, column: 53, scope: !14286)
!14359 = !DILocation(line: 3803, column: 53, scope: !14286)
!14360 = !DILocation(line: 3804, column: 53, scope: !14286)
!14361 = !DILocation(line: 3805, column: 9, scope: !14286)
!14362 = !DILocation(line: 3805, column: 13, scope: !14286)
!14363 = !DILocation(line: 3806, column: 9, scope: !14286)
!14364 = !DILocation(line: 3806, column: 13, scope: !14286)
!14365 = !DILocation(line: 3807, column: 9, scope: !14286)
!14366 = !DILocation(line: 3807, column: 25, scope: !14286)
!14367 = !DILocation(line: 3808, column: 9, scope: !14286)
!14368 = !DILocation(line: 3808, column: 13, scope: !14286)
!14369 = !DILocation(line: 3809, column: 9, scope: !14286)
!14370 = !DILocation(line: 3809, column: 13, scope: !14286)
!14371 = !DILocation(line: 3810, column: 9, scope: !14286)
!14372 = !DILocation(line: 3810, column: 13, scope: !14286)
!14373 = !DILocation(line: 3811, column: 9, scope: !14286)
!14374 = !DILocation(line: 3811, column: 13, scope: !14286)
!14375 = !DILocation(line: 3812, column: 9, scope: !14286)
!14376 = !DILocation(line: 3812, column: 18, scope: !14286)
!14377 = !DILocation(line: 3813, column: 9, scope: !14286)
!14378 = !DILocation(line: 3813, column: 19, scope: !14286)
!14379 = !DILocation(line: 3821, column: 54, scope: !14286)
!14380 = !DILocation(line: 3821, column: 24, scope: !14286)
!14381 = !DILocation(line: 3821, column: 22, scope: !14286)
!14382 = !DILocation(line: 3823, column: 9, scope: !14286)
!14383 = !DILocation(line: 3825, column: 13, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 3825, column: 13)
!14385 = !DILocation(line: 3825, column: 13, scope: !14286)
!14386 = !DILocation(line: 3828, column: 17, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14384, file: !2, line: 3825, column: 49)
!14388 = !DILocation(line: 3829, column: 17, scope: !14387)
!14389 = !DILocation(line: 3832, column: 13, scope: !14310)
!14390 = !DILocation(line: 3832, column: 13, scope: !14286)
!14391 = !DILocation(line: 3833, column: 17, scope: !14309)
!14392 = !DILocation(line: 3833, column: 21, scope: !14309)
!14393 = !DILocation(line: 3834, column: 17, scope: !14309)
!14394 = !DILocation(line: 3834, column: 25, scope: !14309)
!14395 = !DILocation(line: 3838, column: 54, scope: !14309)
!14396 = !DILocation(line: 3838, column: 59, scope: !14309)
!14397 = !DILocation(line: 3838, column: 65, scope: !14309)
!14398 = !DILocation(line: 3838, column: 21, scope: !14309)
!14399 = !DILocation(line: 3837, column: 28, scope: !14309)
!14400 = !DILocation(line: 3840, column: 21, scope: !14314)
!14401 = !DILocation(line: 3840, column: 21, scope: !14309)
!14402 = !DILocation(line: 3841, column: 25, scope: !14314)
!14403 = !DILocation(line: 3841, column: 25, scope: !14313)
!14404 = !DILocation(line: 3841, column: 25, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14313, file: !2, line: 3841, column: 25)
!14406 = !DILocation(line: 3841, column: 25, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14313, file: !2, line: 3841, column: 25)
!14408 = !DILocation(line: 3843, column: 21, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14309, file: !2, line: 3843, column: 21)
!14410 = !DILocation(line: 3843, column: 21, scope: !14309)
!14411 = !DILocation(line: 3844, column: 30, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14413, file: !2, line: 3844, column: 29)
!14413 = distinct !DILexicalBlock(scope: !14409, file: !2, line: 3843, column: 58)
!14414 = !DILocation(line: 3844, column: 29, scope: !14413)
!14415 = !DILocation(line: 3847, column: 33, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !14412, file: !2, line: 3844, column: 55)
!14417 = !DILocation(line: 3848, column: 33, scope: !14416)
!14418 = !DILocation(line: 3850, column: 36, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14412, file: !2, line: 3850, column: 36)
!14420 = !DILocation(line: 3850, column: 47, scope: !14419)
!14421 = !DILocation(line: 3850, column: 36, scope: !14412)
!14422 = !DILocation(line: 3858, column: 33, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14419, file: !2, line: 3850, column: 52)
!14424 = !DILocation(line: 3860, column: 33, scope: !14423)
!14425 = !DILocation(line: 3866, column: 33, scope: !14423)
!14426 = !DILocation(line: 3868, column: 17, scope: !14413)
!14427 = !DILocation(line: 3869, column: 9, scope: !14310)
!14428 = !DILocation(line: 3869, column: 9, scope: !14309)
!14429 = !DILocation(line: 3871, column: 13, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 3871, column: 13)
!14431 = !DILocation(line: 3871, column: 13, scope: !14286)
!14432 = !DILocation(line: 3873, column: 30, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14430, file: !2, line: 3871, column: 34)
!14434 = !DILocation(line: 3874, column: 9, scope: !14433)
!14435 = !DILocation(line: 3874, column: 20, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14430, file: !2, line: 3874, column: 20)
!14437 = !DILocation(line: 3874, column: 20, scope: !14430)
!14438 = !DILocation(line: 3876, column: 30, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14436, file: !2, line: 3874, column: 70)
!14440 = !DILocation(line: 3877, column: 9, scope: !14439)
!14441 = !DILocation(line: 3877, column: 20, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14436, file: !2, line: 3877, column: 20)
!14443 = !{!4645, !3941, i64 736}
!14444 = !DILocation(line: 3877, column: 20, scope: !14436)
!14445 = !DILocation(line: 3879, column: 30, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14442, file: !2, line: 3877, column: 63)
!14447 = !DILocation(line: 3880, column: 9, scope: !14446)
!14448 = !DILocation(line: 3880, column: 20, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14442, file: !2, line: 3880, column: 20)
!14450 = !DILocation(line: 0, scope: !14449)
!14451 = !DILocation(line: 3880, column: 20, scope: !14442)
!14452 = !DILocation(line: 3883, column: 30, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14449, file: !2, line: 3881, column: 71)
!14454 = !DILocation(line: 3884, column: 9, scope: !14453)
!14455 = !DILocation(line: 3884, column: 20, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14449, file: !2, line: 3884, column: 20)
!14457 = !DILocation(line: 3884, column: 33, scope: !14456)
!14458 = !DILocation(line: 3884, column: 20, scope: !14449)
!14459 = !DILocation(line: 3887, column: 33, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !2, line: 3887, column: 21)
!14461 = distinct !DILexicalBlock(scope: !14456, file: !2, line: 3884, column: 38)
!14462 = !DILocation(line: 3887, column: 39, scope: !14460)
!14463 = !DILocation(line: 3887, column: 49, scope: !14460)
!14464 = !{!4645, !3941, i64 216}
!14465 = !DILocation(line: 3887, column: 31, scope: !14460)
!14466 = !DILocation(line: 3887, column: 63, scope: !14460)
!14467 = !DILocation(line: 3887, column: 21, scope: !14461)
!14468 = !DILocation(line: 3890, column: 30, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14460, file: !2, line: 3887, column: 68)
!14470 = !DILocation(line: 3890, column: 36, scope: !14469)
!14471 = !DILocation(line: 3890, column: 53, scope: !14469)
!14472 = !DILocation(line: 3890, column: 59, scope: !14469)
!14473 = !DILocation(line: 3891, column: 29, scope: !14469)
!14474 = !DILocation(line: 3891, column: 35, scope: !14469)
!14475 = !DILocation(line: 3891, column: 45, scope: !14469)
!14476 = !DILocation(line: 3891, column: 54, scope: !14469)
!14477 = !DILocation(line: 3889, column: 25, scope: !14469)
!14478 = !DILocation(line: 3892, column: 17, scope: !14469)
!14479 = !DILocation(line: 3899, column: 22, scope: !14461)
!14480 = !DILocation(line: 3899, column: 28, scope: !14461)
!14481 = !DILocation(line: 3899, column: 40, scope: !14461)
!14482 = !DILocation(line: 3899, column: 46, scope: !14461)
!14483 = !DILocation(line: 3903, column: 21, scope: !14461)
!14484 = !DILocation(line: 3903, column: 26, scope: !14461)
!14485 = !DILocation(line: 3903, column: 36, scope: !14461)
!14486 = !DILocation(line: 3903, column: 66, scope: !14461)
!14487 = !DILocation(line: 3905, column: 21, scope: !14461)
!14488 = !DILocation(line: 3905, column: 26, scope: !14461)
!14489 = !DILocation(line: 3905, column: 41, scope: !14461)
!14490 = !DILocation(line: 3905, column: 46, scope: !14461)
!14491 = !DILocation(line: 3905, column: 54, scope: !14461)
!14492 = !DILocation(line: 3905, column: 62, scope: !14461)
!14493 = !{!4141, !3942, i64 2104}
!14494 = !DILocation(line: 3907, column: 21, scope: !14461)
!14495 = !DILocation(line: 3907, column: 26, scope: !14461)
!14496 = !DILocation(line: 3907, column: 34, scope: !14461)
!14497 = !DILocation(line: 3907, column: 42, scope: !14461)
!14498 = !{!4141, !3941, i64 2124}
!14499 = !DILocation(line: 3909, column: 21, scope: !14461)
!14500 = !DILocation(line: 3909, column: 26, scope: !14461)
!14501 = !DILocation(line: 3909, column: 34, scope: !14461)
!14502 = !DILocation(line: 3909, column: 42, scope: !14461)
!14503 = !{!4141, !3941, i64 2128}
!14504 = !DILocation(line: 3898, column: 31, scope: !14461)
!14505 = !DILocation(line: 3898, column: 29, scope: !14461)
!14506 = !DILocation(line: 3910, column: 9, scope: !14461)
!14507 = !DILocation(line: 3912, column: 9, scope: !14286)
!14508 = !DILocation(line: 3915, column: 13, scope: !14318)
!14509 = !DILocation(line: 3915, column: 13, scope: !14286)
!14510 = !DILocation(line: 3918, column: 17, scope: !14317)
!14511 = !DILocation(line: 3918, column: 27, scope: !14317)
!14512 = !DILocation(line: 3920, column: 21, scope: !14326)
!14513 = !DILocation(line: 3920, column: 21, scope: !14317)
!14514 = !DILocation(line: 3924, column: 29, scope: !14325)
!14515 = !DILocation(line: 3924, column: 35, scope: !14325)
!14516 = !DILocation(line: 3924, column: 40, scope: !14325)
!14517 = !DILocation(line: 3924, column: 72, scope: !14325)
!14518 = !DILocation(line: 3923, column: 25, scope: !14325)
!14519 = !DILocation(line: 3926, column: 35, scope: !14325)
!14520 = !DILocation(line: 3928, column: 29, scope: !14324)
!14521 = !{!4645, !3942, i64 368}
!14522 = !DILocation(line: 3928, column: 29, scope: !14325)
!14523 = !DILocation(line: 3929, column: 33, scope: !14324)
!14524 = !DILocation(line: 3929, column: 33, scope: !14322)
!14525 = !DILocation(line: 3929, column: 33, scope: !14323)
!14526 = !DILocation(line: 3929, column: 33, scope: !14321)
!14527 = !DILocation(line: 3929, column: 33, scope: !14320)
!14528 = !DILocation(line: 3938, column: 17, scope: !14325)
!14529 = !DILocation(line: 3940, column: 45, scope: !14317)
!14530 = !DILocation(line: 3940, column: 51, scope: !14317)
!14531 = !DILocation(line: 3940, column: 28, scope: !14317)
!14532 = !DILocation(line: 3940, column: 26, scope: !14317)
!14533 = !DILocation(line: 3942, column: 21, scope: !14335)
!14534 = !{!4645, !3912, i64 408}
!14535 = !DILocation(line: 3942, column: 21, scope: !14317)
!14536 = !DILocation(line: 3943, column: 29, scope: !14333)
!14537 = !DILocation(line: 3943, column: 29, scope: !14334)
!14538 = !DILocation(line: 3951, column: 33, scope: !14332)
!14539 = !DILocation(line: 3951, column: 33, scope: !14330)
!14540 = !DILocation(line: 3951, column: 33, scope: !14331)
!14541 = !DILocation(line: 3951, column: 33, scope: !14329)
!14542 = !DILocation(line: 3951, column: 33, scope: !14328)
!14543 = !DILocation(line: 3964, column: 38, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14332, file: !2, line: 3964, column: 37)
!14545 = !DILocation(line: 3964, column: 37, scope: !14332)
!14546 = !DILocation(line: 3966, column: 45, scope: !14544)
!14547 = !DILocation(line: 3966, column: 51, scope: !14544)
!14548 = !DILocation(line: 3966, column: 56, scope: !14544)
!14549 = !DILocation(line: 3967, column: 64, scope: !14544)
!14550 = !DILocation(line: 3965, column: 41, scope: !14544)
!14551 = !DILocation(line: 3970, column: 33, scope: !14332)
!14552 = !DILocation(line: 3973, column: 25, scope: !14334)
!14553 = !DILocation(line: 3973, column: 25, scope: !14339)
!14554 = !DILocation(line: 3973, column: 25, scope: !14340)
!14555 = !DILocation(line: 3973, column: 25, scope: !14338)
!14556 = !DILocation(line: 3973, column: 25, scope: !14337)
!14557 = !DILocation(line: 3980, column: 25, scope: !14334)
!14558 = !DILocation(line: 3980, column: 31, scope: !14334)
!14559 = !DILocation(line: 3980, column: 40, scope: !14334)
!14560 = !DILocation(line: 3980, column: 51, scope: !14334)
!14561 = !DILocation(line: 3981, column: 17, scope: !14334)
!14562 = !DILocation(line: 3985, column: 32, scope: !14317)
!14563 = !DILocation(line: 3985, column: 30, scope: !14317)
!14564 = !DILocation(line: 3987, column: 9, scope: !14318)
!14565 = !DILocation(line: 3987, column: 9, scope: !14317)
!14566 = !DILocation(line: 3991, column: 13, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 3991, column: 13)
!14568 = !DILocation(line: 3991, column: 26, scope: !14567)
!14569 = !DILocation(line: 3991, column: 13, scope: !14286)
!14570 = !DILocation(line: 3992, column: 17, scope: !14567)
!14571 = !DILocation(line: 3994, column: 13, scope: !14286)
!14572 = !DILocation(line: 3994, column: 19, scope: !14286)
!14573 = !DILocation(line: 3994, column: 34, scope: !14286)
!14574 = !{!4645, !3941, i64 280}
!14575 = !DILocation(line: 3994, column: 11, scope: !14286)
!14576 = !DILocation(line: 3995, column: 13, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 3995, column: 13)
!14578 = !DILocation(line: 3995, column: 15, scope: !14577)
!14579 = !DILocation(line: 3995, column: 13, scope: !14286)
!14580 = !DILocation(line: 3996, column: 17, scope: !14577)
!14581 = !DILocation(line: 3998, column: 9, scope: !14286)
!14582 = !DILocation(line: 3998, column: 9, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 3998, column: 9)
!14584 = !DILocation(line: 4000, column: 9, scope: !14286)
!14585 = !DILocation(line: 4000, column: 9, scope: !14344)
!14586 = !DILocation(line: 4000, column: 9, scope: !14345)
!14587 = !DILocation(line: 4000, column: 9, scope: !14343)
!14588 = !DILocation(line: 4000, column: 9, scope: !14342)
!14589 = !DILocation(line: 4007, column: 15, scope: !14286)
!14590 = !{!4645, !3911, i64 264}
!14591 = !DILocation(line: 4007, column: 13, scope: !14286)
!14592 = !DILocation(line: 4008, column: 9, scope: !14286)
!14593 = !DILocation(line: 4008, column: 9, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 4008, column: 9)
!14595 = !DILocation(line: 4010, column: 13, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 4010, column: 13)
!14597 = !DILocation(line: 4010, column: 13, scope: !14286)
!14598 = !DILocation(line: 4013, column: 21, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14600, file: !2, line: 4013, column: 21)
!14600 = distinct !DILexicalBlock(scope: !14596, file: !2, line: 4010, column: 50)
!14601 = !DILocation(line: 4013, column: 21, scope: !14600)
!14602 = !DILocation(line: 4018, column: 33, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14604, file: !2, line: 4017, column: 29)
!14604 = distinct !DILexicalBlock(scope: !14599, file: !2, line: 4013, column: 74)
!14605 = !DILocation(line: 4018, column: 44, scope: !14603)
!14606 = !DILocation(line: 4018, column: 49, scope: !14603)
!14607 = !DILocation(line: 4018, column: 64, scope: !14603)
!14608 = !DILocation(line: 4017, column: 30, scope: !14603)
!14609 = !DILocation(line: 4017, column: 29, scope: !14604)
!14610 = !DILocation(line: 4019, column: 33, scope: !14603)
!14611 = !DILocation(line: 4020, column: 17, scope: !14604)
!14612 = !DILocation(line: 4022, column: 17, scope: !14600)
!14613 = !DILocation(line: 4026, column: 36, scope: !14600)
!14614 = !DILocation(line: 4026, column: 42, scope: !14600)
!14615 = !DILocation(line: 4026, column: 51, scope: !14600)
!14616 = !{!4645, !3942, i64 392}
!14617 = !DILocation(line: 4026, column: 34, scope: !14600)
!14618 = !DILocation(line: 4027, column: 17, scope: !14600)
!14619 = !DILocation(line: 4028, column: 9, scope: !14600)
!14620 = !DILocation(line: 4030, column: 13, scope: !14352)
!14621 = !DILocation(line: 4030, column: 13, scope: !14286)
!14622 = !DILocation(line: 4032, column: 17, scope: !14351)
!14623 = !DILocation(line: 4032, column: 17, scope: !14349)
!14624 = !DILocation(line: 4032, column: 17, scope: !14350)
!14625 = !DILocation(line: 4032, column: 17, scope: !14348)
!14626 = !DILocation(line: 4032, column: 17, scope: !14347)
!14627 = !DILocation(line: 4038, column: 17, scope: !14351)
!14628 = !DILocation(line: 4038, column: 22, scope: !14351)
!14629 = !DILocation(line: 4038, column: 38, scope: !14351)
!14630 = !DILocation(line: 4038, column: 46, scope: !14351)
!14631 = !DILocation(line: 4039, column: 17, scope: !14351)
!14632 = !DILocation(line: 4044, column: 14, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 4044, column: 13)
!14634 = !DILocation(line: 4044, column: 13, scope: !14286)
!14635 = !DILocation(line: 4047, column: 17, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14633, file: !2, line: 4044, column: 27)
!14637 = !DILocation(line: 4052, column: 21, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 4052, column: 9)
!14639 = !DILocation(line: 4052, column: 14, scope: !14638)
!14640 = !DILocation(line: 4052, column: 26, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14638, file: !2, line: 4052, column: 9)
!14642 = !DILocation(line: 4052, column: 35, scope: !14641)
!14643 = !DILocation(line: 4052, column: 33, scope: !14641)
!14644 = !DILocation(line: 4052, column: 9, scope: !14638)
!14645 = !DILocation(line: 4053, column: 45, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14641, file: !2, line: 4052, column: 59)
!14647 = !DILocation(line: 4053, column: 50, scope: !14646)
!14648 = !DILocation(line: 4053, column: 61, scope: !14646)
!14649 = !DILocation(line: 4053, column: 21, scope: !14646)
!14650 = !DILocation(line: 4053, column: 19, scope: !14646)
!14651 = !DILocation(line: 4054, column: 21, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14646, file: !2, line: 4054, column: 21)
!14653 = !DILocation(line: 4054, column: 21, scope: !14646)
!14654 = !DILocation(line: 4055, column: 32, scope: !14652)
!14655 = !DILocation(line: 4055, column: 29, scope: !14652)
!14656 = !DILocation(line: 4055, column: 25, scope: !14652)
!14657 = !DILocation(line: 4057, column: 25, scope: !14652)
!14658 = !DILocation(line: 4058, column: 9, scope: !14646)
!14659 = !DILocation(line: 4052, column: 55, scope: !14641)
!14660 = !DILocation(line: 4052, column: 9, scope: !14641)
!14661 = distinct !{!14661, !14644, !14662, !4095}
!14662 = !DILocation(line: 4058, column: 9, scope: !14638)
!14663 = !DILocation(line: 4062, column: 13, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14286, file: !2, line: 4062, column: 13)
!14665 = !DILocation(line: 4062, column: 17, scope: !14664)
!14666 = !DILocation(line: 4062, column: 13, scope: !14286)
!14667 = !DILocation(line: 4063, column: 17, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14664, file: !2, line: 4062, column: 22)
!14669 = !DILocation(line: 4065, column: 22, scope: !14668)
!14670 = !DILocation(line: 4065, column: 28, scope: !14668)
!14671 = !DILocation(line: 4065, column: 40, scope: !14668)
!14672 = !DILocation(line: 4065, column: 46, scope: !14668)
!14673 = !DILocation(line: 4065, column: 62, scope: !14668)
!14674 = !DILocation(line: 4065, column: 75, scope: !14668)
!14675 = !DILocation(line: 4066, column: 21, scope: !14668)
!14676 = !DILocation(line: 4066, column: 36, scope: !14668)
!14677 = !DILocation(line: 4066, column: 41, scope: !14668)
!14678 = !DILocation(line: 4066, column: 49, scope: !14668)
!14679 = !DILocation(line: 4066, column: 57, scope: !14668)
!14680 = !DILocation(line: 4068, column: 21, scope: !14668)
!14681 = !DILocation(line: 4068, column: 26, scope: !14668)
!14682 = !DILocation(line: 4068, column: 34, scope: !14668)
!14683 = !DILocation(line: 4068, column: 42, scope: !14668)
!14684 = !DILocation(line: 4070, column: 21, scope: !14668)
!14685 = !DILocation(line: 4070, column: 26, scope: !14668)
!14686 = !DILocation(line: 4070, column: 34, scope: !14668)
!14687 = !DILocation(line: 4070, column: 42, scope: !14668)
!14688 = !DILocation(line: 4064, column: 31, scope: !14668)
!14689 = !DILocation(line: 4064, column: 29, scope: !14668)
!14690 = !DILocation(line: 4071, column: 17, scope: !14668)
!14691 = !DILocation(line: 4072, column: 9, scope: !14668)
!14692 = !DILocation(line: 4074, column: 16, scope: !14286)
!14693 = !DILocation(line: 4074, column: 9, scope: !14286)
!14694 = !DILocation(line: 4075, column: 1, scope: !14286)
!14695 = distinct !DISubprogram(name: "rd_kafka_pid_reset", scope: !360, file: !360, line: 636, type: !14696, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14699)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{null, !14698}
!14698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!14699 = !{!14700}
!14700 = !DILocalVariable(name: "pid", arg: 1, scope: !14695, file: !360, line: 636, type: !14698)
!14701 = !DILocation(line: 636, column: 68, scope: !14695)
!14702 = !DILocation(line: 637, column: 9, scope: !14695)
!14703 = !DILocation(line: 637, column: 14, scope: !14695)
!14704 = !DILocation(line: 637, column: 20, scope: !14695)
!14705 = !DILocation(line: 638, column: 9, scope: !14695)
!14706 = !DILocation(line: 638, column: 14, scope: !14695)
!14707 = !DILocation(line: 638, column: 20, scope: !14695)
!14708 = !{!4158, !3916, i64 8}
!14709 = !DILocation(line: 639, column: 1, scope: !14695)
!14710 = distinct !DISubprogram(name: "rd_kafka_broker_outbufs_space", scope: !2, file: !2, line: 3756, type: !14711, scopeLine: 3756, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14713)
!14711 = !DISubroutineType(types: !14712)
!14712 = !{!59, !412}
!14713 = !{!14714, !14715}
!14714 = !DILocalVariable(name: "rkb", arg: 1, scope: !14710, file: !2, line: 3756, type: !412)
!14715 = !DILocalVariable(name: "r", scope: !14710, file: !2, line: 3757, type: !126)
!14716 = !DILocation(line: 3756, column: 50, scope: !14710)
!14717 = !DILocation(line: 3757, column: 9, scope: !14710)
!14718 = !DILocation(line: 3757, column: 13, scope: !14710)
!14719 = !DILocation(line: 3757, column: 17, scope: !14710)
!14720 = !DILocation(line: 3757, column: 22, scope: !14710)
!14721 = !DILocation(line: 3757, column: 30, scope: !14710)
!14722 = !DILocation(line: 3757, column: 38, scope: !14710)
!14723 = !{!4141, !3941, i64 2112}
!14724 = !DILocation(line: 3758, column: 34, scope: !14710)
!14725 = !DILocation(line: 3758, column: 39, scope: !14710)
!14726 = !DILocation(line: 3758, column: 51, scope: !14710)
!14727 = !DILocation(line: 3758, column: 17, scope: !14710)
!14728 = !DILocation(line: 3757, column: 63, scope: !14710)
!14729 = !DILocation(line: 3759, column: 16, scope: !14710)
!14730 = !DILocation(line: 3759, column: 18, scope: !14710)
!14731 = !DILocation(line: 3759, column: 42, scope: !14710)
!14732 = !DILocation(line: 3760, column: 1, scope: !14710)
!14733 = !DILocation(line: 3759, column: 9, scope: !14710)
!14734 = !DISubprogram(name: "rd_kafka_idemp_drain_epoch_bump0", scope: !14223, file: !14223, line: 85, type: !14735, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14735 = !DISubroutineType(types: !14736)
!14736 = !{null, !586, !561, !550, !365, null}
!14737 = distinct !DISubprogram(name: "rd_kafka_txn_toppar_may_send_msg", scope: !14262, file: !14262, line: 72, type: !14738, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14740)
!14738 = !DISubroutineType(types: !14739)
!14739 = !{!561, !368}
!14740 = !{!14741}
!14741 = !DILocalVariable(name: "rktp", arg: 1, scope: !14737, file: !14262, line: 72, type: !368)
!14742 = !DILocation(line: 72, column: 53, scope: !14737)
!14743 = !DILocation(line: 73, column: 13, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14737, file: !14262, line: 73, column: 13)
!14745 = !DILocation(line: 73, column: 13, scope: !14737)
!14746 = !DILocation(line: 74, column: 17, scope: !14744)
!14747 = !DILocation(line: 76, column: 9, scope: !14737)
!14748 = !DILocation(line: 77, column: 1, scope: !14737)
!14749 = !DISubprogram(name: "rd_kafka_msgq_allow_wakeup_at", scope: !1825, file: !1825, line: 399, type: !14750, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14750 = !DISubroutineType(types: !14751)
!14751 = !{!561, !8404, !8494, !13924, !487, !487, !320, !489}
!14752 = distinct !DISubprogram(name: "rd_kafka_pid_eq", scope: !360, file: !360, line: 594, type: !14753, scopeLine: 595, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14755)
!14753 = !DISubroutineType(types: !14754)
!14754 = !{!126, !14289, !14289}
!14755 = !{!14756, !14757}
!14756 = !DILocalVariable(name: "a", arg: 1, scope: !14752, file: !360, line: 594, type: !14289)
!14757 = !DILocalVariable(name: "b", arg: 2, scope: !14752, file: !360, line: 595, type: !14289)
!14758 = !DILocation(line: 594, column: 69, scope: !14752)
!14759 = !DILocation(line: 595, column: 69, scope: !14752)
!14760 = !DILocation(line: 596, column: 18, scope: !14752)
!14761 = !DILocation(line: 596, column: 26, scope: !14752)
!14762 = !DILocation(line: 596, column: 21, scope: !14752)
!14763 = !DILocation(line: 596, column: 29, scope: !14752)
!14764 = !DILocation(line: 596, column: 34, scope: !14752)
!14765 = !DILocation(line: 596, column: 32, scope: !14752)
!14766 = !DILocation(line: 596, column: 45, scope: !14752)
!14767 = !DILocation(line: 596, column: 43, scope: !14752)
!14768 = !DILocation(line: 596, column: 40, scope: !14752)
!14769 = !DILocation(line: 0, scope: !14752)
!14770 = !DILocation(line: 596, column: 9, scope: !14752)
!14771 = distinct !DISubprogram(name: "rd_kafka_broker_bufq_purge_by_toppar", scope: !2, file: !2, line: 742, type: !14772, scopeLine: 746, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14774)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!126, !412, !5038, !489, !368, !550}
!14774 = !{!14775, !14776, !14777, !14778, !14779, !14780, !14781, !14782}
!14775 = !DILocalVariable(name: "rkb", arg: 1, scope: !14771, file: !2, line: 742, type: !412)
!14776 = !DILocalVariable(name: "rkbq", arg: 2, scope: !14771, file: !2, line: 743, type: !5038)
!14777 = !DILocalVariable(name: "ApiKey", arg: 3, scope: !14771, file: !2, line: 744, type: !489)
!14778 = !DILocalVariable(name: "rktp", arg: 4, scope: !14771, file: !2, line: 745, type: !368)
!14779 = !DILocalVariable(name: "err", arg: 5, scope: !14771, file: !2, line: 746, type: !550)
!14780 = !DILocalVariable(name: "rkbuf", scope: !14771, file: !2, line: 747, type: !1692)
!14781 = !DILocalVariable(name: "tmp", scope: !14771, file: !2, line: 747, type: !1692)
!14782 = !DILocalVariable(name: "cnt", scope: !14771, file: !2, line: 748, type: !126)
!14783 = !DILocation(line: 742, column: 68, scope: !14771)
!14784 = !DILocation(line: 743, column: 66, scope: !14771)
!14785 = !DILocation(line: 744, column: 57, scope: !14771)
!14786 = !DILocation(line: 745, column: 68, scope: !14771)
!14787 = !DILocation(line: 746, column: 69, scope: !14771)
!14788 = !DILocation(line: 747, column: 9, scope: !14771)
!14789 = !DILocation(line: 747, column: 25, scope: !14771)
!14790 = !DILocation(line: 747, column: 33, scope: !14771)
!14791 = !DILocation(line: 748, column: 9, scope: !14771)
!14792 = !DILocation(line: 748, column: 13, scope: !14771)
!14793 = !DILocation(line: 750, column: 9, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14795, file: !2, line: 750, column: 9)
!14795 = distinct !DILexicalBlock(scope: !14771, file: !2, line: 750, column: 9)
!14796 = !DILocation(line: 750, column: 9, scope: !14795)
!14797 = !DILocation(line: 752, column: 9, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14771, file: !2, line: 752, column: 9)
!14799 = !DILocation(line: 752, column: 9, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14798, file: !2, line: 752, column: 9)
!14801 = !DILocation(line: 0, scope: !14800)
!14802 = !DILocation(line: 754, column: 21, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14804, file: !2, line: 754, column: 21)
!14804 = distinct !DILexicalBlock(scope: !14800, file: !2, line: 752, column: 70)
!14805 = !DILocation(line: 754, column: 28, scope: !14803)
!14806 = !DILocation(line: 754, column: 41, scope: !14803)
!14807 = !DILocation(line: 754, column: 51, scope: !14803)
!14808 = !DILocation(line: 754, column: 48, scope: !14803)
!14809 = !DILocation(line: 754, column: 58, scope: !14803)
!14810 = !DILocation(line: 755, column: 21, scope: !14803)
!14811 = !DILocation(line: 755, column: 28, scope: !14803)
!14812 = !DILocation(line: 755, column: 44, scope: !14803)
!14813 = !DILocation(line: 755, column: 50, scope: !14803)
!14814 = !DILocation(line: 755, column: 58, scope: !14803)
!14815 = !DILocation(line: 755, column: 55, scope: !14803)
!14816 = !DILocation(line: 755, column: 63, scope: !14803)
!14817 = !DILocation(line: 759, column: 38, scope: !14803)
!14818 = !DILocation(line: 759, column: 45, scope: !14803)
!14819 = !DILocation(line: 759, column: 21, scope: !14803)
!14820 = !DILocation(line: 759, column: 59, scope: !14803)
!14821 = !DILocation(line: 754, column: 21, scope: !14804)
!14822 = !DILocation(line: 760, column: 25, scope: !14803)
!14823 = !DILocation(line: 762, column: 35, scope: !14804)
!14824 = !DILocation(line: 762, column: 41, scope: !14804)
!14825 = !DILocation(line: 762, column: 17, scope: !14804)
!14826 = !DILocation(line: 764, column: 39, scope: !14804)
!14827 = !DILocation(line: 764, column: 44, scope: !14804)
!14828 = !DILocation(line: 764, column: 52, scope: !14804)
!14829 = !DILocation(line: 764, column: 57, scope: !14804)
!14830 = !DILocation(line: 764, column: 68, scope: !14804)
!14831 = !DILocation(line: 764, column: 17, scope: !14804)
!14832 = !DILocation(line: 765, column: 20, scope: !14804)
!14833 = !DILocation(line: 766, column: 9, scope: !14804)
!14834 = distinct !{!14834, !14797, !14835, !4095}
!14835 = !DILocation(line: 766, column: 9, scope: !14798)
!14836 = !DILocation(line: 768, column: 16, scope: !14771)
!14837 = !DILocation(line: 769, column: 1, scope: !14771)
!14838 = !DILocation(line: 768, column: 9, scope: !14771)
!14839 = !DISubprogram(name: "rd_kafka_toppar_pid_change", scope: !371, file: !371, line: 1045, type: !14840, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14840 = !DISubroutineType(types: !14841)
!14841 = !{!126, !368, !1538, !937}
!14842 = !DISubprogram(name: "rd_kafka_ProduceRequest", scope: !7572, file: !7572, line: 299, type: !14843, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14843 = !DISubroutineType(types: !14844)
!14844 = !{!126, !412, !368, !14289, !937}
!14845 = !DISubprogram(name: "rd_kafka_broker_fetch_toppars", scope: !14846, file: !14846, line: 34, type: !13068, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14846 = !DIFile(filename: "./rdkafka_fetcher.h", directory: "/local-ssd/librdkafka-boufp7uirdfaurriupperscwkdhn6ziy-build/aidengro/spack-stage-librdkafka-2.2.0-boufp7uirdfaurriupperscwkdhn6ziy/spack-src/src", checksumkind: CSK_MD5, checksum: "f05b3d58c3ffc072476932141f3e863a")
!14847 = distinct !DISubprogram(name: "rd_kafka_broker_resolve", scope: !2, file: !2, line: 987, type: !14848, scopeLine: 989, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14850)
!14848 = !DISubroutineType(types: !14849)
!14849 = !{!126, !412, !365, !561}
!14850 = !{!14851, !14852, !14853, !14854, !14855}
!14851 = !DILocalVariable(name: "rkb", arg: 1, scope: !14847, file: !2, line: 987, type: !412)
!14852 = !DILocalVariable(name: "nodename", arg: 2, scope: !14847, file: !2, line: 988, type: !365)
!14853 = !DILocalVariable(name: "reset_cached_addr", arg: 3, scope: !14847, file: !2, line: 989, type: !561)
!14854 = !DILocalVariable(name: "errstr", scope: !14847, file: !2, line: 990, type: !365)
!14855 = !DILocalVariable(name: "save_idx", scope: !14847, file: !2, line: 991, type: !126)
!14856 = !DILocation(line: 987, column: 55, scope: !14847)
!14857 = !DILocation(line: 988, column: 48, scope: !14847)
!14858 = !DILocation(line: 989, column: 46, scope: !14847)
!14859 = !DILocation(line: 990, column: 9, scope: !14847)
!14860 = !DILocation(line: 990, column: 21, scope: !14847)
!14861 = !DILocation(line: 991, column: 9, scope: !14847)
!14862 = !DILocation(line: 991, column: 13, scope: !14847)
!14863 = !DILocation(line: 993, column: 15, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14847, file: !2, line: 993, column: 13)
!14865 = !DILocation(line: 993, column: 14, scope: !14864)
!14866 = !DILocation(line: 993, column: 24, scope: !14864)
!14867 = !DILocation(line: 993, column: 27, scope: !14864)
!14868 = !DILocation(line: 993, column: 32, scope: !14864)
!14869 = !DILocation(line: 993, column: 43, scope: !14864)
!14870 = !DILocation(line: 993, column: 13, scope: !14847)
!14871 = !DILocation(line: 994, column: 38, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14864, file: !2, line: 993, column: 64)
!14873 = !DILocation(line: 994, column: 17, scope: !14872)
!14874 = !DILocation(line: 996, column: 17, scope: !14872)
!14875 = !DILocation(line: 999, column: 13, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14847, file: !2, line: 999, column: 13)
!14877 = !DILocation(line: 999, column: 18, scope: !14876)
!14878 = !DILocation(line: 999, column: 27, scope: !14876)
!14879 = !DILocation(line: 1000, column: 14, scope: !14876)
!14880 = !DILocation(line: 1000, column: 32, scope: !14876)
!14881 = !DILocation(line: 1001, column: 14, scope: !14876)
!14882 = !DILocation(line: 1001, column: 19, scope: !14876)
!14883 = !{!3939, !3942, i64 32}
!14884 = !DILocation(line: 1002, column: 23, scope: !14876)
!14885 = !DILocation(line: 1002, column: 28, scope: !14876)
!14886 = !DILocation(line: 1002, column: 36, scope: !14876)
!14887 = !DILocation(line: 1002, column: 44, scope: !14876)
!14888 = !{!4141, !3941, i64 628}
!14889 = !DILocation(line: 1002, column: 60, scope: !14876)
!14890 = !DILocation(line: 1002, column: 22, scope: !14876)
!14891 = !DILocation(line: 1001, column: 36, scope: !14876)
!14892 = !DILocation(line: 1003, column: 18, scope: !14876)
!14893 = !DILocation(line: 1002, column: 68, scope: !14876)
!14894 = !DILocation(line: 999, column: 13, scope: !14847)
!14895 = !DILocation(line: 1008, column: 28, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14876, file: !2, line: 1003, column: 31)
!14897 = !DILocation(line: 1008, column: 33, scope: !14896)
!14898 = !DILocation(line: 1008, column: 43, scope: !14896)
!14899 = !DILocation(line: 1008, column: 26, scope: !14896)
!14900 = !DILocation(line: 1010, column: 42, scope: !14896)
!14901 = !DILocation(line: 1010, column: 47, scope: !14896)
!14902 = !DILocation(line: 1010, column: 17, scope: !14896)
!14903 = !DILocation(line: 1011, column: 17, scope: !14896)
!14904 = !DILocation(line: 1011, column: 22, scope: !14896)
!14905 = !DILocation(line: 1011, column: 31, scope: !14896)
!14906 = !DILocation(line: 1012, column: 9, scope: !14896)
!14907 = !DILocation(line: 1014, column: 14, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14847, file: !2, line: 1014, column: 13)
!14909 = !DILocation(line: 1014, column: 19, scope: !14908)
!14910 = !DILocation(line: 1014, column: 13, scope: !14847)
!14911 = !DILocation(line: 1017, column: 21, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14908, file: !2, line: 1014, column: 29)
!14913 = !DILocation(line: 1018, column: 21, scope: !14912)
!14914 = !DILocation(line: 1018, column: 26, scope: !14912)
!14915 = !DILocation(line: 1018, column: 34, scope: !14912)
!14916 = !DILocation(line: 1018, column: 42, scope: !14912)
!14917 = !DILocation(line: 1019, column: 34, scope: !14912)
!14918 = !DILocation(line: 1019, column: 39, scope: !14912)
!14919 = !DILocation(line: 1019, column: 47, scope: !14912)
!14920 = !DILocation(line: 1019, column: 55, scope: !14912)
!14921 = !DILocation(line: 1020, column: 21, scope: !14912)
!14922 = !DILocation(line: 1020, column: 26, scope: !14912)
!14923 = !DILocation(line: 1020, column: 34, scope: !14912)
!14924 = !DILocation(line: 1020, column: 42, scope: !14912)
!14925 = !DILocation(line: 1016, column: 33, scope: !14912)
!14926 = !DILocation(line: 1016, column: 17, scope: !14912)
!14927 = !DILocation(line: 1016, column: 22, scope: !14912)
!14928 = !DILocation(line: 1016, column: 31, scope: !14912)
!14929 = !DILocation(line: 1022, column: 22, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14912, file: !2, line: 1022, column: 21)
!14931 = !DILocation(line: 1022, column: 27, scope: !14930)
!14932 = !DILocation(line: 1022, column: 21, scope: !14912)
!14933 = !DILocation(line: 1024, column: 29, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14930, file: !2, line: 1022, column: 37)
!14935 = !DILocation(line: 1025, column: 59, scope: !14934)
!14936 = !DILocation(line: 1025, column: 69, scope: !14934)
!14937 = !DILocation(line: 1023, column: 25, scope: !14934)
!14938 = !DILocation(line: 1026, column: 25, scope: !14934)
!14939 = !DILocation(line: 1028, column: 49, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14930, file: !2, line: 1027, column: 24)
!14941 = !DILocation(line: 1028, column: 25, scope: !14940)
!14942 = !DILocation(line: 1028, column: 30, scope: !14940)
!14943 = !DILocation(line: 1028, column: 47, scope: !14940)
!14944 = !DILocation(line: 1030, column: 29, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14940, file: !2, line: 1030, column: 29)
!14946 = !DILocation(line: 1030, column: 34, scope: !14945)
!14947 = !DILocation(line: 1030, column: 44, scope: !14945)
!14948 = !DILocation(line: 1030, column: 55, scope: !14945)
!14949 = !DILocation(line: 1030, column: 53, scope: !14945)
!14950 = !DILocation(line: 1030, column: 29, scope: !14940)
!14951 = !DILocation(line: 1031, column: 60, scope: !14945)
!14952 = !DILocation(line: 1031, column: 33, scope: !14945)
!14953 = !DILocation(line: 1031, column: 38, scope: !14945)
!14954 = !DILocation(line: 1031, column: 48, scope: !14945)
!14955 = !DILocation(line: 1031, column: 58, scope: !14945)
!14956 = !DILocation(line: 1033, column: 9, scope: !14912)
!14957 = !DILocation(line: 1035, column: 9, scope: !14847)
!14958 = !DILocation(line: 1036, column: 1, scope: !14847)
!14959 = distinct !DISubprogram(name: "rd_sockaddr_list_next", scope: !429, file: !429, line: 134, type: !14960, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14962)
!14960 = !DISubroutineType(types: !14961)
!14961 = !{!10113, !427}
!14962 = !{!14963}
!14963 = !DILocalVariable(name: "rsal", arg: 1, scope: !14959, file: !429, line: 134, type: !427)
!14964 = !DILocation(line: 134, column: 43, scope: !14959)
!14965 = !DILocation(line: 135, column: 28, scope: !14959)
!14966 = !DILocation(line: 135, column: 34, scope: !14959)
!14967 = !DILocation(line: 135, column: 44, scope: !14959)
!14968 = !DILocation(line: 135, column: 51, scope: !14959)
!14969 = !DILocation(line: 135, column: 57, scope: !14959)
!14970 = !DILocation(line: 135, column: 49, scope: !14959)
!14971 = !DILocation(line: 135, column: 9, scope: !14959)
!14972 = !DILocation(line: 135, column: 15, scope: !14959)
!14973 = !DILocation(line: 135, column: 25, scope: !14959)
!14974 = !DILocation(line: 136, column: 17, scope: !14959)
!14975 = !DILocation(line: 136, column: 23, scope: !14959)
!14976 = !DILocation(line: 136, column: 33, scope: !14959)
!14977 = !DILocation(line: 136, column: 39, scope: !14959)
!14978 = !DILocation(line: 136, column: 9, scope: !14959)
!14979 = !DISubprogram(name: "rd_kafka_transport_connect", scope: !497, file: !497, line: 67, type: !14980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!495, !422, !492, !559, !692}
!14982 = distinct !DISubprogram(name: "rd_kafka_broker_get_state", scope: !416, file: !416, line: 350, type: !14983, scopeLine: 350, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !14985)
!14983 = !DISubroutineType(types: !14984)
!14984 = !{!2325, !412}
!14985 = !{!14986, !14987}
!14986 = !DILocalVariable(name: "rkb", arg: 1, scope: !14982, file: !416, line: 350, type: !412)
!14987 = !DILocalVariable(name: "state", scope: !14982, file: !416, line: 351, type: !2325)
!14988 = !DILocation(line: 350, column: 46, scope: !14982)
!14989 = !DILocation(line: 351, column: 9, scope: !14982)
!14990 = !DILocation(line: 351, column: 33, scope: !14982)
!14991 = !DILocation(line: 352, column: 9, scope: !14982)
!14992 = !DILocation(line: 353, column: 17, scope: !14982)
!14993 = !DILocation(line: 353, column: 22, scope: !14982)
!14994 = !DILocation(line: 353, column: 15, scope: !14982)
!14995 = !DILocation(line: 354, column: 9, scope: !14982)
!14996 = !DILocation(line: 355, column: 16, scope: !14982)
!14997 = !DILocation(line: 356, column: 1, scope: !14982)
!14998 = !DILocation(line: 355, column: 9, scope: !14982)
!14999 = !DISubprogram(name: "rd_kafka_q_pop", scope: !506, file: !506, line: 844, type: !15000, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15000 = !DISubroutineType(types: !15001)
!15001 = !{!914, !503, !487, !320}
!15002 = !DILocation(line: 3088, column: 45, scope: !2757)
!15003 = !DILocation(line: 3088, column: 65, scope: !2757)
!15004 = !DILocation(line: 3089, column: 9, scope: !2757)
!15005 = !DILocation(line: 3089, column: 28, scope: !2757)
!15006 = !DILocation(line: 3090, column: 9, scope: !2757)
!15007 = !DILocation(line: 3090, column: 29, scope: !2757)
!15008 = !DILocation(line: 3091, column: 9, scope: !2757)
!15009 = !DILocation(line: 3091, column: 19, scope: !2757)
!15010 = !DILocation(line: 3093, column: 9, scope: !2757)
!15011 = !DILocation(line: 3093, column: 9, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !2, line: 3093, column: 9)
!15013 = distinct !DILexicalBlock(scope: !2757, file: !2, line: 3093, column: 9)
!15014 = !DILocation(line: 3093, column: 9, scope: !15013)
!15015 = !DILocation(line: 3095, column: 17, scope: !2757)
!15016 = !DILocation(line: 3095, column: 22, scope: !2757)
!15017 = !{!8464, !3912, i64 16}
!15018 = !DILocation(line: 3095, column: 9, scope: !2757)
!15019 = !DILocation(line: 3097, column: 17, scope: !2767)
!15020 = !DILocation(line: 3097, column: 57, scope: !2767)
!15021 = !DILocation(line: 3098, column: 17, scope: !2767)
!15022 = !DILocation(line: 3098, column: 22, scope: !2767)
!15023 = !DILocation(line: 3101, column: 17, scope: !2767)
!15024 = !DILocation(line: 3102, column: 17, scope: !2767)
!15025 = !DILocation(line: 3104, column: 28, scope: !2776)
!15026 = !DILocation(line: 3104, column: 33, scope: !2776)
!15027 = !DILocation(line: 3104, column: 47, scope: !2776)
!15028 = !DILocation(line: 3104, column: 52, scope: !2776)
!15029 = !DILocation(line: 3104, column: 63, scope: !2776)
!15030 = !DILocation(line: 3104, column: 21, scope: !2776)
!15031 = !DILocation(line: 3104, column: 21, scope: !2767)
!15032 = !DILocation(line: 3105, column: 25, scope: !2775)
!15033 = !DILocation(line: 3105, column: 25, scope: !2773)
!15034 = !DILocation(line: 3105, column: 25, scope: !2774)
!15035 = !DILocation(line: 3105, column: 25, scope: !2772)
!15036 = !DILocation(line: 3105, column: 25, scope: !2771)
!15037 = !DILocation(line: 3108, column: 36, scope: !2775)
!15038 = !DILocation(line: 3108, column: 41, scope: !2775)
!15039 = !DILocation(line: 3108, column: 55, scope: !2775)
!15040 = !DILocation(line: 3108, column: 60, scope: !2775)
!15041 = !DILocation(line: 3108, column: 71, scope: !2775)
!15042 = !DILocation(line: 3108, column: 25, scope: !2775)
!15043 = !DILocation(line: 3110, column: 25, scope: !2775)
!15044 = !DILocation(line: 3110, column: 30, scope: !2775)
!15045 = !DILocation(line: 3110, column: 48, scope: !2775)
!15046 = !DILocation(line: 3111, column: 33, scope: !2775)
!15047 = !DILocation(line: 3112, column: 17, scope: !2775)
!15048 = !DILocation(line: 3114, column: 21, scope: !2779)
!15049 = !DILocation(line: 3114, column: 26, scope: !2779)
!15050 = !DILocation(line: 3114, column: 37, scope: !2779)
!15051 = !DILocation(line: 3114, column: 44, scope: !2779)
!15052 = !DILocation(line: 3114, column: 50, scope: !2779)
!15053 = !DILocation(line: 3115, column: 22, scope: !2779)
!15054 = !DILocation(line: 3115, column: 54, scope: !2779)
!15055 = !DILocation(line: 3116, column: 21, scope: !2779)
!15056 = !DILocation(line: 3116, column: 26, scope: !2779)
!15057 = !DILocation(line: 3116, column: 37, scope: !2779)
!15058 = !DILocation(line: 3116, column: 47, scope: !2779)
!15059 = !DILocation(line: 3116, column: 52, scope: !2779)
!15060 = !DILocation(line: 3116, column: 44, scope: !2779)
!15061 = !DILocation(line: 3114, column: 21, scope: !2767)
!15062 = !DILocation(line: 3117, column: 25, scope: !2778)
!15063 = !DILocation(line: 3117, column: 33, scope: !2778)
!15064 = !DILocation(line: 3117, column: 46, scope: !2778)
!15065 = !DILocation(line: 3117, column: 51, scope: !2778)
!15066 = !DILocation(line: 3118, column: 25, scope: !2778)
!15067 = !DILocation(line: 3118, column: 25, scope: !2783)
!15068 = !DILocation(line: 3118, column: 25, scope: !2784)
!15069 = !DILocation(line: 3118, column: 25, scope: !2782)
!15070 = !DILocation(line: 3118, column: 25, scope: !2781)
!15071 = !DILocation(line: 3123, column: 43, scope: !2778)
!15072 = !DILocation(line: 3123, column: 48, scope: !2778)
!15073 = !DILocation(line: 3123, column: 59, scope: !2778)
!15074 = !DILocation(line: 3123, column: 25, scope: !2778)
!15075 = !DILocation(line: 3123, column: 30, scope: !2778)
!15076 = !DILocation(line: 3123, column: 41, scope: !2778)
!15077 = !DILocation(line: 3127, column: 53, scope: !2778)
!15078 = !DILocation(line: 3127, column: 58, scope: !2778)
!15079 = !DILocation(line: 3126, column: 25, scope: !2778)
!15080 = !DILocation(line: 3130, column: 29, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !2778, file: !2, line: 3130, column: 29)
!15082 = !DILocation(line: 3130, column: 40, scope: !15081)
!15083 = !DILocation(line: 3130, column: 29, scope: !2778)
!15084 = !DILocation(line: 3131, column: 46, scope: !15081)
!15085 = !DILocation(line: 3131, column: 51, scope: !15081)
!15086 = !DILocation(line: 3131, column: 59, scope: !15081)
!15087 = !DILocation(line: 3131, column: 76, scope: !15081)
!15088 = !DILocation(line: 3131, column: 33, scope: !15081)
!15089 = !DILocation(line: 3132, column: 39, scope: !2778)
!15090 = !DILocation(line: 3132, column: 44, scope: !2778)
!15091 = !DILocation(line: 3132, column: 52, scope: !2778)
!15092 = !DILocation(line: 3132, column: 25, scope: !2778)
!15093 = !DILocation(line: 3135, column: 33, scope: !2778)
!15094 = !DILocation(line: 3136, column: 17, scope: !2779)
!15095 = !DILocation(line: 3136, column: 17, scope: !2778)
!15096 = !DILocation(line: 3138, column: 40, scope: !2767)
!15097 = !DILocation(line: 3139, column: 40, scope: !2767)
!15098 = !DILocation(line: 3139, column: 45, scope: !2767)
!15099 = !DILocation(line: 3139, column: 56, scope: !2767)
!15100 = !DILocation(line: 3139, column: 61, scope: !2767)
!15101 = !DILocation(line: 3140, column: 40, scope: !2767)
!15102 = !DILocation(line: 3140, column: 45, scope: !2767)
!15103 = !DILocation(line: 3138, column: 17, scope: !2767)
!15104 = !DILocation(line: 3141, column: 28, scope: !2791)
!15105 = !DILocation(line: 3141, column: 33, scope: !2791)
!15106 = !DILocation(line: 3141, column: 43, scope: !2791)
!15107 = !DILocation(line: 3141, column: 21, scope: !2791)
!15108 = !DILocation(line: 3141, column: 21, scope: !2767)
!15109 = !DILocation(line: 3143, column: 53, scope: !2790)
!15110 = !DILocation(line: 3143, column: 58, scope: !2790)
!15111 = !DILocation(line: 3143, column: 25, scope: !2790)
!15112 = !DILocation(line: 3145, column: 25, scope: !2790)
!15113 = !DILocation(line: 3145, column: 25, scope: !2788)
!15114 = !DILocation(line: 3145, column: 25, scope: !2789)
!15115 = !DILocation(line: 3145, column: 25, scope: !2787)
!15116 = !DILocation(line: 3145, column: 25, scope: !2786)
!15117 = !DILocation(line: 3148, column: 36, scope: !2790)
!15118 = !DILocation(line: 3148, column: 41, scope: !2790)
!15119 = !DILocation(line: 3148, column: 51, scope: !2790)
!15120 = !DILocation(line: 3148, column: 25, scope: !2790)
!15121 = !DILocation(line: 3150, column: 17, scope: !2790)
!15122 = !DILocation(line: 3151, column: 17, scope: !2767)
!15123 = !DILocation(line: 3152, column: 17, scope: !2767)
!15124 = !DILocation(line: 3154, column: 21, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !2767, file: !2, line: 3154, column: 21)
!15126 = !DILocation(line: 3154, column: 29, scope: !15125)
!15127 = !DILocation(line: 3154, column: 21, scope: !2767)
!15128 = !DILocation(line: 3155, column: 46, scope: !15125)
!15129 = !DILocation(line: 3155, column: 25, scope: !15125)
!15130 = !DILocation(line: 3158, column: 26, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15125, file: !2, line: 3158, column: 26)
!15132 = !DILocation(line: 3158, column: 34, scope: !15131)
!15133 = !DILocation(line: 3158, column: 26, scope: !15125)
!15134 = !DILocation(line: 3160, column: 56, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15131, file: !2, line: 3158, column: 45)
!15136 = !DILocation(line: 3160, column: 25, scope: !15135)
!15137 = !DILocation(line: 3165, column: 25, scope: !15135)
!15138 = !DILocation(line: 3166, column: 29, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15135, file: !2, line: 3166, column: 29)
!15140 = !DILocation(line: 3166, column: 34, scope: !15139)
!15141 = !DILocation(line: 3166, column: 44, scope: !15139)
!15142 = !DILocation(line: 3166, column: 29, scope: !15135)
!15143 = !DILocation(line: 3168, column: 37, scope: !15139)
!15144 = !DILocation(line: 3167, column: 33, scope: !15139)
!15145 = !DILocation(line: 3169, column: 25, scope: !15135)
!15146 = !DILocation(line: 3170, column: 17, scope: !15135)
!15147 = !DILocation(line: 3172, column: 57, scope: !2767)
!15148 = !DILocation(line: 3172, column: 62, scope: !2767)
!15149 = !DILocation(line: 3172, column: 17, scope: !2767)
!15150 = !DILocation(line: 3174, column: 9, scope: !2768)
!15151 = !DILocation(line: 3177, column: 42, scope: !2768)
!15152 = !DILocation(line: 3177, column: 47, scope: !2768)
!15153 = !DILocation(line: 3177, column: 52, scope: !2768)
!15154 = !DILocation(line: 3177, column: 63, scope: !2768)
!15155 = !DILocation(line: 3177, column: 17, scope: !2768)
!15156 = !DILocation(line: 3178, column: 17, scope: !2768)
!15157 = !DILocation(line: 3178, column: 22, scope: !2768)
!15158 = !DILocation(line: 3178, column: 33, scope: !2768)
!15159 = !DILocation(line: 3178, column: 39, scope: !2768)
!15160 = !DILocation(line: 3179, column: 21, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3179, column: 21)
!15162 = !DILocation(line: 3179, column: 26, scope: !15161)
!15163 = !DILocation(line: 3179, column: 37, scope: !15161)
!15164 = !{!8464, !3911, i64 64}
!15165 = !DILocation(line: 3179, column: 21, scope: !2768)
!15166 = !DILocation(line: 3181, column: 29, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15161, file: !2, line: 3179, column: 40)
!15168 = !DILocation(line: 3182, column: 17, scope: !15167)
!15169 = !DILocation(line: 3183, column: 17, scope: !2768)
!15170 = !DILocation(line: 3186, column: 43, scope: !2768)
!15171 = !DILocation(line: 3186, column: 48, scope: !2768)
!15172 = !DILocation(line: 3186, column: 53, scope: !2768)
!15173 = !DILocation(line: 3186, column: 64, scope: !2768)
!15174 = !DILocation(line: 3186, column: 17, scope: !2768)
!15175 = !DILocation(line: 3187, column: 17, scope: !2768)
!15176 = !DILocation(line: 3187, column: 22, scope: !2768)
!15177 = !DILocation(line: 3187, column: 33, scope: !2768)
!15178 = !DILocation(line: 3187, column: 39, scope: !2768)
!15179 = !DILocation(line: 3188, column: 17, scope: !2768)
!15180 = !DILocation(line: 3194, column: 24, scope: !2768)
!15181 = !DILocation(line: 3194, column: 29, scope: !2768)
!15182 = !{!8464, !3911, i64 56}
!15183 = !DILocation(line: 3194, column: 22, scope: !2768)
!15184 = !DILocation(line: 3195, column: 17, scope: !2768)
!15185 = !DILocation(line: 3198, column: 21, scope: !2798)
!15186 = !DILocation(line: 3198, column: 55, scope: !2798)
!15187 = !DILocation(line: 3199, column: 22, scope: !2798)
!15188 = !DILocation(line: 3199, column: 28, scope: !2798)
!15189 = !DILocation(line: 3199, column: 39, scope: !2798)
!15190 = !DILocation(line: 3198, column: 21, scope: !2768)
!15191 = !DILocation(line: 3200, column: 25, scope: !2797)
!15192 = !DILocation(line: 3200, column: 25, scope: !2795)
!15193 = !DILocation(line: 3200, column: 25, scope: !2796)
!15194 = !DILocation(line: 3200, column: 25, scope: !2794)
!15195 = !DILocation(line: 3200, column: 25, scope: !2793)
!15196 = !DILocation(line: 3210, column: 25, scope: !2797)
!15197 = !DILocation(line: 3210, column: 25, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !2, line: 3210, column: 25)
!15199 = distinct !DILexicalBlock(scope: !2797, file: !2, line: 3210, column: 25)
!15200 = !{!4645, !3911, i64 136}
!15201 = !DILocation(line: 3210, column: 25, scope: !15199)
!15202 = !DILocation(line: 3211, column: 25, scope: !2797)
!15203 = !DILocation(line: 3211, column: 31, scope: !2797)
!15204 = !DILocation(line: 3211, column: 48, scope: !2797)
!15205 = !DILocation(line: 3212, column: 25, scope: !2797)
!15206 = !DILocation(line: 3213, column: 25, scope: !2797)
!15207 = !DILocation(line: 3217, column: 21, scope: !2805)
!15208 = !DILocation(line: 3217, column: 27, scope: !2805)
!15209 = !DILocation(line: 3217, column: 47, scope: !2805)
!15210 = !DILocation(line: 3217, column: 44, scope: !2805)
!15211 = !DILocation(line: 3217, column: 21, scope: !2768)
!15212 = !DILocation(line: 3218, column: 25, scope: !2804)
!15213 = !DILocation(line: 3218, column: 25, scope: !2802)
!15214 = !DILocation(line: 3218, column: 25, scope: !2803)
!15215 = !DILocation(line: 3218, column: 25, scope: !2801)
!15216 = !DILocation(line: 3218, column: 25, scope: !2800)
!15217 = !DILocation(line: 3231, column: 25, scope: !2804)
!15218 = !DILocation(line: 3234, column: 40, scope: !2804)
!15219 = !DILocation(line: 3234, column: 46, scope: !2804)
!15220 = !DILocation(line: 3234, column: 64, scope: !2804)
!15221 = !DILocation(line: 3234, column: 73, scope: !2804)
!15222 = !DILocation(line: 3234, column: 25, scope: !2804)
!15223 = !DILocation(line: 3235, column: 29, scope: !2804)
!15224 = !DILocation(line: 3237, column: 25, scope: !2804)
!15225 = !DILocation(line: 3238, column: 25, scope: !2804)
!15226 = !DILocation(line: 3238, column: 25, scope: !2807)
!15227 = !DILocation(line: 3238, column: 25, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !2807, file: !2, line: 3238, column: 25)
!15229 = !DILocation(line: 3240, column: 25, scope: !2804)
!15230 = !DILocation(line: 3243, column: 17, scope: !2768)
!15231 = !DILocation(line: 3243, column: 17, scope: !2811)
!15232 = !DILocation(line: 3243, column: 17, scope: !2812)
!15233 = !DILocation(line: 3243, column: 17, scope: !2810)
!15234 = !DILocation(line: 3243, column: 17, scope: !2809)
!15235 = !DILocation(line: 3250, column: 17, scope: !2768)
!15236 = !DILocation(line: 3250, column: 17, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15238, file: !2, line: 3250, column: 17)
!15238 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3250, column: 17)
!15239 = !DILocation(line: 3250, column: 17, scope: !15238)
!15240 = !DILocation(line: 3252, column: 17, scope: !2768)
!15241 = !DILocation(line: 3252, column: 23, scope: !2768)
!15242 = !DILocation(line: 3252, column: 34, scope: !2768)
!15243 = !DILocation(line: 3253, column: 17, scope: !2768)
!15244 = !DILocation(line: 3254, column: 17, scope: !2768)
!15245 = !DILocation(line: 3255, column: 17, scope: !2768)
!15246 = !DILocation(line: 3255, column: 17, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3255, column: 17)
!15248 = !{!4645, !3911, i64 24}
!15249 = !DILocation(line: 3256, column: 17, scope: !2768)
!15250 = !DILocation(line: 3256, column: 22, scope: !2768)
!15251 = !DILocation(line: 3256, column: 36, scope: !2768)
!15252 = !DILocation(line: 3257, column: 17, scope: !2768)
!15253 = !DILocation(line: 3258, column: 37, scope: !2768)
!15254 = !DILocation(line: 3258, column: 17, scope: !2768)
!15255 = !DILocation(line: 3258, column: 23, scope: !2768)
!15256 = !DILocation(line: 3258, column: 35, scope: !2768)
!15257 = !DILocation(line: 3259, column: 17, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15259, file: !2, line: 3259, column: 17)
!15259 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3259, column: 17)
!15260 = !{!4645, !3911, i64 192}
!15261 = !DILocation(line: 3259, column: 17, scope: !15259)
!15262 = !DILocation(line: 3260, column: 60, scope: !2768)
!15263 = !DILocation(line: 3260, column: 65, scope: !2768)
!15264 = !DILocation(line: 3260, column: 44, scope: !2768)
!15265 = !DILocation(line: 3260, column: 17, scope: !2768)
!15266 = !DILocation(line: 3260, column: 23, scope: !2768)
!15267 = !DILocation(line: 3260, column: 42, scope: !2768)
!15268 = !DILocation(line: 3261, column: 17, scope: !2768)
!15269 = !DILocation(line: 3263, column: 21, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3263, column: 21)
!15271 = !DILocation(line: 3263, column: 26, scope: !15270)
!15272 = !DILocation(line: 3263, column: 34, scope: !15270)
!15273 = !DILocation(line: 3263, column: 42, scope: !15270)
!15274 = !DILocation(line: 3263, column: 21, scope: !2768)
!15275 = !DILocation(line: 3264, column: 59, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15270, file: !2, line: 3263, column: 64)
!15277 = !DILocation(line: 3264, column: 64, scope: !15276)
!15278 = !DILocation(line: 3264, column: 25, scope: !15276)
!15279 = !DILocation(line: 3266, column: 29, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15276, file: !2, line: 3266, column: 29)
!15281 = !DILocation(line: 3266, column: 29, scope: !15276)
!15282 = !DILocation(line: 3271, column: 37, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15280, file: !2, line: 3266, column: 66)
!15284 = !DILocation(line: 3270, column: 33, scope: !15283)
!15285 = !DILocation(line: 3275, column: 25, scope: !15283)
!15286 = !DILocation(line: 3276, column: 17, scope: !15276)
!15287 = !DILocation(line: 3278, column: 17, scope: !2768)
!15288 = !DILocation(line: 3278, column: 17, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15290, file: !2, line: 3278, column: 17)
!15290 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3278, column: 17)
!15291 = !DILocation(line: 3278, column: 17, scope: !15290)
!15292 = !DILocation(line: 3279, column: 17, scope: !2768)
!15293 = !DILocation(line: 3279, column: 23, scope: !2768)
!15294 = !DILocation(line: 3279, column: 40, scope: !2768)
!15295 = !DILocation(line: 3281, column: 17, scope: !2768)
!15296 = !DILocation(line: 3283, column: 57, scope: !2768)
!15297 = !DILocation(line: 3283, column: 62, scope: !2768)
!15298 = !DILocation(line: 3283, column: 17, scope: !2768)
!15299 = !DILocation(line: 3284, column: 17, scope: !2768)
!15300 = !DILocation(line: 3290, column: 24, scope: !2768)
!15301 = !DILocation(line: 3290, column: 29, scope: !2768)
!15302 = !DILocation(line: 3290, column: 22, scope: !2768)
!15303 = !DILocation(line: 3294, column: 54, scope: !2768)
!15304 = !DILocation(line: 3294, column: 60, scope: !2768)
!15305 = !DILocation(line: 3294, column: 29, scope: !2768)
!15306 = !DILocation(line: 3294, column: 27, scope: !2768)
!15307 = !DILocation(line: 3296, column: 17, scope: !2768)
!15308 = !DILocation(line: 3300, column: 21, scope: !2819)
!15309 = !DILocation(line: 3300, column: 21, scope: !2768)
!15310 = !DILocation(line: 3301, column: 25, scope: !2818)
!15311 = !DILocation(line: 3301, column: 25, scope: !2816)
!15312 = !DILocation(line: 3301, column: 25, scope: !2817)
!15313 = !DILocation(line: 3301, column: 25, scope: !2815)
!15314 = !DILocation(line: 3301, column: 25, scope: !2814)
!15315 = !DILocation(line: 3311, column: 25, scope: !2818)
!15316 = !DILocation(line: 3312, column: 25, scope: !2818)
!15317 = !DILocation(line: 3314, column: 17, scope: !2768)
!15318 = !DILocation(line: 3317, column: 46, scope: !2768)
!15319 = !DILocation(line: 3317, column: 52, scope: !2768)
!15320 = !DILocation(line: 3317, column: 17, scope: !2768)
!15321 = !DILocation(line: 3319, column: 21, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3319, column: 21)
!15323 = !DILocation(line: 3319, column: 26, scope: !15322)
!15324 = !DILocation(line: 3319, column: 34, scope: !15322)
!15325 = !DILocation(line: 3319, column: 42, scope: !15322)
!15326 = !DILocation(line: 3319, column: 21, scope: !2768)
!15327 = !DILocation(line: 3323, column: 29, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15322, file: !2, line: 3319, column: 64)
!15329 = !DILocation(line: 3323, column: 35, scope: !15328)
!15330 = !DILocation(line: 3323, column: 40, scope: !15328)
!15331 = !DILocation(line: 3323, column: 72, scope: !15328)
!15332 = !DILocation(line: 3322, column: 25, scope: !15328)
!15333 = !DILocation(line: 3325, column: 17, scope: !15328)
!15334 = !DILocation(line: 3328, column: 17, scope: !2768)
!15335 = !DILocation(line: 3330, column: 17, scope: !2768)
!15336 = !DILocation(line: 3330, column: 17, scope: !2823)
!15337 = !DILocation(line: 3330, column: 17, scope: !2824)
!15338 = !DILocation(line: 3330, column: 17, scope: !2822)
!15339 = !DILocation(line: 3330, column: 17, scope: !2821)
!15340 = !DILocation(line: 3344, column: 22, scope: !2768)
!15341 = !DILocation(line: 3344, column: 28, scope: !2768)
!15342 = !DILocation(line: 3344, column: 40, scope: !2768)
!15343 = !DILocation(line: 3344, column: 46, scope: !2768)
!15344 = !DILocation(line: 3345, column: 21, scope: !2768)
!15345 = !DILocation(line: 3345, column: 27, scope: !2768)
!15346 = !DILocation(line: 3345, column: 37, scope: !2768)
!15347 = !DILocation(line: 3345, column: 46, scope: !2768)
!15348 = !DILocation(line: 3343, column: 17, scope: !2768)
!15349 = !DILocation(line: 3347, column: 21, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3347, column: 21)
!15351 = !DILocation(line: 3347, column: 26, scope: !15350)
!15352 = !DILocation(line: 3347, column: 34, scope: !15350)
!15353 = !DILocation(line: 3347, column: 42, scope: !15350)
!15354 = !DILocation(line: 3347, column: 21, scope: !2768)
!15355 = !DILocation(line: 3348, column: 59, scope: !15350)
!15356 = !DILocation(line: 3348, column: 64, scope: !15350)
!15357 = !DILocation(line: 3348, column: 25, scope: !15350)
!15358 = !DILocation(line: 3350, column: 17, scope: !2768)
!15359 = !DILocation(line: 3351, column: 17, scope: !2768)
!15360 = !DILocation(line: 3351, column: 17, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15362, file: !2, line: 3351, column: 17)
!15362 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3351, column: 17)
!15363 = !DILocation(line: 3351, column: 17, scope: !15362)
!15364 = !DILocation(line: 3352, column: 17, scope: !2768)
!15365 = !DILocation(line: 3352, column: 22, scope: !2768)
!15366 = !DILocation(line: 3352, column: 36, scope: !2768)
!15367 = !DILocation(line: 3353, column: 17, scope: !2768)
!15368 = !DILocation(line: 3354, column: 17, scope: !2768)
!15369 = !DILocation(line: 3354, column: 17, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15371, file: !2, line: 3354, column: 17)
!15371 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3354, column: 17)
!15372 = !DILocation(line: 3354, column: 17, scope: !15371)
!15373 = !DILocation(line: 3355, column: 21, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3355, column: 21)
!15375 = !DILocation(line: 3355, column: 27, scope: !15374)
!15376 = !DILocation(line: 3355, column: 21, scope: !2768)
!15377 = !DILocation(line: 3356, column: 25, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15374, file: !2, line: 3355, column: 47)
!15379 = !DILocation(line: 3357, column: 25, scope: !15378)
!15380 = !DILocation(line: 3357, column: 31, scope: !15378)
!15381 = !DILocation(line: 3357, column: 50, scope: !15378)
!15382 = !DILocation(line: 3358, column: 17, scope: !15378)
!15383 = !DILocation(line: 3359, column: 17, scope: !2768)
!15384 = !DILocation(line: 3359, column: 23, scope: !2768)
!15385 = !DILocation(line: 3359, column: 35, scope: !2768)
!15386 = !DILocation(line: 3361, column: 17, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !15388, file: !2, line: 3361, column: 17)
!15388 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3361, column: 17)
!15389 = !DILocation(line: 3361, column: 17, scope: !15388)
!15390 = !DILocation(line: 3362, column: 17, scope: !2768)
!15391 = !DILocation(line: 3362, column: 23, scope: !2768)
!15392 = !DILocation(line: 3362, column: 34, scope: !2768)
!15393 = !DILocation(line: 3364, column: 21, scope: !2831)
!15394 = !DILocation(line: 3364, column: 27, scope: !2831)
!15395 = !DILocation(line: 3364, column: 21, scope: !2768)
!15396 = !DILocation(line: 3366, column: 25, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !2831, file: !2, line: 3364, column: 45)
!15398 = !DILocation(line: 3366, column: 30, scope: !15397)
!15399 = !DILocation(line: 3366, column: 39, scope: !15397)
!15400 = !DILocation(line: 3367, column: 40, scope: !15397)
!15401 = !DILocation(line: 3367, column: 46, scope: !15397)
!15402 = !DILocation(line: 3367, column: 64, scope: !15397)
!15403 = !DILocation(line: 3367, column: 73, scope: !15397)
!15404 = !DILocation(line: 3367, column: 25, scope: !15397)
!15405 = !DILocation(line: 3368, column: 29, scope: !15397)
!15406 = !DILocation(line: 3369, column: 17, scope: !15397)
!15407 = !DILocation(line: 3370, column: 25, scope: !2830)
!15408 = !DILocation(line: 3370, column: 25, scope: !2828)
!15409 = !DILocation(line: 3370, column: 25, scope: !2829)
!15410 = !DILocation(line: 3370, column: 25, scope: !2827)
!15411 = !DILocation(line: 3370, column: 25, scope: !2826)
!15412 = !DILocation(line: 3377, column: 25, scope: !2830)
!15413 = !DILocation(line: 3377, column: 25, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15415, file: !2, line: 3377, column: 25)
!15415 = distinct !DILexicalBlock(scope: !2830, file: !2, line: 3377, column: 25)
!15416 = !DILocation(line: 3377, column: 25, scope: !15415)
!15417 = !DILocation(line: 3380, column: 29, scope: !2830)
!15418 = !DILocation(line: 3380, column: 35, scope: !2830)
!15419 = !DILocation(line: 3380, column: 46, scope: !2830)
!15420 = !DILocation(line: 3380, column: 52, scope: !2830)
!15421 = !DILocation(line: 3381, column: 29, scope: !2830)
!15422 = !DILocation(line: 3383, column: 36, scope: !2830)
!15423 = !DILocation(line: 3384, column: 42, scope: !2830)
!15424 = !DILocation(line: 3379, column: 25, scope: !2830)
!15425 = !DILocation(line: 3388, column: 17, scope: !2768)
!15426 = !DILocation(line: 3389, column: 17, scope: !2768)
!15427 = !DILocation(line: 3389, column: 17, scope: !2833)
!15428 = !DILocation(line: 3389, column: 17, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !2833, file: !2, line: 3389, column: 17)
!15430 = !DILocation(line: 3391, column: 57, scope: !2768)
!15431 = !DILocation(line: 3391, column: 62, scope: !2768)
!15432 = !DILocation(line: 3391, column: 17, scope: !2768)
!15433 = !DILocation(line: 3392, column: 17, scope: !2768)
!15434 = !DILocation(line: 3396, column: 17, scope: !2768)
!15435 = !DILocation(line: 3396, column: 17, scope: !2837)
!15436 = !DILocation(line: 3396, column: 17, scope: !2838)
!15437 = !DILocation(line: 3396, column: 17, scope: !2836)
!15438 = !DILocation(line: 3396, column: 17, scope: !2835)
!15439 = !DILocation(line: 3410, column: 38, scope: !2768)
!15440 = !DILocation(line: 3410, column: 17, scope: !2768)
!15441 = !DILocation(line: 3413, column: 49, scope: !2768)
!15442 = !DILocation(line: 3413, column: 17, scope: !2768)
!15443 = !DILocation(line: 3414, column: 24, scope: !2768)
!15444 = !DILocation(line: 3415, column: 17, scope: !2768)
!15445 = !DILocation(line: 3418, column: 24, scope: !2768)
!15446 = !DILocation(line: 3419, column: 17, scope: !2768)
!15447 = !DILocation(line: 3422, column: 53, scope: !2768)
!15448 = !DILocation(line: 3422, column: 58, scope: !2768)
!15449 = !DILocation(line: 3422, column: 17, scope: !2768)
!15450 = !DILocation(line: 3423, column: 21, scope: !2768)
!15451 = !DILocation(line: 3424, column: 17, scope: !2768)
!15452 = !DILocation(line: 3429, column: 21, scope: !2845)
!15453 = !DILocation(line: 3429, column: 26, scope: !2845)
!15454 = !DILocation(line: 3429, column: 36, scope: !2845)
!15455 = !DILocation(line: 3429, column: 21, scope: !2768)
!15456 = !DILocation(line: 3430, column: 25, scope: !2844)
!15457 = !DILocation(line: 3430, column: 25, scope: !2842)
!15458 = !DILocation(line: 3430, column: 25, scope: !2843)
!15459 = !DILocation(line: 3430, column: 25, scope: !2841)
!15460 = !DILocation(line: 3430, column: 25, scope: !2840)
!15461 = !DILocation(line: 3432, column: 25, scope: !2844)
!15462 = !DILocation(line: 3432, column: 30, scope: !2844)
!15463 = !DILocation(line: 3432, column: 46, scope: !2844)
!15464 = !DILocation(line: 3432, column: 54, scope: !2844)
!15465 = !DILocation(line: 3433, column: 25, scope: !2844)
!15466 = !DILocation(line: 3435, column: 29, scope: !2844)
!15467 = !DILocation(line: 3434, column: 25, scope: !2844)
!15468 = !DILocation(line: 3436, column: 25, scope: !2844)
!15469 = !DILocation(line: 3438, column: 17, scope: !2844)
!15470 = !DILocation(line: 3438, column: 28, scope: !2848)
!15471 = !DILocation(line: 3438, column: 33, scope: !2848)
!15472 = !DILocation(line: 3438, column: 43, scope: !2848)
!15473 = !DILocation(line: 3438, column: 28, scope: !2845)
!15474 = !DILocation(line: 3440, column: 25, scope: !2847)
!15475 = !DILocation(line: 3440, column: 35, scope: !2847)
!15476 = !DILocation(line: 3445, column: 25, scope: !2847)
!15477 = !DILocation(line: 3447, column: 30, scope: !2847)
!15478 = !DILocation(line: 3447, column: 35, scope: !2847)
!15479 = !DILocation(line: 3447, column: 56, scope: !2847)
!15480 = !DILocation(line: 3447, column: 61, scope: !2847)
!15481 = !DILocation(line: 3447, column: 53, scope: !2847)
!15482 = !DILocation(line: 3447, column: 29, scope: !2847)
!15483 = !DILocation(line: 3446, column: 39, scope: !2847)
!15484 = !DILocation(line: 3448, column: 25, scope: !2847)
!15485 = !DILocation(line: 3450, column: 29, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !2847, file: !2, line: 3450, column: 29)
!15487 = !DILocation(line: 3450, column: 29, scope: !2847)
!15488 = !DILocation(line: 3452, column: 37, scope: !15486)
!15489 = !DILocation(line: 3451, column: 33, scope: !15486)
!15490 = !DILocation(line: 3456, column: 17, scope: !2848)
!15491 = !DILocation(line: 3456, column: 17, scope: !2847)
!15492 = !DILocation(line: 3459, column: 17, scope: !2768)
!15493 = !DILocation(line: 3459, column: 22, scope: !2768)
!15494 = !DILocation(line: 3459, column: 39, scope: !2768)
!15495 = !DILocation(line: 3461, column: 24, scope: !2768)
!15496 = !DILocation(line: 3462, column: 17, scope: !2768)
!15497 = !DILocation(line: 3465, column: 17, scope: !2768)
!15498 = !DILocation(line: 3465, column: 17, scope: !2852)
!15499 = !DILocation(line: 3465, column: 17, scope: !2853)
!15500 = !DILocation(line: 3465, column: 17, scope: !2851)
!15501 = !DILocation(line: 3465, column: 17, scope: !2850)
!15502 = !DILocation(line: 3469, column: 17, scope: !2768)
!15503 = !DILocation(line: 3469, column: 22, scope: !2768)
!15504 = !DILocation(line: 3469, column: 39, scope: !2768)
!15505 = !DILocation(line: 3471, column: 17, scope: !2768)
!15506 = !DILocation(line: 3472, column: 43, scope: !2768)
!15507 = !DILocation(line: 3472, column: 17, scope: !2768)
!15508 = !DILocation(line: 3473, column: 17, scope: !2768)
!15509 = !DILocation(line: 3475, column: 24, scope: !2768)
!15510 = !DILocation(line: 3476, column: 17, scope: !2768)
!15511 = !DILocation(line: 3479, column: 17, scope: !2768)
!15512 = !DILocation(line: 3479, column: 17, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15514, file: !2, line: 3479, column: 17)
!15514 = distinct !DILexicalBlock(scope: !2768, file: !2, line: 3479, column: 17)
!15515 = !DILocation(line: 3479, column: 17, scope: !15514)
!15516 = !DILocation(line: 3480, column: 17, scope: !2768)
!15517 = !DILocation(line: 3483, column: 13, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !2757, file: !2, line: 3483, column: 13)
!15519 = !DILocation(line: 3483, column: 13, scope: !2757)
!15520 = !DILocation(line: 3484, column: 35, scope: !15518)
!15521 = !DILocation(line: 3484, column: 17, scope: !15518)
!15522 = !DILocation(line: 3486, column: 16, scope: !2757)
!15523 = !DILocation(line: 3487, column: 1, scope: !2757)
!15524 = !DILocation(line: 3486, column: 9, scope: !2757)
!15525 = distinct !DISubprogram(name: "rd_kafka_broker_map_partitions", scope: !2, file: !2, line: 3001, type: !1583, scopeLine: 3001, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !15526)
!15526 = !{!15527, !15528, !15529, !15530, !15531, !15535, !15539}
!15527 = !DILocalVariable(name: "rkb", arg: 1, scope: !15525, file: !2, line: 3001, type: !412)
!15528 = !DILocalVariable(name: "rk", scope: !15525, file: !2, line: 3002, type: !586)
!15529 = !DILocalVariable(name: "rkt", scope: !15525, file: !2, line: 3003, type: !406)
!15530 = !DILocalVariable(name: "cnt", scope: !15525, file: !2, line: 3004, type: !126)
!15531 = !DILocalVariable(name: "i", scope: !15532, file: !2, line: 3011, type: !126)
!15532 = distinct !DILexicalBlock(scope: !15533, file: !2, line: 3010, column: 54)
!15533 = distinct !DILexicalBlock(scope: !15534, file: !2, line: 3010, column: 9)
!15534 = distinct !DILexicalBlock(scope: !15525, file: !2, line: 3010, column: 9)
!15535 = !DILocalVariable(name: "rktp", scope: !15536, file: !2, line: 3015, type: !368)
!15536 = distinct !DILexicalBlock(scope: !15537, file: !2, line: 3014, column: 62)
!15537 = distinct !DILexicalBlock(scope: !15538, file: !2, line: 3014, column: 17)
!15538 = distinct !DILexicalBlock(scope: !15532, file: !2, line: 3014, column: 17)
!15539 = !DILocalVariable(name: "_logname", scope: !15540, file: !2, line: 3033, type: !924)
!15540 = distinct !DILexicalBlock(scope: !15541, file: !2, line: 3033, column: 9)
!15541 = distinct !DILexicalBlock(scope: !15542, file: !2, line: 3033, column: 9)
!15542 = distinct !DILexicalBlock(scope: !15543, file: !2, line: 3033, column: 9)
!15543 = distinct !DILexicalBlock(scope: !15525, file: !2, line: 3033, column: 9)
!15544 = !DILocation(line: 3001, column: 63, scope: !15525)
!15545 = !DILocation(line: 3002, column: 9, scope: !15525)
!15546 = !DILocation(line: 3002, column: 21, scope: !15525)
!15547 = !DILocation(line: 3002, column: 26, scope: !15525)
!15548 = !DILocation(line: 3002, column: 31, scope: !15525)
!15549 = !DILocation(line: 3003, column: 9, scope: !15525)
!15550 = !DILocation(line: 3003, column: 27, scope: !15525)
!15551 = !DILocation(line: 3004, column: 9, scope: !15525)
!15552 = !DILocation(line: 3004, column: 13, scope: !15525)
!15553 = !DILocation(line: 3006, column: 13, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15525, file: !2, line: 3006, column: 13)
!15555 = !DILocation(line: 3006, column: 18, scope: !15554)
!15556 = !DILocation(line: 3006, column: 29, scope: !15554)
!15557 = !DILocation(line: 3006, column: 35, scope: !15554)
!15558 = !DILocation(line: 3006, column: 38, scope: !15554)
!15559 = !DILocation(line: 3006, column: 13, scope: !15525)
!15560 = !DILocation(line: 3007, column: 17, scope: !15554)
!15561 = !DILocation(line: 3009, column: 9, scope: !15525)
!15562 = !DILocation(line: 3010, column: 9, scope: !15534)
!15563 = !{!4141, !3911, i64 280}
!15564 = !DILocation(line: 3010, column: 9, scope: !15533)
!15565 = !DILocation(line: 3011, column: 17, scope: !15532)
!15566 = !DILocation(line: 3011, column: 21, scope: !15532)
!15567 = !DILocation(line: 3013, column: 17, scope: !15532)
!15568 = !DILocation(line: 3014, column: 24, scope: !15538)
!15569 = !DILocation(line: 3014, column: 22, scope: !15538)
!15570 = !DILocation(line: 3014, column: 29, scope: !15537)
!15571 = !DILocation(line: 3014, column: 33, scope: !15537)
!15572 = !DILocation(line: 3014, column: 38, scope: !15537)
!15573 = !{!8421, !3941, i64 112}
!15574 = !DILocation(line: 3014, column: 31, scope: !15537)
!15575 = !DILocation(line: 3014, column: 17, scope: !15538)
!15576 = !DILocation(line: 3015, column: 25, scope: !15536)
!15577 = !DILocation(line: 3015, column: 44, scope: !15536)
!15578 = !DILocation(line: 3015, column: 51, scope: !15536)
!15579 = !DILocation(line: 3015, column: 56, scope: !15536)
!15580 = !{!8421, !3911, i64 104}
!15581 = !DILocation(line: 3015, column: 62, scope: !15536)
!15582 = !DILocation(line: 3019, column: 25, scope: !15536)
!15583 = !DILocation(line: 3020, column: 29, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15536, file: !2, line: 3020, column: 29)
!15585 = !DILocation(line: 3020, column: 35, scope: !15584)
!15586 = !DILocation(line: 3020, column: 53, scope: !15584)
!15587 = !DILocation(line: 3020, column: 58, scope: !15584)
!15588 = !DILocation(line: 3020, column: 50, scope: !15584)
!15589 = !DILocation(line: 3020, column: 69, scope: !15584)
!15590 = !DILocation(line: 3021, column: 31, scope: !15584)
!15591 = !DILocation(line: 3021, column: 37, scope: !15584)
!15592 = !DILocation(line: 3021, column: 49, scope: !15584)
!15593 = !DILocation(line: 3021, column: 52, scope: !15584)
!15594 = !DILocation(line: 3021, column: 58, scope: !15584)
!15595 = !DILocation(line: 3020, column: 29, scope: !15536)
!15596 = !DILocation(line: 3023, column: 37, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15584, file: !2, line: 3021, column: 77)
!15598 = !DILocation(line: 3023, column: 43, scope: !15597)
!15599 = !DILocation(line: 3023, column: 49, scope: !15597)
!15600 = !DILocation(line: 3023, column: 65, scope: !15597)
!15601 = !DILocation(line: 3022, column: 33, scope: !15597)
!15602 = !DILocation(line: 3025, column: 36, scope: !15597)
!15603 = !DILocation(line: 3026, column: 25, scope: !15597)
!15604 = !DILocation(line: 3027, column: 25, scope: !15536)
!15605 = !DILocation(line: 3028, column: 17, scope: !15537)
!15606 = !DILocation(line: 3028, column: 17, scope: !15536)
!15607 = !DILocation(line: 3014, column: 58, scope: !15537)
!15608 = !DILocation(line: 3014, column: 17, scope: !15537)
!15609 = distinct !{!15609, !15575, !15610, !4095}
!15610 = !DILocation(line: 3028, column: 17, scope: !15538)
!15611 = !DILocation(line: 3029, column: 17, scope: !15532)
!15612 = !DILocation(line: 3030, column: 9, scope: !15533)
!15613 = !DILocation(line: 3030, column: 9, scope: !15532)
!15614 = !{!8421, !3911, i64 8}
!15615 = distinct !{!15615, !15562, !15616, !4095}
!15616 = !DILocation(line: 3030, column: 9, scope: !15534)
!15617 = !DILocation(line: 3031, column: 9, scope: !15525)
!15618 = !DILocation(line: 3033, column: 9, scope: !15525)
!15619 = !DILocation(line: 3033, column: 9, scope: !15542)
!15620 = !DILocation(line: 3033, column: 9, scope: !15543)
!15621 = !DILocation(line: 3033, column: 9, scope: !15541)
!15622 = !DILocation(line: 3033, column: 9, scope: !15540)
!15623 = !DILocation(line: 3035, column: 1, scope: !15525)
!15624 = distinct !DISubprogram(name: "rd_kafka_toppar_keep0", scope: !371, file: !371, line: 515, type: !15625, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !15627)
!15625 = !DISubroutineType(types: !15626)
!15626 = !{!368, !365, !126, !368}
!15627 = !{!15628, !15629, !15630}
!15628 = !DILocalVariable(name: "func", arg: 1, scope: !15624, file: !371, line: 515, type: !365)
!15629 = !DILocalVariable(name: "line", arg: 2, scope: !15624, file: !371, line: 515, type: !126)
!15630 = !DILocalVariable(name: "rktp", arg: 3, scope: !15624, file: !371, line: 515, type: !368)
!15631 = !DILocation(line: 515, column: 35, scope: !15624)
!15632 = !DILocation(line: 515, column: 45, scope: !15624)
!15633 = !DILocation(line: 515, column: 70, scope: !15624)
!15634 = !DILocation(line: 516, column: 9, scope: !15624)
!15635 = !DILocation(line: 517, column: 16, scope: !15624)
!15636 = !DILocation(line: 517, column: 9, scope: !15624)
!15637 = !DISubprogram(name: "rd_kafka_toppar_destroy_final", scope: !371, file: !371, line: 520, type: !15638, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15638 = !DISubroutineType(types: !15639)
!15639 = !{null, !368}
!15640 = !DISubprogram(name: "rd_kafka_idemp_drain_toppar", scope: !14223, file: !14223, line: 93, type: !15641, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15641 = !DISubroutineType(types: !15642)
!15642 = !{null, !368, !365}
!15643 = distinct !DISubprogram(name: "rd_kafka_topic_get_error", scope: !298, file: !298, line: 250, type: !15644, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !15646)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{!550, !406}
!15646 = !{!15647, !15648}
!15647 = !DILocalVariable(name: "rkt", arg: 1, scope: !15643, file: !298, line: 250, type: !406)
!15648 = !DILocalVariable(name: "err", scope: !15643, file: !298, line: 251, type: !550)
!15649 = !DILocation(line: 250, column: 44, scope: !15643)
!15650 = !DILocation(line: 251, column: 9, scope: !15643)
!15651 = !DILocation(line: 251, column: 29, scope: !15643)
!15652 = !DILocation(line: 252, column: 9, scope: !15643)
!15653 = !DILocation(line: 253, column: 13, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15643, file: !298, line: 253, column: 13)
!15655 = !DILocation(line: 253, column: 18, scope: !15654)
!15656 = !{!8421, !3912, i64 228}
!15657 = !DILocation(line: 253, column: 28, scope: !15654)
!15658 = !DILocation(line: 253, column: 13, scope: !15643)
!15659 = !DILocation(line: 254, column: 23, scope: !15654)
!15660 = !DILocation(line: 254, column: 28, scope: !15654)
!15661 = !{!8421, !3912, i64 236}
!15662 = !DILocation(line: 254, column: 21, scope: !15654)
!15663 = !DILocation(line: 254, column: 17, scope: !15654)
!15664 = !DILocation(line: 255, column: 9, scope: !15643)
!15665 = !DILocation(line: 256, column: 16, scope: !15643)
!15666 = !DILocation(line: 257, column: 1, scope: !15643)
!15667 = !DILocation(line: 256, column: 9, scope: !15643)
!15668 = !DISubprogram(name: "rd_kafka_toppar_fetch_decide", scope: !14846, file: !14846, line: 39, type: !15669, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15669 = !DISubroutineType(types: !15670)
!15670 = !{!487, !368, !412, !126}
!15671 = distinct !DISubprogram(name: "rd_kafka_broker_prepare_destroy", scope: !2, file: !2, line: 3074, type: !1583, scopeLine: 3074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !15672)
!15672 = !{!15673}
!15673 = !DILocalVariable(name: "rkb", arg: 1, scope: !15671, file: !2, line: 3074, type: !412)
!15674 = !DILocation(line: 3074, column: 64, scope: !15671)
!15675 = !DILocation(line: 3075, column: 38, scope: !15671)
!15676 = !DILocation(line: 3075, column: 43, scope: !15671)
!15677 = !DILocation(line: 3075, column: 9, scope: !15671)
!15678 = !DILocation(line: 3076, column: 1, scope: !15671)
!15679 = distinct !DISubprogram(name: "rd_kafka_broker_handle_purge_queues", scope: !2, file: !2, line: 5657, type: !15680, scopeLine: 5658, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !15682)
!15680 = !DISubroutineType(types: !15681)
!15681 = !{null, !412, !914}
!15682 = !{!15683, !15684, !15685, !15686, !15687, !15688, !15689, !15690, !15695, !15700, !15703, !15704, !15705, !15709}
!15683 = !DILocalVariable(name: "rkb", arg: 1, scope: !15679, file: !2, line: 5657, type: !412)
!15684 = !DILocalVariable(name: "rko", arg: 2, scope: !15679, file: !2, line: 5658, type: !914)
!15685 = !DILocalVariable(name: "purge_flags", scope: !15679, file: !2, line: 5659, type: !126)
!15686 = !DILocalVariable(name: "inflight_cnt", scope: !15679, file: !2, line: 5660, type: !126)
!15687 = !DILocalVariable(name: "retry_cnt", scope: !15679, file: !2, line: 5660, type: !126)
!15688 = !DILocalVariable(name: "outq_cnt", scope: !15679, file: !2, line: 5660, type: !126)
!15689 = !DILocalVariable(name: "partial_cnt", scope: !15679, file: !2, line: 5660, type: !126)
!15690 = !DILocalVariable(name: "_logname", scope: !15691, file: !2, line: 5662, type: !924)
!15691 = distinct !DILexicalBlock(scope: !15692, file: !2, line: 5662, column: 9)
!15692 = distinct !DILexicalBlock(scope: !15693, file: !2, line: 5662, column: 9)
!15693 = distinct !DILexicalBlock(scope: !15694, file: !2, line: 5662, column: 9)
!15694 = distinct !DILexicalBlock(scope: !15679, file: !2, line: 5662, column: 9)
!15695 = !DILocalVariable(name: "_logname", scope: !15696, file: !2, line: 5702, type: !924)
!15696 = distinct !DILexicalBlock(scope: !15697, file: !2, line: 5702, column: 9)
!15697 = distinct !DILexicalBlock(scope: !15698, file: !2, line: 5702, column: 9)
!15698 = distinct !DILexicalBlock(scope: !15699, file: !2, line: 5702, column: 9)
!15699 = distinct !DILexicalBlock(scope: !15679, file: !2, line: 5702, column: 9)
!15700 = !DILocalVariable(name: "rktp", scope: !15701, file: !2, line: 5709, type: !368)
!15701 = distinct !DILexicalBlock(scope: !15702, file: !2, line: 5708, column: 51)
!15702 = distinct !DILexicalBlock(scope: !15679, file: !2, line: 5708, column: 13)
!15703 = !DILocalVariable(name: "msg_cnt", scope: !15701, file: !2, line: 5710, type: !126)
!15704 = !DILocalVariable(name: "part_cnt", scope: !15701, file: !2, line: 5711, type: !126)
!15705 = !DILocalVariable(name: "r", scope: !15706, file: !2, line: 5714, type: !126)
!15706 = distinct !DILexicalBlock(scope: !15707, file: !2, line: 5713, column: 70)
!15707 = distinct !DILexicalBlock(scope: !15708, file: !2, line: 5713, column: 17)
!15708 = distinct !DILexicalBlock(scope: !15701, file: !2, line: 5713, column: 17)
!15709 = !DILocalVariable(name: "_logname", scope: !15710, file: !2, line: 5724, type: !924)
!15710 = distinct !DILexicalBlock(scope: !15711, file: !2, line: 5724, column: 17)
!15711 = distinct !DILexicalBlock(scope: !15712, file: !2, line: 5724, column: 17)
!15712 = distinct !DILexicalBlock(scope: !15713, file: !2, line: 5724, column: 17)
!15713 = distinct !DILexicalBlock(scope: !15701, file: !2, line: 5724, column: 17)
!15714 = !DILocation(line: 5657, column: 68, scope: !15679)
!15715 = !DILocation(line: 5658, column: 64, scope: !15679)
!15716 = !DILocation(line: 5659, column: 9, scope: !15679)
!15717 = !DILocation(line: 5659, column: 13, scope: !15679)
!15718 = !DILocation(line: 5659, column: 28, scope: !15679)
!15719 = !DILocation(line: 5659, column: 33, scope: !15679)
!15720 = !DILocation(line: 5659, column: 45, scope: !15679)
!15721 = !DILocation(line: 5660, column: 9, scope: !15679)
!15722 = !DILocation(line: 5660, column: 13, scope: !15679)
!15723 = !DILocation(line: 5660, column: 31, scope: !15679)
!15724 = !DILocation(line: 5660, column: 46, scope: !15679)
!15725 = !DILocation(line: 5660, column: 60, scope: !15679)
!15726 = !DILocation(line: 5662, column: 9, scope: !15679)
!15727 = !DILocation(line: 5662, column: 9, scope: !15693)
!15728 = !DILocation(line: 5662, column: 9, scope: !15694)
!15729 = !DILocation(line: 5662, column: 9, scope: !15692)
!15730 = !DILocation(line: 5662, column: 9, scope: !15691)
!15731 = !DILocation(line: 5673, column: 13, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15679, file: !2, line: 5673, column: 13)
!15733 = !DILocation(line: 5673, column: 25, scope: !15732)
!15734 = !DILocation(line: 5673, column: 13, scope: !15679)
!15735 = !DILocation(line: 5675, column: 21, scope: !15732)
!15736 = !DILocation(line: 5675, column: 30, scope: !15732)
!15737 = !DILocation(line: 5675, column: 35, scope: !15732)
!15738 = !DILocation(line: 5674, column: 32, scope: !15732)
!15739 = !DILocation(line: 5674, column: 30, scope: !15732)
!15740 = !DILocation(line: 5674, column: 17, scope: !15732)
!15741 = !DILocation(line: 5678, column: 13, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15679, file: !2, line: 5678, column: 13)
!15743 = !DILocation(line: 5678, column: 25, scope: !15742)
!15744 = !DILocation(line: 5678, column: 13, scope: !15679)
!15745 = !DILocation(line: 5681, column: 21, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15742, file: !2, line: 5678, column: 51)
!15747 = !DILocation(line: 5681, column: 30, scope: !15746)
!15748 = !DILocation(line: 5681, column: 35, scope: !15746)
!15749 = !DILocation(line: 5680, column: 29, scope: !15746)
!15750 = !DILocation(line: 5680, column: 27, scope: !15746)
!15751 = !DILocation(line: 5688, column: 21, scope: !15746)
!15752 = !DILocation(line: 5688, column: 30, scope: !15746)
!15753 = !DILocation(line: 5688, column: 35, scope: !15746)
!15754 = !DILocation(line: 5687, column: 28, scope: !15746)
!15755 = !DILocation(line: 5687, column: 26, scope: !15746)
!15756 = !DILocation(line: 5694, column: 21, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15746, file: !2, line: 5694, column: 21)
!15758 = !DILocation(line: 5694, column: 21, scope: !15746)
!15759 = !DILocation(line: 5696, column: 29, scope: !15757)
!15760 = !DILocation(line: 5699, column: 29, scope: !15757)
!15761 = !DILocation(line: 5695, column: 25, scope: !15757)
!15762 = !DILocation(line: 5700, column: 9, scope: !15746)
!15763 = !DILocation(line: 5702, column: 9, scope: !15679)
!15764 = !DILocation(line: 5702, column: 9, scope: !15698)
!15765 = !DILocation(line: 5702, column: 9, scope: !15699)
!15766 = !DILocation(line: 5702, column: 9, scope: !15697)
!15767 = !DILocation(line: 5702, column: 9, scope: !15696)
!15768 = !DILocation(line: 5708, column: 13, scope: !15702)
!15769 = !DILocation(line: 5708, column: 25, scope: !15702)
!15770 = !DILocation(line: 5708, column: 13, scope: !15679)
!15771 = !DILocation(line: 5709, column: 17, scope: !15701)
!15772 = !DILocation(line: 5709, column: 36, scope: !15701)
!15773 = !DILocation(line: 5710, column: 17, scope: !15701)
!15774 = !DILocation(line: 5710, column: 21, scope: !15701)
!15775 = !DILocation(line: 5711, column: 17, scope: !15701)
!15776 = !DILocation(line: 5711, column: 21, scope: !15701)
!15777 = !DILocation(line: 5713, column: 17, scope: !15708)
!15778 = !DILocation(line: 5713, column: 17, scope: !15707)
!15779 = !DILocation(line: 5714, column: 25, scope: !15706)
!15780 = !DILocation(line: 5714, column: 29, scope: !15706)
!15781 = !DILocation(line: 5717, column: 29, scope: !15706)
!15782 = !DILocation(line: 5717, column: 35, scope: !15706)
!15783 = !DILocation(line: 5716, column: 29, scope: !15706)
!15784 = !DILocation(line: 5716, column: 27, scope: !15706)
!15785 = !DILocation(line: 5718, column: 29, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15706, file: !2, line: 5718, column: 29)
!15787 = !DILocation(line: 5718, column: 31, scope: !15786)
!15788 = !DILocation(line: 5718, column: 29, scope: !15706)
!15789 = !DILocation(line: 5719, column: 44, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15786, file: !2, line: 5718, column: 36)
!15791 = !DILocation(line: 5719, column: 41, scope: !15790)
!15792 = !DILocation(line: 5720, column: 41, scope: !15790)
!15793 = !DILocation(line: 5721, column: 25, scope: !15790)
!15794 = !DILocation(line: 5722, column: 17, scope: !15707)
!15795 = !DILocation(line: 5722, column: 17, scope: !15706)
!15796 = distinct !{!15796, !15777, !15797, !4095}
!15797 = !DILocation(line: 5722, column: 17, scope: !15708)
!15798 = !DILocation(line: 5724, column: 17, scope: !15701)
!15799 = !DILocation(line: 5724, column: 17, scope: !15712)
!15800 = !DILocation(line: 5724, column: 17, scope: !15713)
!15801 = !DILocation(line: 5724, column: 17, scope: !15711)
!15802 = !DILocation(line: 5724, column: 17, scope: !15710)
!15803 = !DILocation(line: 5727, column: 9, scope: !15702)
!15804 = !DILocation(line: 5727, column: 9, scope: !15701)
!15805 = !DILocation(line: 5729, column: 27, scope: !15679)
!15806 = !DILocation(line: 5729, column: 9, scope: !15679)
!15807 = !DILocation(line: 5730, column: 1, scope: !15679)
!15808 = !DISubprogram(name: "rd_kafka_toppar_broker_update", scope: !298, file: !298, line: 287, type: !15809, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15809 = !DISubroutineType(types: !15810)
!15810 = !{!126, !368, !320, !412, !365}
!15811 = !DISubprogram(name: "rd_kafka_purge_flags2str", scope: !589, file: !589, line: 833, type: !3516, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15812 = !DISubprogram(name: "rd_kafka_toppar_purge_queues", scope: !371, file: !371, line: 640, type: !15813, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15813 = !DISubroutineType(types: !15814)
!15814 = !{!126, !368, !126, !561}
!15815 = !DISubprogram(name: "strchr", scope: !6937, file: !6937, line: 246, type: !15816, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15816 = !DISubroutineType(types: !15817)
!15817 = !{!559, !365, !126}
!15818 = !DISubprogram(name: "strstr", scope: !6937, file: !6937, line: 350, type: !15819, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15819 = !DISubroutineType(types: !15820)
!15820 = !{!559, !365, !365}
!15821 = !DISubprogram(name: "__ctype_toupper_loc", scope: !15822, file: !15822, line: 83, type: !15823, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15822 = !DIFile(filename: "/usr/include/ctype.h", directory: "", checksumkind: CSK_MD5, checksum: "3ab3dd7fdf2578005732722ee2393e59")
!15823 = !DISubroutineType(types: !15824)
!15824 = !{!15825}
!15825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15826, size: 64)
!15826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15827, size: 64)
!15827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !322)
!15828 = !DISubprogram(name: "strcasecmp", scope: !15829, file: !15829, line: 116, type: !7226, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15829 = !DIFile(filename: "/usr/include/strings.h", directory: "", checksumkind: CSK_MD5, checksum: "7444da68ad94ab9f25ff447750787173")
!15830 = !DISubprogram(name: "strrchr", scope: !6937, file: !6937, line: 273, type: !15816, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15831 = distinct !DISubprogram(name: "atoi", scope: !4025, file: !4025, line: 362, type: !15832, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !15834)
!15832 = !DISubroutineType(types: !15833)
!15833 = !{!126, !365}
!15834 = !{!15835}
!15835 = !DILocalVariable(name: "__nptr", arg: 1, scope: !15831, file: !4025, line: 362, type: !365)
!15836 = !DILocation(line: 362, column: 1, scope: !15831)
!15837 = !DILocation(line: 364, column: 24, scope: !15831)
!15838 = !DILocation(line: 364, column: 16, scope: !15831)
!15839 = !DILocation(line: 364, column: 10, scope: !15831)
!15840 = !DILocation(line: 364, column: 3, scope: !15831)
!15841 = !DISubprogram(name: "strtol", scope: !4025, file: !4025, line: 177, type: !15842, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15842 = !DISubroutineType(types: !15843)
!15843 = !{!356, !6935, !15844, !126}
!15844 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !825)
!15845 = !DISubprogram(name: "rd_kafka_op_new_cb", scope: !58, file: !58, line: 680, type: !15846, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15846 = !DISubroutineType(types: !15847)
!15847 = !{!914, !586, !544, !1970}
!15848 = distinct !DISubprogram(name: "rd_kafka_broker_monitor_op_cb", scope: !2, file: !2, line: 5865, type: !15849, scopeLine: 5867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !55, retainedNodes: !15851)
!15849 = !DISubroutineType(types: !15850)
!15850 = !{!579, !586, !503, !914}
!15851 = !{!15852, !15853, !15854}
!15852 = !DILocalVariable(name: "rk", arg: 1, scope: !15848, file: !2, line: 5865, type: !586)
!15853 = !DILocalVariable(name: "rkq", arg: 2, scope: !15848, file: !2, line: 5866, type: !503)
!15854 = !DILocalVariable(name: "rko", arg: 3, scope: !15848, file: !2, line: 5867, type: !914)
!15855 = !DILocation(line: 5865, column: 68, scope: !15848)
!15856 = !DILocation(line: 5866, column: 70, scope: !15848)
!15857 = !DILocation(line: 5867, column: 71, scope: !15848)
!15858 = !DILocation(line: 5868, column: 13, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15848, file: !2, line: 5868, column: 13)
!15860 = !DILocation(line: 5868, column: 18, scope: !15859)
!15861 = !DILocation(line: 5868, column: 26, scope: !15859)
!15862 = !DILocation(line: 5868, column: 13, scope: !15848)
!15863 = !DILocation(line: 5869, column: 17, scope: !15859)
!15864 = !DILocation(line: 5869, column: 22, scope: !15859)
!15865 = !DILocation(line: 5869, column: 43, scope: !15859)
!15866 = !DILocation(line: 5869, column: 46, scope: !15859)
!15867 = !DILocation(line: 5869, column: 51, scope: !15859)
!15868 = !DILocation(line: 5869, column: 72, scope: !15859)
!15869 = !DILocation(line: 5870, column: 9, scope: !15848)
!15870 = !DISubprogram(name: "rd_kafka_q_destroy_final", scope: !506, file: !506, line: 146, type: !8856, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)

; ModuleID = 'samples/543.bc'
source_filename = "beam/copy.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ErtsAllocatorFunctions_t = type { ptr, ptr, ptr, ptr }
%struct.process = type { %struct.ErtsPTabElementCommon, ptr, ptr, ptr, i64, i64, i64, ptr, ptr, ptr, i64, i64, i64, i64, i64, ptr, i32, [6 x i64], ptr, i64, i32, i32, i64, i32, i64, i64, ptr, i64, %struct.ErtsSignalPrivQueues, ptr, ptr, i64, i64, i64, %union.anon.1, ptr, i64, i32, ptr, ptr, ptr, ptr, i16, i16, %struct.erl_off_heap, ptr, ptr, ptr, ptr, i64, %struct.ethr_native_atomic64_t, i64, i64, i64, ptr, ptr, %struct.ethr_native_atomic32_t, %struct.ethr_native_atomic32_t, i64, %struct.ErtsSignalInQueue, %struct.ethr_native_atomic64_t, ptr, %struct.erts_proc_lock_t_, ptr, %struct.ethr_native_atomic64_t }
%struct.ErtsPTabElementCommon = type { i64, %union.anon, i64, i64, %struct.ethr_native_atomic64_t, %union.anon.0 }
%union.anon = type { %struct.ethr_native_atomic64_t }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i64, ptr, ptr, ptr, ptr }
%struct.ErtsSignalPrivQueues = type { ptr, ptr, ptr, ptr, ptr, %struct.ErtsMsgQNMSigs, ptr, i64, i32 }
%struct.ErtsMsgQNMSigs = type { ptr, ptr }
%union.anon.1 = type { %struct.ErtsCodeMFA_ }
%struct.ErtsCodeMFA_ = type { i64, i64, i64 }
%struct.erl_off_heap = type { ptr, i64 }
%struct.ethr_native_atomic32_t = type { i32 }
%struct.ErtsSignalInQueue = type { ptr, ptr, i64, %struct.ErtsMsgQNMSigs }
%struct.erts_proc_lock_t_ = type { %struct.ethr_native_atomic32_t, [5 x ptr] }
%struct.ethr_native_atomic64_t = type { i64 }
%struct.ErtsEStack_ = type { ptr, ptr, ptr, ptr, i32 }
%struct.erts_literal_area_t = type { ptr, i64 }
%struct.erl_fun_thing = type { i64, %union.anon.2, ptr, i8, i8, i64, [0 x i64] }
%union.anon.2 = type { ptr }
%struct.flatmap_s = type { i64, i64, i64 }
%struct.erl_sub_bin = type { i64, i64, i64, i8, i8, i8, i64 }
%struct.proc_bin = type { i64, i64, ptr, ptr, ptr, i64 }
%struct.binary = type { %struct.binary_internals, i64, [1 x i8] }
%struct.binary_internals = type { i64, %struct.ethr_native_atomic64_t }
%struct.erl_heap_bin = type { i64, i64, [1 x i64] }
%struct.erl_fun_entry = type { %struct.ErtsDispatchable_, i64, i64, i32, [16 x i8], i32, i32, %struct.ethr_native_atomic64_t, ptr }
%struct.ErtsDispatchable_ = type { [4 x ptr] }
%struct.external_thing_ = type { i64, ptr, ptr, %union.anon.3 }
%union.anon.3 = type { %struct.anon.5 }
%struct.anon.5 = type { i64 }
%struct.erl_off_heap_header = type { i64, i64, ptr }
%struct.ErtsORefThing = type { i64, i32, [3 x i32] }
%struct.ErtsMRefThing = type { i64, ptr, ptr }
%struct.magic_binary = type { %struct.binary_internals, i64, ptr, [3 x i32], i32, %union.anon.6 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { [1 x i8] }
%struct.ErtsEQueue = type { ptr, ptr, ptr, i32, ptr, i32 }
%struct.ErtsWStack_ = type { ptr, ptr, ptr, ptr, i32 }
%struct.erl_node_ = type { %struct.hash_bucket, %struct.ethr_native_atomic64_t, i64, i32, ptr }
%struct.hash_bucket = type { ptr, i64 }
%struct.erts_shcopy_t = type { [16 x i64], ptr, ptr, i32, [16 x i64], ptr, i32, [16 x i64], ptr, i32, i64, ptr, i64, i32 }
%struct.erl_heap_fragment = type { ptr, %struct.erl_off_heap, i64, i64, [1 x i64] }

@.str = private unnamed_addr constant [34 x i8] c"size_object: bad hashmap type %d\0A\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [41 x i8] c"size_object: matchstate term not allowed\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [30 x i8] c"size_object: bad tag for %#x\0A\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [34 x i8] c"size_shared: bad hashmap type %d\0A\00", align 1, !dbg !17
@.str.4 = private unnamed_addr constant [41 x i8] c"size_shared: matchstate term not allowed\00", align 1, !dbg !19
@.str.5 = private unnamed_addr constant [30 x i8] c"size_shared: bad tag for %#x\0A\00", align 1, !dbg !21
@.str.6 = private unnamed_addr constant [52 x i8] c"%s, line %d: Internal error in copy_struct: 0x%08x\0A\00", align 1, !dbg !23
@.str.7 = private unnamed_addr constant [12 x i8] c"beam/copy.c\00", align 1, !dbg !28
@ERTS_GLOBAL_LIT_EMPTY_TUPLE = external global i64, align 8
@.str.8 = private unnamed_addr constant [34 x i8] c"copy_struct: bad hashmap type %d\0A\00", align 1, !dbg !33
@.str.9 = private unnamed_addr constant [41 x i8] c"copy_struct: matchstate term not allowed\00", align 1, !dbg !35
@.str.10 = private unnamed_addr constant [53 x i8] c"Internal error in copy_struct(): htop, hbot overrun\0A\00", align 1, !dbg !37
@.str.11 = private unnamed_addr constant [44 x i8] c"copy_shared_calculate: bad hashmap type %d\0A\00", align 1, !dbg !42
@.str.12 = private unnamed_addr constant [39 x i8] c"[pid=%T] size_shared: bad tag for %#x\0A\00", align 1, !dbg !47
@.str.13 = private unnamed_addr constant [42 x i8] c"copy_shared_perform: bad hashmap type %d\0A\00", align 1, !dbg !52
@erts_frame_layout = external global i32, section "ERTS_LOW_WRITE", align 4
@erts_literals_start = external global ptr, align 8
@erts_literals_size = external global i64, align 8
@erts_allctrs = external global [13 x %struct.ErtsAllocatorFunctions_t], section "ERTS_LOW_WRITE", align 16

; Function Attrs: nounwind uwtable
define dso_local i64 @copy_object_x(i64 noundef %obj, ptr noundef %to, i64 noundef %extra) #0 !dbg !1678 {
entry:
  %retval = alloca i64, align 8
  %obj.addr = alloca i64, align 8
  %to.addr = alloca ptr, align 8
  %extra.addr = alloca i64, align 8
  %size = alloca i64, align 8
  %hp = alloca ptr, align 8
  %res = alloca i64, align 8
  store i64 %obj, ptr %obj.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !1682, metadata !DIExpression()), !dbg !1690
  store ptr %to, ptr %to.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !1683, metadata !DIExpression()), !dbg !1691
  store i64 %extra, ptr %extra.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !1684, metadata !DIExpression()), !dbg !1692
  %0 = load i64, ptr %obj.addr, align 8, !dbg !1693
  %and = and i64 %0, 3, !dbg !1693
  %cmp = icmp eq i64 %and, 3, !dbg !1693
  br i1 %cmp, label %if.end, label %if.then, !dbg !1694

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #8, !dbg !1695
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !1685, metadata !DIExpression()), !dbg !1696
  %1 = load i64, ptr %obj.addr, align 8, !dbg !1697
  %call = call i64 @size_object_x(i64 noundef %1, ptr noundef null), !dbg !1697
  store i64 %call, ptr %size, align 8, !dbg !1696
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp) #8, !dbg !1698
  tail call void @llvm.dbg.declare(metadata ptr %hp, metadata !1688, metadata !DIExpression()), !dbg !1699
  %2 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %heap = getelementptr inbounds %struct.process, ptr %2, i32 0, i32 7, !dbg !1700
  %3 = load ptr, ptr %heap, align 8, !dbg !1700
  %tobool = icmp ne ptr %3, null, !dbg !1700
  br i1 %tobool, label %lor.lhs.false, label %cond.true12, !dbg !1700

lor.lhs.false:                                    ; preds = %if.then
  %4 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %htop = getelementptr inbounds %struct.process, ptr %4, i32 0, i32 1, !dbg !1700
  %5 = load ptr, ptr %htop, align 8, !dbg !1700
  %6 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %stop = getelementptr inbounds %struct.process, ptr %6, i32 0, i32 2, !dbg !1700
  %7 = load ptr, ptr %stop, align 8, !dbg !1700
  %call1 = call i32 @erts_cp_size(), !dbg !1700
  %mul = mul nsw i32 %call1, 3, !dbg !1700
  %idx.ext = sext i32 %mul to i64, !dbg !1700
  %idx.neg = sub i64 0, %idx.ext, !dbg !1700
  %add.ptr = getelementptr inbounds i64, ptr %7, i64 %idx.neg, !dbg !1700
  %cmp2 = icmp ugt ptr %5, %add.ptr, !dbg !1700
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !1700

cond.true:                                        ; preds = %lor.lhs.false
  %8 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %htop3 = getelementptr inbounds %struct.process, ptr %8, i32 0, i32 1, !dbg !1700
  %9 = load ptr, ptr %htop3, align 8, !dbg !1700
  br label %cond.end, !dbg !1700

cond.false:                                       ; preds = %lor.lhs.false
  %10 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %stop4 = getelementptr inbounds %struct.process, ptr %10, i32 0, i32 2, !dbg !1700
  %11 = load ptr, ptr %stop4, align 8, !dbg !1700
  %call5 = call i32 @erts_cp_size(), !dbg !1700
  %mul6 = mul nsw i32 %call5, 3, !dbg !1700
  %idx.ext7 = sext i32 %mul6 to i64, !dbg !1700
  %idx.neg8 = sub i64 0, %idx.ext7, !dbg !1700
  %add.ptr9 = getelementptr inbounds i64, ptr %11, i64 %idx.neg8, !dbg !1700
  br label %cond.end, !dbg !1700

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %9, %cond.true ], [ %add.ptr9, %cond.false ], !dbg !1700
  %12 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %htop10 = getelementptr inbounds %struct.process, ptr %12, i32 0, i32 1, !dbg !1700
  %13 = load ptr, ptr %htop10, align 8, !dbg !1700
  %sub.ptr.lhs.cast = ptrtoint ptr %cond to i64, !dbg !1700
  %sub.ptr.rhs.cast = ptrtoint ptr %13 to i64, !dbg !1700
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1700
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !1700
  %14 = load i64, ptr %size, align 8, !dbg !1700
  %cmp11 = icmp ult i64 %sub.ptr.div, %14, !dbg !1700
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !1700

cond.true12:                                      ; preds = %cond.end, %if.then
  %15 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %16 = load i64, ptr %size, align 8, !dbg !1700
  %17 = load i64, ptr %extra.addr, align 8, !dbg !1700
  %call13 = call ptr @erts_heap_alloc(ptr noundef %15, i64 noundef %16, i64 noundef %17), !dbg !1700
  br label %cond.end21, !dbg !1700

cond.false14:                                     ; preds = %cond.end
  %18 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %htop15 = getelementptr inbounds %struct.process, ptr %18, i32 0, i32 1, !dbg !1700
  %19 = load ptr, ptr %htop15, align 8, !dbg !1700
  %20 = load i64, ptr %size, align 8, !dbg !1700
  %add.ptr16 = getelementptr inbounds i64, ptr %19, i64 %20, !dbg !1700
  %21 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %htop17 = getelementptr inbounds %struct.process, ptr %21, i32 0, i32 1, !dbg !1700
  store ptr %add.ptr16, ptr %htop17, align 8, !dbg !1700
  %22 = load ptr, ptr %to.addr, align 8, !dbg !1700
  %htop18 = getelementptr inbounds %struct.process, ptr %22, i32 0, i32 1, !dbg !1700
  %23 = load ptr, ptr %htop18, align 8, !dbg !1700
  %24 = load i64, ptr %size, align 8, !dbg !1700
  %idx.neg19 = sub i64 0, %24, !dbg !1700
  %add.ptr20 = getelementptr inbounds i64, ptr %23, i64 %idx.neg19, !dbg !1700
  br label %cond.end21, !dbg !1700

cond.end21:                                       ; preds = %cond.false14, %cond.true12
  %cond22 = phi ptr [ %call13, %cond.true12 ], [ %add.ptr20, %cond.false14 ], !dbg !1700
  store ptr %cond22, ptr %hp, align 8, !dbg !1699
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #8, !dbg !1701
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !1689, metadata !DIExpression()), !dbg !1702
  %25 = load i64, ptr %obj.addr, align 8, !dbg !1703
  %26 = load i64, ptr %size, align 8, !dbg !1703
  %27 = load ptr, ptr %to.addr, align 8, !dbg !1703
  %off_heap = getelementptr inbounds %struct.process, ptr %27, i32 0, i32 44, !dbg !1703
  %call23 = call i64 @copy_struct_x(i64 noundef %25, i64 noundef %26, ptr noundef %hp, ptr noundef %off_heap, ptr noundef null, ptr noundef null), !dbg !1703
  store i64 %call23, ptr %res, align 8, !dbg !1704
  %28 = load i64, ptr %res, align 8, !dbg !1705
  store i64 %28, ptr %retval, align 8, !dbg !1706
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #8, !dbg !1707
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp) #8, !dbg !1707
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #8, !dbg !1707
  br label %return

if.end:                                           ; preds = %entry
  %29 = load i64, ptr %obj.addr, align 8, !dbg !1708
  store i64 %29, ptr %retval, align 8, !dbg !1709
  br label %return, !dbg !1709

return:                                           ; preds = %if.end, %cond.end21
  %30 = load i64, ptr %retval, align 8, !dbg !1710
  ret i64 %30, !dbg !1710
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define dso_local i64 @size_object_x(i64 noundef %obj, ptr noundef %litopt) #0 !dbg !1711 {
entry:
  %retval = alloca i64, align 8
  %obj.addr = alloca i64, align 8
  %litopt.addr = alloca ptr, align 8
  %sum = alloca i64, align 8
  %ptr = alloca ptr, align 8
  %arity = alloca i32, align 4
  %lit_purge_ptr = alloca ptr, align 8
  %lit_purge_sz = alloca i64, align 8
  %s_default_estack = alloca [16 x i64], align 16
  %s = alloca %struct.ErtsEStack_, align 8
  %hdr = alloca i64, align 8
  %bptr = alloca ptr, align 8
  %funp = alloca ptr, align 8
  %eterms = alloca i32, align 4
  %sz = alloca i32, align 4
  %n = alloca i64, align 8
  %mp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %head = alloca ptr, align 8
  %sz183 = alloca i64, align 8
  %real_bin = alloca i64, align 8
  %offset = alloca i64, align 8
  %bitsize = alloca i64, align 8
  %bitoffs = alloca i64, align 8
  %extra_bytes = alloca i64, align 8
  %hdr252 = alloca i64, align 8
  %_sb = alloca ptr, align 8
  store i64 %obj, ptr %obj.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !1721, metadata !DIExpression()), !dbg !1768
  store ptr %litopt, ptr %litopt.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %litopt.addr, metadata !1722, metadata !DIExpression()), !dbg !1769
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum) #8, !dbg !1770
  tail call void @llvm.dbg.declare(metadata ptr %sum, metadata !1723, metadata !DIExpression()), !dbg !1771
  store i64 0, ptr %sum, align 8, !dbg !1771
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #8, !dbg !1772
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !1724, metadata !DIExpression()), !dbg !1773
  call void @llvm.lifetime.start.p0(i64 4, ptr %arity) #8, !dbg !1774
  tail call void @llvm.dbg.declare(metadata ptr %arity, metadata !1725, metadata !DIExpression()), !dbg !1775
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !1776
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_ptr, metadata !1726, metadata !DIExpression()), !dbg !1777
  %0 = load ptr, ptr %litopt.addr, align 8, !dbg !1778
  %tobool = icmp ne ptr %0, null, !dbg !1778
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !1778

cond.true:                                        ; preds = %entry
  %1 = load ptr, ptr %litopt.addr, align 8, !dbg !1779
  %lit_purge_ptr1 = getelementptr inbounds %struct.erts_literal_area_t, ptr %1, i32 0, i32 0, !dbg !1780
  %2 = load ptr, ptr %lit_purge_ptr1, align 8, !dbg !1780
  br label %cond.end, !dbg !1778

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !1778

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %2, %cond.true ], [ null, %cond.false ], !dbg !1778
  store ptr %cond, ptr %lit_purge_ptr, align 8, !dbg !1777
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !1781
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_sz, metadata !1727, metadata !DIExpression()), !dbg !1782
  %3 = load ptr, ptr %litopt.addr, align 8, !dbg !1783
  %tobool2 = icmp ne ptr %3, null, !dbg !1783
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !1783

cond.true3:                                       ; preds = %cond.end
  %4 = load ptr, ptr %litopt.addr, align 8, !dbg !1784
  %lit_purge_sz4 = getelementptr inbounds %struct.erts_literal_area_t, ptr %4, i32 0, i32 1, !dbg !1785
  %5 = load i64, ptr %lit_purge_sz4, align 8, !dbg !1785
  br label %cond.end6, !dbg !1783

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !1783

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi i64 [ %5, %cond.true3 ], [ 0, %cond.false5 ], !dbg !1783
  store i64 %cond7, ptr %lit_purge_sz, align 8, !dbg !1782
  call void @llvm.lifetime.start.p0(i64 128, ptr %s_default_estack) #8, !dbg !1786
  tail call void @llvm.dbg.declare(metadata ptr %s_default_estack, metadata !1728, metadata !DIExpression()), !dbg !1786
  call void @llvm.lifetime.start.p0(i64 40, ptr %s) #8, !dbg !1786
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !1730, metadata !DIExpression()), !dbg !1786
  %start = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 0, !dbg !1786
  %arraydecay = getelementptr inbounds [16 x i64], ptr %s_default_estack, i64 0, i64 0, !dbg !1786
  store ptr %arraydecay, ptr %start, align 8, !dbg !1786
  %sp = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1786
  %arraydecay8 = getelementptr inbounds [16 x i64], ptr %s_default_estack, i64 0, i64 0, !dbg !1786
  store ptr %arraydecay8, ptr %sp, align 8, !dbg !1786
  %end = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 2, !dbg !1786
  %arraydecay9 = getelementptr inbounds [16 x i64], ptr %s_default_estack, i64 0, i64 0, !dbg !1786
  %add.ptr = getelementptr inbounds i64, ptr %arraydecay9, i64 16, !dbg !1786
  store ptr %add.ptr, ptr %end, align 8, !dbg !1786
  %edefault = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 3, !dbg !1786
  %arraydecay10 = getelementptr inbounds [16 x i64], ptr %s_default_estack, i64 0, i64 0, !dbg !1786
  store ptr %arraydecay10, ptr %edefault, align 8, !dbg !1786
  %alloc_type = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 4, !dbg !1786
  store i32 1506, ptr %alloc_type, align 8, !dbg !1786
  br label %for.cond, !dbg !1787

for.cond:                                         ; preds = %sw.epilog339, %cond.end6
  %6 = load i64, ptr %obj.addr, align 8, !dbg !1788
  %and = and i64 %6, 3, !dbg !1788
  switch i64 %and, label %sw.default338 [
    i64 1, label %sw.bb
    i64 2, label %sw.bb33
    i64 3, label %sw.bb318
  ], !dbg !1789

sw.bb:                                            ; preds = %for.cond
  %7 = load i64, ptr %obj.addr, align 8, !dbg !1790
  %sub = sub i64 %7, 1, !dbg !1790
  %8 = inttoptr i64 %sub to ptr, !dbg !1790
  store ptr %8, ptr %ptr, align 8, !dbg !1791
  %9 = load ptr, ptr %litopt.addr, align 8, !dbg !1792
  %tobool11 = icmp ne ptr %9, null, !dbg !1792
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !1794

land.lhs.true:                                    ; preds = %sw.bb
  %10 = load i64, ptr %obj.addr, align 8, !dbg !1795
  %11 = load ptr, ptr %ptr, align 8, !dbg !1796
  %call = call i32 @erts_is_literal(i64 noundef %10, ptr noundef %11), !dbg !1797
  %tobool12 = icmp ne i32 %call, 0, !dbg !1797
  br i1 %tobool12, label %land.lhs.true13, label %if.end, !dbg !1798

land.lhs.true13:                                  ; preds = %land.lhs.true
  %12 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !1799
  %tobool14 = icmp ne ptr %12, null, !dbg !1799
  br i1 %tobool14, label %land.lhs.true15, label %if.then, !dbg !1799

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %13 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !1799
  %14 = load ptr, ptr %ptr, align 8, !dbg !1799
  %cmp = icmp ule ptr %13, %14, !dbg !1799
  br i1 %cmp, label %land.lhs.true16, label %if.then, !dbg !1799

land.lhs.true16:                                  ; preds = %land.lhs.true15
  %15 = load ptr, ptr %ptr, align 8, !dbg !1799
  %16 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !1799
  %17 = load i64, ptr %lit_purge_sz, align 8, !dbg !1799
  %add.ptr17 = getelementptr inbounds i64, ptr %16, i64 %17, !dbg !1799
  %cmp18 = icmp ult ptr %15, %add.ptr17, !dbg !1799
  br i1 %cmp18, label %if.end, label %if.then, !dbg !1800

if.then:                                          ; preds = %land.lhs.true16, %land.lhs.true15, %land.lhs.true13
  br label %pop_next, !dbg !1801

if.end:                                           ; preds = %land.lhs.true16, %land.lhs.true, %sw.bb
  %18 = load i64, ptr %sum, align 8, !dbg !1803
  %add = add i64 %18, 2, !dbg !1803
  store i64 %add, ptr %sum, align 8, !dbg !1803
  %19 = load ptr, ptr %ptr, align 8, !dbg !1804
  %incdec.ptr = getelementptr inbounds i64, ptr %19, i32 1, !dbg !1804
  store ptr %incdec.ptr, ptr %ptr, align 8, !dbg !1804
  %20 = load i64, ptr %19, align 8, !dbg !1805
  store i64 %20, ptr %obj.addr, align 8, !dbg !1806
  %21 = load i64, ptr %obj.addr, align 8, !dbg !1807
  %and19 = and i64 %21, 3, !dbg !1807
  %cmp20 = icmp eq i64 %and19, 3, !dbg !1807
  br i1 %cmp20, label %if.end32, label %if.then21, !dbg !1809

if.then21:                                        ; preds = %if.end
  br label %do.body, !dbg !1810

do.body:                                          ; preds = %if.then21
  br label %do.body22, !dbg !1812

do.body22:                                        ; preds = %do.body
  %end23 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 2, !dbg !1814
  %22 = load ptr, ptr %end23, align 8, !dbg !1814
  %sp24 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1814
  %23 = load ptr, ptr %sp24, align 8, !dbg !1814
  %sub.ptr.lhs.cast = ptrtoint ptr %22 to i64, !dbg !1814
  %sub.ptr.rhs.cast = ptrtoint ptr %23 to i64, !dbg !1814
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1814
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !1814
  %cmp25 = icmp slt i64 %sub.ptr.div, 1, !dbg !1814
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !1817

if.then26:                                        ; preds = %do.body22
  call void @erl_grow_estack(ptr noundef %s, i64 noundef 1), !dbg !1818
  br label %if.end27, !dbg !1818

if.end27:                                         ; preds = %if.then26, %do.body22
  br label %do.cond, !dbg !1817

do.cond:                                          ; preds = %if.end27
  br label %do.end, !dbg !1817

do.end:                                           ; preds = %do.cond
  %24 = load i64, ptr %obj.addr, align 8, !dbg !1812
  %sp28 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1812
  %25 = load ptr, ptr %sp28, align 8, !dbg !1812
  %incdec.ptr29 = getelementptr inbounds i64, ptr %25, i32 1, !dbg !1812
  store ptr %incdec.ptr29, ptr %sp28, align 8, !dbg !1812
  store i64 %24, ptr %25, align 8, !dbg !1812
  br label %do.cond30, !dbg !1812

do.cond30:                                        ; preds = %do.end
  br label %do.end31, !dbg !1812

do.end31:                                         ; preds = %do.cond30
  br label %if.end32, !dbg !1820

if.end32:                                         ; preds = %do.end31, %if.end
  %26 = load ptr, ptr %ptr, align 8, !dbg !1821
  %27 = load i64, ptr %26, align 8, !dbg !1822
  store i64 %27, ptr %obj.addr, align 8, !dbg !1823
  br label %sw.epilog339, !dbg !1824

sw.bb33:                                          ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr) #8, !dbg !1825
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !1739, metadata !DIExpression()), !dbg !1826
  %28 = load i64, ptr %obj.addr, align 8, !dbg !1827
  %sub34 = sub i64 %28, 2, !dbg !1827
  %29 = inttoptr i64 %sub34 to ptr, !dbg !1827
  store ptr %29, ptr %ptr, align 8, !dbg !1828
  %30 = load ptr, ptr %litopt.addr, align 8, !dbg !1829
  %tobool35 = icmp ne ptr %30, null, !dbg !1829
  br i1 %tobool35, label %land.lhs.true36, label %if.end47, !dbg !1831

land.lhs.true36:                                  ; preds = %sw.bb33
  %31 = load i64, ptr %obj.addr, align 8, !dbg !1832
  %32 = load ptr, ptr %ptr, align 8, !dbg !1833
  %call37 = call i32 @erts_is_literal(i64 noundef %31, ptr noundef %32), !dbg !1834
  %tobool38 = icmp ne i32 %call37, 0, !dbg !1834
  br i1 %tobool38, label %land.lhs.true39, label %if.end47, !dbg !1835

land.lhs.true39:                                  ; preds = %land.lhs.true36
  %33 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !1836
  %tobool40 = icmp ne ptr %33, null, !dbg !1836
  br i1 %tobool40, label %land.lhs.true41, label %if.then46, !dbg !1836

land.lhs.true41:                                  ; preds = %land.lhs.true39
  %34 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !1836
  %35 = load ptr, ptr %ptr, align 8, !dbg !1836
  %cmp42 = icmp ule ptr %34, %35, !dbg !1836
  br i1 %cmp42, label %land.lhs.true43, label %if.then46, !dbg !1836

land.lhs.true43:                                  ; preds = %land.lhs.true41
  %36 = load ptr, ptr %ptr, align 8, !dbg !1836
  %37 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !1836
  %38 = load i64, ptr %lit_purge_sz, align 8, !dbg !1836
  %add.ptr44 = getelementptr inbounds i64, ptr %37, i64 %38, !dbg !1836
  %cmp45 = icmp ult ptr %36, %add.ptr44, !dbg !1836
  br i1 %cmp45, label %if.end47, label %if.then46, !dbg !1837

if.then46:                                        ; preds = %land.lhs.true43, %land.lhs.true41, %land.lhs.true39
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup315, !dbg !1838

if.end47:                                         ; preds = %land.lhs.true43, %land.lhs.true36, %sw.bb33
  %39 = load ptr, ptr %ptr, align 8, !dbg !1840
  %40 = load i64, ptr %39, align 8, !dbg !1841
  store i64 %40, ptr %hdr, align 8, !dbg !1842
  %41 = load i64, ptr %hdr, align 8, !dbg !1843
  %and48 = and i64 %41, 63, !dbg !1844
  switch i64 %and48, label %sw.default301 [
    i64 0, label %sw.bb49
    i64 20, label %sw.bb93
    i64 60, label %sw.bb144
    i64 40, label %sw.bb251
    i64 4, label %sw.bb300
  ], !dbg !1845

sw.bb49:                                          ; preds = %if.end47
  %42 = load i64, ptr %hdr, align 8, !dbg !1846
  %and50 = and i64 %42, 63, !dbg !1846
  %cmp51 = icmp eq i64 %and50, 60, !dbg !1846
  br i1 %cmp51, label %cond.true52, label %cond.false54, !dbg !1846

cond.true52:                                      ; preds = %sw.bb49
  %43 = load i64, ptr %hdr, align 8, !dbg !1846
  %shr = lshr i64 %43, 8, !dbg !1846
  %and53 = and i64 %shr, 255, !dbg !1846
  br label %cond.end56, !dbg !1846

cond.false54:                                     ; preds = %sw.bb49
  %44 = load i64, ptr %hdr, align 8, !dbg !1846
  %shr55 = lshr i64 %44, 6, !dbg !1846
  br label %cond.end56, !dbg !1846

cond.end56:                                       ; preds = %cond.false54, %cond.true52
  %cond57 = phi i64 [ %and53, %cond.true52 ], [ %shr55, %cond.false54 ], !dbg !1846
  %conv = trunc i64 %cond57 to i32, !dbg !1846
  store i32 %conv, ptr %arity, align 4, !dbg !1847
  %45 = load i32, ptr %arity, align 4, !dbg !1848
  %cmp58 = icmp eq i32 %45, 0, !dbg !1850
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !1851

if.then60:                                        ; preds = %cond.end56
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup315, !dbg !1852

if.end61:                                         ; preds = %cond.end56
  %46 = load i64, ptr %obj.addr, align 8, !dbg !1854
  %sub62 = sub i64 %46, 2, !dbg !1854
  %47 = inttoptr i64 %sub62 to ptr, !dbg !1854
  store ptr %47, ptr %ptr, align 8, !dbg !1855
  %48 = load i32, ptr %arity, align 4, !dbg !1856
  %add63 = add nsw i32 %48, 1, !dbg !1857
  %conv64 = sext i32 %add63 to i64, !dbg !1856
  %49 = load i64, ptr %sum, align 8, !dbg !1858
  %add65 = add i64 %49, %conv64, !dbg !1858
  store i64 %add65, ptr %sum, align 8, !dbg !1858
  br label %while.cond, !dbg !1859

while.cond:                                       ; preds = %if.end91, %if.end61
  %50 = load i32, ptr %arity, align 4, !dbg !1860
  %dec = add nsw i32 %50, -1, !dbg !1860
  store i32 %dec, ptr %arity, align 4, !dbg !1860
  %cmp66 = icmp sgt i32 %50, 1, !dbg !1861
  br i1 %cmp66, label %while.body, label %while.end, !dbg !1859

while.body:                                       ; preds = %while.cond
  %51 = load ptr, ptr %ptr, align 8, !dbg !1862
  %incdec.ptr68 = getelementptr inbounds i64, ptr %51, i32 1, !dbg !1862
  store ptr %incdec.ptr68, ptr %ptr, align 8, !dbg !1862
  %52 = load i64, ptr %incdec.ptr68, align 8, !dbg !1864
  store i64 %52, ptr %obj.addr, align 8, !dbg !1865
  %53 = load i64, ptr %obj.addr, align 8, !dbg !1866
  %and69 = and i64 %53, 3, !dbg !1866
  %cmp70 = icmp eq i64 %and69, 3, !dbg !1866
  br i1 %cmp70, label %if.end91, label %if.then72, !dbg !1868

if.then72:                                        ; preds = %while.body
  br label %do.body73, !dbg !1869

do.body73:                                        ; preds = %if.then72
  br label %do.body74, !dbg !1871

do.body74:                                        ; preds = %do.body73
  %end75 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 2, !dbg !1873
  %54 = load ptr, ptr %end75, align 8, !dbg !1873
  %sp76 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1873
  %55 = load ptr, ptr %sp76, align 8, !dbg !1873
  %sub.ptr.lhs.cast77 = ptrtoint ptr %54 to i64, !dbg !1873
  %sub.ptr.rhs.cast78 = ptrtoint ptr %55 to i64, !dbg !1873
  %sub.ptr.sub79 = sub i64 %sub.ptr.lhs.cast77, %sub.ptr.rhs.cast78, !dbg !1873
  %sub.ptr.div80 = sdiv exact i64 %sub.ptr.sub79, 8, !dbg !1873
  %cmp81 = icmp slt i64 %sub.ptr.div80, 1, !dbg !1873
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !1876

if.then83:                                        ; preds = %do.body74
  call void @erl_grow_estack(ptr noundef %s, i64 noundef 1), !dbg !1877
  br label %if.end84, !dbg !1877

if.end84:                                         ; preds = %if.then83, %do.body74
  br label %do.cond85, !dbg !1876

do.cond85:                                        ; preds = %if.end84
  br label %do.end86, !dbg !1876

do.end86:                                         ; preds = %do.cond85
  %56 = load i64, ptr %obj.addr, align 8, !dbg !1871
  %sp87 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1871
  %57 = load ptr, ptr %sp87, align 8, !dbg !1871
  %incdec.ptr88 = getelementptr inbounds i64, ptr %57, i32 1, !dbg !1871
  store ptr %incdec.ptr88, ptr %sp87, align 8, !dbg !1871
  store i64 %56, ptr %57, align 8, !dbg !1871
  br label %do.cond89, !dbg !1871

do.cond89:                                        ; preds = %do.end86
  br label %do.end90, !dbg !1871

do.end90:                                         ; preds = %do.cond89
  br label %if.end91, !dbg !1879

if.end91:                                         ; preds = %do.end90, %while.body
  br label %while.cond, !dbg !1859, !llvm.loop !1880

while.end:                                        ; preds = %while.cond
  %58 = load ptr, ptr %ptr, align 8, !dbg !1883
  %incdec.ptr92 = getelementptr inbounds i64, ptr %58, i32 1, !dbg !1883
  store ptr %incdec.ptr92, ptr %ptr, align 8, !dbg !1883
  %59 = load i64, ptr %incdec.ptr92, align 8, !dbg !1884
  store i64 %59, ptr %obj.addr, align 8, !dbg !1885
  br label %sw.epilog314, !dbg !1886

sw.bb93:                                          ; preds = %if.end47
  call void @llvm.lifetime.start.p0(i64 8, ptr %bptr) #8, !dbg !1887
  tail call void @llvm.dbg.declare(metadata ptr %bptr, metadata !1745, metadata !DIExpression()), !dbg !1888
  %60 = load i64, ptr %obj.addr, align 8, !dbg !1889
  %sub94 = sub i64 %60, 2, !dbg !1889
  %61 = inttoptr i64 %sub94 to ptr, !dbg !1889
  store ptr %61, ptr %bptr, align 8, !dbg !1888
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp) #8, !dbg !1890
  tail call void @llvm.dbg.declare(metadata ptr %funp, metadata !1748, metadata !DIExpression()), !dbg !1891
  %62 = load ptr, ptr %bptr, align 8, !dbg !1892
  store ptr %62, ptr %funp, align 8, !dbg !1891
  call void @llvm.lifetime.start.p0(i64 4, ptr %eterms) #8, !dbg !1893
  tail call void @llvm.dbg.declare(metadata ptr %eterms, metadata !1749, metadata !DIExpression()), !dbg !1894
  %63 = load ptr, ptr %funp, align 8, !dbg !1895
  %num_free = getelementptr inbounds %struct.erl_fun_thing, ptr %63, i32 0, i32 4, !dbg !1896
  %64 = load i8, ptr %num_free, align 1, !dbg !1896
  %conv95 = zext i8 %64 to i32, !dbg !1895
  %add96 = add nsw i32 1, %conv95, !dbg !1897
  store i32 %add96, ptr %eterms, align 4, !dbg !1894
  call void @llvm.lifetime.start.p0(i64 4, ptr %sz) #8, !dbg !1898
  tail call void @llvm.dbg.declare(metadata ptr %sz, metadata !1750, metadata !DIExpression()), !dbg !1899
  %65 = load i64, ptr %hdr, align 8, !dbg !1900
  %and97 = and i64 %65, 63, !dbg !1900
  %cmp98 = icmp eq i64 %and97, 60, !dbg !1900
  br i1 %cmp98, label %cond.true100, label %cond.false103, !dbg !1900

cond.true100:                                     ; preds = %sw.bb93
  %66 = load i64, ptr %hdr, align 8, !dbg !1900
  %shr101 = lshr i64 %66, 8, !dbg !1900
  %and102 = and i64 %shr101, 255, !dbg !1900
  br label %cond.end105, !dbg !1900

cond.false103:                                    ; preds = %sw.bb93
  %67 = load i64, ptr %hdr, align 8, !dbg !1900
  %shr104 = lshr i64 %67, 6, !dbg !1900
  br label %cond.end105, !dbg !1900

cond.end105:                                      ; preds = %cond.false103, %cond.true100
  %cond106 = phi i64 [ %and102, %cond.true100 ], [ %shr104, %cond.false103 ], !dbg !1900
  %conv107 = trunc i64 %cond106 to i32, !dbg !1900
  store i32 %conv107, ptr %sz, align 4, !dbg !1899
  %68 = load i32, ptr %sz, align 4, !dbg !1901
  %add108 = add i32 1, %68, !dbg !1902
  %69 = load i32, ptr %eterms, align 4, !dbg !1903
  %add109 = add i32 %add108, %69, !dbg !1904
  %conv110 = zext i32 %add109 to i64, !dbg !1905
  %70 = load i64, ptr %sum, align 8, !dbg !1906
  %add111 = add i64 %70, %conv110, !dbg !1906
  store i64 %add111, ptr %sum, align 8, !dbg !1906
  %71 = load i32, ptr %sz, align 4, !dbg !1907
  %add112 = add i32 1, %71, !dbg !1908
  %72 = load ptr, ptr %bptr, align 8, !dbg !1909
  %idx.ext = zext i32 %add112 to i64, !dbg !1909
  %add.ptr113 = getelementptr inbounds i64, ptr %72, i64 %idx.ext, !dbg !1909
  store ptr %add.ptr113, ptr %bptr, align 8, !dbg !1909
  br label %while.cond114, !dbg !1910

while.cond114:                                    ; preds = %if.end142, %cond.end105
  %73 = load i32, ptr %eterms, align 4, !dbg !1911
  %dec115 = add i32 %73, -1, !dbg !1911
  store i32 %dec115, ptr %eterms, align 4, !dbg !1911
  %cmp116 = icmp ugt i32 %73, 1, !dbg !1912
  br i1 %cmp116, label %while.body118, label %while.end143, !dbg !1910

while.body118:                                    ; preds = %while.cond114
  %74 = load ptr, ptr %bptr, align 8, !dbg !1913
  %incdec.ptr119 = getelementptr inbounds i64, ptr %74, i32 1, !dbg !1913
  store ptr %incdec.ptr119, ptr %bptr, align 8, !dbg !1913
  %75 = load i64, ptr %74, align 8, !dbg !1915
  store i64 %75, ptr %obj.addr, align 8, !dbg !1916
  %76 = load i64, ptr %obj.addr, align 8, !dbg !1917
  %and120 = and i64 %76, 3, !dbg !1917
  %cmp121 = icmp eq i64 %and120, 3, !dbg !1917
  br i1 %cmp121, label %if.end142, label %if.then123, !dbg !1919

if.then123:                                       ; preds = %while.body118
  br label %do.body124, !dbg !1920

do.body124:                                       ; preds = %if.then123
  br label %do.body125, !dbg !1922

do.body125:                                       ; preds = %do.body124
  %end126 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 2, !dbg !1924
  %77 = load ptr, ptr %end126, align 8, !dbg !1924
  %sp127 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1924
  %78 = load ptr, ptr %sp127, align 8, !dbg !1924
  %sub.ptr.lhs.cast128 = ptrtoint ptr %77 to i64, !dbg !1924
  %sub.ptr.rhs.cast129 = ptrtoint ptr %78 to i64, !dbg !1924
  %sub.ptr.sub130 = sub i64 %sub.ptr.lhs.cast128, %sub.ptr.rhs.cast129, !dbg !1924
  %sub.ptr.div131 = sdiv exact i64 %sub.ptr.sub130, 8, !dbg !1924
  %cmp132 = icmp slt i64 %sub.ptr.div131, 1, !dbg !1924
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !1927

if.then134:                                       ; preds = %do.body125
  call void @erl_grow_estack(ptr noundef %s, i64 noundef 1), !dbg !1928
  br label %if.end135, !dbg !1928

if.end135:                                        ; preds = %if.then134, %do.body125
  br label %do.cond136, !dbg !1927

do.cond136:                                       ; preds = %if.end135
  br label %do.end137, !dbg !1927

do.end137:                                        ; preds = %do.cond136
  %79 = load i64, ptr %obj.addr, align 8, !dbg !1922
  %sp138 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1922
  %80 = load ptr, ptr %sp138, align 8, !dbg !1922
  %incdec.ptr139 = getelementptr inbounds i64, ptr %80, i32 1, !dbg !1922
  store ptr %incdec.ptr139, ptr %sp138, align 8, !dbg !1922
  store i64 %79, ptr %80, align 8, !dbg !1922
  br label %do.cond140, !dbg !1922

do.cond140:                                       ; preds = %do.end137
  br label %do.end141, !dbg !1922

do.end141:                                        ; preds = %do.cond140
  br label %if.end142, !dbg !1930

if.end142:                                        ; preds = %do.end141, %while.body118
  br label %while.cond114, !dbg !1910, !llvm.loop !1931

while.end143:                                     ; preds = %while.cond114
  %81 = load ptr, ptr %bptr, align 8, !dbg !1933
  %82 = load i64, ptr %81, align 8, !dbg !1934
  store i64 %82, ptr %obj.addr, align 8, !dbg !1935
  call void @llvm.lifetime.end.p0(i64 4, ptr %sz) #8, !dbg !1936
  call void @llvm.lifetime.end.p0(i64 4, ptr %eterms) #8, !dbg !1936
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp) #8, !dbg !1936
  call void @llvm.lifetime.end.p0(i64 8, ptr %bptr) #8, !dbg !1936
  br label %sw.epilog314

sw.bb144:                                         ; preds = %if.end47
  %83 = load i64, ptr %hdr, align 8, !dbg !1937
  %shr145 = lshr i64 %83, 6, !dbg !1937
  %and146 = and i64 %shr145, 3, !dbg !1937
  switch i64 %and146, label %sw.default [
    i64 0, label %sw.bb147
    i64 3, label %sw.bb182
    i64 2, label %sw.bb182
    i64 1, label %sw.bb182
  ], !dbg !1938

sw.bb147:                                         ; preds = %sw.bb144
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #8, !dbg !1939
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !1751, metadata !DIExpression()), !dbg !1940
  call void @llvm.lifetime.start.p0(i64 8, ptr %mp) #8, !dbg !1941
  tail call void @llvm.dbg.declare(metadata ptr %mp, metadata !1754, metadata !DIExpression()), !dbg !1942
  %84 = load i64, ptr %obj.addr, align 8, !dbg !1943
  %sub148 = sub i64 %84, 2, !dbg !1943
  %85 = inttoptr i64 %sub148 to ptr, !dbg !1943
  store ptr %85, ptr %mp, align 8, !dbg !1944
  %86 = load ptr, ptr %mp, align 8, !dbg !1945
  store ptr %86, ptr %ptr, align 8, !dbg !1946
  %87 = load ptr, ptr %mp, align 8, !dbg !1947
  %size = getelementptr inbounds %struct.flatmap_s, ptr %87, i32 0, i32 1, !dbg !1947
  %88 = load i64, ptr %size, align 8, !dbg !1947
  %add149 = add i64 %88, 1, !dbg !1948
  store i64 %add149, ptr %n, align 8, !dbg !1949
  %89 = load i64, ptr %n, align 8, !dbg !1950
  %add150 = add i64 %89, 2, !dbg !1951
  %90 = load i64, ptr %sum, align 8, !dbg !1952
  %add151 = add i64 %90, %add150, !dbg !1952
  store i64 %add151, ptr %sum, align 8, !dbg !1952
  %91 = load ptr, ptr %ptr, align 8, !dbg !1953
  %add.ptr152 = getelementptr inbounds i64, ptr %91, i64 2, !dbg !1953
  store ptr %add.ptr152, ptr %ptr, align 8, !dbg !1953
  br label %while.cond153, !dbg !1954

while.cond153:                                    ; preds = %if.end180, %sw.bb147
  %92 = load i64, ptr %n, align 8, !dbg !1955
  %dec154 = add i64 %92, -1, !dbg !1955
  store i64 %dec154, ptr %n, align 8, !dbg !1955
  %tobool155 = icmp ne i64 %92, 0, !dbg !1954
  br i1 %tobool155, label %while.body156, label %while.end181, !dbg !1954

while.body156:                                    ; preds = %while.cond153
  %93 = load ptr, ptr %ptr, align 8, !dbg !1956
  %incdec.ptr157 = getelementptr inbounds i64, ptr %93, i32 1, !dbg !1956
  store ptr %incdec.ptr157, ptr %ptr, align 8, !dbg !1956
  %94 = load i64, ptr %93, align 8, !dbg !1958
  store i64 %94, ptr %obj.addr, align 8, !dbg !1959
  %95 = load i64, ptr %obj.addr, align 8, !dbg !1960
  %and158 = and i64 %95, 3, !dbg !1960
  %cmp159 = icmp eq i64 %and158, 3, !dbg !1960
  br i1 %cmp159, label %if.end180, label %if.then161, !dbg !1962

if.then161:                                       ; preds = %while.body156
  br label %do.body162, !dbg !1963

do.body162:                                       ; preds = %if.then161
  br label %do.body163, !dbg !1965

do.body163:                                       ; preds = %do.body162
  %end164 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 2, !dbg !1967
  %96 = load ptr, ptr %end164, align 8, !dbg !1967
  %sp165 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1967
  %97 = load ptr, ptr %sp165, align 8, !dbg !1967
  %sub.ptr.lhs.cast166 = ptrtoint ptr %96 to i64, !dbg !1967
  %sub.ptr.rhs.cast167 = ptrtoint ptr %97 to i64, !dbg !1967
  %sub.ptr.sub168 = sub i64 %sub.ptr.lhs.cast166, %sub.ptr.rhs.cast167, !dbg !1967
  %sub.ptr.div169 = sdiv exact i64 %sub.ptr.sub168, 8, !dbg !1967
  %cmp170 = icmp slt i64 %sub.ptr.div169, 1, !dbg !1967
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !1970

if.then172:                                       ; preds = %do.body163
  call void @erl_grow_estack(ptr noundef %s, i64 noundef 1), !dbg !1971
  br label %if.end173, !dbg !1971

if.end173:                                        ; preds = %if.then172, %do.body163
  br label %do.cond174, !dbg !1970

do.cond174:                                       ; preds = %if.end173
  br label %do.end175, !dbg !1970

do.end175:                                        ; preds = %do.cond174
  %98 = load i64, ptr %obj.addr, align 8, !dbg !1965
  %sp176 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !1965
  %99 = load ptr, ptr %sp176, align 8, !dbg !1965
  %incdec.ptr177 = getelementptr inbounds i64, ptr %99, i32 1, !dbg !1965
  store ptr %incdec.ptr177, ptr %sp176, align 8, !dbg !1965
  store i64 %98, ptr %99, align 8, !dbg !1965
  br label %do.cond178, !dbg !1965

do.cond178:                                       ; preds = %do.end175
  br label %do.end179, !dbg !1965

do.end179:                                        ; preds = %do.cond178
  br label %if.end180, !dbg !1973

if.end180:                                        ; preds = %do.end179, %while.body156
  br label %while.cond153, !dbg !1954, !llvm.loop !1974

while.end181:                                     ; preds = %while.cond153
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %mp) #8, !dbg !1976
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #8, !dbg !1976
  br label %cleanup315

sw.bb182:                                         ; preds = %sw.bb144, %sw.bb144, %sw.bb144
  call void @llvm.lifetime.start.p0(i64 8, ptr %head) #8, !dbg !1977
  tail call void @llvm.dbg.declare(metadata ptr %head, metadata !1755, metadata !DIExpression()), !dbg !1978
  call void @llvm.lifetime.start.p0(i64 8, ptr %sz183) #8, !dbg !1979
  tail call void @llvm.dbg.declare(metadata ptr %sz183, metadata !1757, metadata !DIExpression()), !dbg !1980
  %100 = load i64, ptr %obj.addr, align 8, !dbg !1981
  %sub184 = sub i64 %100, 2, !dbg !1981
  %101 = inttoptr i64 %sub184 to ptr, !dbg !1981
  store ptr %101, ptr %head, align 8, !dbg !1982
  %102 = load i64, ptr %hdr, align 8, !dbg !1983
  %shr185 = lshr i64 %102, 16, !dbg !1983
  %and186 = and i64 %shr185, 65535, !dbg !1983
  %conv187 = trunc i64 %and186 to i32, !dbg !1983
  %103 = call i32 @llvm.ctpop.i32(i32 %conv187), !dbg !1983
  %conv188 = zext i32 %103 to i64, !dbg !1983
  store i64 %conv188, ptr %sz183, align 8, !dbg !1984
  %104 = load i64, ptr %sz183, align 8, !dbg !1985
  %add189 = add i64 1, %104, !dbg !1986
  %105 = load i64, ptr %hdr, align 8, !dbg !1987
  %and190 = and i64 %105, 63, !dbg !1987
  %cmp191 = icmp eq i64 %and190, 60, !dbg !1987
  br i1 %cmp191, label %cond.true193, label %cond.false196, !dbg !1987

cond.true193:                                     ; preds = %sw.bb182
  %106 = load i64, ptr %hdr, align 8, !dbg !1987
  %shr194 = lshr i64 %106, 8, !dbg !1987
  %and195 = and i64 %shr194, 255, !dbg !1987
  br label %cond.end198, !dbg !1987

cond.false196:                                    ; preds = %sw.bb182
  %107 = load i64, ptr %hdr, align 8, !dbg !1987
  %shr197 = lshr i64 %107, 6, !dbg !1987
  br label %cond.end198, !dbg !1987

cond.end198:                                      ; preds = %cond.false196, %cond.true193
  %cond199 = phi i64 [ %and195, %cond.true193 ], [ %shr197, %cond.false196 ], !dbg !1987
  %add200 = add i64 %add189, %cond199, !dbg !1988
  %108 = load i64, ptr %sum, align 8, !dbg !1989
  %add201 = add i64 %108, %add200, !dbg !1989
  store i64 %add201, ptr %sum, align 8, !dbg !1989
  %109 = load i64, ptr %hdr, align 8, !dbg !1990
  %and202 = and i64 %109, 63, !dbg !1990
  %cmp203 = icmp eq i64 %and202, 60, !dbg !1990
  br i1 %cmp203, label %cond.true205, label %cond.false208, !dbg !1990

cond.true205:                                     ; preds = %cond.end198
  %110 = load i64, ptr %hdr, align 8, !dbg !1990
  %shr206 = lshr i64 %110, 8, !dbg !1990
  %and207 = and i64 %shr206, 255, !dbg !1990
  br label %cond.end210, !dbg !1990

cond.false208:                                    ; preds = %cond.end198
  %111 = load i64, ptr %hdr, align 8, !dbg !1990
  %shr209 = lshr i64 %111, 6, !dbg !1990
  br label %cond.end210, !dbg !1990

cond.end210:                                      ; preds = %cond.false208, %cond.true205
  %cond211 = phi i64 [ %and207, %cond.true205 ], [ %shr209, %cond.false208 ], !dbg !1990
  %add212 = add i64 1, %cond211, !dbg !1991
  %112 = load ptr, ptr %head, align 8, !dbg !1992
  %add.ptr213 = getelementptr inbounds i64, ptr %112, i64 %add212, !dbg !1992
  store ptr %add.ptr213, ptr %head, align 8, !dbg !1992
  %113 = load i64, ptr %sz183, align 8, !dbg !1993
  %cmp214 = icmp eq i64 %113, 0, !dbg !1995
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !1996

if.then216:                                       ; preds = %cond.end210
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1997

if.end217:                                        ; preds = %cond.end210
  br label %while.cond218, !dbg !1999

while.cond218:                                    ; preds = %if.end245, %if.end217
  %114 = load i64, ptr %sz183, align 8, !dbg !2000
  %dec219 = add i64 %114, -1, !dbg !2000
  store i64 %dec219, ptr %sz183, align 8, !dbg !2000
  %cmp220 = icmp ugt i64 %114, 1, !dbg !2001
  br i1 %cmp220, label %while.body222, label %while.end246, !dbg !1999

while.body222:                                    ; preds = %while.cond218
  %115 = load ptr, ptr %head, align 8, !dbg !2002
  %116 = load i64, ptr %sz183, align 8, !dbg !2004
  %arrayidx = getelementptr inbounds i64, ptr %115, i64 %116, !dbg !2002
  %117 = load i64, ptr %arrayidx, align 8, !dbg !2002
  store i64 %117, ptr %obj.addr, align 8, !dbg !2005
  %118 = load i64, ptr %obj.addr, align 8, !dbg !2006
  %and223 = and i64 %118, 3, !dbg !2006
  %cmp224 = icmp eq i64 %and223, 3, !dbg !2006
  br i1 %cmp224, label %if.end245, label %if.then226, !dbg !2008

if.then226:                                       ; preds = %while.body222
  br label %do.body227, !dbg !2009

do.body227:                                       ; preds = %if.then226
  br label %do.body228, !dbg !2011

do.body228:                                       ; preds = %do.body227
  %end229 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 2, !dbg !2013
  %119 = load ptr, ptr %end229, align 8, !dbg !2013
  %sp230 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !2013
  %120 = load ptr, ptr %sp230, align 8, !dbg !2013
  %sub.ptr.lhs.cast231 = ptrtoint ptr %119 to i64, !dbg !2013
  %sub.ptr.rhs.cast232 = ptrtoint ptr %120 to i64, !dbg !2013
  %sub.ptr.sub233 = sub i64 %sub.ptr.lhs.cast231, %sub.ptr.rhs.cast232, !dbg !2013
  %sub.ptr.div234 = sdiv exact i64 %sub.ptr.sub233, 8, !dbg !2013
  %cmp235 = icmp slt i64 %sub.ptr.div234, 1, !dbg !2013
  br i1 %cmp235, label %if.then237, label %if.end238, !dbg !2016

if.then237:                                       ; preds = %do.body228
  call void @erl_grow_estack(ptr noundef %s, i64 noundef 1), !dbg !2017
  br label %if.end238, !dbg !2017

if.end238:                                        ; preds = %if.then237, %do.body228
  br label %do.cond239, !dbg !2016

do.cond239:                                       ; preds = %if.end238
  br label %do.end240, !dbg !2016

do.end240:                                        ; preds = %do.cond239
  %121 = load i64, ptr %obj.addr, align 8, !dbg !2011
  %sp241 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !2011
  %122 = load ptr, ptr %sp241, align 8, !dbg !2011
  %incdec.ptr242 = getelementptr inbounds i64, ptr %122, i32 1, !dbg !2011
  store ptr %incdec.ptr242, ptr %sp241, align 8, !dbg !2011
  store i64 %121, ptr %122, align 8, !dbg !2011
  br label %do.cond243, !dbg !2011

do.cond243:                                       ; preds = %do.end240
  br label %do.end244, !dbg !2011

do.end244:                                        ; preds = %do.cond243
  br label %if.end245, !dbg !2019

if.end245:                                        ; preds = %do.end244, %while.body222
  br label %while.cond218, !dbg !1999, !llvm.loop !2020

while.end246:                                     ; preds = %while.cond218
  %123 = load ptr, ptr %head, align 8, !dbg !2022
  %arrayidx247 = getelementptr inbounds i64, ptr %123, i64 0, !dbg !2022
  %124 = load i64, ptr %arrayidx247, align 8, !dbg !2022
  store i64 %124, ptr %obj.addr, align 8, !dbg !2023
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2024
  br label %cleanup, !dbg !2024

cleanup:                                          ; preds = %if.then216, %while.end246
  call void @llvm.lifetime.end.p0(i64 8, ptr %sz183) #8, !dbg !2024
  call void @llvm.lifetime.end.p0(i64 8, ptr %head) #8, !dbg !2024
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup315 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %sw.epilog, !dbg !2025

sw.default:                                       ; preds = %sw.bb144
  %125 = load i64, ptr %hdr, align 8, !dbg !2026
  %shr249 = lshr i64 %125, 6, !dbg !2026
  %and250 = and i64 %shr249, 3, !dbg !2026
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str, i64 noundef %and250) #9, !dbg !2027
  unreachable, !dbg !2027

sw.epilog:                                        ; preds = %cleanup.cont
  br label %sw.epilog314, !dbg !2028

sw.bb251:                                         ; preds = %if.end47
  call void @llvm.lifetime.start.p0(i64 8, ptr %real_bin) #8, !dbg !2029
  tail call void @llvm.dbg.declare(metadata ptr %real_bin, metadata !1758, metadata !DIExpression()), !dbg !2030
  call void @llvm.lifetime.start.p0(i64 8, ptr %offset) #8, !dbg !2031
  tail call void @llvm.dbg.declare(metadata ptr %offset, metadata !1760, metadata !DIExpression()), !dbg !2031
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitsize) #8, !dbg !2032
  tail call void @llvm.dbg.declare(metadata ptr %bitsize, metadata !1761, metadata !DIExpression()), !dbg !2033
  call void @llvm.lifetime.start.p0(i64 8, ptr %bitoffs) #8, !dbg !2034
  tail call void @llvm.dbg.declare(metadata ptr %bitoffs, metadata !1762, metadata !DIExpression()), !dbg !2035
  call void @llvm.lifetime.start.p0(i64 8, ptr %extra_bytes) #8, !dbg !2036
  tail call void @llvm.dbg.declare(metadata ptr %extra_bytes, metadata !1763, metadata !DIExpression()), !dbg !2037
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr252) #8, !dbg !2038
  tail call void @llvm.dbg.declare(metadata ptr %hdr252, metadata !1764, metadata !DIExpression()), !dbg !2039
  br label %do.body253, !dbg !2040

do.body253:                                       ; preds = %sw.bb251
  call void @llvm.lifetime.start.p0(i64 8, ptr %_sb) #8, !dbg !2041
  tail call void @llvm.dbg.declare(metadata ptr %_sb, metadata !1765, metadata !DIExpression()), !dbg !2041
  %126 = load i64, ptr %obj.addr, align 8, !dbg !2041
  %sub254 = sub i64 %126, 2, !dbg !2041
  %127 = inttoptr i64 %sub254 to ptr, !dbg !2041
  store ptr %127, ptr %_sb, align 8, !dbg !2041
  %128 = load ptr, ptr %_sb, align 8, !dbg !2042
  %thing_word = getelementptr inbounds %struct.erl_sub_bin, ptr %128, i32 0, i32 0, !dbg !2042
  %129 = load i64, ptr %thing_word, align 8, !dbg !2042
  %cmp255 = icmp eq i64 %129, 232, !dbg !2042
  br i1 %cmp255, label %if.then257, label %if.else, !dbg !2041

if.then257:                                       ; preds = %do.body253
  %130 = load ptr, ptr %_sb, align 8, !dbg !2044
  %orig = getelementptr inbounds %struct.erl_sub_bin, ptr %130, i32 0, i32 6, !dbg !2044
  %131 = load i64, ptr %orig, align 8, !dbg !2044
  store i64 %131, ptr %real_bin, align 8, !dbg !2044
  %132 = load ptr, ptr %_sb, align 8, !dbg !2044
  %offs = getelementptr inbounds %struct.erl_sub_bin, ptr %132, i32 0, i32 2, !dbg !2044
  %133 = load i64, ptr %offs, align 8, !dbg !2044
  store i64 %133, ptr %offset, align 8, !dbg !2044
  %134 = load ptr, ptr %_sb, align 8, !dbg !2044
  %bitoffs258 = getelementptr inbounds %struct.erl_sub_bin, ptr %134, i32 0, i32 4, !dbg !2044
  %135 = load i8, ptr %bitoffs258, align 1, !dbg !2044
  %conv259 = zext i8 %135 to i64, !dbg !2044
  store i64 %conv259, ptr %bitoffs, align 8, !dbg !2044
  %136 = load ptr, ptr %_sb, align 8, !dbg !2044
  %bitsize260 = getelementptr inbounds %struct.erl_sub_bin, ptr %136, i32 0, i32 3, !dbg !2044
  %137 = load i8, ptr %bitsize260, align 8, !dbg !2044
  %conv261 = zext i8 %137 to i64, !dbg !2044
  store i64 %conv261, ptr %bitsize, align 8, !dbg !2044
  br label %if.end262, !dbg !2044

if.else:                                          ; preds = %do.body253
  %138 = load i64, ptr %obj.addr, align 8, !dbg !2046
  store i64 %138, ptr %real_bin, align 8, !dbg !2046
  store i64 0, ptr %bitsize, align 8, !dbg !2046
  store i64 0, ptr %bitoffs, align 8, !dbg !2046
  store i64 0, ptr %offset, align 8, !dbg !2046
  br label %if.end262

if.end262:                                        ; preds = %if.else, %if.then257
  call void @llvm.lifetime.end.p0(i64 8, ptr %_sb) #8, !dbg !2040
  br label %do.cond263, !dbg !2041

do.cond263:                                       ; preds = %if.end262
  br label %do.end264, !dbg !2041

do.end264:                                        ; preds = %do.cond263
  %139 = load i64, ptr %bitsize, align 8, !dbg !2048
  %140 = load i64, ptr %bitoffs, align 8, !dbg !2050
  %add265 = add i64 %139, %140, !dbg !2051
  %cmp266 = icmp ugt i64 %add265, 8, !dbg !2052
  br i1 %cmp266, label %if.then268, label %if.else270, !dbg !2053

if.then268:                                       ; preds = %do.end264
  %141 = load i64, ptr %sum, align 8, !dbg !2054
  %add269 = add i64 %141, 5, !dbg !2054
  store i64 %add269, ptr %sum, align 8, !dbg !2054
  store i64 2, ptr %extra_bytes, align 8, !dbg !2056
  br label %if.end278, !dbg !2057

if.else270:                                       ; preds = %do.end264
  %142 = load i64, ptr %bitsize, align 8, !dbg !2058
  %143 = load i64, ptr %bitoffs, align 8, !dbg !2060
  %add271 = add i64 %142, %143, !dbg !2061
  %cmp272 = icmp ugt i64 %add271, 0, !dbg !2062
  br i1 %cmp272, label %if.then274, label %if.else276, !dbg !2063

if.then274:                                       ; preds = %if.else270
  %144 = load i64, ptr %sum, align 8, !dbg !2064
  %add275 = add i64 %144, 5, !dbg !2064
  store i64 %add275, ptr %sum, align 8, !dbg !2064
  store i64 1, ptr %extra_bytes, align 8, !dbg !2066
  br label %if.end277, !dbg !2067

if.else276:                                       ; preds = %if.else270
  store i64 0, ptr %extra_bytes, align 8, !dbg !2068
  br label %if.end277

if.end277:                                        ; preds = %if.else276, %if.then274
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %if.then268
  %145 = load i64, ptr %real_bin, align 8, !dbg !2070
  %sub279 = sub i64 %145, 2, !dbg !2070
  %146 = inttoptr i64 %sub279 to ptr, !dbg !2070
  %147 = load i64, ptr %146, align 8, !dbg !2071
  store i64 %147, ptr %hdr252, align 8, !dbg !2072
  %148 = load i64, ptr %hdr252, align 8, !dbg !2073
  %and280 = and i64 %148, 60, !dbg !2073
  %cmp281 = icmp eq i64 %and280, 32, !dbg !2075
  br i1 %cmp281, label %if.then283, label %if.else285, !dbg !2076

if.then283:                                       ; preds = %if.end278
  %149 = load i64, ptr %sum, align 8, !dbg !2077
  %add284 = add i64 %149, 6, !dbg !2077
  store i64 %add284, ptr %sum, align 8, !dbg !2077
  br label %if.end293, !dbg !2079

if.else285:                                       ; preds = %if.end278
  %150 = load i64, ptr %obj.addr, align 8, !dbg !2080
  %sub286 = sub i64 %150, 2, !dbg !2080
  %151 = inttoptr i64 %sub286 to ptr, !dbg !2080
  %arrayidx287 = getelementptr inbounds i64, ptr %151, i64 1, !dbg !2080
  %152 = load i64, ptr %arrayidx287, align 8, !dbg !2080
  %153 = load i64, ptr %extra_bytes, align 8, !dbg !2080
  %add288 = add i64 %152, %153, !dbg !2080
  %add289 = add i64 %add288, 8, !dbg !2080
  %sub290 = sub i64 %add289, 1, !dbg !2080
  %div = udiv i64 %sub290, 8, !dbg !2080
  %add291 = add i64 2, %div, !dbg !2080
  %154 = load i64, ptr %sum, align 8, !dbg !2082
  %add292 = add i64 %154, %add291, !dbg !2082
  store i64 %add292, ptr %sum, align 8, !dbg !2082
  br label %if.end293

if.end293:                                        ; preds = %if.else285, %if.then283
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr252) #8, !dbg !2083
  call void @llvm.lifetime.end.p0(i64 8, ptr %extra_bytes) #8, !dbg !2083
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitoffs) #8, !dbg !2083
  call void @llvm.lifetime.end.p0(i64 8, ptr %bitsize) #8, !dbg !2083
  call void @llvm.lifetime.end.p0(i64 8, ptr %offset) #8, !dbg !2083
  call void @llvm.lifetime.end.p0(i64 8, ptr %real_bin) #8, !dbg !2083
  br label %cleanup315

sw.bb300:                                         ; preds = %if.end47
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.1) #9, !dbg !2084
  unreachable, !dbg !2084

sw.default301:                                    ; preds = %if.end47
  %155 = load i64, ptr %hdr, align 8, !dbg !2085
  %and302 = and i64 %155, 63, !dbg !2085
  %cmp303 = icmp eq i64 %and302, 60, !dbg !2085
  br i1 %cmp303, label %cond.true305, label %cond.false308, !dbg !2085

cond.true305:                                     ; preds = %sw.default301
  %156 = load i64, ptr %hdr, align 8, !dbg !2085
  %shr306 = lshr i64 %156, 8, !dbg !2085
  %and307 = and i64 %shr306, 255, !dbg !2085
  br label %cond.end310, !dbg !2085

cond.false308:                                    ; preds = %sw.default301
  %157 = load i64, ptr %hdr, align 8, !dbg !2085
  %shr309 = lshr i64 %157, 6, !dbg !2085
  br label %cond.end310, !dbg !2085

cond.end310:                                      ; preds = %cond.false308, %cond.true305
  %cond311 = phi i64 [ %and307, %cond.true305 ], [ %shr309, %cond.false308 ], !dbg !2085
  %add312 = add i64 %cond311, 1, !dbg !2086
  %158 = load i64, ptr %sum, align 8, !dbg !2087
  %add313 = add i64 %158, %add312, !dbg !2087
  store i64 %add313, ptr %sum, align 8, !dbg !2087
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup315, !dbg !2088

sw.epilog314:                                     ; preds = %sw.epilog, %while.end143, %while.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2089
  br label %cleanup315, !dbg !2089

cleanup315:                                       ; preds = %cond.end310, %if.then60, %if.then46, %sw.epilog314, %if.end293, %cleanup, %while.end181
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr) #8, !dbg !2089
  %cleanup.dest316 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest316, label %cleanup340 [
    i32 0, label %cleanup.cont317
    i32 5, label %pop_next
  ]

cleanup.cont317:                                  ; preds = %cleanup315
  br label %sw.epilog339, !dbg !2090

sw.bb318:                                         ; preds = %for.cond
  br label %pop_next, !dbg !2090

pop_next:                                         ; preds = %sw.bb318, %cleanup315, %if.then
  tail call void @llvm.dbg.label(metadata !1767), !dbg !2091
  %sp319 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !2092
  %159 = load ptr, ptr %sp319, align 8, !dbg !2092
  %start320 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 0, !dbg !2092
  %160 = load ptr, ptr %start320, align 8, !dbg !2092
  %cmp321 = icmp eq ptr %159, %160, !dbg !2092
  br i1 %cmp321, label %if.then323, label %if.end335, !dbg !2094

if.then323:                                       ; preds = %pop_next
  br label %do.body324, !dbg !2095

do.body324:                                       ; preds = %if.then323
  %start325 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 0, !dbg !2097
  %161 = load ptr, ptr %start325, align 8, !dbg !2097
  %arraydecay326 = getelementptr inbounds [16 x i64], ptr %s_default_estack, i64 0, i64 0, !dbg !2097
  %cmp327 = icmp ne ptr %161, %arraydecay326, !dbg !2097
  br i1 %cmp327, label %if.then329, label %if.end332, !dbg !2100

if.then329:                                       ; preds = %do.body324
  %alloc_type330 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 4, !dbg !2101
  %162 = load i32, ptr %alloc_type330, align 8, !dbg !2101
  %start331 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 0, !dbg !2101
  %163 = load ptr, ptr %start331, align 8, !dbg !2101
  call void @erts_free(i32 noundef %162, ptr noundef %163), !dbg !2101
  br label %if.end332, !dbg !2101

if.end332:                                        ; preds = %if.then329, %do.body324
  br label %do.cond333, !dbg !2100

do.cond333:                                       ; preds = %if.end332
  br label %do.end334, !dbg !2100

do.end334:                                        ; preds = %do.cond333
  %164 = load i64, ptr %sum, align 8, !dbg !2103
  store i64 %164, ptr %retval, align 8, !dbg !2104
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup340, !dbg !2104

if.end335:                                        ; preds = %pop_next
  %sp336 = getelementptr inbounds %struct.ErtsEStack_, ptr %s, i32 0, i32 1, !dbg !2105
  %165 = load ptr, ptr %sp336, align 8, !dbg !2105
  %incdec.ptr337 = getelementptr inbounds i64, ptr %165, i32 -1, !dbg !2105
  store ptr %incdec.ptr337, ptr %sp336, align 8, !dbg !2105
  %166 = load i64, ptr %incdec.ptr337, align 8, !dbg !2105
  store i64 %166, ptr %obj.addr, align 8, !dbg !2106
  br label %sw.epilog339, !dbg !2107

sw.default338:                                    ; preds = %for.cond
  %167 = load i64, ptr %obj.addr, align 8, !dbg !2108
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.2, i64 noundef %167) #9, !dbg !2109
  unreachable, !dbg !2109

sw.epilog339:                                     ; preds = %if.end335, %cleanup.cont317, %if.end32
  br label %for.cond, !dbg !2110, !llvm.loop !2111

cleanup340:                                       ; preds = %do.end334, %cleanup315
  call void @llvm.lifetime.end.p0(i64 40, ptr %s) #8, !dbg !2114
  call void @llvm.lifetime.end.p0(i64 128, ptr %s_default_estack) #8, !dbg !2114
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !2114
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !2114
  call void @llvm.lifetime.end.p0(i64 4, ptr %arity) #8, !dbg !2114
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #8, !dbg !2114
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum) #8, !dbg !2114
  %168 = load i64, ptr %retval, align 8, !dbg !2114
  ret i64 %168, !dbg !2114
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @erts_cp_size() #2 !dbg !2115 {
entry:
  %retval = alloca i32, align 4
  %0 = load i32, ptr @erts_frame_layout, align 4, !dbg !2116
  %cmp = icmp eq i32 %0, 0, !dbg !2118
  br i1 %cmp, label %if.then, label %if.end, !dbg !2119

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !2120
  br label %return, !dbg !2120

if.end:                                           ; preds = %entry
  store i32 2, ptr %retval, align 4, !dbg !2122
  br label %return, !dbg !2122

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, ptr %retval, align 4, !dbg !2123
  ret i32 %1, !dbg !2123
}

declare !dbg !2124 ptr @erts_heap_alloc(ptr noundef, i64 noundef, i64 noundef) #3

; Function Attrs: nounwind uwtable
define dso_local i64 @copy_struct_x(i64 noundef %obj, i64 noundef %sz, ptr noundef %hpp, ptr noundef %off_heap, ptr noundef %bsz, ptr noundef %litopt) #0 !dbg !2127 {
entry:
  %retval = alloca i64, align 8
  %obj.addr = alloca i64, align 8
  %sz.addr = alloca i64, align 8
  %hpp.addr = alloca ptr, align 8
  %off_heap.addr = alloca ptr, align 8
  %bsz.addr = alloca ptr, align 8
  %litopt.addr = alloca ptr, align 8
  %hstart = alloca ptr, align 8
  %hsize = alloca i64, align 8
  %htop = alloca ptr, align 8
  %hbot = alloca ptr, align 8
  %hp = alloca ptr, align 8
  %objp = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %res = alloca i64, align 8
  %elem = alloca i64, align 8
  %tailp = alloca ptr, align 8
  %argp = alloca ptr, align 8
  %const_tuple = alloca ptr, align 8
  %hdr = alloca i64, align 8
  %hend = alloca ptr, align 8
  %i = alloca i32, align 4
  %lit_purge_ptr = alloca ptr, align 8
  %lit_purge_sz = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %const_flag = alloca i32, align 4
  %pb = alloca ptr, align 8
  %sb = alloca ptr, align 8
  %real_bin = alloca i64, align 8
  %bit_offset = alloca i64, align 8
  %bit_size = alloca i64, align 8
  %offset = alloca i64, align 8
  %size148 = alloca i64, align 8
  %extra_bytes = alloca i64, align 8
  %real_size = alloca i64, align 8
  %from = alloca ptr, align 8
  %to = alloca ptr, align 8
  %from188 = alloca ptr, align 8
  %to189 = alloca ptr, align 8
  %res220 = alloca ptr, align 8
  %funp = alloca ptr, align 8
  %etp = alloca ptr, align 8
  %ohhp = alloca ptr, align 8
  %mreft = alloca ptr, align 8
  store i64 %obj, ptr %obj.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !2134, metadata !DIExpression()), !dbg !2197
  store i64 %sz, ptr %sz.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sz.addr, metadata !2135, metadata !DIExpression()), !dbg !2198
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !2136, metadata !DIExpression()), !dbg !2199
  store ptr %off_heap, ptr %off_heap.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %off_heap.addr, metadata !2137, metadata !DIExpression()), !dbg !2200
  store ptr %bsz, ptr %bsz.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %bsz.addr, metadata !2138, metadata !DIExpression()), !dbg !2201
  store ptr %litopt, ptr %litopt.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %litopt.addr, metadata !2139, metadata !DIExpression()), !dbg !2202
  call void @llvm.lifetime.start.p0(i64 8, ptr %hstart) #8, !dbg !2203
  tail call void @llvm.dbg.declare(metadata ptr %hstart, metadata !2140, metadata !DIExpression()), !dbg !2204
  call void @llvm.lifetime.start.p0(i64 8, ptr %hsize) #8, !dbg !2205
  tail call void @llvm.dbg.declare(metadata ptr %hsize, metadata !2141, metadata !DIExpression()), !dbg !2206
  call void @llvm.lifetime.start.p0(i64 8, ptr %htop) #8, !dbg !2207
  tail call void @llvm.dbg.declare(metadata ptr %htop, metadata !2142, metadata !DIExpression()), !dbg !2208
  call void @llvm.lifetime.start.p0(i64 8, ptr %hbot) #8, !dbg !2209
  tail call void @llvm.dbg.declare(metadata ptr %hbot, metadata !2143, metadata !DIExpression()), !dbg !2210
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp) #8, !dbg !2211
  tail call void @llvm.dbg.declare(metadata ptr %hp, metadata !2144, metadata !DIExpression()), !dbg !2212
  call void @llvm.lifetime.start.p0(i64 8, ptr %objp) #8, !dbg !2213
  tail call void @llvm.dbg.declare(metadata ptr %objp, metadata !2145, metadata !DIExpression()), !dbg !2214
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #8, !dbg !2215
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !2147, metadata !DIExpression()), !dbg !2216
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #8, !dbg !2217
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !2148, metadata !DIExpression()), !dbg !2218
  call void @llvm.lifetime.start.p0(i64 8, ptr %elem) #8, !dbg !2219
  tail call void @llvm.dbg.declare(metadata ptr %elem, metadata !2149, metadata !DIExpression()), !dbg !2220
  call void @llvm.lifetime.start.p0(i64 8, ptr %tailp) #8, !dbg !2221
  tail call void @llvm.dbg.declare(metadata ptr %tailp, metadata !2150, metadata !DIExpression()), !dbg !2222
  call void @llvm.lifetime.start.p0(i64 8, ptr %argp) #8, !dbg !2223
  tail call void @llvm.dbg.declare(metadata ptr %argp, metadata !2151, metadata !DIExpression()), !dbg !2224
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_tuple) #8, !dbg !2225
  tail call void @llvm.dbg.declare(metadata ptr %const_tuple, metadata !2152, metadata !DIExpression()), !dbg !2226
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr) #8, !dbg !2227
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !2153, metadata !DIExpression()), !dbg !2228
  call void @llvm.lifetime.start.p0(i64 8, ptr %hend) #8, !dbg !2229
  tail call void @llvm.dbg.declare(metadata ptr %hend, metadata !2154, metadata !DIExpression()), !dbg !2230
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !2231
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !2155, metadata !DIExpression()), !dbg !2232
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !2233
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_ptr, metadata !2156, metadata !DIExpression()), !dbg !2234
  %0 = load ptr, ptr %litopt.addr, align 8, !dbg !2235
  %tobool = icmp ne ptr %0, null, !dbg !2235
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2235

cond.true:                                        ; preds = %entry
  %1 = load ptr, ptr %litopt.addr, align 8, !dbg !2236
  %lit_purge_ptr1 = getelementptr inbounds %struct.erts_literal_area_t, ptr %1, i32 0, i32 0, !dbg !2237
  %2 = load ptr, ptr %lit_purge_ptr1, align 8, !dbg !2237
  br label %cond.end, !dbg !2235

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2235

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %2, %cond.true ], [ null, %cond.false ], !dbg !2235
  store ptr %cond, ptr %lit_purge_ptr, align 8, !dbg !2234
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !2238
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_sz, metadata !2157, metadata !DIExpression()), !dbg !2239
  %3 = load ptr, ptr %litopt.addr, align 8, !dbg !2240
  %tobool2 = icmp ne ptr %3, null, !dbg !2240
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !2240

cond.true3:                                       ; preds = %cond.end
  %4 = load ptr, ptr %litopt.addr, align 8, !dbg !2241
  %lit_purge_sz4 = getelementptr inbounds %struct.erts_literal_area_t, ptr %4, i32 0, i32 1, !dbg !2242
  %5 = load i64, ptr %lit_purge_sz4, align 8, !dbg !2242
  br label %cond.end6, !dbg !2240

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !2240

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi i64 [ %5, %cond.true3 ], [ 0, %cond.false5 ], !dbg !2240
  store i64 %cond7, ptr %lit_purge_sz, align 8, !dbg !2239
  %6 = load i64, ptr %obj.addr, align 8, !dbg !2243
  %and = and i64 %6, 3, !dbg !2243
  %cmp = icmp eq i64 %and, 3, !dbg !2243
  br i1 %cmp, label %if.then, label %if.end, !dbg !2245

if.then:                                          ; preds = %cond.end6
  %7 = load i64, ptr %obj.addr, align 8, !dbg !2246
  store i64 %7, ptr %retval, align 8, !dbg !2247
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup407, !dbg !2247

if.end:                                           ; preds = %cond.end6
  br label %do.body, !dbg !2248

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !2249

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !2249

do.end:                                           ; preds = %do.cond
  %8 = load ptr, ptr %hpp.addr, align 8, !dbg !2251
  %9 = load ptr, ptr %8, align 8, !dbg !2252
  store ptr %9, ptr %htop, align 8, !dbg !2253
  store ptr %9, ptr %hp, align 8, !dbg !2254
  %10 = load ptr, ptr %htop, align 8, !dbg !2255
  %11 = load i64, ptr %sz.addr, align 8, !dbg !2256
  %add.ptr = getelementptr inbounds i64, ptr %10, i64 %11, !dbg !2257
  store ptr %add.ptr, ptr %hend, align 8, !dbg !2258
  store ptr %add.ptr, ptr %hbot, align 8, !dbg !2259
  %12 = load ptr, ptr %htop, align 8, !dbg !2260
  store ptr %12, ptr %hstart, align 8, !dbg !2261
  %13 = load ptr, ptr %hbot, align 8, !dbg !2262
  %14 = load ptr, ptr %hstart, align 8, !dbg !2263
  %sub.ptr.lhs.cast = ptrtoint ptr %13 to i64, !dbg !2264
  %sub.ptr.rhs.cast = ptrtoint ptr %14 to i64, !dbg !2264
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2264
  store i64 %sub.ptr.sub, ptr %hsize, align 8, !dbg !2265
  store ptr null, ptr %const_tuple, align 8, !dbg !2266
  %15 = load i64, ptr %obj.addr, align 8, !dbg !2267
  %and8 = and i64 %15, 3, !dbg !2267
  switch i64 %and8, label %sw.default [
    i64 1, label %sw.bb
    i64 2, label %sw.bb9
  ], !dbg !2268

sw.bb:                                            ; preds = %do.end
  store ptr %res, ptr %argp, align 8, !dbg !2269
  %16 = load i64, ptr %obj.addr, align 8, !dbg !2271
  %sub = sub i64 %16, 1, !dbg !2271
  %17 = inttoptr i64 %sub to ptr, !dbg !2271
  store ptr %17, ptr %objp, align 8, !dbg !2272
  br label %L_copy_list, !dbg !2273

sw.bb9:                                           ; preds = %do.end
  store ptr %res, ptr %argp, align 8, !dbg !2274
  br label %L_copy_boxed, !dbg !2275

sw.default:                                       ; preds = %do.end
  %18 = load i64, ptr %obj.addr, align 8, !dbg !2276
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.6, ptr noundef @.str.7, i32 noundef 678, i64 noundef %18) #9, !dbg !2277
  unreachable, !dbg !2277

L_copy:                                           ; preds = %sw.bb65, %if.then62, %if.then32
  tail call void @llvm.dbg.label(metadata !2158), !dbg !2278
  br label %while.cond, !dbg !2279

while.cond:                                       ; preds = %sw.epilog393, %L_copy
  %19 = load ptr, ptr %hp, align 8, !dbg !2280
  %20 = load ptr, ptr %htop, align 8, !dbg !2281
  %cmp10 = icmp ne ptr %19, %20, !dbg !2282
  br i1 %cmp10, label %while.body, label %while.end394, !dbg !2279

while.body:                                       ; preds = %while.cond
  %21 = load ptr, ptr %hp, align 8, !dbg !2283
  %22 = load i64, ptr %21, align 8, !dbg !2284
  store i64 %22, ptr %obj.addr, align 8, !dbg !2285
  %23 = load i64, ptr %obj.addr, align 8, !dbg !2286
  %and11 = and i64 %23, 3, !dbg !2286
  switch i64 %and11, label %sw.epilog393 [
    i64 3, label %sw.bb12
    i64 1, label %sw.bb13
    i64 2, label %sw.bb68
    i64 0, label %sw.bb371
  ], !dbg !2287

sw.bb12:                                          ; preds = %while.body
  %24 = load ptr, ptr %hp, align 8, !dbg !2288
  %incdec.ptr = getelementptr inbounds i64, ptr %24, i32 1, !dbg !2288
  store ptr %incdec.ptr, ptr %hp, align 8, !dbg !2288
  br label %sw.epilog393, !dbg !2289

sw.bb13:                                          ; preds = %while.body
  %25 = load i64, ptr %obj.addr, align 8, !dbg !2290
  %sub14 = sub i64 %25, 1, !dbg !2290
  %26 = inttoptr i64 %sub14 to ptr, !dbg !2290
  store ptr %26, ptr %objp, align 8, !dbg !2291
  %27 = load ptr, ptr %objp, align 8, !dbg !2292
  %28 = load ptr, ptr %hstart, align 8, !dbg !2292
  %sub.ptr.lhs.cast15 = ptrtoint ptr %27 to i64, !dbg !2292
  %sub.ptr.rhs.cast16 = ptrtoint ptr %28 to i64, !dbg !2292
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !2292
  %29 = load i64, ptr %hsize, align 8, !dbg !2292
  %cmp18 = icmp ult i64 %sub.ptr.sub17, %29, !dbg !2292
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !2294

if.then19:                                        ; preds = %sw.bb13
  %30 = load ptr, ptr %hp, align 8, !dbg !2295
  %incdec.ptr20 = getelementptr inbounds i64, ptr %30, i32 1, !dbg !2295
  store ptr %incdec.ptr20, ptr %hp, align 8, !dbg !2295
  br label %sw.epilog393, !dbg !2297

if.end21:                                         ; preds = %sw.bb13
  %31 = load ptr, ptr %hp, align 8, !dbg !2298
  %incdec.ptr22 = getelementptr inbounds i64, ptr %31, i32 1, !dbg !2298
  store ptr %incdec.ptr22, ptr %hp, align 8, !dbg !2298
  store ptr %31, ptr %argp, align 8, !dbg !2299
  br label %L_copy_list, !dbg !2300

L_copy_list:                                      ; preds = %if.end21, %sw.bb
  tail call void @llvm.dbg.label(metadata !2159), !dbg !2301
  %32 = load ptr, ptr %argp, align 8, !dbg !2302
  store ptr %32, ptr %tailp, align 8, !dbg !2303
  %33 = load ptr, ptr %litopt.addr, align 8, !dbg !2304
  %tobool23 = icmp ne ptr %33, null, !dbg !2304
  br i1 %tobool23, label %land.lhs.true, label %if.end33, !dbg !2306

land.lhs.true:                                    ; preds = %L_copy_list
  %34 = load i64, ptr %obj.addr, align 8, !dbg !2307
  %35 = load ptr, ptr %objp, align 8, !dbg !2308
  %call = call i32 @erts_is_literal(i64 noundef %34, ptr noundef %35), !dbg !2309
  %tobool24 = icmp ne i32 %call, 0, !dbg !2309
  br i1 %tobool24, label %land.lhs.true25, label %if.end33, !dbg !2310

land.lhs.true25:                                  ; preds = %land.lhs.true
  %36 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2311
  %tobool26 = icmp ne ptr %36, null, !dbg !2311
  br i1 %tobool26, label %land.lhs.true27, label %if.then32, !dbg !2311

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %37 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2311
  %38 = load ptr, ptr %objp, align 8, !dbg !2311
  %cmp28 = icmp ule ptr %37, %38, !dbg !2311
  br i1 %cmp28, label %land.lhs.true29, label %if.then32, !dbg !2311

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %39 = load ptr, ptr %objp, align 8, !dbg !2311
  %40 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2311
  %41 = load i64, ptr %lit_purge_sz, align 8, !dbg !2311
  %add.ptr30 = getelementptr inbounds i64, ptr %40, i64 %41, !dbg !2311
  %cmp31 = icmp ult ptr %39, %add.ptr30, !dbg !2311
  br i1 %cmp31, label %if.end33, label %if.then32, !dbg !2312

if.then32:                                        ; preds = %land.lhs.true29, %land.lhs.true27, %land.lhs.true25
  %42 = load i64, ptr %obj.addr, align 8, !dbg !2313
  %43 = load ptr, ptr %tailp, align 8, !dbg !2315
  store i64 %42, ptr %43, align 8, !dbg !2316
  br label %L_copy, !dbg !2317

if.end33:                                         ; preds = %land.lhs.true29, %land.lhs.true, %L_copy_list
  br label %for.cond, !dbg !2318

for.cond:                                         ; preds = %if.end63, %if.end33
  %44 = load ptr, ptr %tailp, align 8, !dbg !2319
  store ptr %44, ptr %tp, align 8, !dbg !2323
  %45 = load ptr, ptr %objp, align 8, !dbg !2324
  %arrayidx = getelementptr inbounds i64, ptr %45, i64 0, !dbg !2324
  %46 = load i64, ptr %arrayidx, align 8, !dbg !2324
  store i64 %46, ptr %elem, align 8, !dbg !2325
  %47 = load i64, ptr %elem, align 8, !dbg !2326
  %and34 = and i64 %47, 3, !dbg !2326
  %cmp35 = icmp eq i64 %and34, 3, !dbg !2326
  br i1 %cmp35, label %if.then36, label %if.else, !dbg !2328

if.then36:                                        ; preds = %for.cond
  %48 = load ptr, ptr %hbot, align 8, !dbg !2329
  %add.ptr37 = getelementptr inbounds i64, ptr %48, i64 -2, !dbg !2329
  store ptr %add.ptr37, ptr %hbot, align 8, !dbg !2329
  %49 = load i64, ptr %elem, align 8, !dbg !2331
  %50 = load ptr, ptr %hbot, align 8, !dbg !2332
  %arrayidx38 = getelementptr inbounds i64, ptr %50, i64 0, !dbg !2332
  store i64 %49, ptr %arrayidx38, align 8, !dbg !2333
  %51 = load ptr, ptr %hbot, align 8, !dbg !2334
  %arrayidx39 = getelementptr inbounds i64, ptr %51, i64 1, !dbg !2334
  store ptr %arrayidx39, ptr %tailp, align 8, !dbg !2335
  br label %if.end43, !dbg !2336

if.else:                                          ; preds = %for.cond
  %52 = load i64, ptr %elem, align 8, !dbg !2337
  %53 = load ptr, ptr %htop, align 8, !dbg !2339
  %arrayidx40 = getelementptr inbounds i64, ptr %53, i64 0, !dbg !2339
  store i64 %52, ptr %arrayidx40, align 8, !dbg !2340
  %54 = load ptr, ptr %htop, align 8, !dbg !2341
  %arrayidx41 = getelementptr inbounds i64, ptr %54, i64 1, !dbg !2341
  store ptr %arrayidx41, ptr %tailp, align 8, !dbg !2342
  %55 = load ptr, ptr %htop, align 8, !dbg !2343
  %add.ptr42 = getelementptr inbounds i64, ptr %55, i64 2, !dbg !2343
  store ptr %add.ptr42, ptr %htop, align 8, !dbg !2343
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then36
  %56 = load ptr, ptr %tailp, align 8, !dbg !2344
  %add.ptr44 = getelementptr inbounds i64, ptr %56, i64 -1, !dbg !2344
  %57 = ptrtoint ptr %add.ptr44 to i64, !dbg !2344
  %add = add i64 %57, 1, !dbg !2344
  %58 = load ptr, ptr %tp, align 8, !dbg !2345
  store i64 %add, ptr %58, align 8, !dbg !2346
  %59 = load ptr, ptr %objp, align 8, !dbg !2347
  %arrayidx45 = getelementptr inbounds i64, ptr %59, i64 1, !dbg !2347
  %60 = load i64, ptr %arrayidx45, align 8, !dbg !2347
  store i64 %60, ptr %obj.addr, align 8, !dbg !2348
  %61 = load i64, ptr %obj.addr, align 8, !dbg !2349
  %and46 = and i64 %61, 2, !dbg !2349
  %tobool47 = icmp ne i64 %and46, 0, !dbg !2349
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !2351

if.then48:                                        ; preds = %if.end43
  br label %for.end, !dbg !2352

if.end49:                                         ; preds = %if.end43
  %62 = load i64, ptr %obj.addr, align 8, !dbg !2354
  %sub50 = sub i64 %62, 1, !dbg !2354
  %63 = inttoptr i64 %sub50 to ptr, !dbg !2354
  store ptr %63, ptr %objp, align 8, !dbg !2355
  %64 = load ptr, ptr %litopt.addr, align 8, !dbg !2356
  %tobool51 = icmp ne ptr %64, null, !dbg !2356
  br i1 %tobool51, label %land.lhs.true52, label %if.end63, !dbg !2358

land.lhs.true52:                                  ; preds = %if.end49
  %65 = load i64, ptr %obj.addr, align 8, !dbg !2359
  %66 = load ptr, ptr %objp, align 8, !dbg !2360
  %call53 = call i32 @erts_is_literal(i64 noundef %65, ptr noundef %66), !dbg !2361
  %tobool54 = icmp ne i32 %call53, 0, !dbg !2361
  br i1 %tobool54, label %land.lhs.true55, label %if.end63, !dbg !2362

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %67 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2363
  %tobool56 = icmp ne ptr %67, null, !dbg !2363
  br i1 %tobool56, label %land.lhs.true57, label %if.then62, !dbg !2363

land.lhs.true57:                                  ; preds = %land.lhs.true55
  %68 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2363
  %69 = load ptr, ptr %objp, align 8, !dbg !2363
  %cmp58 = icmp ule ptr %68, %69, !dbg !2363
  br i1 %cmp58, label %land.lhs.true59, label %if.then62, !dbg !2363

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %70 = load ptr, ptr %objp, align 8, !dbg !2363
  %71 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2363
  %72 = load i64, ptr %lit_purge_sz, align 8, !dbg !2363
  %add.ptr60 = getelementptr inbounds i64, ptr %71, i64 %72, !dbg !2363
  %cmp61 = icmp ult ptr %70, %add.ptr60, !dbg !2363
  br i1 %cmp61, label %if.end63, label %if.then62, !dbg !2364

if.then62:                                        ; preds = %land.lhs.true59, %land.lhs.true57, %land.lhs.true55
  %73 = load i64, ptr %obj.addr, align 8, !dbg !2365
  %74 = load ptr, ptr %tailp, align 8, !dbg !2367
  store i64 %73, ptr %74, align 8, !dbg !2368
  br label %L_copy, !dbg !2369

if.end63:                                         ; preds = %land.lhs.true59, %land.lhs.true52, %if.end49
  br label %for.cond, !dbg !2370, !llvm.loop !2371

for.end:                                          ; preds = %if.then48
  %75 = load i64, ptr %obj.addr, align 8, !dbg !2374
  %and64 = and i64 %75, 3, !dbg !2374
  switch i64 %and64, label %sw.default67 [
    i64 3, label %sw.bb65
    i64 2, label %sw.bb66
  ], !dbg !2375

sw.bb65:                                          ; preds = %for.end
  %76 = load i64, ptr %obj.addr, align 8, !dbg !2376
  %77 = load ptr, ptr %tailp, align 8, !dbg !2378
  store i64 %76, ptr %77, align 8, !dbg !2379
  br label %L_copy, !dbg !2380

sw.bb66:                                          ; preds = %for.end
  %78 = load ptr, ptr %tailp, align 8, !dbg !2381
  store ptr %78, ptr %argp, align 8, !dbg !2382
  br label %L_copy_boxed, !dbg !2383

sw.default67:                                     ; preds = %for.end
  %79 = load i64, ptr %obj.addr, align 8, !dbg !2384
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.6, ptr noundef @.str.7, i32 noundef 734, i64 noundef %79) #9, !dbg !2385
  unreachable, !dbg !2385

sw.bb68:                                          ; preds = %while.body
  %80 = load i64, ptr %obj.addr, align 8, !dbg !2386
  %sub69 = sub i64 %80, 2, !dbg !2386
  %81 = inttoptr i64 %sub69 to ptr, !dbg !2386
  %82 = load ptr, ptr %hstart, align 8, !dbg !2386
  %sub.ptr.lhs.cast70 = ptrtoint ptr %81 to i64, !dbg !2386
  %sub.ptr.rhs.cast71 = ptrtoint ptr %82 to i64, !dbg !2386
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71, !dbg !2386
  %83 = load i64, ptr %hsize, align 8, !dbg !2386
  %cmp73 = icmp ult i64 %sub.ptr.sub72, %83, !dbg !2386
  br i1 %cmp73, label %if.then74, label %if.end76, !dbg !2388

if.then74:                                        ; preds = %sw.bb68
  %84 = load ptr, ptr %hp, align 8, !dbg !2389
  %incdec.ptr75 = getelementptr inbounds i64, ptr %84, i32 1, !dbg !2389
  store ptr %incdec.ptr75, ptr %hp, align 8, !dbg !2389
  br label %sw.epilog393, !dbg !2391

if.end76:                                         ; preds = %sw.bb68
  %85 = load ptr, ptr %hp, align 8, !dbg !2392
  %incdec.ptr77 = getelementptr inbounds i64, ptr %85, i32 1, !dbg !2392
  store ptr %incdec.ptr77, ptr %hp, align 8, !dbg !2392
  store ptr %85, ptr %argp, align 8, !dbg !2393
  br label %L_copy_boxed, !dbg !2394

L_copy_boxed:                                     ; preds = %if.end76, %sw.bb66, %sw.bb9
  tail call void @llvm.dbg.label(metadata !2162), !dbg !2395
  %86 = load i64, ptr %obj.addr, align 8, !dbg !2396
  %sub78 = sub i64 %86, 2, !dbg !2396
  %87 = inttoptr i64 %sub78 to ptr, !dbg !2396
  store ptr %87, ptr %objp, align 8, !dbg !2397
  %88 = load ptr, ptr %litopt.addr, align 8, !dbg !2398
  %tobool79 = icmp ne ptr %88, null, !dbg !2398
  br i1 %tobool79, label %land.lhs.true80, label %if.end91, !dbg !2400

land.lhs.true80:                                  ; preds = %L_copy_boxed
  %89 = load i64, ptr %obj.addr, align 8, !dbg !2401
  %90 = load ptr, ptr %objp, align 8, !dbg !2402
  %call81 = call i32 @erts_is_literal(i64 noundef %89, ptr noundef %90), !dbg !2403
  %tobool82 = icmp ne i32 %call81, 0, !dbg !2403
  br i1 %tobool82, label %land.lhs.true83, label %if.end91, !dbg !2404

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %91 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2405
  %tobool84 = icmp ne ptr %91, null, !dbg !2405
  br i1 %tobool84, label %land.lhs.true85, label %if.then90, !dbg !2405

land.lhs.true85:                                  ; preds = %land.lhs.true83
  %92 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2405
  %93 = load ptr, ptr %objp, align 8, !dbg !2405
  %cmp86 = icmp ule ptr %92, %93, !dbg !2405
  br i1 %cmp86, label %land.lhs.true87, label %if.then90, !dbg !2405

land.lhs.true87:                                  ; preds = %land.lhs.true85
  %94 = load ptr, ptr %objp, align 8, !dbg !2405
  %95 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !2405
  %96 = load i64, ptr %lit_purge_sz, align 8, !dbg !2405
  %add.ptr88 = getelementptr inbounds i64, ptr %95, i64 %96, !dbg !2405
  %cmp89 = icmp ult ptr %94, %add.ptr88, !dbg !2405
  br i1 %cmp89, label %if.end91, label %if.then90, !dbg !2406

if.then90:                                        ; preds = %land.lhs.true87, %land.lhs.true85, %land.lhs.true83
  %97 = load i64, ptr %obj.addr, align 8, !dbg !2407
  %98 = load ptr, ptr %argp, align 8, !dbg !2409
  store i64 %97, ptr %98, align 8, !dbg !2410
  br label %sw.epilog393, !dbg !2411

if.end91:                                         ; preds = %land.lhs.true87, %land.lhs.true80, %L_copy_boxed
  %99 = load ptr, ptr %objp, align 8, !dbg !2412
  %100 = load i64, ptr %99, align 8, !dbg !2413
  store i64 %100, ptr %hdr, align 8, !dbg !2414
  %101 = load i64, ptr %hdr, align 8, !dbg !2415
  %and92 = and i64 %101, 63, !dbg !2416
  switch i64 %and92, label %sw.default346 [
    i64 0, label %sw.bb93
    i64 32, label %sw.bb114
    i64 40, label %sw.bb145
    i64 20, label %sw.bb240
    i64 48, label %sw.bb273
    i64 52, label %sw.bb273
    i64 56, label %sw.bb273
    i64 60, label %sw.bb299
    i64 4, label %sw.bb333
    i64 16, label %sw.bb334
  ], !dbg !2417

sw.bb93:                                          ; preds = %if.end91
  call void @llvm.lifetime.start.p0(i64 4, ptr %const_flag) #8, !dbg !2418
  tail call void @llvm.dbg.declare(metadata ptr %const_flag, metadata !2163, metadata !DIExpression()), !dbg !2419
  store i32 1, ptr %const_flag, align 4, !dbg !2419
  %102 = load i64, ptr %hdr, align 8, !dbg !2420
  %shr = lshr i64 %102, 6, !dbg !2420
  %conv = trunc i64 %shr to i32, !dbg !2420
  store i32 %conv, ptr %i, align 4, !dbg !2421
  %103 = load i32, ptr %i, align 4, !dbg !2422
  %cmp94 = icmp eq i32 %103, 0, !dbg !2424
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !2425

if.then96:                                        ; preds = %sw.bb93
  %104 = load i64, ptr @ERTS_GLOBAL_LIT_EMPTY_TUPLE, align 8, !dbg !2426
  %105 = load ptr, ptr %argp, align 8, !dbg !2428
  store i64 %104, ptr %105, align 8, !dbg !2429
  store i32 14, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2430

if.end97:                                         ; preds = %sw.bb93
  %106 = load ptr, ptr %htop, align 8, !dbg !2431
  %107 = ptrtoint ptr %106 to i64, !dbg !2431
  %add98 = add i64 %107, 2, !dbg !2431
  %108 = load ptr, ptr %argp, align 8, !dbg !2432
  store i64 %add98, ptr %108, align 8, !dbg !2433
  %109 = load ptr, ptr %htop, align 8, !dbg !2434
  store ptr %109, ptr %tp, align 8, !dbg !2435
  %110 = load ptr, ptr %objp, align 8, !dbg !2436
  %incdec.ptr99 = getelementptr inbounds i64, ptr %110, i32 1, !dbg !2436
  store ptr %incdec.ptr99, ptr %objp, align 8, !dbg !2436
  %111 = load i64, ptr %110, align 8, !dbg !2437
  %112 = load ptr, ptr %htop, align 8, !dbg !2438
  %incdec.ptr100 = getelementptr inbounds i64, ptr %112, i32 1, !dbg !2438
  store ptr %incdec.ptr100, ptr %htop, align 8, !dbg !2438
  store i64 %111, ptr %112, align 8, !dbg !2439
  br label %while.cond101, !dbg !2440

while.cond101:                                    ; preds = %if.end109, %if.end97
  %113 = load i32, ptr %i, align 4, !dbg !2441
  %dec = add nsw i32 %113, -1, !dbg !2441
  store i32 %dec, ptr %i, align 4, !dbg !2441
  %tobool102 = icmp ne i32 %113, 0, !dbg !2440
  br i1 %tobool102, label %while.body103, label %while.end, !dbg !2440

while.body103:                                    ; preds = %while.cond101
  %114 = load ptr, ptr %objp, align 8, !dbg !2442
  %incdec.ptr104 = getelementptr inbounds i64, ptr %114, i32 1, !dbg !2442
  store ptr %incdec.ptr104, ptr %objp, align 8, !dbg !2442
  %115 = load i64, ptr %114, align 8, !dbg !2444
  store i64 %115, ptr %elem, align 8, !dbg !2445
  %116 = load i64, ptr %elem, align 8, !dbg !2446
  %and105 = and i64 %116, 3, !dbg !2446
  %cmp106 = icmp eq i64 %and105, 3, !dbg !2446
  br i1 %cmp106, label %if.end109, label %if.then108, !dbg !2448

if.then108:                                       ; preds = %while.body103
  store i32 0, ptr %const_flag, align 4, !dbg !2449
  br label %if.end109, !dbg !2451

if.end109:                                        ; preds = %if.then108, %while.body103
  %117 = load i64, ptr %elem, align 8, !dbg !2452
  %118 = load ptr, ptr %htop, align 8, !dbg !2453
  %incdec.ptr110 = getelementptr inbounds i64, ptr %118, i32 1, !dbg !2453
  store ptr %incdec.ptr110, ptr %htop, align 8, !dbg !2453
  store i64 %117, ptr %118, align 8, !dbg !2454
  br label %while.cond101, !dbg !2440, !llvm.loop !2455

while.end:                                        ; preds = %while.cond101
  %119 = load i32, ptr %const_flag, align 4, !dbg !2457
  %tobool111 = icmp ne i32 %119, 0, !dbg !2457
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !2459

if.then112:                                       ; preds = %while.end
  %120 = load ptr, ptr %tp, align 8, !dbg !2460
  store ptr %120, ptr %const_tuple, align 8, !dbg !2462
  br label %if.end113, !dbg !2463

if.end113:                                        ; preds = %if.then112, %while.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2464
  br label %cleanup, !dbg !2464

cleanup:                                          ; preds = %if.end113, %if.then96
  call void @llvm.lifetime.end.p0(i64 4, ptr %const_flag) #8, !dbg !2464
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 14, label %sw.epilog370
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %sw.epilog370, !dbg !2465

sw.bb114:                                         ; preds = %if.end91
  call void @llvm.lifetime.start.p0(i64 8, ptr %pb) #8, !dbg !2466
  tail call void @llvm.dbg.declare(metadata ptr %pb, metadata !2166, metadata !DIExpression()), !dbg !2467
  %121 = load ptr, ptr %objp, align 8, !dbg !2468
  store ptr %121, ptr %pb, align 8, !dbg !2469
  %122 = load ptr, ptr %pb, align 8, !dbg !2470
  %flags = getelementptr inbounds %struct.proc_bin, ptr %122, i32 0, i32 5, !dbg !2472
  %123 = load i64, ptr %flags, align 8, !dbg !2472
  %tobool115 = icmp ne i64 %123, 0, !dbg !2470
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !2473

if.then116:                                       ; preds = %sw.bb114
  %124 = load ptr, ptr %pb, align 8, !dbg !2474
  call void @erts_emasculate_writable_binary(ptr noundef %124), !dbg !2476
  br label %if.end117, !dbg !2477

if.end117:                                        ; preds = %if.then116, %sw.bb114
  %125 = load ptr, ptr %objp, align 8, !dbg !2478
  %126 = load i64, ptr %125, align 8, !dbg !2478
  %and118 = and i64 %126, 63, !dbg !2478
  %cmp119 = icmp eq i64 %and118, 60, !dbg !2478
  br i1 %cmp119, label %cond.true121, label %cond.false124, !dbg !2478

cond.true121:                                     ; preds = %if.end117
  %127 = load ptr, ptr %objp, align 8, !dbg !2478
  %128 = load i64, ptr %127, align 8, !dbg !2478
  %shr122 = lshr i64 %128, 8, !dbg !2478
  %and123 = and i64 %shr122, 255, !dbg !2478
  br label %cond.end126, !dbg !2478

cond.false124:                                    ; preds = %if.end117
  %129 = load ptr, ptr %objp, align 8, !dbg !2478
  %130 = load i64, ptr %129, align 8, !dbg !2478
  %shr125 = lshr i64 %130, 6, !dbg !2478
  br label %cond.end126, !dbg !2478

cond.end126:                                      ; preds = %cond.false124, %cond.true121
  %cond127 = phi i64 [ %and123, %cond.true121 ], [ %shr125, %cond.false124 ], !dbg !2478
  %add128 = add i64 %cond127, 1, !dbg !2479
  %conv129 = trunc i64 %add128 to i32, !dbg !2478
  store i32 %conv129, ptr %i, align 4, !dbg !2480
  %131 = load i32, ptr %i, align 4, !dbg !2481
  %132 = load ptr, ptr %hbot, align 8, !dbg !2482
  %idx.ext = sext i32 %131 to i64, !dbg !2482
  %idx.neg = sub i64 0, %idx.ext, !dbg !2482
  %add.ptr130 = getelementptr inbounds i64, ptr %132, i64 %idx.neg, !dbg !2482
  store ptr %add.ptr130, ptr %hbot, align 8, !dbg !2482
  %133 = load ptr, ptr %hbot, align 8, !dbg !2483
  store ptr %133, ptr %tp, align 8, !dbg !2484
  br label %while.cond131, !dbg !2485

while.cond131:                                    ; preds = %while.body134, %cond.end126
  %134 = load i32, ptr %i, align 4, !dbg !2486
  %dec132 = add nsw i32 %134, -1, !dbg !2486
  store i32 %dec132, ptr %i, align 4, !dbg !2486
  %tobool133 = icmp ne i32 %134, 0, !dbg !2485
  br i1 %tobool133, label %while.body134, label %while.end137, !dbg !2485

while.body134:                                    ; preds = %while.cond131
  %135 = load ptr, ptr %objp, align 8, !dbg !2487
  %incdec.ptr135 = getelementptr inbounds i64, ptr %135, i32 1, !dbg !2487
  store ptr %incdec.ptr135, ptr %objp, align 8, !dbg !2487
  %136 = load i64, ptr %135, align 8, !dbg !2489
  %137 = load ptr, ptr %tp, align 8, !dbg !2490
  %incdec.ptr136 = getelementptr inbounds i64, ptr %137, i32 1, !dbg !2490
  store ptr %incdec.ptr136, ptr %tp, align 8, !dbg !2490
  store i64 %136, ptr %137, align 8, !dbg !2491
  br label %while.cond131, !dbg !2485, !llvm.loop !2492

while.end137:                                     ; preds = %while.cond131
  %138 = load ptr, ptr %hbot, align 8, !dbg !2494
  %139 = ptrtoint ptr %138 to i64, !dbg !2494
  %add138 = add i64 %139, 2, !dbg !2494
  %140 = load ptr, ptr %argp, align 8, !dbg !2495
  store i64 %add138, ptr %140, align 8, !dbg !2496
  %141 = load ptr, ptr %hbot, align 8, !dbg !2497
  store ptr %141, ptr %pb, align 8, !dbg !2498
  %142 = load ptr, ptr %pb, align 8, !dbg !2499
  %val = getelementptr inbounds %struct.proc_bin, ptr %142, i32 0, i32 3, !dbg !2500
  %143 = load ptr, ptr %val, align 8, !dbg !2500
  %intern = getelementptr inbounds %struct.binary, ptr %143, i32 0, i32 0, !dbg !2501
  %refc = getelementptr inbounds %struct.binary_internals, ptr %intern, i32 0, i32 1, !dbg !2502
  call void @erts_refc_inc(ptr noundef %refc, i64 noundef 2), !dbg !2503
  %144 = load ptr, ptr %off_heap.addr, align 8, !dbg !2504
  %first = getelementptr inbounds %struct.erl_off_heap, ptr %144, i32 0, i32 0, !dbg !2505
  %145 = load ptr, ptr %first, align 8, !dbg !2505
  %146 = load ptr, ptr %pb, align 8, !dbg !2506
  %next = getelementptr inbounds %struct.proc_bin, ptr %146, i32 0, i32 2, !dbg !2507
  store ptr %145, ptr %next, align 8, !dbg !2508
  %147 = load ptr, ptr %pb, align 8, !dbg !2509
  %flags139 = getelementptr inbounds %struct.proc_bin, ptr %147, i32 0, i32 5, !dbg !2510
  store i64 0, ptr %flags139, align 8, !dbg !2511
  %148 = load ptr, ptr %pb, align 8, !dbg !2512
  %149 = load ptr, ptr %off_heap.addr, align 8, !dbg !2513
  %first140 = getelementptr inbounds %struct.erl_off_heap, ptr %149, i32 0, i32 0, !dbg !2514
  store ptr %148, ptr %first140, align 8, !dbg !2515
  br label %do.body141, !dbg !2516

do.body141:                                       ; preds = %while.end137
  %150 = load ptr, ptr %pb, align 8, !dbg !2517
  %size = getelementptr inbounds %struct.proc_bin, ptr %150, i32 0, i32 1, !dbg !2517
  %151 = load i64, ptr %size, align 8, !dbg !2517
  %div = udiv i64 %151, 8, !dbg !2517
  %152 = load ptr, ptr %off_heap.addr, align 8, !dbg !2517
  %overhead = getelementptr inbounds %struct.erl_off_heap, ptr %152, i32 0, i32 1, !dbg !2517
  %153 = load i64, ptr %overhead, align 8, !dbg !2517
  %add142 = add i64 %153, %div, !dbg !2517
  store i64 %add142, ptr %overhead, align 8, !dbg !2517
  br label %do.cond143, !dbg !2517

do.cond143:                                       ; preds = %do.body141
  br label %do.end144, !dbg !2517

do.end144:                                        ; preds = %do.cond143
  call void @llvm.lifetime.end.p0(i64 8, ptr %pb) #8, !dbg !2519
  br label %sw.epilog370, !dbg !2520

sw.bb145:                                         ; preds = %if.end91
  call void @llvm.lifetime.start.p0(i64 8, ptr %sb) #8, !dbg !2521
  tail call void @llvm.dbg.declare(metadata ptr %sb, metadata !2168, metadata !DIExpression()), !dbg !2522
  %154 = load ptr, ptr %objp, align 8, !dbg !2523
  store ptr %154, ptr %sb, align 8, !dbg !2522
  call void @llvm.lifetime.start.p0(i64 8, ptr %real_bin) #8, !dbg !2524
  tail call void @llvm.dbg.declare(metadata ptr %real_bin, metadata !2170, metadata !DIExpression()), !dbg !2525
  %155 = load ptr, ptr %sb, align 8, !dbg !2526
  %orig = getelementptr inbounds %struct.erl_sub_bin, ptr %155, i32 0, i32 6, !dbg !2527
  %156 = load i64, ptr %orig, align 8, !dbg !2527
  store i64 %156, ptr %real_bin, align 8, !dbg !2525
  call void @llvm.lifetime.start.p0(i64 8, ptr %bit_offset) #8, !dbg !2528
  tail call void @llvm.dbg.declare(metadata ptr %bit_offset, metadata !2171, metadata !DIExpression()), !dbg !2529
  %157 = load ptr, ptr %sb, align 8, !dbg !2530
  %bitoffs = getelementptr inbounds %struct.erl_sub_bin, ptr %157, i32 0, i32 4, !dbg !2531
  %158 = load i8, ptr %bitoffs, align 1, !dbg !2531
  %conv146 = zext i8 %158 to i64, !dbg !2530
  store i64 %conv146, ptr %bit_offset, align 8, !dbg !2529
  call void @llvm.lifetime.start.p0(i64 8, ptr %bit_size) #8, !dbg !2532
  tail call void @llvm.dbg.declare(metadata ptr %bit_size, metadata !2172, metadata !DIExpression()), !dbg !2533
  %159 = load ptr, ptr %sb, align 8, !dbg !2534
  %bitsize = getelementptr inbounds %struct.erl_sub_bin, ptr %159, i32 0, i32 3, !dbg !2535
  %160 = load i8, ptr %bitsize, align 8, !dbg !2535
  %conv147 = zext i8 %160 to i64, !dbg !2534
  store i64 %conv147, ptr %bit_size, align 8, !dbg !2533
  call void @llvm.lifetime.start.p0(i64 8, ptr %offset) #8, !dbg !2536
  tail call void @llvm.dbg.declare(metadata ptr %offset, metadata !2173, metadata !DIExpression()), !dbg !2537
  %161 = load ptr, ptr %sb, align 8, !dbg !2538
  %offs = getelementptr inbounds %struct.erl_sub_bin, ptr %161, i32 0, i32 2, !dbg !2539
  %162 = load i64, ptr %offs, align 8, !dbg !2539
  store i64 %162, ptr %offset, align 8, !dbg !2537
  call void @llvm.lifetime.start.p0(i64 8, ptr %size148) #8, !dbg !2540
  tail call void @llvm.dbg.declare(metadata ptr %size148, metadata !2174, metadata !DIExpression()), !dbg !2541
  %163 = load ptr, ptr %sb, align 8, !dbg !2542
  %size149 = getelementptr inbounds %struct.erl_sub_bin, ptr %163, i32 0, i32 1, !dbg !2543
  %164 = load i64, ptr %size149, align 8, !dbg !2543
  store i64 %164, ptr %size148, align 8, !dbg !2541
  call void @llvm.lifetime.start.p0(i64 8, ptr %extra_bytes) #8, !dbg !2544
  tail call void @llvm.dbg.declare(metadata ptr %extra_bytes, metadata !2175, metadata !DIExpression()), !dbg !2545
  call void @llvm.lifetime.start.p0(i64 8, ptr %real_size) #8, !dbg !2546
  tail call void @llvm.dbg.declare(metadata ptr %real_size, metadata !2176, metadata !DIExpression()), !dbg !2547
  %165 = load i64, ptr %bit_size, align 8, !dbg !2548
  %166 = load i64, ptr %bit_offset, align 8, !dbg !2550
  %add150 = add i64 %165, %166, !dbg !2551
  %cmp151 = icmp ugt i64 %add150, 8, !dbg !2552
  br i1 %cmp151, label %if.then153, label %if.else154, !dbg !2553

if.then153:                                       ; preds = %sw.bb145
  store i64 2, ptr %extra_bytes, align 8, !dbg !2554
  br label %if.end161, !dbg !2556

if.else154:                                       ; preds = %sw.bb145
  %167 = load i64, ptr %bit_size, align 8, !dbg !2557
  %168 = load i64, ptr %bit_offset, align 8, !dbg !2559
  %add155 = add i64 %167, %168, !dbg !2560
  %cmp156 = icmp ugt i64 %add155, 0, !dbg !2561
  br i1 %cmp156, label %if.then158, label %if.else159, !dbg !2562

if.then158:                                       ; preds = %if.else154
  store i64 1, ptr %extra_bytes, align 8, !dbg !2563
  br label %if.end160, !dbg !2565

if.else159:                                       ; preds = %if.else154
  store i64 0, ptr %extra_bytes, align 8, !dbg !2566
  br label %if.end160

if.end160:                                        ; preds = %if.else159, %if.then158
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then153
  %169 = load i64, ptr %size148, align 8, !dbg !2568
  %170 = load i64, ptr %extra_bytes, align 8, !dbg !2569
  %add162 = add i64 %169, %170, !dbg !2570
  store i64 %add162, ptr %real_size, align 8, !dbg !2571
  %171 = load i64, ptr %real_bin, align 8, !dbg !2572
  %sub163 = sub i64 %171, 2, !dbg !2572
  %172 = inttoptr i64 %sub163 to ptr, !dbg !2572
  store ptr %172, ptr %objp, align 8, !dbg !2573
  %173 = load ptr, ptr %objp, align 8, !dbg !2574
  %174 = load i64, ptr %173, align 8, !dbg !2574
  %and164 = and i64 %174, 60, !dbg !2574
  %cmp165 = icmp eq i64 %and164, 36, !dbg !2575
  br i1 %cmp165, label %if.then167, label %if.else187, !dbg !2576

if.then167:                                       ; preds = %if.end161
  call void @llvm.lifetime.start.p0(i64 8, ptr %from) #8, !dbg !2577
  tail call void @llvm.dbg.declare(metadata ptr %from, metadata !2177, metadata !DIExpression()), !dbg !2578
  %175 = load ptr, ptr %objp, align 8, !dbg !2579
  store ptr %175, ptr %from, align 8, !dbg !2578
  call void @llvm.lifetime.start.p0(i64 8, ptr %to) #8, !dbg !2580
  tail call void @llvm.dbg.declare(metadata ptr %to, metadata !2180, metadata !DIExpression()), !dbg !2581
  %176 = load i64, ptr %real_size, align 8, !dbg !2582
  %add168 = add i64 %176, 8, !dbg !2582
  %sub169 = sub i64 %add168, 1, !dbg !2582
  %div170 = udiv i64 %sub169, 8, !dbg !2582
  %add171 = add i64 2, %div170, !dbg !2582
  %conv172 = trunc i64 %add171 to i32, !dbg !2582
  store i32 %conv172, ptr %i, align 4, !dbg !2583
  %177 = load i32, ptr %i, align 4, !dbg !2584
  %178 = load ptr, ptr %hbot, align 8, !dbg !2585
  %idx.ext173 = sext i32 %177 to i64, !dbg !2585
  %idx.neg174 = sub i64 0, %idx.ext173, !dbg !2585
  %add.ptr175 = getelementptr inbounds i64, ptr %178, i64 %idx.neg174, !dbg !2585
  store ptr %add.ptr175, ptr %hbot, align 8, !dbg !2585
  %179 = load ptr, ptr %hbot, align 8, !dbg !2586
  store ptr %179, ptr %to, align 8, !dbg !2587
  %180 = load i64, ptr %real_size, align 8, !dbg !2588
  %add176 = add i64 %180, 8, !dbg !2588
  %sub177 = sub i64 %add176, 1, !dbg !2588
  %div178 = udiv i64 %sub177, 8, !dbg !2588
  %add179 = add i64 2, %div178, !dbg !2588
  %sub180 = sub i64 %add179, 1, !dbg !2588
  %shl = shl i64 %sub180, 6, !dbg !2588
  %add181 = add i64 %shl, 36, !dbg !2588
  %181 = load ptr, ptr %to, align 8, !dbg !2589
  %thing_word = getelementptr inbounds %struct.erl_heap_bin, ptr %181, i32 0, i32 0, !dbg !2590
  store i64 %add181, ptr %thing_word, align 8, !dbg !2591
  %182 = load i64, ptr %real_size, align 8, !dbg !2592
  %183 = load ptr, ptr %to, align 8, !dbg !2593
  %size182 = getelementptr inbounds %struct.erl_heap_bin, ptr %183, i32 0, i32 1, !dbg !2594
  store i64 %182, ptr %size182, align 8, !dbg !2595
  %184 = load ptr, ptr %to, align 8, !dbg !2596
  %data = getelementptr inbounds %struct.erl_heap_bin, ptr %184, i32 0, i32 2, !dbg !2597
  %arraydecay = getelementptr inbounds [1 x i64], ptr %data, i64 0, i64 0, !dbg !2596
  %185 = load ptr, ptr %from, align 8, !dbg !2598
  %data183 = getelementptr inbounds %struct.erl_heap_bin, ptr %185, i32 0, i32 2, !dbg !2599
  %arraydecay184 = getelementptr inbounds [1 x i64], ptr %data183, i64 0, i64 0, !dbg !2598
  %186 = load i64, ptr %offset, align 8, !dbg !2600
  %add.ptr185 = getelementptr inbounds i8, ptr %arraydecay184, i64 %186, !dbg !2601
  %187 = load i64, ptr %real_size, align 8, !dbg !2602
  %call186 = call ptr @sys_memcpy(ptr noundef %arraydecay, ptr noundef %add.ptr185, i64 noundef %187), !dbg !2603
  call void @llvm.lifetime.end.p0(i64 8, ptr %to) #8, !dbg !2604
  call void @llvm.lifetime.end.p0(i64 8, ptr %from) #8, !dbg !2604
  br label %if.end215, !dbg !2605

if.else187:                                       ; preds = %if.end161
  call void @llvm.lifetime.start.p0(i64 8, ptr %from188) #8, !dbg !2606
  tail call void @llvm.dbg.declare(metadata ptr %from188, metadata !2181, metadata !DIExpression()), !dbg !2607
  %188 = load ptr, ptr %objp, align 8, !dbg !2608
  store ptr %188, ptr %from188, align 8, !dbg !2607
  call void @llvm.lifetime.start.p0(i64 8, ptr %to189) #8, !dbg !2609
  tail call void @llvm.dbg.declare(metadata ptr %to189, metadata !2183, metadata !DIExpression()), !dbg !2610
  %189 = load ptr, ptr %from188, align 8, !dbg !2611
  %flags190 = getelementptr inbounds %struct.proc_bin, ptr %189, i32 0, i32 5, !dbg !2613
  %190 = load i64, ptr %flags190, align 8, !dbg !2613
  %tobool191 = icmp ne i64 %190, 0, !dbg !2611
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !2614

if.then192:                                       ; preds = %if.else187
  %191 = load ptr, ptr %from188, align 8, !dbg !2615
  call void @erts_emasculate_writable_binary(ptr noundef %191), !dbg !2617
  br label %if.end193, !dbg !2618

if.end193:                                        ; preds = %if.then192, %if.else187
  %192 = load ptr, ptr %hbot, align 8, !dbg !2619
  %add.ptr194 = getelementptr inbounds i64, ptr %192, i64 -6, !dbg !2619
  store ptr %add.ptr194, ptr %hbot, align 8, !dbg !2619
  %193 = load ptr, ptr %hbot, align 8, !dbg !2620
  store ptr %193, ptr %to189, align 8, !dbg !2621
  %194 = load ptr, ptr %to189, align 8, !dbg !2622
  %thing_word195 = getelementptr inbounds %struct.proc_bin, ptr %194, i32 0, i32 0, !dbg !2623
  store i64 352, ptr %thing_word195, align 8, !dbg !2624
  %195 = load i64, ptr %real_size, align 8, !dbg !2625
  %196 = load ptr, ptr %to189, align 8, !dbg !2626
  %size196 = getelementptr inbounds %struct.proc_bin, ptr %196, i32 0, i32 1, !dbg !2627
  store i64 %195, ptr %size196, align 8, !dbg !2628
  %197 = load ptr, ptr %from188, align 8, !dbg !2629
  %val197 = getelementptr inbounds %struct.proc_bin, ptr %197, i32 0, i32 3, !dbg !2630
  %198 = load ptr, ptr %val197, align 8, !dbg !2630
  %199 = load ptr, ptr %to189, align 8, !dbg !2631
  %val198 = getelementptr inbounds %struct.proc_bin, ptr %199, i32 0, i32 3, !dbg !2632
  store ptr %198, ptr %val198, align 8, !dbg !2633
  %200 = load ptr, ptr %to189, align 8, !dbg !2634
  %val199 = getelementptr inbounds %struct.proc_bin, ptr %200, i32 0, i32 3, !dbg !2635
  %201 = load ptr, ptr %val199, align 8, !dbg !2635
  %intern200 = getelementptr inbounds %struct.binary, ptr %201, i32 0, i32 0, !dbg !2636
  %refc201 = getelementptr inbounds %struct.binary_internals, ptr %intern200, i32 0, i32 1, !dbg !2637
  call void @erts_refc_inc(ptr noundef %refc201, i64 noundef 2), !dbg !2638
  %202 = load ptr, ptr %from188, align 8, !dbg !2639
  %bytes = getelementptr inbounds %struct.proc_bin, ptr %202, i32 0, i32 4, !dbg !2640
  %203 = load ptr, ptr %bytes, align 8, !dbg !2640
  %204 = load i64, ptr %offset, align 8, !dbg !2641
  %add.ptr202 = getelementptr inbounds i8, ptr %203, i64 %204, !dbg !2642
  %205 = load ptr, ptr %to189, align 8, !dbg !2643
  %bytes203 = getelementptr inbounds %struct.proc_bin, ptr %205, i32 0, i32 4, !dbg !2644
  store ptr %add.ptr202, ptr %bytes203, align 8, !dbg !2645
  %206 = load ptr, ptr %off_heap.addr, align 8, !dbg !2646
  %first204 = getelementptr inbounds %struct.erl_off_heap, ptr %206, i32 0, i32 0, !dbg !2647
  %207 = load ptr, ptr %first204, align 8, !dbg !2647
  %208 = load ptr, ptr %to189, align 8, !dbg !2648
  %next205 = getelementptr inbounds %struct.proc_bin, ptr %208, i32 0, i32 2, !dbg !2649
  store ptr %207, ptr %next205, align 8, !dbg !2650
  %209 = load ptr, ptr %to189, align 8, !dbg !2651
  %flags206 = getelementptr inbounds %struct.proc_bin, ptr %209, i32 0, i32 5, !dbg !2652
  store i64 0, ptr %flags206, align 8, !dbg !2653
  %210 = load ptr, ptr %to189, align 8, !dbg !2654
  %211 = load ptr, ptr %off_heap.addr, align 8, !dbg !2655
  %first207 = getelementptr inbounds %struct.erl_off_heap, ptr %211, i32 0, i32 0, !dbg !2656
  store ptr %210, ptr %first207, align 8, !dbg !2657
  br label %do.body208, !dbg !2658

do.body208:                                       ; preds = %if.end193
  %212 = load ptr, ptr %to189, align 8, !dbg !2659
  %size209 = getelementptr inbounds %struct.proc_bin, ptr %212, i32 0, i32 1, !dbg !2659
  %213 = load i64, ptr %size209, align 8, !dbg !2659
  %div210 = udiv i64 %213, 8, !dbg !2659
  %214 = load ptr, ptr %off_heap.addr, align 8, !dbg !2659
  %overhead211 = getelementptr inbounds %struct.erl_off_heap, ptr %214, i32 0, i32 1, !dbg !2659
  %215 = load i64, ptr %overhead211, align 8, !dbg !2659
  %add212 = add i64 %215, %div210, !dbg !2659
  store i64 %add212, ptr %overhead211, align 8, !dbg !2659
  br label %do.cond213, !dbg !2659

do.cond213:                                       ; preds = %do.body208
  br label %do.end214, !dbg !2659

do.end214:                                        ; preds = %do.cond213
  call void @llvm.lifetime.end.p0(i64 8, ptr %to189) #8, !dbg !2661
  call void @llvm.lifetime.end.p0(i64 8, ptr %from188) #8, !dbg !2661
  br label %if.end215

if.end215:                                        ; preds = %do.end214, %if.then167
  %216 = load ptr, ptr %hbot, align 8, !dbg !2662
  %217 = ptrtoint ptr %216 to i64, !dbg !2662
  %add216 = add i64 %217, 2, !dbg !2662
  %218 = load ptr, ptr %argp, align 8, !dbg !2663
  store i64 %add216, ptr %218, align 8, !dbg !2664
  %219 = load i64, ptr %extra_bytes, align 8, !dbg !2665
  %cmp217 = icmp ne i64 %219, 0, !dbg !2666
  br i1 %cmp217, label %if.then219, label %if.end231, !dbg !2667

if.then219:                                       ; preds = %if.end215
  call void @llvm.lifetime.start.p0(i64 8, ptr %res220) #8, !dbg !2668
  tail call void @llvm.dbg.declare(metadata ptr %res220, metadata !2184, metadata !DIExpression()), !dbg !2669
  %220 = load ptr, ptr %hbot, align 8, !dbg !2670
  %add.ptr221 = getelementptr inbounds i64, ptr %220, i64 -5, !dbg !2670
  store ptr %add.ptr221, ptr %hbot, align 8, !dbg !2670
  %221 = load ptr, ptr %hbot, align 8, !dbg !2671
  store ptr %221, ptr %res220, align 8, !dbg !2672
  %222 = load ptr, ptr %res220, align 8, !dbg !2673
  %thing_word222 = getelementptr inbounds %struct.erl_sub_bin, ptr %222, i32 0, i32 0, !dbg !2674
  store i64 232, ptr %thing_word222, align 8, !dbg !2675
  %223 = load i64, ptr %size148, align 8, !dbg !2676
  %224 = load ptr, ptr %res220, align 8, !dbg !2677
  %size223 = getelementptr inbounds %struct.erl_sub_bin, ptr %224, i32 0, i32 1, !dbg !2678
  store i64 %223, ptr %size223, align 8, !dbg !2679
  %225 = load i64, ptr %bit_size, align 8, !dbg !2680
  %conv224 = trunc i64 %225 to i8, !dbg !2680
  %226 = load ptr, ptr %res220, align 8, !dbg !2681
  %bitsize225 = getelementptr inbounds %struct.erl_sub_bin, ptr %226, i32 0, i32 3, !dbg !2682
  store i8 %conv224, ptr %bitsize225, align 8, !dbg !2683
  %227 = load i64, ptr %bit_offset, align 8, !dbg !2684
  %conv226 = trunc i64 %227 to i8, !dbg !2684
  %228 = load ptr, ptr %res220, align 8, !dbg !2685
  %bitoffs227 = getelementptr inbounds %struct.erl_sub_bin, ptr %228, i32 0, i32 4, !dbg !2686
  store i8 %conv226, ptr %bitoffs227, align 1, !dbg !2687
  %229 = load ptr, ptr %res220, align 8, !dbg !2688
  %offs228 = getelementptr inbounds %struct.erl_sub_bin, ptr %229, i32 0, i32 2, !dbg !2689
  store i64 0, ptr %offs228, align 8, !dbg !2690
  %230 = load ptr, ptr %res220, align 8, !dbg !2691
  %is_writable = getelementptr inbounds %struct.erl_sub_bin, ptr %230, i32 0, i32 5, !dbg !2692
  store i8 0, ptr %is_writable, align 2, !dbg !2693
  %231 = load ptr, ptr %argp, align 8, !dbg !2694
  %232 = load i64, ptr %231, align 8, !dbg !2695
  %233 = load ptr, ptr %res220, align 8, !dbg !2696
  %orig229 = getelementptr inbounds %struct.erl_sub_bin, ptr %233, i32 0, i32 6, !dbg !2697
  store i64 %232, ptr %orig229, align 8, !dbg !2698
  %234 = load ptr, ptr %hbot, align 8, !dbg !2699
  %235 = ptrtoint ptr %234 to i64, !dbg !2699
  %add230 = add i64 %235, 2, !dbg !2699
  %236 = load ptr, ptr %argp, align 8, !dbg !2700
  store i64 %add230, ptr %236, align 8, !dbg !2701
  call void @llvm.lifetime.end.p0(i64 8, ptr %res220) #8, !dbg !2702
  br label %if.end231, !dbg !2703

if.end231:                                        ; preds = %if.then219, %if.end215
  store i32 14, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %real_size) #8, !dbg !2704
  call void @llvm.lifetime.end.p0(i64 8, ptr %extra_bytes) #8, !dbg !2704
  call void @llvm.lifetime.end.p0(i64 8, ptr %size148) #8, !dbg !2704
  call void @llvm.lifetime.end.p0(i64 8, ptr %offset) #8, !dbg !2704
  call void @llvm.lifetime.end.p0(i64 8, ptr %bit_size) #8, !dbg !2704
  call void @llvm.lifetime.end.p0(i64 8, ptr %bit_offset) #8, !dbg !2704
  call void @llvm.lifetime.end.p0(i64 8, ptr %real_bin) #8, !dbg !2704
  call void @llvm.lifetime.end.p0(i64 8, ptr %sb) #8, !dbg !2704
  br label %sw.epilog370

sw.bb240:                                         ; preds = %if.end91
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp) #8, !dbg !2705
  tail call void @llvm.dbg.declare(metadata ptr %funp, metadata !2187, metadata !DIExpression()), !dbg !2706
  %237 = load ptr, ptr %objp, align 8, !dbg !2707
  store ptr %237, ptr %funp, align 8, !dbg !2706
  %238 = load i64, ptr %hdr, align 8, !dbg !2708
  %and241 = and i64 %238, 63, !dbg !2708
  %cmp242 = icmp eq i64 %and241, 60, !dbg !2708
  br i1 %cmp242, label %cond.true244, label %cond.false247, !dbg !2708

cond.true244:                                     ; preds = %sw.bb240
  %239 = load i64, ptr %hdr, align 8, !dbg !2708
  %shr245 = lshr i64 %239, 8, !dbg !2708
  %and246 = and i64 %shr245, 255, !dbg !2708
  br label %cond.end249, !dbg !2708

cond.false247:                                    ; preds = %sw.bb240
  %240 = load i64, ptr %hdr, align 8, !dbg !2708
  %shr248 = lshr i64 %240, 6, !dbg !2708
  br label %cond.end249, !dbg !2708

cond.end249:                                      ; preds = %cond.false247, %cond.true244
  %cond250 = phi i64 [ %and246, %cond.true244 ], [ %shr248, %cond.false247 ], !dbg !2708
  %add251 = add i64 %cond250, 2, !dbg !2709
  %241 = load ptr, ptr %funp, align 8, !dbg !2710
  %num_free = getelementptr inbounds %struct.erl_fun_thing, ptr %241, i32 0, i32 4, !dbg !2711
  %242 = load i8, ptr %num_free, align 1, !dbg !2711
  %conv252 = zext i8 %242 to i64, !dbg !2710
  %add253 = add i64 %add251, %conv252, !dbg !2712
  %conv254 = trunc i64 %add253 to i32, !dbg !2708
  store i32 %conv254, ptr %i, align 4, !dbg !2713
  %243 = load ptr, ptr %htop, align 8, !dbg !2714
  store ptr %243, ptr %tp, align 8, !dbg !2715
  br label %while.cond255, !dbg !2716

while.cond255:                                    ; preds = %while.body258, %cond.end249
  %244 = load i32, ptr %i, align 4, !dbg !2717
  %dec256 = add nsw i32 %244, -1, !dbg !2717
  store i32 %dec256, ptr %i, align 4, !dbg !2717
  %tobool257 = icmp ne i32 %244, 0, !dbg !2716
  br i1 %tobool257, label %while.body258, label %while.end261, !dbg !2716

while.body258:                                    ; preds = %while.cond255
  %245 = load ptr, ptr %objp, align 8, !dbg !2718
  %incdec.ptr259 = getelementptr inbounds i64, ptr %245, i32 1, !dbg !2718
  store ptr %incdec.ptr259, ptr %objp, align 8, !dbg !2718
  %246 = load i64, ptr %245, align 8, !dbg !2720
  %247 = load ptr, ptr %htop, align 8, !dbg !2721
  %incdec.ptr260 = getelementptr inbounds i64, ptr %247, i32 1, !dbg !2721
  store ptr %incdec.ptr260, ptr %htop, align 8, !dbg !2721
  store i64 %246, ptr %247, align 8, !dbg !2722
  br label %while.cond255, !dbg !2716, !llvm.loop !2723

while.end261:                                     ; preds = %while.cond255
  %248 = load ptr, ptr %tp, align 8, !dbg !2725
  store ptr %248, ptr %funp, align 8, !dbg !2726
  %249 = load ptr, ptr %funp, align 8, !dbg !2727
  %creator = getelementptr inbounds %struct.erl_fun_thing, ptr %249, i32 0, i32 5, !dbg !2727
  %250 = load i64, ptr %creator, align 8, !dbg !2727
  %cmp262 = icmp ne i64 %250, 16715, !dbg !2727
  br i1 %cmp262, label %if.then264, label %if.else270, !dbg !2729

if.then264:                                       ; preds = %while.end261
  %251 = load ptr, ptr %off_heap.addr, align 8, !dbg !2730
  %first265 = getelementptr inbounds %struct.erl_off_heap, ptr %251, i32 0, i32 0, !dbg !2732
  %252 = load ptr, ptr %first265, align 8, !dbg !2732
  %253 = load ptr, ptr %funp, align 8, !dbg !2733
  %next266 = getelementptr inbounds %struct.erl_fun_thing, ptr %253, i32 0, i32 2, !dbg !2734
  store ptr %252, ptr %next266, align 8, !dbg !2735
  %254 = load ptr, ptr %funp, align 8, !dbg !2736
  %255 = load ptr, ptr %off_heap.addr, align 8, !dbg !2737
  %first267 = getelementptr inbounds %struct.erl_off_heap, ptr %255, i32 0, i32 0, !dbg !2738
  store ptr %254, ptr %first267, align 8, !dbg !2739
  %256 = load ptr, ptr %funp, align 8, !dbg !2740
  %entry268 = getelementptr inbounds %struct.erl_fun_thing, ptr %256, i32 0, i32 1, !dbg !2741
  %257 = load ptr, ptr %entry268, align 8, !dbg !2742
  %refc269 = getelementptr inbounds %struct.erl_fun_entry, ptr %257, i32 0, i32 7, !dbg !2743
  call void @erts_refc_inc(ptr noundef %refc269, i64 noundef 2), !dbg !2744
  br label %if.end271, !dbg !2745

if.else270:                                       ; preds = %while.end261
  br label %if.end271

if.end271:                                        ; preds = %if.else270, %if.then264
  %258 = load ptr, ptr %tp, align 8, !dbg !2746
  %259 = ptrtoint ptr %258 to i64, !dbg !2746
  %add272 = add i64 %259, 2, !dbg !2746
  %260 = load ptr, ptr %argp, align 8, !dbg !2747
  store i64 %add272, ptr %260, align 8, !dbg !2748
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp) #8, !dbg !2749
  br label %sw.epilog370, !dbg !2750

sw.bb273:                                         ; preds = %if.end91, %if.end91, %if.end91
  call void @llvm.lifetime.start.p0(i64 8, ptr %etp) #8, !dbg !2751
  tail call void @llvm.dbg.declare(metadata ptr %etp, metadata !2189, metadata !DIExpression()), !dbg !2752
  %261 = load ptr, ptr %objp, align 8, !dbg !2753
  store ptr %261, ptr %etp, align 8, !dbg !2752
  %262 = load ptr, ptr %etp, align 8, !dbg !2754
  %node = getelementptr inbounds %struct.external_thing_, ptr %262, i32 0, i32 1, !dbg !2755
  %263 = load ptr, ptr %node, align 8, !dbg !2755
  %264 = load ptr, ptr %htop, align 8, !dbg !2756
  %265 = ptrtoint ptr %264 to i64, !dbg !2756
  %add274 = add i64 %265, 2, !dbg !2756
  %call275 = call i64 @erts_ref_node_entry(ptr noundef %263, i32 noundef 2, i64 noundef %add274), !dbg !2757
  call void @llvm.lifetime.end.p0(i64 8, ptr %etp) #8, !dbg !2758
  br label %L_off_heap_node_container_common, !dbg !2759

L_off_heap_node_container_common:                 ; preds = %if.then341, %sw.bb273
  tail call void @llvm.dbg.label(metadata !2191), !dbg !2760
  call void @llvm.lifetime.start.p0(i64 8, ptr %ohhp) #8, !dbg !2761
  tail call void @llvm.dbg.declare(metadata ptr %ohhp, metadata !2192, metadata !DIExpression()), !dbg !2762
  %266 = load ptr, ptr %htop, align 8, !dbg !2763
  store ptr %266, ptr %ohhp, align 8, !dbg !2764
  %267 = load i64, ptr %hdr, align 8, !dbg !2765
  %and276 = and i64 %267, 63, !dbg !2765
  %cmp277 = icmp eq i64 %and276, 60, !dbg !2765
  br i1 %cmp277, label %cond.true279, label %cond.false282, !dbg !2765

cond.true279:                                     ; preds = %L_off_heap_node_container_common
  %268 = load i64, ptr %hdr, align 8, !dbg !2765
  %shr280 = lshr i64 %268, 8, !dbg !2765
  %and281 = and i64 %shr280, 255, !dbg !2765
  br label %cond.end284, !dbg !2765

cond.false282:                                    ; preds = %L_off_heap_node_container_common
  %269 = load i64, ptr %hdr, align 8, !dbg !2765
  %shr283 = lshr i64 %269, 6, !dbg !2765
  br label %cond.end284, !dbg !2765

cond.end284:                                      ; preds = %cond.false282, %cond.true279
  %cond285 = phi i64 [ %and281, %cond.true279 ], [ %shr283, %cond.false282 ], !dbg !2765
  %add286 = add i64 %cond285, 1, !dbg !2766
  %conv287 = trunc i64 %add286 to i32, !dbg !2765
  store i32 %conv287, ptr %i, align 4, !dbg !2767
  %270 = load ptr, ptr %htop, align 8, !dbg !2768
  %271 = ptrtoint ptr %270 to i64, !dbg !2768
  %add288 = add i64 %271, 2, !dbg !2768
  %272 = load ptr, ptr %argp, align 8, !dbg !2769
  store i64 %add288, ptr %272, align 8, !dbg !2770
  %273 = load ptr, ptr %htop, align 8, !dbg !2771
  store ptr %273, ptr %tp, align 8, !dbg !2772
  br label %while.cond289, !dbg !2773

while.cond289:                                    ; preds = %while.body292, %cond.end284
  %274 = load i32, ptr %i, align 4, !dbg !2774
  %dec290 = add nsw i32 %274, -1, !dbg !2774
  store i32 %dec290, ptr %i, align 4, !dbg !2774
  %tobool291 = icmp ne i32 %274, 0, !dbg !2773
  br i1 %tobool291, label %while.body292, label %while.end295, !dbg !2773

while.body292:                                    ; preds = %while.cond289
  %275 = load ptr, ptr %objp, align 8, !dbg !2775
  %incdec.ptr293 = getelementptr inbounds i64, ptr %275, i32 1, !dbg !2775
  store ptr %incdec.ptr293, ptr %objp, align 8, !dbg !2775
  %276 = load i64, ptr %275, align 8, !dbg !2777
  %277 = load ptr, ptr %htop, align 8, !dbg !2778
  %incdec.ptr294 = getelementptr inbounds i64, ptr %277, i32 1, !dbg !2778
  store ptr %incdec.ptr294, ptr %htop, align 8, !dbg !2778
  store i64 %276, ptr %277, align 8, !dbg !2779
  br label %while.cond289, !dbg !2773, !llvm.loop !2780

while.end295:                                     ; preds = %while.cond289
  %278 = load ptr, ptr %off_heap.addr, align 8, !dbg !2782
  %first296 = getelementptr inbounds %struct.erl_off_heap, ptr %278, i32 0, i32 0, !dbg !2783
  %279 = load ptr, ptr %first296, align 8, !dbg !2783
  %280 = load ptr, ptr %ohhp, align 8, !dbg !2784
  %next297 = getelementptr inbounds %struct.erl_off_heap_header, ptr %280, i32 0, i32 2, !dbg !2785
  store ptr %279, ptr %next297, align 8, !dbg !2786
  %281 = load ptr, ptr %ohhp, align 8, !dbg !2787
  %282 = load ptr, ptr %off_heap.addr, align 8, !dbg !2788
  %first298 = getelementptr inbounds %struct.erl_off_heap, ptr %282, i32 0, i32 0, !dbg !2789
  store ptr %281, ptr %first298, align 8, !dbg !2790
  call void @llvm.lifetime.end.p0(i64 8, ptr %ohhp) #8, !dbg !2791
  br label %sw.epilog370, !dbg !2792

sw.bb299:                                         ; preds = %if.end91
  %283 = load ptr, ptr %htop, align 8, !dbg !2793
  store ptr %283, ptr %tp, align 8, !dbg !2794
  %284 = load i64, ptr %hdr, align 8, !dbg !2795
  %shr300 = lshr i64 %284, 6, !dbg !2795
  %and301 = and i64 %shr300, 3, !dbg !2795
  switch i64 %and301, label %sw.default330 [
    i64 0, label %sw.bb302
    i64 3, label %sw.bb314
    i64 2, label %sw.bb314
    i64 1, label %sw.bb317
  ], !dbg !2796

sw.bb302:                                         ; preds = %sw.bb299
  %285 = load ptr, ptr %objp, align 8, !dbg !2797
  %size303 = getelementptr inbounds %struct.flatmap_s, ptr %285, i32 0, i32 1, !dbg !2797
  %286 = load i64, ptr %size303, align 8, !dbg !2797
  %add304 = add i64 %286, 3, !dbg !2799
  %conv305 = trunc i64 %add304 to i32, !dbg !2797
  store i32 %conv305, ptr %i, align 4, !dbg !2800
  %287 = load ptr, ptr %htop, align 8, !dbg !2801
  %288 = ptrtoint ptr %287 to i64, !dbg !2801
  %add306 = add i64 %288, 2, !dbg !2801
  %289 = load ptr, ptr %argp, align 8, !dbg !2802
  store i64 %add306, ptr %289, align 8, !dbg !2803
  br label %while.cond307, !dbg !2804

while.cond307:                                    ; preds = %while.body310, %sw.bb302
  %290 = load i32, ptr %i, align 4, !dbg !2805
  %dec308 = add nsw i32 %290, -1, !dbg !2805
  store i32 %dec308, ptr %i, align 4, !dbg !2805
  %tobool309 = icmp ne i32 %290, 0, !dbg !2804
  br i1 %tobool309, label %while.body310, label %while.end313, !dbg !2804

while.body310:                                    ; preds = %while.cond307
  %291 = load ptr, ptr %objp, align 8, !dbg !2806
  %incdec.ptr311 = getelementptr inbounds i64, ptr %291, i32 1, !dbg !2806
  store ptr %incdec.ptr311, ptr %objp, align 8, !dbg !2806
  %292 = load i64, ptr %291, align 8, !dbg !2808
  %293 = load ptr, ptr %htop, align 8, !dbg !2809
  %incdec.ptr312 = getelementptr inbounds i64, ptr %293, i32 1, !dbg !2809
  store ptr %incdec.ptr312, ptr %htop, align 8, !dbg !2809
  store i64 %292, ptr %293, align 8, !dbg !2810
  br label %while.cond307, !dbg !2804, !llvm.loop !2811

while.end313:                                     ; preds = %while.cond307
  br label %sw.epilog, !dbg !2813

sw.bb314:                                         ; preds = %sw.bb299, %sw.bb299
  %294 = load ptr, ptr %objp, align 8, !dbg !2814
  %incdec.ptr315 = getelementptr inbounds i64, ptr %294, i32 1, !dbg !2814
  store ptr %incdec.ptr315, ptr %objp, align 8, !dbg !2814
  %295 = load i64, ptr %294, align 8, !dbg !2815
  %296 = load ptr, ptr %htop, align 8, !dbg !2816
  %incdec.ptr316 = getelementptr inbounds i64, ptr %296, i32 1, !dbg !2816
  store ptr %incdec.ptr316, ptr %htop, align 8, !dbg !2816
  store i64 %295, ptr %296, align 8, !dbg !2817
  br label %sw.bb317, !dbg !2818

sw.bb317:                                         ; preds = %sw.bb299, %sw.bb314
  %297 = load i64, ptr %hdr, align 8, !dbg !2819
  %shr318 = lshr i64 %297, 16, !dbg !2819
  %and319 = and i64 %shr318, 65535, !dbg !2819
  %conv320 = trunc i64 %and319 to i32, !dbg !2819
  %298 = call i32 @llvm.ctpop.i32(i32 %conv320), !dbg !2819
  %add321 = add i32 1, %298, !dbg !2820
  store i32 %add321, ptr %i, align 4, !dbg !2821
  br label %while.cond322, !dbg !2822

while.cond322:                                    ; preds = %while.body325, %sw.bb317
  %299 = load i32, ptr %i, align 4, !dbg !2823
  %dec323 = add nsw i32 %299, -1, !dbg !2823
  store i32 %dec323, ptr %i, align 4, !dbg !2823
  %tobool324 = icmp ne i32 %299, 0, !dbg !2822
  br i1 %tobool324, label %while.body325, label %while.end328, !dbg !2822

while.body325:                                    ; preds = %while.cond322
  %300 = load ptr, ptr %objp, align 8, !dbg !2824
  %incdec.ptr326 = getelementptr inbounds i64, ptr %300, i32 1, !dbg !2824
  store ptr %incdec.ptr326, ptr %objp, align 8, !dbg !2824
  %301 = load i64, ptr %300, align 8, !dbg !2826
  %302 = load ptr, ptr %htop, align 8, !dbg !2827
  %incdec.ptr327 = getelementptr inbounds i64, ptr %302, i32 1, !dbg !2827
  store ptr %incdec.ptr327, ptr %htop, align 8, !dbg !2827
  store i64 %301, ptr %302, align 8, !dbg !2828
  br label %while.cond322, !dbg !2822, !llvm.loop !2829

while.end328:                                     ; preds = %while.cond322
  %303 = load ptr, ptr %tp, align 8, !dbg !2831
  %304 = ptrtoint ptr %303 to i64, !dbg !2831
  %add329 = add i64 %304, 2, !dbg !2831
  %305 = load ptr, ptr %argp, align 8, !dbg !2832
  store i64 %add329, ptr %305, align 8, !dbg !2833
  br label %sw.epilog, !dbg !2834

sw.default330:                                    ; preds = %sw.bb299
  %306 = load i64, ptr %hdr, align 8, !dbg !2835
  %shr331 = lshr i64 %306, 6, !dbg !2835
  %and332 = and i64 %shr331, 3, !dbg !2835
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.8, i64 noundef %and332) #9, !dbg !2836
  unreachable, !dbg !2836

sw.epilog:                                        ; preds = %while.end328, %while.end313
  br label %sw.epilog370, !dbg !2837

sw.bb333:                                         ; preds = %if.end91
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.9) #9, !dbg !2838
  unreachable, !dbg !2838

sw.bb334:                                         ; preds = %if.end91
  %307 = load ptr, ptr %objp, align 8, !dbg !2839
  %308 = load i64, ptr %307, align 8, !dbg !2839
  %cmp335 = icmp eq i64 %308, 144, !dbg !2839
  %conv336 = zext i1 %cmp335 to i32, !dbg !2839
  %309 = load ptr, ptr %objp, align 8, !dbg !2839
  %marker = getelementptr inbounds %struct.ErtsORefThing, ptr %309, i32 0, i32 1, !dbg !2839
  %310 = load i32, ptr %marker, align 8, !dbg !2839
  %cmp337 = icmp ne i32 %310, -1, !dbg !2839
  %conv338 = zext i1 %cmp337 to i32, !dbg !2839
  %and339 = and i32 %conv336, %conv338, !dbg !2839
  %tobool340 = icmp ne i32 %and339, 0, !dbg !2839
  br i1 %tobool340, label %if.then341, label %if.end345, !dbg !2840

if.then341:                                       ; preds = %sw.bb334
  call void @llvm.lifetime.start.p0(i64 8, ptr %mreft) #8, !dbg !2841
  tail call void @llvm.dbg.declare(metadata ptr %mreft, metadata !2194, metadata !DIExpression()), !dbg !2842
  %311 = load ptr, ptr %objp, align 8, !dbg !2843
  store ptr %311, ptr %mreft, align 8, !dbg !2842
  %312 = load ptr, ptr %mreft, align 8, !dbg !2844
  %mb = getelementptr inbounds %struct.ErtsMRefThing, ptr %312, i32 0, i32 1, !dbg !2845
  %313 = load ptr, ptr %mb, align 8, !dbg !2845
  %intern342 = getelementptr inbounds %struct.magic_binary, ptr %313, i32 0, i32 0, !dbg !2846
  %refc343 = getelementptr inbounds %struct.binary_internals, ptr %intern342, i32 0, i32 1, !dbg !2847
  call void @erts_refc_inc(ptr noundef %refc343, i64 noundef 2), !dbg !2848
  store i32 25, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %mreft) #8, !dbg !2849
  br label %L_off_heap_node_container_common

if.end345:                                        ; preds = %sw.bb334
  br label %sw.default346, !dbg !2839

sw.default346:                                    ; preds = %if.end91, %if.end345
  %314 = load i64, ptr %hdr, align 8, !dbg !2850
  %and347 = and i64 %314, 63, !dbg !2850
  %cmp348 = icmp eq i64 %and347, 60, !dbg !2850
  br i1 %cmp348, label %cond.true350, label %cond.false353, !dbg !2850

cond.true350:                                     ; preds = %sw.default346
  %315 = load i64, ptr %hdr, align 8, !dbg !2850
  %shr351 = lshr i64 %315, 8, !dbg !2850
  %and352 = and i64 %shr351, 255, !dbg !2850
  br label %cond.end355, !dbg !2850

cond.false353:                                    ; preds = %sw.default346
  %316 = load i64, ptr %hdr, align 8, !dbg !2850
  %shr354 = lshr i64 %316, 6, !dbg !2850
  br label %cond.end355, !dbg !2850

cond.end355:                                      ; preds = %cond.false353, %cond.true350
  %cond356 = phi i64 [ %and352, %cond.true350 ], [ %shr354, %cond.false353 ], !dbg !2850
  %add357 = add i64 %cond356, 1, !dbg !2851
  %conv358 = trunc i64 %add357 to i32, !dbg !2850
  store i32 %conv358, ptr %i, align 4, !dbg !2852
  %317 = load i32, ptr %i, align 4, !dbg !2853
  %318 = load ptr, ptr %hbot, align 8, !dbg !2854
  %idx.ext359 = sext i32 %317 to i64, !dbg !2854
  %idx.neg360 = sub i64 0, %idx.ext359, !dbg !2854
  %add.ptr361 = getelementptr inbounds i64, ptr %318, i64 %idx.neg360, !dbg !2854
  store ptr %add.ptr361, ptr %hbot, align 8, !dbg !2854
  %319 = load ptr, ptr %hbot, align 8, !dbg !2855
  store ptr %319, ptr %tp, align 8, !dbg !2856
  %320 = load ptr, ptr %hbot, align 8, !dbg !2857
  %321 = ptrtoint ptr %320 to i64, !dbg !2857
  %add362 = add i64 %321, 2, !dbg !2857
  %322 = load ptr, ptr %argp, align 8, !dbg !2858
  store i64 %add362, ptr %322, align 8, !dbg !2859
  br label %while.cond363, !dbg !2860

while.cond363:                                    ; preds = %while.body366, %cond.end355
  %323 = load i32, ptr %i, align 4, !dbg !2861
  %dec364 = add nsw i32 %323, -1, !dbg !2861
  store i32 %dec364, ptr %i, align 4, !dbg !2861
  %tobool365 = icmp ne i32 %323, 0, !dbg !2860
  br i1 %tobool365, label %while.body366, label %while.end369, !dbg !2860

while.body366:                                    ; preds = %while.cond363
  %324 = load ptr, ptr %objp, align 8, !dbg !2862
  %incdec.ptr367 = getelementptr inbounds i64, ptr %324, i32 1, !dbg !2862
  store ptr %incdec.ptr367, ptr %objp, align 8, !dbg !2862
  %325 = load i64, ptr %324, align 8, !dbg !2864
  %326 = load ptr, ptr %tp, align 8, !dbg !2865
  %incdec.ptr368 = getelementptr inbounds i64, ptr %326, i32 1, !dbg !2865
  store ptr %incdec.ptr368, ptr %tp, align 8, !dbg !2865
  store i64 %325, ptr %326, align 8, !dbg !2866
  br label %while.cond363, !dbg !2860, !llvm.loop !2867

while.end369:                                     ; preds = %while.cond363
  br label %sw.epilog370, !dbg !2869

sw.epilog370:                                     ; preds = %while.end369, %sw.epilog, %while.end295, %if.end271, %if.end231, %do.end144, %cleanup.cont, %cleanup
  br label %sw.epilog393, !dbg !2870

sw.bb371:                                         ; preds = %while.body
  %327 = load i64, ptr %obj.addr, align 8, !dbg !2871
  %and372 = and i64 %327, 60, !dbg !2871
  %cmp373 = icmp eq i64 %and372, 0, !dbg !2871
  br i1 %cmp373, label %lor.lhs.false, label %if.then377, !dbg !2873

lor.lhs.false:                                    ; preds = %sw.bb371
  %328 = load ptr, ptr %hp, align 8, !dbg !2874
  %329 = load ptr, ptr %const_tuple, align 8, !dbg !2875
  %cmp375 = icmp eq ptr %328, %329, !dbg !2876
  br i1 %cmp375, label %if.then377, label %if.else390, !dbg !2877

if.then377:                                       ; preds = %lor.lhs.false, %sw.bb371
  %330 = load i64, ptr %obj.addr, align 8, !dbg !2878
  %and378 = and i64 %330, 63, !dbg !2878
  %cmp379 = icmp eq i64 %and378, 60, !dbg !2878
  br i1 %cmp379, label %cond.true381, label %cond.false384, !dbg !2878

cond.true381:                                     ; preds = %if.then377
  %331 = load i64, ptr %obj.addr, align 8, !dbg !2878
  %shr382 = lshr i64 %331, 8, !dbg !2878
  %and383 = and i64 %shr382, 255, !dbg !2878
  br label %cond.end386, !dbg !2878

cond.false384:                                    ; preds = %if.then377
  %332 = load i64, ptr %obj.addr, align 8, !dbg !2878
  %shr385 = lshr i64 %332, 6, !dbg !2878
  br label %cond.end386, !dbg !2878

cond.end386:                                      ; preds = %cond.false384, %cond.true381
  %cond387 = phi i64 [ %and383, %cond.true381 ], [ %shr385, %cond.false384 ], !dbg !2878
  %add388 = add i64 %cond387, 1, !dbg !2880
  %333 = load ptr, ptr %hp, align 8, !dbg !2881
  %add.ptr389 = getelementptr inbounds i64, ptr %333, i64 %add388, !dbg !2881
  store ptr %add.ptr389, ptr %hp, align 8, !dbg !2881
  br label %if.end392, !dbg !2882

if.else390:                                       ; preds = %lor.lhs.false
  %334 = load ptr, ptr %hp, align 8, !dbg !2883
  %incdec.ptr391 = getelementptr inbounds i64, ptr %334, i32 1, !dbg !2883
  store ptr %incdec.ptr391, ptr %hp, align 8, !dbg !2883
  br label %if.end392

if.end392:                                        ; preds = %if.else390, %cond.end386
  br label %sw.epilog393, !dbg !2885

sw.epilog393:                                     ; preds = %while.body, %if.end392, %sw.epilog370, %if.then90, %if.then74, %if.then19, %sw.bb12
  br label %while.cond, !dbg !2279, !llvm.loop !2886

while.end394:                                     ; preds = %while.cond
  %335 = load ptr, ptr %bsz.addr, align 8, !dbg !2888
  %tobool395 = icmp ne ptr %335, null, !dbg !2888
  br i1 %tobool395, label %if.then396, label %if.else400, !dbg !2890

if.then396:                                       ; preds = %while.end394
  %336 = load ptr, ptr %htop, align 8, !dbg !2891
  %337 = load ptr, ptr %hpp.addr, align 8, !dbg !2893
  store ptr %336, ptr %337, align 8, !dbg !2894
  %338 = load ptr, ptr %hend, align 8, !dbg !2895
  %339 = load ptr, ptr %hbot, align 8, !dbg !2896
  %sub.ptr.lhs.cast397 = ptrtoint ptr %338 to i64, !dbg !2897
  %sub.ptr.rhs.cast398 = ptrtoint ptr %339 to i64, !dbg !2897
  %sub.ptr.sub399 = sub i64 %sub.ptr.lhs.cast397, %sub.ptr.rhs.cast398, !dbg !2897
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub399, 8, !dbg !2897
  %340 = load ptr, ptr %bsz.addr, align 8, !dbg !2898
  store i64 %sub.ptr.div, ptr %340, align 8, !dbg !2899
  br label %if.end406, !dbg !2900

if.else400:                                       ; preds = %while.end394
  %341 = load ptr, ptr %htop, align 8, !dbg !2901
  %342 = load ptr, ptr %hbot, align 8, !dbg !2904
  %cmp401 = icmp ugt ptr %341, %342, !dbg !2905
  br i1 %cmp401, label %if.then403, label %if.end404, !dbg !2906

if.then403:                                       ; preds = %if.else400
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.10) #9, !dbg !2907
  unreachable, !dbg !2907

if.end404:                                        ; preds = %if.else400
  %343 = load ptr, ptr %hstart, align 8, !dbg !2909
  %344 = load i64, ptr %hsize, align 8, !dbg !2910
  %add.ptr405 = getelementptr inbounds i8, ptr %343, i64 %344, !dbg !2911
  %345 = load ptr, ptr %hpp.addr, align 8, !dbg !2912
  store ptr %add.ptr405, ptr %345, align 8, !dbg !2913
  br label %if.end406

if.end406:                                        ; preds = %if.end404, %if.then396
  %346 = load i64, ptr %res, align 8, !dbg !2914
  store i64 %346, ptr %retval, align 8, !dbg !2915
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup407, !dbg !2915

cleanup407:                                       ; preds = %if.end406, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %hend) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_tuple) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %argp) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %tailp) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %elem) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %objp) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %hbot) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %htop) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %hsize) #8, !dbg !2916
  call void @llvm.lifetime.end.p0(i64 8, ptr %hstart) #8, !dbg !2916
  %347 = load i64, ptr %retval, align 8, !dbg !2916
  ret i64 %347, !dbg !2916

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @erts_is_literal(i64 noundef %tptr, ptr noundef %ptr) #4 !dbg !2917 {
entry:
  %tptr.addr = alloca i64, align 8
  %ptr.addr = alloca ptr, align 8
  store i64 %tptr, ptr %tptr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %tptr.addr, metadata !2921, metadata !DIExpression()), !dbg !2923
  store ptr %ptr, ptr %ptr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !2922, metadata !DIExpression()), !dbg !2924
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !2925
  %call = call i32 @erts_is_in_literal_range(ptr noundef %0), !dbg !2926
  ret i32 %call, !dbg !2927
}

declare !dbg !2928 void @erl_grow_estack(ptr noundef, i64 noundef) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.ctpop.i32(i32) #5

; Function Attrs: noreturn
declare !dbg !2932 void @erts_exit(i32 noundef, ptr noundef, ...) #6

; Function Attrs: inlinehint nounwind uwtable
define internal void @erts_free(i32 noundef %type, ptr noundef %ptr) #2 !dbg !2937 {
entry:
  %type.addr = alloca i32, align 4
  %ptr.addr = alloca ptr, align 8
  store i32 %type, ptr %type.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !2941, metadata !DIExpression()), !dbg !2943
  store ptr %ptr, ptr %ptr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !2942, metadata !DIExpression()), !dbg !2944
  br label %do.body, !dbg !2945

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !2946

do.end:                                           ; preds = %do.body
  %0 = load i32, ptr %type.addr, align 4, !dbg !2948
  %shr = lshr i32 %0, 0, !dbg !2948
  %and = and i32 %shr, 15, !dbg !2948
  %idxprom = zext i32 %and to i64, !dbg !2949
  %arrayidx = getelementptr inbounds [13 x %struct.ErtsAllocatorFunctions_t], ptr @erts_allctrs, i64 0, i64 %idxprom, !dbg !2949
  %free = getelementptr inbounds %struct.ErtsAllocatorFunctions_t, ptr %arrayidx, i32 0, i32 2, !dbg !2950
  %1 = load ptr, ptr %free, align 16, !dbg !2950
  %2 = load i32, ptr %type.addr, align 4, !dbg !2951
  %3 = load i32, ptr %type.addr, align 4, !dbg !2952
  %shr1 = lshr i32 %3, 0, !dbg !2952
  %and2 = and i32 %shr1, 15, !dbg !2952
  %idxprom3 = zext i32 %and2 to i64, !dbg !2953
  %arrayidx4 = getelementptr inbounds [13 x %struct.ErtsAllocatorFunctions_t], ptr @erts_allctrs, i64 0, i64 %idxprom3, !dbg !2953
  %extra = getelementptr inbounds %struct.ErtsAllocatorFunctions_t, ptr %arrayidx4, i32 0, i32 3, !dbg !2954
  %4 = load ptr, ptr %extra, align 8, !dbg !2954
  %5 = load ptr, ptr %ptr.addr, align 8, !dbg !2955
  call void %1(i32 noundef %2, ptr noundef %4, ptr noundef %5), !dbg !2956
  br label %do.body5, !dbg !2957

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !2958

do.end6:                                          ; preds = %do.body5
  ret void, !dbg !2960
}

; Function Attrs: nounwind uwtable
define dso_local i64 @size_shared(i64 noundef %obj) #0 !dbg !2961 {
entry:
  %retval = alloca i64, align 8
  %obj.addr = alloca i64, align 8
  %saved_obj = alloca i64, align 8
  %sum = alloca i64, align 8
  %ptr = alloca ptr, align 8
  %s_default_equeue = alloca [16 x i64], align 16
  %s = alloca %struct.ErtsEQueue, align 8
  %b_default_wstack = alloca [16 x i64], align 16
  %b = alloca %struct.ErtsWStack_, align 8
  %b_bitoffs = alloca i32, align 4
  %b_offset = alloca i32, align 4
  %b_buffer = alloca i64, align 8
  %head = alloca i64, align 8
  %tail = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %hdr = alloca i64, align 8
  %arity = alloca i32, align 4
  %funp = alloca ptr, align 8
  %eterms = alloca i32, align 4
  %sz = alloca i32, align 4
  %sb = alloca ptr, align 8
  %extra_bytes = alloca i64, align 8
  %hdr217 = alloca i64, align 8
  %mp = alloca ptr, align 8
  %n = alloca i64, align 8
  %n306 = alloca i64, align 8
  %head435 = alloca i64, align 8
  %tail436 = alloca i64, align 8
  %saved = alloca i64, align 8
  %result = alloca i64, align 8
  %hdr514 = alloca i64, align 8
  %arity530 = alloca i32, align 4
  %funp574 = alloca ptr, align 8
  %eterms575 = alloca i32, align 4
  %sz579 = alloca i32, align 4
  %mp627 = alloca ptr, align 8
  %n628 = alloca i64, align 8
  %n660 = alloca i64, align 8
  store i64 %obj, ptr %obj.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !2965, metadata !DIExpression()), !dbg !3054
  call void @llvm.lifetime.start.p0(i64 8, ptr %saved_obj) #8, !dbg !3055
  tail call void @llvm.dbg.declare(metadata ptr %saved_obj, metadata !2966, metadata !DIExpression()), !dbg !3056
  %0 = load i64, ptr %obj.addr, align 8, !dbg !3057
  store i64 %0, ptr %saved_obj, align 8, !dbg !3056
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum) #8, !dbg !3058
  tail call void @llvm.dbg.declare(metadata ptr %sum, metadata !2967, metadata !DIExpression()), !dbg !3059
  store i64 0, ptr %sum, align 8, !dbg !3059
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #8, !dbg !3060
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !2968, metadata !DIExpression()), !dbg !3061
  call void @llvm.lifetime.start.p0(i64 128, ptr %s_default_equeue) #8, !dbg !3062
  tail call void @llvm.dbg.declare(metadata ptr %s_default_equeue, metadata !2969, metadata !DIExpression()), !dbg !3062
  call void @llvm.lifetime.start.p0(i64 48, ptr %s) #8, !dbg !3062
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !2971, metadata !DIExpression()), !dbg !3062
  %start = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3062
  %arraydecay = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3062
  store ptr %arraydecay, ptr %start, align 8, !dbg !3062
  %front = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3062
  %arraydecay1 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3062
  store ptr %arraydecay1, ptr %front, align 8, !dbg !3062
  %back = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3062
  %arraydecay2 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3062
  store ptr %arraydecay2, ptr %back, align 8, !dbg !3062
  %possibly_empty = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3062
  store i32 1, ptr %possibly_empty, align 8, !dbg !3062
  %end = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3062
  %arraydecay3 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3062
  %add.ptr = getelementptr inbounds i64, ptr %arraydecay3, i64 16, !dbg !3062
  store ptr %add.ptr, ptr %end, align 8, !dbg !3062
  %alloc_type = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 5, !dbg !3062
  store i32 1506, ptr %alloc_type, align 8, !dbg !3062
  call void @llvm.lifetime.start.p0(i64 128, ptr %b_default_wstack) #8, !dbg !3063
  tail call void @llvm.dbg.declare(metadata ptr %b_default_wstack, metadata !2981, metadata !DIExpression()), !dbg !3063
  call void @llvm.lifetime.start.p0(i64 40, ptr %b) #8, !dbg !3063
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !2982, metadata !DIExpression()), !dbg !3063
  %wstart = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !3063
  %arraydecay4 = getelementptr inbounds [16 x i64], ptr %b_default_wstack, i64 0, i64 0, !dbg !3063
  store ptr %arraydecay4, ptr %wstart, align 8, !dbg !3063
  %wsp = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !3063
  %arraydecay5 = getelementptr inbounds [16 x i64], ptr %b_default_wstack, i64 0, i64 0, !dbg !3063
  store ptr %arraydecay5, ptr %wsp, align 8, !dbg !3063
  %wend = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 2, !dbg !3063
  %arraydecay6 = getelementptr inbounds [16 x i64], ptr %b_default_wstack, i64 0, i64 0, !dbg !3063
  %add.ptr7 = getelementptr inbounds i64, ptr %arraydecay6, i64 16, !dbg !3063
  store ptr %add.ptr7, ptr %wend, align 8, !dbg !3063
  %wdefault = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 3, !dbg !3063
  %arraydecay8 = getelementptr inbounds [16 x i64], ptr %b_default_wstack, i64 0, i64 0, !dbg !3063
  store ptr %arraydecay8, ptr %wdefault, align 8, !dbg !3063
  %alloc_type9 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 4, !dbg !3063
  store i32 1506, ptr %alloc_type9, align 8, !dbg !3063
  call void @llvm.lifetime.start.p0(i64 4, ptr %b_bitoffs) #8, !dbg !3063
  tail call void @llvm.dbg.declare(metadata ptr %b_bitoffs, metadata !2992, metadata !DIExpression()), !dbg !3063
  store i32 0, ptr %b_bitoffs, align 4, !dbg !3063
  call void @llvm.lifetime.start.p0(i64 4, ptr %b_offset) #8, !dbg !3063
  tail call void @llvm.dbg.declare(metadata ptr %b_offset, metadata !2993, metadata !DIExpression()), !dbg !3063
  store i32 0, ptr %b_offset, align 4, !dbg !3063
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_buffer) #8, !dbg !3063
  tail call void @llvm.dbg.declare(metadata ptr %b_buffer, metadata !2994, metadata !DIExpression()), !dbg !3063
  store i64 0, ptr %b_buffer, align 8, !dbg !3063
  br label %for.cond, !dbg !3064

for.cond:                                         ; preds = %sw.epilog405, %entry
  %1 = load i64, ptr %obj.addr, align 8, !dbg !3065
  %and = and i64 %1, 3, !dbg !3065
  switch i64 %and, label %sw.default404 [
    i64 1, label %sw.bb
    i64 2, label %sw.bb89
    i64 3, label %sw.bb392
  ], !dbg !3066

sw.bb:                                            ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %head) #8, !dbg !3067
  tail call void @llvm.dbg.declare(metadata ptr %head, metadata !2995, metadata !DIExpression()), !dbg !3068
  call void @llvm.lifetime.start.p0(i64 8, ptr %tail) #8, !dbg !3067
  tail call void @llvm.dbg.declare(metadata ptr %tail, metadata !3001, metadata !DIExpression()), !dbg !3069
  %2 = load i64, ptr %obj.addr, align 8, !dbg !3070
  %sub = sub i64 %2, 1, !dbg !3070
  %3 = inttoptr i64 %sub to ptr, !dbg !3070
  store ptr %3, ptr %ptr, align 8, !dbg !3071
  %4 = load i64, ptr %obj.addr, align 8, !dbg !3072
  %5 = load ptr, ptr %ptr, align 8, !dbg !3074
  %call = call i32 @erts_is_literal(i64 noundef %4, ptr noundef %5), !dbg !3075
  %tobool = icmp ne i32 %call, 0, !dbg !3075
  br i1 %tobool, label %if.then, label %if.end, !dbg !3076

if.then:                                          ; preds = %sw.bb
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3077

if.end:                                           ; preds = %sw.bb
  %6 = load ptr, ptr %ptr, align 8, !dbg !3079
  %arrayidx = getelementptr inbounds i64, ptr %6, i64 0, !dbg !3079
  %7 = load i64, ptr %arrayidx, align 8, !dbg !3079
  store i64 %7, ptr %head, align 8, !dbg !3080
  %8 = load ptr, ptr %ptr, align 8, !dbg !3081
  %arrayidx10 = getelementptr inbounds i64, ptr %8, i64 1, !dbg !3081
  %9 = load i64, ptr %arrayidx10, align 8, !dbg !3081
  store i64 %9, ptr %tail, align 8, !dbg !3082
  %10 = load i64, ptr %tail, align 8, !dbg !3083
  %and11 = and i64 %10, 3, !dbg !3083
  %cmp = icmp eq i64 %and11, 0, !dbg !3085
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !3086

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i64, ptr %head, align 8, !dbg !3087
  %and12 = and i64 %11, 3, !dbg !3087
  %cmp13 = icmp eq i64 %and12, 0, !dbg !3088
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3089

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3090

if.end15:                                         ; preds = %lor.lhs.false
  %12 = load i64, ptr %tail, align 8, !dbg !3092
  %and16 = and i64 %12, 3, !dbg !3092
  switch i64 %and16, label %sw.epilog [
    i64 1, label %sw.bb17
    i64 3, label %sw.bb20
    i64 2, label %sw.bb29
  ], !dbg !3093

sw.bb17:                                          ; preds = %if.end15
  %13 = load i64, ptr %tail, align 8, !dbg !3094
  %sub18 = sub i64 %13, 1, !dbg !3096
  %or = or i64 %sub18, 0, !dbg !3097
  %14 = load ptr, ptr %ptr, align 8, !dbg !3098
  %arrayidx19 = getelementptr inbounds i64, ptr %14, i64 1, !dbg !3098
  store i64 %or, ptr %arrayidx19, align 8, !dbg !3099
  br label %sw.epilog, !dbg !3100

sw.bb20:                                          ; preds = %if.end15
  %15 = load i64, ptr %head, align 8, !dbg !3101
  %16 = load i64, ptr %head, align 8, !dbg !3102
  %and21 = and i64 %16, 3, !dbg !3102
  %sub22 = sub i64 %15, %and21, !dbg !3103
  %or23 = or i64 %sub22, 0, !dbg !3104
  %17 = load ptr, ptr %ptr, align 8, !dbg !3105
  %arrayidx24 = getelementptr inbounds i64, ptr %17, i64 0, !dbg !3105
  store i64 %or23, ptr %arrayidx24, align 8, !dbg !3106
  %18 = load i64, ptr %tail, align 8, !dbg !3107
  %sub25 = sub i64 %18, 3, !dbg !3108
  %19 = load i64, ptr %head, align 8, !dbg !3109
  %and26 = and i64 %19, 3, !dbg !3109
  %or27 = or i64 %sub25, %and26, !dbg !3110
  %20 = load ptr, ptr %ptr, align 8, !dbg !3111
  %arrayidx28 = getelementptr inbounds i64, ptr %20, i64 1, !dbg !3111
  store i64 %or27, ptr %arrayidx28, align 8, !dbg !3112
  br label %sw.epilog, !dbg !3113

sw.bb29:                                          ; preds = %if.end15
  br label %do.body, !dbg !3114

do.body:                                          ; preds = %sw.bb29
  %21 = load i64, ptr %head, align 8, !dbg !3115
  %and30 = and i64 %21, 3, !dbg !3115
  %22 = load i32, ptr %b_bitoffs, align 4, !dbg !3115
  %sh_prom = zext i32 %22 to i64, !dbg !3115
  %shl = shl i64 %and30, %sh_prom, !dbg !3115
  %23 = load i64, ptr %b_buffer, align 8, !dbg !3115
  %or31 = or i64 %23, %shl, !dbg !3115
  store i64 %or31, ptr %b_buffer, align 8, !dbg !3115
  %24 = load i32, ptr %b_bitoffs, align 4, !dbg !3115
  %add = add nsw i32 %24, 2, !dbg !3115
  store i32 %add, ptr %b_bitoffs, align 4, !dbg !3115
  %25 = load i32, ptr %b_bitoffs, align 4, !dbg !3117
  %conv = sext i32 %25 to i64, !dbg !3117
  %cmp32 = icmp uge i64 %conv, 64, !dbg !3117
  br i1 %cmp32, label %if.then34, label %if.end46, !dbg !3115

if.then34:                                        ; preds = %do.body
  br label %do.body35, !dbg !3119

do.body35:                                        ; preds = %if.then34
  br label %do.body36, !dbg !3121

do.body36:                                        ; preds = %do.body35
  %wend37 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 2, !dbg !3123
  %26 = load ptr, ptr %wend37, align 8, !dbg !3123
  %wsp38 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !3123
  %27 = load ptr, ptr %wsp38, align 8, !dbg !3123
  %sub.ptr.lhs.cast = ptrtoint ptr %26 to i64, !dbg !3123
  %sub.ptr.rhs.cast = ptrtoint ptr %27 to i64, !dbg !3123
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3123
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !3123
  %cmp39 = icmp slt i64 %sub.ptr.div, 1, !dbg !3123
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !3126

if.then41:                                        ; preds = %do.body36
  call void @erl_grow_wstack(ptr noundef %b, i64 noundef 1), !dbg !3127
  br label %if.end42, !dbg !3127

if.end42:                                         ; preds = %if.then41, %do.body36
  br label %do.cond, !dbg !3126

do.cond:                                          ; preds = %if.end42
  br label %do.end, !dbg !3126

do.end:                                           ; preds = %do.cond
  %28 = load i64, ptr %b_buffer, align 8, !dbg !3121
  %wsp43 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !3121
  %29 = load ptr, ptr %wsp43, align 8, !dbg !3121
  %incdec.ptr = getelementptr inbounds i64, ptr %29, i32 1, !dbg !3121
  store ptr %incdec.ptr, ptr %wsp43, align 8, !dbg !3121
  store i64 %28, ptr %29, align 8, !dbg !3121
  br label %do.cond44, !dbg !3121

do.cond44:                                        ; preds = %do.end
  br label %do.end45, !dbg !3121

do.end45:                                         ; preds = %do.cond44
  store i32 0, ptr %b_bitoffs, align 4, !dbg !3119
  store i64 0, ptr %b_buffer, align 8, !dbg !3119
  br label %if.end46, !dbg !3119

if.end46:                                         ; preds = %do.end45, %do.body
  br label %do.cond47, !dbg !3115

do.cond47:                                        ; preds = %if.end46
  br label %do.end48, !dbg !3115

do.end48:                                         ; preds = %do.cond47
  %30 = load i64, ptr %head, align 8, !dbg !3129
  %31 = load i64, ptr %head, align 8, !dbg !3130
  %and49 = and i64 %31, 3, !dbg !3130
  %sub50 = sub i64 %30, %and49, !dbg !3131
  %or51 = or i64 %sub50, 0, !dbg !3132
  %32 = load ptr, ptr %ptr, align 8, !dbg !3133
  %arrayidx52 = getelementptr inbounds i64, ptr %32, i64 0, !dbg !3133
  store i64 %or51, ptr %arrayidx52, align 8, !dbg !3134
  %33 = load i64, ptr %tail, align 8, !dbg !3135
  %sub53 = sub i64 %33, 2, !dbg !3136
  %or54 = or i64 %sub53, 0, !dbg !3137
  %34 = load ptr, ptr %ptr, align 8, !dbg !3138
  %arrayidx55 = getelementptr inbounds i64, ptr %34, i64 1, !dbg !3138
  store i64 %or54, ptr %arrayidx55, align 8, !dbg !3139
  br label %sw.epilog, !dbg !3140

sw.epilog:                                        ; preds = %if.end15, %do.end48, %sw.bb20, %sw.bb17
  %35 = load i64, ptr %sum, align 8, !dbg !3141
  %add56 = add i64 %35, 2, !dbg !3141
  store i64 %add56, ptr %sum, align 8, !dbg !3141
  %36 = load i64, ptr %head, align 8, !dbg !3142
  %and57 = and i64 %36, 3, !dbg !3142
  %cmp58 = icmp eq i64 %and57, 3, !dbg !3142
  br i1 %cmp58, label %if.end87, label %if.then60, !dbg !3144

if.then60:                                        ; preds = %sw.epilog
  br label %do.body61, !dbg !3145

do.body61:                                        ; preds = %if.then60
  %back62 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3147
  %37 = load ptr, ptr %back62, align 8, !dbg !3147
  %front63 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3147
  %38 = load ptr, ptr %front63, align 8, !dbg !3147
  %cmp64 = icmp eq ptr %37, %38, !dbg !3147
  br i1 %cmp64, label %land.lhs.true, label %if.end70, !dbg !3147

land.lhs.true:                                    ; preds = %do.body61
  %possibly_empty66 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3147
  %39 = load i32, ptr %possibly_empty66, align 8, !dbg !3147
  %tobool67 = icmp ne i32 %39, 0, !dbg !3147
  br i1 %tobool67, label %if.end70, label %if.then68, !dbg !3150

if.then68:                                        ; preds = %land.lhs.true
  %arraydecay69 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3151
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %arraydecay69), !dbg !3151
  br label %if.end70, !dbg !3151

if.end70:                                         ; preds = %if.then68, %land.lhs.true, %do.body61
  br label %do.body71, !dbg !3150

do.body71:                                        ; preds = %if.end70
  %possibly_empty72 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3153
  store i32 0, ptr %possibly_empty72, align 8, !dbg !3153
  %40 = load i64, ptr %head, align 8, !dbg !3153
  %back73 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3153
  %41 = load ptr, ptr %back73, align 8, !dbg !3153
  store i64 %40, ptr %41, align 8, !dbg !3153
  %back74 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3155
  %42 = load ptr, ptr %back74, align 8, !dbg !3155
  %incdec.ptr75 = getelementptr inbounds i64, ptr %42, i32 1, !dbg !3155
  store ptr %incdec.ptr75, ptr %back74, align 8, !dbg !3155
  %end76 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3155
  %43 = load ptr, ptr %end76, align 8, !dbg !3155
  %cmp77 = icmp eq ptr %incdec.ptr75, %43, !dbg !3155
  br i1 %cmp77, label %if.then79, label %if.end82, !dbg !3153

if.then79:                                        ; preds = %do.body71
  %start80 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3157
  %44 = load ptr, ptr %start80, align 8, !dbg !3157
  %back81 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3157
  store ptr %44, ptr %back81, align 8, !dbg !3157
  br label %if.end82, !dbg !3157

if.end82:                                         ; preds = %if.then79, %do.body71
  br label %do.cond83, !dbg !3153

do.cond83:                                        ; preds = %if.end82
  br label %do.end84, !dbg !3153

do.end84:                                         ; preds = %do.cond83
  br label %do.cond85, !dbg !3150

do.cond85:                                        ; preds = %do.end84
  br label %do.end86, !dbg !3150

do.end86:                                         ; preds = %do.cond85
  br label %if.end87, !dbg !3159

if.end87:                                         ; preds = %do.end86, %sw.epilog
  %45 = load i64, ptr %tail, align 8, !dbg !3160
  store i64 %45, ptr %obj.addr, align 8, !dbg !3161
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3162

cleanup:                                          ; preds = %if.then14, %if.then, %if.end87
  call void @llvm.lifetime.end.p0(i64 8, ptr %tail) #8, !dbg !3163
  call void @llvm.lifetime.end.p0(i64 8, ptr %head) #8, !dbg !3163
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup757 [
    i32 4, label %sw.epilog405
    i32 5, label %pop_next
  ]

sw.bb89:                                          ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr) #8, !dbg !3164
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !3002, metadata !DIExpression()), !dbg !3165
  %46 = load i64, ptr %obj.addr, align 8, !dbg !3166
  %sub90 = sub i64 %46, 2, !dbg !3166
  %47 = inttoptr i64 %sub90 to ptr, !dbg !3166
  store ptr %47, ptr %ptr, align 8, !dbg !3167
  %48 = load i64, ptr %obj.addr, align 8, !dbg !3168
  %49 = load ptr, ptr %ptr, align 8, !dbg !3170
  %call91 = call i32 @erts_is_literal(i64 noundef %48, ptr noundef %49), !dbg !3171
  %tobool92 = icmp ne i32 %call91, 0, !dbg !3171
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !3172

if.then93:                                        ; preds = %sw.bb89
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup391, !dbg !3173

if.end94:                                         ; preds = %sw.bb89
  %50 = load ptr, ptr %ptr, align 8, !dbg !3175
  %51 = load i64, ptr %50, align 8, !dbg !3176
  store i64 %51, ptr %hdr, align 8, !dbg !3177
  %52 = load i64, ptr %hdr, align 8, !dbg !3178
  %and95 = and i64 %52, 3, !dbg !3178
  %cmp96 = icmp ne i64 %and95, 0, !dbg !3180
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !3181

if.then98:                                        ; preds = %if.end94
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup391, !dbg !3182

if.end99:                                         ; preds = %if.end94
  %53 = load i64, ptr %hdr, align 8, !dbg !3184
  %54 = load i64, ptr %hdr, align 8, !dbg !3185
  %and100 = and i64 %54, 3, !dbg !3185
  %sub101 = sub i64 %53, %and100, !dbg !3186
  %add102 = add i64 %sub101, 1, !dbg !3187
  %55 = load ptr, ptr %ptr, align 8, !dbg !3188
  store i64 %add102, ptr %55, align 8, !dbg !3189
  %56 = load i64, ptr %hdr, align 8, !dbg !3190
  %and103 = and i64 %56, 63, !dbg !3191
  switch i64 %and103, label %sw.default378 [
    i64 0, label %sw.bb104
    i64 20, label %sw.bb154
    i64 40, label %sw.bb216
    i64 60, label %sw.bb256
    i64 4, label %sw.bb377
  ], !dbg !3192

sw.bb104:                                         ; preds = %if.end99
  call void @llvm.lifetime.start.p0(i64 4, ptr %arity) #8, !dbg !3193
  tail call void @llvm.dbg.declare(metadata ptr %arity, metadata !3004, metadata !DIExpression()), !dbg !3194
  %57 = load i64, ptr %hdr, align 8, !dbg !3195
  %and105 = and i64 %57, 63, !dbg !3195
  %cmp106 = icmp eq i64 %and105, 60, !dbg !3195
  br i1 %cmp106, label %cond.true, label %cond.false, !dbg !3195

cond.true:                                        ; preds = %sw.bb104
  %58 = load i64, ptr %hdr, align 8, !dbg !3195
  %shr = lshr i64 %58, 8, !dbg !3195
  %and108 = and i64 %shr, 255, !dbg !3195
  br label %cond.end, !dbg !3195

cond.false:                                       ; preds = %sw.bb104
  %59 = load i64, ptr %hdr, align 8, !dbg !3195
  %shr109 = lshr i64 %59, 6, !dbg !3195
  br label %cond.end, !dbg !3195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %and108, %cond.true ], [ %shr109, %cond.false ], !dbg !3195
  %conv110 = trunc i64 %cond to i32, !dbg !3195
  store i32 %conv110, ptr %arity, align 4, !dbg !3194
  %60 = load i32, ptr %arity, align 4, !dbg !3196
  %add111 = add nsw i32 %60, 1, !dbg !3197
  %conv112 = sext i32 %add111 to i64, !dbg !3196
  %61 = load i64, ptr %sum, align 8, !dbg !3198
  %add113 = add i64 %61, %conv112, !dbg !3198
  store i64 %add113, ptr %sum, align 8, !dbg !3198
  %62 = load i32, ptr %arity, align 4, !dbg !3199
  %cmp114 = icmp eq i32 %62, 0, !dbg !3201
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !3202

if.then116:                                       ; preds = %cond.end
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup153, !dbg !3203

if.end117:                                        ; preds = %cond.end
  br label %while.cond, !dbg !3205

while.cond:                                       ; preds = %if.end152, %if.end117
  %63 = load i32, ptr %arity, align 4, !dbg !3206
  %dec = add nsw i32 %63, -1, !dbg !3206
  store i32 %dec, ptr %arity, align 4, !dbg !3206
  %cmp118 = icmp sgt i32 %63, 0, !dbg !3207
  br i1 %cmp118, label %while.body, label %while.end, !dbg !3205

while.body:                                       ; preds = %while.cond
  %64 = load ptr, ptr %ptr, align 8, !dbg !3208
  %incdec.ptr120 = getelementptr inbounds i64, ptr %64, i32 1, !dbg !3208
  store ptr %incdec.ptr120, ptr %ptr, align 8, !dbg !3208
  %65 = load i64, ptr %incdec.ptr120, align 8, !dbg !3210
  store i64 %65, ptr %obj.addr, align 8, !dbg !3211
  %66 = load i64, ptr %obj.addr, align 8, !dbg !3212
  %and121 = and i64 %66, 3, !dbg !3212
  %cmp122 = icmp eq i64 %and121, 3, !dbg !3212
  br i1 %cmp122, label %if.end152, label %if.then124, !dbg !3214

if.then124:                                       ; preds = %while.body
  br label %do.body125, !dbg !3215

do.body125:                                       ; preds = %if.then124
  %back126 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3217
  %67 = load ptr, ptr %back126, align 8, !dbg !3217
  %front127 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3217
  %68 = load ptr, ptr %front127, align 8, !dbg !3217
  %cmp128 = icmp eq ptr %67, %68, !dbg !3217
  br i1 %cmp128, label %land.lhs.true130, label %if.end135, !dbg !3217

land.lhs.true130:                                 ; preds = %do.body125
  %possibly_empty131 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3217
  %69 = load i32, ptr %possibly_empty131, align 8, !dbg !3217
  %tobool132 = icmp ne i32 %69, 0, !dbg !3217
  br i1 %tobool132, label %if.end135, label %if.then133, !dbg !3220

if.then133:                                       ; preds = %land.lhs.true130
  %arraydecay134 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3221
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %arraydecay134), !dbg !3221
  br label %if.end135, !dbg !3221

if.end135:                                        ; preds = %if.then133, %land.lhs.true130, %do.body125
  br label %do.body136, !dbg !3220

do.body136:                                       ; preds = %if.end135
  %possibly_empty137 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3223
  store i32 0, ptr %possibly_empty137, align 8, !dbg !3223
  %70 = load i64, ptr %obj.addr, align 8, !dbg !3223
  %back138 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3223
  %71 = load ptr, ptr %back138, align 8, !dbg !3223
  store i64 %70, ptr %71, align 8, !dbg !3223
  %back139 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3225
  %72 = load ptr, ptr %back139, align 8, !dbg !3225
  %incdec.ptr140 = getelementptr inbounds i64, ptr %72, i32 1, !dbg !3225
  store ptr %incdec.ptr140, ptr %back139, align 8, !dbg !3225
  %end141 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3225
  %73 = load ptr, ptr %end141, align 8, !dbg !3225
  %cmp142 = icmp eq ptr %incdec.ptr140, %73, !dbg !3225
  br i1 %cmp142, label %if.then144, label %if.end147, !dbg !3223

if.then144:                                       ; preds = %do.body136
  %start145 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3227
  %74 = load ptr, ptr %start145, align 8, !dbg !3227
  %back146 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3227
  store ptr %74, ptr %back146, align 8, !dbg !3227
  br label %if.end147, !dbg !3227

if.end147:                                        ; preds = %if.then144, %do.body136
  br label %do.cond148, !dbg !3223

do.cond148:                                       ; preds = %if.end147
  br label %do.end149, !dbg !3223

do.end149:                                        ; preds = %do.cond148
  br label %do.cond150, !dbg !3220

do.cond150:                                       ; preds = %do.end149
  br label %do.end151, !dbg !3220

do.end151:                                        ; preds = %do.cond150
  br label %if.end152, !dbg !3229

if.end152:                                        ; preds = %do.end151, %while.body
  br label %while.cond, !dbg !3205, !llvm.loop !3230

while.end:                                        ; preds = %while.cond
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup153, !dbg !3232

cleanup153:                                       ; preds = %while.end, %if.then116
  call void @llvm.lifetime.end.p0(i64 4, ptr %arity) #8, !dbg !3233
  br label %cleanup391

sw.bb154:                                         ; preds = %if.end99
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp) #8, !dbg !3234
  tail call void @llvm.dbg.declare(metadata ptr %funp, metadata !3007, metadata !DIExpression()), !dbg !3235
  %75 = load ptr, ptr %ptr, align 8, !dbg !3236
  store ptr %75, ptr %funp, align 8, !dbg !3235
  call void @llvm.lifetime.start.p0(i64 4, ptr %eterms) #8, !dbg !3237
  tail call void @llvm.dbg.declare(metadata ptr %eterms, metadata !3009, metadata !DIExpression()), !dbg !3238
  %76 = load ptr, ptr %funp, align 8, !dbg !3239
  %num_free = getelementptr inbounds %struct.erl_fun_thing, ptr %76, i32 0, i32 4, !dbg !3240
  %77 = load i8, ptr %num_free, align 1, !dbg !3240
  %conv155 = zext i8 %77 to i32, !dbg !3239
  %add156 = add nsw i32 1, %conv155, !dbg !3241
  store i32 %add156, ptr %eterms, align 4, !dbg !3238
  call void @llvm.lifetime.start.p0(i64 4, ptr %sz) #8, !dbg !3242
  tail call void @llvm.dbg.declare(metadata ptr %sz, metadata !3010, metadata !DIExpression()), !dbg !3243
  %78 = load i64, ptr %hdr, align 8, !dbg !3244
  %and157 = and i64 %78, 63, !dbg !3244
  %cmp158 = icmp eq i64 %and157, 60, !dbg !3244
  br i1 %cmp158, label %cond.true160, label %cond.false163, !dbg !3244

cond.true160:                                     ; preds = %sw.bb154
  %79 = load i64, ptr %hdr, align 8, !dbg !3244
  %shr161 = lshr i64 %79, 8, !dbg !3244
  %and162 = and i64 %shr161, 255, !dbg !3244
  br label %cond.end165, !dbg !3244

cond.false163:                                    ; preds = %sw.bb154
  %80 = load i64, ptr %hdr, align 8, !dbg !3244
  %shr164 = lshr i64 %80, 6, !dbg !3244
  br label %cond.end165, !dbg !3244

cond.end165:                                      ; preds = %cond.false163, %cond.true160
  %cond166 = phi i64 [ %and162, %cond.true160 ], [ %shr164, %cond.false163 ], !dbg !3244
  %conv167 = trunc i64 %cond166 to i32, !dbg !3244
  store i32 %conv167, ptr %sz, align 4, !dbg !3243
  %81 = load i32, ptr %sz, align 4, !dbg !3245
  %add168 = add i32 1, %81, !dbg !3246
  %82 = load i32, ptr %eterms, align 4, !dbg !3247
  %add169 = add i32 %add168, %82, !dbg !3248
  %conv170 = zext i32 %add169 to i64, !dbg !3249
  %83 = load i64, ptr %sum, align 8, !dbg !3250
  %add171 = add i64 %83, %conv170, !dbg !3250
  store i64 %add171, ptr %sum, align 8, !dbg !3250
  %84 = load i32, ptr %sz, align 4, !dbg !3251
  %add172 = add i32 1, %84, !dbg !3252
  %85 = load ptr, ptr %ptr, align 8, !dbg !3253
  %idx.ext = zext i32 %add172 to i64, !dbg !3253
  %add.ptr173 = getelementptr inbounds i64, ptr %85, i64 %idx.ext, !dbg !3253
  store ptr %add.ptr173, ptr %ptr, align 8, !dbg !3253
  br label %while.cond174, !dbg !3254

while.cond174:                                    ; preds = %if.end211, %cond.end165
  %86 = load i32, ptr %eterms, align 4, !dbg !3255
  %dec175 = add i32 %86, -1, !dbg !3255
  store i32 %dec175, ptr %eterms, align 4, !dbg !3255
  %cmp176 = icmp ugt i32 %86, 0, !dbg !3256
  br i1 %cmp176, label %while.body178, label %while.end212, !dbg !3254

while.body178:                                    ; preds = %while.cond174
  %87 = load ptr, ptr %ptr, align 8, !dbg !3257
  %incdec.ptr179 = getelementptr inbounds i64, ptr %87, i32 1, !dbg !3257
  store ptr %incdec.ptr179, ptr %ptr, align 8, !dbg !3257
  %88 = load i64, ptr %87, align 8, !dbg !3259
  store i64 %88, ptr %obj.addr, align 8, !dbg !3260
  %89 = load i64, ptr %obj.addr, align 8, !dbg !3261
  %and180 = and i64 %89, 3, !dbg !3261
  %cmp181 = icmp eq i64 %and180, 3, !dbg !3261
  br i1 %cmp181, label %if.end211, label %if.then183, !dbg !3263

if.then183:                                       ; preds = %while.body178
  br label %do.body184, !dbg !3264

do.body184:                                       ; preds = %if.then183
  %back185 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3266
  %90 = load ptr, ptr %back185, align 8, !dbg !3266
  %front186 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3266
  %91 = load ptr, ptr %front186, align 8, !dbg !3266
  %cmp187 = icmp eq ptr %90, %91, !dbg !3266
  br i1 %cmp187, label %land.lhs.true189, label %if.end194, !dbg !3266

land.lhs.true189:                                 ; preds = %do.body184
  %possibly_empty190 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3266
  %92 = load i32, ptr %possibly_empty190, align 8, !dbg !3266
  %tobool191 = icmp ne i32 %92, 0, !dbg !3266
  br i1 %tobool191, label %if.end194, label %if.then192, !dbg !3269

if.then192:                                       ; preds = %land.lhs.true189
  %arraydecay193 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3270
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %arraydecay193), !dbg !3270
  br label %if.end194, !dbg !3270

if.end194:                                        ; preds = %if.then192, %land.lhs.true189, %do.body184
  br label %do.body195, !dbg !3269

do.body195:                                       ; preds = %if.end194
  %possibly_empty196 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3272
  store i32 0, ptr %possibly_empty196, align 8, !dbg !3272
  %93 = load i64, ptr %obj.addr, align 8, !dbg !3272
  %back197 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3272
  %94 = load ptr, ptr %back197, align 8, !dbg !3272
  store i64 %93, ptr %94, align 8, !dbg !3272
  %back198 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3274
  %95 = load ptr, ptr %back198, align 8, !dbg !3274
  %incdec.ptr199 = getelementptr inbounds i64, ptr %95, i32 1, !dbg !3274
  store ptr %incdec.ptr199, ptr %back198, align 8, !dbg !3274
  %end200 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3274
  %96 = load ptr, ptr %end200, align 8, !dbg !3274
  %cmp201 = icmp eq ptr %incdec.ptr199, %96, !dbg !3274
  br i1 %cmp201, label %if.then203, label %if.end206, !dbg !3272

if.then203:                                       ; preds = %do.body195
  %start204 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3276
  %97 = load ptr, ptr %start204, align 8, !dbg !3276
  %back205 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3276
  store ptr %97, ptr %back205, align 8, !dbg !3276
  br label %if.end206, !dbg !3276

if.end206:                                        ; preds = %if.then203, %do.body195
  br label %do.cond207, !dbg !3272

do.cond207:                                       ; preds = %if.end206
  br label %do.end208, !dbg !3272

do.end208:                                        ; preds = %do.cond207
  br label %do.cond209, !dbg !3269

do.cond209:                                       ; preds = %do.end208
  br label %do.end210, !dbg !3269

do.end210:                                        ; preds = %do.cond209
  br label %if.end211, !dbg !3278

if.end211:                                        ; preds = %do.end210, %while.body178
  br label %while.cond174, !dbg !3254, !llvm.loop !3279

while.end212:                                     ; preds = %while.cond174
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %sz) #8, !dbg !3281
  call void @llvm.lifetime.end.p0(i64 4, ptr %eterms) #8, !dbg !3281
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp) #8, !dbg !3281
  br label %cleanup391

sw.bb216:                                         ; preds = %if.end99
  call void @llvm.lifetime.start.p0(i64 8, ptr %sb) #8, !dbg !3282
  tail call void @llvm.dbg.declare(metadata ptr %sb, metadata !3011, metadata !DIExpression()), !dbg !3283
  %98 = load ptr, ptr %ptr, align 8, !dbg !3284
  store ptr %98, ptr %sb, align 8, !dbg !3283
  call void @llvm.lifetime.start.p0(i64 8, ptr %extra_bytes) #8, !dbg !3285
  tail call void @llvm.dbg.declare(metadata ptr %extra_bytes, metadata !3013, metadata !DIExpression()), !dbg !3286
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr217) #8, !dbg !3287
  tail call void @llvm.dbg.declare(metadata ptr %hdr217, metadata !3014, metadata !DIExpression()), !dbg !3288
  %99 = load ptr, ptr %sb, align 8, !dbg !3289
  %bitsize = getelementptr inbounds %struct.erl_sub_bin, ptr %99, i32 0, i32 3, !dbg !3291
  %100 = load i8, ptr %bitsize, align 8, !dbg !3291
  %conv218 = zext i8 %100 to i32, !dbg !3289
  %101 = load ptr, ptr %sb, align 8, !dbg !3292
  %bitoffs = getelementptr inbounds %struct.erl_sub_bin, ptr %101, i32 0, i32 4, !dbg !3293
  %102 = load i8, ptr %bitoffs, align 1, !dbg !3293
  %conv219 = zext i8 %102 to i32, !dbg !3292
  %add220 = add nsw i32 %conv218, %conv219, !dbg !3294
  %cmp221 = icmp sgt i32 %add220, 8, !dbg !3295
  br i1 %cmp221, label %if.then223, label %if.else, !dbg !3296

if.then223:                                       ; preds = %sw.bb216
  %103 = load i64, ptr %sum, align 8, !dbg !3297
  %add224 = add i64 %103, 5, !dbg !3297
  store i64 %add224, ptr %sum, align 8, !dbg !3297
  store i64 2, ptr %extra_bytes, align 8, !dbg !3299
  br label %if.end236, !dbg !3300

if.else:                                          ; preds = %sw.bb216
  %104 = load ptr, ptr %sb, align 8, !dbg !3301
  %bitsize225 = getelementptr inbounds %struct.erl_sub_bin, ptr %104, i32 0, i32 3, !dbg !3303
  %105 = load i8, ptr %bitsize225, align 8, !dbg !3303
  %conv226 = zext i8 %105 to i32, !dbg !3301
  %106 = load ptr, ptr %sb, align 8, !dbg !3304
  %bitoffs227 = getelementptr inbounds %struct.erl_sub_bin, ptr %106, i32 0, i32 4, !dbg !3305
  %107 = load i8, ptr %bitoffs227, align 1, !dbg !3305
  %conv228 = zext i8 %107 to i32, !dbg !3304
  %add229 = add nsw i32 %conv226, %conv228, !dbg !3306
  %cmp230 = icmp sgt i32 %add229, 0, !dbg !3307
  br i1 %cmp230, label %if.then232, label %if.else234, !dbg !3308

if.then232:                                       ; preds = %if.else
  %108 = load i64, ptr %sum, align 8, !dbg !3309
  %add233 = add i64 %108, 5, !dbg !3309
  store i64 %add233, ptr %sum, align 8, !dbg !3309
  store i64 1, ptr %extra_bytes, align 8, !dbg !3311
  br label %if.end235, !dbg !3312

if.else234:                                       ; preds = %if.else
  store i64 0, ptr %extra_bytes, align 8, !dbg !3313
  br label %if.end235

if.end235:                                        ; preds = %if.else234, %if.then232
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.then223
  %109 = load ptr, ptr %sb, align 8, !dbg !3315
  %orig = getelementptr inbounds %struct.erl_sub_bin, ptr %109, i32 0, i32 6, !dbg !3315
  %110 = load i64, ptr %orig, align 8, !dbg !3315
  %sub237 = sub i64 %110, 2, !dbg !3315
  %111 = inttoptr i64 %sub237 to ptr, !dbg !3315
  store ptr %111, ptr %ptr, align 8, !dbg !3316
  %112 = load ptr, ptr %ptr, align 8, !dbg !3317
  %113 = load i64, ptr %112, align 8, !dbg !3318
  %and238 = and i64 %113, -4, !dbg !3319
  store i64 %and238, ptr %hdr217, align 8, !dbg !3320
  %114 = load i64, ptr %hdr217, align 8, !dbg !3321
  %and239 = and i64 %114, 60, !dbg !3321
  %cmp240 = icmp eq i64 %and239, 32, !dbg !3323
  br i1 %cmp240, label %if.then242, label %if.else244, !dbg !3324

if.then242:                                       ; preds = %if.end236
  %115 = load i64, ptr %sum, align 8, !dbg !3325
  %add243 = add i64 %115, 6, !dbg !3325
  store i64 %add243, ptr %sum, align 8, !dbg !3325
  br label %if.end252, !dbg !3327

if.else244:                                       ; preds = %if.end236
  %116 = load i64, ptr %obj.addr, align 8, !dbg !3328
  %sub245 = sub i64 %116, 2, !dbg !3328
  %117 = inttoptr i64 %sub245 to ptr, !dbg !3328
  %arrayidx246 = getelementptr inbounds i64, ptr %117, i64 1, !dbg !3328
  %118 = load i64, ptr %arrayidx246, align 8, !dbg !3328
  %119 = load i64, ptr %extra_bytes, align 8, !dbg !3328
  %add247 = add i64 %118, %119, !dbg !3328
  %add248 = add i64 %add247, 8, !dbg !3328
  %sub249 = sub i64 %add248, 1, !dbg !3328
  %div = udiv i64 %sub249, 8, !dbg !3328
  %add250 = add i64 2, %div, !dbg !3328
  %120 = load i64, ptr %sum, align 8, !dbg !3330
  %add251 = add i64 %120, %add250, !dbg !3330
  store i64 %add251, ptr %sum, align 8, !dbg !3330
  br label %if.end252

if.end252:                                        ; preds = %if.else244, %if.then242
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr217) #8, !dbg !3331
  call void @llvm.lifetime.end.p0(i64 8, ptr %extra_bytes) #8, !dbg !3331
  call void @llvm.lifetime.end.p0(i64 8, ptr %sb) #8, !dbg !3331
  br label %cleanup391

sw.bb256:                                         ; preds = %if.end99
  %121 = load i64, ptr %hdr, align 8, !dbg !3332
  %shr257 = lshr i64 %121, 6, !dbg !3332
  %and258 = and i64 %shr257, 3, !dbg !3332
  switch i64 %and258, label %sw.default [
    i64 0, label %sw.bb259
    i64 3, label %sw.bb305
    i64 2, label %sw.bb305
    i64 1, label %sw.bb305
  ], !dbg !3333

sw.bb259:                                         ; preds = %sw.bb256
  call void @llvm.lifetime.start.p0(i64 8, ptr %mp) #8, !dbg !3334
  tail call void @llvm.dbg.declare(metadata ptr %mp, metadata !3015, metadata !DIExpression()), !dbg !3335
  %122 = load i64, ptr %obj.addr, align 8, !dbg !3336
  %sub260 = sub i64 %122, 2, !dbg !3336
  %123 = inttoptr i64 %sub260 to ptr, !dbg !3336
  store ptr %123, ptr %mp, align 8, !dbg !3335
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #8, !dbg !3337
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3018, metadata !DIExpression()), !dbg !3338
  %124 = load ptr, ptr %mp, align 8, !dbg !3339
  %size = getelementptr inbounds %struct.flatmap_s, ptr %124, i32 0, i32 1, !dbg !3339
  %125 = load i64, ptr %size, align 8, !dbg !3339
  %add261 = add i64 %125, 1, !dbg !3340
  store i64 %add261, ptr %n, align 8, !dbg !3338
  %126 = load ptr, ptr %mp, align 8, !dbg !3341
  store ptr %126, ptr %ptr, align 8, !dbg !3342
  %127 = load i64, ptr %n, align 8, !dbg !3343
  %add262 = add i64 %127, 2, !dbg !3344
  %128 = load i64, ptr %sum, align 8, !dbg !3345
  %add263 = add i64 %128, %add262, !dbg !3345
  store i64 %add263, ptr %sum, align 8, !dbg !3345
  %129 = load ptr, ptr %ptr, align 8, !dbg !3346
  %add.ptr264 = getelementptr inbounds i64, ptr %129, i64 2, !dbg !3346
  store ptr %add.ptr264, ptr %ptr, align 8, !dbg !3346
  br label %while.cond265, !dbg !3347

while.cond265:                                    ; preds = %if.end301, %sw.bb259
  %130 = load i64, ptr %n, align 8, !dbg !3348
  %dec266 = add i64 %130, -1, !dbg !3348
  store i64 %dec266, ptr %n, align 8, !dbg !3348
  %tobool267 = icmp ne i64 %130, 0, !dbg !3347
  br i1 %tobool267, label %while.body268, label %while.end302, !dbg !3347

while.body268:                                    ; preds = %while.cond265
  %131 = load ptr, ptr %ptr, align 8, !dbg !3349
  %incdec.ptr269 = getelementptr inbounds i64, ptr %131, i32 1, !dbg !3349
  store ptr %incdec.ptr269, ptr %ptr, align 8, !dbg !3349
  %132 = load i64, ptr %131, align 8, !dbg !3351
  store i64 %132, ptr %obj.addr, align 8, !dbg !3352
  %133 = load i64, ptr %obj.addr, align 8, !dbg !3353
  %and270 = and i64 %133, 3, !dbg !3353
  %cmp271 = icmp eq i64 %and270, 3, !dbg !3353
  br i1 %cmp271, label %if.end301, label %if.then273, !dbg !3355

if.then273:                                       ; preds = %while.body268
  br label %do.body274, !dbg !3356

do.body274:                                       ; preds = %if.then273
  %back275 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3358
  %134 = load ptr, ptr %back275, align 8, !dbg !3358
  %front276 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3358
  %135 = load ptr, ptr %front276, align 8, !dbg !3358
  %cmp277 = icmp eq ptr %134, %135, !dbg !3358
  br i1 %cmp277, label %land.lhs.true279, label %if.end284, !dbg !3358

land.lhs.true279:                                 ; preds = %do.body274
  %possibly_empty280 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3358
  %136 = load i32, ptr %possibly_empty280, align 8, !dbg !3358
  %tobool281 = icmp ne i32 %136, 0, !dbg !3358
  br i1 %tobool281, label %if.end284, label %if.then282, !dbg !3361

if.then282:                                       ; preds = %land.lhs.true279
  %arraydecay283 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3362
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %arraydecay283), !dbg !3362
  br label %if.end284, !dbg !3362

if.end284:                                        ; preds = %if.then282, %land.lhs.true279, %do.body274
  br label %do.body285, !dbg !3361

do.body285:                                       ; preds = %if.end284
  %possibly_empty286 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3364
  store i32 0, ptr %possibly_empty286, align 8, !dbg !3364
  %137 = load i64, ptr %obj.addr, align 8, !dbg !3364
  %back287 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3364
  %138 = load ptr, ptr %back287, align 8, !dbg !3364
  store i64 %137, ptr %138, align 8, !dbg !3364
  %back288 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3366
  %139 = load ptr, ptr %back288, align 8, !dbg !3366
  %incdec.ptr289 = getelementptr inbounds i64, ptr %139, i32 1, !dbg !3366
  store ptr %incdec.ptr289, ptr %back288, align 8, !dbg !3366
  %end290 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3366
  %140 = load ptr, ptr %end290, align 8, !dbg !3366
  %cmp291 = icmp eq ptr %incdec.ptr289, %140, !dbg !3366
  br i1 %cmp291, label %if.then293, label %if.end296, !dbg !3364

if.then293:                                       ; preds = %do.body285
  %start294 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3368
  %141 = load ptr, ptr %start294, align 8, !dbg !3368
  %back295 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3368
  store ptr %141, ptr %back295, align 8, !dbg !3368
  br label %if.end296, !dbg !3368

if.end296:                                        ; preds = %if.then293, %do.body285
  br label %do.cond297, !dbg !3364

do.cond297:                                       ; preds = %if.end296
  br label %do.end298, !dbg !3364

do.end298:                                        ; preds = %do.cond297
  br label %do.cond299, !dbg !3361

do.cond299:                                       ; preds = %do.end298
  br label %do.end300, !dbg !3361

do.end300:                                        ; preds = %do.cond299
  br label %if.end301, !dbg !3370

if.end301:                                        ; preds = %do.end300, %while.body268
  br label %while.cond265, !dbg !3347, !llvm.loop !3371

while.end302:                                     ; preds = %while.cond265
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #8, !dbg !3373
  call void @llvm.lifetime.end.p0(i64 8, ptr %mp) #8, !dbg !3373
  br label %cleanup391

sw.bb305:                                         ; preds = %sw.bb256, %sw.bb256, %sw.bb256
  call void @llvm.lifetime.start.p0(i64 8, ptr %n306) #8, !dbg !3374
  tail call void @llvm.dbg.declare(metadata ptr %n306, metadata !3019, metadata !DIExpression()), !dbg !3375
  %142 = load i64, ptr %hdr, align 8, !dbg !3376
  %shr307 = lshr i64 %142, 16, !dbg !3376
  %and308 = and i64 %shr307, 65535, !dbg !3376
  %conv309 = trunc i64 %and308 to i32, !dbg !3376
  %143 = call i32 @llvm.ctpop.i32(i32 %conv309), !dbg !3376
  %conv310 = zext i32 %143 to i64, !dbg !3376
  store i64 %conv310, ptr %n306, align 8, !dbg !3375
  %144 = load i64, ptr %n306, align 8, !dbg !3377
  %add311 = add i64 1, %144, !dbg !3378
  %145 = load i64, ptr %hdr, align 8, !dbg !3379
  %and312 = and i64 %145, 63, !dbg !3379
  %cmp313 = icmp eq i64 %and312, 60, !dbg !3379
  br i1 %cmp313, label %cond.true315, label %cond.false318, !dbg !3379

cond.true315:                                     ; preds = %sw.bb305
  %146 = load i64, ptr %hdr, align 8, !dbg !3379
  %shr316 = lshr i64 %146, 8, !dbg !3379
  %and317 = and i64 %shr316, 255, !dbg !3379
  br label %cond.end320, !dbg !3379

cond.false318:                                    ; preds = %sw.bb305
  %147 = load i64, ptr %hdr, align 8, !dbg !3379
  %shr319 = lshr i64 %147, 6, !dbg !3379
  br label %cond.end320, !dbg !3379

cond.end320:                                      ; preds = %cond.false318, %cond.true315
  %cond321 = phi i64 [ %and317, %cond.true315 ], [ %shr319, %cond.false318 ], !dbg !3379
  %add322 = add i64 %add311, %cond321, !dbg !3380
  %148 = load i64, ptr %sum, align 8, !dbg !3381
  %add323 = add i64 %148, %add322, !dbg !3381
  store i64 %add323, ptr %sum, align 8, !dbg !3381
  %149 = load i64, ptr %hdr, align 8, !dbg !3382
  %and324 = and i64 %149, 63, !dbg !3382
  %cmp325 = icmp eq i64 %and324, 60, !dbg !3382
  br i1 %cmp325, label %cond.true327, label %cond.false330, !dbg !3382

cond.true327:                                     ; preds = %cond.end320
  %150 = load i64, ptr %hdr, align 8, !dbg !3382
  %shr328 = lshr i64 %150, 8, !dbg !3382
  %and329 = and i64 %shr328, 255, !dbg !3382
  br label %cond.end332, !dbg !3382

cond.false330:                                    ; preds = %cond.end320
  %151 = load i64, ptr %hdr, align 8, !dbg !3382
  %shr331 = lshr i64 %151, 6, !dbg !3382
  br label %cond.end332, !dbg !3382

cond.end332:                                      ; preds = %cond.false330, %cond.true327
  %cond333 = phi i64 [ %and329, %cond.true327 ], [ %shr331, %cond.false330 ], !dbg !3382
  %add334 = add i64 1, %cond333, !dbg !3383
  %152 = load ptr, ptr %ptr, align 8, !dbg !3384
  %add.ptr335 = getelementptr inbounds i64, ptr %152, i64 %add334, !dbg !3384
  store ptr %add.ptr335, ptr %ptr, align 8, !dbg !3384
  br label %while.cond336, !dbg !3385

while.cond336:                                    ; preds = %if.end372, %cond.end332
  %153 = load i64, ptr %n306, align 8, !dbg !3386
  %dec337 = add i64 %153, -1, !dbg !3386
  store i64 %dec337, ptr %n306, align 8, !dbg !3386
  %tobool338 = icmp ne i64 %153, 0, !dbg !3385
  br i1 %tobool338, label %while.body339, label %while.end373, !dbg !3385

while.body339:                                    ; preds = %while.cond336
  %154 = load ptr, ptr %ptr, align 8, !dbg !3387
  %incdec.ptr340 = getelementptr inbounds i64, ptr %154, i32 1, !dbg !3387
  store ptr %incdec.ptr340, ptr %ptr, align 8, !dbg !3387
  %155 = load i64, ptr %154, align 8, !dbg !3389
  store i64 %155, ptr %obj.addr, align 8, !dbg !3390
  %156 = load i64, ptr %obj.addr, align 8, !dbg !3391
  %and341 = and i64 %156, 3, !dbg !3391
  %cmp342 = icmp eq i64 %and341, 3, !dbg !3391
  br i1 %cmp342, label %if.end372, label %if.then344, !dbg !3393

if.then344:                                       ; preds = %while.body339
  br label %do.body345, !dbg !3394

do.body345:                                       ; preds = %if.then344
  %back346 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3396
  %157 = load ptr, ptr %back346, align 8, !dbg !3396
  %front347 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3396
  %158 = load ptr, ptr %front347, align 8, !dbg !3396
  %cmp348 = icmp eq ptr %157, %158, !dbg !3396
  br i1 %cmp348, label %land.lhs.true350, label %if.end355, !dbg !3396

land.lhs.true350:                                 ; preds = %do.body345
  %possibly_empty351 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3396
  %159 = load i32, ptr %possibly_empty351, align 8, !dbg !3396
  %tobool352 = icmp ne i32 %159, 0, !dbg !3396
  br i1 %tobool352, label %if.end355, label %if.then353, !dbg !3399

if.then353:                                       ; preds = %land.lhs.true350
  %arraydecay354 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3400
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %arraydecay354), !dbg !3400
  br label %if.end355, !dbg !3400

if.end355:                                        ; preds = %if.then353, %land.lhs.true350, %do.body345
  br label %do.body356, !dbg !3399

do.body356:                                       ; preds = %if.end355
  %possibly_empty357 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3402
  store i32 0, ptr %possibly_empty357, align 8, !dbg !3402
  %160 = load i64, ptr %obj.addr, align 8, !dbg !3402
  %back358 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3402
  %161 = load ptr, ptr %back358, align 8, !dbg !3402
  store i64 %160, ptr %161, align 8, !dbg !3402
  %back359 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3404
  %162 = load ptr, ptr %back359, align 8, !dbg !3404
  %incdec.ptr360 = getelementptr inbounds i64, ptr %162, i32 1, !dbg !3404
  store ptr %incdec.ptr360, ptr %back359, align 8, !dbg !3404
  %end361 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3404
  %163 = load ptr, ptr %end361, align 8, !dbg !3404
  %cmp362 = icmp eq ptr %incdec.ptr360, %163, !dbg !3404
  br i1 %cmp362, label %if.then364, label %if.end367, !dbg !3402

if.then364:                                       ; preds = %do.body356
  %start365 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3406
  %164 = load ptr, ptr %start365, align 8, !dbg !3406
  %back366 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3406
  store ptr %164, ptr %back366, align 8, !dbg !3406
  br label %if.end367, !dbg !3406

if.end367:                                        ; preds = %if.then364, %do.body356
  br label %do.cond368, !dbg !3402

do.cond368:                                       ; preds = %if.end367
  br label %do.end369, !dbg !3402

do.end369:                                        ; preds = %do.cond368
  br label %do.cond370, !dbg !3399

do.cond370:                                       ; preds = %do.end369
  br label %do.end371, !dbg !3399

do.end371:                                        ; preds = %do.cond370
  br label %if.end372, !dbg !3408

if.end372:                                        ; preds = %do.end371, %while.body339
  br label %while.cond336, !dbg !3385, !llvm.loop !3409

while.end373:                                     ; preds = %while.cond336
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %n306) #8, !dbg !3411
  br label %cleanup391

sw.default:                                       ; preds = %sw.bb256
  %165 = load i64, ptr %hdr, align 8, !dbg !3412
  %shr375 = lshr i64 %165, 6, !dbg !3412
  %and376 = and i64 %shr375, 3, !dbg !3412
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.3, i64 noundef %and376) #9, !dbg !3413
  unreachable, !dbg !3413

sw.bb377:                                         ; preds = %if.end99
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.4) #9, !dbg !3414
  unreachable, !dbg !3414

sw.default378:                                    ; preds = %if.end99
  %166 = load i64, ptr %hdr, align 8, !dbg !3415
  %and379 = and i64 %166, 63, !dbg !3415
  %cmp380 = icmp eq i64 %and379, 60, !dbg !3415
  br i1 %cmp380, label %cond.true382, label %cond.false385, !dbg !3415

cond.true382:                                     ; preds = %sw.default378
  %167 = load i64, ptr %hdr, align 8, !dbg !3415
  %shr383 = lshr i64 %167, 8, !dbg !3415
  %and384 = and i64 %shr383, 255, !dbg !3415
  br label %cond.end387, !dbg !3415

cond.false385:                                    ; preds = %sw.default378
  %168 = load i64, ptr %hdr, align 8, !dbg !3415
  %shr386 = lshr i64 %168, 6, !dbg !3415
  br label %cond.end387, !dbg !3415

cond.end387:                                      ; preds = %cond.false385, %cond.true382
  %cond388 = phi i64 [ %and384, %cond.true382 ], [ %shr386, %cond.false385 ], !dbg !3415
  %add389 = add i64 %cond388, 1, !dbg !3416
  %169 = load i64, ptr %sum, align 8, !dbg !3417
  %add390 = add i64 %169, %add389, !dbg !3417
  store i64 %add390, ptr %sum, align 8, !dbg !3417
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup391, !dbg !3418

cleanup391:                                       ; preds = %cond.end387, %if.then98, %if.then93, %while.end373, %while.end302, %if.end252, %while.end212, %cleanup153
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr) #8, !dbg !3419
  %cleanup.dest393 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest393, label %cleanup757 [
    i32 5, label %pop_next
  ]

sw.bb392:                                         ; preds = %for.cond
  br label %pop_next, !dbg !3420

pop_next:                                         ; preds = %sw.bb392, %cleanup391, %cleanup
  tail call void @llvm.dbg.label(metadata !3021), !dbg !3421
  %back394 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3422
  %170 = load ptr, ptr %back394, align 8, !dbg !3422
  %front395 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3422
  %171 = load ptr, ptr %front395, align 8, !dbg !3422
  %cmp396 = icmp eq ptr %170, %171, !dbg !3422
  br i1 %cmp396, label %land.lhs.true398, label %if.end402, !dbg !3422

land.lhs.true398:                                 ; preds = %pop_next
  %possibly_empty399 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3422
  %172 = load i32, ptr %possibly_empty399, align 8, !dbg !3422
  %tobool400 = icmp ne i32 %172, 0, !dbg !3422
  br i1 %tobool400, label %if.then401, label %if.end402, !dbg !3424

if.then401:                                       ; preds = %land.lhs.true398
  br label %cleanup406, !dbg !3425

if.end402:                                        ; preds = %land.lhs.true398, %pop_next
  %call403 = call i64 @erts_equeue_get(ptr noundef %s), !dbg !3427
  store i64 %call403, ptr %obj.addr, align 8, !dbg !3428
  br label %sw.epilog405, !dbg !3429

sw.default404:                                    ; preds = %for.cond
  %173 = load i64, ptr %obj.addr, align 8, !dbg !3430
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.5, i64 noundef %173) #9, !dbg !3431
  unreachable, !dbg !3431

sw.epilog405:                                     ; preds = %if.end402, %cleanup
  br label %for.cond, !dbg !3432, !llvm.loop !3433

cleanup406:                                       ; preds = %if.then401
  tail call void @llvm.dbg.label(metadata !3022), !dbg !3436
  %174 = load i64, ptr %saved_obj, align 8, !dbg !3437
  store i64 %174, ptr %obj.addr, align 8, !dbg !3438
  br label %do.body407, !dbg !3439

do.body407:                                       ; preds = %cleanup406
  %175 = load i32, ptr %b_bitoffs, align 4, !dbg !3440
  %cmp408 = icmp sgt i32 %175, 0, !dbg !3440
  br i1 %cmp408, label %if.then410, label %if.end429, !dbg !3443

if.then410:                                       ; preds = %do.body407
  br label %do.body411, !dbg !3444

do.body411:                                       ; preds = %if.then410
  br label %do.body412, !dbg !3446

do.body412:                                       ; preds = %do.body411
  %wend413 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 2, !dbg !3448
  %176 = load ptr, ptr %wend413, align 8, !dbg !3448
  %wsp414 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !3448
  %177 = load ptr, ptr %wsp414, align 8, !dbg !3448
  %sub.ptr.lhs.cast415 = ptrtoint ptr %176 to i64, !dbg !3448
  %sub.ptr.rhs.cast416 = ptrtoint ptr %177 to i64, !dbg !3448
  %sub.ptr.sub417 = sub i64 %sub.ptr.lhs.cast415, %sub.ptr.rhs.cast416, !dbg !3448
  %sub.ptr.div418 = sdiv exact i64 %sub.ptr.sub417, 8, !dbg !3448
  %cmp419 = icmp slt i64 %sub.ptr.div418, 1, !dbg !3448
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !3451

if.then421:                                       ; preds = %do.body412
  call void @erl_grow_wstack(ptr noundef %b, i64 noundef 1), !dbg !3452
  br label %if.end422, !dbg !3452

if.end422:                                        ; preds = %if.then421, %do.body412
  br label %do.cond423, !dbg !3451

do.cond423:                                       ; preds = %if.end422
  br label %do.end424, !dbg !3451

do.end424:                                        ; preds = %do.cond423
  %178 = load i64, ptr %b_buffer, align 8, !dbg !3446
  %wsp425 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !3446
  %179 = load ptr, ptr %wsp425, align 8, !dbg !3446
  %incdec.ptr426 = getelementptr inbounds i64, ptr %179, i32 1, !dbg !3446
  store ptr %incdec.ptr426, ptr %wsp425, align 8, !dbg !3446
  store i64 %178, ptr %179, align 8, !dbg !3446
  br label %do.cond427, !dbg !3446

do.cond427:                                       ; preds = %do.end424
  br label %do.end428, !dbg !3446

do.end428:                                        ; preds = %do.cond427
  store i32 0, ptr %b_bitoffs, align 4, !dbg !3444
  br label %if.end429, !dbg !3444

if.end429:                                        ; preds = %do.end428, %do.body407
  br label %do.cond430, !dbg !3443

do.cond430:                                       ; preds = %if.end429
  br label %do.end431, !dbg !3443

do.end431:                                        ; preds = %do.cond430
  br label %for.cond432, !dbg !3454

for.cond432:                                      ; preds = %sw.epilog734, %do.end431
  %180 = load i64, ptr %obj.addr, align 8, !dbg !3455
  %and433 = and i64 %180, 3, !dbg !3455
  switch i64 %and433, label %sw.default733 [
    i64 1, label %sw.bb434
    i64 2, label %sw.bb513
    i64 3, label %sw.bb721
  ], !dbg !3456

sw.bb434:                                         ; preds = %for.cond432
  call void @llvm.lifetime.start.p0(i64 8, ptr %head435) #8, !dbg !3457
  tail call void @llvm.dbg.declare(metadata ptr %head435, metadata !3023, metadata !DIExpression()), !dbg !3458
  call void @llvm.lifetime.start.p0(i64 8, ptr %tail436) #8, !dbg !3457
  tail call void @llvm.dbg.declare(metadata ptr %tail436, metadata !3029, metadata !DIExpression()), !dbg !3459
  %181 = load i64, ptr %obj.addr, align 8, !dbg !3460
  %sub437 = sub i64 %181, 1, !dbg !3460
  %182 = inttoptr i64 %sub437 to ptr, !dbg !3460
  store ptr %182, ptr %ptr, align 8, !dbg !3461
  %183 = load i64, ptr %obj.addr, align 8, !dbg !3462
  %184 = load ptr, ptr %ptr, align 8, !dbg !3464
  %call438 = call i32 @erts_is_literal(i64 noundef %183, ptr noundef %184), !dbg !3465
  %tobool439 = icmp ne i32 %call438, 0, !dbg !3465
  br i1 %tobool439, label %if.then440, label %if.end441, !dbg !3466

if.then440:                                       ; preds = %sw.bb434
  store i32 53, ptr %cleanup.dest.slot, align 4
  br label %cleanup510, !dbg !3467

if.end441:                                        ; preds = %sw.bb434
  %185 = load ptr, ptr %ptr, align 8, !dbg !3469
  %arrayidx442 = getelementptr inbounds i64, ptr %185, i64 0, !dbg !3469
  %186 = load i64, ptr %arrayidx442, align 8, !dbg !3469
  store i64 %186, ptr %head435, align 8, !dbg !3470
  %187 = load ptr, ptr %ptr, align 8, !dbg !3471
  %arrayidx443 = getelementptr inbounds i64, ptr %187, i64 1, !dbg !3471
  %188 = load i64, ptr %arrayidx443, align 8, !dbg !3471
  store i64 %188, ptr %tail436, align 8, !dbg !3472
  %189 = load i64, ptr %tail436, align 8, !dbg !3473
  %and444 = and i64 %189, 3, !dbg !3473
  %cmp445 = icmp eq i64 %and444, 0, !dbg !3474
  br i1 %cmp445, label %if.then447, label %if.else475, !dbg !3475

if.then447:                                       ; preds = %if.end441
  %190 = load i64, ptr %head435, align 8, !dbg !3476
  %and448 = and i64 %190, 3, !dbg !3476
  %cmp449 = icmp eq i64 %and448, 0, !dbg !3477
  br i1 %cmp449, label %if.then451, label %if.else470, !dbg !3478

if.then451:                                       ; preds = %if.then447
  call void @llvm.lifetime.start.p0(i64 8, ptr %saved) #8, !dbg !3479
  tail call void @llvm.dbg.declare(metadata ptr %saved, metadata !3030, metadata !DIExpression()), !dbg !3480
  br label %do.body452, !dbg !3481

do.body452:                                       ; preds = %if.then451
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !3482
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3035, metadata !DIExpression()), !dbg !3482
  %191 = load i32, ptr %b_bitoffs, align 4, !dbg !3483
  %cmp453 = icmp sle i32 %191, 0, !dbg !3483
  br i1 %cmp453, label %if.then455, label %if.end458, !dbg !3482

if.then455:                                       ; preds = %do.body452
  %wstart456 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !3485
  %192 = load ptr, ptr %wstart456, align 8, !dbg !3485
  %193 = load i32, ptr %b_offset, align 4, !dbg !3485
  %idxprom = sext i32 %193 to i64, !dbg !3485
  %arrayidx457 = getelementptr inbounds i64, ptr %192, i64 %idxprom, !dbg !3485
  %194 = load i64, ptr %arrayidx457, align 8, !dbg !3485
  store i64 %194, ptr %b_buffer, align 8, !dbg !3485
  %195 = load i32, ptr %b_offset, align 4, !dbg !3485
  %inc = add nsw i32 %195, 1, !dbg !3485
  store i32 %inc, ptr %b_offset, align 4, !dbg !3485
  store i32 64, ptr %b_bitoffs, align 4, !dbg !3485
  br label %if.end458, !dbg !3485

if.end458:                                        ; preds = %if.then455, %do.body452
  %196 = load i32, ptr %b_bitoffs, align 4, !dbg !3482
  %sub459 = sub nsw i32 %196, 2, !dbg !3482
  store i32 %sub459, ptr %b_bitoffs, align 4, !dbg !3482
  %197 = load i64, ptr %b_buffer, align 8, !dbg !3482
  %and460 = and i64 %197, 3, !dbg !3482
  store i64 %and460, ptr %result, align 8, !dbg !3482
  %198 = load i64, ptr %b_buffer, align 8, !dbg !3482
  %shr461 = lshr i64 %198, 2, !dbg !3482
  store i64 %shr461, ptr %b_buffer, align 8, !dbg !3482
  %199 = load i64, ptr %result, align 8, !dbg !3482
  store i64 %199, ptr %saved, align 8, !dbg !3482
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !3481
  br label %do.cond462, !dbg !3482

do.cond462:                                       ; preds = %if.end458
  br label %do.end463, !dbg !3482

do.end463:                                        ; preds = %do.cond462
  %200 = load i64, ptr %head435, align 8, !dbg !3487
  %sub464 = sub i64 %200, 0, !dbg !3488
  %201 = load i64, ptr %saved, align 8, !dbg !3489
  %or465 = or i64 %sub464, %201, !dbg !3490
  store i64 %or465, ptr %head435, align 8, !dbg !3491
  %202 = load ptr, ptr %ptr, align 8, !dbg !3492
  %arrayidx466 = getelementptr inbounds i64, ptr %202, i64 0, !dbg !3492
  store i64 %or465, ptr %arrayidx466, align 8, !dbg !3493
  %203 = load i64, ptr %tail436, align 8, !dbg !3494
  %sub467 = sub i64 %203, 0, !dbg !3495
  %or468 = or i64 %sub467, 2, !dbg !3496
  store i64 %or468, ptr %tail436, align 8, !dbg !3497
  %204 = load ptr, ptr %ptr, align 8, !dbg !3498
  %arrayidx469 = getelementptr inbounds i64, ptr %204, i64 1, !dbg !3498
  store i64 %or468, ptr %arrayidx469, align 8, !dbg !3499
  call void @llvm.lifetime.end.p0(i64 8, ptr %saved) #8, !dbg !3500
  br label %if.end474, !dbg !3501

if.else470:                                       ; preds = %if.then447
  %205 = load i64, ptr %tail436, align 8, !dbg !3502
  %sub471 = sub i64 %205, 0, !dbg !3504
  %or472 = or i64 %sub471, 1, !dbg !3505
  store i64 %or472, ptr %tail436, align 8, !dbg !3506
  %206 = load ptr, ptr %ptr, align 8, !dbg !3507
  %arrayidx473 = getelementptr inbounds i64, ptr %206, i64 1, !dbg !3507
  store i64 %or472, ptr %arrayidx473, align 8, !dbg !3508
  br label %if.end474

if.end474:                                        ; preds = %if.else470, %do.end463
  br label %if.end490, !dbg !3509

if.else475:                                       ; preds = %if.end441
  %207 = load i64, ptr %head435, align 8, !dbg !3510
  %and476 = and i64 %207, 3, !dbg !3510
  %cmp477 = icmp eq i64 %and476, 0, !dbg !3512
  br i1 %cmp477, label %if.then479, label %if.else488, !dbg !3513

if.then479:                                       ; preds = %if.else475
  %208 = load i64, ptr %head435, align 8, !dbg !3514
  %sub480 = sub i64 %208, 0, !dbg !3516
  %209 = load i64, ptr %tail436, align 8, !dbg !3517
  %and481 = and i64 %209, 3, !dbg !3517
  %or482 = or i64 %sub480, %and481, !dbg !3518
  store i64 %or482, ptr %head435, align 8, !dbg !3519
  %210 = load ptr, ptr %ptr, align 8, !dbg !3520
  %arrayidx483 = getelementptr inbounds i64, ptr %210, i64 0, !dbg !3520
  store i64 %or482, ptr %arrayidx483, align 8, !dbg !3521
  %211 = load i64, ptr %tail436, align 8, !dbg !3522
  %212 = load i64, ptr %tail436, align 8, !dbg !3523
  %and484 = and i64 %212, 3, !dbg !3523
  %sub485 = sub i64 %211, %and484, !dbg !3524
  %or486 = or i64 %sub485, 3, !dbg !3525
  store i64 %or486, ptr %tail436, align 8, !dbg !3526
  %213 = load ptr, ptr %ptr, align 8, !dbg !3527
  %arrayidx487 = getelementptr inbounds i64, ptr %213, i64 1, !dbg !3527
  store i64 %or486, ptr %arrayidx487, align 8, !dbg !3528
  br label %if.end489, !dbg !3529

if.else488:                                       ; preds = %if.else475
  store i32 53, ptr %cleanup.dest.slot, align 4
  br label %cleanup510, !dbg !3530

if.end489:                                        ; preds = %if.then479
  br label %if.end490

if.end490:                                        ; preds = %if.end489, %if.end474
  %214 = load i64, ptr %head435, align 8, !dbg !3532
  %and491 = and i64 %214, 3, !dbg !3532
  %cmp492 = icmp eq i64 %and491, 3, !dbg !3532
  br i1 %cmp492, label %if.end509, label %if.then494, !dbg !3534

if.then494:                                       ; preds = %if.end490
  br label %do.body495, !dbg !3535

do.body495:                                       ; preds = %if.then494
  %possibly_empty496 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3537
  store i32 0, ptr %possibly_empty496, align 8, !dbg !3537
  %215 = load i64, ptr %head435, align 8, !dbg !3537
  %back497 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3537
  %216 = load ptr, ptr %back497, align 8, !dbg !3537
  store i64 %215, ptr %216, align 8, !dbg !3537
  %back498 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3539
  %217 = load ptr, ptr %back498, align 8, !dbg !3539
  %incdec.ptr499 = getelementptr inbounds i64, ptr %217, i32 1, !dbg !3539
  store ptr %incdec.ptr499, ptr %back498, align 8, !dbg !3539
  %end500 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3539
  %218 = load ptr, ptr %end500, align 8, !dbg !3539
  %cmp501 = icmp eq ptr %incdec.ptr499, %218, !dbg !3539
  br i1 %cmp501, label %if.then503, label %if.end506, !dbg !3537

if.then503:                                       ; preds = %do.body495
  %start504 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3541
  %219 = load ptr, ptr %start504, align 8, !dbg !3541
  %back505 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3541
  store ptr %219, ptr %back505, align 8, !dbg !3541
  br label %if.end506, !dbg !3541

if.end506:                                        ; preds = %if.then503, %do.body495
  br label %do.cond507, !dbg !3537

do.cond507:                                       ; preds = %if.end506
  br label %do.end508, !dbg !3537

do.end508:                                        ; preds = %do.cond507
  br label %if.end509, !dbg !3543

if.end509:                                        ; preds = %do.end508, %if.end490
  %220 = load i64, ptr %tail436, align 8, !dbg !3544
  store i64 %220, ptr %obj.addr, align 8, !dbg !3545
  store i32 52, ptr %cleanup.dest.slot, align 4
  br label %cleanup510, !dbg !3546

cleanup510:                                       ; preds = %if.else488, %if.then440, %if.end509
  call void @llvm.lifetime.end.p0(i64 8, ptr %tail436) #8, !dbg !3547
  call void @llvm.lifetime.end.p0(i64 8, ptr %head435) #8, !dbg !3547
  %cleanup.dest512 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest512, label %cleanup757 [
    i32 52, label %sw.epilog734
    i32 53, label %cleanup_next
  ]

sw.bb513:                                         ; preds = %for.cond432
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr514) #8, !dbg !3548
  tail call void @llvm.dbg.declare(metadata ptr %hdr514, metadata !3037, metadata !DIExpression()), !dbg !3549
  %221 = load i64, ptr %obj.addr, align 8, !dbg !3550
  %sub515 = sub i64 %221, 2, !dbg !3550
  %222 = inttoptr i64 %sub515 to ptr, !dbg !3550
  store ptr %222, ptr %ptr, align 8, !dbg !3551
  %223 = load i64, ptr %obj.addr, align 8, !dbg !3552
  %224 = load ptr, ptr %ptr, align 8, !dbg !3554
  %call516 = call i32 @erts_is_literal(i64 noundef %223, ptr noundef %224), !dbg !3555
  %tobool517 = icmp ne i32 %call516, 0, !dbg !3555
  br i1 %tobool517, label %if.then518, label %if.end519, !dbg !3556

if.then518:                                       ; preds = %sw.bb513
  store i32 53, ptr %cleanup.dest.slot, align 4
  br label %cleanup720, !dbg !3557

if.end519:                                        ; preds = %sw.bb513
  %225 = load ptr, ptr %ptr, align 8, !dbg !3559
  %226 = load i64, ptr %225, align 8, !dbg !3560
  store i64 %226, ptr %hdr514, align 8, !dbg !3561
  %227 = load i64, ptr %hdr514, align 8, !dbg !3562
  %and520 = and i64 %227, 3, !dbg !3562
  %cmp521 = icmp eq i64 %and520, 0, !dbg !3564
  br i1 %cmp521, label %if.then523, label %if.else524, !dbg !3565

if.then523:                                       ; preds = %if.end519
  store i32 53, ptr %cleanup.dest.slot, align 4
  br label %cleanup720, !dbg !3566

if.else524:                                       ; preds = %if.end519
  %228 = load i64, ptr %hdr514, align 8, !dbg !3568
  %sub525 = sub i64 %228, 1, !dbg !3570
  %add526 = add i64 %sub525, 0, !dbg !3571
  store i64 %add526, ptr %hdr514, align 8, !dbg !3572
  %229 = load ptr, ptr %ptr, align 8, !dbg !3573
  store i64 %add526, ptr %229, align 8, !dbg !3574
  br label %if.end527

if.end527:                                        ; preds = %if.else524
  %230 = load i64, ptr %hdr514, align 8, !dbg !3575
  %and528 = and i64 %230, 63, !dbg !3576
  switch i64 %and528, label %sw.default719 [
    i64 0, label %sw.bb529
    i64 20, label %sw.bb573
    i64 60, label %sw.bb623
  ], !dbg !3577

sw.bb529:                                         ; preds = %if.end527
  call void @llvm.lifetime.start.p0(i64 4, ptr %arity530) #8, !dbg !3578
  tail call void @llvm.dbg.declare(metadata ptr %arity530, metadata !3039, metadata !DIExpression()), !dbg !3579
  %231 = load i64, ptr %hdr514, align 8, !dbg !3580
  %and531 = and i64 %231, 63, !dbg !3580
  %cmp532 = icmp eq i64 %and531, 60, !dbg !3580
  br i1 %cmp532, label %cond.true534, label %cond.false537, !dbg !3580

cond.true534:                                     ; preds = %sw.bb529
  %232 = load i64, ptr %hdr514, align 8, !dbg !3580
  %shr535 = lshr i64 %232, 8, !dbg !3580
  %and536 = and i64 %shr535, 255, !dbg !3580
  br label %cond.end539, !dbg !3580

cond.false537:                                    ; preds = %sw.bb529
  %233 = load i64, ptr %hdr514, align 8, !dbg !3580
  %shr538 = lshr i64 %233, 6, !dbg !3580
  br label %cond.end539, !dbg !3580

cond.end539:                                      ; preds = %cond.false537, %cond.true534
  %cond540 = phi i64 [ %and536, %cond.true534 ], [ %shr538, %cond.false537 ], !dbg !3580
  %conv541 = trunc i64 %cond540 to i32, !dbg !3580
  store i32 %conv541, ptr %arity530, align 4, !dbg !3579
  %234 = load i32, ptr %arity530, align 4, !dbg !3581
  %cmp542 = icmp eq i32 %234, 0, !dbg !3583
  br i1 %cmp542, label %if.then544, label %if.end545, !dbg !3584

if.then544:                                       ; preds = %cond.end539
  store i32 53, ptr %cleanup.dest.slot, align 4
  br label %cleanup572, !dbg !3585

if.end545:                                        ; preds = %cond.end539
  br label %while.cond546, !dbg !3587

while.cond546:                                    ; preds = %if.end570, %if.end545
  %235 = load i32, ptr %arity530, align 4, !dbg !3588
  %dec547 = add nsw i32 %235, -1, !dbg !3588
  store i32 %dec547, ptr %arity530, align 4, !dbg !3588
  %cmp548 = icmp sgt i32 %235, 0, !dbg !3589
  br i1 %cmp548, label %while.body550, label %while.end571, !dbg !3587

while.body550:                                    ; preds = %while.cond546
  %236 = load ptr, ptr %ptr, align 8, !dbg !3590
  %incdec.ptr551 = getelementptr inbounds i64, ptr %236, i32 1, !dbg !3590
  store ptr %incdec.ptr551, ptr %ptr, align 8, !dbg !3590
  %237 = load i64, ptr %incdec.ptr551, align 8, !dbg !3592
  store i64 %237, ptr %obj.addr, align 8, !dbg !3593
  %238 = load i64, ptr %obj.addr, align 8, !dbg !3594
  %and552 = and i64 %238, 3, !dbg !3594
  %cmp553 = icmp eq i64 %and552, 3, !dbg !3594
  br i1 %cmp553, label %if.end570, label %if.then555, !dbg !3596

if.then555:                                       ; preds = %while.body550
  br label %do.body556, !dbg !3597

do.body556:                                       ; preds = %if.then555
  %possibly_empty557 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3599
  store i32 0, ptr %possibly_empty557, align 8, !dbg !3599
  %239 = load i64, ptr %obj.addr, align 8, !dbg !3599
  %back558 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3599
  %240 = load ptr, ptr %back558, align 8, !dbg !3599
  store i64 %239, ptr %240, align 8, !dbg !3599
  %back559 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3601
  %241 = load ptr, ptr %back559, align 8, !dbg !3601
  %incdec.ptr560 = getelementptr inbounds i64, ptr %241, i32 1, !dbg !3601
  store ptr %incdec.ptr560, ptr %back559, align 8, !dbg !3601
  %end561 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3601
  %242 = load ptr, ptr %end561, align 8, !dbg !3601
  %cmp562 = icmp eq ptr %incdec.ptr560, %242, !dbg !3601
  br i1 %cmp562, label %if.then564, label %if.end567, !dbg !3599

if.then564:                                       ; preds = %do.body556
  %start565 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3603
  %243 = load ptr, ptr %start565, align 8, !dbg !3603
  %back566 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3603
  store ptr %243, ptr %back566, align 8, !dbg !3603
  br label %if.end567, !dbg !3603

if.end567:                                        ; preds = %if.then564, %do.body556
  br label %do.cond568, !dbg !3599

do.cond568:                                       ; preds = %if.end567
  br label %do.end569, !dbg !3599

do.end569:                                        ; preds = %do.cond568
  br label %if.end570, !dbg !3605

if.end570:                                        ; preds = %do.end569, %while.body550
  br label %while.cond546, !dbg !3587, !llvm.loop !3606

while.end571:                                     ; preds = %while.cond546
  store i32 53, ptr %cleanup.dest.slot, align 4
  br label %cleanup572, !dbg !3608

cleanup572:                                       ; preds = %while.end571, %if.then544
  call void @llvm.lifetime.end.p0(i64 4, ptr %arity530) #8, !dbg !3609
  br label %cleanup720

sw.bb573:                                         ; preds = %if.end527
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp574) #8, !dbg !3610
  tail call void @llvm.dbg.declare(metadata ptr %funp574, metadata !3042, metadata !DIExpression()), !dbg !3611
  %244 = load ptr, ptr %ptr, align 8, !dbg !3612
  store ptr %244, ptr %funp574, align 8, !dbg !3611
  call void @llvm.lifetime.start.p0(i64 4, ptr %eterms575) #8, !dbg !3613
  tail call void @llvm.dbg.declare(metadata ptr %eterms575, metadata !3044, metadata !DIExpression()), !dbg !3614
  %245 = load ptr, ptr %funp574, align 8, !dbg !3615
  %num_free576 = getelementptr inbounds %struct.erl_fun_thing, ptr %245, i32 0, i32 4, !dbg !3616
  %246 = load i8, ptr %num_free576, align 1, !dbg !3616
  %conv577 = zext i8 %246 to i32, !dbg !3615
  %add578 = add nsw i32 1, %conv577, !dbg !3617
  store i32 %add578, ptr %eterms575, align 4, !dbg !3614
  call void @llvm.lifetime.start.p0(i64 4, ptr %sz579) #8, !dbg !3618
  tail call void @llvm.dbg.declare(metadata ptr %sz579, metadata !3045, metadata !DIExpression()), !dbg !3619
  %247 = load i64, ptr %hdr514, align 8, !dbg !3620
  %and580 = and i64 %247, 63, !dbg !3620
  %cmp581 = icmp eq i64 %and580, 60, !dbg !3620
  br i1 %cmp581, label %cond.true583, label %cond.false586, !dbg !3620

cond.true583:                                     ; preds = %sw.bb573
  %248 = load i64, ptr %hdr514, align 8, !dbg !3620
  %shr584 = lshr i64 %248, 8, !dbg !3620
  %and585 = and i64 %shr584, 255, !dbg !3620
  br label %cond.end588, !dbg !3620

cond.false586:                                    ; preds = %sw.bb573
  %249 = load i64, ptr %hdr514, align 8, !dbg !3620
  %shr587 = lshr i64 %249, 6, !dbg !3620
  br label %cond.end588, !dbg !3620

cond.end588:                                      ; preds = %cond.false586, %cond.true583
  %cond589 = phi i64 [ %and585, %cond.true583 ], [ %shr587, %cond.false586 ], !dbg !3620
  %conv590 = trunc i64 %cond589 to i32, !dbg !3620
  store i32 %conv590, ptr %sz579, align 4, !dbg !3619
  %250 = load i32, ptr %sz579, align 4, !dbg !3621
  %add591 = add i32 1, %250, !dbg !3622
  %251 = load ptr, ptr %ptr, align 8, !dbg !3623
  %idx.ext592 = zext i32 %add591 to i64, !dbg !3623
  %add.ptr593 = getelementptr inbounds i64, ptr %251, i64 %idx.ext592, !dbg !3623
  store ptr %add.ptr593, ptr %ptr, align 8, !dbg !3623
  br label %while.cond594, !dbg !3624

while.cond594:                                    ; preds = %if.end618, %cond.end588
  %252 = load i32, ptr %eterms575, align 4, !dbg !3625
  %dec595 = add i32 %252, -1, !dbg !3625
  store i32 %dec595, ptr %eterms575, align 4, !dbg !3625
  %cmp596 = icmp ugt i32 %252, 0, !dbg !3626
  br i1 %cmp596, label %while.body598, label %while.end619, !dbg !3624

while.body598:                                    ; preds = %while.cond594
  %253 = load ptr, ptr %ptr, align 8, !dbg !3627
  %incdec.ptr599 = getelementptr inbounds i64, ptr %253, i32 1, !dbg !3627
  store ptr %incdec.ptr599, ptr %ptr, align 8, !dbg !3627
  %254 = load i64, ptr %253, align 8, !dbg !3629
  store i64 %254, ptr %obj.addr, align 8, !dbg !3630
  %255 = load i64, ptr %obj.addr, align 8, !dbg !3631
  %and600 = and i64 %255, 3, !dbg !3631
  %cmp601 = icmp eq i64 %and600, 3, !dbg !3631
  br i1 %cmp601, label %if.end618, label %if.then603, !dbg !3633

if.then603:                                       ; preds = %while.body598
  br label %do.body604, !dbg !3634

do.body604:                                       ; preds = %if.then603
  %possibly_empty605 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3636
  store i32 0, ptr %possibly_empty605, align 8, !dbg !3636
  %256 = load i64, ptr %obj.addr, align 8, !dbg !3636
  %back606 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3636
  %257 = load ptr, ptr %back606, align 8, !dbg !3636
  store i64 %256, ptr %257, align 8, !dbg !3636
  %back607 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3638
  %258 = load ptr, ptr %back607, align 8, !dbg !3638
  %incdec.ptr608 = getelementptr inbounds i64, ptr %258, i32 1, !dbg !3638
  store ptr %incdec.ptr608, ptr %back607, align 8, !dbg !3638
  %end609 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3638
  %259 = load ptr, ptr %end609, align 8, !dbg !3638
  %cmp610 = icmp eq ptr %incdec.ptr608, %259, !dbg !3638
  br i1 %cmp610, label %if.then612, label %if.end615, !dbg !3636

if.then612:                                       ; preds = %do.body604
  %start613 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3640
  %260 = load ptr, ptr %start613, align 8, !dbg !3640
  %back614 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3640
  store ptr %260, ptr %back614, align 8, !dbg !3640
  br label %if.end615, !dbg !3640

if.end615:                                        ; preds = %if.then612, %do.body604
  br label %do.cond616, !dbg !3636

do.cond616:                                       ; preds = %if.end615
  br label %do.end617, !dbg !3636

do.end617:                                        ; preds = %do.cond616
  br label %if.end618, !dbg !3642

if.end618:                                        ; preds = %do.end617, %while.body598
  br label %while.cond594, !dbg !3624, !llvm.loop !3643

while.end619:                                     ; preds = %while.cond594
  store i32 53, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %sz579) #8, !dbg !3645
  call void @llvm.lifetime.end.p0(i64 4, ptr %eterms575) #8, !dbg !3645
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp574) #8, !dbg !3645
  br label %cleanup720

sw.bb623:                                         ; preds = %if.end527
  %261 = load i64, ptr %hdr514, align 8, !dbg !3646
  %shr624 = lshr i64 %261, 6, !dbg !3646
  %and625 = and i64 %shr624, 3, !dbg !3646
  switch i64 %and625, label %sw.default716 [
    i64 0, label %sw.bb626
    i64 3, label %sw.bb659
    i64 2, label %sw.bb659
    i64 1, label %sw.bb659
  ], !dbg !3647

sw.bb626:                                         ; preds = %sw.bb623
  call void @llvm.lifetime.start.p0(i64 8, ptr %mp627) #8, !dbg !3648
  tail call void @llvm.dbg.declare(metadata ptr %mp627, metadata !3046, metadata !DIExpression()), !dbg !3649
  %262 = load ptr, ptr %ptr, align 8, !dbg !3650
  store ptr %262, ptr %mp627, align 8, !dbg !3649
  call void @llvm.lifetime.start.p0(i64 8, ptr %n628) #8, !dbg !3651
  tail call void @llvm.dbg.declare(metadata ptr %n628, metadata !3049, metadata !DIExpression()), !dbg !3652
  %263 = load ptr, ptr %mp627, align 8, !dbg !3653
  %size629 = getelementptr inbounds %struct.flatmap_s, ptr %263, i32 0, i32 1, !dbg !3653
  %264 = load i64, ptr %size629, align 8, !dbg !3653
  %add630 = add i64 %264, 1, !dbg !3654
  store i64 %add630, ptr %n628, align 8, !dbg !3652
  %265 = load ptr, ptr %ptr, align 8, !dbg !3655
  %add.ptr631 = getelementptr inbounds i64, ptr %265, i64 2, !dbg !3655
  store ptr %add.ptr631, ptr %ptr, align 8, !dbg !3655
  br label %while.cond632, !dbg !3656

while.cond632:                                    ; preds = %if.end655, %sw.bb626
  %266 = load i64, ptr %n628, align 8, !dbg !3657
  %dec633 = add i64 %266, -1, !dbg !3657
  store i64 %dec633, ptr %n628, align 8, !dbg !3657
  %tobool634 = icmp ne i64 %266, 0, !dbg !3656
  br i1 %tobool634, label %while.body635, label %while.end656, !dbg !3656

while.body635:                                    ; preds = %while.cond632
  %267 = load ptr, ptr %ptr, align 8, !dbg !3658
  %incdec.ptr636 = getelementptr inbounds i64, ptr %267, i32 1, !dbg !3658
  store ptr %incdec.ptr636, ptr %ptr, align 8, !dbg !3658
  %268 = load i64, ptr %267, align 8, !dbg !3660
  store i64 %268, ptr %obj.addr, align 8, !dbg !3661
  %269 = load i64, ptr %obj.addr, align 8, !dbg !3662
  %and637 = and i64 %269, 3, !dbg !3662
  %cmp638 = icmp eq i64 %and637, 3, !dbg !3662
  br i1 %cmp638, label %if.end655, label %if.then640, !dbg !3664

if.then640:                                       ; preds = %while.body635
  br label %do.body641, !dbg !3665

do.body641:                                       ; preds = %if.then640
  %possibly_empty642 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3667
  store i32 0, ptr %possibly_empty642, align 8, !dbg !3667
  %270 = load i64, ptr %obj.addr, align 8, !dbg !3667
  %back643 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3667
  %271 = load ptr, ptr %back643, align 8, !dbg !3667
  store i64 %270, ptr %271, align 8, !dbg !3667
  %back644 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3669
  %272 = load ptr, ptr %back644, align 8, !dbg !3669
  %incdec.ptr645 = getelementptr inbounds i64, ptr %272, i32 1, !dbg !3669
  store ptr %incdec.ptr645, ptr %back644, align 8, !dbg !3669
  %end646 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3669
  %273 = load ptr, ptr %end646, align 8, !dbg !3669
  %cmp647 = icmp eq ptr %incdec.ptr645, %273, !dbg !3669
  br i1 %cmp647, label %if.then649, label %if.end652, !dbg !3667

if.then649:                                       ; preds = %do.body641
  %start650 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3671
  %274 = load ptr, ptr %start650, align 8, !dbg !3671
  %back651 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3671
  store ptr %274, ptr %back651, align 8, !dbg !3671
  br label %if.end652, !dbg !3671

if.end652:                                        ; preds = %if.then649, %do.body641
  br label %do.cond653, !dbg !3667

do.cond653:                                       ; preds = %if.end652
  br label %do.end654, !dbg !3667

do.end654:                                        ; preds = %do.cond653
  br label %if.end655, !dbg !3673

if.end655:                                        ; preds = %do.end654, %while.body635
  br label %while.cond632, !dbg !3656, !llvm.loop !3674

while.end656:                                     ; preds = %while.cond632
  store i32 53, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %n628) #8, !dbg !3676
  call void @llvm.lifetime.end.p0(i64 8, ptr %mp627) #8, !dbg !3676
  br label %cleanup720

sw.bb659:                                         ; preds = %sw.bb623, %sw.bb623, %sw.bb623
  call void @llvm.lifetime.start.p0(i64 8, ptr %n660) #8, !dbg !3677
  tail call void @llvm.dbg.declare(metadata ptr %n660, metadata !3050, metadata !DIExpression()), !dbg !3678
  %275 = load i64, ptr %hdr514, align 8, !dbg !3679
  %shr661 = lshr i64 %275, 16, !dbg !3679
  %and662 = and i64 %shr661, 65535, !dbg !3679
  %conv663 = trunc i64 %and662 to i32, !dbg !3679
  %276 = call i32 @llvm.ctpop.i32(i32 %conv663), !dbg !3679
  %conv664 = zext i32 %276 to i64, !dbg !3679
  store i64 %conv664, ptr %n660, align 8, !dbg !3678
  %277 = load i64, ptr %n660, align 8, !dbg !3680
  %add665 = add i64 1, %277, !dbg !3681
  %278 = load i64, ptr %hdr514, align 8, !dbg !3682
  %and666 = and i64 %278, 63, !dbg !3682
  %cmp667 = icmp eq i64 %and666, 60, !dbg !3682
  br i1 %cmp667, label %cond.true669, label %cond.false672, !dbg !3682

cond.true669:                                     ; preds = %sw.bb659
  %279 = load i64, ptr %hdr514, align 8, !dbg !3682
  %shr670 = lshr i64 %279, 8, !dbg !3682
  %and671 = and i64 %shr670, 255, !dbg !3682
  br label %cond.end674, !dbg !3682

cond.false672:                                    ; preds = %sw.bb659
  %280 = load i64, ptr %hdr514, align 8, !dbg !3682
  %shr673 = lshr i64 %280, 6, !dbg !3682
  br label %cond.end674, !dbg !3682

cond.end674:                                      ; preds = %cond.false672, %cond.true669
  %cond675 = phi i64 [ %and671, %cond.true669 ], [ %shr673, %cond.false672 ], !dbg !3682
  %add676 = add i64 %add665, %cond675, !dbg !3683
  %281 = load i64, ptr %sum, align 8, !dbg !3684
  %add677 = add i64 %281, %add676, !dbg !3684
  store i64 %add677, ptr %sum, align 8, !dbg !3684
  %282 = load i64, ptr %hdr514, align 8, !dbg !3685
  %and678 = and i64 %282, 63, !dbg !3685
  %cmp679 = icmp eq i64 %and678, 60, !dbg !3685
  br i1 %cmp679, label %cond.true681, label %cond.false684, !dbg !3685

cond.true681:                                     ; preds = %cond.end674
  %283 = load i64, ptr %hdr514, align 8, !dbg !3685
  %shr682 = lshr i64 %283, 8, !dbg !3685
  %and683 = and i64 %shr682, 255, !dbg !3685
  br label %cond.end686, !dbg !3685

cond.false684:                                    ; preds = %cond.end674
  %284 = load i64, ptr %hdr514, align 8, !dbg !3685
  %shr685 = lshr i64 %284, 6, !dbg !3685
  br label %cond.end686, !dbg !3685

cond.end686:                                      ; preds = %cond.false684, %cond.true681
  %cond687 = phi i64 [ %and683, %cond.true681 ], [ %shr685, %cond.false684 ], !dbg !3685
  %add688 = add i64 1, %cond687, !dbg !3686
  %285 = load ptr, ptr %ptr, align 8, !dbg !3687
  %add.ptr689 = getelementptr inbounds i64, ptr %285, i64 %add688, !dbg !3687
  store ptr %add.ptr689, ptr %ptr, align 8, !dbg !3687
  br label %while.cond690, !dbg !3688

while.cond690:                                    ; preds = %if.end713, %cond.end686
  %286 = load i64, ptr %n660, align 8, !dbg !3689
  %dec691 = add i64 %286, -1, !dbg !3689
  store i64 %dec691, ptr %n660, align 8, !dbg !3689
  %tobool692 = icmp ne i64 %286, 0, !dbg !3688
  br i1 %tobool692, label %while.body693, label %while.end714, !dbg !3688

while.body693:                                    ; preds = %while.cond690
  %287 = load ptr, ptr %ptr, align 8, !dbg !3690
  %incdec.ptr694 = getelementptr inbounds i64, ptr %287, i32 1, !dbg !3690
  store ptr %incdec.ptr694, ptr %ptr, align 8, !dbg !3690
  %288 = load i64, ptr %287, align 8, !dbg !3692
  store i64 %288, ptr %obj.addr, align 8, !dbg !3693
  %289 = load i64, ptr %obj.addr, align 8, !dbg !3694
  %and695 = and i64 %289, 3, !dbg !3694
  %cmp696 = icmp eq i64 %and695, 3, !dbg !3694
  br i1 %cmp696, label %if.end713, label %if.then698, !dbg !3696

if.then698:                                       ; preds = %while.body693
  br label %do.body699, !dbg !3697

do.body699:                                       ; preds = %if.then698
  %possibly_empty700 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3699
  store i32 0, ptr %possibly_empty700, align 8, !dbg !3699
  %290 = load i64, ptr %obj.addr, align 8, !dbg !3699
  %back701 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3699
  %291 = load ptr, ptr %back701, align 8, !dbg !3699
  store i64 %290, ptr %291, align 8, !dbg !3699
  %back702 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3701
  %292 = load ptr, ptr %back702, align 8, !dbg !3701
  %incdec.ptr703 = getelementptr inbounds i64, ptr %292, i32 1, !dbg !3701
  store ptr %incdec.ptr703, ptr %back702, align 8, !dbg !3701
  %end704 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3701
  %293 = load ptr, ptr %end704, align 8, !dbg !3701
  %cmp705 = icmp eq ptr %incdec.ptr703, %293, !dbg !3701
  br i1 %cmp705, label %if.then707, label %if.end710, !dbg !3699

if.then707:                                       ; preds = %do.body699
  %start708 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3703
  %294 = load ptr, ptr %start708, align 8, !dbg !3703
  %back709 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3703
  store ptr %294, ptr %back709, align 8, !dbg !3703
  br label %if.end710, !dbg !3703

if.end710:                                        ; preds = %if.then707, %do.body699
  br label %do.cond711, !dbg !3699

do.cond711:                                       ; preds = %if.end710
  br label %do.end712, !dbg !3699

do.end712:                                        ; preds = %do.cond711
  br label %if.end713, !dbg !3705

if.end713:                                        ; preds = %do.end712, %while.body693
  br label %while.cond690, !dbg !3688, !llvm.loop !3706

while.end714:                                     ; preds = %while.cond690
  store i32 53, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %n660) #8, !dbg !3708
  br label %cleanup720

sw.default716:                                    ; preds = %sw.bb623
  %295 = load i64, ptr %hdr514, align 8, !dbg !3709
  %shr717 = lshr i64 %295, 6, !dbg !3709
  %and718 = and i64 %shr717, 3, !dbg !3709
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.3, i64 noundef %and718) #9, !dbg !3710
  unreachable, !dbg !3710

sw.default719:                                    ; preds = %if.end527
  store i32 53, ptr %cleanup.dest.slot, align 4
  br label %cleanup720, !dbg !3711

cleanup720:                                       ; preds = %sw.default719, %if.then523, %if.then518, %while.end714, %while.end656, %while.end619, %cleanup572
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr514) #8, !dbg !3712
  %cleanup.dest722 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest722, label %cleanup757 [
    i32 53, label %cleanup_next
  ]

sw.bb721:                                         ; preds = %for.cond432
  br label %cleanup_next, !dbg !3713

cleanup_next:                                     ; preds = %sw.bb721, %cleanup720, %cleanup510
  tail call void @llvm.dbg.label(metadata !3052), !dbg !3714
  %back723 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3715
  %296 = load ptr, ptr %back723, align 8, !dbg !3715
  %front724 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3715
  %297 = load ptr, ptr %front724, align 8, !dbg !3715
  %cmp725 = icmp eq ptr %296, %297, !dbg !3715
  br i1 %cmp725, label %land.lhs.true727, label %if.end731, !dbg !3715

land.lhs.true727:                                 ; preds = %cleanup_next
  %possibly_empty728 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3715
  %298 = load i32, ptr %possibly_empty728, align 8, !dbg !3715
  %tobool729 = icmp ne i32 %298, 0, !dbg !3715
  br i1 %tobool729, label %if.then730, label %if.end731, !dbg !3717

if.then730:                                       ; preds = %land.lhs.true727
  br label %all_clean, !dbg !3718

if.end731:                                        ; preds = %land.lhs.true727, %cleanup_next
  %call732 = call i64 @erts_equeue_get(ptr noundef %s), !dbg !3720
  store i64 %call732, ptr %obj.addr, align 8, !dbg !3721
  br label %sw.epilog734, !dbg !3722

sw.default733:                                    ; preds = %for.cond432
  %299 = load i64, ptr %obj.addr, align 8, !dbg !3723
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.5, i64 noundef %299) #9, !dbg !3724
  unreachable, !dbg !3724

sw.epilog734:                                     ; preds = %if.end731, %cleanup510
  br label %for.cond432, !dbg !3725, !llvm.loop !3726

all_clean:                                        ; preds = %if.then730
  tail call void @llvm.dbg.label(metadata !3053), !dbg !3729
  br label %do.body735, !dbg !3730

do.body735:                                       ; preds = %all_clean
  %start736 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3731
  %300 = load ptr, ptr %start736, align 8, !dbg !3731
  %arraydecay737 = getelementptr inbounds [16 x i64], ptr %s_default_equeue, i64 0, i64 0, !dbg !3731
  %cmp738 = icmp ne ptr %300, %arraydecay737, !dbg !3731
  br i1 %cmp738, label %if.then740, label %if.end743, !dbg !3734

if.then740:                                       ; preds = %do.body735
  %alloc_type741 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 5, !dbg !3735
  %301 = load i32, ptr %alloc_type741, align 8, !dbg !3735
  %start742 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3735
  %302 = load ptr, ptr %start742, align 8, !dbg !3735
  call void @erts_free(i32 noundef %301, ptr noundef %302), !dbg !3735
  br label %if.end743, !dbg !3735

if.end743:                                        ; preds = %if.then740, %do.body735
  br label %do.cond744, !dbg !3734

do.cond744:                                       ; preds = %if.end743
  br label %do.end745, !dbg !3734

do.end745:                                        ; preds = %do.cond744
  br label %do.body746, !dbg !3737

do.body746:                                       ; preds = %do.end745
  %wstart747 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !3738
  %303 = load ptr, ptr %wstart747, align 8, !dbg !3738
  %wdefault748 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 3, !dbg !3738
  %304 = load ptr, ptr %wdefault748, align 8, !dbg !3738
  %cmp749 = icmp ne ptr %303, %304, !dbg !3738
  br i1 %cmp749, label %if.then751, label %if.end754, !dbg !3741

if.then751:                                       ; preds = %do.body746
  %alloc_type752 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 4, !dbg !3742
  %305 = load i32, ptr %alloc_type752, align 8, !dbg !3742
  %wstart753 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !3742
  %306 = load ptr, ptr %wstart753, align 8, !dbg !3742
  call void @erts_free(i32 noundef %305, ptr noundef %306), !dbg !3742
  br label %if.end754, !dbg !3742

if.end754:                                        ; preds = %if.then751, %do.body746
  br label %do.cond755, !dbg !3741

do.cond755:                                       ; preds = %if.end754
  br label %do.end756, !dbg !3741

do.end756:                                        ; preds = %do.cond755
  %307 = load i64, ptr %sum, align 8, !dbg !3744
  store i64 %307, ptr %retval, align 8, !dbg !3745
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup757, !dbg !3745

cleanup757:                                       ; preds = %do.end756, %cleanup720, %cleanup510, %cleanup391, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_buffer) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 4, ptr %b_offset) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 4, ptr %b_bitoffs) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 40, ptr %b) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 128, ptr %b_default_wstack) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 48, ptr %s) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 128, ptr %s_default_equeue) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum) #8, !dbg !3746
  call void @llvm.lifetime.end.p0(i64 8, ptr %saved_obj) #8, !dbg !3746
  %308 = load i64, ptr %retval, align 8, !dbg !3746
  ret i64 %308, !dbg !3746
}

declare !dbg !3747 void @erl_grow_wstack(ptr noundef, i64 noundef) #3

declare !dbg !3751 void @erl_grow_equeue(ptr noundef, ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @erts_equeue_get(ptr noundef %q) #2 !dbg !3755 {
entry:
  %q.addr = alloca ptr, align 8
  %x = alloca i64, align 8
  store ptr %q, ptr %q.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %q.addr, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #8, !dbg !3762
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !3760, metadata !DIExpression()), !dbg !3763
  %0 = load ptr, ptr %q.addr, align 8, !dbg !3764
  %possibly_empty = getelementptr inbounds %struct.ErtsEQueue, ptr %0, i32 0, i32 3, !dbg !3765
  store i32 1, ptr %possibly_empty, align 8, !dbg !3766
  %1 = load ptr, ptr %q.addr, align 8, !dbg !3767
  %front = getelementptr inbounds %struct.ErtsEQueue, ptr %1, i32 0, i32 1, !dbg !3768
  %2 = load ptr, ptr %front, align 8, !dbg !3768
  %3 = load i64, ptr %2, align 8, !dbg !3769
  store i64 %3, ptr %x, align 8, !dbg !3770
  %4 = load ptr, ptr %q.addr, align 8, !dbg !3771
  %front1 = getelementptr inbounds %struct.ErtsEQueue, ptr %4, i32 0, i32 1, !dbg !3773
  %5 = load ptr, ptr %front1, align 8, !dbg !3774
  %incdec.ptr = getelementptr inbounds i64, ptr %5, i32 1, !dbg !3774
  store ptr %incdec.ptr, ptr %front1, align 8, !dbg !3774
  %6 = load ptr, ptr %q.addr, align 8, !dbg !3775
  %end = getelementptr inbounds %struct.ErtsEQueue, ptr %6, i32 0, i32 4, !dbg !3776
  %7 = load ptr, ptr %end, align 8, !dbg !3776
  %cmp = icmp eq ptr %incdec.ptr, %7, !dbg !3777
  br i1 %cmp, label %if.then, label %if.end, !dbg !3778

if.then:                                          ; preds = %entry
  %8 = load ptr, ptr %q.addr, align 8, !dbg !3779
  %start = getelementptr inbounds %struct.ErtsEQueue, ptr %8, i32 0, i32 0, !dbg !3781
  %9 = load ptr, ptr %start, align 8, !dbg !3781
  %10 = load ptr, ptr %q.addr, align 8, !dbg !3782
  %front2 = getelementptr inbounds %struct.ErtsEQueue, ptr %10, i32 0, i32 1, !dbg !3783
  store ptr %9, ptr %front2, align 8, !dbg !3784
  br label %if.end, !dbg !3785

if.end:                                           ; preds = %if.then, %entry
  %11 = load i64, ptr %x, align 8, !dbg !3786
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #8, !dbg !3787
  ret i64 %11, !dbg !3788
}

declare !dbg !3789 void @erts_emasculate_writable_binary(ptr noundef) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @erts_refc_inc(ptr noundef %refcp, i64 noundef %min_val) #2 !dbg !3792 {
entry:
  %refcp.addr = alloca ptr, align 8
  %min_val.addr = alloca i64, align 8
  store ptr %refcp, ptr %refcp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %refcp.addr, metadata !3797, metadata !DIExpression()), !dbg !3799
  store i64 %min_val, ptr %min_val.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %min_val.addr, metadata !3798, metadata !DIExpression()), !dbg !3800
  %0 = load ptr, ptr %refcp.addr, align 8, !dbg !3801
  call void @ethr_atomic_inc(ptr noundef %0), !dbg !3802
  ret void, !dbg !3803
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @sys_memcpy(ptr noundef %dest, ptr noundef %src, i64 noundef %n) #2 !dbg !3804 {
entry:
  %dest.addr = alloca ptr, align 8
  %src.addr = alloca ptr, align 8
  %n.addr = alloca i64, align 8
  store ptr %dest, ptr %dest.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dest.addr, metadata !3808, metadata !DIExpression()), !dbg !3811
  store ptr %src, ptr %src.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %src.addr, metadata !3809, metadata !DIExpression()), !dbg !3812
  store i64 %n, ptr %n.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !3810, metadata !DIExpression()), !dbg !3813
  %0 = load ptr, ptr %dest.addr, align 8, !dbg !3814
  %1 = load ptr, ptr %src.addr, align 8, !dbg !3815
  %2 = load i64, ptr %n.addr, align 8, !dbg !3816
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %0, ptr align 1 %1, i64 %2, i1 false), !dbg !3817
  ret ptr %0, !dbg !3818
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @erts_ref_node_entry(ptr noundef %np, i32 noundef %min_val, i64 noundef %term) #2 !dbg !3819 {
entry:
  %np.addr = alloca ptr, align 8
  %min_val.addr = alloca i32, align 4
  %term.addr = alloca i64, align 8
  store ptr %np, ptr %np.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %np.addr, metadata !3825, metadata !DIExpression()), !dbg !3828
  store i32 %min_val, ptr %min_val.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %min_val.addr, metadata !3826, metadata !DIExpression()), !dbg !3829
  store i64 %term, ptr %term.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %term.addr, metadata !3827, metadata !DIExpression()), !dbg !3830
  %0 = load ptr, ptr %np.addr, align 8, !dbg !3831
  %refc = getelementptr inbounds %struct.erl_node_, ptr %0, i32 0, i32 1, !dbg !3832
  %1 = load i32, ptr %min_val.addr, align 4, !dbg !3833
  %conv = sext i32 %1 to i64, !dbg !3833
  %call = call i64 @erts_refc_inctest(ptr noundef %refc, i64 noundef %conv), !dbg !3834
  ret i64 %call, !dbg !3835
}

; Function Attrs: nounwind uwtable
define dso_local i64 @copy_shared_calculate(i64 noundef %obj, ptr noundef %info) #0 !dbg !3836 {
entry:
  %retval = alloca i64, align 8
  %obj.addr = alloca i64, align 8
  %info.addr = alloca ptr, align 8
  %sum = alloca i64, align 8
  %e = alloca i64, align 8
  %sz = alloca i32, align 4
  %ptr = alloca ptr, align 8
  %lit_purge_ptr = alloca ptr, align 8
  %lit_purge_sz = alloca i64, align 8
  %copy_literals = alloca i32, align 4
  %empty_tuple_literal = alloca i64, align 8
  %s_default_equeue = alloca ptr, align 8
  %s = alloca %struct.ErtsEQueue, align 8
  %b_default_wstack = alloca ptr, align 8
  %b = alloca %struct.ErtsWStack_, align 8
  %b_bitoffs = alloca i32, align 4
  %b_buffer = alloca i64, align 8
  %t_default_estack = alloca ptr, align 8
  %t = alloca %struct.ErtsEStack_, align 8
  %t_offset = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %head = alloca i64, align 8
  %tail = alloca i64, align 8
  %hdr = alloca i64, align 8
  %arity = alloca i32, align 4
  %funp = alloca ptr, align 8
  %eterms = alloca i32, align 4
  %sb = alloca ptr, align 8
  %real_bin = alloca i64, align 8
  %bit_offset = alloca i64, align 8
  %bit_size = alloca i64, align 8
  %size = alloca i64, align 8
  %extra_bytes = alloca i64, align 8
  %hdr299 = alloca i64, align 8
  %mp = alloca ptr, align 8
  %n = alloca i64, align 8
  %n393 = alloca i64, align 8
  store i64 %obj, ptr %obj.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !3858, metadata !DIExpression()), !dbg !3908
  store ptr %info, ptr %info.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %info.addr, metadata !3859, metadata !DIExpression()), !dbg !3909
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum) #8, !dbg !3910
  tail call void @llvm.dbg.declare(metadata ptr %sum, metadata !3860, metadata !DIExpression()), !dbg !3911
  call void @llvm.lifetime.start.p0(i64 8, ptr %e) #8, !dbg !3912
  tail call void @llvm.dbg.declare(metadata ptr %e, metadata !3861, metadata !DIExpression()), !dbg !3913
  call void @llvm.lifetime.start.p0(i64 4, ptr %sz) #8, !dbg !3914
  tail call void @llvm.dbg.declare(metadata ptr %sz, metadata !3862, metadata !DIExpression()), !dbg !3915
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #8, !dbg !3916
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !3863, metadata !DIExpression()), !dbg !3917
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !3918
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_ptr, metadata !3864, metadata !DIExpression()), !dbg !3919
  %0 = load ptr, ptr %info.addr, align 8, !dbg !3920
  %lit_purge_ptr1 = getelementptr inbounds %struct.erts_shcopy_t, ptr %0, i32 0, i32 11, !dbg !3921
  %1 = load ptr, ptr %lit_purge_ptr1, align 8, !dbg !3921
  store ptr %1, ptr %lit_purge_ptr, align 8, !dbg !3919
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !3922
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_sz, metadata !3865, metadata !DIExpression()), !dbg !3923
  %2 = load ptr, ptr %info.addr, align 8, !dbg !3924
  %lit_purge_sz2 = getelementptr inbounds %struct.erts_shcopy_t, ptr %2, i32 0, i32 12, !dbg !3925
  %3 = load i64, ptr %lit_purge_sz2, align 8, !dbg !3925
  store i64 %3, ptr %lit_purge_sz, align 8, !dbg !3923
  call void @llvm.lifetime.start.p0(i64 4, ptr %copy_literals) #8, !dbg !3926
  tail call void @llvm.dbg.declare(metadata ptr %copy_literals, metadata !3866, metadata !DIExpression()), !dbg !3927
  %4 = load ptr, ptr %info.addr, align 8, !dbg !3928
  %copy_literals3 = getelementptr inbounds %struct.erts_shcopy_t, ptr %4, i32 0, i32 13, !dbg !3929
  %5 = load i32, ptr %copy_literals3, align 8, !dbg !3929
  store i32 %5, ptr %copy_literals, align 4, !dbg !3927
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_tuple_literal) #8, !dbg !3930
  tail call void @llvm.dbg.declare(metadata ptr %empty_tuple_literal, metadata !3867, metadata !DIExpression()), !dbg !3931
  %6 = load i64, ptr @ERTS_GLOBAL_LIT_EMPTY_TUPLE, align 8, !dbg !3932
  store i64 %6, ptr %empty_tuple_literal, align 8, !dbg !3931
  call void @llvm.lifetime.start.p0(i64 8, ptr %s_default_equeue) #8, !dbg !3933
  tail call void @llvm.dbg.declare(metadata ptr %s_default_equeue, metadata !3869, metadata !DIExpression()), !dbg !3933
  %7 = load ptr, ptr %info.addr, align 8, !dbg !3933
  %queue_default = getelementptr inbounds %struct.erts_shcopy_t, ptr %7, i32 0, i32 0, !dbg !3933
  %arraydecay = getelementptr inbounds [16 x i64], ptr %queue_default, i64 0, i64 0, !dbg !3933
  store ptr %arraydecay, ptr %s_default_equeue, align 8, !dbg !3933
  call void @llvm.lifetime.start.p0(i64 48, ptr %s) #8, !dbg !3933
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !3870, metadata !DIExpression()), !dbg !3933
  %start = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !3933
  %8 = load ptr, ptr %s_default_equeue, align 8, !dbg !3933
  store ptr %8, ptr %start, align 8, !dbg !3933
  %front = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !3933
  %9 = load ptr, ptr %s_default_equeue, align 8, !dbg !3933
  store ptr %9, ptr %front, align 8, !dbg !3933
  %back = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !3933
  %10 = load ptr, ptr %s_default_equeue, align 8, !dbg !3933
  store ptr %10, ptr %back, align 8, !dbg !3933
  %possibly_empty = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !3933
  store i32 1, ptr %possibly_empty, align 8, !dbg !3933
  %end = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !3933
  %11 = load ptr, ptr %s_default_equeue, align 8, !dbg !3933
  %add.ptr = getelementptr inbounds i64, ptr %11, i64 16, !dbg !3933
  store ptr %add.ptr, ptr %end, align 8, !dbg !3933
  %alloc_type = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 5, !dbg !3933
  store i32 1506, ptr %alloc_type, align 8, !dbg !3933
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_default_wstack) #8, !dbg !3934
  tail call void @llvm.dbg.declare(metadata ptr %b_default_wstack, metadata !3871, metadata !DIExpression()), !dbg !3934
  %12 = load ptr, ptr %info.addr, align 8, !dbg !3934
  %bitstore_default = getelementptr inbounds %struct.erts_shcopy_t, ptr %12, i32 0, i32 4, !dbg !3934
  %arraydecay4 = getelementptr inbounds [16 x i64], ptr %bitstore_default, i64 0, i64 0, !dbg !3934
  store ptr %arraydecay4, ptr %b_default_wstack, align 8, !dbg !3934
  call void @llvm.lifetime.start.p0(i64 40, ptr %b) #8, !dbg !3934
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !3872, metadata !DIExpression()), !dbg !3934
  %wstart = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !3934
  %13 = load ptr, ptr %b_default_wstack, align 8, !dbg !3934
  store ptr %13, ptr %wstart, align 8, !dbg !3934
  %wsp = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !3934
  %14 = load ptr, ptr %b_default_wstack, align 8, !dbg !3934
  store ptr %14, ptr %wsp, align 8, !dbg !3934
  %wend = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 2, !dbg !3934
  %15 = load ptr, ptr %b_default_wstack, align 8, !dbg !3934
  %add.ptr5 = getelementptr inbounds i64, ptr %15, i64 16, !dbg !3934
  store ptr %add.ptr5, ptr %wend, align 8, !dbg !3934
  %wdefault = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 3, !dbg !3934
  %16 = load ptr, ptr %b_default_wstack, align 8, !dbg !3934
  store ptr %16, ptr %wdefault, align 8, !dbg !3934
  %alloc_type6 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 4, !dbg !3934
  store i32 1506, ptr %alloc_type6, align 8, !dbg !3934
  call void @llvm.lifetime.start.p0(i64 4, ptr %b_bitoffs) #8, !dbg !3934
  tail call void @llvm.dbg.declare(metadata ptr %b_bitoffs, metadata !3873, metadata !DIExpression()), !dbg !3934
  store i32 0, ptr %b_bitoffs, align 4, !dbg !3934
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_buffer) #8, !dbg !3934
  tail call void @llvm.dbg.declare(metadata ptr %b_buffer, metadata !3874, metadata !DIExpression()), !dbg !3934
  store i64 0, ptr %b_buffer, align 8, !dbg !3934
  call void @llvm.lifetime.start.p0(i64 8, ptr %t_default_estack) #8, !dbg !3935
  tail call void @llvm.dbg.declare(metadata ptr %t_default_estack, metadata !3875, metadata !DIExpression()), !dbg !3935
  %17 = load ptr, ptr %info.addr, align 8, !dbg !3935
  %shtable_default = getelementptr inbounds %struct.erts_shcopy_t, ptr %17, i32 0, i32 7, !dbg !3935
  %arraydecay7 = getelementptr inbounds [16 x i64], ptr %shtable_default, i64 0, i64 0, !dbg !3935
  store ptr %arraydecay7, ptr %t_default_estack, align 8, !dbg !3935
  call void @llvm.lifetime.start.p0(i64 40, ptr %t) #8, !dbg !3935
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !3876, metadata !DIExpression()), !dbg !3935
  %start8 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !3935
  %18 = load ptr, ptr %t_default_estack, align 8, !dbg !3935
  store ptr %18, ptr %start8, align 8, !dbg !3935
  %sp = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !3935
  %19 = load ptr, ptr %t_default_estack, align 8, !dbg !3935
  store ptr %19, ptr %sp, align 8, !dbg !3935
  %end9 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 2, !dbg !3935
  %20 = load ptr, ptr %t_default_estack, align 8, !dbg !3935
  %add.ptr10 = getelementptr inbounds i64, ptr %20, i64 16, !dbg !3935
  store ptr %add.ptr10, ptr %end9, align 8, !dbg !3935
  %edefault = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 3, !dbg !3935
  %21 = load ptr, ptr %t_default_estack, align 8, !dbg !3935
  store ptr %21, ptr %edefault, align 8, !dbg !3935
  %alloc_type11 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 4, !dbg !3935
  store i32 1506, ptr %alloc_type11, align 8, !dbg !3935
  call void @llvm.lifetime.start.p0(i64 8, ptr %t_offset) #8, !dbg !3935
  tail call void @llvm.dbg.declare(metadata ptr %t_offset, metadata !3877, metadata !DIExpression()), !dbg !3935
  store i64 0, ptr %t_offset, align 8, !dbg !3935
  %22 = load i64, ptr %obj.addr, align 8, !dbg !3936
  %and = and i64 %22, 3, !dbg !3936
  %cmp = icmp eq i64 %and, 3, !dbg !3936
  br i1 %cmp, label %if.then, label %if.end, !dbg !3938

if.then:                                          ; preds = %entry
  store i64 0, ptr %retval, align 8, !dbg !3939
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup549, !dbg !3939

if.end:                                           ; preds = %entry
  store i64 0, ptr %sum, align 8, !dbg !3940
  br label %for.cond, !dbg !3941

for.cond:                                         ; preds = %sw.epilog548, %if.end
  %23 = load i64, ptr %obj.addr, align 8, !dbg !3942
  %and12 = and i64 %23, 3, !dbg !3942
  switch i64 %and12, label %sw.default547 [
    i64 1, label %sw.bb
    i64 2, label %sw.bb131
    i64 3, label %sw.bb482
  ], !dbg !3943

sw.bb:                                            ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %head) #8, !dbg !3944
  tail call void @llvm.dbg.declare(metadata ptr %head, metadata !3878, metadata !DIExpression()), !dbg !3945
  call void @llvm.lifetime.start.p0(i64 8, ptr %tail) #8, !dbg !3944
  tail call void @llvm.dbg.declare(metadata ptr %tail, metadata !3884, metadata !DIExpression()), !dbg !3946
  %24 = load i64, ptr %obj.addr, align 8, !dbg !3947
  %sub = sub i64 %24, 1, !dbg !3947
  %25 = inttoptr i64 %sub to ptr, !dbg !3947
  store ptr %25, ptr %ptr, align 8, !dbg !3948
  %26 = load i64, ptr %obj.addr, align 8, !dbg !3949
  %27 = load ptr, ptr %ptr, align 8, !dbg !3951
  %call = call i32 @erts_is_literal(i64 noundef %26, ptr noundef %27), !dbg !3952
  %tobool = icmp ne i32 %call, 0, !dbg !3952
  br i1 %tobool, label %if.then13, label %if.end23, !dbg !3953

if.then13:                                        ; preds = %sw.bb
  %28 = load i32, ptr %copy_literals, align 4, !dbg !3954
  %tobool14 = icmp ne i32 %28, 0, !dbg !3954
  br i1 %tobool14, label %if.then20, label %lor.lhs.false, !dbg !3957

lor.lhs.false:                                    ; preds = %if.then13
  %29 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !3958
  %tobool15 = icmp ne ptr %29, null, !dbg !3958
  br i1 %tobool15, label %land.lhs.true, label %if.end22, !dbg !3958

land.lhs.true:                                    ; preds = %lor.lhs.false
  %30 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !3958
  %31 = load ptr, ptr %ptr, align 8, !dbg !3958
  %cmp16 = icmp ule ptr %30, %31, !dbg !3958
  br i1 %cmp16, label %land.lhs.true17, label %if.end22, !dbg !3958

land.lhs.true17:                                  ; preds = %land.lhs.true
  %32 = load ptr, ptr %ptr, align 8, !dbg !3958
  %33 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !3958
  %34 = load i64, ptr %lit_purge_sz, align 8, !dbg !3958
  %add.ptr18 = getelementptr inbounds i64, ptr %33, i64 %34, !dbg !3958
  %cmp19 = icmp ult ptr %32, %add.ptr18, !dbg !3958
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !3959

if.then20:                                        ; preds = %land.lhs.true17, %if.then13
  %35 = load i64, ptr %obj.addr, align 8, !dbg !3960
  %call21 = call i64 @size_object_x(i64 noundef %35, ptr noundef null), !dbg !3960
  %36 = load ptr, ptr %info.addr, align 8, !dbg !3961
  %literal_size = getelementptr inbounds %struct.erts_shcopy_t, ptr %36, i32 0, i32 10, !dbg !3962
  %37 = load i64, ptr %literal_size, align 8, !dbg !3963
  %add = add i64 %37, %call21, !dbg !3963
  store i64 %add, ptr %literal_size, align 8, !dbg !3963
  br label %if.end22, !dbg !3961

if.end22:                                         ; preds = %if.then20, %land.lhs.true17, %land.lhs.true, %lor.lhs.false
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3964

if.end23:                                         ; preds = %sw.bb
  %38 = load ptr, ptr %ptr, align 8, !dbg !3965
  %arrayidx = getelementptr inbounds i64, ptr %38, i64 0, !dbg !3965
  %39 = load i64, ptr %arrayidx, align 8, !dbg !3965
  store i64 %39, ptr %head, align 8, !dbg !3966
  %40 = load ptr, ptr %ptr, align 8, !dbg !3967
  %arrayidx24 = getelementptr inbounds i64, ptr %40, i64 1, !dbg !3967
  %41 = load i64, ptr %arrayidx24, align 8, !dbg !3967
  store i64 %41, ptr %tail, align 8, !dbg !3968
  %42 = load i64, ptr %tail, align 8, !dbg !3969
  %and25 = and i64 %42, 3, !dbg !3969
  %cmp26 = icmp eq i64 %and25, 0, !dbg !3971
  br i1 %cmp26, label %if.then30, label %lor.lhs.false27, !dbg !3972

lor.lhs.false27:                                  ; preds = %if.end23
  %43 = load i64, ptr %head, align 8, !dbg !3973
  %and28 = and i64 %43, 3, !dbg !3973
  %cmp29 = icmp eq i64 %and28, 0, !dbg !3974
  br i1 %cmp29, label %if.then30, label %if.end50, !dbg !3975

if.then30:                                        ; preds = %lor.lhs.false27, %if.end23
  %44 = load i64, ptr %tail, align 8, !dbg !3976
  %cmp31 = icmp ne i64 %44, 0, !dbg !3979
  br i1 %cmp31, label %if.then32, label %if.end49, !dbg !3980

if.then32:                                        ; preds = %if.then30
  %45 = load i64, ptr %t_offset, align 8, !dbg !3981
  store i64 %45, ptr %e, align 8, !dbg !3983
  br label %do.body, !dbg !3984

do.body:                                          ; preds = %if.then32
  %sp33 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !3985
  %46 = load ptr, ptr %sp33, align 8, !dbg !3985
  %end34 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 2, !dbg !3985
  %47 = load ptr, ptr %end34, align 8, !dbg !3985
  %add.ptr35 = getelementptr inbounds i64, ptr %47, i64 -4, !dbg !3985
  %cmp36 = icmp ugt ptr %46, %add.ptr35, !dbg !3985
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !3988

if.then37:                                        ; preds = %do.body
  call void @erl_grow_estack(ptr noundef %t, i64 noundef 4), !dbg !3989
  br label %if.end38, !dbg !3989

if.end38:                                         ; preds = %if.then37, %do.body
  %48 = load i64, ptr %head, align 8, !dbg !3988
  %sp39 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !3988
  %49 = load ptr, ptr %sp39, align 8, !dbg !3988
  %incdec.ptr = getelementptr inbounds i64, ptr %49, i32 1, !dbg !3988
  store ptr %incdec.ptr, ptr %sp39, align 8, !dbg !3988
  store i64 %48, ptr %49, align 8, !dbg !3988
  %50 = load i64, ptr %tail, align 8, !dbg !3988
  %sp40 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !3988
  %51 = load ptr, ptr %sp40, align 8, !dbg !3988
  %incdec.ptr41 = getelementptr inbounds i64, ptr %51, i32 1, !dbg !3988
  store ptr %incdec.ptr41, ptr %sp40, align 8, !dbg !3988
  store i64 %50, ptr %51, align 8, !dbg !3988
  %sp42 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !3988
  %52 = load ptr, ptr %sp42, align 8, !dbg !3988
  %incdec.ptr43 = getelementptr inbounds i64, ptr %52, i32 1, !dbg !3988
  store ptr %incdec.ptr43, ptr %sp42, align 8, !dbg !3988
  store i64 0, ptr %52, align 8, !dbg !3988
  %53 = load ptr, ptr %ptr, align 8, !dbg !3988
  %54 = ptrtoint ptr %53 to i64, !dbg !3988
  %sp44 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !3988
  %55 = load ptr, ptr %sp44, align 8, !dbg !3988
  %incdec.ptr45 = getelementptr inbounds i64, ptr %55, i32 1, !dbg !3988
  store ptr %incdec.ptr45, ptr %sp44, align 8, !dbg !3988
  store i64 %54, ptr %55, align 8, !dbg !3988
  %56 = load i64, ptr %t_offset, align 8, !dbg !3988
  %add46 = add i64 %56, 4, !dbg !3988
  store i64 %add46, ptr %t_offset, align 8, !dbg !3988
  br label %do.cond, !dbg !3988

do.cond:                                          ; preds = %if.end38
  br label %do.end, !dbg !3988

do.end:                                           ; preds = %do.cond
  %57 = load i64, ptr %e, align 8, !dbg !3991
  %shl = shl i64 %57, 2, !dbg !3992
  %or = or i64 %shl, 0, !dbg !3993
  %58 = load ptr, ptr %ptr, align 8, !dbg !3994
  %arrayidx47 = getelementptr inbounds i64, ptr %58, i64 0, !dbg !3994
  store i64 %or, ptr %arrayidx47, align 8, !dbg !3995
  %59 = load ptr, ptr %ptr, align 8, !dbg !3996
  %arrayidx48 = getelementptr inbounds i64, ptr %59, i64 1, !dbg !3996
  store i64 0, ptr %arrayidx48, align 8, !dbg !3997
  br label %if.end49, !dbg !3998

if.end49:                                         ; preds = %do.end, %if.then30
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3999

if.end50:                                         ; preds = %lor.lhs.false27
  %60 = load i64, ptr %tail, align 8, !dbg !4000
  %and51 = and i64 %60, 3, !dbg !4000
  switch i64 %and51, label %sw.epilog [
    i64 1, label %sw.bb52
    i64 3, label %sw.bb56
    i64 2, label %sw.bb65
  ], !dbg !4001

sw.bb52:                                          ; preds = %if.end50
  %61 = load i64, ptr %tail, align 8, !dbg !4002
  %sub53 = sub i64 %61, 1, !dbg !4004
  %or54 = or i64 %sub53, 0, !dbg !4005
  %62 = load ptr, ptr %ptr, align 8, !dbg !4006
  %arrayidx55 = getelementptr inbounds i64, ptr %62, i64 1, !dbg !4006
  store i64 %or54, ptr %arrayidx55, align 8, !dbg !4007
  br label %sw.epilog, !dbg !4008

sw.bb56:                                          ; preds = %if.end50
  %63 = load i64, ptr %head, align 8, !dbg !4009
  %64 = load i64, ptr %head, align 8, !dbg !4010
  %and57 = and i64 %64, 3, !dbg !4010
  %sub58 = sub i64 %63, %and57, !dbg !4011
  %or59 = or i64 %sub58, 0, !dbg !4012
  %65 = load ptr, ptr %ptr, align 8, !dbg !4013
  %arrayidx60 = getelementptr inbounds i64, ptr %65, i64 0, !dbg !4013
  store i64 %or59, ptr %arrayidx60, align 8, !dbg !4014
  %66 = load i64, ptr %tail, align 8, !dbg !4015
  %sub61 = sub i64 %66, 3, !dbg !4016
  %67 = load i64, ptr %head, align 8, !dbg !4017
  %and62 = and i64 %67, 3, !dbg !4017
  %or63 = or i64 %sub61, %and62, !dbg !4018
  %68 = load ptr, ptr %ptr, align 8, !dbg !4019
  %arrayidx64 = getelementptr inbounds i64, ptr %68, i64 1, !dbg !4019
  store i64 %or63, ptr %arrayidx64, align 8, !dbg !4020
  br label %sw.epilog, !dbg !4021

sw.bb65:                                          ; preds = %if.end50
  br label %do.body66, !dbg !4022

do.body66:                                        ; preds = %sw.bb65
  %69 = load i64, ptr %head, align 8, !dbg !4023
  %and67 = and i64 %69, 3, !dbg !4023
  %70 = load i32, ptr %b_bitoffs, align 4, !dbg !4023
  %sh_prom = zext i32 %70 to i64, !dbg !4023
  %shl68 = shl i64 %and67, %sh_prom, !dbg !4023
  %71 = load i64, ptr %b_buffer, align 8, !dbg !4023
  %or69 = or i64 %71, %shl68, !dbg !4023
  store i64 %or69, ptr %b_buffer, align 8, !dbg !4023
  %72 = load i32, ptr %b_bitoffs, align 4, !dbg !4023
  %add70 = add nsw i32 %72, 2, !dbg !4023
  store i32 %add70, ptr %b_bitoffs, align 4, !dbg !4023
  %73 = load i32, ptr %b_bitoffs, align 4, !dbg !4025
  %conv = sext i32 %73 to i64, !dbg !4025
  %cmp71 = icmp uge i64 %conv, 64, !dbg !4025
  br i1 %cmp71, label %if.then73, label %if.end88, !dbg !4023

if.then73:                                        ; preds = %do.body66
  br label %do.body74, !dbg !4027

do.body74:                                        ; preds = %if.then73
  br label %do.body75, !dbg !4029

do.body75:                                        ; preds = %do.body74
  %wend76 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 2, !dbg !4031
  %74 = load ptr, ptr %wend76, align 8, !dbg !4031
  %wsp77 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !4031
  %75 = load ptr, ptr %wsp77, align 8, !dbg !4031
  %sub.ptr.lhs.cast = ptrtoint ptr %74 to i64, !dbg !4031
  %sub.ptr.rhs.cast = ptrtoint ptr %75 to i64, !dbg !4031
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4031
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !4031
  %cmp78 = icmp slt i64 %sub.ptr.div, 1, !dbg !4031
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !4034

if.then80:                                        ; preds = %do.body75
  call void @erl_grow_wstack(ptr noundef %b, i64 noundef 1), !dbg !4035
  br label %if.end81, !dbg !4035

if.end81:                                         ; preds = %if.then80, %do.body75
  br label %do.cond82, !dbg !4034

do.cond82:                                        ; preds = %if.end81
  br label %do.end83, !dbg !4034

do.end83:                                         ; preds = %do.cond82
  %76 = load i64, ptr %b_buffer, align 8, !dbg !4029
  %wsp84 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !4029
  %77 = load ptr, ptr %wsp84, align 8, !dbg !4029
  %incdec.ptr85 = getelementptr inbounds i64, ptr %77, i32 1, !dbg !4029
  store ptr %incdec.ptr85, ptr %wsp84, align 8, !dbg !4029
  store i64 %76, ptr %77, align 8, !dbg !4029
  br label %do.cond86, !dbg !4029

do.cond86:                                        ; preds = %do.end83
  br label %do.end87, !dbg !4029

do.end87:                                         ; preds = %do.cond86
  store i32 0, ptr %b_bitoffs, align 4, !dbg !4027
  store i64 0, ptr %b_buffer, align 8, !dbg !4027
  br label %if.end88, !dbg !4027

if.end88:                                         ; preds = %do.end87, %do.body66
  br label %do.cond89, !dbg !4023

do.cond89:                                        ; preds = %if.end88
  br label %do.end90, !dbg !4023

do.end90:                                         ; preds = %do.cond89
  %78 = load i64, ptr %head, align 8, !dbg !4037
  %79 = load i64, ptr %head, align 8, !dbg !4038
  %and91 = and i64 %79, 3, !dbg !4038
  %sub92 = sub i64 %78, %and91, !dbg !4039
  %or93 = or i64 %sub92, 0, !dbg !4040
  %80 = load ptr, ptr %ptr, align 8, !dbg !4041
  %arrayidx94 = getelementptr inbounds i64, ptr %80, i64 0, !dbg !4041
  store i64 %or93, ptr %arrayidx94, align 8, !dbg !4042
  %81 = load i64, ptr %tail, align 8, !dbg !4043
  %sub95 = sub i64 %81, 2, !dbg !4044
  %or96 = or i64 %sub95, 0, !dbg !4045
  %82 = load ptr, ptr %ptr, align 8, !dbg !4046
  %arrayidx97 = getelementptr inbounds i64, ptr %82, i64 1, !dbg !4046
  store i64 %or96, ptr %arrayidx97, align 8, !dbg !4047
  br label %sw.epilog, !dbg !4048

sw.epilog:                                        ; preds = %if.end50, %do.end90, %sw.bb56, %sw.bb52
  %83 = load i64, ptr %sum, align 8, !dbg !4049
  %add98 = add i64 %83, 2, !dbg !4049
  store i64 %add98, ptr %sum, align 8, !dbg !4049
  %84 = load i64, ptr %head, align 8, !dbg !4050
  %and99 = and i64 %84, 3, !dbg !4050
  %cmp100 = icmp eq i64 %and99, 3, !dbg !4050
  br i1 %cmp100, label %if.end129, label %if.then102, !dbg !4052

if.then102:                                       ; preds = %sw.epilog
  br label %do.body103, !dbg !4053

do.body103:                                       ; preds = %if.then102
  %back104 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4055
  %85 = load ptr, ptr %back104, align 8, !dbg !4055
  %front105 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !4055
  %86 = load ptr, ptr %front105, align 8, !dbg !4055
  %cmp106 = icmp eq ptr %85, %86, !dbg !4055
  br i1 %cmp106, label %land.lhs.true108, label %if.end112, !dbg !4055

land.lhs.true108:                                 ; preds = %do.body103
  %possibly_empty109 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4055
  %87 = load i32, ptr %possibly_empty109, align 8, !dbg !4055
  %tobool110 = icmp ne i32 %87, 0, !dbg !4055
  br i1 %tobool110, label %if.end112, label %if.then111, !dbg !4058

if.then111:                                       ; preds = %land.lhs.true108
  %88 = load ptr, ptr %s_default_equeue, align 8, !dbg !4059
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %88), !dbg !4059
  br label %if.end112, !dbg !4059

if.end112:                                        ; preds = %if.then111, %land.lhs.true108, %do.body103
  br label %do.body113, !dbg !4058

do.body113:                                       ; preds = %if.end112
  %possibly_empty114 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4061
  store i32 0, ptr %possibly_empty114, align 8, !dbg !4061
  %89 = load i64, ptr %head, align 8, !dbg !4061
  %back115 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4061
  %90 = load ptr, ptr %back115, align 8, !dbg !4061
  store i64 %89, ptr %90, align 8, !dbg !4061
  %back116 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4063
  %91 = load ptr, ptr %back116, align 8, !dbg !4063
  %incdec.ptr117 = getelementptr inbounds i64, ptr %91, i32 1, !dbg !4063
  store ptr %incdec.ptr117, ptr %back116, align 8, !dbg !4063
  %end118 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4063
  %92 = load ptr, ptr %end118, align 8, !dbg !4063
  %cmp119 = icmp eq ptr %incdec.ptr117, %92, !dbg !4063
  br i1 %cmp119, label %if.then121, label %if.end124, !dbg !4061

if.then121:                                       ; preds = %do.body113
  %start122 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4065
  %93 = load ptr, ptr %start122, align 8, !dbg !4065
  %back123 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4065
  store ptr %93, ptr %back123, align 8, !dbg !4065
  br label %if.end124, !dbg !4065

if.end124:                                        ; preds = %if.then121, %do.body113
  br label %do.cond125, !dbg !4061

do.cond125:                                       ; preds = %if.end124
  br label %do.end126, !dbg !4061

do.end126:                                        ; preds = %do.cond125
  br label %do.cond127, !dbg !4058

do.cond127:                                       ; preds = %do.end126
  br label %do.end128, !dbg !4058

do.end128:                                        ; preds = %do.cond127
  br label %if.end129, !dbg !4067

if.end129:                                        ; preds = %do.end128, %sw.epilog
  %94 = load i64, ptr %tail, align 8, !dbg !4068
  store i64 %94, ptr %obj.addr, align 8, !dbg !4069
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4070

cleanup:                                          ; preds = %if.end49, %if.end22, %if.end129
  call void @llvm.lifetime.end.p0(i64 8, ptr %tail) #8, !dbg !4071
  call void @llvm.lifetime.end.p0(i64 8, ptr %head) #8, !dbg !4071
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup549 [
    i32 4, label %sw.epilog548
    i32 5, label %pop_next
  ]

sw.bb131:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr) #8, !dbg !4072
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !3885, metadata !DIExpression()), !dbg !4073
  %95 = load i64, ptr %obj.addr, align 8, !dbg !4074
  %sub132 = sub i64 %95, 2, !dbg !4074
  %96 = inttoptr i64 %sub132 to ptr, !dbg !4074
  store ptr %96, ptr %ptr, align 8, !dbg !4075
  %97 = load i64, ptr %obj.addr, align 8, !dbg !4076
  %98 = load ptr, ptr %ptr, align 8, !dbg !4078
  %call133 = call i32 @erts_is_literal(i64 noundef %97, ptr noundef %98), !dbg !4079
  %tobool134 = icmp ne i32 %call133, 0, !dbg !4079
  br i1 %tobool134, label %if.then135, label %if.end154, !dbg !4080

if.then135:                                       ; preds = %sw.bb131
  %99 = load i64, ptr %obj.addr, align 8, !dbg !4081
  %100 = load i64, ptr %empty_tuple_literal, align 8, !dbg !4084
  %cmp136 = icmp ne i64 %99, %100, !dbg !4085
  br i1 %cmp136, label %land.lhs.true138, label %if.end153, !dbg !4086

land.lhs.true138:                                 ; preds = %if.then135
  %101 = load i32, ptr %copy_literals, align 4, !dbg !4087
  %tobool139 = icmp ne i32 %101, 0, !dbg !4087
  br i1 %tobool139, label %if.then149, label %lor.lhs.false140, !dbg !4088

lor.lhs.false140:                                 ; preds = %land.lhs.true138
  %102 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4089
  %tobool141 = icmp ne ptr %102, null, !dbg !4089
  br i1 %tobool141, label %land.lhs.true142, label %if.end153, !dbg !4089

land.lhs.true142:                                 ; preds = %lor.lhs.false140
  %103 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4089
  %104 = load ptr, ptr %ptr, align 8, !dbg !4089
  %cmp143 = icmp ule ptr %103, %104, !dbg !4089
  br i1 %cmp143, label %land.lhs.true145, label %if.end153, !dbg !4089

land.lhs.true145:                                 ; preds = %land.lhs.true142
  %105 = load ptr, ptr %ptr, align 8, !dbg !4089
  %106 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4089
  %107 = load i64, ptr %lit_purge_sz, align 8, !dbg !4089
  %add.ptr146 = getelementptr inbounds i64, ptr %106, i64 %107, !dbg !4089
  %cmp147 = icmp ult ptr %105, %add.ptr146, !dbg !4089
  br i1 %cmp147, label %if.then149, label %if.end153, !dbg !4090

if.then149:                                       ; preds = %land.lhs.true145, %land.lhs.true138
  %108 = load i64, ptr %obj.addr, align 8, !dbg !4091
  %call150 = call i64 @size_object_x(i64 noundef %108, ptr noundef null), !dbg !4091
  %109 = load ptr, ptr %info.addr, align 8, !dbg !4092
  %literal_size151 = getelementptr inbounds %struct.erts_shcopy_t, ptr %109, i32 0, i32 10, !dbg !4093
  %110 = load i64, ptr %literal_size151, align 8, !dbg !4094
  %add152 = add i64 %110, %call150, !dbg !4094
  store i64 %add152, ptr %literal_size151, align 8, !dbg !4094
  br label %if.end153, !dbg !4092

if.end153:                                        ; preds = %if.then149, %land.lhs.true145, %land.lhs.true142, %lor.lhs.false140, %if.then135
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup481, !dbg !4095

if.end154:                                        ; preds = %sw.bb131
  %111 = load ptr, ptr %ptr, align 8, !dbg !4096
  %112 = load i64, ptr %111, align 8, !dbg !4097
  store i64 %112, ptr %hdr, align 8, !dbg !4098
  %113 = load i64, ptr %hdr, align 8, !dbg !4099
  %and155 = and i64 %113, 3, !dbg !4099
  %cmp156 = icmp ne i64 %and155, 0, !dbg !4101
  br i1 %cmp156, label %if.then158, label %if.end185, !dbg !4102

if.then158:                                       ; preds = %if.end154
  %114 = load i64, ptr %hdr, align 8, !dbg !4103
  %and159 = and i64 %114, 3, !dbg !4103
  %cmp160 = icmp eq i64 %and159, 1, !dbg !4106
  br i1 %cmp160, label %if.then162, label %if.end184, !dbg !4107

if.then162:                                       ; preds = %if.then158
  %115 = load i64, ptr %t_offset, align 8, !dbg !4108
  store i64 %115, ptr %e, align 8, !dbg !4110
  br label %do.body163, !dbg !4111

do.body163:                                       ; preds = %if.then162
  %sp164 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4112
  %116 = load ptr, ptr %sp164, align 8, !dbg !4112
  %end165 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 2, !dbg !4112
  %117 = load ptr, ptr %end165, align 8, !dbg !4112
  %add.ptr166 = getelementptr inbounds i64, ptr %117, i64 -4, !dbg !4112
  %cmp167 = icmp ugt ptr %116, %add.ptr166, !dbg !4112
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !4115

if.then169:                                       ; preds = %do.body163
  call void @erl_grow_estack(ptr noundef %t, i64 noundef 4), !dbg !4116
  br label %if.end170, !dbg !4116

if.end170:                                        ; preds = %if.then169, %do.body163
  %118 = load i64, ptr %hdr, align 8, !dbg !4115
  %sp171 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4115
  %119 = load ptr, ptr %sp171, align 8, !dbg !4115
  %incdec.ptr172 = getelementptr inbounds i64, ptr %119, i32 1, !dbg !4115
  store ptr %incdec.ptr172, ptr %sp171, align 8, !dbg !4115
  store i64 %118, ptr %119, align 8, !dbg !4115
  %sp173 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4115
  %120 = load ptr, ptr %sp173, align 8, !dbg !4115
  %incdec.ptr174 = getelementptr inbounds i64, ptr %120, i32 1, !dbg !4115
  store ptr %incdec.ptr174, ptr %sp173, align 8, !dbg !4115
  store i64 0, ptr %120, align 8, !dbg !4115
  %sp175 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4115
  %121 = load ptr, ptr %sp175, align 8, !dbg !4115
  %incdec.ptr176 = getelementptr inbounds i64, ptr %121, i32 1, !dbg !4115
  store ptr %incdec.ptr176, ptr %sp175, align 8, !dbg !4115
  store i64 0, ptr %121, align 8, !dbg !4115
  %122 = load ptr, ptr %ptr, align 8, !dbg !4115
  %123 = ptrtoint ptr %122 to i64, !dbg !4115
  %sp177 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4115
  %124 = load ptr, ptr %sp177, align 8, !dbg !4115
  %incdec.ptr178 = getelementptr inbounds i64, ptr %124, i32 1, !dbg !4115
  store ptr %incdec.ptr178, ptr %sp177, align 8, !dbg !4115
  store i64 %123, ptr %124, align 8, !dbg !4115
  %125 = load i64, ptr %t_offset, align 8, !dbg !4115
  %add179 = add i64 %125, 4, !dbg !4115
  store i64 %add179, ptr %t_offset, align 8, !dbg !4115
  br label %do.cond180, !dbg !4115

do.cond180:                                       ; preds = %if.end170
  br label %do.end181, !dbg !4115

do.end181:                                        ; preds = %do.cond180
  %126 = load i64, ptr %e, align 8, !dbg !4118
  %shl182 = shl i64 %126, 2, !dbg !4119
  %or183 = or i64 %shl182, 2, !dbg !4120
  %127 = load ptr, ptr %ptr, align 8, !dbg !4121
  store i64 %or183, ptr %127, align 8, !dbg !4122
  br label %if.end184, !dbg !4123

if.end184:                                        ; preds = %do.end181, %if.then158
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup481, !dbg !4124

if.end185:                                        ; preds = %if.end154
  %128 = load i64, ptr %hdr, align 8, !dbg !4125
  %129 = load i64, ptr %hdr, align 8, !dbg !4126
  %and186 = and i64 %129, 3, !dbg !4126
  %sub187 = sub i64 %128, %and186, !dbg !4127
  %add188 = add i64 %sub187, 1, !dbg !4128
  %130 = load ptr, ptr %ptr, align 8, !dbg !4129
  store i64 %add188, ptr %130, align 8, !dbg !4130
  %131 = load i64, ptr %hdr, align 8, !dbg !4131
  %and189 = and i64 %131, 63, !dbg !4132
  switch i64 %and189, label %sw.default468 [
    i64 0, label %sw.bb190
    i64 20, label %sw.bb235
    i64 40, label %sw.bb295
    i64 60, label %sw.bb344
    i64 4, label %sw.bb467
  ], !dbg !4133

sw.bb190:                                         ; preds = %if.end185
  call void @llvm.lifetime.start.p0(i64 4, ptr %arity) #8, !dbg !4134
  tail call void @llvm.dbg.declare(metadata ptr %arity, metadata !3887, metadata !DIExpression()), !dbg !4135
  %132 = load i64, ptr %hdr, align 8, !dbg !4136
  %and191 = and i64 %132, 63, !dbg !4136
  %cmp192 = icmp eq i64 %and191, 60, !dbg !4136
  br i1 %cmp192, label %cond.true, label %cond.false, !dbg !4136

cond.true:                                        ; preds = %sw.bb190
  %133 = load i64, ptr %hdr, align 8, !dbg !4136
  %shr = lshr i64 %133, 8, !dbg !4136
  %and194 = and i64 %shr, 255, !dbg !4136
  br label %cond.end, !dbg !4136

cond.false:                                       ; preds = %sw.bb190
  %134 = load i64, ptr %hdr, align 8, !dbg !4136
  %shr195 = lshr i64 %134, 6, !dbg !4136
  br label %cond.end, !dbg !4136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %and194, %cond.true ], [ %shr195, %cond.false ], !dbg !4136
  %conv196 = trunc i64 %cond to i32, !dbg !4136
  store i32 %conv196, ptr %arity, align 4, !dbg !4135
  %135 = load i32, ptr %arity, align 4, !dbg !4137
  %add197 = add nsw i32 %135, 1, !dbg !4138
  %conv198 = sext i32 %add197 to i64, !dbg !4137
  %136 = load i64, ptr %sum, align 8, !dbg !4139
  %add199 = add i64 %136, %conv198, !dbg !4139
  store i64 %add199, ptr %sum, align 8, !dbg !4139
  br label %while.cond, !dbg !4140

while.cond:                                       ; preds = %if.end233, %cond.end
  %137 = load i32, ptr %arity, align 4, !dbg !4141
  %dec = add nsw i32 %137, -1, !dbg !4141
  store i32 %dec, ptr %arity, align 4, !dbg !4141
  %cmp200 = icmp sgt i32 %137, 0, !dbg !4142
  br i1 %cmp200, label %while.body, label %while.end, !dbg !4140

while.body:                                       ; preds = %while.cond
  %138 = load ptr, ptr %ptr, align 8, !dbg !4143
  %incdec.ptr202 = getelementptr inbounds i64, ptr %138, i32 1, !dbg !4143
  store ptr %incdec.ptr202, ptr %ptr, align 8, !dbg !4143
  %139 = load i64, ptr %incdec.ptr202, align 8, !dbg !4145
  store i64 %139, ptr %obj.addr, align 8, !dbg !4146
  %140 = load i64, ptr %obj.addr, align 8, !dbg !4147
  %and203 = and i64 %140, 3, !dbg !4147
  %cmp204 = icmp eq i64 %and203, 3, !dbg !4147
  br i1 %cmp204, label %if.end233, label %if.then206, !dbg !4149

if.then206:                                       ; preds = %while.body
  br label %do.body207, !dbg !4150

do.body207:                                       ; preds = %if.then206
  %back208 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4152
  %141 = load ptr, ptr %back208, align 8, !dbg !4152
  %front209 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !4152
  %142 = load ptr, ptr %front209, align 8, !dbg !4152
  %cmp210 = icmp eq ptr %141, %142, !dbg !4152
  br i1 %cmp210, label %land.lhs.true212, label %if.end216, !dbg !4152

land.lhs.true212:                                 ; preds = %do.body207
  %possibly_empty213 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4152
  %143 = load i32, ptr %possibly_empty213, align 8, !dbg !4152
  %tobool214 = icmp ne i32 %143, 0, !dbg !4152
  br i1 %tobool214, label %if.end216, label %if.then215, !dbg !4155

if.then215:                                       ; preds = %land.lhs.true212
  %144 = load ptr, ptr %s_default_equeue, align 8, !dbg !4156
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %144), !dbg !4156
  br label %if.end216, !dbg !4156

if.end216:                                        ; preds = %if.then215, %land.lhs.true212, %do.body207
  br label %do.body217, !dbg !4155

do.body217:                                       ; preds = %if.end216
  %possibly_empty218 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4158
  store i32 0, ptr %possibly_empty218, align 8, !dbg !4158
  %145 = load i64, ptr %obj.addr, align 8, !dbg !4158
  %back219 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4158
  %146 = load ptr, ptr %back219, align 8, !dbg !4158
  store i64 %145, ptr %146, align 8, !dbg !4158
  %back220 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4160
  %147 = load ptr, ptr %back220, align 8, !dbg !4160
  %incdec.ptr221 = getelementptr inbounds i64, ptr %147, i32 1, !dbg !4160
  store ptr %incdec.ptr221, ptr %back220, align 8, !dbg !4160
  %end222 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4160
  %148 = load ptr, ptr %end222, align 8, !dbg !4160
  %cmp223 = icmp eq ptr %incdec.ptr221, %148, !dbg !4160
  br i1 %cmp223, label %if.then225, label %if.end228, !dbg !4158

if.then225:                                       ; preds = %do.body217
  %start226 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4162
  %149 = load ptr, ptr %start226, align 8, !dbg !4162
  %back227 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4162
  store ptr %149, ptr %back227, align 8, !dbg !4162
  br label %if.end228, !dbg !4162

if.end228:                                        ; preds = %if.then225, %do.body217
  br label %do.cond229, !dbg !4158

do.cond229:                                       ; preds = %if.end228
  br label %do.end230, !dbg !4158

do.end230:                                        ; preds = %do.cond229
  br label %do.cond231, !dbg !4155

do.cond231:                                       ; preds = %do.end230
  br label %do.end232, !dbg !4155

do.end232:                                        ; preds = %do.cond231
  br label %if.end233, !dbg !4164

if.end233:                                        ; preds = %do.end232, %while.body
  br label %while.cond, !dbg !4140, !llvm.loop !4165

while.end:                                        ; preds = %while.cond
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %arity) #8, !dbg !4167
  br label %cleanup481

sw.bb235:                                         ; preds = %if.end185
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp) #8, !dbg !4168
  tail call void @llvm.dbg.declare(metadata ptr %funp, metadata !3890, metadata !DIExpression()), !dbg !4169
  %150 = load ptr, ptr %ptr, align 8, !dbg !4170
  store ptr %150, ptr %funp, align 8, !dbg !4169
  call void @llvm.lifetime.start.p0(i64 4, ptr %eterms) #8, !dbg !4171
  tail call void @llvm.dbg.declare(metadata ptr %eterms, metadata !3892, metadata !DIExpression()), !dbg !4172
  %151 = load ptr, ptr %funp, align 8, !dbg !4173
  %num_free = getelementptr inbounds %struct.erl_fun_thing, ptr %151, i32 0, i32 4, !dbg !4174
  %152 = load i8, ptr %num_free, align 1, !dbg !4174
  %conv236 = zext i8 %152 to i32, !dbg !4173
  %add237 = add nsw i32 1, %conv236, !dbg !4175
  store i32 %add237, ptr %eterms, align 4, !dbg !4172
  %153 = load i64, ptr %hdr, align 8, !dbg !4176
  %and238 = and i64 %153, 63, !dbg !4176
  %cmp239 = icmp eq i64 %and238, 60, !dbg !4176
  br i1 %cmp239, label %cond.true241, label %cond.false244, !dbg !4176

cond.true241:                                     ; preds = %sw.bb235
  %154 = load i64, ptr %hdr, align 8, !dbg !4176
  %shr242 = lshr i64 %154, 8, !dbg !4176
  %and243 = and i64 %shr242, 255, !dbg !4176
  br label %cond.end246, !dbg !4176

cond.false244:                                    ; preds = %sw.bb235
  %155 = load i64, ptr %hdr, align 8, !dbg !4176
  %shr245 = lshr i64 %155, 6, !dbg !4176
  br label %cond.end246, !dbg !4176

cond.end246:                                      ; preds = %cond.false244, %cond.true241
  %cond247 = phi i64 [ %and243, %cond.true241 ], [ %shr245, %cond.false244 ], !dbg !4176
  %conv248 = trunc i64 %cond247 to i32, !dbg !4176
  store i32 %conv248, ptr %sz, align 4, !dbg !4177
  %156 = load i32, ptr %sz, align 4, !dbg !4178
  %add249 = add i32 1, %156, !dbg !4179
  %157 = load i32, ptr %eterms, align 4, !dbg !4180
  %add250 = add i32 %add249, %157, !dbg !4181
  %conv251 = zext i32 %add250 to i64, !dbg !4182
  %158 = load i64, ptr %sum, align 8, !dbg !4183
  %add252 = add i64 %158, %conv251, !dbg !4183
  store i64 %add252, ptr %sum, align 8, !dbg !4183
  %159 = load i32, ptr %sz, align 4, !dbg !4184
  %add253 = add i32 1, %159, !dbg !4185
  %160 = load ptr, ptr %ptr, align 8, !dbg !4186
  %idx.ext = zext i32 %add253 to i64, !dbg !4186
  %add.ptr254 = getelementptr inbounds i64, ptr %160, i64 %idx.ext, !dbg !4186
  store ptr %add.ptr254, ptr %ptr, align 8, !dbg !4186
  br label %while.cond255, !dbg !4187

while.cond255:                                    ; preds = %if.end291, %cond.end246
  %161 = load i32, ptr %eterms, align 4, !dbg !4188
  %dec256 = add i32 %161, -1, !dbg !4188
  store i32 %dec256, ptr %eterms, align 4, !dbg !4188
  %cmp257 = icmp ugt i32 %161, 0, !dbg !4189
  br i1 %cmp257, label %while.body259, label %while.end292, !dbg !4187

while.body259:                                    ; preds = %while.cond255
  %162 = load ptr, ptr %ptr, align 8, !dbg !4190
  %incdec.ptr260 = getelementptr inbounds i64, ptr %162, i32 1, !dbg !4190
  store ptr %incdec.ptr260, ptr %ptr, align 8, !dbg !4190
  %163 = load i64, ptr %162, align 8, !dbg !4192
  store i64 %163, ptr %obj.addr, align 8, !dbg !4193
  %164 = load i64, ptr %obj.addr, align 8, !dbg !4194
  %and261 = and i64 %164, 3, !dbg !4194
  %cmp262 = icmp eq i64 %and261, 3, !dbg !4194
  br i1 %cmp262, label %if.end291, label %if.then264, !dbg !4196

if.then264:                                       ; preds = %while.body259
  br label %do.body265, !dbg !4197

do.body265:                                       ; preds = %if.then264
  %back266 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4199
  %165 = load ptr, ptr %back266, align 8, !dbg !4199
  %front267 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !4199
  %166 = load ptr, ptr %front267, align 8, !dbg !4199
  %cmp268 = icmp eq ptr %165, %166, !dbg !4199
  br i1 %cmp268, label %land.lhs.true270, label %if.end274, !dbg !4199

land.lhs.true270:                                 ; preds = %do.body265
  %possibly_empty271 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4199
  %167 = load i32, ptr %possibly_empty271, align 8, !dbg !4199
  %tobool272 = icmp ne i32 %167, 0, !dbg !4199
  br i1 %tobool272, label %if.end274, label %if.then273, !dbg !4202

if.then273:                                       ; preds = %land.lhs.true270
  %168 = load ptr, ptr %s_default_equeue, align 8, !dbg !4203
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %168), !dbg !4203
  br label %if.end274, !dbg !4203

if.end274:                                        ; preds = %if.then273, %land.lhs.true270, %do.body265
  br label %do.body275, !dbg !4202

do.body275:                                       ; preds = %if.end274
  %possibly_empty276 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4205
  store i32 0, ptr %possibly_empty276, align 8, !dbg !4205
  %169 = load i64, ptr %obj.addr, align 8, !dbg !4205
  %back277 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4205
  %170 = load ptr, ptr %back277, align 8, !dbg !4205
  store i64 %169, ptr %170, align 8, !dbg !4205
  %back278 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4207
  %171 = load ptr, ptr %back278, align 8, !dbg !4207
  %incdec.ptr279 = getelementptr inbounds i64, ptr %171, i32 1, !dbg !4207
  store ptr %incdec.ptr279, ptr %back278, align 8, !dbg !4207
  %end280 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4207
  %172 = load ptr, ptr %end280, align 8, !dbg !4207
  %cmp281 = icmp eq ptr %incdec.ptr279, %172, !dbg !4207
  br i1 %cmp281, label %if.then283, label %if.end286, !dbg !4205

if.then283:                                       ; preds = %do.body275
  %start284 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4209
  %173 = load ptr, ptr %start284, align 8, !dbg !4209
  %back285 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4209
  store ptr %173, ptr %back285, align 8, !dbg !4209
  br label %if.end286, !dbg !4209

if.end286:                                        ; preds = %if.then283, %do.body275
  br label %do.cond287, !dbg !4205

do.cond287:                                       ; preds = %if.end286
  br label %do.end288, !dbg !4205

do.end288:                                        ; preds = %do.cond287
  br label %do.cond289, !dbg !4202

do.cond289:                                       ; preds = %do.end288
  br label %do.end290, !dbg !4202

do.end290:                                        ; preds = %do.cond289
  br label %if.end291, !dbg !4211

if.end291:                                        ; preds = %do.end290, %while.body259
  br label %while.cond255, !dbg !4187, !llvm.loop !4212

while.end292:                                     ; preds = %while.cond255
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %eterms) #8, !dbg !4214
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp) #8, !dbg !4214
  br label %cleanup481

sw.bb295:                                         ; preds = %if.end185
  call void @llvm.lifetime.start.p0(i64 8, ptr %sb) #8, !dbg !4215
  tail call void @llvm.dbg.declare(metadata ptr %sb, metadata !3893, metadata !DIExpression()), !dbg !4216
  %174 = load ptr, ptr %ptr, align 8, !dbg !4217
  store ptr %174, ptr %sb, align 8, !dbg !4216
  call void @llvm.lifetime.start.p0(i64 8, ptr %real_bin) #8, !dbg !4218
  tail call void @llvm.dbg.declare(metadata ptr %real_bin, metadata !3895, metadata !DIExpression()), !dbg !4219
  %175 = load ptr, ptr %sb, align 8, !dbg !4220
  %orig = getelementptr inbounds %struct.erl_sub_bin, ptr %175, i32 0, i32 6, !dbg !4221
  %176 = load i64, ptr %orig, align 8, !dbg !4221
  store i64 %176, ptr %real_bin, align 8, !dbg !4219
  call void @llvm.lifetime.start.p0(i64 8, ptr %bit_offset) #8, !dbg !4222
  tail call void @llvm.dbg.declare(metadata ptr %bit_offset, metadata !3896, metadata !DIExpression()), !dbg !4223
  %177 = load ptr, ptr %sb, align 8, !dbg !4224
  %bitoffs = getelementptr inbounds %struct.erl_sub_bin, ptr %177, i32 0, i32 4, !dbg !4225
  %178 = load i8, ptr %bitoffs, align 1, !dbg !4225
  %conv296 = zext i8 %178 to i64, !dbg !4224
  store i64 %conv296, ptr %bit_offset, align 8, !dbg !4223
  call void @llvm.lifetime.start.p0(i64 8, ptr %bit_size) #8, !dbg !4226
  tail call void @llvm.dbg.declare(metadata ptr %bit_size, metadata !3897, metadata !DIExpression()), !dbg !4227
  %179 = load ptr, ptr %sb, align 8, !dbg !4228
  %bitsize = getelementptr inbounds %struct.erl_sub_bin, ptr %179, i32 0, i32 3, !dbg !4229
  %180 = load i8, ptr %bitsize, align 8, !dbg !4229
  %conv297 = zext i8 %180 to i64, !dbg !4228
  store i64 %conv297, ptr %bit_size, align 8, !dbg !4227
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #8, !dbg !4230
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !3898, metadata !DIExpression()), !dbg !4231
  %181 = load ptr, ptr %sb, align 8, !dbg !4232
  %size298 = getelementptr inbounds %struct.erl_sub_bin, ptr %181, i32 0, i32 1, !dbg !4233
  %182 = load i64, ptr %size298, align 8, !dbg !4233
  store i64 %182, ptr %size, align 8, !dbg !4231
  call void @llvm.lifetime.start.p0(i64 8, ptr %extra_bytes) #8, !dbg !4234
  tail call void @llvm.dbg.declare(metadata ptr %extra_bytes, metadata !3899, metadata !DIExpression()), !dbg !4235
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr299) #8, !dbg !4236
  tail call void @llvm.dbg.declare(metadata ptr %hdr299, metadata !3900, metadata !DIExpression()), !dbg !4237
  %183 = load i64, ptr %bit_size, align 8, !dbg !4238
  %184 = load i64, ptr %bit_offset, align 8, !dbg !4240
  %add300 = add i64 %183, %184, !dbg !4241
  %cmp301 = icmp ugt i64 %add300, 8, !dbg !4242
  br i1 %cmp301, label %if.then303, label %if.else, !dbg !4243

if.then303:                                       ; preds = %sw.bb295
  %185 = load i64, ptr %sum, align 8, !dbg !4244
  %add304 = add i64 %185, 5, !dbg !4244
  store i64 %add304, ptr %sum, align 8, !dbg !4244
  store i64 2, ptr %extra_bytes, align 8, !dbg !4246
  br label %if.end312, !dbg !4247

if.else:                                          ; preds = %sw.bb295
  %186 = load i64, ptr %bit_size, align 8, !dbg !4248
  %187 = load i64, ptr %bit_offset, align 8, !dbg !4250
  %add305 = add i64 %186, %187, !dbg !4251
  %cmp306 = icmp ugt i64 %add305, 0, !dbg !4252
  br i1 %cmp306, label %if.then308, label %if.else310, !dbg !4253

if.then308:                                       ; preds = %if.else
  %188 = load i64, ptr %sum, align 8, !dbg !4254
  %add309 = add i64 %188, 5, !dbg !4254
  store i64 %add309, ptr %sum, align 8, !dbg !4254
  store i64 1, ptr %extra_bytes, align 8, !dbg !4256
  br label %if.end311, !dbg !4257

if.else310:                                       ; preds = %if.else
  store i64 0, ptr %extra_bytes, align 8, !dbg !4258
  br label %if.end311

if.end311:                                        ; preds = %if.else310, %if.then308
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %if.then303
  %189 = load i64, ptr %real_bin, align 8, !dbg !4260
  %sub313 = sub i64 %189, 2, !dbg !4260
  %190 = inttoptr i64 %sub313 to ptr, !dbg !4260
  %191 = load i64, ptr %190, align 8, !dbg !4261
  store i64 %191, ptr %hdr299, align 8, !dbg !4262
  %192 = load i64, ptr %hdr299, align 8, !dbg !4263
  %and314 = and i64 %192, 3, !dbg !4263
  switch i64 %and314, label %sw.epilog324 [
    i64 0, label %sw.epilog324
    i64 1, label %sw.bb315
    i64 3, label %sw.bb318
    i64 2, label %sw.bb318
  ], !dbg !4264

sw.bb315:                                         ; preds = %if.end312
  %193 = load i64, ptr %hdr299, align 8, !dbg !4265
  %sub316 = sub i64 %193, 1, !dbg !4267
  %add317 = add i64 %sub316, 0, !dbg !4268
  store i64 %add317, ptr %hdr299, align 8, !dbg !4269
  br label %sw.epilog324, !dbg !4270

sw.bb318:                                         ; preds = %if.end312, %if.end312
  %194 = load i64, ptr %hdr299, align 8, !dbg !4271
  %shr319 = lshr i64 %194, 2, !dbg !4272
  store i64 %shr319, ptr %e, align 8, !dbg !4273
  %start320 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4274
  %195 = load ptr, ptr %start320, align 8, !dbg !4274
  %196 = load i64, ptr %e, align 8, !dbg !4274
  %arrayidx321 = getelementptr inbounds i64, ptr %195, i64 %196, !dbg !4274
  %197 = load i64, ptr %arrayidx321, align 8, !dbg !4274
  store i64 %197, ptr %hdr299, align 8, !dbg !4275
  %198 = load i64, ptr %hdr299, align 8, !dbg !4276
  %and322 = and i64 %198, -4, !dbg !4277
  %add323 = add i64 %and322, 0, !dbg !4278
  store i64 %add323, ptr %hdr299, align 8, !dbg !4279
  br label %sw.epilog324, !dbg !4280

sw.epilog324:                                     ; preds = %if.end312, %sw.bb318, %sw.bb315, %if.end312
  %199 = load i64, ptr %hdr299, align 8, !dbg !4281
  %and325 = and i64 %199, 60, !dbg !4281
  %cmp326 = icmp eq i64 %and325, 36, !dbg !4283
  br i1 %cmp326, label %if.then328, label %if.else334, !dbg !4284

if.then328:                                       ; preds = %sw.epilog324
  %200 = load i64, ptr %size, align 8, !dbg !4285
  %201 = load i64, ptr %extra_bytes, align 8, !dbg !4285
  %add329 = add i64 %200, %201, !dbg !4285
  %add330 = add i64 %add329, 8, !dbg !4285
  %sub331 = sub i64 %add330, 1, !dbg !4285
  %div = udiv i64 %sub331, 8, !dbg !4285
  %add332 = add i64 2, %div, !dbg !4285
  %202 = load i64, ptr %sum, align 8, !dbg !4287
  %add333 = add i64 %202, %add332, !dbg !4287
  store i64 %add333, ptr %sum, align 8, !dbg !4287
  br label %if.end336, !dbg !4288

if.else334:                                       ; preds = %sw.epilog324
  %203 = load i64, ptr %sum, align 8, !dbg !4289
  %add335 = add i64 %203, 6, !dbg !4289
  store i64 %add335, ptr %sum, align 8, !dbg !4289
  br label %if.end336

if.end336:                                        ; preds = %if.else334, %if.then328
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr299) #8, !dbg !4291
  call void @llvm.lifetime.end.p0(i64 8, ptr %extra_bytes) #8, !dbg !4291
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #8, !dbg !4291
  call void @llvm.lifetime.end.p0(i64 8, ptr %bit_size) #8, !dbg !4291
  call void @llvm.lifetime.end.p0(i64 8, ptr %bit_offset) #8, !dbg !4291
  call void @llvm.lifetime.end.p0(i64 8, ptr %real_bin) #8, !dbg !4291
  call void @llvm.lifetime.end.p0(i64 8, ptr %sb) #8, !dbg !4291
  br label %cleanup481

sw.bb344:                                         ; preds = %if.end185
  %204 = load i64, ptr %hdr, align 8, !dbg !4292
  %shr345 = lshr i64 %204, 6, !dbg !4292
  %and346 = and i64 %shr345, 3, !dbg !4292
  switch i64 %and346, label %sw.default [
    i64 0, label %sw.bb347
    i64 3, label %sw.bb392
    i64 2, label %sw.bb392
    i64 1, label %sw.bb392
  ], !dbg !4293

sw.bb347:                                         ; preds = %sw.bb344
  call void @llvm.lifetime.start.p0(i64 8, ptr %mp) #8, !dbg !4294
  tail call void @llvm.dbg.declare(metadata ptr %mp, metadata !3901, metadata !DIExpression()), !dbg !4295
  %205 = load ptr, ptr %ptr, align 8, !dbg !4296
  store ptr %205, ptr %mp, align 8, !dbg !4295
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #8, !dbg !4297
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3904, metadata !DIExpression()), !dbg !4298
  %206 = load ptr, ptr %mp, align 8, !dbg !4299
  %size348 = getelementptr inbounds %struct.flatmap_s, ptr %206, i32 0, i32 1, !dbg !4299
  %207 = load i64, ptr %size348, align 8, !dbg !4299
  %add349 = add i64 %207, 1, !dbg !4300
  store i64 %add349, ptr %n, align 8, !dbg !4298
  %208 = load i64, ptr %n, align 8, !dbg !4301
  %add350 = add i64 %208, 2, !dbg !4302
  %209 = load i64, ptr %sum, align 8, !dbg !4303
  %add351 = add i64 %209, %add350, !dbg !4303
  store i64 %add351, ptr %sum, align 8, !dbg !4303
  %210 = load ptr, ptr %ptr, align 8, !dbg !4304
  %add.ptr352 = getelementptr inbounds i64, ptr %210, i64 2, !dbg !4304
  store ptr %add.ptr352, ptr %ptr, align 8, !dbg !4304
  br label %while.cond353, !dbg !4305

while.cond353:                                    ; preds = %if.end388, %sw.bb347
  %211 = load i64, ptr %n, align 8, !dbg !4306
  %dec354 = add i64 %211, -1, !dbg !4306
  store i64 %dec354, ptr %n, align 8, !dbg !4306
  %tobool355 = icmp ne i64 %211, 0, !dbg !4305
  br i1 %tobool355, label %while.body356, label %while.end389, !dbg !4305

while.body356:                                    ; preds = %while.cond353
  %212 = load ptr, ptr %ptr, align 8, !dbg !4307
  %incdec.ptr357 = getelementptr inbounds i64, ptr %212, i32 1, !dbg !4307
  store ptr %incdec.ptr357, ptr %ptr, align 8, !dbg !4307
  %213 = load i64, ptr %212, align 8, !dbg !4309
  store i64 %213, ptr %obj.addr, align 8, !dbg !4310
  %214 = load i64, ptr %obj.addr, align 8, !dbg !4311
  %and358 = and i64 %214, 3, !dbg !4311
  %cmp359 = icmp eq i64 %and358, 3, !dbg !4311
  br i1 %cmp359, label %if.end388, label %if.then361, !dbg !4313

if.then361:                                       ; preds = %while.body356
  br label %do.body362, !dbg !4314

do.body362:                                       ; preds = %if.then361
  %back363 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4316
  %215 = load ptr, ptr %back363, align 8, !dbg !4316
  %front364 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !4316
  %216 = load ptr, ptr %front364, align 8, !dbg !4316
  %cmp365 = icmp eq ptr %215, %216, !dbg !4316
  br i1 %cmp365, label %land.lhs.true367, label %if.end371, !dbg !4316

land.lhs.true367:                                 ; preds = %do.body362
  %possibly_empty368 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4316
  %217 = load i32, ptr %possibly_empty368, align 8, !dbg !4316
  %tobool369 = icmp ne i32 %217, 0, !dbg !4316
  br i1 %tobool369, label %if.end371, label %if.then370, !dbg !4319

if.then370:                                       ; preds = %land.lhs.true367
  %218 = load ptr, ptr %s_default_equeue, align 8, !dbg !4320
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %218), !dbg !4320
  br label %if.end371, !dbg !4320

if.end371:                                        ; preds = %if.then370, %land.lhs.true367, %do.body362
  br label %do.body372, !dbg !4319

do.body372:                                       ; preds = %if.end371
  %possibly_empty373 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4322
  store i32 0, ptr %possibly_empty373, align 8, !dbg !4322
  %219 = load i64, ptr %obj.addr, align 8, !dbg !4322
  %back374 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4322
  %220 = load ptr, ptr %back374, align 8, !dbg !4322
  store i64 %219, ptr %220, align 8, !dbg !4322
  %back375 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4324
  %221 = load ptr, ptr %back375, align 8, !dbg !4324
  %incdec.ptr376 = getelementptr inbounds i64, ptr %221, i32 1, !dbg !4324
  store ptr %incdec.ptr376, ptr %back375, align 8, !dbg !4324
  %end377 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4324
  %222 = load ptr, ptr %end377, align 8, !dbg !4324
  %cmp378 = icmp eq ptr %incdec.ptr376, %222, !dbg !4324
  br i1 %cmp378, label %if.then380, label %if.end383, !dbg !4322

if.then380:                                       ; preds = %do.body372
  %start381 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4326
  %223 = load ptr, ptr %start381, align 8, !dbg !4326
  %back382 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4326
  store ptr %223, ptr %back382, align 8, !dbg !4326
  br label %if.end383, !dbg !4326

if.end383:                                        ; preds = %if.then380, %do.body372
  br label %do.cond384, !dbg !4322

do.cond384:                                       ; preds = %if.end383
  br label %do.end385, !dbg !4322

do.end385:                                        ; preds = %do.cond384
  br label %do.cond386, !dbg !4319

do.cond386:                                       ; preds = %do.end385
  br label %do.end387, !dbg !4319

do.end387:                                        ; preds = %do.cond386
  br label %if.end388, !dbg !4328

if.end388:                                        ; preds = %do.end387, %while.body356
  br label %while.cond353, !dbg !4305, !llvm.loop !4329

while.end389:                                     ; preds = %while.cond353
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #8, !dbg !4331
  call void @llvm.lifetime.end.p0(i64 8, ptr %mp) #8, !dbg !4331
  br label %cleanup481

sw.bb392:                                         ; preds = %sw.bb344, %sw.bb344, %sw.bb344
  call void @llvm.lifetime.start.p0(i64 8, ptr %n393) #8, !dbg !4332
  tail call void @llvm.dbg.declare(metadata ptr %n393, metadata !3905, metadata !DIExpression()), !dbg !4333
  %224 = load i64, ptr %hdr, align 8, !dbg !4334
  %shr394 = lshr i64 %224, 16, !dbg !4334
  %and395 = and i64 %shr394, 65535, !dbg !4334
  %conv396 = trunc i64 %and395 to i32, !dbg !4334
  %225 = call i32 @llvm.ctpop.i32(i32 %conv396), !dbg !4334
  %conv397 = zext i32 %225 to i64, !dbg !4334
  store i64 %conv397, ptr %n393, align 8, !dbg !4333
  %226 = load i64, ptr %n393, align 8, !dbg !4335
  %add398 = add i64 1, %226, !dbg !4336
  %227 = load i64, ptr %hdr, align 8, !dbg !4337
  %and399 = and i64 %227, 63, !dbg !4337
  %cmp400 = icmp eq i64 %and399, 60, !dbg !4337
  br i1 %cmp400, label %cond.true402, label %cond.false405, !dbg !4337

cond.true402:                                     ; preds = %sw.bb392
  %228 = load i64, ptr %hdr, align 8, !dbg !4337
  %shr403 = lshr i64 %228, 8, !dbg !4337
  %and404 = and i64 %shr403, 255, !dbg !4337
  br label %cond.end407, !dbg !4337

cond.false405:                                    ; preds = %sw.bb392
  %229 = load i64, ptr %hdr, align 8, !dbg !4337
  %shr406 = lshr i64 %229, 6, !dbg !4337
  br label %cond.end407, !dbg !4337

cond.end407:                                      ; preds = %cond.false405, %cond.true402
  %cond408 = phi i64 [ %and404, %cond.true402 ], [ %shr406, %cond.false405 ], !dbg !4337
  %add409 = add i64 %add398, %cond408, !dbg !4338
  %230 = load i64, ptr %sum, align 8, !dbg !4339
  %add410 = add i64 %230, %add409, !dbg !4339
  store i64 %add410, ptr %sum, align 8, !dbg !4339
  %231 = load i64, ptr %hdr, align 8, !dbg !4340
  %and411 = and i64 %231, 63, !dbg !4340
  %cmp412 = icmp eq i64 %and411, 60, !dbg !4340
  br i1 %cmp412, label %cond.true414, label %cond.false417, !dbg !4340

cond.true414:                                     ; preds = %cond.end407
  %232 = load i64, ptr %hdr, align 8, !dbg !4340
  %shr415 = lshr i64 %232, 8, !dbg !4340
  %and416 = and i64 %shr415, 255, !dbg !4340
  br label %cond.end419, !dbg !4340

cond.false417:                                    ; preds = %cond.end407
  %233 = load i64, ptr %hdr, align 8, !dbg !4340
  %shr418 = lshr i64 %233, 6, !dbg !4340
  br label %cond.end419, !dbg !4340

cond.end419:                                      ; preds = %cond.false417, %cond.true414
  %cond420 = phi i64 [ %and416, %cond.true414 ], [ %shr418, %cond.false417 ], !dbg !4340
  %add421 = add i64 1, %cond420, !dbg !4341
  %234 = load ptr, ptr %ptr, align 8, !dbg !4342
  %add.ptr422 = getelementptr inbounds i64, ptr %234, i64 %add421, !dbg !4342
  store ptr %add.ptr422, ptr %ptr, align 8, !dbg !4342
  %235 = load i64, ptr %n393, align 8, !dbg !4343
  %cmp423 = icmp eq i64 %235, 0, !dbg !4345
  br i1 %cmp423, label %if.then425, label %if.end426, !dbg !4346

if.then425:                                       ; preds = %cond.end419
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup464, !dbg !4347

if.end426:                                        ; preds = %cond.end419
  br label %while.cond427, !dbg !4349

while.cond427:                                    ; preds = %if.end462, %if.end426
  %236 = load i64, ptr %n393, align 8, !dbg !4350
  %dec428 = add i64 %236, -1, !dbg !4350
  store i64 %dec428, ptr %n393, align 8, !dbg !4350
  %tobool429 = icmp ne i64 %236, 0, !dbg !4349
  br i1 %tobool429, label %while.body430, label %while.end463, !dbg !4349

while.body430:                                    ; preds = %while.cond427
  %237 = load ptr, ptr %ptr, align 8, !dbg !4351
  %incdec.ptr431 = getelementptr inbounds i64, ptr %237, i32 1, !dbg !4351
  store ptr %incdec.ptr431, ptr %ptr, align 8, !dbg !4351
  %238 = load i64, ptr %237, align 8, !dbg !4353
  store i64 %238, ptr %obj.addr, align 8, !dbg !4354
  %239 = load i64, ptr %obj.addr, align 8, !dbg !4355
  %and432 = and i64 %239, 3, !dbg !4355
  %cmp433 = icmp eq i64 %and432, 3, !dbg !4355
  br i1 %cmp433, label %if.end462, label %if.then435, !dbg !4357

if.then435:                                       ; preds = %while.body430
  br label %do.body436, !dbg !4358

do.body436:                                       ; preds = %if.then435
  %back437 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4360
  %240 = load ptr, ptr %back437, align 8, !dbg !4360
  %front438 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !4360
  %241 = load ptr, ptr %front438, align 8, !dbg !4360
  %cmp439 = icmp eq ptr %240, %241, !dbg !4360
  br i1 %cmp439, label %land.lhs.true441, label %if.end445, !dbg !4360

land.lhs.true441:                                 ; preds = %do.body436
  %possibly_empty442 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4360
  %242 = load i32, ptr %possibly_empty442, align 8, !dbg !4360
  %tobool443 = icmp ne i32 %242, 0, !dbg !4360
  br i1 %tobool443, label %if.end445, label %if.then444, !dbg !4363

if.then444:                                       ; preds = %land.lhs.true441
  %243 = load ptr, ptr %s_default_equeue, align 8, !dbg !4364
  call void @erl_grow_equeue(ptr noundef %s, ptr noundef %243), !dbg !4364
  br label %if.end445, !dbg !4364

if.end445:                                        ; preds = %if.then444, %land.lhs.true441, %do.body436
  br label %do.body446, !dbg !4363

do.body446:                                       ; preds = %if.end445
  %possibly_empty447 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4366
  store i32 0, ptr %possibly_empty447, align 8, !dbg !4366
  %244 = load i64, ptr %obj.addr, align 8, !dbg !4366
  %back448 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4366
  %245 = load ptr, ptr %back448, align 8, !dbg !4366
  store i64 %244, ptr %245, align 8, !dbg !4366
  %back449 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4368
  %246 = load ptr, ptr %back449, align 8, !dbg !4368
  %incdec.ptr450 = getelementptr inbounds i64, ptr %246, i32 1, !dbg !4368
  store ptr %incdec.ptr450, ptr %back449, align 8, !dbg !4368
  %end451 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4368
  %247 = load ptr, ptr %end451, align 8, !dbg !4368
  %cmp452 = icmp eq ptr %incdec.ptr450, %247, !dbg !4368
  br i1 %cmp452, label %if.then454, label %if.end457, !dbg !4366

if.then454:                                       ; preds = %do.body446
  %start455 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4370
  %248 = load ptr, ptr %start455, align 8, !dbg !4370
  %back456 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4370
  store ptr %248, ptr %back456, align 8, !dbg !4370
  br label %if.end457, !dbg !4370

if.end457:                                        ; preds = %if.then454, %do.body446
  br label %do.cond458, !dbg !4366

do.cond458:                                       ; preds = %if.end457
  br label %do.end459, !dbg !4366

do.end459:                                        ; preds = %do.cond458
  br label %do.cond460, !dbg !4363

do.cond460:                                       ; preds = %do.end459
  br label %do.end461, !dbg !4363

do.end461:                                        ; preds = %do.cond460
  br label %if.end462, !dbg !4372

if.end462:                                        ; preds = %do.end461, %while.body430
  br label %while.cond427, !dbg !4349, !llvm.loop !4373

while.end463:                                     ; preds = %while.cond427
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup464, !dbg !4375

cleanup464:                                       ; preds = %while.end463, %if.then425
  call void @llvm.lifetime.end.p0(i64 8, ptr %n393) #8, !dbg !4376
  br label %cleanup481

sw.default:                                       ; preds = %sw.bb344
  %249 = load i64, ptr %hdr, align 8, !dbg !4377
  %shr465 = lshr i64 %249, 6, !dbg !4377
  %and466 = and i64 %shr465, 3, !dbg !4377
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.11, i64 noundef %and466) #9, !dbg !4378
  unreachable, !dbg !4378

sw.bb467:                                         ; preds = %if.end185
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.4) #9, !dbg !4379
  unreachable, !dbg !4379

sw.default468:                                    ; preds = %if.end185
  %250 = load i64, ptr %hdr, align 8, !dbg !4380
  %and469 = and i64 %250, 63, !dbg !4380
  %cmp470 = icmp eq i64 %and469, 60, !dbg !4380
  br i1 %cmp470, label %cond.true472, label %cond.false475, !dbg !4380

cond.true472:                                     ; preds = %sw.default468
  %251 = load i64, ptr %hdr, align 8, !dbg !4380
  %shr473 = lshr i64 %251, 8, !dbg !4380
  %and474 = and i64 %shr473, 255, !dbg !4380
  br label %cond.end477, !dbg !4380

cond.false475:                                    ; preds = %sw.default468
  %252 = load i64, ptr %hdr, align 8, !dbg !4380
  %shr476 = lshr i64 %252, 6, !dbg !4380
  br label %cond.end477, !dbg !4380

cond.end477:                                      ; preds = %cond.false475, %cond.true472
  %cond478 = phi i64 [ %and474, %cond.true472 ], [ %shr476, %cond.false475 ], !dbg !4380
  %add479 = add i64 %cond478, 1, !dbg !4381
  %253 = load i64, ptr %sum, align 8, !dbg !4382
  %add480 = add i64 %253, %add479, !dbg !4382
  store i64 %add480, ptr %sum, align 8, !dbg !4382
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup481, !dbg !4383

cleanup481:                                       ; preds = %cond.end477, %if.end184, %if.end153, %cleanup464, %while.end389, %if.end336, %while.end292, %while.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr) #8, !dbg !4384
  %cleanup.dest483 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest483, label %cleanup549 [
    i32 5, label %pop_next
  ]

sw.bb482:                                         ; preds = %for.cond
  br label %pop_next, !dbg !4385

pop_next:                                         ; preds = %sw.bb482, %cleanup481, %cleanup
  tail call void @llvm.dbg.label(metadata !3907), !dbg !4386
  %back484 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4387
  %254 = load ptr, ptr %back484, align 8, !dbg !4387
  %front485 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !4387
  %255 = load ptr, ptr %front485, align 8, !dbg !4387
  %cmp486 = icmp eq ptr %254, %255, !dbg !4387
  br i1 %cmp486, label %land.lhs.true488, label %if.end545, !dbg !4387

land.lhs.true488:                                 ; preds = %pop_next
  %possibly_empty489 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4387
  %256 = load i32, ptr %possibly_empty489, align 8, !dbg !4387
  %tobool490 = icmp ne i32 %256, 0, !dbg !4387
  br i1 %tobool490, label %if.then491, label %if.end545, !dbg !4389

if.then491:                                       ; preds = %land.lhs.true488
  br label %do.body492, !dbg !4390

do.body492:                                       ; preds = %if.then491
  %sp493 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4392
  %257 = load ptr, ptr %sp493, align 8, !dbg !4392
  %end494 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 2, !dbg !4392
  %258 = load ptr, ptr %end494, align 8, !dbg !4392
  %add.ptr495 = getelementptr inbounds i64, ptr %258, i64 -4, !dbg !4392
  %cmp496 = icmp ugt ptr %257, %add.ptr495, !dbg !4392
  br i1 %cmp496, label %if.then498, label %if.end499, !dbg !4395

if.then498:                                       ; preds = %do.body492
  call void @erl_grow_estack(ptr noundef %t, i64 noundef 4), !dbg !4396
  br label %if.end499, !dbg !4396

if.end499:                                        ; preds = %if.then498, %do.body492
  %sp500 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4395
  %259 = load ptr, ptr %sp500, align 8, !dbg !4395
  %incdec.ptr501 = getelementptr inbounds i64, ptr %259, i32 1, !dbg !4395
  store ptr %incdec.ptr501, ptr %sp500, align 8, !dbg !4395
  store i64 0, ptr %259, align 8, !dbg !4395
  %sp502 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4395
  %260 = load ptr, ptr %sp502, align 8, !dbg !4395
  %incdec.ptr503 = getelementptr inbounds i64, ptr %260, i32 1, !dbg !4395
  store ptr %incdec.ptr503, ptr %sp502, align 8, !dbg !4395
  store i64 0, ptr %260, align 8, !dbg !4395
  %sp504 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4395
  %261 = load ptr, ptr %sp504, align 8, !dbg !4395
  %incdec.ptr505 = getelementptr inbounds i64, ptr %261, i32 1, !dbg !4395
  store ptr %incdec.ptr505, ptr %sp504, align 8, !dbg !4395
  store i64 0, ptr %261, align 8, !dbg !4395
  %sp506 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4395
  %262 = load ptr, ptr %sp506, align 8, !dbg !4395
  %incdec.ptr507 = getelementptr inbounds i64, ptr %262, i32 1, !dbg !4395
  store ptr %incdec.ptr507, ptr %sp506, align 8, !dbg !4395
  store i64 0, ptr %262, align 8, !dbg !4395
  %263 = load i64, ptr %t_offset, align 8, !dbg !4395
  %add508 = add i64 %263, 4, !dbg !4395
  store i64 %add508, ptr %t_offset, align 8, !dbg !4395
  br label %do.cond509, !dbg !4395

do.cond509:                                       ; preds = %if.end499
  br label %do.end510, !dbg !4395

do.end510:                                        ; preds = %do.cond509
  br label %do.body511, !dbg !4398

do.body511:                                       ; preds = %do.end510
  %264 = load i32, ptr %b_bitoffs, align 4, !dbg !4399
  %cmp512 = icmp sgt i32 %264, 0, !dbg !4399
  br i1 %cmp512, label %if.then514, label %if.end533, !dbg !4402

if.then514:                                       ; preds = %do.body511
  br label %do.body515, !dbg !4403

do.body515:                                       ; preds = %if.then514
  br label %do.body516, !dbg !4405

do.body516:                                       ; preds = %do.body515
  %wend517 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 2, !dbg !4407
  %265 = load ptr, ptr %wend517, align 8, !dbg !4407
  %wsp518 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !4407
  %266 = load ptr, ptr %wsp518, align 8, !dbg !4407
  %sub.ptr.lhs.cast519 = ptrtoint ptr %265 to i64, !dbg !4407
  %sub.ptr.rhs.cast520 = ptrtoint ptr %266 to i64, !dbg !4407
  %sub.ptr.sub521 = sub i64 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520, !dbg !4407
  %sub.ptr.div522 = sdiv exact i64 %sub.ptr.sub521, 8, !dbg !4407
  %cmp523 = icmp slt i64 %sub.ptr.div522, 1, !dbg !4407
  br i1 %cmp523, label %if.then525, label %if.end526, !dbg !4410

if.then525:                                       ; preds = %do.body516
  call void @erl_grow_wstack(ptr noundef %b, i64 noundef 1), !dbg !4411
  br label %if.end526, !dbg !4411

if.end526:                                        ; preds = %if.then525, %do.body516
  br label %do.cond527, !dbg !4410

do.cond527:                                       ; preds = %if.end526
  br label %do.end528, !dbg !4410

do.end528:                                        ; preds = %do.cond527
  %267 = load i64, ptr %b_buffer, align 8, !dbg !4405
  %wsp529 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !4405
  %268 = load ptr, ptr %wsp529, align 8, !dbg !4405
  %incdec.ptr530 = getelementptr inbounds i64, ptr %268, i32 1, !dbg !4405
  store ptr %incdec.ptr530, ptr %wsp529, align 8, !dbg !4405
  store i64 %267, ptr %268, align 8, !dbg !4405
  br label %do.cond531, !dbg !4405

do.cond531:                                       ; preds = %do.end528
  br label %do.end532, !dbg !4405

do.end532:                                        ; preds = %do.cond531
  store i32 0, ptr %b_bitoffs, align 4, !dbg !4403
  br label %if.end533, !dbg !4403

if.end533:                                        ; preds = %do.end532, %do.body511
  br label %do.cond534, !dbg !4402

do.cond534:                                       ; preds = %if.end533
  br label %do.end535, !dbg !4402

do.end535:                                        ; preds = %do.cond534
  %start536 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4413
  %269 = load ptr, ptr %start536, align 8, !dbg !4413
  %270 = load ptr, ptr %info.addr, align 8, !dbg !4414
  %queue_start = getelementptr inbounds %struct.erts_shcopy_t, ptr %270, i32 0, i32 1, !dbg !4415
  store ptr %269, ptr %queue_start, align 8, !dbg !4416
  %end537 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4417
  %271 = load ptr, ptr %end537, align 8, !dbg !4417
  %272 = load ptr, ptr %info.addr, align 8, !dbg !4418
  %queue_end = getelementptr inbounds %struct.erts_shcopy_t, ptr %272, i32 0, i32 2, !dbg !4419
  store ptr %271, ptr %queue_end, align 8, !dbg !4420
  %alloc_type538 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 5, !dbg !4421
  %273 = load i32, ptr %alloc_type538, align 8, !dbg !4421
  %274 = load ptr, ptr %info.addr, align 8, !dbg !4422
  %queue_alloc_type = getelementptr inbounds %struct.erts_shcopy_t, ptr %274, i32 0, i32 3, !dbg !4423
  store i32 %273, ptr %queue_alloc_type, align 8, !dbg !4424
  %wstart539 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !4425
  %275 = load ptr, ptr %wstart539, align 8, !dbg !4425
  %276 = load ptr, ptr %info.addr, align 8, !dbg !4426
  %bitstore_start = getelementptr inbounds %struct.erts_shcopy_t, ptr %276, i32 0, i32 5, !dbg !4427
  store ptr %275, ptr %bitstore_start, align 8, !dbg !4428
  %alloc_type540 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 4, !dbg !4429
  %277 = load i32, ptr %alloc_type540, align 8, !dbg !4429
  %278 = load ptr, ptr %info.addr, align 8, !dbg !4430
  %bitstore_alloc_type = getelementptr inbounds %struct.erts_shcopy_t, ptr %278, i32 0, i32 6, !dbg !4431
  store i32 %277, ptr %bitstore_alloc_type, align 8, !dbg !4432
  %start541 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4433
  %279 = load ptr, ptr %start541, align 8, !dbg !4433
  %280 = load ptr, ptr %info.addr, align 8, !dbg !4434
  %shtable_start = getelementptr inbounds %struct.erts_shcopy_t, ptr %280, i32 0, i32 8, !dbg !4435
  store ptr %279, ptr %shtable_start, align 8, !dbg !4436
  %alloc_type542 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 4, !dbg !4437
  %281 = load i32, ptr %alloc_type542, align 8, !dbg !4437
  %282 = load ptr, ptr %info.addr, align 8, !dbg !4438
  %shtable_alloc_type = getelementptr inbounds %struct.erts_shcopy_t, ptr %282, i32 0, i32 9, !dbg !4439
  store i32 %281, ptr %shtable_alloc_type, align 8, !dbg !4440
  %283 = load i64, ptr %sum, align 8, !dbg !4441
  %284 = load ptr, ptr %info.addr, align 8, !dbg !4442
  %literal_size543 = getelementptr inbounds %struct.erts_shcopy_t, ptr %284, i32 0, i32 10, !dbg !4443
  %285 = load i64, ptr %literal_size543, align 8, !dbg !4443
  %add544 = add i64 %283, %285, !dbg !4444
  store i64 %add544, ptr %retval, align 8, !dbg !4445
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup549, !dbg !4445

if.end545:                                        ; preds = %land.lhs.true488, %pop_next
  %call546 = call i64 @erts_equeue_get(ptr noundef %s), !dbg !4446
  store i64 %call546, ptr %obj.addr, align 8, !dbg !4447
  br label %sw.epilog548, !dbg !4448

sw.default547:                                    ; preds = %for.cond
  %286 = load i64, ptr %obj.addr, align 8, !dbg !4449
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.12, i64 noundef %286) #9, !dbg !4450
  unreachable, !dbg !4450

sw.epilog548:                                     ; preds = %if.end545, %cleanup
  br label %for.cond, !dbg !4451, !llvm.loop !4452

cleanup549:                                       ; preds = %do.end535, %cleanup481, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %t_offset) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 40, ptr %t) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %t_default_estack) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_buffer) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 4, ptr %b_bitoffs) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 40, ptr %b) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_default_wstack) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 48, ptr %s) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %s_default_equeue) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_tuple_literal) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 4, ptr %copy_literals) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 4, ptr %sz) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %e) #8, !dbg !4455
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum) #8, !dbg !4455
  %287 = load i64, ptr %retval, align 8, !dbg !4455
  ret i64 %287, !dbg !4455
}

; Function Attrs: nounwind uwtable
define dso_local i64 @copy_shared_perform_x(i64 noundef %obj, i64 noundef %size, ptr noundef %info, ptr noundef %hpp, ptr noundef %off_heap) #0 !dbg !4456 {
entry:
  %retval = alloca i64, align 8
  %obj.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %info.addr = alloca ptr, align 8
  %hpp.addr = alloca ptr, align 8
  %off_heap.addr = alloca ptr, align 8
  %e = alloca i64, align 8
  %sz = alloca i32, align 4
  %ptr = alloca ptr, align 8
  %hp = alloca ptr, align 8
  %hscan = alloca ptr, align 8
  %result = alloca i64, align 8
  %resp = alloca ptr, align 8
  %hbot = alloca ptr, align 8
  %hend = alloca ptr, align 8
  %remaining = alloca i32, align 4
  %lit_purge_ptr = alloca ptr, align 8
  %lit_purge_sz = alloca i64, align 8
  %copy_literals = alloca i32, align 4
  %empty_tuple_literal = alloca i64, align 8
  %s = alloca %struct.ErtsEQueue, align 8
  %b = alloca %struct.ErtsWStack_, align 8
  %b_bitoffs = alloca i32, align 4
  %b_offset = alloca i32, align 4
  %b_buffer = alloca i64, align 8
  %t = alloca %struct.ErtsEStack_, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %head = alloca i64, align 8
  %tail = alloca i64, align 8
  %bsz = alloca i64, align 8
  %saved = alloca i64, align 8
  %result55 = alloca i64, align 8
  %hdr = alloca i64, align 8
  %bsz129 = alloca i64, align 8
  %arity = alloca i32, align 4
  %funp = alloca ptr, align 8
  %eterms = alloca i32, align 4
  %mp = alloca ptr, align 8
  %n = alloca i64, align 8
  %n306 = alloca i64, align 8
  %pb = alloca ptr, align 8
  %sb = alloca ptr, align 8
  %real_bin = alloca i64, align 8
  %bit_offset = alloca i64, align 8
  %bit_size = alloca i64, align 8
  %offset = alloca i64, align 8
  %size382 = alloca i64, align 8
  %extra_bytes = alloca i64, align 8
  %real_size = alloca i64, align 8
  %res = alloca ptr, align 8
  %from = alloca ptr, align 8
  %to = alloca ptr, align 8
  %from445 = alloca ptr, align 8
  %to446 = alloca ptr, align 8
  %etp = alloca ptr, align 8
  %ohhp = alloca ptr, align 8
  %mreft = alloca ptr, align 8
  %funp586 = alloca ptr, align 8
  %mp607 = alloca ptr, align 8
  store i64 %obj, ptr %obj.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !4460, metadata !DIExpression()), !dbg !4568
  store i64 %size, ptr %size.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !4461, metadata !DIExpression()), !dbg !4569
  store ptr %info, ptr %info.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %info.addr, metadata !4462, metadata !DIExpression()), !dbg !4570
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !4463, metadata !DIExpression()), !dbg !4571
  store ptr %off_heap, ptr %off_heap.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %off_heap.addr, metadata !4464, metadata !DIExpression()), !dbg !4572
  call void @llvm.lifetime.start.p0(i64 8, ptr %e) #8, !dbg !4573
  tail call void @llvm.dbg.declare(metadata ptr %e, metadata !4465, metadata !DIExpression()), !dbg !4574
  call void @llvm.lifetime.start.p0(i64 4, ptr %sz) #8, !dbg !4575
  tail call void @llvm.dbg.declare(metadata ptr %sz, metadata !4466, metadata !DIExpression()), !dbg !4576
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #8, !dbg !4577
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !4467, metadata !DIExpression()), !dbg !4578
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp) #8, !dbg !4579
  tail call void @llvm.dbg.declare(metadata ptr %hp, metadata !4468, metadata !DIExpression()), !dbg !4580
  call void @llvm.lifetime.start.p0(i64 8, ptr %hscan) #8, !dbg !4581
  tail call void @llvm.dbg.declare(metadata ptr %hscan, metadata !4469, metadata !DIExpression()), !dbg !4582
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !4583
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4470, metadata !DIExpression()), !dbg !4584
  call void @llvm.lifetime.start.p0(i64 8, ptr %resp) #8, !dbg !4585
  tail call void @llvm.dbg.declare(metadata ptr %resp, metadata !4471, metadata !DIExpression()), !dbg !4586
  call void @llvm.lifetime.start.p0(i64 8, ptr %hbot) #8, !dbg !4587
  tail call void @llvm.dbg.declare(metadata ptr %hbot, metadata !4472, metadata !DIExpression()), !dbg !4588
  call void @llvm.lifetime.start.p0(i64 8, ptr %hend) #8, !dbg !4587
  tail call void @llvm.dbg.declare(metadata ptr %hend, metadata !4473, metadata !DIExpression()), !dbg !4589
  call void @llvm.lifetime.start.p0(i64 4, ptr %remaining) #8, !dbg !4590
  tail call void @llvm.dbg.declare(metadata ptr %remaining, metadata !4474, metadata !DIExpression()), !dbg !4591
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !4592
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_ptr, metadata !4475, metadata !DIExpression()), !dbg !4593
  %0 = load ptr, ptr %info.addr, align 8, !dbg !4594
  %lit_purge_ptr1 = getelementptr inbounds %struct.erts_shcopy_t, ptr %0, i32 0, i32 11, !dbg !4595
  %1 = load ptr, ptr %lit_purge_ptr1, align 8, !dbg !4595
  store ptr %1, ptr %lit_purge_ptr, align 8, !dbg !4593
  call void @llvm.lifetime.start.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !4596
  tail call void @llvm.dbg.declare(metadata ptr %lit_purge_sz, metadata !4476, metadata !DIExpression()), !dbg !4597
  %2 = load ptr, ptr %info.addr, align 8, !dbg !4598
  %lit_purge_sz2 = getelementptr inbounds %struct.erts_shcopy_t, ptr %2, i32 0, i32 12, !dbg !4599
  %3 = load i64, ptr %lit_purge_sz2, align 8, !dbg !4599
  store i64 %3, ptr %lit_purge_sz, align 8, !dbg !4597
  call void @llvm.lifetime.start.p0(i64 4, ptr %copy_literals) #8, !dbg !4600
  tail call void @llvm.dbg.declare(metadata ptr %copy_literals, metadata !4477, metadata !DIExpression()), !dbg !4601
  %4 = load ptr, ptr %info.addr, align 8, !dbg !4602
  %copy_literals3 = getelementptr inbounds %struct.erts_shcopy_t, ptr %4, i32 0, i32 13, !dbg !4603
  %5 = load i32, ptr %copy_literals3, align 8, !dbg !4603
  store i32 %5, ptr %copy_literals, align 4, !dbg !4601
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_tuple_literal) #8, !dbg !4604
  tail call void @llvm.dbg.declare(metadata ptr %empty_tuple_literal, metadata !4478, metadata !DIExpression()), !dbg !4605
  %6 = load i64, ptr @ERTS_GLOBAL_LIT_EMPTY_TUPLE, align 8, !dbg !4606
  store i64 %6, ptr %empty_tuple_literal, align 8, !dbg !4605
  call void @llvm.lifetime.start.p0(i64 48, ptr %s) #8, !dbg !4607
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !4479, metadata !DIExpression()), !dbg !4607
  %start = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4607
  %7 = load ptr, ptr %info.addr, align 8, !dbg !4607
  %queue_start = getelementptr inbounds %struct.erts_shcopy_t, ptr %7, i32 0, i32 1, !dbg !4607
  %8 = load ptr, ptr %queue_start, align 8, !dbg !4607
  store ptr %8, ptr %start, align 8, !dbg !4607
  %front = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !4607
  %9 = load ptr, ptr %info.addr, align 8, !dbg !4607
  %queue_start4 = getelementptr inbounds %struct.erts_shcopy_t, ptr %9, i32 0, i32 1, !dbg !4607
  %10 = load ptr, ptr %queue_start4, align 8, !dbg !4607
  store ptr %10, ptr %front, align 8, !dbg !4607
  %back = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4607
  %11 = load ptr, ptr %info.addr, align 8, !dbg !4607
  %queue_start5 = getelementptr inbounds %struct.erts_shcopy_t, ptr %11, i32 0, i32 1, !dbg !4607
  %12 = load ptr, ptr %queue_start5, align 8, !dbg !4607
  store ptr %12, ptr %back, align 8, !dbg !4607
  %possibly_empty = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4607
  store i32 1, ptr %possibly_empty, align 8, !dbg !4607
  %end = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4607
  %13 = load ptr, ptr %info.addr, align 8, !dbg !4607
  %queue_end = getelementptr inbounds %struct.erts_shcopy_t, ptr %13, i32 0, i32 2, !dbg !4607
  %14 = load ptr, ptr %queue_end, align 8, !dbg !4607
  store ptr %14, ptr %end, align 8, !dbg !4607
  %alloc_type = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 5, !dbg !4607
  %15 = load ptr, ptr %info.addr, align 8, !dbg !4607
  %queue_alloc_type = getelementptr inbounds %struct.erts_shcopy_t, ptr %15, i32 0, i32 3, !dbg !4607
  %16 = load i32, ptr %queue_alloc_type, align 8, !dbg !4607
  store i32 %16, ptr %alloc_type, align 8, !dbg !4607
  call void @llvm.lifetime.start.p0(i64 40, ptr %b) #8, !dbg !4608
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !4480, metadata !DIExpression()), !dbg !4608
  %wstart = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !4608
  %17 = load ptr, ptr %info.addr, align 8, !dbg !4608
  %bitstore_start = getelementptr inbounds %struct.erts_shcopy_t, ptr %17, i32 0, i32 5, !dbg !4608
  %18 = load ptr, ptr %bitstore_start, align 8, !dbg !4608
  store ptr %18, ptr %wstart, align 8, !dbg !4608
  %wsp = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 1, !dbg !4608
  store ptr null, ptr %wsp, align 8, !dbg !4608
  %wend = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 2, !dbg !4608
  store ptr null, ptr %wend, align 8, !dbg !4608
  %wdefault = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 3, !dbg !4608
  store ptr null, ptr %wdefault, align 8, !dbg !4608
  %alloc_type6 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 4, !dbg !4608
  %19 = load ptr, ptr %info.addr, align 8, !dbg !4608
  %bitstore_alloc_type = getelementptr inbounds %struct.erts_shcopy_t, ptr %19, i32 0, i32 6, !dbg !4608
  %20 = load i32, ptr %bitstore_alloc_type, align 8, !dbg !4608
  store i32 %20, ptr %alloc_type6, align 8, !dbg !4608
  call void @llvm.lifetime.start.p0(i64 4, ptr %b_bitoffs) #8, !dbg !4608
  tail call void @llvm.dbg.declare(metadata ptr %b_bitoffs, metadata !4481, metadata !DIExpression()), !dbg !4608
  store i32 0, ptr %b_bitoffs, align 4, !dbg !4608
  call void @llvm.lifetime.start.p0(i64 4, ptr %b_offset) #8, !dbg !4608
  tail call void @llvm.dbg.declare(metadata ptr %b_offset, metadata !4482, metadata !DIExpression()), !dbg !4608
  store i32 0, ptr %b_offset, align 4, !dbg !4608
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_buffer) #8, !dbg !4608
  tail call void @llvm.dbg.declare(metadata ptr %b_buffer, metadata !4483, metadata !DIExpression()), !dbg !4608
  store i64 0, ptr %b_buffer, align 8, !dbg !4608
  call void @llvm.lifetime.start.p0(i64 40, ptr %t) #8, !dbg !4609
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !4484, metadata !DIExpression()), !dbg !4609
  %start7 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4609
  %21 = load ptr, ptr %info.addr, align 8, !dbg !4609
  %shtable_start = getelementptr inbounds %struct.erts_shcopy_t, ptr %21, i32 0, i32 8, !dbg !4609
  %22 = load ptr, ptr %shtable_start, align 8, !dbg !4609
  store ptr %22, ptr %start7, align 8, !dbg !4609
  %sp = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 1, !dbg !4609
  store ptr null, ptr %sp, align 8, !dbg !4609
  %end8 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 2, !dbg !4609
  store ptr null, ptr %end8, align 8, !dbg !4609
  %edefault = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 3, !dbg !4609
  store ptr null, ptr %edefault, align 8, !dbg !4609
  %alloc_type9 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 4, !dbg !4609
  %23 = load ptr, ptr %info.addr, align 8, !dbg !4609
  %shtable_alloc_type = getelementptr inbounds %struct.erts_shcopy_t, ptr %23, i32 0, i32 9, !dbg !4609
  %24 = load i32, ptr %shtable_alloc_type, align 8, !dbg !4609
  store i32 %24, ptr %alloc_type9, align 8, !dbg !4609
  %25 = load i64, ptr %obj.addr, align 8, !dbg !4610
  %and = and i64 %25, 3, !dbg !4610
  %cmp = icmp eq i64 %and, 3, !dbg !4610
  br i1 %cmp, label %if.then, label %if.end, !dbg !4612

if.then:                                          ; preds = %entry
  %26 = load i64, ptr %obj.addr, align 8, !dbg !4613
  store i64 %26, ptr %retval, align 8, !dbg !4614
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup685, !dbg !4614

if.end:                                           ; preds = %entry
  %27 = load ptr, ptr %hpp.addr, align 8, !dbg !4615
  %28 = load ptr, ptr %27, align 8, !dbg !4616
  store ptr %28, ptr %hp, align 8, !dbg !4617
  store ptr %28, ptr %hscan, align 8, !dbg !4618
  %29 = load ptr, ptr %hp, align 8, !dbg !4619
  %30 = load i64, ptr %size.addr, align 8, !dbg !4620
  %add.ptr = getelementptr inbounds i64, ptr %29, i64 %30, !dbg !4621
  store ptr %add.ptr, ptr %hend, align 8, !dbg !4622
  store ptr %add.ptr, ptr %hbot, align 8, !dbg !4623
  store ptr %result, ptr %resp, align 8, !dbg !4624
  store i32 0, ptr %remaining, align 4, !dbg !4625
  br label %for.cond, !dbg !4626

for.cond:                                         ; preds = %sw.epilog657, %if.end
  %31 = load i64, ptr %obj.addr, align 8, !dbg !4627
  %and10 = and i64 %31, 3, !dbg !4627
  switch i64 %and10, label %sw.default656 [
    i64 1, label %sw.bb
    i64 2, label %sw.bb112
    i64 3, label %sw.bb546
  ], !dbg !4628

sw.bb:                                            ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %head) #8, !dbg !4629
  tail call void @llvm.dbg.declare(metadata ptr %head, metadata !4485, metadata !DIExpression()), !dbg !4630
  call void @llvm.lifetime.start.p0(i64 8, ptr %tail) #8, !dbg !4629
  tail call void @llvm.dbg.declare(metadata ptr %tail, metadata !4491, metadata !DIExpression()), !dbg !4631
  %32 = load i64, ptr %obj.addr, align 8, !dbg !4632
  %sub = sub i64 %32, 1, !dbg !4632
  %33 = inttoptr i64 %sub to ptr, !dbg !4632
  store ptr %33, ptr %ptr, align 8, !dbg !4633
  %34 = load i64, ptr %obj.addr, align 8, !dbg !4634
  %35 = load ptr, ptr %ptr, align 8, !dbg !4635
  %call = call i32 @erts_is_literal(i64 noundef %34, ptr noundef %35), !dbg !4636
  %tobool = icmp ne i32 %call, 0, !dbg !4636
  br i1 %tobool, label %if.then11, label %if.end22, !dbg !4637

if.then11:                                        ; preds = %sw.bb
  %36 = load i32, ptr %copy_literals, align 4, !dbg !4638
  %tobool12 = icmp ne i32 %36, 0, !dbg !4638
  br i1 %tobool12, label %if.else, label %lor.lhs.false, !dbg !4639

lor.lhs.false:                                    ; preds = %if.then11
  %37 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4640
  %tobool13 = icmp ne ptr %37, null, !dbg !4640
  br i1 %tobool13, label %land.lhs.true, label %if.then18, !dbg !4640

land.lhs.true:                                    ; preds = %lor.lhs.false
  %38 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4640
  %39 = load ptr, ptr %ptr, align 8, !dbg !4640
  %cmp14 = icmp ule ptr %38, %39, !dbg !4640
  br i1 %cmp14, label %land.lhs.true15, label %if.then18, !dbg !4640

land.lhs.true15:                                  ; preds = %land.lhs.true
  %40 = load ptr, ptr %ptr, align 8, !dbg !4640
  %41 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4640
  %42 = load i64, ptr %lit_purge_sz, align 8, !dbg !4640
  %add.ptr16 = getelementptr inbounds i64, ptr %41, i64 %42, !dbg !4640
  %cmp17 = icmp ult ptr %40, %add.ptr16, !dbg !4640
  br i1 %cmp17, label %if.else, label %if.then18, !dbg !4641

if.then18:                                        ; preds = %land.lhs.true15, %land.lhs.true, %lor.lhs.false
  %43 = load i64, ptr %obj.addr, align 8, !dbg !4642
  %44 = load ptr, ptr %resp, align 8, !dbg !4644
  store i64 %43, ptr %44, align 8, !dbg !4645
  br label %if.end21, !dbg !4646

if.else:                                          ; preds = %land.lhs.true15, %if.then11
  call void @llvm.lifetime.start.p0(i64 8, ptr %bsz) #8, !dbg !4647
  tail call void @llvm.dbg.declare(metadata ptr %bsz, metadata !4492, metadata !DIExpression()), !dbg !4648
  store i64 0, ptr %bsz, align 8, !dbg !4648
  %45 = load i64, ptr %obj.addr, align 8, !dbg !4649
  %46 = load ptr, ptr %hbot, align 8, !dbg !4650
  %47 = load ptr, ptr %hp, align 8, !dbg !4651
  %sub.ptr.lhs.cast = ptrtoint ptr %46 to i64, !dbg !4652
  %sub.ptr.rhs.cast = ptrtoint ptr %47 to i64, !dbg !4652
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4652
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !4652
  %48 = load ptr, ptr %off_heap.addr, align 8, !dbg !4653
  %call19 = call i64 @copy_struct_x(i64 noundef %45, i64 noundef %sub.ptr.div, ptr noundef %hp, ptr noundef %48, ptr noundef %bsz, ptr noundef null), !dbg !4654
  %49 = load ptr, ptr %resp, align 8, !dbg !4655
  store i64 %call19, ptr %49, align 8, !dbg !4656
  %50 = load i64, ptr %bsz, align 8, !dbg !4657
  %51 = load ptr, ptr %hbot, align 8, !dbg !4658
  %idx.neg = sub i64 0, %50, !dbg !4658
  %add.ptr20 = getelementptr inbounds i64, ptr %51, i64 %idx.neg, !dbg !4658
  store ptr %add.ptr20, ptr %hbot, align 8, !dbg !4658
  call void @llvm.lifetime.end.p0(i64 8, ptr %bsz) #8, !dbg !4659
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4660

if.end22:                                         ; preds = %sw.bb
  %52 = load ptr, ptr %ptr, align 8, !dbg !4661
  %arrayidx = getelementptr inbounds i64, ptr %52, i64 0, !dbg !4661
  %53 = load i64, ptr %arrayidx, align 8, !dbg !4661
  store i64 %53, ptr %head, align 8, !dbg !4662
  %54 = load ptr, ptr %ptr, align 8, !dbg !4663
  %arrayidx23 = getelementptr inbounds i64, ptr %54, i64 1, !dbg !4663
  %55 = load i64, ptr %arrayidx23, align 8, !dbg !4663
  store i64 %55, ptr %tail, align 8, !dbg !4664
  %56 = load i64, ptr %tail, align 8, !dbg !4665
  %cmp24 = icmp eq i64 %56, 0, !dbg !4667
  br i1 %cmp24, label %if.then25, label %if.end48, !dbg !4668

if.then25:                                        ; preds = %if.end22
  %57 = load i64, ptr %head, align 8, !dbg !4669
  %shr = lshr i64 %57, 2, !dbg !4671
  store i64 %shr, ptr %e, align 8, !dbg !4672
  %58 = load i64, ptr %head, align 8, !dbg !4673
  %and26 = and i64 %58, 3, !dbg !4673
  %cmp27 = icmp eq i64 %and26, 1, !dbg !4675
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !4676

if.then28:                                        ; preds = %if.then25
  %start29 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4677
  %59 = load ptr, ptr %start29, align 8, !dbg !4677
  %60 = load i64, ptr %e, align 8, !dbg !4677
  %add = add i64 %60, 2, !dbg !4677
  %arrayidx30 = getelementptr inbounds i64, ptr %59, i64 %add, !dbg !4677
  %61 = load i64, ptr %arrayidx30, align 8, !dbg !4677
  %62 = inttoptr i64 %61 to ptr, !dbg !4677
  %63 = ptrtoint ptr %62 to i64, !dbg !4677
  %add31 = add i64 %63, 1, !dbg !4677
  %64 = load ptr, ptr %resp, align 8, !dbg !4679
  store i64 %add31, ptr %64, align 8, !dbg !4680
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4681

if.else32:                                        ; preds = %if.then25
  %65 = load i64, ptr %head, align 8, !dbg !4682
  %66 = load i64, ptr %head, align 8, !dbg !4684
  %and33 = and i64 %66, 3, !dbg !4684
  %sub34 = sub i64 %65, %and33, !dbg !4685
  %add35 = add i64 %sub34, 1, !dbg !4686
  %67 = load ptr, ptr %ptr, align 8, !dbg !4687
  %arrayidx36 = getelementptr inbounds i64, ptr %67, i64 0, !dbg !4687
  store i64 %add35, ptr %arrayidx36, align 8, !dbg !4688
  %start37 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4689
  %68 = load ptr, ptr %start37, align 8, !dbg !4689
  %69 = load i64, ptr %e, align 8, !dbg !4689
  %arrayidx38 = getelementptr inbounds i64, ptr %68, i64 %69, !dbg !4689
  %70 = load i64, ptr %arrayidx38, align 8, !dbg !4689
  store i64 %70, ptr %head, align 8, !dbg !4690
  %start39 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4691
  %71 = load ptr, ptr %start39, align 8, !dbg !4691
  %72 = load i64, ptr %e, align 8, !dbg !4691
  %add40 = add i64 %72, 1, !dbg !4691
  %arrayidx41 = getelementptr inbounds i64, ptr %71, i64 %add40, !dbg !4691
  %73 = load i64, ptr %arrayidx41, align 8, !dbg !4691
  store i64 %73, ptr %tail, align 8, !dbg !4692
  %start42 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4693
  %74 = load ptr, ptr %start42, align 8, !dbg !4693
  %75 = load i64, ptr %e, align 8, !dbg !4693
  %arrayidx43 = getelementptr inbounds i64, ptr %74, i64 %75, !dbg !4693
  store ptr %arrayidx43, ptr %ptr, align 8, !dbg !4694
  %76 = load ptr, ptr %hp, align 8, !dbg !4695
  %77 = ptrtoint ptr %76 to i64, !dbg !4695
  %start44 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4695
  %78 = load ptr, ptr %start44, align 8, !dbg !4695
  %79 = load i64, ptr %e, align 8, !dbg !4695
  %add45 = add i64 %79, 2, !dbg !4695
  %arrayidx46 = getelementptr inbounds i64, ptr %78, i64 %add45, !dbg !4695
  store i64 %77, ptr %arrayidx46, align 8, !dbg !4695
  br label %if.end47

if.end47:                                         ; preds = %if.else32
  br label %if.end48, !dbg !4696

if.end48:                                         ; preds = %if.end47, %if.end22
  %80 = load i64, ptr %tail, align 8, !dbg !4697
  %and49 = and i64 %80, 3, !dbg !4697
  %cmp50 = icmp eq i64 %and49, 0, !dbg !4698
  br i1 %cmp50, label %if.then51, label %if.else75, !dbg !4699

if.then51:                                        ; preds = %if.end48
  %81 = load i64, ptr %head, align 8, !dbg !4700
  %and52 = and i64 %81, 3, !dbg !4700
  %cmp53 = icmp eq i64 %and52, 0, !dbg !4701
  br i1 %cmp53, label %if.then54, label %if.else70, !dbg !4702

if.then54:                                        ; preds = %if.then51
  call void @llvm.lifetime.start.p0(i64 8, ptr %saved) #8, !dbg !4703
  tail call void @llvm.dbg.declare(metadata ptr %saved, metadata !4497, metadata !DIExpression()), !dbg !4704
  br label %do.body, !dbg !4705

do.body:                                          ; preds = %if.then54
  call void @llvm.lifetime.start.p0(i64 8, ptr %result55) #8, !dbg !4706
  tail call void @llvm.dbg.declare(metadata ptr %result55, metadata !4502, metadata !DIExpression()), !dbg !4706
  %82 = load i32, ptr %b_bitoffs, align 4, !dbg !4707
  %cmp56 = icmp sle i32 %82, 0, !dbg !4707
  br i1 %cmp56, label %if.then57, label %if.end60, !dbg !4706

if.then57:                                        ; preds = %do.body
  %wstart58 = getelementptr inbounds %struct.ErtsWStack_, ptr %b, i32 0, i32 0, !dbg !4709
  %83 = load ptr, ptr %wstart58, align 8, !dbg !4709
  %84 = load i32, ptr %b_offset, align 4, !dbg !4709
  %idxprom = sext i32 %84 to i64, !dbg !4709
  %arrayidx59 = getelementptr inbounds i64, ptr %83, i64 %idxprom, !dbg !4709
  %85 = load i64, ptr %arrayidx59, align 8, !dbg !4709
  store i64 %85, ptr %b_buffer, align 8, !dbg !4709
  %86 = load i32, ptr %b_offset, align 4, !dbg !4709
  %inc = add nsw i32 %86, 1, !dbg !4709
  store i32 %inc, ptr %b_offset, align 4, !dbg !4709
  store i32 64, ptr %b_bitoffs, align 4, !dbg !4709
  br label %if.end60, !dbg !4709

if.end60:                                         ; preds = %if.then57, %do.body
  %87 = load i32, ptr %b_bitoffs, align 4, !dbg !4706
  %sub61 = sub nsw i32 %87, 2, !dbg !4706
  store i32 %sub61, ptr %b_bitoffs, align 4, !dbg !4706
  %88 = load i64, ptr %b_buffer, align 8, !dbg !4706
  %and62 = and i64 %88, 3, !dbg !4706
  store i64 %and62, ptr %result55, align 8, !dbg !4706
  %89 = load i64, ptr %b_buffer, align 8, !dbg !4706
  %shr63 = lshr i64 %89, 2, !dbg !4706
  store i64 %shr63, ptr %b_buffer, align 8, !dbg !4706
  %90 = load i64, ptr %result55, align 8, !dbg !4706
  store i64 %90, ptr %saved, align 8, !dbg !4706
  call void @llvm.lifetime.end.p0(i64 8, ptr %result55) #8, !dbg !4705
  br label %do.cond, !dbg !4706

do.cond:                                          ; preds = %if.end60
  br label %do.end, !dbg !4706

do.end:                                           ; preds = %do.cond
  %91 = load i64, ptr %head, align 8, !dbg !4711
  %sub64 = sub i64 %91, 0, !dbg !4712
  %92 = load i64, ptr %saved, align 8, !dbg !4713
  %add65 = add i64 %sub64, %92, !dbg !4714
  store i64 %add65, ptr %head, align 8, !dbg !4715
  %93 = load ptr, ptr %ptr, align 8, !dbg !4716
  %arrayidx66 = getelementptr inbounds i64, ptr %93, i64 0, !dbg !4716
  store i64 %add65, ptr %arrayidx66, align 8, !dbg !4717
  %94 = load i64, ptr %tail, align 8, !dbg !4718
  %sub67 = sub i64 %94, 0, !dbg !4719
  %add68 = add i64 %sub67, 2, !dbg !4720
  store i64 %add68, ptr %tail, align 8, !dbg !4721
  %95 = load ptr, ptr %ptr, align 8, !dbg !4722
  %arrayidx69 = getelementptr inbounds i64, ptr %95, i64 1, !dbg !4722
  store i64 %add68, ptr %arrayidx69, align 8, !dbg !4723
  call void @llvm.lifetime.end.p0(i64 8, ptr %saved) #8, !dbg !4724
  br label %if.end74, !dbg !4725

if.else70:                                        ; preds = %if.then51
  %96 = load i64, ptr %tail, align 8, !dbg !4726
  %sub71 = sub i64 %96, 0, !dbg !4728
  %add72 = add i64 %sub71, 1, !dbg !4729
  store i64 %add72, ptr %tail, align 8, !dbg !4730
  %97 = load ptr, ptr %ptr, align 8, !dbg !4731
  %arrayidx73 = getelementptr inbounds i64, ptr %97, i64 1, !dbg !4731
  store i64 %add72, ptr %arrayidx73, align 8, !dbg !4732
  br label %if.end74

if.end74:                                         ; preds = %if.else70, %do.end
  br label %if.end88, !dbg !4733

if.else75:                                        ; preds = %if.end48
  %98 = load i64, ptr %head, align 8, !dbg !4734
  %and76 = and i64 %98, 3, !dbg !4734
  %cmp77 = icmp eq i64 %and76, 0, !dbg !4736
  br i1 %cmp77, label %if.then78, label %if.else86, !dbg !4737

if.then78:                                        ; preds = %if.else75
  %99 = load i64, ptr %head, align 8, !dbg !4738
  %sub79 = sub i64 %99, 0, !dbg !4740
  %100 = load i64, ptr %tail, align 8, !dbg !4741
  %and80 = and i64 %100, 3, !dbg !4741
  %or = or i64 %sub79, %and80, !dbg !4742
  store i64 %or, ptr %head, align 8, !dbg !4743
  %101 = load ptr, ptr %ptr, align 8, !dbg !4744
  %arrayidx81 = getelementptr inbounds i64, ptr %101, i64 0, !dbg !4744
  store i64 %or, ptr %arrayidx81, align 8, !dbg !4745
  %102 = load i64, ptr %tail, align 8, !dbg !4746
  %103 = load i64, ptr %tail, align 8, !dbg !4747
  %and82 = and i64 %103, 3, !dbg !4747
  %sub83 = sub i64 %102, %and82, !dbg !4748
  %or84 = or i64 %sub83, 3, !dbg !4749
  store i64 %or84, ptr %tail, align 8, !dbg !4750
  %104 = load ptr, ptr %ptr, align 8, !dbg !4751
  %arrayidx85 = getelementptr inbounds i64, ptr %104, i64 1, !dbg !4751
  store i64 %or84, ptr %arrayidx85, align 8, !dbg !4752
  br label %if.end87, !dbg !4753

if.else86:                                        ; preds = %if.else75
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4754

if.end87:                                         ; preds = %if.then78
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end74
  %105 = load i64, ptr %head, align 8, !dbg !4756
  %and89 = and i64 %105, 3, !dbg !4756
  %cmp90 = icmp eq i64 %and89, 3, !dbg !4756
  br i1 %cmp90, label %if.then91, label %if.else93, !dbg !4758

if.then91:                                        ; preds = %if.end88
  %106 = load i64, ptr %head, align 8, !dbg !4759
  %107 = load ptr, ptr %hp, align 8, !dbg !4761
  %arrayidx92 = getelementptr inbounds i64, ptr %107, i64 0, !dbg !4761
  store i64 %106, ptr %arrayidx92, align 8, !dbg !4762
  br label %if.end107, !dbg !4763

if.else93:                                        ; preds = %if.end88
  br label %do.body94, !dbg !4764

do.body94:                                        ; preds = %if.else93
  %possibly_empty95 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4766
  store i32 0, ptr %possibly_empty95, align 8, !dbg !4766
  %108 = load i64, ptr %head, align 8, !dbg !4766
  %back96 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4766
  %109 = load ptr, ptr %back96, align 8, !dbg !4766
  store i64 %108, ptr %109, align 8, !dbg !4766
  %back97 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4768
  %110 = load ptr, ptr %back97, align 8, !dbg !4768
  %incdec.ptr = getelementptr inbounds i64, ptr %110, i32 1, !dbg !4768
  store ptr %incdec.ptr, ptr %back97, align 8, !dbg !4768
  %end98 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4768
  %111 = load ptr, ptr %end98, align 8, !dbg !4768
  %cmp99 = icmp eq ptr %incdec.ptr, %111, !dbg !4768
  br i1 %cmp99, label %if.then100, label %if.end103, !dbg !4766

if.then100:                                       ; preds = %do.body94
  %start101 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4770
  %112 = load ptr, ptr %start101, align 8, !dbg !4770
  %back102 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4770
  store ptr %112, ptr %back102, align 8, !dbg !4770
  br label %if.end103, !dbg !4770

if.end103:                                        ; preds = %if.then100, %do.body94
  br label %do.cond104, !dbg !4766

do.cond104:                                       ; preds = %if.end103
  br label %do.end105, !dbg !4766

do.end105:                                        ; preds = %do.cond104
  %113 = load ptr, ptr %hp, align 8, !dbg !4772
  %arrayidx106 = getelementptr inbounds i64, ptr %113, i64 0, !dbg !4772
  store i64 1, ptr %arrayidx106, align 8, !dbg !4773
  br label %if.end107

if.end107:                                        ; preds = %do.end105, %if.then91
  %114 = load ptr, ptr %hp, align 8, !dbg !4774
  %115 = ptrtoint ptr %114 to i64, !dbg !4774
  %add108 = add i64 %115, 1, !dbg !4774
  %116 = load ptr, ptr %resp, align 8, !dbg !4775
  store i64 %add108, ptr %116, align 8, !dbg !4776
  %117 = load ptr, ptr %hp, align 8, !dbg !4777
  %arrayidx109 = getelementptr inbounds i64, ptr %117, i64 1, !dbg !4777
  store ptr %arrayidx109, ptr %resp, align 8, !dbg !4778
  %118 = load ptr, ptr %hp, align 8, !dbg !4779
  %add.ptr110 = getelementptr inbounds i64, ptr %118, i64 2, !dbg !4779
  store ptr %add.ptr110, ptr %hp, align 8, !dbg !4779
  %119 = load i64, ptr %tail, align 8, !dbg !4780
  store i64 %119, ptr %obj.addr, align 8, !dbg !4781
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4782

cleanup:                                          ; preds = %if.else86, %if.then28, %if.end21, %if.end107
  call void @llvm.lifetime.end.p0(i64 8, ptr %tail) #8, !dbg !4783
  call void @llvm.lifetime.end.p0(i64 8, ptr %head) #8, !dbg !4783
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup685 [
    i32 4, label %sw.epilog657
    i32 5, label %cleanup_next
  ]

sw.bb112:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr) #8, !dbg !4784
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !4504, metadata !DIExpression()), !dbg !4785
  %120 = load i64, ptr %obj.addr, align 8, !dbg !4786
  %sub113 = sub i64 %120, 2, !dbg !4786
  %121 = inttoptr i64 %sub113 to ptr, !dbg !4786
  store ptr %121, ptr %ptr, align 8, !dbg !4787
  %122 = load i64, ptr %obj.addr, align 8, !dbg !4788
  %123 = load ptr, ptr %ptr, align 8, !dbg !4789
  %call114 = call i32 @erts_is_literal(i64 noundef %122, ptr noundef %123), !dbg !4790
  %tobool115 = icmp ne i32 %call114, 0, !dbg !4790
  br i1 %tobool115, label %if.then116, label %if.end138, !dbg !4791

if.then116:                                       ; preds = %sw.bb112
  %124 = load i64, ptr %obj.addr, align 8, !dbg !4792
  %125 = load i64, ptr %empty_tuple_literal, align 8, !dbg !4793
  %cmp117 = icmp eq i64 %124, %125, !dbg !4794
  br i1 %cmp117, label %if.then127, label %lor.lhs.false118, !dbg !4795

lor.lhs.false118:                                 ; preds = %if.then116
  %126 = load i32, ptr %copy_literals, align 4, !dbg !4796
  %tobool119 = icmp ne i32 %126, 0, !dbg !4796
  br i1 %tobool119, label %if.else128, label %lor.lhs.false120, !dbg !4797

lor.lhs.false120:                                 ; preds = %lor.lhs.false118
  %127 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4798
  %tobool121 = icmp ne ptr %127, null, !dbg !4798
  br i1 %tobool121, label %land.lhs.true122, label %if.then127, !dbg !4798

land.lhs.true122:                                 ; preds = %lor.lhs.false120
  %128 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4798
  %129 = load ptr, ptr %ptr, align 8, !dbg !4798
  %cmp123 = icmp ule ptr %128, %129, !dbg !4798
  br i1 %cmp123, label %land.lhs.true124, label %if.then127, !dbg !4798

land.lhs.true124:                                 ; preds = %land.lhs.true122
  %130 = load ptr, ptr %ptr, align 8, !dbg !4798
  %131 = load ptr, ptr %lit_purge_ptr, align 8, !dbg !4798
  %132 = load i64, ptr %lit_purge_sz, align 8, !dbg !4798
  %add.ptr125 = getelementptr inbounds i64, ptr %131, i64 %132, !dbg !4798
  %cmp126 = icmp ult ptr %130, %add.ptr125, !dbg !4798
  br i1 %cmp126, label %if.else128, label %if.then127, !dbg !4799

if.then127:                                       ; preds = %land.lhs.true124, %land.lhs.true122, %lor.lhs.false120, %if.then116
  %133 = load i64, ptr %obj.addr, align 8, !dbg !4800
  %134 = load ptr, ptr %resp, align 8, !dbg !4802
  store i64 %133, ptr %134, align 8, !dbg !4803
  br label %if.end137, !dbg !4804

if.else128:                                       ; preds = %land.lhs.true124, %lor.lhs.false118
  call void @llvm.lifetime.start.p0(i64 8, ptr %bsz129) #8, !dbg !4805
  tail call void @llvm.dbg.declare(metadata ptr %bsz129, metadata !4506, metadata !DIExpression()), !dbg !4806
  store i64 0, ptr %bsz129, align 8, !dbg !4806
  %135 = load i64, ptr %obj.addr, align 8, !dbg !4807
  %136 = load ptr, ptr %hbot, align 8, !dbg !4808
  %137 = load ptr, ptr %hp, align 8, !dbg !4809
  %sub.ptr.lhs.cast130 = ptrtoint ptr %136 to i64, !dbg !4810
  %sub.ptr.rhs.cast131 = ptrtoint ptr %137 to i64, !dbg !4810
  %sub.ptr.sub132 = sub i64 %sub.ptr.lhs.cast130, %sub.ptr.rhs.cast131, !dbg !4810
  %sub.ptr.div133 = sdiv exact i64 %sub.ptr.sub132, 8, !dbg !4810
  %138 = load ptr, ptr %off_heap.addr, align 8, !dbg !4811
  %call134 = call i64 @copy_struct_x(i64 noundef %135, i64 noundef %sub.ptr.div133, ptr noundef %hp, ptr noundef %138, ptr noundef %bsz129, ptr noundef null), !dbg !4812
  %139 = load ptr, ptr %resp, align 8, !dbg !4813
  store i64 %call134, ptr %139, align 8, !dbg !4814
  %140 = load i64, ptr %bsz129, align 8, !dbg !4815
  %141 = load ptr, ptr %hbot, align 8, !dbg !4816
  %idx.neg135 = sub i64 0, %140, !dbg !4816
  %add.ptr136 = getelementptr inbounds i64, ptr %141, i64 %idx.neg135, !dbg !4816
  store ptr %add.ptr136, ptr %hbot, align 8, !dbg !4816
  call void @llvm.lifetime.end.p0(i64 8, ptr %bsz129) #8, !dbg !4817
  br label %if.end137

if.end137:                                        ; preds = %if.else128, %if.then127
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup545, !dbg !4818

if.end138:                                        ; preds = %sw.bb112
  %142 = load ptr, ptr %ptr, align 8, !dbg !4819
  %143 = load i64, ptr %142, align 8, !dbg !4820
  store i64 %143, ptr %hdr, align 8, !dbg !4821
  %144 = load i64, ptr %hdr, align 8, !dbg !4822
  %and139 = and i64 %144, 3, !dbg !4822
  switch i64 %and139, label %sw.epilog [
    i64 0, label %sw.bb140
    i64 3, label %sw.bb141
    i64 2, label %sw.bb147
    i64 1, label %sw.bb161
  ], !dbg !4823

sw.bb140:                                         ; preds = %if.end138
  br label %sw.bb141, !dbg !4824

sw.bb141:                                         ; preds = %if.end138, %sw.bb140
  %145 = load i64, ptr %hdr, align 8, !dbg !4826
  %shr142 = lshr i64 %145, 2, !dbg !4827
  store i64 %shr142, ptr %e, align 8, !dbg !4828
  %start143 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4829
  %146 = load ptr, ptr %start143, align 8, !dbg !4829
  %147 = load i64, ptr %e, align 8, !dbg !4829
  %add144 = add i64 %147, 2, !dbg !4829
  %arrayidx145 = getelementptr inbounds i64, ptr %146, i64 %add144, !dbg !4829
  %148 = load i64, ptr %arrayidx145, align 8, !dbg !4829
  %149 = inttoptr i64 %148 to ptr, !dbg !4829
  %150 = ptrtoint ptr %149 to i64, !dbg !4829
  %add146 = add i64 %150, 2, !dbg !4829
  %151 = load ptr, ptr %resp, align 8, !dbg !4830
  store i64 %add146, ptr %151, align 8, !dbg !4831
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup545, !dbg !4832

sw.bb147:                                         ; preds = %if.end138
  %152 = load i64, ptr %hdr, align 8, !dbg !4833
  %shr148 = lshr i64 %152, 2, !dbg !4834
  store i64 %shr148, ptr %e, align 8, !dbg !4835
  %153 = load i64, ptr %hdr, align 8, !dbg !4836
  %154 = load i64, ptr %hdr, align 8, !dbg !4837
  %and149 = and i64 %154, 3, !dbg !4837
  %sub150 = sub i64 %153, %and149, !dbg !4838
  %add151 = add i64 %sub150, 3, !dbg !4839
  %155 = load ptr, ptr %ptr, align 8, !dbg !4840
  store i64 %add151, ptr %155, align 8, !dbg !4841
  %start152 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4842
  %156 = load ptr, ptr %start152, align 8, !dbg !4842
  %157 = load i64, ptr %e, align 8, !dbg !4842
  %arrayidx153 = getelementptr inbounds i64, ptr %156, i64 %157, !dbg !4842
  %158 = load i64, ptr %arrayidx153, align 8, !dbg !4842
  store i64 %158, ptr %hdr, align 8, !dbg !4843
  %159 = load i64, ptr %hdr, align 8, !dbg !4844
  %sub154 = sub i64 %159, 1, !dbg !4845
  %add155 = add i64 %sub154, 0, !dbg !4846
  store i64 %add155, ptr %hdr, align 8, !dbg !4847
  %start156 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4848
  %160 = load ptr, ptr %start156, align 8, !dbg !4848
  %161 = load i64, ptr %e, align 8, !dbg !4848
  %arrayidx157 = getelementptr inbounds i64, ptr %160, i64 %161, !dbg !4848
  store i64 %add155, ptr %arrayidx157, align 8, !dbg !4849
  %162 = load ptr, ptr %hp, align 8, !dbg !4850
  %163 = ptrtoint ptr %162 to i64, !dbg !4850
  %start158 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !4850
  %164 = load ptr, ptr %start158, align 8, !dbg !4850
  %165 = load i64, ptr %e, align 8, !dbg !4850
  %add159 = add i64 %165, 2, !dbg !4850
  %arrayidx160 = getelementptr inbounds i64, ptr %164, i64 %add159, !dbg !4850
  store i64 %163, ptr %arrayidx160, align 8, !dbg !4850
  br label %sw.epilog, !dbg !4851

sw.bb161:                                         ; preds = %if.end138
  %166 = load i64, ptr %hdr, align 8, !dbg !4852
  %sub162 = sub i64 %166, 1, !dbg !4853
  %add163 = add i64 %sub162, 0, !dbg !4854
  store i64 %add163, ptr %hdr, align 8, !dbg !4855
  %167 = load ptr, ptr %ptr, align 8, !dbg !4856
  store i64 %add163, ptr %167, align 8, !dbg !4857
  br label %sw.epilog, !dbg !4858

sw.epilog:                                        ; preds = %if.end138, %sw.bb161, %sw.bb147
  %168 = load i64, ptr %hdr, align 8, !dbg !4859
  %and164 = and i64 %168, 63, !dbg !4860
  switch i64 %and164, label %sw.default522 [
    i64 0, label %sw.bb165
    i64 20, label %sw.bb199
    i64 60, label %sw.bb262
    i64 32, label %sw.bb342
    i64 40, label %sw.bb379
    i64 48, label %sw.bb481
    i64 52, label %sw.bb481
    i64 56, label %sw.bb481
    i64 16, label %sw.bb510
  ], !dbg !4861

sw.bb165:                                         ; preds = %sw.epilog
  call void @llvm.lifetime.start.p0(i64 4, ptr %arity) #8, !dbg !4862
  tail call void @llvm.dbg.declare(metadata ptr %arity, metadata !4511, metadata !DIExpression()), !dbg !4863
  %169 = load i64, ptr %hdr, align 8, !dbg !4864
  %and166 = and i64 %169, 63, !dbg !4864
  %cmp167 = icmp eq i64 %and166, 60, !dbg !4864
  br i1 %cmp167, label %cond.true, label %cond.false, !dbg !4864

cond.true:                                        ; preds = %sw.bb165
  %170 = load i64, ptr %hdr, align 8, !dbg !4864
  %shr168 = lshr i64 %170, 8, !dbg !4864
  %and169 = and i64 %shr168, 255, !dbg !4864
  br label %cond.end, !dbg !4864

cond.false:                                       ; preds = %sw.bb165
  %171 = load i64, ptr %hdr, align 8, !dbg !4864
  %shr170 = lshr i64 %171, 6, !dbg !4864
  br label %cond.end, !dbg !4864

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %and169, %cond.true ], [ %shr170, %cond.false ], !dbg !4864
  %conv = trunc i64 %cond to i32, !dbg !4864
  store i32 %conv, ptr %arity, align 4, !dbg !4863
  %172 = load ptr, ptr %hp, align 8, !dbg !4865
  %173 = ptrtoint ptr %172 to i64, !dbg !4865
  %add171 = add i64 %173, 2, !dbg !4865
  %174 = load ptr, ptr %resp, align 8, !dbg !4866
  store i64 %add171, ptr %174, align 8, !dbg !4867
  %175 = load i64, ptr %hdr, align 8, !dbg !4868
  %176 = load ptr, ptr %hp, align 8, !dbg !4869
  %incdec.ptr172 = getelementptr inbounds i64, ptr %176, i32 1, !dbg !4869
  store ptr %incdec.ptr172, ptr %hp, align 8, !dbg !4869
  store i64 %175, ptr %176, align 8, !dbg !4870
  br label %while.cond, !dbg !4871

while.cond:                                       ; preds = %if.end197, %cond.end
  %177 = load i32, ptr %arity, align 4, !dbg !4872
  %dec = add nsw i32 %177, -1, !dbg !4872
  store i32 %dec, ptr %arity, align 4, !dbg !4872
  %cmp173 = icmp sgt i32 %177, 0, !dbg !4873
  br i1 %cmp173, label %while.body, label %while.end, !dbg !4871

while.body:                                       ; preds = %while.cond
  %178 = load ptr, ptr %ptr, align 8, !dbg !4874
  %incdec.ptr175 = getelementptr inbounds i64, ptr %178, i32 1, !dbg !4874
  store ptr %incdec.ptr175, ptr %ptr, align 8, !dbg !4874
  %179 = load i64, ptr %incdec.ptr175, align 8, !dbg !4876
  store i64 %179, ptr %obj.addr, align 8, !dbg !4877
  %180 = load i64, ptr %obj.addr, align 8, !dbg !4878
  %and176 = and i64 %180, 3, !dbg !4878
  %cmp177 = icmp eq i64 %and176, 3, !dbg !4878
  br i1 %cmp177, label %if.then179, label %if.else181, !dbg !4880

if.then179:                                       ; preds = %while.body
  %181 = load i64, ptr %obj.addr, align 8, !dbg !4881
  %182 = load ptr, ptr %hp, align 8, !dbg !4883
  %incdec.ptr180 = getelementptr inbounds i64, ptr %182, i32 1, !dbg !4883
  store ptr %incdec.ptr180, ptr %hp, align 8, !dbg !4883
  store i64 %181, ptr %182, align 8, !dbg !4884
  br label %if.end197, !dbg !4885

if.else181:                                       ; preds = %while.body
  br label %do.body182, !dbg !4886

do.body182:                                       ; preds = %if.else181
  %possibly_empty183 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4888
  store i32 0, ptr %possibly_empty183, align 8, !dbg !4888
  %183 = load i64, ptr %obj.addr, align 8, !dbg !4888
  %back184 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4888
  %184 = load ptr, ptr %back184, align 8, !dbg !4888
  store i64 %183, ptr %184, align 8, !dbg !4888
  %back185 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4890
  %185 = load ptr, ptr %back185, align 8, !dbg !4890
  %incdec.ptr186 = getelementptr inbounds i64, ptr %185, i32 1, !dbg !4890
  store ptr %incdec.ptr186, ptr %back185, align 8, !dbg !4890
  %end187 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4890
  %186 = load ptr, ptr %end187, align 8, !dbg !4890
  %cmp188 = icmp eq ptr %incdec.ptr186, %186, !dbg !4890
  br i1 %cmp188, label %if.then190, label %if.end193, !dbg !4888

if.then190:                                       ; preds = %do.body182
  %start191 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4892
  %187 = load ptr, ptr %start191, align 8, !dbg !4892
  %back192 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4892
  store ptr %187, ptr %back192, align 8, !dbg !4892
  br label %if.end193, !dbg !4892

if.end193:                                        ; preds = %if.then190, %do.body182
  br label %do.cond194, !dbg !4888

do.cond194:                                       ; preds = %if.end193
  br label %do.end195, !dbg !4888

do.end195:                                        ; preds = %do.cond194
  %188 = load ptr, ptr %hp, align 8, !dbg !4894
  %incdec.ptr196 = getelementptr inbounds i64, ptr %188, i32 1, !dbg !4894
  store ptr %incdec.ptr196, ptr %hp, align 8, !dbg !4894
  store i64 1, ptr %188, align 8, !dbg !4895
  br label %if.end197

if.end197:                                        ; preds = %do.end195, %if.then179
  br label %while.cond, !dbg !4871, !llvm.loop !4896

while.end:                                        ; preds = %while.cond
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %arity) #8, !dbg !4898
  br label %cleanup545

sw.bb199:                                         ; preds = %sw.epilog
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp) #8, !dbg !4899
  tail call void @llvm.dbg.declare(metadata ptr %funp, metadata !4514, metadata !DIExpression()), !dbg !4900
  %189 = load ptr, ptr %ptr, align 8, !dbg !4901
  store ptr %189, ptr %funp, align 8, !dbg !4900
  call void @llvm.lifetime.start.p0(i64 4, ptr %eterms) #8, !dbg !4902
  tail call void @llvm.dbg.declare(metadata ptr %eterms, metadata !4516, metadata !DIExpression()), !dbg !4903
  %190 = load ptr, ptr %funp, align 8, !dbg !4904
  %num_free = getelementptr inbounds %struct.erl_fun_thing, ptr %190, i32 0, i32 4, !dbg !4905
  %191 = load i8, ptr %num_free, align 1, !dbg !4905
  %conv200 = zext i8 %191 to i32, !dbg !4904
  %add201 = add nsw i32 1, %conv200, !dbg !4906
  store i32 %add201, ptr %eterms, align 4, !dbg !4903
  %192 = load i64, ptr %hdr, align 8, !dbg !4907
  %and202 = and i64 %192, 63, !dbg !4907
  %cmp203 = icmp eq i64 %and202, 60, !dbg !4907
  br i1 %cmp203, label %cond.true205, label %cond.false208, !dbg !4907

cond.true205:                                     ; preds = %sw.bb199
  %193 = load i64, ptr %hdr, align 8, !dbg !4907
  %shr206 = lshr i64 %193, 8, !dbg !4907
  %and207 = and i64 %shr206, 255, !dbg !4907
  br label %cond.end210, !dbg !4907

cond.false208:                                    ; preds = %sw.bb199
  %194 = load i64, ptr %hdr, align 8, !dbg !4907
  %shr209 = lshr i64 %194, 6, !dbg !4907
  br label %cond.end210, !dbg !4907

cond.end210:                                      ; preds = %cond.false208, %cond.true205
  %cond211 = phi i64 [ %and207, %cond.true205 ], [ %shr209, %cond.false208 ], !dbg !4907
  %conv212 = trunc i64 %cond211 to i32, !dbg !4907
  store i32 %conv212, ptr %sz, align 4, !dbg !4908
  %195 = load ptr, ptr %hp, align 8, !dbg !4909
  store ptr %195, ptr %funp, align 8, !dbg !4910
  %196 = load ptr, ptr %hp, align 8, !dbg !4911
  %197 = ptrtoint ptr %196 to i64, !dbg !4911
  %add213 = add i64 %197, 2, !dbg !4911
  %198 = load ptr, ptr %resp, align 8, !dbg !4912
  store i64 %add213, ptr %198, align 8, !dbg !4913
  %199 = load i64, ptr %hdr, align 8, !dbg !4914
  %200 = load ptr, ptr %hp, align 8, !dbg !4915
  %incdec.ptr214 = getelementptr inbounds i64, ptr %200, i32 1, !dbg !4915
  store ptr %incdec.ptr214, ptr %hp, align 8, !dbg !4915
  store i64 %199, ptr %200, align 8, !dbg !4916
  %201 = load ptr, ptr %ptr, align 8, !dbg !4917
  %incdec.ptr215 = getelementptr inbounds i64, ptr %201, i32 1, !dbg !4917
  store ptr %incdec.ptr215, ptr %ptr, align 8, !dbg !4917
  br label %while.cond216, !dbg !4918

while.cond216:                                    ; preds = %while.body220, %cond.end210
  %202 = load i32, ptr %sz, align 4, !dbg !4919
  %dec217 = add i32 %202, -1, !dbg !4919
  store i32 %dec217, ptr %sz, align 4, !dbg !4919
  %cmp218 = icmp ugt i32 %202, 0, !dbg !4920
  br i1 %cmp218, label %while.body220, label %while.end223, !dbg !4918

while.body220:                                    ; preds = %while.cond216
  %203 = load ptr, ptr %ptr, align 8, !dbg !4921
  %incdec.ptr221 = getelementptr inbounds i64, ptr %203, i32 1, !dbg !4921
  store ptr %incdec.ptr221, ptr %ptr, align 8, !dbg !4921
  %204 = load i64, ptr %203, align 8, !dbg !4923
  %205 = load ptr, ptr %hp, align 8, !dbg !4924
  %incdec.ptr222 = getelementptr inbounds i64, ptr %205, i32 1, !dbg !4924
  store ptr %incdec.ptr222, ptr %hp, align 8, !dbg !4924
  store i64 %204, ptr %205, align 8, !dbg !4925
  br label %while.cond216, !dbg !4918, !llvm.loop !4926

while.end223:                                     ; preds = %while.cond216
  br label %while.cond224, !dbg !4928

while.cond224:                                    ; preds = %if.end251, %while.end223
  %206 = load i32, ptr %eterms, align 4, !dbg !4929
  %dec225 = add i32 %206, -1, !dbg !4929
  store i32 %dec225, ptr %eterms, align 4, !dbg !4929
  %cmp226 = icmp ugt i32 %206, 0, !dbg !4930
  br i1 %cmp226, label %while.body228, label %while.end252, !dbg !4928

while.body228:                                    ; preds = %while.cond224
  %207 = load ptr, ptr %ptr, align 8, !dbg !4931
  %incdec.ptr229 = getelementptr inbounds i64, ptr %207, i32 1, !dbg !4931
  store ptr %incdec.ptr229, ptr %ptr, align 8, !dbg !4931
  %208 = load i64, ptr %207, align 8, !dbg !4933
  store i64 %208, ptr %obj.addr, align 8, !dbg !4934
  %209 = load i64, ptr %obj.addr, align 8, !dbg !4935
  %and230 = and i64 %209, 3, !dbg !4935
  %cmp231 = icmp eq i64 %and230, 3, !dbg !4935
  br i1 %cmp231, label %if.then233, label %if.else235, !dbg !4937

if.then233:                                       ; preds = %while.body228
  %210 = load i64, ptr %obj.addr, align 8, !dbg !4938
  %211 = load ptr, ptr %hp, align 8, !dbg !4940
  %incdec.ptr234 = getelementptr inbounds i64, ptr %211, i32 1, !dbg !4940
  store ptr %incdec.ptr234, ptr %hp, align 8, !dbg !4940
  store i64 %210, ptr %211, align 8, !dbg !4941
  br label %if.end251, !dbg !4942

if.else235:                                       ; preds = %while.body228
  br label %do.body236, !dbg !4943

do.body236:                                       ; preds = %if.else235
  %possibly_empty237 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !4945
  store i32 0, ptr %possibly_empty237, align 8, !dbg !4945
  %212 = load i64, ptr %obj.addr, align 8, !dbg !4945
  %back238 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4945
  %213 = load ptr, ptr %back238, align 8, !dbg !4945
  store i64 %212, ptr %213, align 8, !dbg !4945
  %back239 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4947
  %214 = load ptr, ptr %back239, align 8, !dbg !4947
  %incdec.ptr240 = getelementptr inbounds i64, ptr %214, i32 1, !dbg !4947
  store ptr %incdec.ptr240, ptr %back239, align 8, !dbg !4947
  %end241 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !4947
  %215 = load ptr, ptr %end241, align 8, !dbg !4947
  %cmp242 = icmp eq ptr %incdec.ptr240, %215, !dbg !4947
  br i1 %cmp242, label %if.then244, label %if.end247, !dbg !4945

if.then244:                                       ; preds = %do.body236
  %start245 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !4949
  %216 = load ptr, ptr %start245, align 8, !dbg !4949
  %back246 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !4949
  store ptr %216, ptr %back246, align 8, !dbg !4949
  br label %if.end247, !dbg !4949

if.end247:                                        ; preds = %if.then244, %do.body236
  br label %do.cond248, !dbg !4945

do.cond248:                                       ; preds = %if.end247
  br label %do.end249, !dbg !4945

do.end249:                                        ; preds = %do.cond248
  %217 = load ptr, ptr %hp, align 8, !dbg !4951
  %incdec.ptr250 = getelementptr inbounds i64, ptr %217, i32 1, !dbg !4951
  store ptr %incdec.ptr250, ptr %hp, align 8, !dbg !4951
  store i64 1, ptr %217, align 8, !dbg !4952
  br label %if.end251

if.end251:                                        ; preds = %do.end249, %if.then233
  br label %while.cond224, !dbg !4928, !llvm.loop !4953

while.end252:                                     ; preds = %while.cond224
  %218 = load ptr, ptr %funp, align 8, !dbg !4955
  %creator = getelementptr inbounds %struct.erl_fun_thing, ptr %218, i32 0, i32 5, !dbg !4955
  %219 = load i64, ptr %creator, align 8, !dbg !4955
  %cmp253 = icmp ne i64 %219, 16715, !dbg !4955
  br i1 %cmp253, label %if.then255, label %if.else258, !dbg !4957

if.then255:                                       ; preds = %while.end252
  %220 = load ptr, ptr %off_heap.addr, align 8, !dbg !4958
  %first = getelementptr inbounds %struct.erl_off_heap, ptr %220, i32 0, i32 0, !dbg !4960
  %221 = load ptr, ptr %first, align 8, !dbg !4960
  %222 = load ptr, ptr %funp, align 8, !dbg !4961
  %next = getelementptr inbounds %struct.erl_fun_thing, ptr %222, i32 0, i32 2, !dbg !4962
  store ptr %221, ptr %next, align 8, !dbg !4963
  %223 = load ptr, ptr %funp, align 8, !dbg !4964
  %224 = load ptr, ptr %off_heap.addr, align 8, !dbg !4965
  %first256 = getelementptr inbounds %struct.erl_off_heap, ptr %224, i32 0, i32 0, !dbg !4966
  store ptr %223, ptr %first256, align 8, !dbg !4967
  %225 = load ptr, ptr %funp, align 8, !dbg !4968
  %entry257 = getelementptr inbounds %struct.erl_fun_thing, ptr %225, i32 0, i32 1, !dbg !4969
  %226 = load ptr, ptr %entry257, align 8, !dbg !4970
  %refc = getelementptr inbounds %struct.erl_fun_entry, ptr %226, i32 0, i32 7, !dbg !4971
  call void @erts_refc_inc(ptr noundef %refc, i64 noundef 2), !dbg !4972
  br label %if.end259, !dbg !4973

if.else258:                                       ; preds = %while.end252
  br label %if.end259

if.end259:                                        ; preds = %if.else258, %if.then255
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %eterms) #8, !dbg !4974
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp) #8, !dbg !4974
  br label %cleanup545

sw.bb262:                                         ; preds = %sw.epilog
  %227 = load ptr, ptr %hp, align 8, !dbg !4975
  %228 = ptrtoint ptr %227 to i64, !dbg !4975
  %add263 = add i64 %228, 2, !dbg !4975
  %229 = load ptr, ptr %resp, align 8, !dbg !4976
  store i64 %add263, ptr %229, align 8, !dbg !4977
  %230 = load i64, ptr %hdr, align 8, !dbg !4978
  %231 = load ptr, ptr %hp, align 8, !dbg !4979
  %incdec.ptr264 = getelementptr inbounds i64, ptr %231, i32 1, !dbg !4979
  store ptr %incdec.ptr264, ptr %hp, align 8, !dbg !4979
  store i64 %230, ptr %231, align 8, !dbg !4980
  %232 = load i64, ptr %hdr, align 8, !dbg !4981
  %shr265 = lshr i64 %232, 6, !dbg !4981
  %and266 = and i64 %shr265, 3, !dbg !4981
  switch i64 %and266, label %sw.default [
    i64 0, label %sw.bb267
    i64 3, label %sw.bb302
    i64 2, label %sw.bb302
    i64 1, label %sw.bb305
  ], !dbg !4982

sw.bb267:                                         ; preds = %sw.bb262
  call void @llvm.lifetime.start.p0(i64 8, ptr %mp) #8, !dbg !4983
  tail call void @llvm.dbg.declare(metadata ptr %mp, metadata !4517, metadata !DIExpression()), !dbg !4984
  %233 = load ptr, ptr %ptr, align 8, !dbg !4985
  store ptr %233, ptr %mp, align 8, !dbg !4984
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #8, !dbg !4986
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !4520, metadata !DIExpression()), !dbg !4987
  %234 = load ptr, ptr %mp, align 8, !dbg !4988
  %size268 = getelementptr inbounds %struct.flatmap_s, ptr %234, i32 0, i32 1, !dbg !4988
  %235 = load i64, ptr %size268, align 8, !dbg !4988
  %add269 = add i64 %235, 1, !dbg !4989
  store i64 %add269, ptr %n, align 8, !dbg !4987
  %236 = load ptr, ptr %ptr, align 8, !dbg !4990
  %incdec.ptr270 = getelementptr inbounds i64, ptr %236, i32 1, !dbg !4990
  store ptr %incdec.ptr270, ptr %ptr, align 8, !dbg !4990
  %237 = load i64, ptr %incdec.ptr270, align 8, !dbg !4991
  %238 = load ptr, ptr %hp, align 8, !dbg !4992
  %incdec.ptr271 = getelementptr inbounds i64, ptr %238, i32 1, !dbg !4992
  store ptr %incdec.ptr271, ptr %hp, align 8, !dbg !4992
  store i64 %237, ptr %238, align 8, !dbg !4993
  br label %while.cond272, !dbg !4994

while.cond272:                                    ; preds = %if.end298, %sw.bb267
  %239 = load i64, ptr %n, align 8, !dbg !4995
  %dec273 = add i64 %239, -1, !dbg !4995
  store i64 %dec273, ptr %n, align 8, !dbg !4995
  %tobool274 = icmp ne i64 %239, 0, !dbg !4994
  br i1 %tobool274, label %while.body275, label %while.end299, !dbg !4994

while.body275:                                    ; preds = %while.cond272
  %240 = load ptr, ptr %ptr, align 8, !dbg !4996
  %incdec.ptr276 = getelementptr inbounds i64, ptr %240, i32 1, !dbg !4996
  store ptr %incdec.ptr276, ptr %ptr, align 8, !dbg !4996
  %241 = load i64, ptr %incdec.ptr276, align 8, !dbg !4998
  store i64 %241, ptr %obj.addr, align 8, !dbg !4999
  %242 = load i64, ptr %obj.addr, align 8, !dbg !5000
  %and277 = and i64 %242, 3, !dbg !5000
  %cmp278 = icmp eq i64 %and277, 3, !dbg !5000
  br i1 %cmp278, label %if.then280, label %if.else282, !dbg !5002

if.then280:                                       ; preds = %while.body275
  %243 = load i64, ptr %obj.addr, align 8, !dbg !5003
  %244 = load ptr, ptr %hp, align 8, !dbg !5005
  %incdec.ptr281 = getelementptr inbounds i64, ptr %244, i32 1, !dbg !5005
  store ptr %incdec.ptr281, ptr %hp, align 8, !dbg !5005
  store i64 %243, ptr %244, align 8, !dbg !5006
  br label %if.end298, !dbg !5007

if.else282:                                       ; preds = %while.body275
  br label %do.body283, !dbg !5008

do.body283:                                       ; preds = %if.else282
  %possibly_empty284 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !5010
  store i32 0, ptr %possibly_empty284, align 8, !dbg !5010
  %245 = load i64, ptr %obj.addr, align 8, !dbg !5010
  %back285 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !5010
  %246 = load ptr, ptr %back285, align 8, !dbg !5010
  store i64 %245, ptr %246, align 8, !dbg !5010
  %back286 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !5012
  %247 = load ptr, ptr %back286, align 8, !dbg !5012
  %incdec.ptr287 = getelementptr inbounds i64, ptr %247, i32 1, !dbg !5012
  store ptr %incdec.ptr287, ptr %back286, align 8, !dbg !5012
  %end288 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !5012
  %248 = load ptr, ptr %end288, align 8, !dbg !5012
  %cmp289 = icmp eq ptr %incdec.ptr287, %248, !dbg !5012
  br i1 %cmp289, label %if.then291, label %if.end294, !dbg !5010

if.then291:                                       ; preds = %do.body283
  %start292 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !5014
  %249 = load ptr, ptr %start292, align 8, !dbg !5014
  %back293 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !5014
  store ptr %249, ptr %back293, align 8, !dbg !5014
  br label %if.end294, !dbg !5014

if.end294:                                        ; preds = %if.then291, %do.body283
  br label %do.cond295, !dbg !5010

do.cond295:                                       ; preds = %if.end294
  br label %do.end296, !dbg !5010

do.end296:                                        ; preds = %do.cond295
  %250 = load ptr, ptr %hp, align 8, !dbg !5016
  %incdec.ptr297 = getelementptr inbounds i64, ptr %250, i32 1, !dbg !5016
  store ptr %incdec.ptr297, ptr %hp, align 8, !dbg !5016
  store i64 1, ptr %250, align 8, !dbg !5017
  br label %if.end298

if.end298:                                        ; preds = %do.end296, %if.then280
  br label %while.cond272, !dbg !4994, !llvm.loop !5018

while.end299:                                     ; preds = %while.cond272
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #8, !dbg !5020
  call void @llvm.lifetime.end.p0(i64 8, ptr %mp) #8, !dbg !5020
  br label %cleanup545

sw.bb302:                                         ; preds = %sw.bb262, %sw.bb262
  %251 = load ptr, ptr %ptr, align 8, !dbg !5021
  %incdec.ptr303 = getelementptr inbounds i64, ptr %251, i32 1, !dbg !5021
  store ptr %incdec.ptr303, ptr %ptr, align 8, !dbg !5021
  %252 = load i64, ptr %incdec.ptr303, align 8, !dbg !5022
  %253 = load ptr, ptr %hp, align 8, !dbg !5023
  %incdec.ptr304 = getelementptr inbounds i64, ptr %253, i32 1, !dbg !5023
  store ptr %incdec.ptr304, ptr %hp, align 8, !dbg !5023
  store i64 %252, ptr %253, align 8, !dbg !5024
  br label %sw.bb305, !dbg !5025

sw.bb305:                                         ; preds = %sw.bb262, %sw.bb302
  call void @llvm.lifetime.start.p0(i64 8, ptr %n306) #8, !dbg !5026
  tail call void @llvm.dbg.declare(metadata ptr %n306, metadata !4521, metadata !DIExpression()), !dbg !5027
  %254 = load i64, ptr %hdr, align 8, !dbg !5028
  %shr307 = lshr i64 %254, 16, !dbg !5028
  %and308 = and i64 %shr307, 65535, !dbg !5028
  %conv309 = trunc i64 %and308 to i32, !dbg !5028
  %255 = call i32 @llvm.ctpop.i32(i32 %conv309), !dbg !5028
  %conv310 = zext i32 %255 to i64, !dbg !5028
  store i64 %conv310, ptr %n306, align 8, !dbg !5027
  br label %while.cond311, !dbg !5029

while.cond311:                                    ; preds = %if.end337, %sw.bb305
  %256 = load i64, ptr %n306, align 8, !dbg !5030
  %dec312 = add i64 %256, -1, !dbg !5030
  store i64 %dec312, ptr %n306, align 8, !dbg !5030
  %tobool313 = icmp ne i64 %256, 0, !dbg !5029
  br i1 %tobool313, label %while.body314, label %while.end338, !dbg !5029

while.body314:                                    ; preds = %while.cond311
  %257 = load ptr, ptr %ptr, align 8, !dbg !5031
  %incdec.ptr315 = getelementptr inbounds i64, ptr %257, i32 1, !dbg !5031
  store ptr %incdec.ptr315, ptr %ptr, align 8, !dbg !5031
  %258 = load i64, ptr %incdec.ptr315, align 8, !dbg !5033
  store i64 %258, ptr %obj.addr, align 8, !dbg !5034
  %259 = load i64, ptr %obj.addr, align 8, !dbg !5035
  %and316 = and i64 %259, 3, !dbg !5035
  %cmp317 = icmp eq i64 %and316, 3, !dbg !5035
  br i1 %cmp317, label %if.then319, label %if.else321, !dbg !5037

if.then319:                                       ; preds = %while.body314
  %260 = load i64, ptr %obj.addr, align 8, !dbg !5038
  %261 = load ptr, ptr %hp, align 8, !dbg !5040
  %incdec.ptr320 = getelementptr inbounds i64, ptr %261, i32 1, !dbg !5040
  store ptr %incdec.ptr320, ptr %hp, align 8, !dbg !5040
  store i64 %260, ptr %261, align 8, !dbg !5041
  br label %if.end337, !dbg !5042

if.else321:                                       ; preds = %while.body314
  br label %do.body322, !dbg !5043

do.body322:                                       ; preds = %if.else321
  %possibly_empty323 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !5045
  store i32 0, ptr %possibly_empty323, align 8, !dbg !5045
  %262 = load i64, ptr %obj.addr, align 8, !dbg !5045
  %back324 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !5045
  %263 = load ptr, ptr %back324, align 8, !dbg !5045
  store i64 %262, ptr %263, align 8, !dbg !5045
  %back325 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !5047
  %264 = load ptr, ptr %back325, align 8, !dbg !5047
  %incdec.ptr326 = getelementptr inbounds i64, ptr %264, i32 1, !dbg !5047
  store ptr %incdec.ptr326, ptr %back325, align 8, !dbg !5047
  %end327 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 4, !dbg !5047
  %265 = load ptr, ptr %end327, align 8, !dbg !5047
  %cmp328 = icmp eq ptr %incdec.ptr326, %265, !dbg !5047
  br i1 %cmp328, label %if.then330, label %if.end333, !dbg !5045

if.then330:                                       ; preds = %do.body322
  %start331 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 0, !dbg !5049
  %266 = load ptr, ptr %start331, align 8, !dbg !5049
  %back332 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !5049
  store ptr %266, ptr %back332, align 8, !dbg !5049
  br label %if.end333, !dbg !5049

if.end333:                                        ; preds = %if.then330, %do.body322
  br label %do.cond334, !dbg !5045

do.cond334:                                       ; preds = %if.end333
  br label %do.end335, !dbg !5045

do.end335:                                        ; preds = %do.cond334
  %267 = load ptr, ptr %hp, align 8, !dbg !5051
  %incdec.ptr336 = getelementptr inbounds i64, ptr %267, i32 1, !dbg !5051
  store ptr %incdec.ptr336, ptr %hp, align 8, !dbg !5051
  store i64 1, ptr %267, align 8, !dbg !5052
  br label %if.end337

if.end337:                                        ; preds = %do.end335, %if.then319
  br label %while.cond311, !dbg !5029, !llvm.loop !5053

while.end338:                                     ; preds = %while.cond311
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %n306) #8, !dbg !5055
  br label %cleanup545

sw.default:                                       ; preds = %sw.bb262
  %268 = load i64, ptr %hdr, align 8, !dbg !5056
  %shr340 = lshr i64 %268, 6, !dbg !5056
  %and341 = and i64 %shr340, 3, !dbg !5056
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.13, i64 noundef %and341) #9, !dbg !5057
  unreachable, !dbg !5057

sw.bb342:                                         ; preds = %sw.epilog
  call void @llvm.lifetime.start.p0(i64 8, ptr %pb) #8, !dbg !5058
  tail call void @llvm.dbg.declare(metadata ptr %pb, metadata !4523, metadata !DIExpression()), !dbg !5059
  %269 = load ptr, ptr %ptr, align 8, !dbg !5060
  store ptr %269, ptr %pb, align 8, !dbg !5059
  %270 = load i64, ptr %hdr, align 8, !dbg !5061
  %and343 = and i64 %270, 63, !dbg !5061
  %cmp344 = icmp eq i64 %and343, 60, !dbg !5061
  br i1 %cmp344, label %cond.true346, label %cond.false349, !dbg !5061

cond.true346:                                     ; preds = %sw.bb342
  %271 = load i64, ptr %hdr, align 8, !dbg !5061
  %shr347 = lshr i64 %271, 8, !dbg !5061
  %and348 = and i64 %shr347, 255, !dbg !5061
  br label %cond.end351, !dbg !5061

cond.false349:                                    ; preds = %sw.bb342
  %272 = load i64, ptr %hdr, align 8, !dbg !5061
  %shr350 = lshr i64 %272, 6, !dbg !5061
  br label %cond.end351, !dbg !5061

cond.end351:                                      ; preds = %cond.false349, %cond.true346
  %cond352 = phi i64 [ %and348, %cond.true346 ], [ %shr350, %cond.false349 ], !dbg !5061
  %conv353 = trunc i64 %cond352 to i32, !dbg !5061
  store i32 %conv353, ptr %sz, align 4, !dbg !5062
  %273 = load ptr, ptr %pb, align 8, !dbg !5063
  %flags = getelementptr inbounds %struct.proc_bin, ptr %273, i32 0, i32 5, !dbg !5065
  %274 = load i64, ptr %flags, align 8, !dbg !5065
  %tobool354 = icmp ne i64 %274, 0, !dbg !5063
  br i1 %tobool354, label %if.then355, label %if.end356, !dbg !5066

if.then355:                                       ; preds = %cond.end351
  %275 = load ptr, ptr %pb, align 8, !dbg !5067
  call void @erts_emasculate_writable_binary(ptr noundef %275), !dbg !5069
  br label %if.end356, !dbg !5070

if.end356:                                        ; preds = %if.then355, %cond.end351
  %276 = load ptr, ptr %hp, align 8, !dbg !5071
  store ptr %276, ptr %pb, align 8, !dbg !5072
  %277 = load ptr, ptr %hp, align 8, !dbg !5073
  %278 = ptrtoint ptr %277 to i64, !dbg !5073
  %add357 = add i64 %278, 2, !dbg !5073
  %279 = load ptr, ptr %resp, align 8, !dbg !5074
  store i64 %add357, ptr %279, align 8, !dbg !5075
  %280 = load i64, ptr %hdr, align 8, !dbg !5076
  %281 = load ptr, ptr %hp, align 8, !dbg !5077
  %incdec.ptr358 = getelementptr inbounds i64, ptr %281, i32 1, !dbg !5077
  store ptr %incdec.ptr358, ptr %hp, align 8, !dbg !5077
  store i64 %280, ptr %281, align 8, !dbg !5078
  %282 = load ptr, ptr %ptr, align 8, !dbg !5079
  %incdec.ptr359 = getelementptr inbounds i64, ptr %282, i32 1, !dbg !5079
  store ptr %incdec.ptr359, ptr %ptr, align 8, !dbg !5079
  br label %while.cond360, !dbg !5080

while.cond360:                                    ; preds = %while.body364, %if.end356
  %283 = load i32, ptr %sz, align 4, !dbg !5081
  %dec361 = add i32 %283, -1, !dbg !5081
  store i32 %dec361, ptr %sz, align 4, !dbg !5081
  %cmp362 = icmp ugt i32 %283, 0, !dbg !5082
  br i1 %cmp362, label %while.body364, label %while.end367, !dbg !5080

while.body364:                                    ; preds = %while.cond360
  %284 = load ptr, ptr %ptr, align 8, !dbg !5083
  %incdec.ptr365 = getelementptr inbounds i64, ptr %284, i32 1, !dbg !5083
  store ptr %incdec.ptr365, ptr %ptr, align 8, !dbg !5083
  %285 = load i64, ptr %284, align 8, !dbg !5085
  %286 = load ptr, ptr %hp, align 8, !dbg !5086
  %incdec.ptr366 = getelementptr inbounds i64, ptr %286, i32 1, !dbg !5086
  store ptr %incdec.ptr366, ptr %hp, align 8, !dbg !5086
  store i64 %285, ptr %286, align 8, !dbg !5087
  br label %while.cond360, !dbg !5080, !llvm.loop !5088

while.end367:                                     ; preds = %while.cond360
  %287 = load ptr, ptr %pb, align 8, !dbg !5090
  %val = getelementptr inbounds %struct.proc_bin, ptr %287, i32 0, i32 3, !dbg !5091
  %288 = load ptr, ptr %val, align 8, !dbg !5091
  %intern = getelementptr inbounds %struct.binary, ptr %288, i32 0, i32 0, !dbg !5092
  %refc368 = getelementptr inbounds %struct.binary_internals, ptr %intern, i32 0, i32 1, !dbg !5093
  call void @erts_refc_inc(ptr noundef %refc368, i64 noundef 2), !dbg !5094
  %289 = load ptr, ptr %off_heap.addr, align 8, !dbg !5095
  %first369 = getelementptr inbounds %struct.erl_off_heap, ptr %289, i32 0, i32 0, !dbg !5096
  %290 = load ptr, ptr %first369, align 8, !dbg !5096
  %291 = load ptr, ptr %pb, align 8, !dbg !5097
  %next370 = getelementptr inbounds %struct.proc_bin, ptr %291, i32 0, i32 2, !dbg !5098
  store ptr %290, ptr %next370, align 8, !dbg !5099
  %292 = load ptr, ptr %pb, align 8, !dbg !5100
  %flags371 = getelementptr inbounds %struct.proc_bin, ptr %292, i32 0, i32 5, !dbg !5101
  store i64 0, ptr %flags371, align 8, !dbg !5102
  %293 = load ptr, ptr %pb, align 8, !dbg !5103
  %294 = load ptr, ptr %off_heap.addr, align 8, !dbg !5104
  %first372 = getelementptr inbounds %struct.erl_off_heap, ptr %294, i32 0, i32 0, !dbg !5105
  store ptr %293, ptr %first372, align 8, !dbg !5106
  br label %do.body373, !dbg !5107

do.body373:                                       ; preds = %while.end367
  %295 = load ptr, ptr %pb, align 8, !dbg !5108
  %size374 = getelementptr inbounds %struct.proc_bin, ptr %295, i32 0, i32 1, !dbg !5108
  %296 = load i64, ptr %size374, align 8, !dbg !5108
  %div = udiv i64 %296, 8, !dbg !5108
  %297 = load ptr, ptr %off_heap.addr, align 8, !dbg !5108
  %overhead = getelementptr inbounds %struct.erl_off_heap, ptr %297, i32 0, i32 1, !dbg !5108
  %298 = load i64, ptr %overhead, align 8, !dbg !5108
  %add375 = add i64 %298, %div, !dbg !5108
  store i64 %add375, ptr %overhead, align 8, !dbg !5108
  br label %do.cond376, !dbg !5108

do.cond376:                                       ; preds = %do.body373
  br label %do.end377, !dbg !5108

do.end377:                                        ; preds = %do.cond376
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %pb) #8, !dbg !5110
  br label %cleanup545

sw.bb379:                                         ; preds = %sw.epilog
  call void @llvm.lifetime.start.p0(i64 8, ptr %sb) #8, !dbg !5111
  tail call void @llvm.dbg.declare(metadata ptr %sb, metadata !4525, metadata !DIExpression()), !dbg !5112
  %299 = load ptr, ptr %ptr, align 8, !dbg !5113
  store ptr %299, ptr %sb, align 8, !dbg !5112
  call void @llvm.lifetime.start.p0(i64 8, ptr %real_bin) #8, !dbg !5114
  tail call void @llvm.dbg.declare(metadata ptr %real_bin, metadata !4527, metadata !DIExpression()), !dbg !5115
  %300 = load ptr, ptr %sb, align 8, !dbg !5116
  %orig = getelementptr inbounds %struct.erl_sub_bin, ptr %300, i32 0, i32 6, !dbg !5117
  %301 = load i64, ptr %orig, align 8, !dbg !5117
  store i64 %301, ptr %real_bin, align 8, !dbg !5115
  call void @llvm.lifetime.start.p0(i64 8, ptr %bit_offset) #8, !dbg !5118
  tail call void @llvm.dbg.declare(metadata ptr %bit_offset, metadata !4528, metadata !DIExpression()), !dbg !5119
  %302 = load ptr, ptr %sb, align 8, !dbg !5120
  %bitoffs = getelementptr inbounds %struct.erl_sub_bin, ptr %302, i32 0, i32 4, !dbg !5121
  %303 = load i8, ptr %bitoffs, align 1, !dbg !5121
  %conv380 = zext i8 %303 to i64, !dbg !5120
  store i64 %conv380, ptr %bit_offset, align 8, !dbg !5119
  call void @llvm.lifetime.start.p0(i64 8, ptr %bit_size) #8, !dbg !5122
  tail call void @llvm.dbg.declare(metadata ptr %bit_size, metadata !4529, metadata !DIExpression()), !dbg !5123
  %304 = load ptr, ptr %sb, align 8, !dbg !5124
  %bitsize = getelementptr inbounds %struct.erl_sub_bin, ptr %304, i32 0, i32 3, !dbg !5125
  %305 = load i8, ptr %bitsize, align 8, !dbg !5125
  %conv381 = zext i8 %305 to i64, !dbg !5124
  store i64 %conv381, ptr %bit_size, align 8, !dbg !5123
  call void @llvm.lifetime.start.p0(i64 8, ptr %offset) #8, !dbg !5126
  tail call void @llvm.dbg.declare(metadata ptr %offset, metadata !4530, metadata !DIExpression()), !dbg !5127
  %306 = load ptr, ptr %sb, align 8, !dbg !5128
  %offs = getelementptr inbounds %struct.erl_sub_bin, ptr %306, i32 0, i32 2, !dbg !5129
  %307 = load i64, ptr %offs, align 8, !dbg !5129
  store i64 %307, ptr %offset, align 8, !dbg !5127
  call void @llvm.lifetime.start.p0(i64 8, ptr %size382) #8, !dbg !5130
  tail call void @llvm.dbg.declare(metadata ptr %size382, metadata !4531, metadata !DIExpression()), !dbg !5131
  %308 = load ptr, ptr %sb, align 8, !dbg !5132
  %size383 = getelementptr inbounds %struct.erl_sub_bin, ptr %308, i32 0, i32 1, !dbg !5133
  %309 = load i64, ptr %size383, align 8, !dbg !5133
  store i64 %309, ptr %size382, align 8, !dbg !5131
  call void @llvm.lifetime.start.p0(i64 8, ptr %extra_bytes) #8, !dbg !5134
  tail call void @llvm.dbg.declare(metadata ptr %extra_bytes, metadata !4532, metadata !DIExpression()), !dbg !5135
  call void @llvm.lifetime.start.p0(i64 8, ptr %real_size) #8, !dbg !5136
  tail call void @llvm.dbg.declare(metadata ptr %real_size, metadata !4533, metadata !DIExpression()), !dbg !5137
  %310 = load i64, ptr %bit_size, align 8, !dbg !5138
  %311 = load i64, ptr %bit_offset, align 8, !dbg !5140
  %add384 = add i64 %310, %311, !dbg !5141
  %cmp385 = icmp ugt i64 %add384, 8, !dbg !5142
  br i1 %cmp385, label %if.then387, label %if.else388, !dbg !5143

if.then387:                                       ; preds = %sw.bb379
  store i64 2, ptr %extra_bytes, align 8, !dbg !5144
  br label %if.end395, !dbg !5146

if.else388:                                       ; preds = %sw.bb379
  %312 = load i64, ptr %bit_size, align 8, !dbg !5147
  %313 = load i64, ptr %bit_offset, align 8, !dbg !5149
  %add389 = add i64 %312, %313, !dbg !5150
  %cmp390 = icmp ugt i64 %add389, 0, !dbg !5151
  br i1 %cmp390, label %if.then392, label %if.else393, !dbg !5152

if.then392:                                       ; preds = %if.else388
  store i64 1, ptr %extra_bytes, align 8, !dbg !5153
  br label %if.end394, !dbg !5155

if.else393:                                       ; preds = %if.else388
  store i64 0, ptr %extra_bytes, align 8, !dbg !5156
  br label %if.end394

if.end394:                                        ; preds = %if.else393, %if.then392
  br label %if.end395

if.end395:                                        ; preds = %if.end394, %if.then387
  %314 = load i64, ptr %size382, align 8, !dbg !5158
  %315 = load i64, ptr %extra_bytes, align 8, !dbg !5159
  %add396 = add i64 %314, %315, !dbg !5160
  store i64 %add396, ptr %real_size, align 8, !dbg !5161
  %316 = load ptr, ptr %hp, align 8, !dbg !5162
  %317 = ptrtoint ptr %316 to i64, !dbg !5162
  %add397 = add i64 %317, 2, !dbg !5162
  %318 = load ptr, ptr %resp, align 8, !dbg !5163
  store i64 %add397, ptr %318, align 8, !dbg !5164
  %319 = load i64, ptr %extra_bytes, align 8, !dbg !5165
  %cmp398 = icmp ne i64 %319, 0, !dbg !5166
  br i1 %cmp398, label %if.then400, label %if.end410, !dbg !5167

if.then400:                                       ; preds = %if.end395
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #8, !dbg !5168
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !4534, metadata !DIExpression()), !dbg !5169
  %320 = load ptr, ptr %hp, align 8, !dbg !5170
  store ptr %320, ptr %res, align 8, !dbg !5169
  %321 = load ptr, ptr %hp, align 8, !dbg !5171
  %add.ptr401 = getelementptr inbounds i64, ptr %321, i64 5, !dbg !5171
  store ptr %add.ptr401, ptr %hp, align 8, !dbg !5171
  %322 = load ptr, ptr %res, align 8, !dbg !5172
  %thing_word = getelementptr inbounds %struct.erl_sub_bin, ptr %322, i32 0, i32 0, !dbg !5173
  store i64 232, ptr %thing_word, align 8, !dbg !5174
  %323 = load i64, ptr %size382, align 8, !dbg !5175
  %324 = load ptr, ptr %res, align 8, !dbg !5176
  %size402 = getelementptr inbounds %struct.erl_sub_bin, ptr %324, i32 0, i32 1, !dbg !5177
  store i64 %323, ptr %size402, align 8, !dbg !5178
  %325 = load i64, ptr %bit_size, align 8, !dbg !5179
  %conv403 = trunc i64 %325 to i8, !dbg !5179
  %326 = load ptr, ptr %res, align 8, !dbg !5180
  %bitsize404 = getelementptr inbounds %struct.erl_sub_bin, ptr %326, i32 0, i32 3, !dbg !5181
  store i8 %conv403, ptr %bitsize404, align 8, !dbg !5182
  %327 = load i64, ptr %bit_offset, align 8, !dbg !5183
  %conv405 = trunc i64 %327 to i8, !dbg !5183
  %328 = load ptr, ptr %res, align 8, !dbg !5184
  %bitoffs406 = getelementptr inbounds %struct.erl_sub_bin, ptr %328, i32 0, i32 4, !dbg !5185
  store i8 %conv405, ptr %bitoffs406, align 1, !dbg !5186
  %329 = load ptr, ptr %res, align 8, !dbg !5187
  %offs407 = getelementptr inbounds %struct.erl_sub_bin, ptr %329, i32 0, i32 2, !dbg !5188
  store i64 0, ptr %offs407, align 8, !dbg !5189
  %330 = load ptr, ptr %res, align 8, !dbg !5190
  %is_writable = getelementptr inbounds %struct.erl_sub_bin, ptr %330, i32 0, i32 5, !dbg !5191
  store i8 0, ptr %is_writable, align 2, !dbg !5192
  %331 = load ptr, ptr %hp, align 8, !dbg !5193
  %332 = ptrtoint ptr %331 to i64, !dbg !5193
  %add408 = add i64 %332, 2, !dbg !5193
  %333 = load ptr, ptr %res, align 8, !dbg !5194
  %orig409 = getelementptr inbounds %struct.erl_sub_bin, ptr %333, i32 0, i32 6, !dbg !5195
  store i64 %add408, ptr %orig409, align 8, !dbg !5196
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #8, !dbg !5197
  br label %if.end410, !dbg !5198

if.end410:                                        ; preds = %if.then400, %if.end395
  %334 = load i64, ptr %real_bin, align 8, !dbg !5199
  %sub411 = sub i64 %334, 2, !dbg !5199
  %335 = inttoptr i64 %sub411 to ptr, !dbg !5199
  store ptr %335, ptr %ptr, align 8, !dbg !5200
  %336 = load ptr, ptr %ptr, align 8, !dbg !5201
  %337 = load i64, ptr %336, align 8, !dbg !5202
  store i64 %337, ptr %hdr, align 8, !dbg !5203
  %338 = load i64, ptr %hdr, align 8, !dbg !5204
  %and412 = and i64 %338, 3, !dbg !5204
  switch i64 %and412, label %sw.epilog422 [
    i64 0, label %sw.epilog422
    i64 1, label %sw.bb413
    i64 3, label %sw.bb416
    i64 2, label %sw.bb416
  ], !dbg !5205

sw.bb413:                                         ; preds = %if.end410
  %339 = load i64, ptr %hdr, align 8, !dbg !5206
  %sub414 = sub i64 %339, 1, !dbg !5208
  %add415 = add i64 %sub414, 0, !dbg !5209
  store i64 %add415, ptr %hdr, align 8, !dbg !5210
  br label %sw.epilog422, !dbg !5211

sw.bb416:                                         ; preds = %if.end410, %if.end410
  %340 = load i64, ptr %hdr, align 8, !dbg !5212
  %shr417 = lshr i64 %340, 2, !dbg !5213
  store i64 %shr417, ptr %e, align 8, !dbg !5214
  %start418 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !5215
  %341 = load ptr, ptr %start418, align 8, !dbg !5215
  %342 = load i64, ptr %e, align 8, !dbg !5215
  %arrayidx419 = getelementptr inbounds i64, ptr %341, i64 %342, !dbg !5215
  %343 = load i64, ptr %arrayidx419, align 8, !dbg !5215
  store i64 %343, ptr %hdr, align 8, !dbg !5216
  %344 = load i64, ptr %hdr, align 8, !dbg !5217
  %and420 = and i64 %344, -4, !dbg !5218
  %add421 = add i64 %and420, 0, !dbg !5219
  store i64 %add421, ptr %hdr, align 8, !dbg !5220
  br label %sw.epilog422, !dbg !5221

sw.epilog422:                                     ; preds = %if.end410, %sw.bb416, %sw.bb413, %if.end410
  %345 = load i64, ptr %hdr, align 8, !dbg !5222
  %and423 = and i64 %345, 60, !dbg !5222
  %cmp424 = icmp eq i64 %and423, 36, !dbg !5223
  br i1 %cmp424, label %if.then426, label %if.else444, !dbg !5224

if.then426:                                       ; preds = %sw.epilog422
  call void @llvm.lifetime.start.p0(i64 8, ptr %from) #8, !dbg !5225
  tail call void @llvm.dbg.declare(metadata ptr %from, metadata !4537, metadata !DIExpression()), !dbg !5226
  %346 = load ptr, ptr %ptr, align 8, !dbg !5227
  store ptr %346, ptr %from, align 8, !dbg !5226
  call void @llvm.lifetime.start.p0(i64 8, ptr %to) #8, !dbg !5228
  tail call void @llvm.dbg.declare(metadata ptr %to, metadata !4540, metadata !DIExpression()), !dbg !5229
  %347 = load ptr, ptr %hp, align 8, !dbg !5230
  store ptr %347, ptr %to, align 8, !dbg !5229
  %348 = load i64, ptr %real_size, align 8, !dbg !5231
  %add427 = add i64 %348, 8, !dbg !5231
  %sub428 = sub i64 %add427, 1, !dbg !5231
  %div429 = udiv i64 %sub428, 8, !dbg !5231
  %add430 = add i64 2, %div429, !dbg !5231
  %349 = load ptr, ptr %hp, align 8, !dbg !5232
  %add.ptr431 = getelementptr inbounds i64, ptr %349, i64 %add430, !dbg !5232
  store ptr %add.ptr431, ptr %hp, align 8, !dbg !5232
  %350 = load i64, ptr %real_size, align 8, !dbg !5233
  %add432 = add i64 %350, 8, !dbg !5233
  %sub433 = sub i64 %add432, 1, !dbg !5233
  %div434 = udiv i64 %sub433, 8, !dbg !5233
  %add435 = add i64 2, %div434, !dbg !5233
  %sub436 = sub i64 %add435, 1, !dbg !5233
  %shl = shl i64 %sub436, 6, !dbg !5233
  %add437 = add i64 %shl, 36, !dbg !5233
  %351 = load ptr, ptr %to, align 8, !dbg !5234
  %thing_word438 = getelementptr inbounds %struct.erl_heap_bin, ptr %351, i32 0, i32 0, !dbg !5235
  store i64 %add437, ptr %thing_word438, align 8, !dbg !5236
  %352 = load i64, ptr %real_size, align 8, !dbg !5237
  %353 = load ptr, ptr %to, align 8, !dbg !5238
  %size439 = getelementptr inbounds %struct.erl_heap_bin, ptr %353, i32 0, i32 1, !dbg !5239
  store i64 %352, ptr %size439, align 8, !dbg !5240
  %354 = load ptr, ptr %to, align 8, !dbg !5241
  %data = getelementptr inbounds %struct.erl_heap_bin, ptr %354, i32 0, i32 2, !dbg !5242
  %arraydecay = getelementptr inbounds [1 x i64], ptr %data, i64 0, i64 0, !dbg !5241
  %355 = load ptr, ptr %from, align 8, !dbg !5243
  %data440 = getelementptr inbounds %struct.erl_heap_bin, ptr %355, i32 0, i32 2, !dbg !5244
  %arraydecay441 = getelementptr inbounds [1 x i64], ptr %data440, i64 0, i64 0, !dbg !5243
  %356 = load i64, ptr %offset, align 8, !dbg !5245
  %add.ptr442 = getelementptr inbounds i8, ptr %arraydecay441, i64 %356, !dbg !5246
  %357 = load i64, ptr %real_size, align 8, !dbg !5247
  %call443 = call ptr @sys_memcpy(ptr noundef %arraydecay, ptr noundef %add.ptr442, i64 noundef %357), !dbg !5248
  call void @llvm.lifetime.end.p0(i64 8, ptr %to) #8, !dbg !5249
  call void @llvm.lifetime.end.p0(i64 8, ptr %from) #8, !dbg !5249
  br label %if.end472, !dbg !5250

if.else444:                                       ; preds = %sw.epilog422
  call void @llvm.lifetime.start.p0(i64 8, ptr %from445) #8, !dbg !5251
  tail call void @llvm.dbg.declare(metadata ptr %from445, metadata !4541, metadata !DIExpression()), !dbg !5252
  %358 = load ptr, ptr %ptr, align 8, !dbg !5253
  store ptr %358, ptr %from445, align 8, !dbg !5252
  call void @llvm.lifetime.start.p0(i64 8, ptr %to446) #8, !dbg !5254
  tail call void @llvm.dbg.declare(metadata ptr %to446, metadata !4543, metadata !DIExpression()), !dbg !5255
  %359 = load ptr, ptr %hp, align 8, !dbg !5256
  store ptr %359, ptr %to446, align 8, !dbg !5255
  %360 = load ptr, ptr %from445, align 8, !dbg !5257
  %flags447 = getelementptr inbounds %struct.proc_bin, ptr %360, i32 0, i32 5, !dbg !5259
  %361 = load i64, ptr %flags447, align 8, !dbg !5259
  %tobool448 = icmp ne i64 %361, 0, !dbg !5257
  br i1 %tobool448, label %if.then449, label %if.end450, !dbg !5260

if.then449:                                       ; preds = %if.else444
  %362 = load ptr, ptr %from445, align 8, !dbg !5261
  call void @erts_emasculate_writable_binary(ptr noundef %362), !dbg !5263
  br label %if.end450, !dbg !5264

if.end450:                                        ; preds = %if.then449, %if.else444
  %363 = load ptr, ptr %hp, align 8, !dbg !5265
  %add.ptr451 = getelementptr inbounds i64, ptr %363, i64 6, !dbg !5265
  store ptr %add.ptr451, ptr %hp, align 8, !dbg !5265
  %364 = load ptr, ptr %to446, align 8, !dbg !5266
  %thing_word452 = getelementptr inbounds %struct.proc_bin, ptr %364, i32 0, i32 0, !dbg !5267
  store i64 352, ptr %thing_word452, align 8, !dbg !5268
  %365 = load i64, ptr %real_size, align 8, !dbg !5269
  %366 = load ptr, ptr %to446, align 8, !dbg !5270
  %size453 = getelementptr inbounds %struct.proc_bin, ptr %366, i32 0, i32 1, !dbg !5271
  store i64 %365, ptr %size453, align 8, !dbg !5272
  %367 = load ptr, ptr %from445, align 8, !dbg !5273
  %val454 = getelementptr inbounds %struct.proc_bin, ptr %367, i32 0, i32 3, !dbg !5274
  %368 = load ptr, ptr %val454, align 8, !dbg !5274
  %369 = load ptr, ptr %to446, align 8, !dbg !5275
  %val455 = getelementptr inbounds %struct.proc_bin, ptr %369, i32 0, i32 3, !dbg !5276
  store ptr %368, ptr %val455, align 8, !dbg !5277
  %370 = load ptr, ptr %to446, align 8, !dbg !5278
  %val456 = getelementptr inbounds %struct.proc_bin, ptr %370, i32 0, i32 3, !dbg !5279
  %371 = load ptr, ptr %val456, align 8, !dbg !5279
  %intern457 = getelementptr inbounds %struct.binary, ptr %371, i32 0, i32 0, !dbg !5280
  %refc458 = getelementptr inbounds %struct.binary_internals, ptr %intern457, i32 0, i32 1, !dbg !5281
  call void @erts_refc_inc(ptr noundef %refc458, i64 noundef 2), !dbg !5282
  %372 = load ptr, ptr %from445, align 8, !dbg !5283
  %bytes = getelementptr inbounds %struct.proc_bin, ptr %372, i32 0, i32 4, !dbg !5284
  %373 = load ptr, ptr %bytes, align 8, !dbg !5284
  %374 = load i64, ptr %offset, align 8, !dbg !5285
  %add.ptr459 = getelementptr inbounds i8, ptr %373, i64 %374, !dbg !5286
  %375 = load ptr, ptr %to446, align 8, !dbg !5287
  %bytes460 = getelementptr inbounds %struct.proc_bin, ptr %375, i32 0, i32 4, !dbg !5288
  store ptr %add.ptr459, ptr %bytes460, align 8, !dbg !5289
  %376 = load ptr, ptr %off_heap.addr, align 8, !dbg !5290
  %first461 = getelementptr inbounds %struct.erl_off_heap, ptr %376, i32 0, i32 0, !dbg !5291
  %377 = load ptr, ptr %first461, align 8, !dbg !5291
  %378 = load ptr, ptr %to446, align 8, !dbg !5292
  %next462 = getelementptr inbounds %struct.proc_bin, ptr %378, i32 0, i32 2, !dbg !5293
  store ptr %377, ptr %next462, align 8, !dbg !5294
  %379 = load ptr, ptr %to446, align 8, !dbg !5295
  %flags463 = getelementptr inbounds %struct.proc_bin, ptr %379, i32 0, i32 5, !dbg !5296
  store i64 0, ptr %flags463, align 8, !dbg !5297
  %380 = load ptr, ptr %to446, align 8, !dbg !5298
  %381 = load ptr, ptr %off_heap.addr, align 8, !dbg !5299
  %first464 = getelementptr inbounds %struct.erl_off_heap, ptr %381, i32 0, i32 0, !dbg !5300
  store ptr %380, ptr %first464, align 8, !dbg !5301
  br label %do.body465, !dbg !5302

do.body465:                                       ; preds = %if.end450
  %382 = load ptr, ptr %to446, align 8, !dbg !5303
  %size466 = getelementptr inbounds %struct.proc_bin, ptr %382, i32 0, i32 1, !dbg !5303
  %383 = load i64, ptr %size466, align 8, !dbg !5303
  %div467 = udiv i64 %383, 8, !dbg !5303
  %384 = load ptr, ptr %off_heap.addr, align 8, !dbg !5303
  %overhead468 = getelementptr inbounds %struct.erl_off_heap, ptr %384, i32 0, i32 1, !dbg !5303
  %385 = load i64, ptr %overhead468, align 8, !dbg !5303
  %add469 = add i64 %385, %div467, !dbg !5303
  store i64 %add469, ptr %overhead468, align 8, !dbg !5303
  br label %do.cond470, !dbg !5303

do.cond470:                                       ; preds = %do.body465
  br label %do.end471, !dbg !5303

do.end471:                                        ; preds = %do.cond470
  call void @llvm.lifetime.end.p0(i64 8, ptr %to446) #8, !dbg !5305
  call void @llvm.lifetime.end.p0(i64 8, ptr %from445) #8, !dbg !5305
  br label %if.end472

if.end472:                                        ; preds = %do.end471, %if.then426
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %real_size) #8, !dbg !5306
  call void @llvm.lifetime.end.p0(i64 8, ptr %extra_bytes) #8, !dbg !5306
  call void @llvm.lifetime.end.p0(i64 8, ptr %size382) #8, !dbg !5306
  call void @llvm.lifetime.end.p0(i64 8, ptr %offset) #8, !dbg !5306
  call void @llvm.lifetime.end.p0(i64 8, ptr %bit_size) #8, !dbg !5306
  call void @llvm.lifetime.end.p0(i64 8, ptr %bit_offset) #8, !dbg !5306
  call void @llvm.lifetime.end.p0(i64 8, ptr %real_bin) #8, !dbg !5306
  call void @llvm.lifetime.end.p0(i64 8, ptr %sb) #8, !dbg !5306
  br label %cleanup545

sw.bb481:                                         ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  call void @llvm.lifetime.start.p0(i64 8, ptr %etp) #8, !dbg !5307
  tail call void @llvm.dbg.declare(metadata ptr %etp, metadata !4544, metadata !DIExpression()), !dbg !5308
  %386 = load ptr, ptr %ptr, align 8, !dbg !5309
  store ptr %386, ptr %etp, align 8, !dbg !5308
  %387 = load ptr, ptr %etp, align 8, !dbg !5310
  %node = getelementptr inbounds %struct.external_thing_, ptr %387, i32 0, i32 1, !dbg !5311
  %388 = load ptr, ptr %node, align 8, !dbg !5311
  %389 = load ptr, ptr %hp, align 8, !dbg !5312
  %390 = ptrtoint ptr %389 to i64, !dbg !5312
  %add482 = add i64 %390, 2, !dbg !5312
  %call483 = call i64 @erts_ref_node_entry(ptr noundef %388, i32 noundef 2, i64 noundef %add482), !dbg !5313
  call void @llvm.lifetime.end.p0(i64 8, ptr %etp) #8, !dbg !5314
  br label %off_heap_node_container_common, !dbg !5315

off_heap_node_container_common:                   ; preds = %if.then517, %sw.bb481
  tail call void @llvm.dbg.label(metadata !4546), !dbg !5316
  call void @llvm.lifetime.start.p0(i64 8, ptr %ohhp) #8, !dbg !5317
  tail call void @llvm.dbg.declare(metadata ptr %ohhp, metadata !4547, metadata !DIExpression()), !dbg !5318
  %391 = load ptr, ptr %hp, align 8, !dbg !5319
  store ptr %391, ptr %ohhp, align 8, !dbg !5320
  %392 = load i64, ptr %hdr, align 8, !dbg !5321
  %and484 = and i64 %392, 63, !dbg !5321
  %cmp485 = icmp eq i64 %and484, 60, !dbg !5321
  br i1 %cmp485, label %cond.true487, label %cond.false490, !dbg !5321

cond.true487:                                     ; preds = %off_heap_node_container_common
  %393 = load i64, ptr %hdr, align 8, !dbg !5321
  %shr488 = lshr i64 %393, 8, !dbg !5321
  %and489 = and i64 %shr488, 255, !dbg !5321
  br label %cond.end492, !dbg !5321

cond.false490:                                    ; preds = %off_heap_node_container_common
  %394 = load i64, ptr %hdr, align 8, !dbg !5321
  %shr491 = lshr i64 %394, 6, !dbg !5321
  br label %cond.end492, !dbg !5321

cond.end492:                                      ; preds = %cond.false490, %cond.true487
  %cond493 = phi i64 [ %and489, %cond.true487 ], [ %shr491, %cond.false490 ], !dbg !5321
  %conv494 = trunc i64 %cond493 to i32, !dbg !5321
  store i32 %conv494, ptr %sz, align 4, !dbg !5322
  %395 = load ptr, ptr %hp, align 8, !dbg !5323
  %396 = ptrtoint ptr %395 to i64, !dbg !5323
  %add495 = add i64 %396, 2, !dbg !5323
  %397 = load ptr, ptr %resp, align 8, !dbg !5324
  store i64 %add495, ptr %397, align 8, !dbg !5325
  %398 = load i64, ptr %hdr, align 8, !dbg !5326
  %399 = load ptr, ptr %hp, align 8, !dbg !5327
  %incdec.ptr496 = getelementptr inbounds i64, ptr %399, i32 1, !dbg !5327
  store ptr %incdec.ptr496, ptr %hp, align 8, !dbg !5327
  store i64 %398, ptr %399, align 8, !dbg !5328
  %400 = load ptr, ptr %ptr, align 8, !dbg !5329
  %incdec.ptr497 = getelementptr inbounds i64, ptr %400, i32 1, !dbg !5329
  store ptr %incdec.ptr497, ptr %ptr, align 8, !dbg !5329
  br label %while.cond498, !dbg !5330

while.cond498:                                    ; preds = %while.body502, %cond.end492
  %401 = load i32, ptr %sz, align 4, !dbg !5331
  %dec499 = add i32 %401, -1, !dbg !5331
  store i32 %dec499, ptr %sz, align 4, !dbg !5331
  %cmp500 = icmp ugt i32 %401, 0, !dbg !5332
  br i1 %cmp500, label %while.body502, label %while.end505, !dbg !5330

while.body502:                                    ; preds = %while.cond498
  %402 = load ptr, ptr %ptr, align 8, !dbg !5333
  %incdec.ptr503 = getelementptr inbounds i64, ptr %402, i32 1, !dbg !5333
  store ptr %incdec.ptr503, ptr %ptr, align 8, !dbg !5333
  %403 = load i64, ptr %402, align 8, !dbg !5335
  %404 = load ptr, ptr %hp, align 8, !dbg !5336
  %incdec.ptr504 = getelementptr inbounds i64, ptr %404, i32 1, !dbg !5336
  store ptr %incdec.ptr504, ptr %hp, align 8, !dbg !5336
  store i64 %403, ptr %404, align 8, !dbg !5337
  br label %while.cond498, !dbg !5330, !llvm.loop !5338

while.end505:                                     ; preds = %while.cond498
  %405 = load ptr, ptr %off_heap.addr, align 8, !dbg !5340
  %first506 = getelementptr inbounds %struct.erl_off_heap, ptr %405, i32 0, i32 0, !dbg !5341
  %406 = load ptr, ptr %first506, align 8, !dbg !5341
  %407 = load ptr, ptr %ohhp, align 8, !dbg !5342
  %next507 = getelementptr inbounds %struct.erl_off_heap_header, ptr %407, i32 0, i32 2, !dbg !5343
  store ptr %406, ptr %next507, align 8, !dbg !5344
  %408 = load ptr, ptr %ohhp, align 8, !dbg !5345
  %409 = load ptr, ptr %off_heap.addr, align 8, !dbg !5346
  %first508 = getelementptr inbounds %struct.erl_off_heap, ptr %409, i32 0, i32 0, !dbg !5347
  store ptr %408, ptr %first508, align 8, !dbg !5348
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %ohhp) #8, !dbg !5349
  br label %cleanup545

sw.bb510:                                         ; preds = %sw.epilog
  %410 = load i64, ptr %hdr, align 8, !dbg !5350
  %cmp511 = icmp eq i64 %410, 144, !dbg !5350
  %conv512 = zext i1 %cmp511 to i32, !dbg !5350
  %411 = load ptr, ptr %ptr, align 8, !dbg !5350
  %marker = getelementptr inbounds %struct.ErtsORefThing, ptr %411, i32 0, i32 1, !dbg !5350
  %412 = load i32, ptr %marker, align 8, !dbg !5350
  %cmp513 = icmp ne i32 %412, -1, !dbg !5350
  %conv514 = zext i1 %cmp513 to i32, !dbg !5350
  %and515 = and i32 %conv512, %conv514, !dbg !5350
  %tobool516 = icmp ne i32 %and515, 0, !dbg !5350
  br i1 %tobool516, label %if.then517, label %if.end521, !dbg !5351

if.then517:                                       ; preds = %sw.bb510
  call void @llvm.lifetime.start.p0(i64 8, ptr %mreft) #8, !dbg !5352
  tail call void @llvm.dbg.declare(metadata ptr %mreft, metadata !4549, metadata !DIExpression()), !dbg !5353
  %413 = load ptr, ptr %ptr, align 8, !dbg !5354
  store ptr %413, ptr %mreft, align 8, !dbg !5353
  %414 = load ptr, ptr %mreft, align 8, !dbg !5355
  %mb = getelementptr inbounds %struct.ErtsMRefThing, ptr %414, i32 0, i32 1, !dbg !5356
  %415 = load ptr, ptr %mb, align 8, !dbg !5356
  %intern518 = getelementptr inbounds %struct.magic_binary, ptr %415, i32 0, i32 0, !dbg !5357
  %refc519 = getelementptr inbounds %struct.binary_internals, ptr %intern518, i32 0, i32 1, !dbg !5358
  call void @erts_refc_inc(ptr noundef %refc519, i64 noundef 2), !dbg !5359
  store i32 38, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %mreft) #8, !dbg !5360
  br label %off_heap_node_container_common

if.end521:                                        ; preds = %sw.bb510
  br label %sw.default522, !dbg !5350

sw.default522:                                    ; preds = %sw.epilog, %if.end521
  %416 = load i64, ptr %hdr, align 8, !dbg !5361
  %and523 = and i64 %416, 63, !dbg !5361
  %cmp524 = icmp eq i64 %and523, 60, !dbg !5361
  br i1 %cmp524, label %cond.true526, label %cond.false529, !dbg !5361

cond.true526:                                     ; preds = %sw.default522
  %417 = load i64, ptr %hdr, align 8, !dbg !5361
  %shr527 = lshr i64 %417, 8, !dbg !5361
  %and528 = and i64 %shr527, 255, !dbg !5361
  br label %cond.end531, !dbg !5361

cond.false529:                                    ; preds = %sw.default522
  %418 = load i64, ptr %hdr, align 8, !dbg !5361
  %shr530 = lshr i64 %418, 6, !dbg !5361
  br label %cond.end531, !dbg !5361

cond.end531:                                      ; preds = %cond.false529, %cond.true526
  %cond532 = phi i64 [ %and528, %cond.true526 ], [ %shr530, %cond.false529 ], !dbg !5361
  %conv533 = trunc i64 %cond532 to i32, !dbg !5361
  store i32 %conv533, ptr %sz, align 4, !dbg !5362
  %419 = load ptr, ptr %hp, align 8, !dbg !5363
  %420 = ptrtoint ptr %419 to i64, !dbg !5363
  %add534 = add i64 %420, 2, !dbg !5363
  %421 = load ptr, ptr %resp, align 8, !dbg !5364
  store i64 %add534, ptr %421, align 8, !dbg !5365
  %422 = load i64, ptr %hdr, align 8, !dbg !5366
  %423 = load ptr, ptr %hp, align 8, !dbg !5367
  %incdec.ptr535 = getelementptr inbounds i64, ptr %423, i32 1, !dbg !5367
  store ptr %incdec.ptr535, ptr %hp, align 8, !dbg !5367
  store i64 %422, ptr %423, align 8, !dbg !5368
  %424 = load ptr, ptr %ptr, align 8, !dbg !5369
  %incdec.ptr536 = getelementptr inbounds i64, ptr %424, i32 1, !dbg !5369
  store ptr %incdec.ptr536, ptr %ptr, align 8, !dbg !5369
  br label %while.cond537, !dbg !5370

while.cond537:                                    ; preds = %while.body541, %cond.end531
  %425 = load i32, ptr %sz, align 4, !dbg !5371
  %dec538 = add i32 %425, -1, !dbg !5371
  store i32 %dec538, ptr %sz, align 4, !dbg !5371
  %cmp539 = icmp ugt i32 %425, 0, !dbg !5372
  br i1 %cmp539, label %while.body541, label %while.end544, !dbg !5370

while.body541:                                    ; preds = %while.cond537
  %426 = load ptr, ptr %ptr, align 8, !dbg !5373
  %incdec.ptr542 = getelementptr inbounds i64, ptr %426, i32 1, !dbg !5373
  store ptr %incdec.ptr542, ptr %ptr, align 8, !dbg !5373
  %427 = load i64, ptr %426, align 8, !dbg !5375
  %428 = load ptr, ptr %hp, align 8, !dbg !5376
  %incdec.ptr543 = getelementptr inbounds i64, ptr %428, i32 1, !dbg !5376
  store ptr %incdec.ptr543, ptr %hp, align 8, !dbg !5376
  store i64 %427, ptr %428, align 8, !dbg !5377
  br label %while.cond537, !dbg !5370, !llvm.loop !5378

while.end544:                                     ; preds = %while.cond537
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup545, !dbg !5380

cleanup545:                                       ; preds = %while.end544, %sw.bb141, %if.end137, %while.end505, %if.end472, %do.end377, %while.end338, %while.end299, %if.end259, %while.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr) #8, !dbg !5381
  %cleanup.dest547 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest547, label %cleanup685 [
    i32 5, label %cleanup_next
  ]

sw.bb546:                                         ; preds = %for.cond
  %429 = load i64, ptr %obj.addr, align 8, !dbg !5382
  %430 = load ptr, ptr %resp, align 8, !dbg !5383
  store i64 %429, ptr %430, align 8, !dbg !5384
  br label %cleanup_next, !dbg !5385

cleanup_next:                                     ; preds = %sw.bb546, %cleanup545, %cleanup
  tail call void @llvm.dbg.label(metadata !4552), !dbg !5386
  %back548 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 2, !dbg !5387
  %431 = load ptr, ptr %back548, align 8, !dbg !5387
  %front549 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 1, !dbg !5387
  %432 = load ptr, ptr %front549, align 8, !dbg !5387
  %cmp550 = icmp eq ptr %431, %432, !dbg !5387
  br i1 %cmp550, label %land.lhs.true552, label %if.end556, !dbg !5387

land.lhs.true552:                                 ; preds = %cleanup_next
  %possibly_empty553 = getelementptr inbounds %struct.ErtsEQueue, ptr %s, i32 0, i32 3, !dbg !5387
  %433 = load i32, ptr %possibly_empty553, align 8, !dbg !5387
  %tobool554 = icmp ne i32 %433, 0, !dbg !5387
  br i1 %tobool554, label %if.then555, label %if.end556, !dbg !5389

if.then555:                                       ; preds = %land.lhs.true552
  br label %all_clean, !dbg !5390

if.end556:                                        ; preds = %land.lhs.true552, %cleanup_next
  %call557 = call i64 @erts_equeue_get(ptr noundef %s), !dbg !5392
  store i64 %call557, ptr %obj.addr, align 8, !dbg !5393
  br label %for.cond558, !dbg !5394

for.cond558:                                      ; preds = %if.end655, %if.end556
  %434 = load i32, ptr %remaining, align 4, !dbg !5395
  %cmp559 = icmp eq i32 %434, 0, !dbg !5396
  br i1 %cmp559, label %if.then561, label %if.else645, !dbg !5397

if.then561:                                       ; preds = %for.cond558
  %435 = load ptr, ptr %hscan, align 8, !dbg !5398
  %436 = load i64, ptr %435, align 8, !dbg !5399
  %cmp562 = icmp eq i64 %436, 1, !dbg !5400
  br i1 %cmp562, label %if.then564, label %if.else566, !dbg !5401

if.then564:                                       ; preds = %if.then561
  %437 = load ptr, ptr %hscan, align 8, !dbg !5402
  store ptr %437, ptr %resp, align 8, !dbg !5404
  %438 = load ptr, ptr %hscan, align 8, !dbg !5405
  %add.ptr565 = getelementptr inbounds i64, ptr %438, i64 2, !dbg !5405
  store ptr %add.ptr565, ptr %hscan, align 8, !dbg !5405
  br label %for.end, !dbg !5406

if.else566:                                       ; preds = %if.then561
  %439 = load ptr, ptr %hscan, align 8, !dbg !5407
  %440 = load i64, ptr %439, align 8, !dbg !5407
  %and567 = and i64 %440, 3, !dbg !5407
  %cmp568 = icmp eq i64 %and567, 0, !dbg !5408
  br i1 %cmp568, label %if.then570, label %if.else641, !dbg !5409

if.then570:                                       ; preds = %if.else566
  %441 = load ptr, ptr %hscan, align 8, !dbg !5410
  %442 = load i64, ptr %441, align 8, !dbg !5411
  %and571 = and i64 %442, 63, !dbg !5412
  switch i64 %and571, label %sw.default627 [
    i64 0, label %sw.bb572
    i64 20, label %sw.bb585
    i64 60, label %sw.bb603
    i64 40, label %sw.bb625
  ], !dbg !5413

sw.bb572:                                         ; preds = %if.then570
  %443 = load ptr, ptr %hscan, align 8, !dbg !5414
  %444 = load i64, ptr %443, align 8, !dbg !5414
  %and573 = and i64 %444, 63, !dbg !5414
  %cmp574 = icmp eq i64 %and573, 60, !dbg !5414
  br i1 %cmp574, label %cond.true576, label %cond.false579, !dbg !5414

cond.true576:                                     ; preds = %sw.bb572
  %445 = load ptr, ptr %hscan, align 8, !dbg !5414
  %446 = load i64, ptr %445, align 8, !dbg !5414
  %shr577 = lshr i64 %446, 8, !dbg !5414
  %and578 = and i64 %shr577, 255, !dbg !5414
  br label %cond.end581, !dbg !5414

cond.false579:                                    ; preds = %sw.bb572
  %447 = load ptr, ptr %hscan, align 8, !dbg !5414
  %448 = load i64, ptr %447, align 8, !dbg !5414
  %shr580 = lshr i64 %448, 6, !dbg !5414
  br label %cond.end581, !dbg !5414

cond.end581:                                      ; preds = %cond.false579, %cond.true576
  %cond582 = phi i64 [ %and578, %cond.true576 ], [ %shr580, %cond.false579 ], !dbg !5414
  %conv583 = trunc i64 %cond582 to i32, !dbg !5414
  store i32 %conv583, ptr %remaining, align 4, !dbg !5415
  %449 = load ptr, ptr %hscan, align 8, !dbg !5416
  %incdec.ptr584 = getelementptr inbounds i64, ptr %449, i32 1, !dbg !5416
  store ptr %incdec.ptr584, ptr %hscan, align 8, !dbg !5416
  br label %sw.epilog640, !dbg !5417

sw.bb585:                                         ; preds = %if.then570
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp586) #8, !dbg !5418
  tail call void @llvm.dbg.declare(metadata ptr %funp586, metadata !4553, metadata !DIExpression()), !dbg !5419
  %450 = load ptr, ptr %hscan, align 8, !dbg !5420
  store ptr %450, ptr %funp586, align 8, !dbg !5419
  %451 = load ptr, ptr %hscan, align 8, !dbg !5421
  %452 = load i64, ptr %451, align 8, !dbg !5421
  %and587 = and i64 %452, 63, !dbg !5421
  %cmp588 = icmp eq i64 %and587, 60, !dbg !5421
  br i1 %cmp588, label %cond.true590, label %cond.false593, !dbg !5421

cond.true590:                                     ; preds = %sw.bb585
  %453 = load ptr, ptr %hscan, align 8, !dbg !5421
  %454 = load i64, ptr %453, align 8, !dbg !5421
  %shr591 = lshr i64 %454, 8, !dbg !5421
  %and592 = and i64 %shr591, 255, !dbg !5421
  br label %cond.end595, !dbg !5421

cond.false593:                                    ; preds = %sw.bb585
  %455 = load ptr, ptr %hscan, align 8, !dbg !5421
  %456 = load i64, ptr %455, align 8, !dbg !5421
  %shr594 = lshr i64 %456, 6, !dbg !5421
  br label %cond.end595, !dbg !5421

cond.end595:                                      ; preds = %cond.false593, %cond.true590
  %cond596 = phi i64 [ %and592, %cond.true590 ], [ %shr594, %cond.false593 ], !dbg !5421
  %add597 = add i64 1, %cond596, !dbg !5422
  %457 = load ptr, ptr %hscan, align 8, !dbg !5423
  %add.ptr598 = getelementptr inbounds i64, ptr %457, i64 %add597, !dbg !5423
  store ptr %add.ptr598, ptr %hscan, align 8, !dbg !5423
  %458 = load ptr, ptr %funp586, align 8, !dbg !5424
  %num_free599 = getelementptr inbounds %struct.erl_fun_thing, ptr %458, i32 0, i32 4, !dbg !5425
  %459 = load i8, ptr %num_free599, align 1, !dbg !5425
  %conv600 = zext i8 %459 to i32, !dbg !5424
  %add601 = add nsw i32 1, %conv600, !dbg !5426
  store i32 %add601, ptr %remaining, align 4, !dbg !5427
  store i32 46, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp586) #8, !dbg !5428
  br label %sw.epilog640

sw.bb603:                                         ; preds = %if.then570
  %460 = load ptr, ptr %hscan, align 8, !dbg !5429
  %461 = load i64, ptr %460, align 8, !dbg !5429
  %shr604 = lshr i64 %461, 6, !dbg !5429
  %and605 = and i64 %shr604, 3, !dbg !5429
  switch i64 %and605, label %sw.default621 [
    i64 0, label %sw.bb606
    i64 3, label %sw.bb613
    i64 2, label %sw.bb613
    i64 1, label %sw.bb613
  ], !dbg !5430

sw.bb606:                                         ; preds = %sw.bb603
  call void @llvm.lifetime.start.p0(i64 8, ptr %mp607) #8, !dbg !5431
  tail call void @llvm.dbg.declare(metadata ptr %mp607, metadata !4564, metadata !DIExpression()), !dbg !5432
  %462 = load ptr, ptr %hscan, align 8, !dbg !5433
  store ptr %462, ptr %mp607, align 8, !dbg !5432
  %463 = load ptr, ptr %mp607, align 8, !dbg !5434
  %size608 = getelementptr inbounds %struct.flatmap_s, ptr %463, i32 0, i32 1, !dbg !5434
  %464 = load i64, ptr %size608, align 8, !dbg !5434
  %add609 = add i64 %464, 1, !dbg !5435
  %conv610 = trunc i64 %add609 to i32, !dbg !5434
  store i32 %conv610, ptr %remaining, align 4, !dbg !5436
  %465 = load ptr, ptr %hscan, align 8, !dbg !5437
  %add.ptr611 = getelementptr inbounds i64, ptr %465, i64 2, !dbg !5437
  store ptr %add.ptr611, ptr %hscan, align 8, !dbg !5437
  store i32 47, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %mp607) #8, !dbg !5438
  br label %sw.epilog624

sw.bb613:                                         ; preds = %sw.bb603, %sw.bb603, %sw.bb603
  %466 = load ptr, ptr %hscan, align 8, !dbg !5439
  %467 = load i64, ptr %466, align 8, !dbg !5439
  %shr614 = lshr i64 %467, 16, !dbg !5439
  %and615 = and i64 %shr614, 65535, !dbg !5439
  %conv616 = trunc i64 %and615 to i32, !dbg !5439
  %468 = call i32 @llvm.ctpop.i32(i32 %conv616), !dbg !5439
  store i32 %468, ptr %remaining, align 4, !dbg !5440
  %469 = load ptr, ptr %hscan, align 8, !dbg !5441
  %470 = load i64, ptr %469, align 8, !dbg !5441
  %shr617 = lshr i64 %470, 8, !dbg !5441
  %and618 = and i64 %shr617, 255, !dbg !5441
  %add619 = add i64 %and618, 1, !dbg !5442
  %471 = load ptr, ptr %hscan, align 8, !dbg !5443
  %add.ptr620 = getelementptr inbounds i64, ptr %471, i64 %add619, !dbg !5443
  store ptr %add.ptr620, ptr %hscan, align 8, !dbg !5443
  br label %sw.epilog624, !dbg !5444

sw.default621:                                    ; preds = %sw.bb603
  %472 = load ptr, ptr %hscan, align 8, !dbg !5445
  %473 = load i64, ptr %472, align 8, !dbg !5445
  %shr622 = lshr i64 %473, 6, !dbg !5445
  %and623 = and i64 %shr622, 3, !dbg !5445
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.13, i64 noundef %and623) #9, !dbg !5446
  unreachable, !dbg !5446

sw.epilog624:                                     ; preds = %sw.bb613, %sw.bb606
  br label %sw.epilog640, !dbg !5447

sw.bb625:                                         ; preds = %if.then570
  %474 = load ptr, ptr %hscan, align 8, !dbg !5448
  %add.ptr626 = getelementptr inbounds i64, ptr %474, i64 5, !dbg !5448
  store ptr %add.ptr626, ptr %hscan, align 8, !dbg !5448
  br label %sw.epilog640, !dbg !5449

sw.default627:                                    ; preds = %if.then570
  %475 = load ptr, ptr %hscan, align 8, !dbg !5450
  %476 = load i64, ptr %475, align 8, !dbg !5450
  %and628 = and i64 %476, 63, !dbg !5450
  %cmp629 = icmp eq i64 %and628, 60, !dbg !5450
  br i1 %cmp629, label %cond.true631, label %cond.false634, !dbg !5450

cond.true631:                                     ; preds = %sw.default627
  %477 = load ptr, ptr %hscan, align 8, !dbg !5450
  %478 = load i64, ptr %477, align 8, !dbg !5450
  %shr632 = lshr i64 %478, 8, !dbg !5450
  %and633 = and i64 %shr632, 255, !dbg !5450
  br label %cond.end636, !dbg !5450

cond.false634:                                    ; preds = %sw.default627
  %479 = load ptr, ptr %hscan, align 8, !dbg !5450
  %480 = load i64, ptr %479, align 8, !dbg !5450
  %shr635 = lshr i64 %480, 6, !dbg !5450
  br label %cond.end636, !dbg !5450

cond.end636:                                      ; preds = %cond.false634, %cond.true631
  %cond637 = phi i64 [ %and633, %cond.true631 ], [ %shr635, %cond.false634 ], !dbg !5450
  %add638 = add i64 1, %cond637, !dbg !5451
  %481 = load ptr, ptr %hscan, align 8, !dbg !5452
  %add.ptr639 = getelementptr inbounds i64, ptr %481, i64 %add638, !dbg !5452
  store ptr %add.ptr639, ptr %hscan, align 8, !dbg !5452
  br label %sw.epilog640, !dbg !5453

sw.epilog640:                                     ; preds = %cond.end636, %sw.bb625, %sw.epilog624, %cond.end595, %cond.end581
  br label %if.end643, !dbg !5454

if.else641:                                       ; preds = %if.else566
  %482 = load ptr, ptr %hscan, align 8, !dbg !5455
  %incdec.ptr642 = getelementptr inbounds i64, ptr %482, i32 1, !dbg !5455
  store ptr %incdec.ptr642, ptr %hscan, align 8, !dbg !5455
  br label %if.end643

if.end643:                                        ; preds = %if.else641, %sw.epilog640
  br label %if.end644

if.end644:                                        ; preds = %if.end643
  br label %if.end655, !dbg !5457

if.else645:                                       ; preds = %for.cond558
  %483 = load ptr, ptr %hscan, align 8, !dbg !5458
  %484 = load i64, ptr %483, align 8, !dbg !5460
  %cmp646 = icmp eq i64 %484, 1, !dbg !5461
  br i1 %cmp646, label %if.then648, label %if.else651, !dbg !5462

if.then648:                                       ; preds = %if.else645
  %485 = load ptr, ptr %hscan, align 8, !dbg !5463
  %incdec.ptr649 = getelementptr inbounds i64, ptr %485, i32 1, !dbg !5463
  store ptr %incdec.ptr649, ptr %hscan, align 8, !dbg !5463
  store ptr %485, ptr %resp, align 8, !dbg !5465
  %486 = load i32, ptr %remaining, align 4, !dbg !5466
  %dec650 = add i32 %486, -1, !dbg !5466
  store i32 %dec650, ptr %remaining, align 4, !dbg !5466
  br label %for.end, !dbg !5467

if.else651:                                       ; preds = %if.else645
  %487 = load ptr, ptr %hscan, align 8, !dbg !5468
  %incdec.ptr652 = getelementptr inbounds i64, ptr %487, i32 1, !dbg !5468
  store ptr %incdec.ptr652, ptr %hscan, align 8, !dbg !5468
  %488 = load i32, ptr %remaining, align 4, !dbg !5470
  %dec653 = add i32 %488, -1, !dbg !5470
  store i32 %dec653, ptr %remaining, align 4, !dbg !5470
  br label %if.end654

if.end654:                                        ; preds = %if.else651
  br label %if.end655

if.end655:                                        ; preds = %if.end654, %if.end644
  br label %for.cond558, !dbg !5471, !llvm.loop !5472

for.end:                                          ; preds = %if.then648, %if.then564
  br label %sw.epilog657, !dbg !5475

sw.default656:                                    ; preds = %for.cond
  %489 = load i64, ptr %obj.addr, align 8, !dbg !5476
  call void (i32, ptr, ...) @erts_exit(i32 noundef -2, ptr noundef @.str.5, i64 noundef %489) #9, !dbg !5477
  unreachable, !dbg !5477

sw.epilog657:                                     ; preds = %for.end, %cleanup
  br label %for.cond, !dbg !5478, !llvm.loop !5479

all_clean:                                        ; preds = %if.then555
  tail call void @llvm.dbg.label(metadata !4567), !dbg !5482
  store i64 0, ptr %e, align 8, !dbg !5483
  br label %for.cond658, !dbg !5485

for.cond658:                                      ; preds = %for.inc, %all_clean
  %start659 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !5486
  %490 = load ptr, ptr %start659, align 8, !dbg !5486
  %491 = load i64, ptr %e, align 8, !dbg !5486
  %add660 = add i64 %491, 3, !dbg !5486
  %arrayidx661 = getelementptr inbounds i64, ptr %490, i64 %add660, !dbg !5486
  %492 = load i64, ptr %arrayidx661, align 8, !dbg !5486
  %493 = inttoptr i64 %492 to ptr, !dbg !5486
  store ptr %493, ptr %ptr, align 8, !dbg !5489
  %494 = load ptr, ptr %ptr, align 8, !dbg !5490
  %cmp662 = icmp eq ptr %494, null, !dbg !5492
  br i1 %cmp662, label %if.then664, label %if.end665, !dbg !5493

if.then664:                                       ; preds = %for.cond658
  br label %for.end684, !dbg !5494

if.end665:                                        ; preds = %for.cond658
  %start666 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !5495
  %495 = load ptr, ptr %start666, align 8, !dbg !5495
  %496 = load i64, ptr %e, align 8, !dbg !5495
  %add667 = add i64 %496, 1, !dbg !5495
  %arrayidx668 = getelementptr inbounds i64, ptr %495, i64 %add667, !dbg !5495
  %497 = load i64, ptr %arrayidx668, align 8, !dbg !5495
  %cmp669 = icmp ne i64 %497, 0, !dbg !5497
  br i1 %cmp669, label %if.then671, label %if.else679, !dbg !5498

if.then671:                                       ; preds = %if.end665
  %start672 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !5499
  %498 = load ptr, ptr %start672, align 8, !dbg !5499
  %499 = load i64, ptr %e, align 8, !dbg !5499
  %arrayidx673 = getelementptr inbounds i64, ptr %498, i64 %499, !dbg !5499
  %500 = load i64, ptr %arrayidx673, align 8, !dbg !5499
  %501 = load ptr, ptr %ptr, align 8, !dbg !5501
  %arrayidx674 = getelementptr inbounds i64, ptr %501, i64 0, !dbg !5501
  store i64 %500, ptr %arrayidx674, align 8, !dbg !5502
  %start675 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !5503
  %502 = load ptr, ptr %start675, align 8, !dbg !5503
  %503 = load i64, ptr %e, align 8, !dbg !5503
  %add676 = add i64 %503, 1, !dbg !5503
  %arrayidx677 = getelementptr inbounds i64, ptr %502, i64 %add676, !dbg !5503
  %504 = load i64, ptr %arrayidx677, align 8, !dbg !5503
  %505 = load ptr, ptr %ptr, align 8, !dbg !5504
  %arrayidx678 = getelementptr inbounds i64, ptr %505, i64 1, !dbg !5504
  store i64 %504, ptr %arrayidx678, align 8, !dbg !5505
  br label %if.end682, !dbg !5506

if.else679:                                       ; preds = %if.end665
  %start680 = getelementptr inbounds %struct.ErtsEStack_, ptr %t, i32 0, i32 0, !dbg !5507
  %506 = load ptr, ptr %start680, align 8, !dbg !5507
  %507 = load i64, ptr %e, align 8, !dbg !5507
  %arrayidx681 = getelementptr inbounds i64, ptr %506, i64 %507, !dbg !5507
  %508 = load i64, ptr %arrayidx681, align 8, !dbg !5507
  %509 = load ptr, ptr %ptr, align 8, !dbg !5509
  store i64 %508, ptr %509, align 8, !dbg !5510
  br label %if.end682

if.end682:                                        ; preds = %if.else679, %if.then671
  br label %for.inc, !dbg !5511

for.inc:                                          ; preds = %if.end682
  %510 = load i64, ptr %e, align 8, !dbg !5512
  %add683 = add i64 %510, 4, !dbg !5512
  store i64 %add683, ptr %e, align 8, !dbg !5512
  br label %for.cond658, !dbg !5513, !llvm.loop !5514

for.end684:                                       ; preds = %if.then664
  %511 = load ptr, ptr %hend, align 8, !dbg !5517
  %512 = load ptr, ptr %hpp.addr, align 8, !dbg !5518
  store ptr %511, ptr %512, align 8, !dbg !5519
  %513 = load i64, ptr %result, align 8, !dbg !5520
  store i64 %513, ptr %retval, align 8, !dbg !5521
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup685, !dbg !5521

cleanup685:                                       ; preds = %for.end684, %cleanup545, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 40, ptr %t) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_buffer) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 4, ptr %b_offset) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 4, ptr %b_bitoffs) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 40, ptr %b) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 48, ptr %s) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_tuple_literal) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 4, ptr %copy_literals) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_sz) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %lit_purge_ptr) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 4, ptr %remaining) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %hend) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %hbot) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %resp) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %hscan) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 4, ptr %sz) #8, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %e) #8, !dbg !5522
  %514 = load i64, ptr %retval, align 8, !dbg !5522
  ret i64 %514, !dbg !5522
}

; Function Attrs: nounwind uwtable
define dso_local i64 @copy_shallow_obj_x(i64 noundef %obj, i64 noundef %sz, ptr noundef %hpp, ptr noundef %off_heap) #0 !dbg !5523 {
entry:
  %retval = alloca i64, align 8
  %obj.addr = alloca i64, align 8
  %sz.addr = alloca i64, align 8
  %hpp.addr = alloca ptr, align 8
  %off_heap.addr = alloca ptr, align 8
  %source_ptr = alloca ptr, align 8
  %target_ptr = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %obj, ptr %obj.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !5527, metadata !DIExpression()), !dbg !5533
  store i64 %sz, ptr %sz.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sz.addr, metadata !5528, metadata !DIExpression()), !dbg !5534
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !5529, metadata !DIExpression()), !dbg !5535
  store ptr %off_heap, ptr %off_heap.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %off_heap.addr, metadata !5530, metadata !DIExpression()), !dbg !5536
  call void @llvm.lifetime.start.p0(i64 8, ptr %source_ptr) #8, !dbg !5537
  tail call void @llvm.dbg.declare(metadata ptr %source_ptr, metadata !5531, metadata !DIExpression()), !dbg !5538
  call void @llvm.lifetime.start.p0(i64 8, ptr %target_ptr) #8, !dbg !5539
  tail call void @llvm.dbg.declare(metadata ptr %target_ptr, metadata !5532, metadata !DIExpression()), !dbg !5540
  %0 = load i64, ptr %sz.addr, align 8, !dbg !5541
  %cmp = icmp eq i64 %0, 0, !dbg !5543
  br i1 %cmp, label %if.then, label %if.end, !dbg !5544

if.then:                                          ; preds = %entry
  %1 = load i64, ptr %obj.addr, align 8, !dbg !5545
  store i64 %1, ptr %retval, align 8, !dbg !5547
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5547

if.end:                                           ; preds = %entry
  %2 = load i64, ptr %obj.addr, align 8, !dbg !5548
  %and = and i64 %2, -8, !dbg !5548
  %3 = inttoptr i64 %and to ptr, !dbg !5548
  store ptr %3, ptr %source_ptr, align 8, !dbg !5549
  %4 = load ptr, ptr %source_ptr, align 8, !dbg !5550
  %5 = load i64, ptr %sz.addr, align 8, !dbg !5551
  %6 = load ptr, ptr %hpp.addr, align 8, !dbg !5552
  %7 = load ptr, ptr %off_heap.addr, align 8, !dbg !5553
  %call = call ptr @copy_shallow_x(ptr noundef %4, i64 noundef %5, ptr noundef %6, ptr noundef %7), !dbg !5554
  store ptr %call, ptr %target_ptr, align 8, !dbg !5555
  %8 = load i64, ptr %obj.addr, align 8, !dbg !5556
  %and1 = and i64 %8, 1, !dbg !5556
  %tobool = icmp ne i64 %and1, 0, !dbg !5556
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5556

cond.true:                                        ; preds = %if.end
  %9 = load ptr, ptr %target_ptr, align 8, !dbg !5557
  %10 = ptrtoint ptr %9 to i64, !dbg !5557
  %add = add i64 %10, 2, !dbg !5557
  br label %cond.end, !dbg !5556

cond.false:                                       ; preds = %if.end
  %11 = load ptr, ptr %target_ptr, align 8, !dbg !5558
  %12 = ptrtoint ptr %11 to i64, !dbg !5558
  %add2 = add i64 %12, 1, !dbg !5558
  br label %cond.end, !dbg !5556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %add2, %cond.false ], !dbg !5556
  store i64 %cond, ptr %retval, align 8, !dbg !5559
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5559

cleanup:                                          ; preds = %cond.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %target_ptr) #8, !dbg !5560
  call void @llvm.lifetime.end.p0(i64 8, ptr %source_ptr) #8, !dbg !5560
  %13 = load i64, ptr %retval, align 8, !dbg !5560
  ret i64 %13, !dbg !5560
}

; Function Attrs: nounwind uwtable
define dso_local ptr @copy_shallow_x(ptr noalias noundef %ptr, i64 noundef %sz, ptr noundef %hpp, ptr noundef %off_heap) #0 !dbg !5561 {
entry:
  %ptr.addr = alloca ptr, align 8
  %sz.addr = alloca i64, align 8
  %hpp.addr = alloca ptr, align 8
  %off_heap.addr = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %hp = alloca ptr, align 8
  %res = alloca ptr, align 8
  %offs = alloca i64, align 8
  %empty_tuple_literal = alloca i64, align 8
  %val = alloca i64, align 8
  %pb = alloca ptr, align 8
  %funp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %etp = alloca ptr, align 8
  %ohh = alloca ptr, align 8
  %tari = alloca i32, align 4
  %rtp = alloca ptr, align 8
  %mreft = alloca ptr, align 8
  %tari50 = alloca i32, align 4
  store ptr %ptr, ptr %ptr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5565, metadata !DIExpression()), !dbg !5597
  store i64 %sz, ptr %sz.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sz.addr, metadata !5566, metadata !DIExpression()), !dbg !5598
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !5567, metadata !DIExpression()), !dbg !5599
  store ptr %off_heap, ptr %off_heap.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %off_heap.addr, metadata !5568, metadata !DIExpression()), !dbg !5600
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #8, !dbg !5601
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !5569, metadata !DIExpression()), !dbg !5602
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !5603
  store ptr %0, ptr %tp, align 8, !dbg !5602
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp) #8, !dbg !5604
  tail call void @llvm.dbg.declare(metadata ptr %hp, metadata !5570, metadata !DIExpression()), !dbg !5605
  %1 = load ptr, ptr %hpp.addr, align 8, !dbg !5606
  %2 = load ptr, ptr %1, align 8, !dbg !5607
  store ptr %2, ptr %hp, align 8, !dbg !5605
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #8, !dbg !5608
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !5571, metadata !DIExpression()), !dbg !5609
  %3 = load ptr, ptr %hp, align 8, !dbg !5610
  store ptr %3, ptr %res, align 8, !dbg !5609
  call void @llvm.lifetime.start.p0(i64 8, ptr %offs) #8, !dbg !5611
  tail call void @llvm.dbg.declare(metadata ptr %offs, metadata !5572, metadata !DIExpression()), !dbg !5612
  %4 = load ptr, ptr %hp, align 8, !dbg !5613
  %5 = load ptr, ptr %tp, align 8, !dbg !5614
  %sub.ptr.lhs.cast = ptrtoint ptr %4 to i64, !dbg !5615
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i64, !dbg !5615
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5615
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !5615
  %mul = mul i64 %sub.ptr.div, 8, !dbg !5616
  store i64 %mul, ptr %offs, align 8, !dbg !5612
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_tuple_literal) #8, !dbg !5617
  tail call void @llvm.dbg.declare(metadata ptr %empty_tuple_literal, metadata !5574, metadata !DIExpression()), !dbg !5618
  %6 = load i64, ptr @ERTS_GLOBAL_LIT_EMPTY_TUPLE, align 8, !dbg !5619
  store i64 %6, ptr %empty_tuple_literal, align 8, !dbg !5618
  br label %while.cond, !dbg !5620

while.cond:                                       ; preds = %sw.epilog71, %entry
  %7 = load i64, ptr %sz.addr, align 8, !dbg !5621
  %dec = add i64 %7, -1, !dbg !5621
  store i64 %dec, ptr %sz.addr, align 8, !dbg !5621
  %tobool = icmp ne i64 %7, 0, !dbg !5620
  br i1 %tobool, label %while.body, label %while.end72, !dbg !5620

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %val) #8, !dbg !5622
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !5575, metadata !DIExpression()), !dbg !5623
  %8 = load ptr, ptr %tp, align 8, !dbg !5624
  %incdec.ptr = getelementptr inbounds i64, ptr %8, i32 1, !dbg !5624
  store ptr %incdec.ptr, ptr %tp, align 8, !dbg !5624
  %9 = load i64, ptr %8, align 8, !dbg !5625
  store i64 %9, ptr %val, align 8, !dbg !5623
  %10 = load i64, ptr %val, align 8, !dbg !5626
  %and = and i64 %10, 3, !dbg !5626
  switch i64 %and, label %sw.epilog71 [
    i64 3, label %sw.bb
    i64 1, label %sw.bb2
    i64 2, label %sw.bb2
    i64 0, label %sw.bb5
  ], !dbg !5627

sw.bb:                                            ; preds = %while.body
  %11 = load i64, ptr %val, align 8, !dbg !5628
  %12 = load ptr, ptr %hp, align 8, !dbg !5629
  %incdec.ptr1 = getelementptr inbounds i64, ptr %12, i32 1, !dbg !5629
  store ptr %incdec.ptr1, ptr %hp, align 8, !dbg !5629
  store i64 %11, ptr %12, align 8, !dbg !5630
  br label %sw.epilog71, !dbg !5631

sw.bb2:                                           ; preds = %while.body, %while.body
  %13 = load i64, ptr %val, align 8, !dbg !5632
  %14 = load i64, ptr %empty_tuple_literal, align 8, !dbg !5634
  %cmp = icmp eq i64 %13, %14, !dbg !5635
  br i1 %cmp, label %if.then, label %if.else, !dbg !5636

if.then:                                          ; preds = %sw.bb2
  %15 = load i64, ptr %empty_tuple_literal, align 8, !dbg !5637
  %16 = load ptr, ptr %hp, align 8, !dbg !5639
  %incdec.ptr3 = getelementptr inbounds i64, ptr %16, i32 1, !dbg !5639
  store ptr %incdec.ptr3, ptr %hp, align 8, !dbg !5639
  store i64 %15, ptr %16, align 8, !dbg !5640
  br label %if.end, !dbg !5641

if.else:                                          ; preds = %sw.bb2
  %17 = load i64, ptr %val, align 8, !dbg !5642
  %18 = load i64, ptr %offs, align 8, !dbg !5642
  %add = add i64 %17, %18, !dbg !5642
  %19 = load ptr, ptr %hp, align 8, !dbg !5644
  %incdec.ptr4 = getelementptr inbounds i64, ptr %19, i32 1, !dbg !5644
  store ptr %incdec.ptr4, ptr %hp, align 8, !dbg !5644
  store i64 %add, ptr %19, align 8, !dbg !5645
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog71, !dbg !5646

sw.bb5:                                           ; preds = %while.body
  %20 = load i64, ptr %val, align 8, !dbg !5647
  %21 = load ptr, ptr %hp, align 8, !dbg !5648
  %incdec.ptr6 = getelementptr inbounds i64, ptr %21, i32 1, !dbg !5648
  store ptr %incdec.ptr6, ptr %hp, align 8, !dbg !5648
  store i64 %20, ptr %21, align 8, !dbg !5649
  %22 = load i64, ptr %val, align 8, !dbg !5650
  %and7 = and i64 %22, 60, !dbg !5651
  switch i64 %and7, label %sw.default [
    i64 0, label %sw.epilog
    i64 32, label %sw.bb8
    i64 20, label %sw.bb11
    i64 48, label %sw.bb18
    i64 52, label %sw.bb18
    i64 56, label %sw.bb18
    i64 16, label %sw.bb35
  ], !dbg !5652

sw.bb8:                                           ; preds = %sw.bb5
  call void @llvm.lifetime.start.p0(i64 8, ptr %pb) #8, !dbg !5653
  tail call void @llvm.dbg.declare(metadata ptr %pb, metadata !5577, metadata !DIExpression()), !dbg !5654
  %23 = load ptr, ptr %tp, align 8, !dbg !5655
  %add.ptr = getelementptr inbounds i64, ptr %23, i64 -1, !dbg !5656
  store ptr %add.ptr, ptr %pb, align 8, !dbg !5654
  %24 = load ptr, ptr %pb, align 8, !dbg !5657
  %val9 = getelementptr inbounds %struct.proc_bin, ptr %24, i32 0, i32 3, !dbg !5658
  %25 = load ptr, ptr %val9, align 8, !dbg !5658
  %intern = getelementptr inbounds %struct.binary, ptr %25, i32 0, i32 0, !dbg !5659
  %refc = getelementptr inbounds %struct.binary_internals, ptr %intern, i32 0, i32 1, !dbg !5660
  call void @erts_refc_inc(ptr noundef %refc, i64 noundef 2), !dbg !5661
  br label %do.body, !dbg !5662

do.body:                                          ; preds = %sw.bb8
  %26 = load ptr, ptr %pb, align 8, !dbg !5663
  %size = getelementptr inbounds %struct.proc_bin, ptr %26, i32 0, i32 1, !dbg !5663
  %27 = load i64, ptr %size, align 8, !dbg !5663
  %div = udiv i64 %27, 8, !dbg !5663
  %28 = load ptr, ptr %off_heap.addr, align 8, !dbg !5663
  %overhead = getelementptr inbounds %struct.erl_off_heap, ptr %28, i32 0, i32 1, !dbg !5663
  %29 = load i64, ptr %overhead, align 8, !dbg !5663
  %add10 = add i64 %29, %div, !dbg !5663
  store i64 %add10, ptr %overhead, align 8, !dbg !5663
  br label %do.cond, !dbg !5663

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5663

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %pb) #8, !dbg !5665
  br label %off_heap_common, !dbg !5666

sw.bb11:                                          ; preds = %sw.bb5
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp) #8, !dbg !5667
  tail call void @llvm.dbg.declare(metadata ptr %funp, metadata !5581, metadata !DIExpression()), !dbg !5668
  %30 = load ptr, ptr %tp, align 8, !dbg !5669
  %add.ptr12 = getelementptr inbounds i64, ptr %30, i64 -1, !dbg !5670
  store ptr %add.ptr12, ptr %funp, align 8, !dbg !5668
  %31 = load ptr, ptr %funp, align 8, !dbg !5671
  %creator = getelementptr inbounds %struct.erl_fun_thing, ptr %31, i32 0, i32 5, !dbg !5671
  %32 = load i64, ptr %creator, align 8, !dbg !5671
  %cmp13 = icmp ne i64 %32, 16715, !dbg !5671
  br i1 %cmp13, label %if.then14, label %if.else17, !dbg !5673

if.then14:                                        ; preds = %sw.bb11
  %33 = load ptr, ptr %funp, align 8, !dbg !5674
  %entry15 = getelementptr inbounds %struct.erl_fun_thing, ptr %33, i32 0, i32 1, !dbg !5676
  %34 = load ptr, ptr %entry15, align 8, !dbg !5677
  %refc16 = getelementptr inbounds %struct.erl_fun_entry, ptr %34, i32 0, i32 7, !dbg !5678
  call void @erts_refc_inc(ptr noundef %refc16, i64 noundef 2), !dbg !5679
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5680

if.else17:                                        ; preds = %sw.bb11
  store i32 9, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5681

cleanup:                                          ; preds = %if.else17, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp) #8, !dbg !5683
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 8, label %off_heap_common
    i32 9, label %default_copy
  ]

sw.bb18:                                          ; preds = %sw.bb5, %sw.bb5, %sw.bb5
  call void @llvm.lifetime.start.p0(i64 8, ptr %etp) #8, !dbg !5684
  tail call void @llvm.dbg.declare(metadata ptr %etp, metadata !5583, metadata !DIExpression()), !dbg !5685
  %35 = load ptr, ptr %tp, align 8, !dbg !5686
  %add.ptr19 = getelementptr inbounds i64, ptr %35, i64 -1, !dbg !5687
  store ptr %add.ptr19, ptr %etp, align 8, !dbg !5685
  %36 = load ptr, ptr %etp, align 8, !dbg !5688
  %node = getelementptr inbounds %struct.external_thing_, ptr %36, i32 0, i32 1, !dbg !5689
  %37 = load ptr, ptr %node, align 8, !dbg !5689
  %38 = load ptr, ptr %hp, align 8, !dbg !5690
  %add.ptr20 = getelementptr inbounds i64, ptr %38, i64 -1, !dbg !5690
  %39 = ptrtoint ptr %add.ptr20 to i64, !dbg !5690
  %add21 = add i64 %39, 2, !dbg !5690
  %call = call i64 @erts_ref_node_entry(ptr noundef %37, i32 noundef 2, i64 noundef %add21), !dbg !5691
  call void @llvm.lifetime.end.p0(i64 8, ptr %etp) #8, !dbg !5692
  br label %off_heap_common, !dbg !5693

off_heap_common:                                  ; preds = %cleanup48, %sw.bb18, %cleanup, %do.end
  tail call void @llvm.dbg.label(metadata !5585), !dbg !5694
  call void @llvm.lifetime.start.p0(i64 8, ptr %ohh) #8, !dbg !5695
  tail call void @llvm.dbg.declare(metadata ptr %ohh, metadata !5586, metadata !DIExpression()), !dbg !5696
  %40 = load ptr, ptr %hp, align 8, !dbg !5697
  %add.ptr22 = getelementptr inbounds i64, ptr %40, i64 -1, !dbg !5698
  store ptr %add.ptr22, ptr %ohh, align 8, !dbg !5696
  call void @llvm.lifetime.start.p0(i64 4, ptr %tari) #8, !dbg !5699
  tail call void @llvm.dbg.declare(metadata ptr %tari, metadata !5588, metadata !DIExpression()), !dbg !5700
  %41 = load i64, ptr %val, align 8, !dbg !5701
  %and23 = and i64 %41, 63, !dbg !5701
  %cmp24 = icmp eq i64 %and23, 60, !dbg !5701
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !5701

cond.true:                                        ; preds = %off_heap_common
  %42 = load i64, ptr %val, align 8, !dbg !5701
  %shr = lshr i64 %42, 8, !dbg !5701
  %and25 = and i64 %shr, 255, !dbg !5701
  br label %cond.end, !dbg !5701

cond.false:                                       ; preds = %off_heap_common
  %43 = load i64, ptr %val, align 8, !dbg !5701
  %shr26 = lshr i64 %43, 6, !dbg !5701
  br label %cond.end, !dbg !5701

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %and25, %cond.true ], [ %shr26, %cond.false ], !dbg !5701
  %conv = trunc i64 %cond to i32, !dbg !5701
  store i32 %conv, ptr %tari, align 4, !dbg !5700
  %44 = load i32, ptr %tari, align 4, !dbg !5702
  %conv27 = sext i32 %44 to i64, !dbg !5702
  %45 = load i64, ptr %sz.addr, align 8, !dbg !5703
  %sub = sub i64 %45, %conv27, !dbg !5703
  store i64 %sub, ptr %sz.addr, align 8, !dbg !5703
  br label %while.cond28, !dbg !5704

while.cond28:                                     ; preds = %while.body31, %cond.end
  %46 = load i32, ptr %tari, align 4, !dbg !5705
  %dec29 = add nsw i32 %46, -1, !dbg !5705
  store i32 %dec29, ptr %tari, align 4, !dbg !5705
  %tobool30 = icmp ne i32 %46, 0, !dbg !5704
  br i1 %tobool30, label %while.body31, label %while.end, !dbg !5704

while.body31:                                     ; preds = %while.cond28
  %47 = load ptr, ptr %tp, align 8, !dbg !5706
  %incdec.ptr32 = getelementptr inbounds i64, ptr %47, i32 1, !dbg !5706
  store ptr %incdec.ptr32, ptr %tp, align 8, !dbg !5706
  %48 = load i64, ptr %47, align 8, !dbg !5708
  %49 = load ptr, ptr %hp, align 8, !dbg !5709
  %incdec.ptr33 = getelementptr inbounds i64, ptr %49, i32 1, !dbg !5709
  store ptr %incdec.ptr33, ptr %hp, align 8, !dbg !5709
  store i64 %48, ptr %49, align 8, !dbg !5710
  br label %while.cond28, !dbg !5704, !llvm.loop !5711

while.end:                                        ; preds = %while.cond28
  %50 = load ptr, ptr %off_heap.addr, align 8, !dbg !5713
  %first = getelementptr inbounds %struct.erl_off_heap, ptr %50, i32 0, i32 0, !dbg !5714
  %51 = load ptr, ptr %first, align 8, !dbg !5714
  %52 = load ptr, ptr %ohh, align 8, !dbg !5715
  %next = getelementptr inbounds %struct.erl_off_heap_header, ptr %52, i32 0, i32 2, !dbg !5716
  store ptr %51, ptr %next, align 8, !dbg !5717
  %53 = load ptr, ptr %ohh, align 8, !dbg !5718
  %54 = load ptr, ptr %off_heap.addr, align 8, !dbg !5719
  %first34 = getelementptr inbounds %struct.erl_off_heap, ptr %54, i32 0, i32 0, !dbg !5720
  store ptr %53, ptr %first34, align 8, !dbg !5721
  call void @llvm.lifetime.end.p0(i64 4, ptr %tari) #8, !dbg !5722
  call void @llvm.lifetime.end.p0(i64 8, ptr %ohh) #8, !dbg !5722
  br label %sw.epilog, !dbg !5723

sw.bb35:                                          ; preds = %sw.bb5
  call void @llvm.lifetime.start.p0(i64 8, ptr %rtp) #8, !dbg !5724
  tail call void @llvm.dbg.declare(metadata ptr %rtp, metadata !5589, metadata !DIExpression()), !dbg !5725
  %55 = load ptr, ptr %tp, align 8, !dbg !5726
  %add.ptr36 = getelementptr inbounds i64, ptr %55, i64 -1, !dbg !5727
  store ptr %add.ptr36, ptr %rtp, align 8, !dbg !5725
  %56 = load ptr, ptr %rtp, align 8, !dbg !5728
  %57 = load i64, ptr %56, align 8, !dbg !5728
  %cmp37 = icmp eq i64 %57, 144, !dbg !5728
  %conv38 = zext i1 %cmp37 to i32, !dbg !5728
  %58 = load ptr, ptr %rtp, align 8, !dbg !5728
  %marker = getelementptr inbounds %struct.ErtsORefThing, ptr %58, i32 0, i32 1, !dbg !5728
  %59 = load i32, ptr %marker, align 8, !dbg !5728
  %cmp39 = icmp ne i32 %59, -1, !dbg !5728
  %conv40 = zext i1 %cmp39 to i32, !dbg !5728
  %and41 = and i32 %conv38, %conv40, !dbg !5728
  %tobool42 = icmp ne i32 %and41, 0, !dbg !5728
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !5729

if.then43:                                        ; preds = %sw.bb35
  call void @llvm.lifetime.start.p0(i64 8, ptr %mreft) #8, !dbg !5730
  tail call void @llvm.dbg.declare(metadata ptr %mreft, metadata !5591, metadata !DIExpression()), !dbg !5731
  %60 = load ptr, ptr %rtp, align 8, !dbg !5732
  store ptr %60, ptr %mreft, align 8, !dbg !5731
  %61 = load ptr, ptr %mreft, align 8, !dbg !5733
  %mb = getelementptr inbounds %struct.ErtsMRefThing, ptr %61, i32 0, i32 1, !dbg !5734
  %62 = load ptr, ptr %mb, align 8, !dbg !5734
  %intern44 = getelementptr inbounds %struct.magic_binary, ptr %62, i32 0, i32 0, !dbg !5735
  %refc45 = getelementptr inbounds %struct.binary_internals, ptr %intern44, i32 0, i32 1, !dbg !5736
  call void @erts_refc_inc(ptr noundef %refc45, i64 noundef 2), !dbg !5737
  store i32 8, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %mreft) #8, !dbg !5738
  br label %cleanup48

if.end47:                                         ; preds = %sw.bb35
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5739
  br label %cleanup48, !dbg !5739

cleanup48:                                        ; preds = %if.end47, %if.then43
  call void @llvm.lifetime.end.p0(i64 8, ptr %rtp) #8, !dbg !5739
  %cleanup.dest49 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest49, label %unreachable [
    i32 0, label %cleanup.cont
    i32 8, label %off_heap_common
  ]

cleanup.cont:                                     ; preds = %cleanup48
  br label %default_copy, !dbg !5740

default_copy:                                     ; preds = %cleanup.cont, %cleanup
  tail call void @llvm.dbg.label(metadata !5594), !dbg !5741
  br label %sw.default, !dbg !5740

sw.default:                                       ; preds = %sw.bb5, %default_copy
  call void @llvm.lifetime.start.p0(i64 4, ptr %tari50) #8, !dbg !5742
  tail call void @llvm.dbg.declare(metadata ptr %tari50, metadata !5595, metadata !DIExpression()), !dbg !5743
  %63 = load i64, ptr %val, align 8, !dbg !5744
  %and51 = and i64 %63, 63, !dbg !5744
  %cmp52 = icmp eq i64 %and51, 60, !dbg !5744
  br i1 %cmp52, label %cond.true54, label %cond.false57, !dbg !5744

cond.true54:                                      ; preds = %sw.default
  %64 = load i64, ptr %val, align 8, !dbg !5744
  %shr55 = lshr i64 %64, 8, !dbg !5744
  %and56 = and i64 %shr55, 255, !dbg !5744
  br label %cond.end59, !dbg !5744

cond.false57:                                     ; preds = %sw.default
  %65 = load i64, ptr %val, align 8, !dbg !5744
  %shr58 = lshr i64 %65, 6, !dbg !5744
  br label %cond.end59, !dbg !5744

cond.end59:                                       ; preds = %cond.false57, %cond.true54
  %cond60 = phi i64 [ %and56, %cond.true54 ], [ %shr58, %cond.false57 ], !dbg !5744
  %conv61 = trunc i64 %cond60 to i32, !dbg !5744
  store i32 %conv61, ptr %tari50, align 4, !dbg !5743
  %66 = load i32, ptr %tari50, align 4, !dbg !5745
  %conv62 = sext i32 %66 to i64, !dbg !5745
  %67 = load i64, ptr %sz.addr, align 8, !dbg !5746
  %sub63 = sub i64 %67, %conv62, !dbg !5746
  store i64 %sub63, ptr %sz.addr, align 8, !dbg !5746
  br label %while.cond64, !dbg !5747

while.cond64:                                     ; preds = %while.body67, %cond.end59
  %68 = load i32, ptr %tari50, align 4, !dbg !5748
  %dec65 = add nsw i32 %68, -1, !dbg !5748
  store i32 %dec65, ptr %tari50, align 4, !dbg !5748
  %tobool66 = icmp ne i32 %68, 0, !dbg !5747
  br i1 %tobool66, label %while.body67, label %while.end70, !dbg !5747

while.body67:                                     ; preds = %while.cond64
  %69 = load ptr, ptr %tp, align 8, !dbg !5749
  %incdec.ptr68 = getelementptr inbounds i64, ptr %69, i32 1, !dbg !5749
  store ptr %incdec.ptr68, ptr %tp, align 8, !dbg !5749
  %70 = load i64, ptr %69, align 8, !dbg !5751
  %71 = load ptr, ptr %hp, align 8, !dbg !5752
  %incdec.ptr69 = getelementptr inbounds i64, ptr %71, i32 1, !dbg !5752
  store ptr %incdec.ptr69, ptr %hp, align 8, !dbg !5752
  store i64 %70, ptr %71, align 8, !dbg !5753
  br label %while.cond64, !dbg !5747, !llvm.loop !5754

while.end70:                                      ; preds = %while.cond64
  call void @llvm.lifetime.end.p0(i64 4, ptr %tari50) #8, !dbg !5756
  br label %sw.epilog, !dbg !5757

sw.epilog:                                        ; preds = %while.end70, %while.end, %sw.bb5
  br label %sw.epilog71, !dbg !5758

sw.epilog71:                                      ; preds = %while.body, %sw.epilog, %if.end, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %val) #8, !dbg !5759
  br label %while.cond, !dbg !5620, !llvm.loop !5760

while.end72:                                      ; preds = %while.cond
  %72 = load ptr, ptr %hp, align 8, !dbg !5761
  %73 = load ptr, ptr %hpp.addr, align 8, !dbg !5762
  store ptr %72, ptr %73, align 8, !dbg !5763
  %74 = load ptr, ptr %res, align 8, !dbg !5764
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_tuple_literal) #8, !dbg !5765
  call void @llvm.lifetime.end.p0(i64 8, ptr %offs) #8, !dbg !5765
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #8, !dbg !5765
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp) #8, !dbg !5765
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #8, !dbg !5765
  ret ptr %74, !dbg !5766

unreachable:                                      ; preds = %cleanup, %cleanup48
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @erts_move_multi_frags(ptr noundef %hpp, ptr noundef %off_heap, ptr noundef %first, ptr noundef %refs, i32 noundef %nrefs, i32 noundef %literals) #0 !dbg !5767 {
entry:
  %hpp.addr = alloca ptr, align 8
  %off_heap.addr = alloca ptr, align 8
  %first.addr = alloca ptr, align 8
  %refs.addr = alloca ptr, align 8
  %nrefs.addr = alloca i32, align 4
  %literals.addr = alloca i32, align 4
  %bp = alloca ptr, align 8
  %hp_start = alloca ptr, align 8
  %hp_end = alloca ptr, align 8
  %hp = alloca ptr, align 8
  %i = alloca i32, align 4
  %literal_tag = alloca i64, align 8
  %ptr = alloca ptr, align 8
  %val = alloca i64, align 8
  %gval = alloca i64, align 8
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !5771, metadata !DIExpression()), !dbg !5789
  store ptr %off_heap, ptr %off_heap.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %off_heap.addr, metadata !5772, metadata !DIExpression()), !dbg !5790
  store ptr %first, ptr %first.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %first.addr, metadata !5773, metadata !DIExpression()), !dbg !5791
  store ptr %refs, ptr %refs.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %refs.addr, metadata !5774, metadata !DIExpression()), !dbg !5792
  store i32 %nrefs, ptr %nrefs.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %nrefs.addr, metadata !5775, metadata !DIExpression()), !dbg !5793
  store i32 %literals, ptr %literals.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %literals.addr, metadata !5776, metadata !DIExpression()), !dbg !5794
  call void @llvm.lifetime.start.p0(i64 8, ptr %bp) #8, !dbg !5795
  tail call void @llvm.dbg.declare(metadata ptr %bp, metadata !5777, metadata !DIExpression()), !dbg !5796
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp_start) #8, !dbg !5797
  tail call void @llvm.dbg.declare(metadata ptr %hp_start, metadata !5778, metadata !DIExpression()), !dbg !5798
  %0 = load ptr, ptr %hpp.addr, align 8, !dbg !5799
  %1 = load ptr, ptr %0, align 8, !dbg !5800
  store ptr %1, ptr %hp_start, align 8, !dbg !5798
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp_end) #8, !dbg !5801
  tail call void @llvm.dbg.declare(metadata ptr %hp_end, metadata !5779, metadata !DIExpression()), !dbg !5802
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp) #8, !dbg !5803
  tail call void @llvm.dbg.declare(metadata ptr %hp, metadata !5780, metadata !DIExpression()), !dbg !5804
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !5805
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5781, metadata !DIExpression()), !dbg !5806
  call void @llvm.lifetime.start.p0(i64 8, ptr %literal_tag) #8, !dbg !5807
  tail call void @llvm.dbg.declare(metadata ptr %literal_tag, metadata !5782, metadata !DIExpression()), !dbg !5808
  store i64 0, ptr %literal_tag, align 8, !dbg !5809
  %2 = load ptr, ptr %first.addr, align 8, !dbg !5810
  store ptr %2, ptr %bp, align 8, !dbg !5812
  br label %for.cond, !dbg !5813

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load ptr, ptr %bp, align 8, !dbg !5814
  %cmp = icmp ne ptr %3, null, !dbg !5816
  br i1 %cmp, label %for.body, label %for.end, !dbg !5817

for.body:                                         ; preds = %for.cond
  %4 = load ptr, ptr %hpp.addr, align 8, !dbg !5818
  %5 = load ptr, ptr %bp, align 8, !dbg !5820
  %6 = load ptr, ptr %off_heap.addr, align 8, !dbg !5821
  %7 = load i32, ptr %literals.addr, align 4, !dbg !5822
  call void @move_one_frag(ptr noundef %4, ptr noundef %5, ptr noundef %6, i32 noundef %7), !dbg !5823
  br label %for.inc, !dbg !5824

for.inc:                                          ; preds = %for.body
  %8 = load ptr, ptr %bp, align 8, !dbg !5825
  %next = getelementptr inbounds %struct.erl_heap_fragment, ptr %8, i32 0, i32 0, !dbg !5826
  %9 = load ptr, ptr %next, align 8, !dbg !5826
  store ptr %9, ptr %bp, align 8, !dbg !5827
  br label %for.cond, !dbg !5828, !llvm.loop !5829

for.end:                                          ; preds = %for.cond
  %10 = load ptr, ptr %hpp.addr, align 8, !dbg !5831
  %11 = load ptr, ptr %10, align 8, !dbg !5832
  store ptr %11, ptr %hp_end, align 8, !dbg !5833
  %12 = load ptr, ptr %hp_start, align 8, !dbg !5834
  store ptr %12, ptr %hp, align 8, !dbg !5835
  br label %for.cond1, !dbg !5836

for.cond1:                                        ; preds = %for.inc20, %for.end
  %13 = load ptr, ptr %hp, align 8, !dbg !5837
  %14 = load ptr, ptr %hp_end, align 8, !dbg !5838
  %cmp2 = icmp ult ptr %13, %14, !dbg !5839
  br i1 %cmp2, label %for.body3, label %for.end21, !dbg !5840

for.body3:                                        ; preds = %for.cond1
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #8, !dbg !5841
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !5783, metadata !DIExpression()), !dbg !5842
  call void @llvm.lifetime.start.p0(i64 8, ptr %val) #8, !dbg !5843
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !5787, metadata !DIExpression()), !dbg !5844
  call void @llvm.lifetime.start.p0(i64 8, ptr %gval) #8, !dbg !5845
  tail call void @llvm.dbg.declare(metadata ptr %gval, metadata !5788, metadata !DIExpression()), !dbg !5846
  %15 = load ptr, ptr %hp, align 8, !dbg !5847
  %16 = load i64, ptr %15, align 8, !dbg !5848
  store i64 %16, ptr %gval, align 8, !dbg !5846
  %17 = load i64, ptr %gval, align 8, !dbg !5849
  %and = and i64 %17, 3, !dbg !5849
  switch i64 %and, label %sw.epilog [
    i64 2, label %sw.bb
    i64 1, label %sw.bb6
    i64 0, label %sw.bb11
  ], !dbg !5850

sw.bb:                                            ; preds = %for.body3
  %18 = load i64, ptr %gval, align 8, !dbg !5851
  %sub = sub i64 %18, 2, !dbg !5851
  %19 = inttoptr i64 %sub to ptr, !dbg !5851
  store ptr %19, ptr %ptr, align 8, !dbg !5853
  %20 = load ptr, ptr %ptr, align 8, !dbg !5854
  %21 = load i64, ptr %20, align 8, !dbg !5855
  store i64 %21, ptr %val, align 8, !dbg !5856
  %22 = load i64, ptr %val, align 8, !dbg !5857
  %and4 = and i64 %22, 3, !dbg !5857
  %cmp5 = icmp eq i64 %and4, 0, !dbg !5857
  br i1 %cmp5, label %if.end, label %if.then, !dbg !5859

if.then:                                          ; preds = %sw.bb
  %23 = load i64, ptr %val, align 8, !dbg !5860
  %24 = load ptr, ptr %hp, align 8, !dbg !5862
  store i64 %23, ptr %24, align 8, !dbg !5863
  br label %if.end, !dbg !5864

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !5865

sw.bb6:                                           ; preds = %for.body3
  %25 = load i64, ptr %gval, align 8, !dbg !5866
  %sub7 = sub i64 %25, 1, !dbg !5866
  %26 = inttoptr i64 %sub7 to ptr, !dbg !5866
  store ptr %26, ptr %ptr, align 8, !dbg !5867
  %27 = load ptr, ptr %ptr, align 8, !dbg !5868
  %28 = load i64, ptr %27, align 8, !dbg !5869
  store i64 %28, ptr %val, align 8, !dbg !5870
  %29 = load i64, ptr %val, align 8, !dbg !5871
  %cmp8 = icmp eq i64 %29, 0, !dbg !5871
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5873

if.then9:                                         ; preds = %sw.bb6
  %30 = load ptr, ptr %ptr, align 8, !dbg !5874
  %arrayidx = getelementptr inbounds i64, ptr %30, i64 1, !dbg !5874
  %31 = load i64, ptr %arrayidx, align 8, !dbg !5874
  store i64 %31, ptr %val, align 8, !dbg !5876
  %32 = load i64, ptr %val, align 8, !dbg !5877
  %33 = load ptr, ptr %hp, align 8, !dbg !5878
  store i64 %32, ptr %33, align 8, !dbg !5879
  br label %if.end10, !dbg !5880

if.end10:                                         ; preds = %if.then9, %sw.bb6
  br label %sw.epilog, !dbg !5881

sw.bb11:                                          ; preds = %for.body3
  %34 = load i64, ptr %gval, align 8, !dbg !5882
  %and12 = and i64 %34, 60, !dbg !5882
  %cmp13 = icmp eq i64 %and12, 0, !dbg !5882
  br i1 %cmp13, label %if.end19, label %if.then14, !dbg !5884

if.then14:                                        ; preds = %sw.bb11
  %35 = load i64, ptr %gval, align 8, !dbg !5885
  %and15 = and i64 %35, 63, !dbg !5885
  %cmp16 = icmp eq i64 %and15, 60, !dbg !5885
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !5885

cond.true:                                        ; preds = %if.then14
  %36 = load i64, ptr %gval, align 8, !dbg !5885
  %shr = lshr i64 %36, 8, !dbg !5885
  %and17 = and i64 %shr, 255, !dbg !5885
  br label %cond.end, !dbg !5885

cond.false:                                       ; preds = %if.then14
  %37 = load i64, ptr %gval, align 8, !dbg !5885
  %shr18 = lshr i64 %37, 6, !dbg !5885
  br label %cond.end, !dbg !5885

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %and17, %cond.true ], [ %shr18, %cond.false ], !dbg !5885
  %38 = load ptr, ptr %hp, align 8, !dbg !5887
  %add.ptr = getelementptr inbounds i64, ptr %38, i64 %cond, !dbg !5887
  store ptr %add.ptr, ptr %hp, align 8, !dbg !5887
  br label %if.end19, !dbg !5888

if.end19:                                         ; preds = %cond.end, %sw.bb11
  br label %sw.epilog, !dbg !5889

sw.epilog:                                        ; preds = %for.body3, %if.end19, %if.end10, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %gval) #8, !dbg !5890
  call void @llvm.lifetime.end.p0(i64 8, ptr %val) #8, !dbg !5890
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #8, !dbg !5890
  br label %for.inc20, !dbg !5891

for.inc20:                                        ; preds = %sw.epilog
  %39 = load ptr, ptr %hp, align 8, !dbg !5892
  %incdec.ptr = getelementptr inbounds i64, ptr %39, i32 1, !dbg !5892
  store ptr %incdec.ptr, ptr %hp, align 8, !dbg !5892
  br label %for.cond1, !dbg !5893, !llvm.loop !5894

for.end21:                                        ; preds = %for.cond1
  store i32 0, ptr %i, align 4, !dbg !5896
  br label %for.cond22, !dbg !5898

for.cond22:                                       ; preds = %for.inc28, %for.end21
  %40 = load i32, ptr %i, align 4, !dbg !5899
  %41 = load i32, ptr %nrefs.addr, align 4, !dbg !5901
  %cmp23 = icmp ult i32 %40, %41, !dbg !5902
  br i1 %cmp23, label %for.body24, label %for.end29, !dbg !5903

for.body24:                                       ; preds = %for.cond22
  %42 = load ptr, ptr %refs.addr, align 8, !dbg !5904
  %43 = load i32, ptr %i, align 4, !dbg !5906
  %idxprom = zext i32 %43 to i64, !dbg !5904
  %arrayidx25 = getelementptr inbounds i64, ptr %42, i64 %idxprom, !dbg !5904
  %44 = load i64, ptr %arrayidx25, align 8, !dbg !5904
  %45 = load i64, ptr %literal_tag, align 8, !dbg !5907
  %call = call i64 @follow_moved(i64 noundef %44, i64 noundef %45), !dbg !5908
  %46 = load ptr, ptr %refs.addr, align 8, !dbg !5909
  %47 = load i32, ptr %i, align 4, !dbg !5910
  %idxprom26 = zext i32 %47 to i64, !dbg !5909
  %arrayidx27 = getelementptr inbounds i64, ptr %46, i64 %idxprom26, !dbg !5909
  store i64 %call, ptr %arrayidx27, align 8, !dbg !5911
  br label %for.inc28, !dbg !5912

for.inc28:                                        ; preds = %for.body24
  %48 = load i32, ptr %i, align 4, !dbg !5913
  %inc = add i32 %48, 1, !dbg !5913
  store i32 %inc, ptr %i, align 4, !dbg !5913
  br label %for.cond22, !dbg !5914, !llvm.loop !5915

for.end29:                                        ; preds = %for.cond22
  call void @llvm.lifetime.end.p0(i64 8, ptr %literal_tag) #8, !dbg !5917
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !5917
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp) #8, !dbg !5917
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp_end) #8, !dbg !5917
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp_start) #8, !dbg !5917
  call void @llvm.lifetime.end.p0(i64 8, ptr %bp) #8, !dbg !5917
  ret void, !dbg !5917
}

; Function Attrs: nounwind uwtable
define internal void @move_one_frag(ptr noundef %hpp, ptr noundef %frag, ptr noundef %off_heap, i32 noundef %literals) #0 !dbg !5918 {
entry:
  %hpp.addr = alloca ptr, align 8
  %frag.addr = alloca ptr, align 8
  %off_heap.addr = alloca ptr, align 8
  %literals.addr = alloca i32, align 4
  %ptr = alloca ptr, align 8
  %end = alloca ptr, align 8
  %dummy_ref = alloca i64, align 8
  %hp = alloca ptr, align 8
  %val = alloca i64, align 8
  %hdr = alloca ptr, align 8
  %funp = alloca ptr, align 8
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !5922, metadata !DIExpression()), !dbg !5938
  store ptr %frag, ptr %frag.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %frag.addr, metadata !5923, metadata !DIExpression()), !dbg !5939
  store ptr %off_heap, ptr %off_heap.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %off_heap.addr, metadata !5924, metadata !DIExpression()), !dbg !5940
  store i32 %literals, ptr %literals.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %literals.addr, metadata !5925, metadata !DIExpression()), !dbg !5941
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #8, !dbg !5942
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !5926, metadata !DIExpression()), !dbg !5943
  %0 = load ptr, ptr %frag.addr, align 8, !dbg !5944
  %mem = getelementptr inbounds %struct.erl_heap_fragment, ptr %0, i32 0, i32 4, !dbg !5945
  %arraydecay = getelementptr inbounds [1 x i64], ptr %mem, i64 0, i64 0, !dbg !5944
  store ptr %arraydecay, ptr %ptr, align 8, !dbg !5943
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #8, !dbg !5946
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !5927, metadata !DIExpression()), !dbg !5947
  %1 = load ptr, ptr %ptr, align 8, !dbg !5948
  %2 = load ptr, ptr %frag.addr, align 8, !dbg !5949
  %used_size = getelementptr inbounds %struct.erl_heap_fragment, ptr %2, i32 0, i32 3, !dbg !5950
  %3 = load i64, ptr %used_size, align 8, !dbg !5950
  %add.ptr = getelementptr inbounds i64, ptr %1, i64 %3, !dbg !5951
  store ptr %add.ptr, ptr %end, align 8, !dbg !5947
  call void @llvm.lifetime.start.p0(i64 8, ptr %dummy_ref) #8, !dbg !5952
  tail call void @llvm.dbg.declare(metadata ptr %dummy_ref, metadata !5928, metadata !DIExpression()), !dbg !5953
  call void @llvm.lifetime.start.p0(i64 8, ptr %hp) #8, !dbg !5954
  tail call void @llvm.dbg.declare(metadata ptr %hp, metadata !5929, metadata !DIExpression()), !dbg !5955
  %4 = load ptr, ptr %hpp.addr, align 8, !dbg !5956
  %5 = load ptr, ptr %4, align 8, !dbg !5957
  store ptr %5, ptr %hp, align 8, !dbg !5955
  br label %while.cond, !dbg !5958

while.cond:                                       ; preds = %if.end20, %entry
  %6 = load ptr, ptr %ptr, align 8, !dbg !5959
  %7 = load ptr, ptr %end, align 8, !dbg !5960
  %cmp = icmp ne ptr %6, %7, !dbg !5961
  br i1 %cmp, label %while.body, label %while.end, !dbg !5958

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %val) #8, !dbg !5962
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !5930, metadata !DIExpression()), !dbg !5963
  %8 = load ptr, ptr %ptr, align 8, !dbg !5964
  %9 = load i64, ptr %8, align 8, !dbg !5965
  store i64 %9, ptr %val, align 8, !dbg !5966
  %10 = load i64, ptr %val, align 8, !dbg !5967
  %and = and i64 %10, 3, !dbg !5967
  %cmp1 = icmp eq i64 %and, 0, !dbg !5967
  br i1 %cmp1, label %if.then, label %if.else18, !dbg !5968

if.then:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr) #8, !dbg !5969
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !5932, metadata !DIExpression()), !dbg !5970
  %11 = load ptr, ptr %hp, align 8, !dbg !5971
  store ptr %11, ptr %hdr, align 8, !dbg !5970
  %12 = load ptr, ptr %ptr, align 8, !dbg !5972
  %13 = load i64, ptr %val, align 8, !dbg !5973
  %call = call ptr @move_boxed(ptr noundef %12, i64 noundef %13, ptr noundef %hp, ptr noundef %dummy_ref), !dbg !5974
  store ptr %call, ptr %ptr, align 8, !dbg !5975
  %14 = load i64, ptr %val, align 8, !dbg !5976
  %and2 = and i64 %14, 60, !dbg !5977
  switch i64 %and2, label %sw.epilog [
    i64 16, label %sw.bb
    i64 32, label %sw.bb8
    i64 48, label %sw.bb8
    i64 52, label %sw.bb8
    i64 56, label %sw.bb8
    i64 20, label %sw.bb10
  ], !dbg !5978

sw.bb:                                            ; preds = %if.then
  %15 = load ptr, ptr %hdr, align 8, !dbg !5979
  %16 = load i64, ptr %15, align 8, !dbg !5979
  %cmp3 = icmp eq i64 %16, 144, !dbg !5979
  %conv = zext i1 %cmp3 to i32, !dbg !5979
  %17 = load ptr, ptr %hdr, align 8, !dbg !5979
  %marker = getelementptr inbounds %struct.ErtsORefThing, ptr %17, i32 0, i32 1, !dbg !5979
  %18 = load i32, ptr %marker, align 8, !dbg !5979
  %cmp4 = icmp ne i32 %18, -1, !dbg !5979
  %conv5 = zext i1 %cmp4 to i32, !dbg !5979
  %and6 = and i32 %conv, %conv5, !dbg !5979
  %tobool = icmp ne i32 %and6, 0, !dbg !5979
  br i1 %tobool, label %if.end, label %if.then7, !dbg !5981

if.then7:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !5982

if.end:                                           ; preds = %sw.bb
  br label %sw.bb8, !dbg !5979

sw.bb8:                                           ; preds = %if.then, %if.then, %if.then, %if.then, %if.end
  %19 = load ptr, ptr %off_heap.addr, align 8, !dbg !5984
  %first = getelementptr inbounds %struct.erl_off_heap, ptr %19, i32 0, i32 0, !dbg !5985
  %20 = load ptr, ptr %first, align 8, !dbg !5985
  %21 = load ptr, ptr %hdr, align 8, !dbg !5986
  %next = getelementptr inbounds %struct.erl_off_heap_header, ptr %21, i32 0, i32 2, !dbg !5987
  store ptr %20, ptr %next, align 8, !dbg !5988
  %22 = load ptr, ptr %hdr, align 8, !dbg !5989
  %23 = load ptr, ptr %off_heap.addr, align 8, !dbg !5990
  %first9 = getelementptr inbounds %struct.erl_off_heap, ptr %23, i32 0, i32 0, !dbg !5991
  store ptr %22, ptr %first9, align 8, !dbg !5992
  br label %sw.epilog, !dbg !5993

sw.bb10:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %funp) #8, !dbg !5994
  tail call void @llvm.dbg.declare(metadata ptr %funp, metadata !5935, metadata !DIExpression()), !dbg !5995
  %24 = load ptr, ptr %hdr, align 8, !dbg !5996
  store ptr %24, ptr %funp, align 8, !dbg !5995
  %25 = load ptr, ptr %funp, align 8, !dbg !5997
  %creator = getelementptr inbounds %struct.erl_fun_thing, ptr %25, i32 0, i32 5, !dbg !5997
  %26 = load i64, ptr %creator, align 8, !dbg !5997
  %cmp11 = icmp ne i64 %26, 16715, !dbg !5997
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !5999

if.then13:                                        ; preds = %sw.bb10
  %27 = load ptr, ptr %off_heap.addr, align 8, !dbg !6000
  %first14 = getelementptr inbounds %struct.erl_off_heap, ptr %27, i32 0, i32 0, !dbg !6002
  %28 = load ptr, ptr %first14, align 8, !dbg !6002
  %29 = load ptr, ptr %hdr, align 8, !dbg !6003
  %next15 = getelementptr inbounds %struct.erl_off_heap_header, ptr %29, i32 0, i32 2, !dbg !6004
  store ptr %28, ptr %next15, align 8, !dbg !6005
  %30 = load ptr, ptr %hdr, align 8, !dbg !6006
  %31 = load ptr, ptr %off_heap.addr, align 8, !dbg !6007
  %first16 = getelementptr inbounds %struct.erl_off_heap, ptr %31, i32 0, i32 0, !dbg !6008
  store ptr %30, ptr %first16, align 8, !dbg !6009
  br label %if.end17, !dbg !6010

if.else:                                          ; preds = %sw.bb10
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %funp) #8, !dbg !6011
  br label %sw.epilog, !dbg !6012

sw.epilog:                                        ; preds = %if.then, %if.end17, %sw.bb8, %if.then7
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr) #8, !dbg !6013
  br label %if.end20, !dbg !6014

if.else18:                                        ; preds = %while.body
  %32 = load ptr, ptr %ptr, align 8, !dbg !6015
  %33 = load i64, ptr %val, align 8, !dbg !6017
  call void @move_cons(ptr noundef %32, i64 noundef %33, ptr noundef %hp, ptr noundef %dummy_ref), !dbg !6018
  %34 = load ptr, ptr %ptr, align 8, !dbg !6019
  %add.ptr19 = getelementptr inbounds i64, ptr %34, i64 2, !dbg !6019
  store ptr %add.ptr19, ptr %ptr, align 8, !dbg !6019
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %sw.epilog
  call void @llvm.lifetime.end.p0(i64 8, ptr %val) #8, !dbg !6020
  br label %while.cond, !dbg !5958, !llvm.loop !6021

while.end:                                        ; preds = %while.cond
  %35 = load ptr, ptr %hp, align 8, !dbg !6022
  %36 = load ptr, ptr %hpp.addr, align 8, !dbg !6023
  store ptr %35, ptr %36, align 8, !dbg !6024
  br label %do.body, !dbg !6025

do.body:                                          ; preds = %while.end
  %37 = load ptr, ptr %frag.addr, align 8, !dbg !6026
  %off_heap21 = getelementptr inbounds %struct.erl_heap_fragment, ptr %37, i32 0, i32 1, !dbg !6026
  %overhead = getelementptr inbounds %struct.erl_off_heap, ptr %off_heap21, i32 0, i32 1, !dbg !6026
  %38 = load i64, ptr %overhead, align 8, !dbg !6026
  %39 = load ptr, ptr %off_heap.addr, align 8, !dbg !6026
  %overhead22 = getelementptr inbounds %struct.erl_off_heap, ptr %39, i32 0, i32 1, !dbg !6026
  %40 = load i64, ptr %overhead22, align 8, !dbg !6026
  %add = add i64 %40, %38, !dbg !6026
  store i64 %add, ptr %overhead22, align 8, !dbg !6026
  br label %do.cond, !dbg !6026

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6026

do.end:                                           ; preds = %do.cond
  %41 = load ptr, ptr %frag.addr, align 8, !dbg !6028
  %off_heap23 = getelementptr inbounds %struct.erl_heap_fragment, ptr %41, i32 0, i32 1, !dbg !6029
  %first24 = getelementptr inbounds %struct.erl_off_heap, ptr %off_heap23, i32 0, i32 0, !dbg !6030
  store ptr null, ptr %first24, align 8, !dbg !6031
  call void @llvm.lifetime.end.p0(i64 8, ptr %hp) #8, !dbg !6032
  call void @llvm.lifetime.end.p0(i64 8, ptr %dummy_ref) #8, !dbg !6032
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #8, !dbg !6032
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #8, !dbg !6032
  ret void, !dbg !6032
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @follow_moved(i64 noundef %term, i64 noundef %xptr_tag) #2 !dbg !6033 {
entry:
  %term.addr = alloca i64, align 8
  %xptr_tag.addr = alloca i64, align 8
  %ptr = alloca ptr, align 8
  store i64 %term, ptr %term.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %term.addr, metadata !6037, metadata !DIExpression()), !dbg !6040
  store i64 %xptr_tag, ptr %xptr_tag.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %xptr_tag.addr, metadata !6038, metadata !DIExpression()), !dbg !6041
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #8, !dbg !6042
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !6039, metadata !DIExpression()), !dbg !6043
  %0 = load i64, ptr %term.addr, align 8, !dbg !6044
  %and = and i64 %0, 3, !dbg !6044
  switch i64 %and, label %sw.default [
    i64 3, label %sw.epilog
    i64 2, label %sw.bb
    i64 1, label %sw.bb2
  ], !dbg !6045

sw.bb:                                            ; preds = %entry
  %1 = load i64, ptr %term.addr, align 8, !dbg !6046
  %sub = sub i64 %1, 2, !dbg !6046
  %2 = inttoptr i64 %sub to ptr, !dbg !6046
  store ptr %2, ptr %ptr, align 8, !dbg !6048
  %3 = load ptr, ptr %ptr, align 8, !dbg !6049
  %4 = load i64, ptr %3, align 8, !dbg !6049
  %and1 = and i64 %4, 3, !dbg !6049
  %cmp = icmp eq i64 %and1, 0, !dbg !6049
  br i1 %cmp, label %if.end, label %if.then, !dbg !6051

if.then:                                          ; preds = %sw.bb
  %5 = load ptr, ptr %ptr, align 8, !dbg !6052
  %6 = load i64, ptr %5, align 8, !dbg !6053
  %7 = load i64, ptr %xptr_tag.addr, align 8, !dbg !6054
  %or = or i64 %6, %7, !dbg !6055
  store i64 %or, ptr %term.addr, align 8, !dbg !6056
  br label %if.end, !dbg !6057

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !6058

sw.bb2:                                           ; preds = %entry
  %8 = load i64, ptr %term.addr, align 8, !dbg !6059
  %sub3 = sub i64 %8, 1, !dbg !6059
  %9 = inttoptr i64 %sub3 to ptr, !dbg !6059
  store ptr %9, ptr %ptr, align 8, !dbg !6060
  %10 = load ptr, ptr %ptr, align 8, !dbg !6061
  %arrayidx = getelementptr inbounds i64, ptr %10, i64 0, !dbg !6061
  %11 = load i64, ptr %arrayidx, align 8, !dbg !6061
  %cmp4 = icmp eq i64 %11, 0, !dbg !6061
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !6063

if.then5:                                         ; preds = %sw.bb2
  %12 = load ptr, ptr %ptr, align 8, !dbg !6064
  %arrayidx6 = getelementptr inbounds i64, ptr %12, i64 1, !dbg !6064
  %13 = load i64, ptr %arrayidx6, align 8, !dbg !6064
  %14 = load i64, ptr %xptr_tag.addr, align 8, !dbg !6065
  %or7 = or i64 %13, %14, !dbg !6066
  store i64 %or7, ptr %term.addr, align 8, !dbg !6067
  br label %if.end8, !dbg !6068

if.end8:                                          ; preds = %if.then5, %sw.bb2
  br label %sw.epilog, !dbg !6069

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !6070

sw.epilog:                                        ; preds = %sw.default, %if.end8, %if.end, %entry
  %15 = load i64, ptr %term.addr, align 8, !dbg !6071
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #8, !dbg !6072
  ret i64 %15, !dbg !6073
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @erts_is_in_literal_range(ptr noundef %ptr) #4 !dbg !6074 {
entry:
  %ptr.addr = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !6078, metadata !DIExpression()), !dbg !6079
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !6080
  %1 = load ptr, ptr @erts_literals_start, align 8, !dbg !6080
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64, !dbg !6080
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64, !dbg !6080
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6080
  %2 = load i64, ptr @erts_literals_size, align 8, !dbg !6080
  %cmp = icmp ult i64 %sub.ptr.sub, %2, !dbg !6080
  %conv = zext i1 %cmp to i32, !dbg !6080
  ret i32 %conv, !dbg !6081
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ethr_atomic_inc(ptr noundef %var) #2 !dbg !6082 {
entry:
  %var.addr = alloca ptr, align 8
  store ptr %var, ptr %var.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %var.addr, metadata !6086, metadata !DIExpression()), !dbg !6087
  %0 = load ptr, ptr %var.addr, align 8, !dbg !6088
  call void @ethr_native_atomic64_inc_mb(ptr noundef %0), !dbg !6089
  ret void, !dbg !6090
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ethr_native_atomic64_inc_mb(ptr noundef %var) #2 !dbg !6091 {
entry:
  %var.addr = alloca ptr, align 8
  store ptr %var, ptr %var.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %var.addr, metadata !6096, metadata !DIExpression()), !dbg !6097
  %0 = load ptr, ptr %var.addr, align 8, !dbg !6098
  %counter = getelementptr inbounds %struct.ethr_native_atomic64_t, ptr %0, i32 0, i32 0, !dbg !6099
  %1 = load ptr, ptr %var.addr, align 8, !dbg !6100
  %counter1 = getelementptr inbounds %struct.ethr_native_atomic64_t, ptr %1, i32 0, i32 0, !dbg !6101
  call void asm sideeffect "lock; incq $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr elementtype(i64) %counter, ptr elementtype(i64) %counter1) #8, !dbg !6102, !srcloc !6103
  ret void, !dbg !6104
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @erts_refc_inctest(ptr noundef %refcp, i64 noundef %min_val) #2 !dbg !6105 {
entry:
  %refcp.addr = alloca ptr, align 8
  %min_val.addr = alloca i64, align 8
  %val = alloca i64, align 8
  store ptr %refcp, ptr %refcp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %refcp.addr, metadata !6109, metadata !DIExpression()), !dbg !6112
  store i64 %min_val, ptr %min_val.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %min_val.addr, metadata !6110, metadata !DIExpression()), !dbg !6113
  call void @llvm.lifetime.start.p0(i64 8, ptr %val) #8, !dbg !6114
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !6111, metadata !DIExpression()), !dbg !6115
  %0 = load ptr, ptr %refcp.addr, align 8, !dbg !6116
  %call = call i64 @ethr_atomic_inc_read(ptr noundef %0), !dbg !6117
  store i64 %call, ptr %val, align 8, !dbg !6115
  %1 = load i64, ptr %val, align 8, !dbg !6118
  call void @llvm.lifetime.end.p0(i64 8, ptr %val) #8, !dbg !6119
  ret i64 %1, !dbg !6120
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @ethr_atomic_inc_read(ptr noundef %var) #2 !dbg !6121 {
entry:
  %var.addr = alloca ptr, align 8
  %res = alloca i64, align 8
  store ptr %var, ptr %var.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %var.addr, metadata !6125, metadata !DIExpression()), !dbg !6127
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #8, !dbg !6128
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !6126, metadata !DIExpression()), !dbg !6129
  %0 = load ptr, ptr %var.addr, align 8, !dbg !6130
  %call = call i64 @ethr_atomic_add_read(ptr noundef %0, i64 noundef 1), !dbg !6131
  store i64 %call, ptr %res, align 8, !dbg !6132
  %1 = load i64, ptr %res, align 8, !dbg !6133
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #8, !dbg !6134
  ret i64 %1, !dbg !6135
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @ethr_atomic_add_read(ptr noundef %var, i64 noundef %val) #2 !dbg !6136 {
entry:
  %var.addr = alloca ptr, align 8
  %val.addr = alloca i64, align 8
  %res = alloca i64, align 8
  store ptr %var, ptr %var.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %var.addr, metadata !6140, metadata !DIExpression()), !dbg !6143
  store i64 %val, ptr %val.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !6141, metadata !DIExpression()), !dbg !6144
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #8, !dbg !6145
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !6142, metadata !DIExpression()), !dbg !6146
  %0 = load ptr, ptr %var.addr, align 8, !dbg !6147
  %1 = load i64, ptr %val.addr, align 8, !dbg !6148
  %call = call i64 @ethr_native_atomic64_add_return_mb(ptr noundef %0, i64 noundef %1), !dbg !6149
  store i64 %call, ptr %res, align 8, !dbg !6150
  %2 = load i64, ptr %res, align 8, !dbg !6151
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #8, !dbg !6152
  ret i64 %2, !dbg !6153
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @ethr_native_atomic64_add_return_mb(ptr noundef %var, i64 noundef %incr) #2 !dbg !6154 {
entry:
  %var.addr = alloca ptr, align 8
  %incr.addr = alloca i64, align 8
  %tmp = alloca i64, align 8
  store ptr %var, ptr %var.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %var.addr, metadata !6158, metadata !DIExpression()), !dbg !6161
  store i64 %incr, ptr %incr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %incr.addr, metadata !6159, metadata !DIExpression()), !dbg !6162
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !6163
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !6160, metadata !DIExpression()), !dbg !6164
  %0 = load i64, ptr %incr.addr, align 8, !dbg !6165
  store i64 %0, ptr %tmp, align 8, !dbg !6166
  %1 = load ptr, ptr %var.addr, align 8, !dbg !6167
  %counter = getelementptr inbounds %struct.ethr_native_atomic64_t, ptr %1, i32 0, i32 0, !dbg !6168
  %2 = load i64, ptr %tmp, align 8, !dbg !6169
  %3 = call i64 asm sideeffect "lock; xaddq $0, $1", "=r,*m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr elementtype(i64) %counter, i64 %2) #8, !dbg !6170, !srcloc !6171
  store i64 %3, ptr %tmp, align 8, !dbg !6170
  %4 = load i64, ptr %tmp, align 8, !dbg !6172
  %5 = load i64, ptr %incr.addr, align 8, !dbg !6173
  %add = add nsw i64 %4, %5, !dbg !6174
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !6175
  ret i64 %add, !dbg !6176
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @move_boxed(ptr noalias noundef %ptr, i64 noundef %hdr, ptr noundef %hpp, ptr noundef %orig) #2 !dbg !6177 {
entry:
  %retval = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %hdr.addr = alloca i64, align 8
  %hpp.addr = alloca ptr, align 8
  %orig.addr = alloca ptr, align 8
  %gval = alloca i64, align 8
  %nelts = alloca i64, align 8
  %htop = alloca ptr, align 8
  %sb = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ptr, ptr %ptr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !6181, metadata !DIExpression()), !dbg !6191
  store i64 %hdr, ptr %hdr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hdr.addr, metadata !6182, metadata !DIExpression()), !dbg !6192
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !6183, metadata !DIExpression()), !dbg !6193
  store ptr %orig, ptr %orig.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %orig.addr, metadata !6184, metadata !DIExpression()), !dbg !6194
  call void @llvm.lifetime.start.p0(i64 8, ptr %gval) #8, !dbg !6195
  tail call void @llvm.dbg.declare(metadata ptr %gval, metadata !6185, metadata !DIExpression()), !dbg !6196
  call void @llvm.lifetime.start.p0(i64 8, ptr %nelts) #8, !dbg !6197
  tail call void @llvm.dbg.declare(metadata ptr %nelts, metadata !6186, metadata !DIExpression()), !dbg !6198
  call void @llvm.lifetime.start.p0(i64 8, ptr %htop) #8, !dbg !6199
  tail call void @llvm.dbg.declare(metadata ptr %htop, metadata !6187, metadata !DIExpression()), !dbg !6200
  %0 = load ptr, ptr %hpp.addr, align 8, !dbg !6201
  %1 = load ptr, ptr %0, align 8, !dbg !6202
  store ptr %1, ptr %htop, align 8, !dbg !6200
  %2 = load i64, ptr %hdr.addr, align 8, !dbg !6203
  %and = and i64 %2, 63, !dbg !6203
  %cmp = icmp eq i64 %and, 60, !dbg !6203
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6203

cond.true:                                        ; preds = %entry
  %3 = load i64, ptr %hdr.addr, align 8, !dbg !6203
  %shr = lshr i64 %3, 8, !dbg !6203
  %and1 = and i64 %shr, 255, !dbg !6203
  br label %cond.end, !dbg !6203

cond.false:                                       ; preds = %entry
  %4 = load i64, ptr %hdr.addr, align 8, !dbg !6203
  %shr2 = lshr i64 %4, 6, !dbg !6203
  br label %cond.end, !dbg !6203

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %and1, %cond.true ], [ %shr2, %cond.false ], !dbg !6203
  store i64 %cond, ptr %nelts, align 8, !dbg !6204
  %5 = load i64, ptr %hdr.addr, align 8, !dbg !6205
  %and3 = and i64 %5, 60, !dbg !6206
  switch i64 %and3, label %sw.epilog [
    i64 40, label %sw.bb
    i64 60, label %sw.bb16
    i64 20, label %sw.bb29
  ], !dbg !6207

sw.bb:                                            ; preds = %cond.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %sb) #8, !dbg !6208
  tail call void @llvm.dbg.declare(metadata ptr %sb, metadata !6188, metadata !DIExpression()), !dbg !6209
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !6210
  store ptr %6, ptr %sb, align 8, !dbg !6209
  %7 = load ptr, ptr %sb, align 8, !dbg !6211
  %bitsize = getelementptr inbounds %struct.erl_sub_bin, ptr %7, i32 0, i32 3, !dbg !6213
  %8 = load i8, ptr %bitsize, align 8, !dbg !6213
  %conv = zext i8 %8 to i32, !dbg !6211
  %cmp4 = icmp eq i32 %conv, 0, !dbg !6214
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !6215

land.lhs.true:                                    ; preds = %sw.bb
  %9 = load ptr, ptr %sb, align 8, !dbg !6216
  %bitoffs = getelementptr inbounds %struct.erl_sub_bin, ptr %9, i32 0, i32 4, !dbg !6217
  %10 = load i8, ptr %bitoffs, align 1, !dbg !6217
  %conv6 = zext i8 %10 to i32, !dbg !6216
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !6218
  br i1 %cmp7, label %land.lhs.true9, label %if.end, !dbg !6219

land.lhs.true9:                                   ; preds = %land.lhs.true
  %11 = load ptr, ptr %sb, align 8, !dbg !6220
  %is_writable = getelementptr inbounds %struct.erl_sub_bin, ptr %11, i32 0, i32 5, !dbg !6221
  %12 = load i8, ptr %is_writable, align 2, !dbg !6221
  %conv10 = zext i8 %12 to i32, !dbg !6220
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !6222
  br i1 %cmp11, label %land.lhs.true13, label %if.end, !dbg !6223

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %13 = load ptr, ptr %sb, align 8, !dbg !6224
  %size = getelementptr inbounds %struct.erl_sub_bin, ptr %13, i32 0, i32 1, !dbg !6225
  %14 = load i64, ptr %size, align 8, !dbg !6225
  %cmp14 = icmp ule i64 %14, 24, !dbg !6226
  br i1 %cmp14, label %if.then, label %if.end, !dbg !6227

if.then:                                          ; preds = %land.lhs.true13
  %15 = load ptr, ptr %ptr.addr, align 8, !dbg !6228
  %16 = load ptr, ptr %hpp.addr, align 8, !dbg !6230
  %17 = load ptr, ptr %orig.addr, align 8, !dbg !6231
  %call = call ptr @erts_sub_binary_to_heap_binary(ptr noundef %15, ptr noundef %16, ptr noundef %17), !dbg !6232
  store ptr %call, ptr %retval, align 8, !dbg !6233
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6233

if.end:                                           ; preds = %land.lhs.true13, %land.lhs.true9, %land.lhs.true, %sw.bb
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6234
  br label %cleanup, !dbg !6234

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sb) #8, !dbg !6234
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup38 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %18 = load i64, ptr %nelts, align 8, !dbg !6235
  %inc = add nsw i64 %18, 1, !dbg !6235
  store i64 %inc, ptr %nelts, align 8, !dbg !6235
  br label %sw.epilog, !dbg !6236

sw.bb16:                                          ; preds = %cond.end
  %19 = load i64, ptr %hdr.addr, align 8, !dbg !6237
  %and17 = and i64 %19, 252, !dbg !6237
  %cmp18 = icmp eq i64 %and17, 60, !dbg !6237
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !6239

if.then20:                                        ; preds = %sw.bb16
  %20 = load ptr, ptr %ptr.addr, align 8, !dbg !6240
  %size21 = getelementptr inbounds %struct.flatmap_s, ptr %20, i32 0, i32 1, !dbg !6240
  %21 = load i64, ptr %size21, align 8, !dbg !6240
  %add = add i64 %21, 1, !dbg !6241
  %22 = load i64, ptr %nelts, align 8, !dbg !6242
  %add22 = add i64 %22, %add, !dbg !6242
  store i64 %add22, ptr %nelts, align 8, !dbg !6242
  br label %if.end28, !dbg !6243

if.else:                                          ; preds = %sw.bb16
  %23 = load i64, ptr %hdr.addr, align 8, !dbg !6244
  %shr23 = lshr i64 %23, 16, !dbg !6244
  %and24 = and i64 %shr23, 65535, !dbg !6244
  %conv25 = trunc i64 %and24 to i32, !dbg !6244
  %24 = call i32 @llvm.ctpop.i32(i32 %conv25), !dbg !6244
  %conv26 = zext i32 %24 to i64, !dbg !6244
  %25 = load i64, ptr %nelts, align 8, !dbg !6245
  %add27 = add nsw i64 %25, %conv26, !dbg !6245
  store i64 %add27, ptr %nelts, align 8, !dbg !6245
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then20
  br label %sw.epilog, !dbg !6246

sw.bb29:                                          ; preds = %cond.end
  %26 = load ptr, ptr %ptr.addr, align 8, !dbg !6247
  %num_free = getelementptr inbounds %struct.erl_fun_thing, ptr %26, i32 0, i32 4, !dbg !6248
  %27 = load i8, ptr %num_free, align 1, !dbg !6248
  %conv30 = zext i8 %27 to i32, !dbg !6249
  %add31 = add nsw i32 %conv30, 1, !dbg !6250
  %conv32 = sext i32 %add31 to i64, !dbg !6249
  %28 = load i64, ptr %nelts, align 8, !dbg !6251
  %add33 = add nsw i64 %28, %conv32, !dbg !6251
  store i64 %add33, ptr %nelts, align 8, !dbg !6251
  br label %sw.epilog, !dbg !6252

sw.epilog:                                        ; preds = %cond.end, %sw.bb29, %if.end28, %cleanup.cont
  %29 = load ptr, ptr %htop, align 8, !dbg !6253
  %30 = ptrtoint ptr %29 to i64, !dbg !6253
  %add34 = add i64 %30, 2, !dbg !6253
  store i64 %add34, ptr %gval, align 8, !dbg !6254
  %31 = load i64, ptr %gval, align 8, !dbg !6255
  %32 = load ptr, ptr %orig.addr, align 8, !dbg !6256
  store i64 %31, ptr %32, align 8, !dbg !6257
  %33 = load i64, ptr %hdr.addr, align 8, !dbg !6258
  %34 = load ptr, ptr %htop, align 8, !dbg !6259
  %incdec.ptr = getelementptr inbounds i64, ptr %34, i32 1, !dbg !6259
  store ptr %incdec.ptr, ptr %htop, align 8, !dbg !6259
  store i64 %33, ptr %34, align 8, !dbg !6260
  %35 = load i64, ptr %gval, align 8, !dbg !6261
  %36 = load ptr, ptr %ptr.addr, align 8, !dbg !6262
  %incdec.ptr35 = getelementptr inbounds i64, ptr %36, i32 1, !dbg !6262
  store ptr %incdec.ptr35, ptr %ptr.addr, align 8, !dbg !6262
  store i64 %35, ptr %36, align 8, !dbg !6263
  br label %while.cond, !dbg !6264

while.cond:                                       ; preds = %while.body, %sw.epilog
  %37 = load i64, ptr %nelts, align 8, !dbg !6265
  %dec = add nsw i64 %37, -1, !dbg !6265
  store i64 %dec, ptr %nelts, align 8, !dbg !6265
  %tobool = icmp ne i64 %37, 0, !dbg !6264
  br i1 %tobool, label %while.body, label %while.end, !dbg !6264

while.body:                                       ; preds = %while.cond
  %38 = load ptr, ptr %ptr.addr, align 8, !dbg !6266
  %incdec.ptr36 = getelementptr inbounds i64, ptr %38, i32 1, !dbg !6266
  store ptr %incdec.ptr36, ptr %ptr.addr, align 8, !dbg !6266
  %39 = load i64, ptr %38, align 8, !dbg !6267
  %40 = load ptr, ptr %htop, align 8, !dbg !6268
  %incdec.ptr37 = getelementptr inbounds i64, ptr %40, i32 1, !dbg !6268
  store ptr %incdec.ptr37, ptr %htop, align 8, !dbg !6268
  store i64 %39, ptr %40, align 8, !dbg !6269
  br label %while.cond, !dbg !6264, !llvm.loop !6270

while.end:                                        ; preds = %while.cond
  %41 = load ptr, ptr %htop, align 8, !dbg !6271
  %42 = load ptr, ptr %hpp.addr, align 8, !dbg !6272
  store ptr %41, ptr %42, align 8, !dbg !6273
  %43 = load ptr, ptr %ptr.addr, align 8, !dbg !6274
  store ptr %43, ptr %retval, align 8, !dbg !6275
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup38, !dbg !6275

cleanup38:                                        ; preds = %while.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %htop) #8, !dbg !6276
  call void @llvm.lifetime.end.p0(i64 8, ptr %nelts) #8, !dbg !6276
  call void @llvm.lifetime.end.p0(i64 8, ptr %gval) #8, !dbg !6276
  %44 = load ptr, ptr %retval, align 8, !dbg !6276
  ret ptr %44, !dbg !6276
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @move_cons(ptr noalias noundef %ptr, i64 noundef %car, ptr noundef %hpp, ptr noundef %orig) #2 !dbg !6277 {
entry:
  %ptr.addr = alloca ptr, align 8
  %car.addr = alloca i64, align 8
  %hpp.addr = alloca ptr, align 8
  %orig.addr = alloca ptr, align 8
  %htop = alloca ptr, align 8
  %gval = alloca i64, align 8
  store ptr %ptr, ptr %ptr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !6281, metadata !DIExpression()), !dbg !6287
  store i64 %car, ptr %car.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %car.addr, metadata !6282, metadata !DIExpression()), !dbg !6288
  store ptr %hpp, ptr %hpp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %hpp.addr, metadata !6283, metadata !DIExpression()), !dbg !6289
  store ptr %orig, ptr %orig.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %orig.addr, metadata !6284, metadata !DIExpression()), !dbg !6290
  call void @llvm.lifetime.start.p0(i64 8, ptr %htop) #8, !dbg !6291
  tail call void @llvm.dbg.declare(metadata ptr %htop, metadata !6285, metadata !DIExpression()), !dbg !6292
  %0 = load ptr, ptr %hpp.addr, align 8, !dbg !6293
  %1 = load ptr, ptr %0, align 8, !dbg !6294
  store ptr %1, ptr %htop, align 8, !dbg !6292
  call void @llvm.lifetime.start.p0(i64 8, ptr %gval) #8, !dbg !6295
  tail call void @llvm.dbg.declare(metadata ptr %gval, metadata !6286, metadata !DIExpression()), !dbg !6296
  %2 = load i64, ptr %car.addr, align 8, !dbg !6297
  %3 = load ptr, ptr %htop, align 8, !dbg !6298
  %arrayidx = getelementptr inbounds i64, ptr %3, i64 0, !dbg !6298
  store i64 %2, ptr %arrayidx, align 8, !dbg !6299
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !6300
  %arrayidx1 = getelementptr inbounds i64, ptr %4, i64 1, !dbg !6300
  %5 = load i64, ptr %arrayidx1, align 8, !dbg !6300
  %6 = load ptr, ptr %htop, align 8, !dbg !6301
  %arrayidx2 = getelementptr inbounds i64, ptr %6, i64 1, !dbg !6301
  store i64 %5, ptr %arrayidx2, align 8, !dbg !6302
  %7 = load ptr, ptr %htop, align 8, !dbg !6303
  %8 = ptrtoint ptr %7 to i64, !dbg !6303
  %add = add i64 %8, 1, !dbg !6303
  store i64 %add, ptr %gval, align 8, !dbg !6304
  %9 = load i64, ptr %gval, align 8, !dbg !6305
  %10 = load ptr, ptr %orig.addr, align 8, !dbg !6306
  store i64 %9, ptr %10, align 8, !dbg !6307
  %11 = load ptr, ptr %ptr.addr, align 8, !dbg !6308
  %arrayidx3 = getelementptr inbounds i64, ptr %11, i64 0, !dbg !6308
  store i64 0, ptr %arrayidx3, align 8, !dbg !6309
  %12 = load i64, ptr %gval, align 8, !dbg !6310
  %13 = load ptr, ptr %ptr.addr, align 8, !dbg !6311
  %arrayidx4 = getelementptr inbounds i64, ptr %13, i64 1, !dbg !6311
  store i64 %12, ptr %arrayidx4, align 8, !dbg !6312
  %14 = load ptr, ptr %hpp.addr, align 8, !dbg !6313
  %15 = load ptr, ptr %14, align 8, !dbg !6314
  %add.ptr = getelementptr inbounds i64, ptr %15, i64 2, !dbg !6314
  store ptr %add.ptr, ptr %14, align 8, !dbg !6314
  call void @llvm.lifetime.end.p0(i64 8, ptr %gval) #8, !dbg !6315
  call void @llvm.lifetime.end.p0(i64 8, ptr %htop) #8, !dbg !6315
  ret void, !dbg !6315
}

declare !dbg !6316 ptr @erts_sub_binary_to_heap_binary(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #5

attributes #0 = { nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { inlinehint nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { alwaysinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { noreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { nounwind }
attributes #9 = { noreturn }

!llvm.dbg.cu = !{!57}
!llvm.module.flags = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676}
!llvm.ident = !{!1677}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 201, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "beam/copy.c", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "4ac96d56361a8170682c3a0cc66b268a")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 272, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 34)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 233, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 328, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 41)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 250, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 240, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 30)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 461, type: !3, isLocal: true, isDefinition: true)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(scope: null, file: !2, line: 465, type: !9, isLocal: true, isDefinition: true)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(scope: null, file: !2, line: 480, type: !14, isLocal: true, isDefinition: true)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(scope: null, file: !2, line: 677, type: !25, isLocal: true, isDefinition: true)
!25 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 416, elements: !26)
!26 = !{!27}
!27 = !DISubrange(count: 52)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(scope: null, file: !2, line: 678, type: !30, isLocal: true, isDefinition: true)
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !31)
!31 = !{!32}
!32 = !DISubrange(count: 12)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(scope: null, file: !2, line: 936, type: !3, isLocal: true, isDefinition: true)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(scope: null, file: !2, line: 941, type: !9, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(scope: null, file: !2, line: 988, type: !39, isLocal: true, isDefinition: true)
!39 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 424, elements: !40)
!40 = !{!41}
!41 = !DISubrange(count: 53)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1354, type: !44, isLocal: true, isDefinition: true)
!44 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 352, elements: !45)
!45 = !{!46}
!46 = !DISubrange(count: 44)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1389, type: !49, isLocal: true, isDefinition: true)
!49 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 312, elements: !50)
!50 = !{!51}
!51 = !DISubrange(count: 39)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1666, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 336, elements: !55)
!55 = !{!56}
!56 = !DISubrange(count: 42)
!57 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !58, retainedTypes: !91, globals: !1669, splitDebugInlining: false, nameTableKind: None)
!58 = !{!59, !68, !74, !79, !86}
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !60, line: 402, baseType: !61, size: 32, elements: !62)
!60 = !DIFile(filename: "beam/erl_process.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "195a4f5708a2e5b1a4e6427c140de0d6")
!61 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!62 = !{!63, !64, !65, !66, !67}
!63 = !DIEnumerator(name: "ERTS_SCHED_NORMAL", value: 0)
!64 = !DIEnumerator(name: "ERTS_SCHED_DIRTY_CPU", value: 1)
!65 = !DIEnumerator(name: "ERTS_SCHED_DIRTY_IO", value: 2)
!66 = !DIEnumerator(name: "ERTS_SCHED_TYPE_FIRST", value: 0)
!67 = !DIEnumerator(name: "ERTS_SCHED_TYPE_LAST", value: 2)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !69, line: 278, baseType: !61, size: 32, elements: !70)
!69 = !DIFile(filename: "../include/internal/ethr_mutex.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "61566c36e65c37acda5584360ac51ac5")
!70 = !{!71, !72, !73}
!71 = !DIEnumerator(name: "ETHR_RWMUTEX_TYPE_NORMAL", value: 0)
!72 = !DIEnumerator(name: "ETHR_RWMUTEX_TYPE_FREQUENT_READ", value: 1)
!73 = !DIEnumerator(name: "ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ", value: 2)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !69, line: 284, baseType: !61, size: 32, elements: !75)
!75 = !{!76, !77, !78}
!76 = !DIEnumerator(name: "ETHR_RWMUTEX_LONG_LIVED", value: 0)
!77 = !DIEnumerator(name: "ETHR_RWMUTEX_SHORT_LIVED", value: 1)
!78 = !DIEnumerator(name: "ETHR_RWMUTEX_UNKNOWN_LIVED", value: 2)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dist_entry_state", file: !80, line: 71, baseType: !61, size: 32, elements: !81)
!80 = !DIFile(filename: "beam/erl_node_tables.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "38c36124386684069df711c6ef9fd97f")
!81 = !{!82, !83, !84, !85}
!82 = !DIEnumerator(name: "ERTS_DE_STATE_IDLE", value: 0)
!83 = !DIEnumerator(name: "ERTS_DE_STATE_PENDING", value: 1)
!84 = !DIEnumerator(name: "ERTS_DE_STATE_CONNECTED", value: 2)
!85 = !DIEnumerator(name: "ERTS_DE_STATE_EXITING", value: 3)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 66, baseType: !61, size: 32, elements: !88)
!87 = !DIFile(filename: "beam/erl_vm.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "bff97e155e61ef716617d350cfdcd4a3")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "ERTS_FRAME_LAYOUT_RA", value: 0)
!90 = !DIEnumerator(name: "ERTS_FRAME_LAYOUT_FP_RA", value: 1)
!91 = !{!92, !96, !98, !242, !250, !61, !251, !128, !93, !263, !195, !264, !228, !290, !288, !298, !1618, !1666, !395, !1667, !1668, !149}
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "Eterm", file: !94, line: 387, baseType: !95, align: 64)
!94 = !DIFile(filename: "beam/sys.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "af6a912e6d7fefa1a07e40fb2ca7b705")
!95 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sint", file: !94, line: 389, baseType: !97, align: 64)
!97 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlFunThing", file: !100, line: 78, baseType: !101)
!100 = !DIFile(filename: "beam/erl_fun.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "1765fa41ef6f03d12665f11e2ed8ab02")
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_fun_thing", file: !100, line: 53, size: 320, elements: !102)
!102 = !{!103, !104, !227, !235, !236, !237, !238}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "thing_word", scope: !101, file: !100, line: 54, baseType: !93, size: 64, align: 64)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !101, file: !100, line: 67, baseType: !105, size: 64, offset: 64)
!105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !101, file: !100, line: 56, size: 64, elements: !106)
!106 = !{!107, !120, !152}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !105, file: !100, line: 60, baseType: !108, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsDispatchable", file: !110, line: 83, baseType: !111)
!110 = !DIFile(filename: "beam/code_ix.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "db5040da5f221f8691a869dd0df32c8a")
!111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsDispatchable_", file: !110, line: 81, size: 256, elements: !112)
!112 = !{!113}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "addresses", scope: !111, file: !110, line: 82, baseType: !114, size: 256)
!114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 256, elements: !118)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsCodePtr", file: !94, line: 431, baseType: !116)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!118 = !{!119}
!119 = !DISubrange(count: 4)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "fun", scope: !105, file: !100, line: 63, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlFunEntry", file: !100, line: 47, baseType: !123)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_fun_entry", file: !100, line: 29, size: 768, elements: !124)
!124 = !{!125, !126, !127, !129, !131, !137, !138, !139, !151}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !123, file: !100, line: 33, baseType: !109, size: 256)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !123, file: !100, line: 37, baseType: !93, size: 64, align: 64, offset: 256)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !123, file: !100, line: 38, baseType: !128, size: 64, align: 64, offset: 320)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uint", file: !94, line: 388, baseType: !95, align: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !123, file: !100, line: 39, baseType: !130, size: 32, offset: 384)
!130 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !123, file: !100, line: 40, baseType: !132, size: 128, offset: 416)
!132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 128, elements: !135)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte", file: !94, line: 501, baseType: !134)
!134 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !{!136}
!136 = !DISubrange(count: 16)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "old_uniq", scope: !123, file: !100, line: 41, baseType: !130, size: 32, offset: 544)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "old_index", scope: !123, file: !100, line: 42, baseType: !130, size: 32, offset: 576)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "refc", scope: !123, file: !100, line: 44, baseType: !140, size: 64, offset: 640)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_refc_t", file: !94, line: 913, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_atomic_t", file: !142, line: 251, baseType: !143)
!142 = !DIFile(filename: "../include/internal/ethr_atomics.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "0868276c2cf7e434a2bb3ae2ba0c3c1f")
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_native_atomic64_t", file: !144, line: 70, baseType: !145)
!144 = !DIFile(filename: "../include/internal/x86_64/../i386/atomic.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "780edaa731e559eba3484eec8fe37eac")
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !144, line: 68, size: 64, elements: !146)
!146 = !{!147}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !145, file: !144, line: 69, baseType: !148, size: 64)
!148 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !149)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_sint64_t", file: !150, line: 233, baseType: !97)
!150 = !DIFile(filename: "../include/internal/ethread.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "3a8627a9dde9984376f63b0c0d9f0300")
!151 = !DIDerivedType(tag: DW_TAG_member, name: "pend_purge_address", scope: !123, file: !100, line: 46, baseType: !115, size: 64, offset: 704)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !105, file: !100, line: 66, baseType: !153, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "Export", file: !155, line: 110, baseType: !156)
!155 = !DIFile(filename: "beam/export.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "74b4befcc7400473c678c6f09edc8d49")
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "export_", file: !155, line: 40, size: 832, elements: !157)
!157 = !{!158, !159, !160, !161, !186}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !156, file: !155, line: 53, baseType: !109, size: 256)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "bif_number", scope: !156, file: !155, line: 56, baseType: !130, size: 32, offset: 256)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "is_bif_traced", scope: !156, file: !155, line: 58, baseType: !130, size: 32, offset: 288)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !156, file: !155, line: 65, baseType: !162, size: 320, offset: 320)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsCodeInfo", file: !110, line: 119, baseType: !163)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsCodeInfo_", file: !110, line: 100, size: 320, elements: !164)
!164 = !{!165, !176, !179}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !163, file: !110, line: 114, baseType: !166, size: 64)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !163, file: !110, line: 105, size: 64, elements: !167)
!167 = !{!168}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !166, file: !110, line: 112, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !166, file: !110, line: 109, size: 64, elements: !170)
!170 = !{!171, !175}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "raise_function_clause", scope: !169, file: !110, line: 110, baseType: !172, size: 56)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 56, elements: !173)
!173 = !{!174}
!174 = !DISubrange(count: 7)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "breakpoint_flag", scope: !169, file: !110, line: 111, baseType: !4, size: 8, offset: 56)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "gen_bp", scope: !163, file: !110, line: 117, baseType: !177, size: 64, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_bp", file: !110, line: 117, flags: DIFlagFwdDecl)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "mfa", scope: !163, file: !110, line: 118, baseType: !180, size: 192, offset: 128)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsCodeMFA", file: !110, line: 91, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsCodeMFA_", file: !110, line: 87, size: 192, elements: !182)
!182 = !{!183, !184, !185}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !181, file: !110, line: 88, baseType: !93, size: 64, align: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !181, file: !110, line: 89, baseType: !93, size: 64, align: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !181, file: !110, line: 90, baseType: !128, size: 64, align: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline", scope: !156, file: !155, line: 109, baseType: !187, size: 192, offset: 640)
!187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !156, file: !155, line: 66, size: 192, elements: !188)
!188 = !{!189, !199, !205, !211, !217, !223}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !187, file: !155, line: 70, baseType: !190, size: 128)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !187, file: !155, line: 67, size: 128, elements: !191)
!191 = !{!192, !198}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !190, file: !155, line: 68, baseType: !193, size: 64, align: 64)
!193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, align: 64, elements: !196)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "BeamInstr", file: !94, line: 432, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "UWord", file: !94, line: 427, baseType: !128)
!196 = !{!197}
!197 = !DISubrange(count: 1)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !190, file: !155, line: 69, baseType: !194, size: 64, align: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "bif", scope: !187, file: !155, line: 76, baseType: !200, size: 192)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !187, file: !155, line: 72, size: 192, elements: !201)
!201 = !{!202, !203, !204}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !200, file: !155, line: 73, baseType: !193, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !200, file: !155, line: 74, baseType: !194, size: 64, align: 64, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !200, file: !155, line: 75, baseType: !194, size: 64, align: 64, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "breakpoint", scope: !187, file: !155, line: 82, baseType: !206, size: 192)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !187, file: !155, line: 78, size: 192, elements: !207)
!207 = !{!208, !209, !210}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !206, file: !155, line: 79, baseType: !193, size: 64, align: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !206, file: !155, line: 80, baseType: !194, size: 64, align: 64, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !206, file: !155, line: 81, baseType: !194, size: 64, align: 64, offset: 128)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "not_loaded", scope: !187, file: !155, line: 100, baseType: !212, size: 192)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !187, file: !155, line: 94, size: 192, elements: !213)
!213 = !{!214, !215, !216}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !212, file: !155, line: 95, baseType: !193, size: 64, align: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !212, file: !155, line: 96, baseType: !194, size: 64, align: 64, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "deferred", scope: !212, file: !155, line: 99, baseType: !194, size: 64, align: 64, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "trace", scope: !187, file: !155, line: 106, baseType: !218, size: 192)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !187, file: !155, line: 102, size: 192, elements: !219)
!219 = !{!220, !221, !222}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !218, file: !155, line: 103, baseType: !193, size: 64, align: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !218, file: !155, line: 104, baseType: !194, size: 64, align: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !218, file: !155, line: 105, baseType: !194, size: 64, align: 64, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !187, file: !155, line: 107, baseType: !224, size: 192, align: 64)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 192, align: 64, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 3)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !101, file: !100, line: 70, baseType: !228, size: 64, offset: 128)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_off_heap_header", file: !230, line: 68, size: 192, elements: !231)
!230 = !DIFile(filename: "beam/erl_message.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "242435a6f93ffcb553e1bc85abeaf975")
!231 = !{!232, !233, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "thing_word", scope: !229, file: !230, line: 69, baseType: !93, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !230, line: 70, baseType: !128, size: 64, align: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !229, file: !230, line: 71, baseType: !228, size: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !101, file: !100, line: 72, baseType: !133, size: 8, offset: 192)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "num_free", scope: !101, file: !100, line: 73, baseType: !133, size: 8, offset: 200)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "creator", scope: !101, file: !100, line: 76, baseType: !93, size: 64, align: 64, offset: 256)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !101, file: !100, line: 77, baseType: !239, offset: 320)
!239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, align: 64, elements: !240)
!240 = !{!241}
!241 = !DISubrange(count: -1)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "flatmap_t", file: !244, line: 42, baseType: !245)
!244 = !DIFile(filename: "beam/erl_map.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "15a35fe641144e94449af4e3ea6afdcc")
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flatmap_s", file: !244, line: 38, size: 192, elements: !246)
!246 = !{!247, !248, !249}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "thing_word", scope: !245, file: !244, line: 39, baseType: !93, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !245, file: !244, line: 40, baseType: !128, size: 64, align: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !245, file: !244, line: 41, baseType: !93, size: 64, align: 64, offset: 128)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uint32", file: !94, line: 464, baseType: !61)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlSubBin", file: !253, line: 39, baseType: !254)
!253 = !DIFile(filename: "beam/erl_bits.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "40036026cb49446a403cc74a305c7898")
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_sub_bin", file: !253, line: 31, size: 320, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261, !262}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "thing_word", scope: !254, file: !253, line: 32, baseType: !93, size: 64, align: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !254, file: !253, line: 33, baseType: !128, size: 64, align: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "offs", scope: !254, file: !253, line: 34, baseType: !128, size: 64, align: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "bitsize", scope: !254, file: !253, line: 35, baseType: !133, size: 8, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "bitoffs", scope: !254, file: !253, line: 36, baseType: !133, size: 8, offset: 200)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "is_writable", scope: !254, file: !253, line: 37, baseType: !133, size: 8, offset: 208)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !254, file: !253, line: 38, baseType: !93, size: 64, align: 64, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProcBin", file: !266, line: 284, baseType: !267)
!266 = !DIFile(filename: "beam/global.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "97d63098f45f42d23e68038cf4585503")
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proc_bin", file: !266, line: 277, size: 384, elements: !268)
!268 = !{!269, !270, !271, !272, !287, !289}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "thing_word", scope: !267, file: !266, line: 278, baseType: !93, size: 64, align: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !267, file: !266, line: 279, baseType: !128, size: 64, align: 64, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !267, file: !266, line: 280, baseType: !228, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !267, file: !266, line: 281, baseType: !273, size: 64, offset: 192)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "Binary", file: !275, line: 57, baseType: !276)
!275 = !DIFile(filename: "beam/erl_binary.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "367f042ba8d838c1ea1fb25eeeaf8034")
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "binary", file: !275, line: 53, size: 256, elements: !277)
!277 = !{!278, !283, !285}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "intern", scope: !276, file: !275, line: 54, baseType: !279, size: 128)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "binary_internals", file: !275, line: 46, size: 128, elements: !280)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !279, file: !275, line: 47, baseType: !195, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "refc", scope: !279, file: !275, line: 48, baseType: !140, size: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "orig_size", scope: !276, file: !275, line: 55, baseType: !284, size: 64, align: 64, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "SWord", file: !94, line: 428, baseType: !96)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "orig_bytes", scope: !276, file: !275, line: 56, baseType: !286, size: 8, offset: 192)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 8, elements: !196)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !267, file: !266, line: 282, baseType: !288, size: 64, offset: 256)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !267, file: !266, line: 283, baseType: !128, size: 64, align: 64, offset: 320)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlHeapBin", file: !275, line: 178, baseType: !292)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_heap_bin", file: !275, line: 174, size: 192, elements: !293)
!293 = !{!294, !295, !296}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "thing_word", scope: !292, file: !275, line: 175, baseType: !93, size: 64, align: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !292, file: !275, line: 176, baseType: !128, size: 64, align: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !292, file: !275, line: 177, baseType: !297, size: 64, align: 64, offset: 128)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 64, align: 64, elements: !196)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExternalThing", file: !300, line: 1102, baseType: !301)
!300 = !DIFile(filename: "beam/erl_term.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "2a5c94601a3cf0988984ef3ff4818003")
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_thing_", file: !300, line: 1080, size: 256, elements: !302)
!302 = !{!303, !304, !1601, !1602}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !301, file: !300, line: 1082, baseType: !93, size: 64, align: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !301, file: !300, line: 1083, baseType: !305, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_node_", file: !80, line: 215, size: 384, elements: !307)
!307 = !{!308, !317, !318, !319, !320}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "hash_bucket", scope: !306, file: !80, line: 216, baseType: !309, size: 128)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "HashBucket", file: !310, line: 52, baseType: !311)
!310 = !DIFile(filename: "beam/hash.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "17db9d603a44594f9dff34ccb25282f2")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_bucket", file: !310, line: 48, size: 128, elements: !312)
!312 = !{!313, !315}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !311, file: !310, line: 50, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "hvalue", scope: !311, file: !310, line: 51, baseType: !316, size: 64, align: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "HashValue", file: !310, line: 30, baseType: !195)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "refc", scope: !306, file: !80, line: 217, baseType: !140, size: 64, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "sysname", scope: !306, file: !80, line: 218, baseType: !93, size: 64, align: 64, offset: 192)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "creation", scope: !306, file: !80, line: 219, baseType: !250, size: 32, offset: 256)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "dist_entry", scope: !306, file: !80, line: 220, baseType: !321, size: 64, offset: 320)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "DistEntry", file: !80, line: 24, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dist_entry_", file: !80, line: 128, size: 3200, elements: !324)
!324 = !{!325, !326, !328, !329, !425, !426, !427, !428, !429, !430, !431, !432, !1542, !1543, !1544, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1580, !1582, !1583, !1584, !1585, !1586, !1590, !1597, !1598}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "hash_bucket", scope: !323, file: !80, line: 129, baseType: !309, size: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !80, line: 130, baseType: !327, size: 64, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !323, file: !80, line: 131, baseType: !327, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "rwmtx", scope: !323, file: !80, line: 133, baseType: !330, size: 640, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_rwmtx_t", file: !331, line: 341, baseType: !332)
!331 = !DIFile(filename: "beam/erl_threads.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "82bfa44c29e44f8f381502768fffa95f")
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !331, line: 327, size: 640, elements: !333)
!333 = !{!334}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "rwmtx", scope: !332, file: !331, line: 328, baseType: !335, size: 640)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_rwmutex", file: !69, line: 312, baseType: !336)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethr_rwmutex_", file: !69, line: 313, size: 640, elements: !337)
!337 = !{!338, !401, !403, !404}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "mtxb", scope: !336, file: !69, line: 314, baseType: !339, size: 448)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethr_mutex_base_", file: !69, line: 141, size: 448, elements: !340)
!340 = !{!341, !349, !351, !352, !381}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "flgs", scope: !339, file: !69, line: 145, baseType: !342, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_atomic32_t", file: !142, line: 192, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_native_atomic32_t", file: !144, line: 70, baseType: !344)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !144, line: 68, size: 32, elements: !345)
!345 = !{!346}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !344, file: !144, line: 69, baseType: !347, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_sint32_t", file: !150, line: 217, baseType: !130)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "aux_scnt", scope: !339, file: !69, line: 146, baseType: !350, size: 16, offset: 32)
!350 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "main_scnt", scope: !339, file: !69, line: 147, baseType: !350, size: 16, offset: 48)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "qlck", scope: !339, file: !69, line: 148, baseType: !353, size: 320, offset: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !354, line: 72, baseType: !355)
!354 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "735e3bf264ff9d8f5d95898b1692fbdb")
!355 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !354, line: 67, size: 320, elements: !356)
!356 = !{!357, !376, !380}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !355, file: !354, line: 69, baseType: !358, size: 320)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !359, line: 22, size: 320, elements: !360)
!359 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", directory: "", checksumkind: CSK_MD5, checksum: "584baedd80e6041b81caae7f496091c0")
!360 = !{!361, !362, !363, !364, !365, !366, !367, !368}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !358, file: !359, line: 24, baseType: !130, size: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !358, file: !359, line: 25, baseType: !61, size: 32, offset: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !358, file: !359, line: 26, baseType: !130, size: 32, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !358, file: !359, line: 28, baseType: !61, size: 32, offset: 96)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !358, file: !359, line: 32, baseType: !130, size: 32, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !358, file: !359, line: 34, baseType: !350, size: 16, offset: 160)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !358, file: !359, line: 35, baseType: !350, size: 16, offset: 176)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !358, file: !359, line: 36, baseType: !369, size: 128, offset: 192)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !370, line: 55, baseType: !371)
!370 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "", checksumkind: CSK_MD5, checksum: "04c81e86d34dad9c99ad006d32e47a0d")
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !370, line: 51, size: 128, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !371, file: !370, line: 53, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !371, file: !370, line: 54, baseType: !374, size: 64, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !355, file: !354, line: 70, baseType: !377, size: 320)
!377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 320, elements: !378)
!378 = !{!379}
!379 = !DISubrange(count: 40)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !355, file: !354, line: 71, baseType: !97, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !339, file: !69, line: 149, baseType: !382, size: 64, offset: 384)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_ts_event", file: !150, line: 619, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethr_ts_event_", file: !150, line: 630, size: 384, elements: !385)
!385 = !{!386, !387, !388, !394, !396, !397, !398, !399, !400}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !384, file: !150, line: 631, baseType: !382, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !384, file: !150, line: 632, baseType: !382, size: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !384, file: !150, line: 633, baseType: !389, size: 32, offset: 128)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_event", file: !390, line: 48, baseType: !391)
!390 = !DIFile(filename: "../include/internal/pthread/ethr_event.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "dcd7a60f971e3ca69b3c77705784413b")
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !390, line: 46, size: 32, elements: !392)
!392 = !{!393}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !391, file: !390, line: 47, baseType: !342, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "udata", scope: !384, file: !150, line: 634, baseType: !395, size: 64, offset: 192)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "uaflgs", scope: !384, file: !150, line: 635, baseType: !342, size: 32, offset: 256)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "uflgs", scope: !384, file: !150, line: 636, baseType: !61, size: 32, offset: 288)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "iflgs", scope: !384, file: !150, line: 637, baseType: !61, size: 32, offset: 320)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "rgix", scope: !384, file: !150, line: 638, baseType: !350, size: 16, offset: 352)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "mtix", scope: !384, file: !150, line: 639, baseType: !350, size: 16, offset: 368)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !336, file: !69, line: 315, baseType: !402, size: 32, offset: 448)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_rwmutex_type", file: !69, line: 282, baseType: !68)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "rq_end", scope: !336, file: !69, line: 316, baseType: !382, size: 64, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "tdata", scope: !336, file: !69, line: 320, baseType: !405, size: 64, offset: 576)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !336, file: !69, line: 317, size: 64, elements: !406)
!406 = !{!407, !424}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !405, file: !69, line: 318, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_rwmtx_readers_array__", file: !69, line: 310, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !69, line: 302, size: 512, elements: !411)
!411 = !{!412, !420}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !69, line: 308, baseType: !413, size: 128)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !410, file: !69, line: 303, size: 128, elements: !414)
!414 = !{!415, !416, !417, !418}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !413, file: !69, line: 304, baseType: !342, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "waiting_readers", scope: !413, file: !69, line: 305, baseType: !130, size: 32, offset: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "byte_offset", scope: !413, file: !69, line: 306, baseType: !130, size: 32, offset: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lived", scope: !413, file: !69, line: 307, baseType: !419, size: 32, offset: 96)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_rwmutex_lived", file: !69, line: 288, baseType: !74)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "align__", scope: !410, file: !69, line: 309, baseType: !421, size: 512)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 512, elements: !422)
!422 = !{!423}
!423 = !DISubrange(count: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "rs", scope: !405, file: !69, line: 319, baseType: !130, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "sysname", scope: !323, file: !80, line: 134, baseType: !93, size: 64, align: 64, offset: 896)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "creation", scope: !323, file: !80, line: 135, baseType: !250, size: 32, offset: 960)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "input_handler", scope: !323, file: !80, line: 136, baseType: !141, size: 64, offset: 1024)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !323, file: !80, line: 137, baseType: !93, size: 64, align: 64, offset: 1088)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "connection_id", scope: !323, file: !80, line: 139, baseType: !250, size: 32, offset: 1152)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !323, file: !80, line: 140, baseType: !79, size: 32, offset: 1184)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "pending_nodedown", scope: !323, file: !80, line: 141, baseType: !130, size: 32, offset: 1216)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_nodeup", scope: !323, file: !80, line: 142, baseType: !433, size: 64, offset: 1280)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "Process", file: !60, line: 40, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "process", file: !60, line: 1007, size: 6208, elements: !436)
!436 = !{!437, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !948, !1010, !1015, !1027, !1028, !1029, !1030, !1037, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1062, !1066, !1067, !1068, !1069, !1077, !1078, !1089, !1099, !1541}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !435, file: !60, line: 1008, baseType: !438, size: 640)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPTabElementCommon", file: !439, line: 81, baseType: !440)
!439 = !DIFile(filename: "beam/erl_ptab.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "224b2c36bdd1b9f23159564b3830979f")
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !439, line: 56, size: 640, elements: !441)
!441 = !{!442, !443, !448, !450, !451, !452}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !440, file: !439, line: 57, baseType: !93, size: 64, align: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "refc", scope: !440, file: !439, line: 61, baseType: !444, size: 64, offset: 64)
!444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !440, file: !439, line: 58, size: 64, elements: !445)
!445 = !{!446, !447}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "atmc", scope: !444, file: !439, line: 59, baseType: !141, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !444, file: !439, line: 60, baseType: !96, size: 64, align: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "tracer", scope: !440, file: !439, line: 62, baseType: !449, size: 64, align: 64, offset: 128)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsTracer", file: !94, line: 709, baseType: !93)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "trace_flags", scope: !440, file: !439, line: 63, baseType: !128, size: 64, align: 64, offset: 192)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !440, file: !439, line: 64, baseType: !141, size: 64, offset: 256)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !440, file: !439, line: 80, baseType: !453, size: 320, offset: 320)
!453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !440, file: !439, line: 65, size: 320, elements: !454)
!454 = !{!455, !903}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !453, file: !439, line: 76, baseType: !456, size: 320)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !453, file: !439, line: 67, size: 320, elements: !457)
!457 = !{!458, !460, !824, !899, !902}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "started_interval", scope: !456, file: !439, line: 68, baseType: !459, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uint64", file: !94, line: 437, baseType: !95)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !456, file: !439, line: 69, baseType: !461, size: 64, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_proc", file: !463, line: 35, size: 320, elements: !464)
!463 = !DIFile(filename: "beam/register.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "d24619ff68daafe23d6893a43069132a")
!464 = !{!465, !466, !467, !823}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !462, file: !463, line: 37, baseType: !309, size: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !462, file: !463, line: 38, baseType: !433, size: 64, offset: 128)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !462, file: !463, line: 40, baseType: !468, size: 64, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "Port", file: !470, line: 23, baseType: !471)
!470 = !DIFile(filename: "beam/erl_port.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "70700c05b382a33a024c1bc36728dfa6")
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_erl_drv_port", file: !470, line: 144, size: 4480, elements: !472)
!472 = !{!473, !474, !530, !532, !534, !538, !539, !540, !541, !542, !543, !544, !592, !593, !780, !781, !782, !795, !804, !805, !806, !814, !815, !816}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !471, file: !470, line: 145, baseType: !438, size: 640)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !471, file: !470, line: 147, baseType: !475, size: 960, offset: 640)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPortTaskSched", file: !476, line: 125, baseType: !477)
!476 = !DIFile(filename: "beam/erl_port_task.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "159403a7994f3385b33829b6fe242a1e")
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 105, size: 960, elements: !478)
!478 = !{!479, !480, !520, !521}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !477, file: !476, line: 106, baseType: !468, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "taskq", scope: !477, file: !476, line: 122, baseType: !481, size: 512, offset: 64)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !477, file: !476, line: 107, size: 512, elements: !482)
!482 = !{!483, !503, !508}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !481, file: !476, line: 116, baseType: !484, size: 320)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !481, file: !476, line: 108, size: 320, elements: !485)
!485 = !{!486, !502}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !484, file: !476, line: 114, baseType: !487, size: 256)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !484, file: !476, line: 109, size: 256, elements: !488)
!488 = !{!489, !493, !494, !498}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !487, file: !476, line: 110, baseType: !490, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPortTask", file: !476, line: 101, baseType: !492)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsPortTask_", file: !476, line: 101, flags: DIFlagFwdDecl)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !487, file: !476, line: 111, baseType: !490, size: 64, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !487, file: !476, line: 112, baseType: !495, size: 64, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPortTaskBusyCallerTable", file: !476, line: 102, baseType: !497)
!497 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsPortTaskBusyCallerTable_", file: !476, line: 102, flags: DIFlagFwdDecl)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "nosuspend", scope: !487, file: !476, line: 113, baseType: !499, size: 64, offset: 192)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPortTaskHandleList", file: !476, line: 103, baseType: !501)
!501 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsPortTaskHandleList_", file: !476, line: 103, flags: DIFlagFwdDecl)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !484, file: !476, line: 115, baseType: !490, size: 64, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !481, file: !476, line: 120, baseType: !504, size: 128, offset: 320)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !481, file: !476, line: 117, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !504, file: !476, line: 118, baseType: !490, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !504, file: !476, line: 119, baseType: !490, size: 64, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "bpq", scope: !481, file: !476, line: 121, baseType: !509, size: 64, offset: 448)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPortTaskBusyPortQ", file: !476, line: 99, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 95, size: 192, elements: !512)
!512 = !{!513, !518, !519}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !511, file: !476, line: 96, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvSizeT", file: !515, line: 125, baseType: !516)
!515 = !DIFile(filename: "beam/erl_driver.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "ca447108d3a14e37050ee901ef61de05")
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !517, line: 70, baseType: !95)
!517 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!518 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !511, file: !476, line: 97, baseType: !141, size: 64, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !511, file: !476, line: 98, baseType: !141, size: 64, offset: 128)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !477, file: !476, line: 123, baseType: !342, size: 32, offset: 576)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !477, file: !476, line: 124, baseType: !522, size: 320, offset: 640)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_mtx_t", file: !331, line: 323, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !331, line: 309, size: 320, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !523, file: !331, line: 310, baseType: !526, size: 320)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_mutex", file: !69, line: 216, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethr_mutex_", file: !69, line: 217, size: 320, elements: !528)
!528 = !{!529}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mtx", scope: !527, file: !69, line: 218, baseType: !353, size: 320)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_task", scope: !471, file: !470, line: 148, baseType: !531, size: 64, offset: 1600)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPortTaskHandle", file: !476, line: 34, baseType: !141)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !471, file: !470, line: 149, baseType: !533, size: 64, offset: 1664)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "xports", scope: !471, file: !470, line: 150, baseType: !535, size: 64, offset: 1728)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsXPortsList", file: !470, line: 124, baseType: !537)
!537 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsXPortsList_", file: !470, line: 124, flags: DIFlagFwdDecl)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "run_queue", scope: !471, file: !470, line: 151, baseType: !141, size: 64, offset: 1792)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "connected", scope: !471, file: !470, line: 152, baseType: !141, size: 64, offset: 1856)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !471, file: !470, line: 153, baseType: !93, size: 64, align: 64, offset: 1920)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !470, line: 154, baseType: !141, size: 64, offset: 1984)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_in", scope: !471, file: !470, line: 155, baseType: !128, size: 64, align: 64, offset: 2048)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_out", scope: !471, file: !470, line: 156, baseType: !128, size: 64, align: 64, offset: 2112)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ioq", scope: !471, file: !470, line: 158, baseType: !545, size: 1600, offset: 2176)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlPortIOQueue", file: !470, line: 81, baseType: !546)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsIOQueue", file: !547, line: 84, baseType: !548)
!547 = !DIFile(filename: "beam/erl_io_queue.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "53c1d3b7088ebd06bd4252e862b08e86")
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erts_io_queue", file: !547, line: 67, size: 1600, elements: !549)
!549 = !{!550, !553, !554, !555, !564, !565, !566, !567, !571, !587, !588, !589, !590}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "alct", scope: !548, file: !547, line: 68, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsAlcType_t", file: !552, line: 149, baseType: !250)
!552 = !DIFile(filename: "x86_64-pc-linux-gnu/opt/jit/erl_alloc_types.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "8c11eb1ba1ec3e485654fd54c7ca0ccf")
!553 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !548, file: !547, line: 69, baseType: !130, size: 32, offset: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !548, file: !547, line: 70, baseType: !128, size: 64, align: 64, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "v_start", scope: !548, file: !547, line: 72, baseType: !556, size: 64, offset: 128)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysIOVec", file: !558, line: 162, baseType: !559)
!558 = !DIFile(filename: "beam/erl_drv_nif.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "e8cb1cfda7850b58d04aafbc0a06a779")
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !560, line: 26, size: 128, elements: !561)
!560 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h", directory: "", checksumkind: CSK_MD5, checksum: "906dd4c9f8205bfe8a00a7ac49f298dc")
!561 = !{!562, !563}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !559, file: !560, line: 28, baseType: !395, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !559, file: !560, line: 29, baseType: !516, size: 64, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "v_end", scope: !548, file: !547, line: 73, baseType: !556, size: 64, offset: 192)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "v_head", scope: !548, file: !547, line: 74, baseType: !556, size: 64, offset: 256)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "v_tail", scope: !548, file: !547, line: 75, baseType: !556, size: 64, offset: 320)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "v_small", scope: !548, file: !547, line: 76, baseType: !568, size: 640, offset: 384)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 640, elements: !569)
!569 = !{!570}
!570 = !DISubrange(count: 5)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "b_start", scope: !548, file: !547, line: 78, baseType: !572, size: 64, offset: 1024)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsIOQBinary", file: !547, line: 48, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !547, line: 45, size: 256, elements: !576)
!576 = !{!577, !586}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !575, file: !547, line: 46, baseType: !578, size: 128)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvBinary", file: !515, line: 137, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_drv_binary", file: !515, line: 134, size: 128, elements: !580)
!580 = !{!581, !585}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "orig_size", scope: !579, file: !515, line: 135, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvSInt", file: !515, line: 118, baseType: !583)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlNapiSInt", file: !558, line: 128, baseType: !584)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlNapiSInt64", file: !558, line: 114, baseType: !97)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "orig_bytes", scope: !579, file: !515, line: 136, baseType: !286, size: 8, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "nif", scope: !575, file: !547, line: 47, baseType: !274, size: 256)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "b_end", scope: !548, file: !547, line: 79, baseType: !572, size: 64, offset: 1088)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "b_head", scope: !548, file: !547, line: 80, baseType: !572, size: 64, offset: 1152)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "b_tail", scope: !548, file: !547, line: 81, baseType: !572, size: 64, offset: 1216)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "b_small", scope: !548, file: !547, line: 82, baseType: !591, size: 320, offset: 1280)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 320, elements: !569)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !470, line: 159, baseType: !263, size: 64, offset: 3776)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "drv_ptr", scope: !471, file: !470, line: 160, baseType: !594, size: 64, offset: 3840)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_driver_t", file: !470, line: 56, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erts_driver_t_", file: !266, line: 213, size: 1536, elements: !597)
!597 = !{!598, !599, !600, !601, !602, !607, !608, !634, !635, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !596, file: !266, line: 214, baseType: !594, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !596, file: !266, line: 215, baseType: !594, size: 64, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "name_atom", scope: !596, file: !266, line: 216, baseType: !93, size: 64, align: 64, offset: 128)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !596, file: !266, line: 217, baseType: !263, size: 64, offset: 192)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !596, file: !266, line: 221, baseType: !603, size: 64, offset: 256)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !596, file: !266, line: 218, size: 64, elements: !604)
!604 = !{!605, !606}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !603, file: !266, line: 219, baseType: !130, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !603, file: !266, line: 220, baseType: !130, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !596, file: !266, line: 222, baseType: !130, size: 32, offset: 320)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !596, file: !266, line: 223, baseType: !609, size: 64, offset: 384)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "DE_Handle", file: !266, line: 207, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !266, line: 193, size: 640, elements: !612)
!612 = !{!613, !614, !626, !627, !628, !629, !630, !631, !632, !633}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !611, file: !266, line: 194, baseType: !395, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "procs", scope: !611, file: !266, line: 195, baseType: !615, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "DE_ProcEntry", file: !266, line: 191, baseType: !617)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "de_proc_entry", file: !266, line: 181, size: 448, elements: !618)
!618 = !{!619, !620, !621, !622, !624}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !617, file: !266, line: 182, baseType: !433, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "awaiting_status", scope: !617, file: !266, line: 183, baseType: !128, size: 64, align: 64, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !617, file: !266, line: 188, baseType: !128, size: 64, align: 64, offset: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !617, file: !266, line: 189, baseType: !623, size: 192, align: 64, offset: 192)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 192, align: 64, elements: !225)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !617, file: !266, line: 190, baseType: !625, size: 64, offset: 384)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "refc", scope: !611, file: !266, line: 197, baseType: !140, size: 64, offset: 128)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "port_count", scope: !611, file: !266, line: 199, baseType: !342, size: 32, offset: 192)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !611, file: !266, line: 200, baseType: !128, size: 64, align: 64, offset: 256)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !611, file: !266, line: 201, baseType: !130, size: 32, offset: 320)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "full_path", scope: !611, file: !266, line: 202, baseType: !263, size: 64, offset: 384)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "reload_full_path", scope: !611, file: !266, line: 203, baseType: !263, size: 64, offset: 448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "reload_driver_name", scope: !611, file: !266, line: 205, baseType: !263, size: 64, offset: 512)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "reload_flags", scope: !611, file: !266, line: 206, baseType: !128, size: 64, align: 64, offset: 576)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !596, file: !266, line: 224, baseType: !533, size: 64, offset: 448)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !596, file: !266, line: 225, baseType: !636, size: 64, offset: 512)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvEntry", file: !515, line: 281, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_drv_entry", file: !515, line: 215, size: 1408, elements: !639)
!639 = !{!640, !644, !687, !691, !695, !700, !701, !702, !706, !707, !716, !717, !731, !736, !737, !742, !743, !744, !745, !746, !747, !748, !760, !764}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !638, file: !515, line: 216, baseType: !641, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{!130}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !638, file: !515, line: 225, baseType: !645, size: 64, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{!648, !651, !263, !653}
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvData", file: !515, line: 144, baseType: !649)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DICompositeType(tag: DW_TAG_structure_type, name: "_erl_drv_data", file: !515, line: 144, flags: DIFlagFwdDecl)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvPort", file: !515, line: 148, baseType: !652)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysDriverOpts", file: !655, line: 36, baseType: !656)
!655 = !DIFile(filename: "beam/erl_sys_driver.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "4d9b344228e3cf7993d24c406dc28226")
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SysDriverOpts", file: !655, line: 45, size: 1024, elements: !657)
!657 = !{!658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !676, !678, !679, !680, !681, !682, !683, !684, !685, !686}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "ifd", scope: !656, file: !655, line: 46, baseType: !128, size: 64, align: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "ofd", scope: !656, file: !655, line: 47, baseType: !128, size: 64, align: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "packet_bytes", scope: !656, file: !655, line: 48, baseType: !130, size: 32, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "read_write", scope: !656, file: !655, line: 49, baseType: !130, size: 32, offset: 160)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "use_stdio", scope: !656, file: !655, line: 50, baseType: !130, size: 32, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "redir_stderr", scope: !656, file: !655, line: 51, baseType: !130, size: 32, offset: 224)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "hide_window", scope: !656, file: !655, line: 52, baseType: !130, size: 32, offset: 256)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "exit_status", scope: !656, file: !655, line: 53, baseType: !130, size: 32, offset: 288)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "overlapped_io", scope: !656, file: !655, line: 54, baseType: !130, size: 32, offset: 320)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "envir", scope: !656, file: !655, line: 55, baseType: !668, size: 128, offset: 384)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_osenv_t", file: !94, line: 720, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__erts_osenv_t", file: !94, line: 716, size: 128, elements: !670)
!670 = !{!671, !674, !675}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !669, file: !94, line: 717, baseType: !672, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DICompositeType(tag: DW_TAG_structure_type, name: "__env_rbtnode_t", file: !94, line: 717, flags: DIFlagFwdDecl)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "variable_count", scope: !669, file: !94, line: 718, baseType: !130, size: 32, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "content_size", scope: !669, file: !94, line: 719, baseType: !130, size: 32, offset: 96)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !656, file: !655, line: 56, baseType: !677, size: 64, offset: 512)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wd", scope: !656, file: !655, line: 57, baseType: !263, size: 64, offset: 576)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "spawn_type", scope: !656, file: !655, line: 58, baseType: !61, size: 32, offset: 640)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "parallelism", scope: !656, file: !655, line: 60, baseType: !130, size: 32, offset: 672)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "high_watermark", scope: !656, file: !655, line: 61, baseType: !514, size: 64, offset: 704)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "low_watermark", scope: !656, file: !655, line: 62, baseType: !514, size: 64, offset: 768)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "high_msgq_watermark", scope: !656, file: !655, line: 63, baseType: !514, size: 64, offset: 832)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "low_msgq_watermark", scope: !656, file: !655, line: 64, baseType: !514, size: 64, offset: 896)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "port_watermarks_set", scope: !656, file: !655, line: 65, baseType: !4, size: 8, offset: 960)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_watermarks_set", scope: !656, file: !655, line: 66, baseType: !4, size: 8, offset: 968)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !638, file: !515, line: 228, baseType: !688, size: 64, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{null, !648}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !638, file: !515, line: 231, baseType: !692, size: 64, offset: 192)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{null, !648, !263, !514}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "ready_input", scope: !638, file: !515, line: 234, baseType: !696, size: 64, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{null, !648, !699}
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvEvent", file: !655, line: 34, baseType: !284)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ready_output", scope: !638, file: !515, line: 237, baseType: !696, size: 64, offset: 320)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !638, file: !515, line: 240, baseType: !263, size: 64, offset: 384)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !638, file: !515, line: 242, baseType: !703, size: 64, offset: 448)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{null}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !638, file: !515, line: 244, baseType: !395, size: 64, offset: 512)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !638, file: !515, line: 245, baseType: !708, size: 64, offset: 576)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{!711, !648, !61, !263, !514, !677, !514}
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvSSizeT", file: !515, line: 126, baseType: !712)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !713, line: 77, baseType: !714)
!713 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !715, line: 194, baseType: !97)
!715 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!716 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !638, file: !515, line: 249, baseType: !688, size: 64, offset: 640)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "outputv", scope: !638, file: !515, line: 250, baseType: !718, size: 64, offset: 704)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !648, !721}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlIOVec", file: !515, line: 194, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_io_vec", file: !515, line: 189, size: 256, elements: !724)
!724 = !{!725, !726, !727, !728}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "vsize", scope: !723, file: !515, line: 190, baseType: !130, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !723, file: !515, line: 191, baseType: !514, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !723, file: !515, line: 192, baseType: !556, size: 64, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "binv", scope: !723, file: !515, line: 193, baseType: !729, size: 64, offset: 192)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ready_async", scope: !638, file: !515, line: 253, baseType: !732, size: 64, offset: 768)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !648, !735}
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvThreadData", file: !515, line: 149, baseType: !652)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !638, file: !515, line: 254, baseType: !688, size: 64, offset: 832)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !638, file: !515, line: 259, baseType: !738, size: 64, offset: 896)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!711, !648, !61, !263, !514, !677, !514, !741}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "unused_event_callback", scope: !638, file: !515, line: 265, baseType: !703, size: 64, offset: 960)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "extended_marker", scope: !638, file: !515, line: 266, baseType: !130, size: 32, offset: 1024)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "major_version", scope: !638, file: !515, line: 267, baseType: !130, size: 32, offset: 1056)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !638, file: !515, line: 268, baseType: !130, size: 32, offset: 1088)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !638, file: !515, line: 269, baseType: !130, size: 32, offset: 1120)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "handle2", scope: !638, file: !515, line: 270, baseType: !395, size: 64, offset: 1152)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "process_exit", scope: !638, file: !515, line: 271, baseType: !749, size: 64, offset: 1216)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{null, !648, !752}
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvMonitor", file: !558, line: 67, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !558, line: 65, size: 256, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !754, file: !558, line: 66, baseType: !757, size: 256)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 256, elements: !758)
!758 = !{!759}
!759 = !DISubrange(count: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "stop_select", scope: !638, file: !515, line: 273, baseType: !761, size: 64, offset: 1280)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{null, !699, !395}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "emergency_close", scope: !638, file: !515, line: 277, baseType: !688, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !596, file: !266, line: 226, baseType: !645, size: 64, offset: 576)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !596, file: !266, line: 227, baseType: !688, size: 64, offset: 640)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !596, file: !266, line: 228, baseType: !703, size: 64, offset: 704)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !596, file: !266, line: 229, baseType: !688, size: 64, offset: 768)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !596, file: !266, line: 230, baseType: !692, size: 64, offset: 832)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "outputv", scope: !596, file: !266, line: 231, baseType: !718, size: 64, offset: 896)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !596, file: !266, line: 232, baseType: !708, size: 64, offset: 960)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !596, file: !266, line: 235, baseType: !738, size: 64, offset: 1024)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "ready_input", scope: !596, file: !266, line: 239, baseType: !696, size: 64, offset: 1088)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "ready_output", scope: !596, file: !266, line: 240, baseType: !696, size: 64, offset: 1152)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !596, file: !266, line: 241, baseType: !688, size: 64, offset: 1216)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ready_async", scope: !596, file: !266, line: 242, baseType: !732, size: 64, offset: 1280)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "process_exit", scope: !596, file: !266, line: 243, baseType: !749, size: 64, offset: 1344)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "stop_select", scope: !596, file: !266, line: 244, baseType: !761, size: 64, offset: 1408)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "emergency_close", scope: !596, file: !266, line: 245, baseType: !688, size: 64, offset: 1472)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "drv_data", scope: !471, file: !470, line: 161, baseType: !195, size: 64, align: 64, offset: 3904)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "os_pid", scope: !471, file: !470, line: 162, baseType: !284, size: 64, align: 64, offset: 3968)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !471, file: !470, line: 163, baseType: !783, size: 64, offset: 4032)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsProcList", file: !60, line: 379, baseType: !785)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsProcList_", file: !60, line: 380, size: 256, elements: !786)
!786 = !{!787, !792, !793, !794}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !785, file: !60, line: 384, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !785, file: !60, line: 381, size: 64, elements: !789)
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !788, file: !60, line: 382, baseType: !93, size: 64, align: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !788, file: !60, line: 383, baseType: !433, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "started_interval", scope: !785, file: !60, line: 385, baseType: !459, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !785, file: !60, line: 386, baseType: !783, size: 64, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !785, file: !60, line: 387, baseType: !783, size: 64, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "linebuf", scope: !471, file: !470, line: 164, baseType: !796, size: 64, offset: 4096)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineBuf", file: !470, line: 91, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "line_buf", file: !470, line: 84, size: 256, elements: !799)
!799 = !{!800, !801, !802, !803}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "bufsiz", scope: !798, file: !470, line: 85, baseType: !514, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ovlen", scope: !798, file: !470, line: 86, baseType: !514, size: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "ovsiz", scope: !798, file: !470, line: 87, baseType: !514, size: 64, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !798, file: !470, line: 88, baseType: !286, size: 8, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !470, line: 166, baseType: !342, size: 32, offset: 4160)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "control_flags", scope: !471, file: !470, line: 167, baseType: !130, size: 32, offset: 4192)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "port_data_lock", scope: !471, file: !470, line: 168, baseType: !807, size: 64, offset: 4224)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlDrvPDL", file: !515, line: 209, baseType: !808)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_drv_port_data_lock", file: !470, line: 194, size: 448, elements: !810)
!810 = !{!811, !812, !813}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !809, file: !470, line: 195, baseType: !522, size: 320)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "refc", scope: !809, file: !470, line: 196, baseType: !141, size: 64, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "prt", scope: !809, file: !470, line: 197, baseType: !468, size: 64, offset: 384)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "psd", scope: !471, file: !470, line: 170, baseType: !141, size: 64, offset: 4288)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "reds", scope: !471, file: !470, line: 171, baseType: !130, size: 32, offset: 4352)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "async_open_port", scope: !471, file: !470, line: 176, baseType: !817, size: 64, offset: 4416)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !471, file: !470, line: 173, size: 192, elements: !819)
!819 = !{!820, !821}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !818, file: !470, line: 174, baseType: !93, size: 64, align: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !818, file: !470, line: 175, baseType: !822, size: 96, offset: 64)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 96, elements: !225)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !462, file: !463, line: 41, baseType: !93, size: 64, align: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !456, file: !439, line: 70, baseType: !825, size: 64, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsLink", file: !827, line: 1610, baseType: !828)
!827 = !DIFile(filename: "beam/erl_monitor_link.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "16d98f143cd2175beeecae09149f8251")
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsMonLnkNode__", file: !827, line: 518, size: 320, elements: !829)
!829 = !{!830, !888, !893, !896, !897, !898}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !828, file: !827, line: 523, baseType: !831, size: 192)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !828, file: !827, line: 519, size: 192, elements: !832)
!832 = !{!833, !873, !882}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !831, file: !827, line: 520, baseType: !834, size: 192)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSignalCommon", file: !835, line: 108, baseType: !836)
!835 = !DIFile(filename: "beam/erl_proc_sig_queue.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "53a3480d3100f5995e8e54ed281ca383")
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !835, line: 101, size: 192, elements: !837)
!837 = !{!838, !866, !872}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !836, file: !835, line: 102, baseType: !839, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_mesg", file: !230, line: 230, size: 704, elements: !841)
!841 = !{!842, !845, !864, !865}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !840, file: !230, line: 231, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMessage", file: !230, line: 61, baseType: !840)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !840, file: !230, line: 231, baseType: !846, size: 64, offset: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !840, file: !230, line: 231, size: 64, elements: !847)
!847 = !{!848, !863}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "heap_frag", scope: !846, file: !230, line: 231, baseType: !849, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlHeapFragment", file: !230, line: 187, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_heap_fragment", file: !230, line: 188, size: 384, elements: !852)
!852 = !{!853, !854, !860, !861, !862}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !851, file: !230, line: 189, baseType: !849, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "off_heap", scope: !851, file: !230, line: 190, baseType: !855, size: 128, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlOffHeap", file: !230, line: 81, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_off_heap", file: !230, line: 78, size: 128, elements: !857)
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !856, file: !230, line: 79, baseType: !228, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !856, file: !230, line: 80, baseType: !459, size: 64, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !851, file: !230, line: 191, baseType: !128, size: 64, align: 64, offset: 192)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "used_size", scope: !851, file: !230, line: 192, baseType: !128, size: 64, align: 64, offset: 256)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !851, file: !230, line: 193, baseType: !297, size: 64, align: 64, offset: 320)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "attached", scope: !846, file: !230, line: 231, baseType: !395, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !840, file: !230, line: 231, baseType: !623, size: 192, align: 64, offset: 128)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "hfrag", scope: !840, file: !230, line: 233, baseType: !850, size: 384, offset: 320)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "specific", scope: !836, file: !835, line: 106, baseType: !867, size: 64, offset: 64)
!867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !836, file: !835, line: 103, size: 64, elements: !868)
!868 = !{!869, !871}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !867, file: !835, line: 104, baseType: !870, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "attachment", scope: !867, file: !835, line: 105, baseType: !395, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !836, file: !835, line: 107, baseType: !93, size: 64, align: 64, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !831, file: !827, line: 521, baseType: !874, size: 192)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMonLnkTreeNode", file: !827, line: 511, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !827, line: 507, size: 192, elements: !876)
!876 = !{!877, !878, !881}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !875, file: !827, line: 508, baseType: !195, size: 64, align: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !875, file: !827, line: 509, baseType: !879, size: 64, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMonLnkNode", file: !827, line: 504, baseType: !828)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !875, file: !827, line: 510, baseType: !879, size: 64, offset: 128)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !831, file: !827, line: 522, baseType: !883, size: 128)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMonLnkListNode", file: !827, line: 516, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !827, line: 513, size: 128, elements: !885)
!885 = !{!886, !887}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !884, file: !827, line: 514, baseType: !879, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !884, file: !827, line: 515, baseType: !879, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !828, file: !827, line: 527, baseType: !889, size: 64, offset: 192)
!889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !828, file: !827, line: 524, size: 64, elements: !890)
!890 = !{!891, !892}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !889, file: !827, line: 525, baseType: !93, size: 64, align: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !889, file: !827, line: 526, baseType: !395, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !828, file: !827, line: 528, baseType: !894, size: 16, offset: 256)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uint16", file: !94, line: 484, baseType: !895)
!895 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !828, file: !827, line: 529, baseType: !894, size: 16, offset: 272)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !828, file: !827, line: 530, baseType: !894, size: 16, offset: 288)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !828, file: !827, line: 531, baseType: !894, size: 16, offset: 304)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "lt_monitors", scope: !456, file: !439, line: 73, baseType: !900, size: 64, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMonitor", file: !827, line: 690, baseType: !828)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "monitors", scope: !456, file: !439, line: 75, baseType: !900, size: 64, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !453, file: !439, line: 79, baseType: !904, size: 256)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsThrPrgrLaterOp", file: !905, line: 80, baseType: !906)
!905 = !DIFile(filename: "beam/erl_thr_progress.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "3b4040aa37c977a929df714c9ce27034")
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsThrPrgrLaterOp_", file: !905, line: 81, size: 256, elements: !907)
!907 = !{!908, !910, !914, !915}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "later", scope: !906, file: !905, line: 82, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsThrPrgrVal", file: !905, line: 40, baseType: !459)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !906, file: !905, line: 83, baseType: !911, size: 64, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{null, !395}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !906, file: !905, line: 84, baseType: !395, size: 64, offset: 128)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !906, file: !905, line: 85, baseType: !916, size: 64, offset: 192)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "htop", scope: !435, file: !60, line: 1015, baseType: !92, size: 64, offset: 640)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !435, file: !60, line: 1016, baseType: !92, size: 64, offset: 704)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pointer", scope: !435, file: !60, line: 1019, baseType: !92, size: 64, offset: 768)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "fcalls", scope: !435, file: !60, line: 1022, baseType: !96, size: 64, align: 64, offset: 832)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "freason", scope: !435, file: !60, line: 1025, baseType: !128, size: 64, align: 64, offset: 896)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "fvalue", scope: !435, file: !60, line: 1026, baseType: !93, size: 64, align: 64, offset: 960)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !435, file: !60, line: 1030, baseType: !92, size: 64, offset: 1024)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "hend", scope: !435, file: !60, line: 1031, baseType: !92, size: 64, offset: 1088)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "abandoned_heap", scope: !435, file: !60, line: 1032, baseType: !92, size: 64, offset: 1152)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "heap_sz", scope: !435, file: !60, line: 1033, baseType: !128, size: 64, align: 64, offset: 1216)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "min_heap_size", scope: !435, file: !60, line: 1034, baseType: !128, size: 64, align: 64, offset: 1280)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "min_vheap_size", scope: !435, file: !60, line: 1035, baseType: !128, size: 64, align: 64, offset: 1344)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "max_heap_size", scope: !435, file: !60, line: 1036, baseType: !128, size: 64, align: 64, offset: 1408)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !435, file: !60, line: 1041, baseType: !128, size: 64, align: 64, offset: 1472)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "arg_reg", scope: !435, file: !60, line: 1044, baseType: !92, size: 64, offset: 1536)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "max_arg_reg", scope: !435, file: !60, line: 1045, baseType: !61, size: 32, offset: 1600)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "def_arg_reg", scope: !435, file: !60, line: 1046, baseType: !934, size: 384, align: 64, offset: 1664)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 384, align: 64, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 6)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !435, file: !60, line: 1048, baseType: !115, size: 64, offset: 2048)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "catches", scope: !435, file: !60, line: 1049, baseType: !96, size: 64, align: 64, offset: 2112)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "rcount", scope: !435, file: !60, line: 1050, baseType: !250, size: 32, offset: 2176)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_count", scope: !435, file: !60, line: 1051, baseType: !130, size: 32, offset: 2208)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "reds", scope: !435, file: !60, line: 1052, baseType: !128, size: 64, align: 64, offset: 2240)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !435, file: !60, line: 1053, baseType: !250, size: 32, offset: 2304)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !435, file: !60, line: 1054, baseType: !93, size: 64, align: 64, offset: 2368)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace", scope: !435, file: !60, line: 1055, baseType: !93, size: 64, align: 64, offset: 2432)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !435, file: !60, line: 1057, baseType: !433, size: 64, offset: 2496)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !435, file: !60, line: 1059, baseType: !947, size: 64, offset: 2560)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sint64", file: !94, line: 438, baseType: !97)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "sig_qs", scope: !435, file: !60, line: 1060, baseType: !949, size: 640, offset: 2624)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSignalPrivQueues", file: !230, line: 374, baseType: !950)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 317, size: 640, elements: !951)
!951 = !{!952, !953, !955, !956, !957, !958, !964, !1008, !1009}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !950, file: !230, line: 361, baseType: !843, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !950, file: !230, line: 362, baseType: !954, size: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "save", scope: !950, file: !230, line: 363, baseType: !954, size: 64, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !950, file: !230, line: 366, baseType: !843, size: 64, offset: 192)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "cont_last", scope: !950, file: !230, line: 367, baseType: !954, size: 64, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "nmsigs", scope: !950, file: !230, line: 368, baseType: !959, size: 128, offset: 320)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMsgQNMSigs", file: !230, line: 282, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 278, size: 128, elements: !961)
!961 = !{!962, !963}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !960, file: !230, line: 280, baseType: !954, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !960, file: !230, line: 281, baseType: !954, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "recv_mrk_blk", scope: !950, file: !230, line: 371, baseType: !965, size: 64, offset: 448)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsRecvMarkerBlock", file: !230, line: 312, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 302, size: 4160, elements: !968)
!968 = !{!969, !973, !1003, !1004, !1005, !1006, !1007}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !967, file: !230, line: 303, baseType: !970, size: 512, align: 64)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 512, align: 64, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 8)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !967, file: !230, line: 304, baseType: !974, size: 3584, offset: 512)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 3584, elements: !971)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsRecvMarker", file: !230, line: 298, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 284, size: 448, elements: !977)
!977 = !{!978, !994, !995, !997, !998, !999, !1000, !1001, !1002}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !976, file: !230, line: 285, baseType: !979, size: 320)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSignal", file: !230, line: 276, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !230, line: 273, size: 320, elements: !981)
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !980, file: !230, line: 274, baseType: !834, size: 192)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !980, file: !230, line: 275, baseType: !984, size: 320)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMessageRef", file: !230, line: 228, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_msg_ref__", file: !230, line: 226, size: 320, elements: !986)
!986 = !{!987, !988, !993}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !985, file: !230, line: 227, baseType: !843, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !985, file: !230, line: 227, baseType: !989, size: 64, offset: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !985, file: !230, line: 227, size: 64, elements: !990)
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "heap_frag", scope: !989, file: !230, line: 227, baseType: !849, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "attached", scope: !989, file: !230, line: 227, baseType: !395, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !985, file: !230, line: 227, baseType: !623, size: 192, align: 64, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "prev_next", scope: !976, file: !230, line: 286, baseType: !954, size: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "is_yield_mark", scope: !976, file: !230, line: 287, baseType: !996, size: 8, offset: 384)
!996 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !976, file: !230, line: 288, baseType: !996, size: 8, offset: 392)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "set_save", scope: !976, file: !230, line: 289, baseType: !996, size: 8, offset: 400)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "in_sigq", scope: !976, file: !230, line: 290, baseType: !996, size: 8, offset: 408)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "in_msgq", scope: !976, file: !230, line: 291, baseType: !996, size: 8, offset: 416)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ix", scope: !976, file: !230, line: 292, baseType: !996, size: 8, offset: 424)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "next_ix", scope: !976, file: !230, line: 293, baseType: !996, size: 8, offset: 432)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "free_ix", scope: !967, file: !230, line: 305, baseType: !996, size: 8, offset: 4096)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "used_ix", scope: !967, file: !230, line: 306, baseType: !996, size: 8, offset: 4104)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !967, file: !230, line: 307, baseType: !996, size: 8, offset: 4112)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "pending_set_save_ix", scope: !967, file: !230, line: 308, baseType: !996, size: 8, offset: 4120)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "old_recv_marker_ix", scope: !967, file: !230, line: 310, baseType: !996, size: 8, offset: 4128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !950, file: !230, line: 372, baseType: !96, size: 64, align: 64, offset: 512)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !950, file: !230, line: 373, baseType: !250, size: 32, offset: 576)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "bif_timers", scope: !435, file: !60, line: 1061, baseType: !1011, size: 64, offset: 3264)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsBifTimers", file: !1013, line: 24, baseType: !1014)
!1013 = !DIFile(filename: "beam/erl_hl_timer.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "88560d8cb3366f8e3cd715286e809430")
!1014 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsBifTimer_", file: !1013, line: 24, flags: DIFlagFwdDecl)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "dictionary", scope: !435, file: !60, line: 1063, baseType: !1016, size: 64, offset: 3328)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProcDict", file: !1018, line: 32, baseType: !1019)
!1018 = !DIFile(filename: "beam/erl_process_dict.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "4ac2fe0b8d820fc5655ca2eabcba989d")
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dict", file: !1018, line: 25, size: 256, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1024, !1025, !1026}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "sizeMask", scope: !1019, file: !1018, line: 26, baseType: !61, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "usedSlots", scope: !1019, file: !1018, line: 27, baseType: !61, size: 32, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "arraySize", scope: !1019, file: !1018, line: 28, baseType: !61, size: 32, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "splitPosition", scope: !1019, file: !1018, line: 29, baseType: !61, size: 32, offset: 96)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "numElements", scope: !1019, file: !1018, line: 30, baseType: !128, size: 64, align: 64, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1019, file: !1018, line: 31, baseType: !297, size: 64, align: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "seq_trace_clock", scope: !435, file: !60, line: 1065, baseType: !128, size: 64, align: 64, offset: 3392)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "seq_trace_lastcnt", scope: !435, file: !60, line: 1066, baseType: !128, size: 64, align: 64, offset: 3456)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "seq_trace_token", scope: !435, file: !60, line: 1067, baseType: !93, size: 64, align: 64, offset: 3520)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !435, file: !60, line: 1079, baseType: !1031, size: 192, offset: 3584)
!1031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !435, file: !60, line: 1073, size: 192, elements: !1032)
!1032 = !{!1033, !1035, !1036}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "real_proc", scope: !1031, file: !60, line: 1074, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "terminate", scope: !1031, file: !60, line: 1075, baseType: !395, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1031, file: !60, line: 1076, baseType: !180, size: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !435, file: !60, line: 1080, baseType: !1038, size: 64, offset: 3776)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !435, file: !60, line: 1092, baseType: !93, size: 64, align: 64, offset: 3840)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !435, file: !60, line: 1094, baseType: !250, size: 32, offset: 3904)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "high_water", scope: !435, file: !60, line: 1100, baseType: !92, size: 64, offset: 3968)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "old_hend", scope: !435, file: !60, line: 1101, baseType: !92, size: 64, offset: 4032)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "old_htop", scope: !435, file: !60, line: 1102, baseType: !92, size: 64, offset: 4096)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "old_heap", scope: !435, file: !60, line: 1103, baseType: !92, size: 64, offset: 4160)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "gen_gcs", scope: !435, file: !60, line: 1104, baseType: !894, size: 16, offset: 4224)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "max_gen_gcs", scope: !435, file: !60, line: 1105, baseType: !894, size: 16, offset: 4240)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "off_heap", scope: !435, file: !60, line: 1106, baseType: !855, size: 128, offset: 4288)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "wrt_bins", scope: !435, file: !60, line: 1107, baseType: !228, size: 64, offset: 4416)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "mbuf", scope: !435, file: !60, line: 1108, baseType: !849, size: 64, offset: 4480)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "live_hf_end", scope: !435, file: !60, line: 1109, baseType: !849, size: 64, offset: 4544)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "msg_frag", scope: !435, file: !60, line: 1110, baseType: !843, size: 64, offset: 4608)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "mbuf_sz", scope: !435, file: !60, line: 1111, baseType: !128, size: 64, align: 64, offset: 4672)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "psd", scope: !435, file: !60, line: 1112, baseType: !141, size: 64, offset: 4736)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "bin_vheap_sz", scope: !435, file: !60, line: 1114, baseType: !459, size: 64, offset: 4800)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "bin_old_vheap_sz", scope: !435, file: !60, line: 1115, baseType: !459, size: 64, offset: 4864)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "bin_old_vheap", scope: !435, file: !60, line: 1116, baseType: !459, size: 64, offset: 4928)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "sys_task_qs", scope: !435, file: !60, line: 1118, baseType: !1059, size: 64, offset: 4992)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsProcSysTaskQs", file: !60, line: 949, baseType: !1061)
!1061 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsProcSysTaskQs_", file: !60, line: 949, flags: DIFlagFwdDecl)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sys_tasks", scope: !435, file: !60, line: 1119, baseType: !1063, size: 64, offset: 5056)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsProcSysTask", file: !60, line: 948, baseType: !1065)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsProcSysTask_", file: !60, line: 948, flags: DIFlagFwdDecl)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !435, file: !60, line: 1121, baseType: !342, size: 32, offset: 5120)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_state", scope: !435, file: !60, line: 1122, baseType: !342, size: 32, offset: 5152)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "sig_inq_contention_counter", scope: !435, file: !60, line: 1123, baseType: !128, size: 64, align: 64, offset: 5184)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "sig_inq", scope: !435, file: !60, line: 1124, baseType: !1070, size: 320, offset: 5248)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSignalInQueue", file: !230, line: 384, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 376, size: 320, elements: !1072)
!1072 = !{!1073, !1074, !1075, !1076}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1071, file: !230, line: 377, baseType: !843, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1071, file: !230, line: 378, baseType: !954, size: 64, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1071, file: !230, line: 379, baseType: !96, size: 64, align: 64, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "nmsigs", scope: !1071, file: !230, line: 380, baseType: !959, size: 128, offset: 192)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "sig_inq_buffers", scope: !435, file: !60, line: 1125, baseType: !141, size: 64, offset: 5568)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "trace_msg_q", scope: !435, file: !60, line: 1126, baseType: !1079, size: 64, offset: 5632)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlTraceMessageQueue", file: !230, line: 432, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_trace_message_queue__", file: !230, line: 426, size: 320, elements: !1082)
!1082 = !{!1083, !1085, !1086, !1087, !1088}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1081, file: !230, line: 427, baseType: !1084, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "receiver", scope: !1081, file: !230, line: 428, baseType: !93, size: 64, align: 64, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1081, file: !230, line: 429, baseType: !843, size: 64, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1081, file: !230, line: 430, baseType: !954, size: 64, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1081, file: !230, line: 431, baseType: !96, size: 64, align: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !435, file: !60, line: 1127, baseType: !1090, size: 384, offset: 5696)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_proc_lock_t", file: !1091, line: 106, baseType: !1092)
!1091 = !DIFile(filename: "beam/erl_process_lock.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "a651c5586b502bc252d6d5eada19c6f9")
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erts_proc_lock_t_", file: !1091, line: 73, size: 384, elements: !1093)
!1093 = !{!1094, !1095}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1092, file: !1091, line: 76, baseType: !342, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1092, file: !1091, line: 80, baseType: !1096, size: 320, offset: 64)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 320, elements: !569)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_tse_t", file: !331, line: 356, baseType: !383)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "scheduler_data", scope: !435, file: !60, line: 1128, baseType: !1100, size: 64, offset: 6080)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSchedulerData", file: !60, line: 411, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsSchedulerData_", file: !60, line: 682, size: 333824, elements: !1103)
!1103 = !{!1104, !1169, !1174, !1179, !1183, !1186, !1187, !1188, !1214, !1229, !1230, !1232, !1233, !1234, !1235, !1253, !1254, !1255, !1369, !1370, !1371, !1471, !1489, !1490, !1491, !1492, !1493, !1494, !1499, !1505, !1506, !1507, !1523, !1530, !1531}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "registers", scope: !1102, file: !60, line: 683, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSchedulerRegisters", file: !60, line: 680, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsSchedulerRegisters_", file: !60, line: 621, size: 132736, elements: !1108)
!1108 = !{!1109, !1130, !1141, !1167, !1168}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "aux_regs", scope: !1107, file: !60, line: 651, baseType: !1110, size: 1024)
!1110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1107, file: !60, line: 622, size: 1024, elements: !1111)
!1111 = !{!1112, !1126}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1110, file: !60, line: 649, baseType: !1113, size: 640)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aux_regs__", file: !60, line: 623, size: 640, elements: !1114)
!1114 = !{!1115, !1117, !1119}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_stack", scope: !1113, file: !60, line: 636, baseType: !1116, size: 64, align: 64)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 64, align: 64, elements: !196)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "TMP_MEM", scope: !1113, file: !60, line: 644, baseType: !1118, size: 320, align: 64, offset: 64)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 320, align: 64, elements: !569)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "erl_bits_state", scope: !1113, file: !60, line: 648, baseType: !1120, size: 256, offset: 384)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erl_bits_state", file: !253, line: 52, size: 256, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buf_", scope: !1120, file: !253, line: 56, baseType: !288, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buf_len_", scope: !1120, file: !253, line: 57, baseType: !130, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "erts_current_bin_", scope: !1120, file: !253, line: 62, baseType: !288, size: 64, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "erts_bin_offset_", scope: !1120, file: !253, line: 67, baseType: !128, size: 64, align: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "align__", scope: !1110, file: !60, line: 650, baseType: !1127, size: 1024)
!1127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1024, elements: !1128)
!1128 = !{!1129}
!1129 = !DISubrange(count: 128)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "x_reg_array", scope: !1107, file: !60, line: 656, baseType: !1131, size: 66048, offset: 1024)
!1131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1107, file: !60, line: 653, size: 66048, elements: !1132)
!1132 = !{!1133, !1137}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1131, file: !60, line: 654, baseType: !1134, size: 65728, align: 64)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 65728, align: 64, elements: !1135)
!1135 = !{!1136}
!1136 = !DISubrange(count: 1027)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "align__", scope: !1131, file: !60, line: 655, baseType: !1138, size: 66048)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 66048, elements: !1139)
!1139 = !{!1140}
!1140 = !DISubrange(count: 8256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "f_reg_array", scope: !1107, file: !60, line: 661, baseType: !1142, size: 65536, offset: 67072)
!1142 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1107, file: !60, line: 658, size: 65536, elements: !1143)
!1143 = !{!1144, !1163}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1142, file: !60, line: 659, baseType: !1145, size: 65536)
!1145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1146, size: 65536, elements: !1161)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "FloatDef", file: !300, line: 445, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "float_def", file: !300, line: 436, size: 64, elements: !1148)
!1148 = !{!1149, !1152, !1154, !1156, !1160}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1147, file: !300, line: 438, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "ieee754_8", file: !300, line: 434, baseType: !1151)
!1151 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !1147, file: !300, line: 439, baseType: !1153, size: 64)
!1153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 64, elements: !971)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1147, file: !300, line: 440, baseType: !1155, size: 64)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !894, size: 64, elements: !118)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !1147, file: !300, line: 441, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 64, elements: !1158)
!1158 = !{!1159}
!1159 = !DISubrange(count: 2)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "fdw", scope: !1147, file: !300, line: 443, baseType: !128, size: 64, align: 64)
!1161 = !{!1162}
!1162 = !DISubrange(count: 1024)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "align__", scope: !1142, file: !60, line: 660, baseType: !1164, size: 65536)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 65536, elements: !1165)
!1165 = !{!1166}
!1166 = !DISubrange(count: 8192)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_i", scope: !1107, file: !60, line: 665, baseType: !115, size: 64, offset: 132608)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1107, file: !60, line: 666, baseType: !195, size: 64, align: 64, offset: 132672)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "timer_wheel", scope: !1102, file: !60, line: 685, baseType: !1170, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsTimerWheel", file: !1172, line: 78, baseType: !1173)
!1172 = !DIFile(filename: "beam/erl_time.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "14eb2e65fd167057d2600b51d3cfe988")
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsTimerWheel_", file: !1172, line: 78, flags: DIFlagFwdDecl)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "next_tmo_ref", scope: !1102, file: !60, line: 686, baseType: !1175, size: 64, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsNextTimeoutRef", file: !1172, line: 79, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMonotonicTime", file: !1178, line: 152, baseType: !97)
!1178 = !DIFile(filename: "sys/unix/erl_unix_sys.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "7db4738613fd15cfcfbc762a2c7b0b78")
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "timer_service", scope: !1102, file: !60, line: 687, baseType: !1180, size: 64, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsHLTimerService", file: !1013, line: 25, baseType: !1182)
!1182 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsHLTimerService_", file: !1013, line: 25, flags: DIFlagFwdDecl)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !1102, file: !60, line: 688, baseType: !1184, size: 64, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_tid", file: !150, line: 132, baseType: !1185)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !354, line: 27, baseType: !95)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "match_pseudo_process", scope: !1102, file: !60, line: 689, baseType: !395, size: 64, offset: 320)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "free_process", scope: !1102, file: !60, line: 690, baseType: !433, size: 64, offset: 384)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "thr_progress_data", scope: !1102, file: !60, line: 691, baseType: !1189, size: 832, offset: 448)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsThrPrgrData", file: !905, line: 74, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !905, line: 54, size: 832, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196, !1198, !1199, !1200, !1201, !1202}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1190, file: !905, line: 55, baseType: !130, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !1190, file: !905, line: 56, baseType: !130, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "is_blocking", scope: !1190, file: !905, line: 57, baseType: !130, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "is_temporary", scope: !1190, file: !905, line: 61, baseType: !130, size: 32, offset: 96)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_request", scope: !1190, file: !905, line: 65, baseType: !1197, size: 256, offset: 128)
!1197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 256, elements: !118)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1190, file: !905, line: 69, baseType: !130, size: 32, offset: 384)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1190, file: !905, line: 70, baseType: !130, size: 32, offset: 416)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "is_deep_sleeper", scope: !1190, file: !905, line: 71, baseType: !130, size: 32, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !1190, file: !905, line: 72, baseType: !909, size: 64, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "leader_state", scope: !1190, file: !905, line: 73, baseType: !1203, size: 256, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsThrPrgrLeaderState", file: !905, line: 52, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !905, line: 44, size: 256, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1204, file: !905, line: 45, baseType: !909, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1204, file: !905, line: 46, baseType: !909, size: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "chk_next_ix", scope: !1204, file: !905, line: 47, baseType: !130, size: 32, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "umrefc_ix", scope: !1204, file: !905, line: 51, baseType: !1210, size: 64, offset: 160)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1204, file: !905, line: 48, size: 64, elements: !1211)
!1211 = !{!1212, !1213}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1210, file: !905, line: 49, baseType: !130, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "waiting", scope: !1210, file: !905, line: 50, baseType: !130, size: 32, offset: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ssi", scope: !1102, file: !60, line: 692, baseType: !1215, size: 64, offset: 1280)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSchedulerSleepInfo", file: !60, line: 353, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsSchedulerSleepInfo_", file: !60, line: 360, size: 448, elements: !1218)
!1218 = !{!1219, !1221, !1222, !1223, !1224, !1225, !1228}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "esdp", scope: !1217, file: !60, line: 361, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1217, file: !60, line: 362, baseType: !1215, size: 64, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1217, file: !60, line: 363, baseType: !1215, size: 64, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1217, file: !60, line: 364, baseType: !342, size: 32, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1217, file: !60, line: 365, baseType: !1097, size: 64, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !1217, file: !60, line: 366, baseType: !1226, size: 64, offset: 320)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DICompositeType(tag: DW_TAG_structure_type, name: "erts_poll_thread", file: !60, line: 366, flags: DIFlagFwdDecl)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "aux_work", scope: !1217, file: !60, line: 367, baseType: !342, size: 32, offset: 384)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "current_process", scope: !1102, file: !60, line: 693, baseType: !433, size: 64, offset: 1344)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1102, file: !60, line: 694, baseType: !1231, size: 32, offset: 1408)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSchedType", file: !60, line: 409, baseType: !59)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1102, file: !60, line: 695, baseType: !128, size: 64, align: 64, offset: 1472)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_no", scope: !1102, file: !60, line: 696, baseType: !128, size: 64, align: 64, offset: 1536)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "flxctr_slot_no", scope: !1102, file: !60, line: 697, baseType: !130, size: 32, offset: 1600)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "current_nif", scope: !1102, file: !60, line: 698, baseType: !1236, size: 64, offset: 1664)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "enif_environment_t", file: !266, line: 55, size: 576, elements: !1238)
!1238 = !{!1239, !1243, !1244, !1245, !1246, !1247, !1250, !1251, !1252}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "mod_nif", scope: !1237, file: !266, line: 57, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DICompositeType(tag: DW_TAG_structure_type, name: "erl_module_nif", file: !1242, line: 31, flags: DIFlagFwdDecl)
!1242 = !DIFile(filename: "beam/module.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "c0c2b99ae4e09047142ba47a45a7217d")
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !1237, file: !266, line: 58, baseType: !433, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !1237, file: !266, line: 59, baseType: !92, size: 64, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "hp_end", scope: !1237, file: !266, line: 60, baseType: !92, size: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "heap_frag", scope: !1237, file: !266, line: 61, baseType: !849, size: 64, offset: 256)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_obj_list", scope: !1237, file: !266, line: 62, baseType: !1248, size: 64, offset: 320)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DICompositeType(tag: DW_TAG_structure_type, name: "enif_tmp_obj_t", file: !266, line: 62, flags: DIFlagFwdDecl)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "exception_thrown", scope: !1237, file: !266, line: 63, baseType: !130, size: 32, offset: 384)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "tracee", scope: !1237, file: !266, line: 64, baseType: !433, size: 64, offset: 448)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "exiting", scope: !1237, file: !266, line: 65, baseType: !130, size: 32, offset: 512)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_shadow_process", scope: !1102, file: !60, line: 699, baseType: !433, size: 64, offset: 1728)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "current_port", scope: !1102, file: !60, line: 700, baseType: !468, size: 64, offset: 1792)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "run_queue", scope: !1102, file: !60, line: 701, baseType: !1256, size: 64, offset: 1856)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsRunQueue", file: !60, line: 413, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsRunQueue_", file: !60, line: 470, size: 3392, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1299, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1313, !1314, !1315, !1316, !1317, !1318, !1338, !1351, !1357}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "ix", scope: !1258, file: !60, line: 471, baseType: !130, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1258, file: !60, line: 473, baseType: !522, size: 320, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "cnd", scope: !1258, file: !60, line: 474, baseType: !1263, size: 384, offset: 384)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_cnd_t", file: !331, line: 324, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_cond", file: !69, line: 224, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethr_cond_", file: !69, line: 225, size: 384, elements: !1266)
!1266 = !{!1267}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pt_cnd", scope: !1265, file: !69, line: 226, baseType: !1268, size: 384)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_cond_t", file: !354, line: 80, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !354, line: 75, size: 384, elements: !1270)
!1270 = !{!1271, !1293, !1297}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !1269, file: !354, line: 77, baseType: !1272, size: 384)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_cond_s", file: !370, line: 94, size: 384, elements: !1273)
!1273 = !{!1274, !1286, !1287, !1289, !1290, !1291, !1292}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "__wseq", scope: !1272, file: !370, line: 96, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__atomic_wide_counter", file: !1276, line: 33, baseType: !1277)
!1276 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h", directory: "", checksumkind: CSK_MD5, checksum: "2708e6e61e266abad2d765ccef838dbe")
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1276, line: 25, size: 64, elements: !1278)
!1278 = !{!1279, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "__value64", scope: !1277, file: !1276, line: 27, baseType: !1280, size: 64)
!1280 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "__value32", scope: !1277, file: !1276, line: 32, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1277, file: !1276, line: 28, size: 64, elements: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "__low", scope: !1282, file: !1276, line: 30, baseType: !61, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "__high", scope: !1282, file: !1276, line: 31, baseType: !61, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_start", scope: !1272, file: !370, line: 97, baseType: !1275, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "__g_refs", scope: !1272, file: !370, line: 98, baseType: !1288, size: 64, offset: 128)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !1158)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "__g_size", scope: !1272, file: !370, line: 99, baseType: !1288, size: 64, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_orig_size", scope: !1272, file: !370, line: 100, baseType: !61, size: 32, offset: 256)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "__wrefs", scope: !1272, file: !370, line: 101, baseType: !61, size: 32, offset: 288)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "__g_signals", scope: !1272, file: !370, line: 102, baseType: !1288, size: 64, offset: 320)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !1269, file: !354, line: 78, baseType: !1294, size: 384)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 384, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 48)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !1269, file: !354, line: 79, baseType: !1298, size: 64)
!1298 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sleepers", scope: !1258, file: !60, line: 476, baseType: !1300, size: 384, offset: 768)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSchedulerSleepList", file: !60, line: 358, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !60, line: 355, size: 384, elements: !1302)
!1302 = !{!1303, !1304}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1301, file: !60, line: 356, baseType: !522, size: 320)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1301, file: !60, line: 357, baseType: !1215, size: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "scheduler", scope: !1258, file: !60, line: 478, baseType: !1100, size: 64, offset: 1152)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "waiting", scope: !1258, file: !60, line: 479, baseType: !130, size: 32, offset: 1216)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "woken", scope: !1258, file: !60, line: 480, baseType: !130, size: 32, offset: 1248)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1258, file: !60, line: 481, baseType: !342, size: 32, offset: 1280)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "check_balance_reds", scope: !1258, file: !60, line: 482, baseType: !130, size: 32, offset: 1312)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "full_reds_history_sum", scope: !1258, file: !60, line: 483, baseType: !130, size: 32, offset: 1344)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "full_reds_history", scope: !1258, file: !60, line: 484, baseType: !1312, size: 224, offset: 1376)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 224, elements: !173)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_work_count", scope: !1258, file: !60, line: 485, baseType: !130, size: 32, offset: 1600)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "max_len", scope: !1258, file: !60, line: 486, baseType: !348, size: 32, offset: 1632)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1258, file: !60, line: 487, baseType: !342, size: 32, offset: 1664)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_other", scope: !1258, file: !60, line: 488, baseType: !130, size: 32, offset: 1696)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_other_reds", scope: !1258, file: !60, line: 489, baseType: !130, size: 32, offset: 1728)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "procs", scope: !1258, file: !60, line: 500, baseType: !1319, size: 896, offset: 1792)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1258, file: !60, line: 491, size: 896, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1331}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "context_switches", scope: !1319, file: !60, line: 492, baseType: !128, size: 64, align: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "reductions", scope: !1319, file: !60, line: 493, baseType: !128, size: 64, align: 64, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "prio_info", scope: !1319, file: !60, line: 495, baseType: !1324, size: 384, offset: 128)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1325, size: 384, elements: !118)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsRunQueueInfo", file: !60, line: 419, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !60, line: 415, size: 96, elements: !1327)
!1327 = !{!1328, !1329, !1330}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1326, file: !60, line: 416, baseType: !342, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "max_len", scope: !1326, file: !60, line: 417, baseType: !348, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "reds", scope: !1326, file: !60, line: 418, baseType: !130, size: 32, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1319, file: !60, line: 499, baseType: !1332, size: 384, offset: 512)
!1332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1333, size: 384, elements: !225)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsRunPrioQueue", file: !60, line: 400, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !60, line: 397, size: 128, elements: !1335)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1334, file: !60, line: 398, baseType: !433, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1334, file: !60, line: 399, baseType: !433, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !1258, file: !60, line: 506, baseType: !1339, size: 192, offset: 2688)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1258, file: !60, line: 502, size: 192, elements: !1340)
!1340 = !{!1341, !1349, !1350}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1339, file: !60, line: 503, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMiscOpList", file: !60, line: 390, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsMiscOpList_", file: !60, line: 391, size: 192, elements: !1345)
!1345 = !{!1346, !1347, !1348}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1344, file: !60, line: 392, baseType: !1342, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1344, file: !60, line: 393, baseType: !911, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1344, file: !60, line: 394, baseType: !395, size: 64, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1339, file: !60, line: 504, baseType: !1342, size: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "evac_runq", scope: !1339, file: !60, line: 505, baseType: !141, size: 64, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !1258, file: !60, line: 512, baseType: !1352, size: 256, offset: 2880)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1258, file: !60, line: 508, size: 256, elements: !1353)
!1353 = !{!1354, !1355, !1356}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1352, file: !60, line: 509, baseType: !1325, size: 96)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1352, file: !60, line: 510, baseType: !468, size: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1352, file: !60, line: 511, baseType: !468, size: 64, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "sched_util", scope: !1258, file: !60, line: 514, baseType: !1358, size: 256, offset: 3136)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsRunQueueSchedUtil", file: !60, line: 441, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !60, line: 434, size: 256, elements: !1360)
!1360 = !{!1361, !1363, !1368}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1359, file: !60, line: 435, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsAtomicSchedTime", file: !60, line: 431, baseType: !141)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "worktime", scope: !1359, file: !60, line: 439, baseType: !1364, size: 128, offset: 64)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1359, file: !60, line: 436, size: 128, elements: !1365)
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "short_interval", scope: !1364, file: !60, line: 437, baseType: !459, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "long_interval", scope: !1364, file: !60, line: 438, baseType: !459, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "is_working", scope: !1359, file: !60, line: 440, baseType: !130, size: 32, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_reds", scope: !1102, file: !60, line: 702, baseType: !130, size: 32, offset: 1920)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !1102, file: !60, line: 703, baseType: !130, size: 32, offset: 1952)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "aux_work_data", scope: !1102, file: !60, line: 704, baseType: !1372, size: 2816, offset: 1984)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsAuxWorkData", file: !60, line: 609, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsAuxWorkData_", file: !60, line: 562, size: 2816, elements: !1374)
!1374 = !{!1375, !1376, !1391, !1392, !1393, !1394, !1395, !1400, !1404, !1408, !1416, !1422, !1436, !1462}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "aux_work_tid", scope: !1373, file: !60, line: 563, baseType: !130, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_data", scope: !1373, file: !60, line: 564, baseType: !1377, size: 896, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsThrAllocData", file: !1378, line: 112, baseType: !1379)
!1378 = !DIFile(filename: "beam/erl_alloc.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "7e030ccbf8b1a9f813b4b295d660166e")
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 108, size: 896, elements: !1380)
!1380 = !{!1381, !1389, !1390}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "deallctr", scope: !1379, file: !1378, line: 109, baseType: !1382, size: 832)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1383, size: 832, elements: !1387)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allctr_t", file: !1385, line: 37, baseType: !1386)
!1385 = !DIFile(filename: "beam/erl_alloc_util.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "5391c81364c1b3d736c7a45326a3f69f")
!1386 = !DICompositeType(tag: DW_TAG_structure_type, name: "Allctr_t_", file: !1385, line: 37, flags: DIFlagFwdDecl)
!1387 = !{!1388}
!1388 = !DISubrange(count: 13)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_dealloc_handler", scope: !1379, file: !1378, line: 110, baseType: !130, size: 32, offset: 832)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "alc_ix", scope: !1379, file: !1378, line: 111, baseType: !130, size: 32, offset: 864)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "esdp", scope: !1373, file: !60, line: 565, baseType: !1100, size: 64, offset: 960)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "ssi", scope: !1373, file: !60, line: 566, baseType: !1215, size: 64, offset: 1024)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "current_thr_prgr", scope: !1373, file: !60, line: 567, baseType: !909, size: 64, offset: 1088)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "latest_wakeup", scope: !1373, file: !60, line: 568, baseType: !909, size: 64, offset: 1152)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !1373, file: !60, line: 572, baseType: !1396, size: 128, offset: 1216)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 569, size: 128, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ix", scope: !1396, file: !60, line: 570, baseType: !130, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "thr_prgr", scope: !1396, file: !60, line: 571, baseType: !909, size: 64, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "dd", scope: !1373, file: !60, line: 575, baseType: !1401, size: 64, offset: 1344)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 573, size: 64, elements: !1402)
!1402 = !{!1403}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "thr_prgr", scope: !1401, file: !60, line: 574, baseType: !909, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "cncld_tmrs", scope: !1373, file: !60, line: 578, baseType: !1405, size: 64, offset: 1408)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 576, size: 64, elements: !1406)
!1406 = !{!1407}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "thr_prgr", scope: !1405, file: !60, line: 577, baseType: !909, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "later_op", scope: !1373, file: !60, line: 585, baseType: !1409, size: 320, offset: 1472)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 579, size: 320, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "thr_prgr", scope: !1409, file: !60, line: 580, baseType: !909, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1409, file: !60, line: 581, baseType: !195, size: 64, align: 64, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1409, file: !60, line: 582, baseType: !916, size: 64, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1409, file: !60, line: 583, baseType: !916, size: 64, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "list_len", scope: !1409, file: !60, line: 584, baseType: !128, size: 64, align: 64, offset: 256)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "async_ready", scope: !1373, file: !60, line: 590, baseType: !1417, size: 192, offset: 1792)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 586, size: 192, elements: !1418)
!1418 = !{!1419, !1420, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "need_thr_prgr", scope: !1417, file: !60, line: 587, baseType: !130, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "thr_prgr", scope: !1417, file: !60, line: 588, baseType: !909, size: 64, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1417, file: !60, line: 589, baseType: !395, size: 64, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_wakeup", scope: !1373, file: !60, line: 596, baseType: !1423, size: 256, offset: 1984)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 591, size: 256, elements: !1424)
!1424 = !{!1425, !1426, !1428, !1429}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1423, file: !60, line: 592, baseType: !459, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "sched2jix", scope: !1423, file: !60, line: 593, baseType: !1427, size: 64, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "jix", scope: !1423, file: !60, line: 594, baseType: !130, size: 32, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "job", scope: !1423, file: !60, line: 595, baseType: !1430, size: 64, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsDelayedAuxWorkWakeupJob", file: !60, line: 560, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !60, line: 557, size: 64, elements: !1433)
!1433 = !{!1434, !1435}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !1432, file: !60, line: 558, baseType: !130, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "aux_work", scope: !1432, file: !60, line: 559, baseType: !348, size: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "yield", scope: !1373, file: !60, line: 601, baseType: !1437, size: 384, offset: 2240)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 597, size: 384, elements: !1438)
!1438 = !{!1439, !1447}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "alcu_blockscan", scope: !1437, file: !60, line: 598, baseType: !1440, size: 128)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsAlcuBlockscanYieldData", file: !1385, line: 263, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1385, line: 260, size: 128, elements: !1442)
!1442 = !{!1443, !1446}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1441, file: !1385, line: 261, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DICompositeType(tag: DW_TAG_structure_type, name: "alcu_blockscan", file: !1385, line: 258, flags: DIFlagFwdDecl)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1441, file: !1385, line: 262, baseType: !1444, size: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ets_all", scope: !1437, file: !60, line: 599, baseType: !1448, size: 256, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsEtsAllYieldData", file: !1449, line: 45, baseType: !1450)
!1449 = !DIFile(filename: "beam/erl_db.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "01b011092aa5a703b96c5ba622883ce4")
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1449, line: 40, size: 256, elements: !1451)
!1451 = !{!1452, !1456, !1457, !1461}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "ongoing", scope: !1450, file: !1449, line: 41, baseType: !1453, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsEtsAllReq", file: !1449, line: 33, baseType: !1455)
!1455 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsEtsAllReq_", file: !1449, line: 33, flags: DIFlagFwdDecl)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "hfrag", scope: !1450, file: !1449, line: 42, baseType: !849, size: 64, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "tab", scope: !1450, file: !1449, line: 43, baseType: !1458, size: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "DbTable", file: !1449, line: 31, baseType: !1460)
!1460 = !DICompositeType(tag: DW_TAG_union_type, name: "db_table", file: !1449, line: 30, flags: DIFlagFwdDecl)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1450, file: !1449, line: 44, baseType: !1453, size: 64, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1373, file: !60, line: 608, baseType: !1463, size: 192, offset: 2624)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1373, file: !60, line: 602, size: 192, elements: !1464)
!1464 = !{!1465}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "wait_completed", scope: !1463, file: !60, line: 607, baseType: !1466, size: 192)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1463, file: !60, line: 603, size: 192, elements: !1467)
!1467 = !{!1468, !1469, !1470}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1466, file: !60, line: 604, baseType: !348, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1466, file: !60, line: 605, baseType: !911, size: 64, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1466, file: !60, line: 606, baseType: !395, size: 64, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "atom_cache_map", scope: !1102, file: !60, line: 705, baseType: !1472, size: 327808, offset: 4800)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsAtomCacheMap", file: !1473, line: 114, baseType: !1474)
!1473 = !DIFile(filename: "beam/external.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "f6e6ae43ed321742c7b7ad5b5817c571")
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 105, size: 327808, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1483}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_sz", scope: !1474, file: !1473, line: 106, baseType: !130, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !1474, file: !1473, line: 107, baseType: !130, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "long_atoms", scope: !1474, file: !1473, line: 108, baseType: !130, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "cix", scope: !1474, file: !1473, line: 109, baseType: !1480, size: 65536, offset: 96)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 65536, elements: !1481)
!1481 = !{!1482}
!1482 = !DISubrange(count: 2048)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1474, file: !1473, line: 113, baseType: !1484, size: 262144, offset: 65664)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1485, size: 262144, elements: !1481)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1474, file: !1473, line: 110, size: 128, elements: !1486)
!1486 = !{!1487, !1488}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "atom", scope: !1485, file: !1473, line: 111, baseType: !93, size: 64, align: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "iix", scope: !1485, file: !1473, line: 112, baseType: !130, size: 32, offset: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "last_monotonic_time", scope: !1102, file: !60, line: 707, baseType: !1177, size: 64, offset: 332608)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "check_time_reds", scope: !1102, file: !60, line: 708, baseType: !130, size: 32, offset: 332672)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "thr_id", scope: !1102, file: !60, line: 710, baseType: !250, size: 32, offset: 332704)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !1102, file: !60, line: 711, baseType: !459, size: 64, offset: 332736)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1102, file: !60, line: 712, baseType: !459, size: 64, offset: 332800)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !1102, file: !60, line: 717, baseType: !1495, size: 128, offset: 332864)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1102, file: !60, line: 714, size: 128, elements: !1496)
!1496 = !{!1497, !1498}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1495, file: !60, line: 715, baseType: !459, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1495, file: !60, line: 716, baseType: !459, size: 64, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "pending_signal", scope: !1102, file: !60, line: 724, baseType: !1500, size: 128, offset: 332992)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1102, file: !60, line: 718, size: 128, elements: !1501)
!1501 = !{!1502, !1504}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1500, file: !60, line: 719, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1500, file: !60, line: 720, baseType: !93, size: 64, align: 64, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "reductions", scope: !1102, file: !60, line: 726, baseType: !459, size: 64, offset: 333120)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "rand_state", scope: !1102, file: !60, line: 727, baseType: !459, size: 64, offset: 333184)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sched_wall_time", scope: !1102, file: !60, line: 728, baseType: !1508, size: 256, offset: 333248)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsSchedWallTime", file: !60, line: 555, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !60, line: 544, size: 256, elements: !1510)
!1510 = !{!1511, !1516, !1517, !1518}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1509, file: !60, line: 548, baseType: !1512, size: 32)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1509, file: !60, line: 545, size: 32, elements: !1513)
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !1512, file: !60, line: 546, baseType: !342, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "need", scope: !1512, file: !60, line: 547, baseType: !130, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1509, file: !60, line: 549, baseType: !130, size: 32, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1509, file: !60, line: 550, baseType: !459, size: 64, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "working", scope: !1509, file: !60, line: 554, baseType: !1519, size: 128, offset: 128)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1509, file: !60, line: 551, size: 128, elements: !1520)
!1520 = !{!1521, !1522}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !1519, file: !60, line: 552, baseType: !459, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1519, file: !60, line: 553, baseType: !459, size: 64, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "gc_info", scope: !1102, file: !60, line: 729, baseType: !1524, size: 128, offset: 333504)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsGCInfo", file: !1525, line: 161, baseType: !1526)
!1525 = !DIFile(filename: "beam/erl_gc.h", directory: "/local-ssd/erlang-l3nfmgerufjbmo77jxcy2mabarfbupek-build/aidengro/spack-stage-erlang-26.0-l3nfmgerufjbmo77jxcy2mabarfbupek/spack-src/erts/emulator", checksumkind: CSK_MD5, checksum: "a6f9b4dc16b92f4e23af51535803545e")
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1525, line: 158, size: 128, elements: !1527)
!1527 = !{!1528, !1529}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed", scope: !1526, file: !1525, line: 159, baseType: !459, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "garbage_cols", scope: !1526, file: !1525, line: 160, baseType: !459, size: 64, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "nosuspend_port_task_handle", scope: !1102, file: !60, line: 730, baseType: !531, size: 64, offset: 333632)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1102, file: !60, line: 734, baseType: !1532, size: 128, offset: 333696)
!1532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1102, file: !60, line: 731, size: 128, elements: !1533)
!1533 = !{!1534, !1540}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "ets_tables", scope: !1532, file: !60, line: 732, baseType: !1535, size: 128)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsEtsTables", file: !1449, line: 50, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1449, line: 47, size: 128, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1536, file: !1449, line: 48, baseType: !141, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "clist", scope: !1536, file: !1449, line: 49, baseType: !1458, size: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_nif_halt_info", scope: !1532, file: !60, line: 733, baseType: !342, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "run_queue", scope: !435, file: !60, line: 1129, baseType: !141, size: 64, offset: 6144)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dflags", scope: !323, file: !80, line: 143, baseType: !459, size: 64, offset: 1344)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !323, file: !80, line: 145, baseType: !250, size: 32, offset: 1408)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "mld", scope: !323, file: !80, line: 147, baseType: !1545, size: 64, offset: 1472)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMonLnkDist", file: !827, line: 546, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsMonLnkDist__", file: !827, line: 534, size: 1088, elements: !1548)
!1548 = !{!1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !1547, file: !827, line: 535, baseType: !93, size: 64, align: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "connection_id", scope: !1547, file: !827, line: 536, baseType: !250, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "refc", scope: !1547, file: !827, line: 537, baseType: !141, size: 64, offset: 128)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1547, file: !827, line: 538, baseType: !522, size: 320, offset: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !1547, file: !827, line: 539, baseType: !130, size: 32, offset: 512)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1547, file: !827, line: 540, baseType: !879, size: 64, offset: 576)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "monitors", scope: !1547, file: !827, line: 541, baseType: !879, size: 64, offset: 640)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "orig_name_monitors", scope: !1547, file: !827, line: 542, baseType: !879, size: 64, offset: 704)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "dist_pend_spawn_exit", scope: !1547, file: !827, line: 544, baseType: !879, size: 64, offset: 768)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_lop", scope: !1547, file: !827, line: 545, baseType: !904, size: 256, offset: 832)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "qlock", scope: !323, file: !80, line: 149, baseType: !522, size: 320, offset: 1536)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "qflgs", scope: !323, file: !80, line: 150, baseType: !342, size: 32, offset: 1856)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !323, file: !80, line: 151, baseType: !342, size: 32, offset: 1888)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !323, file: !80, line: 152, baseType: !141, size: 64, offset: 1920)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "total_qsize", scope: !323, file: !80, line: 153, baseType: !141, size: 64, offset: 1984)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !323, file: !80, line: 154, baseType: !141, size: 64, offset: 2048)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !323, file: !80, line: 155, baseType: !141, size: 64, offset: 2112)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "out_queue", scope: !323, file: !80, line: 156, baseType: !1567, size: 128, offset: 2176)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsDistOutputQueue", file: !80, line: 114, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !80, line: 111, size: 128, elements: !1569)
!1569 = !{!1570, !1579}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1568, file: !80, line: 112, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsDistOutputBuf", file: !80, line: 25, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsDistOutputBuf_", file: !80, line: 90, size: 256, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1573, file: !80, line: 94, baseType: !1571, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "bin", scope: !1573, file: !80, line: 95, baseType: !273, size: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "eiov", scope: !1573, file: !80, line: 101, baseType: !721, size: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_busy", scope: !1573, file: !80, line: 102, baseType: !130, size: 32, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1568, file: !80, line: 113, baseType: !1571, size: 64, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !323, file: !80, line: 157, baseType: !1581, size: 64, offset: 2304)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_out_queue", scope: !323, file: !80, line: 159, baseType: !1567, size: 128, offset: 2368)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_out_queue", scope: !323, file: !80, line: 160, baseType: !1567, size: 128, offset: 2496)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "dist_cmd_scheduled", scope: !323, file: !80, line: 161, baseType: !141, size: 64, offset: 2624)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "dist_cmd", scope: !323, file: !80, line: 162, baseType: !531, size: 64, offset: 2688)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !323, file: !80, line: 164, baseType: !1587, size: 64, offset: 2752)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!128, !468, !1571}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !323, file: !80, line: 166, baseType: !1591, size: 64, offset: 2816)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache", file: !1473, line: 100, size: 262144, elements: !1593)
!1593 = !{!1594, !1596}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "in_arr", scope: !1592, file: !1473, line: 101, baseType: !1595, size: 131072, align: 64)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 131072, align: 64, elements: !1481)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "out_arr", scope: !1592, file: !1473, line: 102, baseType: !1595, size: 131072, align: 64, offset: 131072)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "later_op", scope: !323, file: !80, line: 168, baseType: !904, size: 256, offset: 2880)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "sequences", scope: !323, file: !80, line: 170, baseType: !1599, size: 64, offset: 3136)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = !DICompositeType(tag: DW_TAG_structure_type, name: "dist_sequences", file: !80, line: 170, flags: DIFlagFwdDecl)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !301, file: !300, line: 1084, baseType: !228, size: 64, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !301, file: !300, line: 1101, baseType: !1603, size: 64, offset: 192)
!1603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !301, file: !300, line: 1086, size: 64, elements: !1604)
!1604 = !{!1605, !1610, !1614, !1616}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1603, file: !300, line: 1090, baseType: !1606, size: 64)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1603, file: !300, line: 1087, size: 64, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1606, file: !300, line: 1088, baseType: !250, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ser", scope: !1606, file: !300, line: 1089, baseType: !250, size: 32, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1603, file: !300, line: 1098, baseType: !1611, size: 64)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1603, file: !300, line: 1091, size: 64, elements: !1612)
!1612 = !{!1613}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1611, file: !300, line: 1093, baseType: !459, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ui32", scope: !1603, file: !300, line: 1099, baseType: !1615, size: 32)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 32, elements: !196)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !1603, file: !300, line: 1100, baseType: !1617, size: 64, align: 64)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 64, align: 64, elements: !196)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsRefThing", file: !300, line: 925, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !300, line: 921, size: 256, elements: !1621)
!1621 = !{!1622, !1651, !1658}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1620, file: !300, line: 922, baseType: !1623, size: 192)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsMRefThing", file: !300, line: 769, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !300, line: 761, size: 192, elements: !1625)
!1625 = !{!1626, !1627, !1650}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1624, file: !300, line: 762, baseType: !93, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "mb", scope: !1624, file: !300, line: 763, baseType: !1628, size: 64, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "magic_binary", file: !275, line: 67, size: 448, elements: !1630)
!1630 = !{!1631, !1632, !1633, !1637, !1638, !1639}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "intern", scope: !1629, file: !275, line: 68, baseType: !279, size: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "orig_size", scope: !1629, file: !275, line: 69, baseType: !284, size: 64, align: 64, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !1629, file: !275, line: 70, baseType: !1634, size: 64, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!130, !273}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "refn", scope: !1629, file: !275, line: 71, baseType: !822, size: 96, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_type", scope: !1629, file: !275, line: 72, baseType: !551, size: 32, offset: 352)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1629, file: !275, line: 81, baseType: !1640, size: 8, offset: 384)
!1640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1629, file: !275, line: 73, size: 8, elements: !1641)
!1641 = !{!1642, !1646}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "aligned", scope: !1640, file: !275, line: 77, baseType: !1643, size: 8)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1640, file: !275, line: 74, size: 8, elements: !1644)
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1643, file: !275, line: 76, baseType: !286, size: 8)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "unaligned", scope: !1640, file: !275, line: 80, baseType: !1647, size: 8)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1640, file: !275, line: 78, size: 8, elements: !1648)
!1648 = !{!1649}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1647, file: !275, line: 79, baseType: !286, size: 8)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1624, file: !300, line: 764, baseType: !228, size: 64, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "o", scope: !1620, file: !300, line: 923, baseType: !1652, size: 192)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsORefThing", file: !300, line: 748, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !300, line: 739, size: 192, elements: !1654)
!1654 = !{!1655, !1656, !1657}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1653, file: !300, line: 740, baseType: !93, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !1653, file: !300, line: 742, baseType: !250, size: 32, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1653, file: !300, line: 744, baseType: !822, size: 96, offset: 96)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1620, file: !300, line: 924, baseType: !1659, size: 256)
!1659 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsPRefThing", file: !300, line: 759, baseType: !1660)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !300, line: 750, size: 256, elements: !1661)
!1661 = !{!1662, !1663, !1664}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1660, file: !300, line: 751, baseType: !93, size: 64, align: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !1660, file: !300, line: 753, baseType: !250, size: 32, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1660, file: !300, line: 755, baseType: !1665, size: 160, offset: 96)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 160, elements: !569)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "ethr_sint_t", file: !150, line: 252, baseType: !149)
!1669 = !{!0, !7, !12, !17, !19, !21, !23, !28, !33, !35, !37, !42, !47, !52}
!1670 = !{i32 7, !"Dwarf Version", i32 5}
!1671 = !{i32 2, !"Debug Info Version", i32 3}
!1672 = !{i32 1, !"wchar_size", i32 4}
!1673 = !{i32 8, !"PIC Level", i32 2}
!1674 = !{i32 7, !"PIE Level", i32 2}
!1675 = !{i32 7, !"uwtable", i32 2}
!1676 = !{i32 7, !"frame-pointer", i32 2}
!1677 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!1678 = distinct !DISubprogram(name: "copy_object_x", scope: !2, file: !2, line: 44, type: !1679, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !1681)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!93, !93, !433, !128}
!1681 = !{!1682, !1683, !1684, !1685, !1688, !1689}
!1682 = !DILocalVariable(name: "obj", arg: 1, scope: !1678, file: !2, line: 44, type: !93)
!1683 = !DILocalVariable(name: "to", arg: 2, scope: !1678, file: !2, line: 44, type: !433)
!1684 = !DILocalVariable(name: "extra", arg: 3, scope: !1678, file: !2, line: 44, type: !128)
!1685 = !DILocalVariable(name: "size", scope: !1686, file: !2, line: 47, type: !128)
!1686 = distinct !DILexicalBlock(scope: !1687, file: !2, line: 46, column: 25)
!1687 = distinct !DILexicalBlock(scope: !1678, file: !2, line: 46, column: 9)
!1688 = !DILocalVariable(name: "hp", scope: !1686, file: !2, line: 48, type: !92)
!1689 = !DILocalVariable(name: "res", scope: !1686, file: !2, line: 49, type: !93)
!1690 = !DILocation(line: 44, column: 27, scope: !1678)
!1691 = !DILocation(line: 44, column: 41, scope: !1678)
!1692 = !DILocation(line: 44, column: 50, scope: !1678)
!1693 = !DILocation(line: 46, column: 10, scope: !1687)
!1694 = !DILocation(line: 46, column: 9, scope: !1678)
!1695 = !DILocation(line: 47, column: 9, scope: !1686)
!1696 = !DILocation(line: 47, column: 14, scope: !1686)
!1697 = !DILocation(line: 47, column: 21, scope: !1686)
!1698 = !DILocation(line: 48, column: 9, scope: !1686)
!1699 = !DILocation(line: 48, column: 16, scope: !1686)
!1700 = !DILocation(line: 48, column: 21, scope: !1686)
!1701 = !DILocation(line: 49, column: 9, scope: !1686)
!1702 = !DILocation(line: 49, column: 15, scope: !1686)
!1703 = !DILocation(line: 60, column: 15, scope: !1686)
!1704 = !DILocation(line: 60, column: 13, scope: !1686)
!1705 = !DILocation(line: 66, column: 16, scope: !1686)
!1706 = !DILocation(line: 66, column: 9, scope: !1686)
!1707 = !DILocation(line: 67, column: 5, scope: !1687)
!1708 = !DILocation(line: 68, column: 12, scope: !1678)
!1709 = !DILocation(line: 68, column: 5, scope: !1678)
!1710 = !DILocation(line: 69, column: 1, scope: !1678)
!1711 = distinct !DISubprogram(name: "size_object_x", scope: !2, file: !2, line: 80, type: !1712, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !1720)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!128, !93, !1714}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_literal_area_t", file: !266, line: 1121, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !266, line: 1118, size: 128, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "lit_purge_ptr", scope: !1716, file: !266, line: 1119, baseType: !92, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "lit_purge_sz", scope: !1716, file: !266, line: 1120, baseType: !128, size: 64, align: 64, offset: 64)
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1730, !1739, !1745, !1748, !1749, !1750, !1751, !1754, !1755, !1757, !1758, !1760, !1761, !1762, !1763, !1764, !1765, !1767}
!1721 = !DILocalVariable(name: "obj", arg: 1, scope: !1711, file: !2, line: 80, type: !93)
!1722 = !DILocalVariable(name: "litopt", arg: 2, scope: !1711, file: !2, line: 80, type: !1714)
!1723 = !DILocalVariable(name: "sum", scope: !1711, file: !2, line: 82, type: !128)
!1724 = !DILocalVariable(name: "ptr", scope: !1711, file: !2, line: 83, type: !92)
!1725 = !DILocalVariable(name: "arity", scope: !1711, file: !2, line: 84, type: !130)
!1726 = !DILocalVariable(name: "lit_purge_ptr", scope: !1711, file: !2, line: 85, type: !92)
!1727 = !DILocalVariable(name: "lit_purge_sz", scope: !1711, file: !2, line: 86, type: !128)
!1728 = !DILocalVariable(name: "s_default_estack", scope: !1711, file: !2, line: 90, type: !1729)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 1024, align: 64, elements: !135)
!1730 = !DILocalVariable(name: "s", scope: !1711, file: !2, line: 90, type: !1731)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsEStack", file: !266, line: 339, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsEStack_", file: !266, line: 333, size: 320, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737, !1738}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1732, file: !266, line: 334, baseType: !92, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1732, file: !266, line: 335, baseType: !92, size: 64, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1732, file: !266, line: 336, baseType: !92, size: 64, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "edefault", scope: !1732, file: !266, line: 337, baseType: !92, size: 64, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_type", scope: !1732, file: !266, line: 338, baseType: !551, size: 32, offset: 256)
!1739 = !DILocalVariable(name: "hdr", scope: !1740, file: !2, line: 109, type: !93)
!1740 = distinct !DILexicalBlock(scope: !1741, file: !2, line: 108, column: 6)
!1741 = distinct !DILexicalBlock(scope: !1742, file: !2, line: 94, column: 28)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !2, line: 93, column: 14)
!1743 = distinct !DILexicalBlock(scope: !1744, file: !2, line: 93, column: 5)
!1744 = distinct !DILexicalBlock(scope: !1711, file: !2, line: 93, column: 5)
!1745 = !DILocalVariable(name: "bptr", scope: !1746, file: !2, line: 142, type: !92)
!1746 = distinct !DILexicalBlock(scope: !1747, file: !2, line: 141, column: 7)
!1747 = distinct !DILexicalBlock(scope: !1740, file: !2, line: 116, column: 35)
!1748 = !DILocalVariable(name: "funp", scope: !1746, file: !2, line: 143, type: !98)
!1749 = !DILocalVariable(name: "eterms", scope: !1746, file: !2, line: 144, type: !61)
!1750 = !DILocalVariable(name: "sz", scope: !1746, file: !2, line: 145, type: !61)
!1751 = !DILocalVariable(name: "n", scope: !1752, file: !2, line: 161, type: !128)
!1752 = distinct !DILexicalBlock(scope: !1753, file: !2, line: 160, column: 29)
!1753 = distinct !DILexicalBlock(scope: !1747, file: !2, line: 158, column: 37)
!1754 = !DILocalVariable(name: "mp", scope: !1752, file: !2, line: 162, type: !242)
!1755 = !DILocalVariable(name: "head", scope: !1756, file: !2, line: 181, type: !92)
!1756 = distinct !DILexicalBlock(scope: !1753, file: !2, line: 180, column: 8)
!1757 = !DILocalVariable(name: "sz", scope: !1756, file: !2, line: 182, type: !128)
!1758 = !DILocalVariable(name: "real_bin", scope: !1759, file: !2, line: 206, type: !93)
!1759 = distinct !DILexicalBlock(scope: !1747, file: !2, line: 205, column: 7)
!1760 = !DILocalVariable(name: "offset", scope: !1759, file: !2, line: 207, type: !128)
!1761 = !DILocalVariable(name: "bitsize", scope: !1759, file: !2, line: 208, type: !128)
!1762 = !DILocalVariable(name: "bitoffs", scope: !1759, file: !2, line: 209, type: !128)
!1763 = !DILocalVariable(name: "extra_bytes", scope: !1759, file: !2, line: 210, type: !128)
!1764 = !DILocalVariable(name: "hdr", scope: !1759, file: !2, line: 211, type: !93)
!1765 = !DILocalVariable(name: "_sb", scope: !1766, file: !2, line: 212, type: !251)
!1766 = distinct !DILexicalBlock(scope: !1759, file: !2, line: 212, column: 4)
!1767 = !DILabel(scope: !1741, name: "pop_next", file: !2, line: 241)
!1768 = !DILocation(line: 80, column: 26, scope: !1711)
!1769 = !DILocation(line: 80, column: 52, scope: !1711)
!1770 = !DILocation(line: 82, column: 5, scope: !1711)
!1771 = !DILocation(line: 82, column: 10, scope: !1711)
!1772 = !DILocation(line: 83, column: 5, scope: !1711)
!1773 = !DILocation(line: 83, column: 12, scope: !1711)
!1774 = !DILocation(line: 84, column: 5, scope: !1711)
!1775 = !DILocation(line: 84, column: 9, scope: !1711)
!1776 = !DILocation(line: 85, column: 5, scope: !1711)
!1777 = !DILocation(line: 85, column: 12, scope: !1711)
!1778 = !DILocation(line: 85, column: 28, scope: !1711)
!1779 = !DILocation(line: 85, column: 37, scope: !1711)
!1780 = !DILocation(line: 85, column: 45, scope: !1711)
!1781 = !DILocation(line: 86, column: 5, scope: !1711)
!1782 = !DILocation(line: 86, column: 12, scope: !1711)
!1783 = !DILocation(line: 86, column: 28, scope: !1711)
!1784 = !DILocation(line: 86, column: 37, scope: !1711)
!1785 = !DILocation(line: 86, column: 45, scope: !1711)
!1786 = !DILocation(line: 90, column: 5, scope: !1711)
!1787 = !DILocation(line: 93, column: 5, scope: !1711)
!1788 = !DILocation(line: 94, column: 10, scope: !1742)
!1789 = !DILocation(line: 94, column: 2, scope: !1742)
!1790 = !DILocation(line: 96, column: 12, scope: !1741)
!1791 = !DILocation(line: 96, column: 10, scope: !1741)
!1792 = !DILocation(line: 97, column: 17, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1741, file: !2, line: 97, column: 17)
!1794 = !DILocation(line: 97, column: 24, scope: !1793)
!1795 = !DILocation(line: 97, column: 43, scope: !1793)
!1796 = !DILocation(line: 97, column: 47, scope: !1793)
!1797 = !DILocation(line: 97, column: 27, scope: !1793)
!1798 = !DILocation(line: 97, column: 52, scope: !1793)
!1799 = !DILocation(line: 97, column: 56, scope: !1793)
!1800 = !DILocation(line: 97, column: 17, scope: !1741)
!1801 = !DILocation(line: 98, column: 17, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1793, file: !2, line: 97, column: 84)
!1803 = !DILocation(line: 100, column: 10, scope: !1741)
!1804 = !DILocation(line: 101, column: 16, scope: !1741)
!1805 = !DILocation(line: 101, column: 12, scope: !1741)
!1806 = !DILocation(line: 101, column: 10, scope: !1741)
!1807 = !DILocation(line: 102, column: 11, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1741, file: !2, line: 102, column: 10)
!1809 = !DILocation(line: 102, column: 10, scope: !1741)
!1810 = !DILocation(line: 103, column: 3, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1808, file: !2, line: 102, column: 26)
!1812 = !DILocation(line: 103, column: 3, scope: !1813)
!1813 = distinct !DILexicalBlock(scope: !1811, file: !2, line: 103, column: 3)
!1814 = !DILocation(line: 103, column: 3, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1816, file: !2, line: 103, column: 3)
!1816 = distinct !DILexicalBlock(scope: !1813, file: !2, line: 103, column: 3)
!1817 = !DILocation(line: 103, column: 3, scope: !1816)
!1818 = !DILocation(line: 103, column: 3, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1815, file: !2, line: 103, column: 3)
!1820 = !DILocation(line: 104, column: 6, scope: !1811)
!1821 = !DILocation(line: 105, column: 13, scope: !1741)
!1822 = !DILocation(line: 105, column: 12, scope: !1741)
!1823 = !DILocation(line: 105, column: 10, scope: !1741)
!1824 = !DILocation(line: 106, column: 6, scope: !1741)
!1825 = !DILocation(line: 109, column: 3, scope: !1740)
!1826 = !DILocation(line: 109, column: 9, scope: !1740)
!1827 = !DILocation(line: 110, column: 23, scope: !1740)
!1828 = !DILocation(line: 110, column: 21, scope: !1740)
!1829 = !DILocation(line: 111, column: 21, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1740, file: !2, line: 111, column: 21)
!1831 = !DILocation(line: 111, column: 28, scope: !1830)
!1832 = !DILocation(line: 111, column: 47, scope: !1830)
!1833 = !DILocation(line: 111, column: 51, scope: !1830)
!1834 = !DILocation(line: 111, column: 31, scope: !1830)
!1835 = !DILocation(line: 111, column: 56, scope: !1830)
!1836 = !DILocation(line: 111, column: 60, scope: !1830)
!1837 = !DILocation(line: 111, column: 21, scope: !1740)
!1838 = !DILocation(line: 112, column: 21, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1830, file: !2, line: 111, column: 88)
!1840 = !DILocation(line: 114, column: 24, scope: !1740)
!1841 = !DILocation(line: 114, column: 23, scope: !1740)
!1842 = !DILocation(line: 114, column: 21, scope: !1740)
!1843 = !DILocation(line: 116, column: 11, scope: !1740)
!1844 = !DILocation(line: 116, column: 15, scope: !1740)
!1845 = !DILocation(line: 116, column: 3, scope: !1740)
!1846 = !DILocation(line: 118, column: 15, scope: !1747)
!1847 = !DILocation(line: 118, column: 13, scope: !1747)
!1848 = !DILocation(line: 119, column: 11, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1747, file: !2, line: 119, column: 11)
!1850 = !DILocation(line: 119, column: 17, scope: !1849)
!1851 = !DILocation(line: 119, column: 11, scope: !1747)
!1852 = !DILocation(line: 128, column: 4, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1849, file: !2, line: 119, column: 23)
!1854 = !DILocation(line: 130, column: 27, scope: !1747)
!1855 = !DILocation(line: 130, column: 25, scope: !1747)
!1856 = !DILocation(line: 131, column: 28, scope: !1747)
!1857 = !DILocation(line: 131, column: 34, scope: !1747)
!1858 = !DILocation(line: 131, column: 25, scope: !1747)
!1859 = !DILocation(line: 132, column: 7, scope: !1747)
!1860 = !DILocation(line: 132, column: 19, scope: !1747)
!1861 = !DILocation(line: 132, column: 22, scope: !1747)
!1862 = !DILocation(line: 133, column: 11, scope: !1863)
!1863 = distinct !DILexicalBlock(scope: !1747, file: !2, line: 132, column: 27)
!1864 = !DILocation(line: 133, column: 10, scope: !1863)
!1865 = !DILocation(line: 133, column: 8, scope: !1863)
!1866 = !DILocation(line: 134, column: 9, scope: !1867)
!1867 = distinct !DILexicalBlock(scope: !1863, file: !2, line: 134, column: 8)
!1868 = !DILocation(line: 134, column: 8, scope: !1863)
!1869 = !DILocation(line: 135, column: 8, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1867, file: !2, line: 134, column: 24)
!1871 = !DILocation(line: 135, column: 8, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1870, file: !2, line: 135, column: 8)
!1873 = !DILocation(line: 135, column: 8, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 135, column: 8)
!1875 = distinct !DILexicalBlock(scope: !1872, file: !2, line: 135, column: 8)
!1876 = !DILocation(line: 135, column: 8, scope: !1875)
!1877 = !DILocation(line: 135, column: 8, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1874, file: !2, line: 135, column: 8)
!1879 = !DILocation(line: 136, column: 4, scope: !1870)
!1880 = distinct !{!1880, !1859, !1881, !1882}
!1881 = !DILocation(line: 137, column: 7, scope: !1747)
!1882 = !{!"llvm.loop.mustprogress"}
!1883 = !DILocation(line: 138, column: 14, scope: !1747)
!1884 = !DILocation(line: 138, column: 13, scope: !1747)
!1885 = !DILocation(line: 138, column: 11, scope: !1747)
!1886 = !DILocation(line: 139, column: 7, scope: !1747)
!1887 = !DILocation(line: 142, column: 4, scope: !1746)
!1888 = !DILocation(line: 142, column: 11, scope: !1746)
!1889 = !DILocation(line: 142, column: 18, scope: !1746)
!1890 = !DILocation(line: 143, column: 4, scope: !1746)
!1891 = !DILocation(line: 143, column: 17, scope: !1746)
!1892 = !DILocation(line: 143, column: 40, scope: !1746)
!1893 = !DILocation(line: 144, column: 4, scope: !1746)
!1894 = !DILocation(line: 144, column: 13, scope: !1746)
!1895 = !DILocation(line: 144, column: 40, scope: !1746)
!1896 = !DILocation(line: 144, column: 46, scope: !1746)
!1897 = !DILocation(line: 144, column: 38, scope: !1746)
!1898 = !DILocation(line: 145, column: 4, scope: !1746)
!1899 = !DILocation(line: 145, column: 13, scope: !1746)
!1900 = !DILocation(line: 145, column: 18, scope: !1746)
!1901 = !DILocation(line: 146, column: 28, scope: !1746)
!1902 = !DILocation(line: 146, column: 26, scope: !1746)
!1903 = !DILocation(line: 146, column: 33, scope: !1746)
!1904 = !DILocation(line: 146, column: 31, scope: !1746)
!1905 = !DILocation(line: 146, column: 11, scope: !1746)
!1906 = !DILocation(line: 146, column: 8, scope: !1746)
!1907 = !DILocation(line: 147, column: 29, scope: !1746)
!1908 = !DILocation(line: 147, column: 27, scope: !1746)
!1909 = !DILocation(line: 147, column: 9, scope: !1746)
!1910 = !DILocation(line: 148, column: 4, scope: !1746)
!1911 = !DILocation(line: 148, column: 17, scope: !1746)
!1912 = !DILocation(line: 148, column: 20, scope: !1746)
!1913 = !DILocation(line: 149, column: 17, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1746, file: !2, line: 148, column: 25)
!1915 = !DILocation(line: 149, column: 12, scope: !1914)
!1916 = !DILocation(line: 149, column: 10, scope: !1914)
!1917 = !DILocation(line: 150, column: 11, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1914, file: !2, line: 150, column: 10)
!1919 = !DILocation(line: 150, column: 10, scope: !1914)
!1920 = !DILocation(line: 151, column: 8, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1918, file: !2, line: 150, column: 26)
!1922 = !DILocation(line: 151, column: 8, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1921, file: !2, line: 151, column: 8)
!1924 = !DILocation(line: 151, column: 8, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1926, file: !2, line: 151, column: 8)
!1926 = distinct !DILexicalBlock(scope: !1923, file: !2, line: 151, column: 8)
!1927 = !DILocation(line: 151, column: 8, scope: !1926)
!1928 = !DILocation(line: 151, column: 8, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1925, file: !2, line: 151, column: 8)
!1930 = !DILocation(line: 152, column: 6, scope: !1921)
!1931 = distinct !{!1931, !1910, !1932, !1882}
!1932 = !DILocation(line: 153, column: 4, scope: !1746)
!1933 = !DILocation(line: 154, column: 11, scope: !1746)
!1934 = !DILocation(line: 154, column: 10, scope: !1746)
!1935 = !DILocation(line: 154, column: 8, scope: !1746)
!1936 = !DILocation(line: 156, column: 7, scope: !1747)
!1937 = !DILocation(line: 158, column: 15, scope: !1747)
!1938 = !DILocation(line: 158, column: 7, scope: !1747)
!1939 = !DILocation(line: 161, column: 33, scope: !1752)
!1940 = !DILocation(line: 161, column: 38, scope: !1752)
!1941 = !DILocation(line: 162, column: 33, scope: !1752)
!1942 = !DILocation(line: 162, column: 44, scope: !1752)
!1943 = !DILocation(line: 163, column: 51, scope: !1752)
!1944 = !DILocation(line: 163, column: 37, scope: !1752)
!1945 = !DILocation(line: 164, column: 48, scope: !1752)
!1946 = !DILocation(line: 164, column: 37, scope: !1752)
!1947 = !DILocation(line: 165, column: 39, scope: !1752)
!1948 = !DILocation(line: 165, column: 60, scope: !1752)
!1949 = !DILocation(line: 165, column: 37, scope: !1752)
!1950 = !DILocation(line: 167, column: 40, scope: !1752)
!1951 = !DILocation(line: 167, column: 42, scope: !1752)
!1952 = !DILocation(line: 167, column: 37, scope: !1752)
!1953 = !DILocation(line: 168, column: 37, scope: !1752)
!1954 = !DILocation(line: 169, column: 33, scope: !1752)
!1955 = !DILocation(line: 169, column: 41, scope: !1752)
!1956 = !DILocation(line: 170, column: 47, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1752, file: !2, line: 169, column: 45)
!1958 = !DILocation(line: 170, column: 43, scope: !1957)
!1959 = !DILocation(line: 170, column: 41, scope: !1957)
!1960 = !DILocation(line: 171, column: 42, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !1957, file: !2, line: 171, column: 41)
!1962 = !DILocation(line: 171, column: 41, scope: !1957)
!1963 = !DILocation(line: 172, column: 41, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1961, file: !2, line: 171, column: 57)
!1965 = !DILocation(line: 172, column: 41, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1964, file: !2, line: 172, column: 41)
!1967 = !DILocation(line: 172, column: 41, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !2, line: 172, column: 41)
!1969 = distinct !DILexicalBlock(scope: !1966, file: !2, line: 172, column: 41)
!1970 = !DILocation(line: 172, column: 41, scope: !1969)
!1971 = !DILocation(line: 172, column: 41, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1968, file: !2, line: 172, column: 41)
!1973 = !DILocation(line: 173, column: 37, scope: !1964)
!1974 = distinct !{!1974, !1954, !1975, !1882}
!1975 = !DILocation(line: 174, column: 33, scope: !1752)
!1976 = !DILocation(line: 176, column: 29, scope: !1753)
!1977 = !DILocation(line: 181, column: 5, scope: !1756)
!1978 = !DILocation(line: 181, column: 12, scope: !1756)
!1979 = !DILocation(line: 182, column: 5, scope: !1756)
!1980 = !DILocation(line: 182, column: 10, scope: !1756)
!1981 = !DILocation(line: 183, column: 13, scope: !1756)
!1982 = !DILocation(line: 183, column: 11, scope: !1756)
!1983 = !DILocation(line: 184, column: 13, scope: !1756)
!1984 = !DILocation(line: 184, column: 11, scope: !1756)
!1985 = !DILocation(line: 185, column: 17, scope: !1756)
!1986 = !DILocation(line: 185, column: 15, scope: !1756)
!1987 = !DILocation(line: 185, column: 22, scope: !1756)
!1988 = !DILocation(line: 185, column: 20, scope: !1756)
!1989 = !DILocation(line: 185, column: 10, scope: !1756)
!1990 = !DILocation(line: 186, column: 17, scope: !1756)
!1991 = !DILocation(line: 186, column: 15, scope: !1756)
!1992 = !DILocation(line: 186, column: 10, scope: !1756)
!1993 = !DILocation(line: 188, column: 9, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1756, file: !2, line: 188, column: 9)
!1995 = !DILocation(line: 188, column: 12, scope: !1994)
!1996 = !DILocation(line: 188, column: 9, scope: !1756)
!1997 = !DILocation(line: 189, column: 9, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1994, file: !2, line: 188, column: 18)
!1999 = !DILocation(line: 191, column: 5, scope: !1756)
!2000 = !DILocation(line: 191, column: 13, scope: !1756)
!2001 = !DILocation(line: 191, column: 16, scope: !1756)
!2002 = !DILocation(line: 192, column: 15, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1756, file: !2, line: 191, column: 21)
!2004 = !DILocation(line: 192, column: 20, scope: !2003)
!2005 = !DILocation(line: 192, column: 13, scope: !2003)
!2006 = !DILocation(line: 193, column: 14, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2003, file: !2, line: 193, column: 13)
!2008 = !DILocation(line: 193, column: 13, scope: !2003)
!2009 = !DILocation(line: 194, column: 6, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2007, file: !2, line: 193, column: 29)
!2011 = !DILocation(line: 194, column: 6, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !2010, file: !2, line: 194, column: 6)
!2013 = !DILocation(line: 194, column: 6, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !2015, file: !2, line: 194, column: 6)
!2015 = distinct !DILexicalBlock(scope: !2012, file: !2, line: 194, column: 6)
!2016 = !DILocation(line: 194, column: 6, scope: !2015)
!2017 = !DILocation(line: 194, column: 6, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2014, file: !2, line: 194, column: 6)
!2019 = !DILocation(line: 195, column: 9, scope: !2010)
!2020 = distinct !{!2020, !1999, !2021, !1882}
!2021 = !DILocation(line: 196, column: 5, scope: !1756)
!2022 = !DILocation(line: 197, column: 11, scope: !1756)
!2023 = !DILocation(line: 197, column: 9, scope: !1756)
!2024 = !DILocation(line: 198, column: 8, scope: !1753)
!2025 = !DILocation(line: 199, column: 8, scope: !1753)
!2026 = !DILocation(line: 201, column: 73, scope: !1753)
!2027 = !DILocation(line: 201, column: 8, scope: !1753)
!2028 = !DILocation(line: 203, column: 7, scope: !1747)
!2029 = !DILocation(line: 206, column: 4, scope: !1759)
!2030 = !DILocation(line: 206, column: 10, scope: !1759)
!2031 = !DILocation(line: 207, column: 4, scope: !1759)
!2032 = !DILocation(line: 208, column: 4, scope: !1759)
!2033 = !DILocation(line: 208, column: 9, scope: !1759)
!2034 = !DILocation(line: 209, column: 4, scope: !1759)
!2035 = !DILocation(line: 209, column: 9, scope: !1759)
!2036 = !DILocation(line: 210, column: 4, scope: !1759)
!2037 = !DILocation(line: 210, column: 9, scope: !1759)
!2038 = !DILocation(line: 211, column: 4, scope: !1759)
!2039 = !DILocation(line: 211, column: 10, scope: !1759)
!2040 = !DILocation(line: 212, column: 4, scope: !1759)
!2041 = !DILocation(line: 212, column: 4, scope: !1766)
!2042 = !DILocation(line: 212, column: 4, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !1766, file: !2, line: 212, column: 4)
!2044 = !DILocation(line: 212, column: 4, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2043, file: !2, line: 212, column: 4)
!2046 = !DILocation(line: 212, column: 4, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2043, file: !2, line: 212, column: 4)
!2048 = !DILocation(line: 213, column: 9, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !1759, file: !2, line: 213, column: 8)
!2050 = !DILocation(line: 213, column: 19, scope: !2049)
!2051 = !DILocation(line: 213, column: 17, scope: !2049)
!2052 = !DILocation(line: 213, column: 28, scope: !2049)
!2053 = !DILocation(line: 213, column: 8, scope: !1759)
!2054 = !DILocation(line: 214, column: 12, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2049, file: !2, line: 213, column: 33)
!2056 = !DILocation(line: 215, column: 20, scope: !2055)
!2057 = !DILocation(line: 216, column: 4, scope: !2055)
!2058 = !DILocation(line: 216, column: 16, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2049, file: !2, line: 216, column: 15)
!2060 = !DILocation(line: 216, column: 26, scope: !2059)
!2061 = !DILocation(line: 216, column: 24, scope: !2059)
!2062 = !DILocation(line: 216, column: 35, scope: !2059)
!2063 = !DILocation(line: 216, column: 15, scope: !2049)
!2064 = !DILocation(line: 217, column: 12, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2059, file: !2, line: 216, column: 40)
!2066 = !DILocation(line: 218, column: 20, scope: !2065)
!2067 = !DILocation(line: 219, column: 4, scope: !2065)
!2068 = !DILocation(line: 220, column: 20, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2059, file: !2, line: 219, column: 11)
!2070 = !DILocation(line: 222, column: 11, scope: !1759)
!2071 = !DILocation(line: 222, column: 10, scope: !1759)
!2072 = !DILocation(line: 222, column: 8, scope: !1759)
!2073 = !DILocation(line: 223, column: 8, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !1759, file: !2, line: 223, column: 8)
!2075 = !DILocation(line: 223, column: 26, scope: !2074)
!2076 = !DILocation(line: 223, column: 8, scope: !1759)
!2077 = !DILocation(line: 224, column: 12, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2074, file: !2, line: 223, column: 49)
!2079 = !DILocation(line: 225, column: 4, scope: !2078)
!2080 = !DILocation(line: 226, column: 15, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2074, file: !2, line: 225, column: 11)
!2082 = !DILocation(line: 226, column: 12, scope: !2081)
!2083 = !DILocation(line: 229, column: 7, scope: !1747)
!2084 = !DILocation(line: 232, column: 7, scope: !1747)
!2085 = !DILocation(line: 235, column: 14, scope: !1747)
!2086 = !DILocation(line: 235, column: 34, scope: !1747)
!2087 = !DILocation(line: 235, column: 11, scope: !1747)
!2088 = !DILocation(line: 236, column: 7, scope: !1747)
!2089 = !DILocation(line: 238, column: 6, scope: !1741)
!2090 = !DILocation(line: 239, column: 6, scope: !1741)
!2091 = !DILocation(line: 241, column: 2, scope: !1741)
!2092 = !DILocation(line: 242, column: 10, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !1741, file: !2, line: 242, column: 10)
!2094 = !DILocation(line: 242, column: 10, scope: !1741)
!2095 = !DILocation(line: 243, column: 3, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2093, file: !2, line: 242, column: 29)
!2097 = !DILocation(line: 243, column: 3, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2099, file: !2, line: 243, column: 3)
!2099 = distinct !DILexicalBlock(scope: !2096, file: !2, line: 243, column: 3)
!2100 = !DILocation(line: 243, column: 3, scope: !2099)
!2101 = !DILocation(line: 243, column: 3, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2098, file: !2, line: 243, column: 3)
!2103 = !DILocation(line: 245, column: 10, scope: !2096)
!2104 = !DILocation(line: 245, column: 3, scope: !2096)
!2105 = !DILocation(line: 247, column: 12, scope: !1741)
!2106 = !DILocation(line: 247, column: 10, scope: !1741)
!2107 = !DILocation(line: 248, column: 6, scope: !1741)
!2108 = !DILocation(line: 250, column: 67, scope: !1741)
!2109 = !DILocation(line: 250, column: 6, scope: !1741)
!2110 = !DILocation(line: 93, column: 5, scope: !1743)
!2111 = distinct !{!2111, !2112, !2113}
!2112 = !DILocation(line: 93, column: 5, scope: !1744)
!2113 = !DILocation(line: 252, column: 5, scope: !1744)
!2114 = !DILocation(line: 253, column: 1, scope: !1711)
!2115 = distinct !DISubprogram(name: "erts_cp_size", scope: !87, file: !87, line: 326, type: !642, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57)
!2116 = !DILocation(line: 328, column: 9, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2115, file: !87, line: 328, column: 9)
!2118 = !DILocation(line: 328, column: 27, scope: !2117)
!2119 = !DILocation(line: 328, column: 9, scope: !2115)
!2120 = !DILocation(line: 329, column: 9, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2117, file: !87, line: 328, column: 52)
!2122 = !DILocation(line: 333, column: 5, scope: !2115)
!2123 = !DILocation(line: 334, column: 1, scope: !2115)
!2124 = !DISubprogram(name: "erts_heap_alloc", scope: !60, file: !60, line: 1517, type: !2125, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{!92, !433, !128, !128}
!2127 = distinct !DISubprogram(name: "copy_struct_x", scope: !2, file: !2, line: 625, type: !2128, scopeLine: 631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !2133)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!93, !93, !128, !2130, !2131, !2132, !1714}
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!2133 = !{!2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2162, !2163, !2166, !2168, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2180, !2181, !2183, !2184, !2187, !2189, !2191, !2192, !2194}
!2134 = !DILocalVariable(name: "obj", arg: 1, scope: !2127, file: !2, line: 625, type: !93)
!2135 = !DILocalVariable(name: "sz", arg: 2, scope: !2127, file: !2, line: 625, type: !128)
!2136 = !DILocalVariable(name: "hpp", arg: 3, scope: !2127, file: !2, line: 625, type: !2130)
!2137 = !DILocalVariable(name: "off_heap", arg: 4, scope: !2127, file: !2, line: 625, type: !2131)
!2138 = !DILocalVariable(name: "bsz", arg: 5, scope: !2127, file: !2, line: 626, type: !2132)
!2139 = !DILocalVariable(name: "litopt", arg: 6, scope: !2127, file: !2, line: 626, type: !1714)
!2140 = !DILocalVariable(name: "hstart", scope: !2127, file: !2, line: 632, type: !263)
!2141 = !DILocalVariable(name: "hsize", scope: !2127, file: !2, line: 633, type: !128)
!2142 = !DILocalVariable(name: "htop", scope: !2127, file: !2, line: 634, type: !92)
!2143 = !DILocalVariable(name: "hbot", scope: !2127, file: !2, line: 635, type: !92)
!2144 = !DILocalVariable(name: "hp", scope: !2127, file: !2, line: 636, type: !92)
!2145 = !DILocalVariable(name: "objp", scope: !2127, file: !2, line: 637, type: !2146)
!2146 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !92)
!2147 = !DILocalVariable(name: "tp", scope: !2127, file: !2, line: 638, type: !92)
!2148 = !DILocalVariable(name: "res", scope: !2127, file: !2, line: 639, type: !93)
!2149 = !DILocalVariable(name: "elem", scope: !2127, file: !2, line: 640, type: !93)
!2150 = !DILocalVariable(name: "tailp", scope: !2127, file: !2, line: 641, type: !92)
!2151 = !DILocalVariable(name: "argp", scope: !2127, file: !2, line: 642, type: !92)
!2152 = !DILocalVariable(name: "const_tuple", scope: !2127, file: !2, line: 643, type: !92)
!2153 = !DILocalVariable(name: "hdr", scope: !2127, file: !2, line: 644, type: !93)
!2154 = !DILocalVariable(name: "hend", scope: !2127, file: !2, line: 645, type: !92)
!2155 = !DILocalVariable(name: "i", scope: !2127, file: !2, line: 646, type: !130)
!2156 = !DILocalVariable(name: "lit_purge_ptr", scope: !2127, file: !2, line: 647, type: !92)
!2157 = !DILocalVariable(name: "lit_purge_sz", scope: !2127, file: !2, line: 648, type: !128)
!2158 = !DILabel(scope: !2127, name: "L_copy", file: !2, line: 681)
!2159 = !DILabel(scope: !2160, name: "L_copy_list", file: !2, line: 697)
!2160 = distinct !DILexicalBlock(scope: !2161, file: !2, line: 684, column: 28)
!2161 = distinct !DILexicalBlock(scope: !2127, file: !2, line: 682, column: 24)
!2162 = !DILabel(scope: !2160, name: "L_copy_boxed", file: !2, line: 744)
!2163 = !DILocalVariable(name: "const_flag", scope: !2164, file: !2, line: 754, type: !130)
!2164 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 753, column: 3)
!2165 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 751, column: 38)
!2166 = !DILocalVariable(name: "pb", scope: !2167, file: !2, line: 780, type: !264)
!2167 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 779, column: 3)
!2168 = !DILocalVariable(name: "sb", scope: !2169, file: !2, line: 803, type: !251)
!2169 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 802, column: 3)
!2170 = !DILocalVariable(name: "real_bin", scope: !2169, file: !2, line: 804, type: !93)
!2171 = !DILocalVariable(name: "bit_offset", scope: !2169, file: !2, line: 805, type: !128)
!2172 = !DILocalVariable(name: "bit_size", scope: !2169, file: !2, line: 806, type: !128)
!2173 = !DILocalVariable(name: "offset", scope: !2169, file: !2, line: 807, type: !128)
!2174 = !DILocalVariable(name: "size", scope: !2169, file: !2, line: 808, type: !516)
!2175 = !DILocalVariable(name: "extra_bytes", scope: !2169, file: !2, line: 809, type: !128)
!2176 = !DILocalVariable(name: "real_size", scope: !2169, file: !2, line: 810, type: !128)
!2177 = !DILocalVariable(name: "from", scope: !2178, file: !2, line: 821, type: !290)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !2, line: 820, column: 54)
!2179 = distinct !DILexicalBlock(scope: !2169, file: !2, line: 820, column: 11)
!2180 = !DILocalVariable(name: "to", scope: !2178, file: !2, line: 822, type: !290)
!2181 = !DILocalVariable(name: "from", scope: !2182, file: !2, line: 830, type: !264)
!2182 = distinct !DILexicalBlock(scope: !2179, file: !2, line: 829, column: 14)
!2183 = !DILocalVariable(name: "to", scope: !2182, file: !2, line: 831, type: !264)
!2184 = !DILocalVariable(name: "res", scope: !2185, file: !2, line: 851, type: !251)
!2185 = distinct !DILexicalBlock(scope: !2186, file: !2, line: 850, column: 29)
!2186 = distinct !DILexicalBlock(scope: !2169, file: !2, line: 850, column: 11)
!2187 = !DILocalVariable(name: "funp", scope: !2188, file: !2, line: 868, type: !98)
!2188 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 867, column: 3)
!2189 = !DILocalVariable(name: "etp", scope: !2190, file: !2, line: 892, type: !298)
!2190 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 891, column: 3)
!2191 = !DILabel(scope: !2165, name: "L_off_heap_node_container_common", file: !2, line: 899)
!2192 = !DILocalVariable(name: "ohhp", scope: !2193, file: !2, line: 901, type: !228)
!2193 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 900, column: 3)
!2194 = !DILocalVariable(name: "mreft", scope: !2195, file: !2, line: 944, type: !1666)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !2, line: 943, column: 33)
!2196 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 943, column: 7)
!2197 = !DILocation(line: 625, column: 27, scope: !2127)
!2198 = !DILocation(line: 625, column: 37, scope: !2127)
!2199 = !DILocation(line: 625, column: 49, scope: !2127)
!2200 = !DILocation(line: 625, column: 66, scope: !2127)
!2201 = !DILocation(line: 626, column: 27, scope: !2127)
!2202 = !DILocation(line: 626, column: 53, scope: !2127)
!2203 = !DILocation(line: 632, column: 5, scope: !2127)
!2204 = !DILocation(line: 632, column: 11, scope: !2127)
!2205 = !DILocation(line: 633, column: 5, scope: !2127)
!2206 = !DILocation(line: 633, column: 10, scope: !2127)
!2207 = !DILocation(line: 634, column: 5, scope: !2127)
!2208 = !DILocation(line: 634, column: 12, scope: !2127)
!2209 = !DILocation(line: 635, column: 5, scope: !2127)
!2210 = !DILocation(line: 635, column: 12, scope: !2127)
!2211 = !DILocation(line: 636, column: 5, scope: !2127)
!2212 = !DILocation(line: 636, column: 12, scope: !2127)
!2213 = !DILocation(line: 637, column: 5, scope: !2127)
!2214 = !DILocation(line: 637, column: 26, scope: !2127)
!2215 = !DILocation(line: 638, column: 5, scope: !2127)
!2216 = !DILocation(line: 638, column: 12, scope: !2127)
!2217 = !DILocation(line: 639, column: 5, scope: !2127)
!2218 = !DILocation(line: 639, column: 12, scope: !2127)
!2219 = !DILocation(line: 640, column: 5, scope: !2127)
!2220 = !DILocation(line: 640, column: 12, scope: !2127)
!2221 = !DILocation(line: 641, column: 5, scope: !2127)
!2222 = !DILocation(line: 641, column: 12, scope: !2127)
!2223 = !DILocation(line: 642, column: 5, scope: !2127)
!2224 = !DILocation(line: 642, column: 12, scope: !2127)
!2225 = !DILocation(line: 643, column: 5, scope: !2127)
!2226 = !DILocation(line: 643, column: 12, scope: !2127)
!2227 = !DILocation(line: 644, column: 5, scope: !2127)
!2228 = !DILocation(line: 644, column: 11, scope: !2127)
!2229 = !DILocation(line: 645, column: 5, scope: !2127)
!2230 = !DILocation(line: 645, column: 12, scope: !2127)
!2231 = !DILocation(line: 646, column: 5, scope: !2127)
!2232 = !DILocation(line: 646, column: 9, scope: !2127)
!2233 = !DILocation(line: 647, column: 5, scope: !2127)
!2234 = !DILocation(line: 647, column: 12, scope: !2127)
!2235 = !DILocation(line: 647, column: 28, scope: !2127)
!2236 = !DILocation(line: 647, column: 37, scope: !2127)
!2237 = !DILocation(line: 647, column: 45, scope: !2127)
!2238 = !DILocation(line: 648, column: 5, scope: !2127)
!2239 = !DILocation(line: 648, column: 12, scope: !2127)
!2240 = !DILocation(line: 648, column: 28, scope: !2127)
!2241 = !DILocation(line: 648, column: 37, scope: !2127)
!2242 = !DILocation(line: 648, column: 45, scope: !2127)
!2243 = !DILocation(line: 655, column: 9, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2127, file: !2, line: 655, column: 9)
!2245 = !DILocation(line: 655, column: 9, scope: !2127)
!2246 = !DILocation(line: 656, column: 9, scope: !2244)
!2247 = !DILocation(line: 656, column: 2, scope: !2244)
!2248 = !DILocation(line: 660, column: 5, scope: !2127)
!2249 = !DILocation(line: 660, column: 5, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2127, file: !2, line: 660, column: 5)
!2251 = !DILocation(line: 662, column: 18, scope: !2127)
!2252 = !DILocation(line: 662, column: 17, scope: !2127)
!2253 = !DILocation(line: 662, column: 15, scope: !2127)
!2254 = !DILocation(line: 662, column: 8, scope: !2127)
!2255 = !DILocation(line: 663, column: 19, scope: !2127)
!2256 = !DILocation(line: 663, column: 26, scope: !2127)
!2257 = !DILocation(line: 663, column: 24, scope: !2127)
!2258 = !DILocation(line: 663, column: 17, scope: !2127)
!2259 = !DILocation(line: 663, column: 10, scope: !2127)
!2260 = !DILocation(line: 664, column: 22, scope: !2127)
!2261 = !DILocation(line: 664, column: 12, scope: !2127)
!2262 = !DILocation(line: 665, column: 21, scope: !2127)
!2263 = !DILocation(line: 665, column: 28, scope: !2127)
!2264 = !DILocation(line: 665, column: 26, scope: !2127)
!2265 = !DILocation(line: 665, column: 11, scope: !2127)
!2266 = !DILocation(line: 666, column: 17, scope: !2127)
!2267 = !DILocation(line: 669, column: 13, scope: !2127)
!2268 = !DILocation(line: 669, column: 5, scope: !2127)
!2269 = !DILocation(line: 671, column: 7, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2127, file: !2, line: 669, column: 31)
!2271 = !DILocation(line: 672, column: 9, scope: !2270)
!2272 = !DILocation(line: 672, column: 7, scope: !2270)
!2273 = !DILocation(line: 673, column: 2, scope: !2270)
!2274 = !DILocation(line: 674, column: 34, scope: !2270)
!2275 = !DILocation(line: 674, column: 42, scope: !2270)
!2276 = !DILocation(line: 678, column: 23, scope: !2270)
!2277 = !DILocation(line: 676, column: 2, scope: !2270)
!2278 = !DILocation(line: 681, column: 2, scope: !2127)
!2279 = !DILocation(line: 682, column: 5, scope: !2127)
!2280 = !DILocation(line: 682, column: 12, scope: !2127)
!2281 = !DILocation(line: 682, column: 18, scope: !2127)
!2282 = !DILocation(line: 682, column: 15, scope: !2127)
!2283 = !DILocation(line: 683, column: 9, scope: !2161)
!2284 = !DILocation(line: 683, column: 8, scope: !2161)
!2285 = !DILocation(line: 683, column: 6, scope: !2161)
!2286 = !DILocation(line: 684, column: 10, scope: !2161)
!2287 = !DILocation(line: 684, column: 2, scope: !2161)
!2288 = !DILocation(line: 686, column: 8, scope: !2160)
!2289 = !DILocation(line: 687, column: 6, scope: !2160)
!2290 = !DILocation(line: 689, column: 13, scope: !2160)
!2291 = !DILocation(line: 689, column: 11, scope: !2160)
!2292 = !DILocation(line: 690, column: 10, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 690, column: 10)
!2294 = !DILocation(line: 690, column: 10, scope: !2160)
!2295 = !DILocation(line: 691, column: 5, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2293, file: !2, line: 690, column: 41)
!2297 = !DILocation(line: 692, column: 3, scope: !2296)
!2298 = !DILocation(line: 694, column: 15, scope: !2160)
!2299 = !DILocation(line: 694, column: 11, scope: !2160)
!2300 = !DILocation(line: 694, column: 6, scope: !2160)
!2301 = !DILocation(line: 697, column: 2, scope: !2160)
!2302 = !DILocation(line: 698, column: 14, scope: !2160)
!2303 = !DILocation(line: 698, column: 12, scope: !2160)
!2304 = !DILocation(line: 699, column: 17, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 699, column: 17)
!2306 = !DILocation(line: 699, column: 24, scope: !2305)
!2307 = !DILocation(line: 699, column: 43, scope: !2305)
!2308 = !DILocation(line: 699, column: 47, scope: !2305)
!2309 = !DILocation(line: 699, column: 27, scope: !2305)
!2310 = !DILocation(line: 699, column: 53, scope: !2305)
!2311 = !DILocation(line: 699, column: 57, scope: !2305)
!2312 = !DILocation(line: 699, column: 17, scope: !2160)
!2313 = !DILocation(line: 700, column: 26, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2305, file: !2, line: 699, column: 86)
!2315 = !DILocation(line: 700, column: 18, scope: !2314)
!2316 = !DILocation(line: 700, column: 24, scope: !2314)
!2317 = !DILocation(line: 701, column: 17, scope: !2314)
!2318 = !DILocation(line: 703, column: 6, scope: !2160)
!2319 = !DILocation(line: 704, column: 8, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2321, file: !2, line: 703, column: 15)
!2321 = distinct !DILexicalBlock(scope: !2322, file: !2, line: 703, column: 6)
!2322 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 703, column: 6)
!2323 = !DILocation(line: 704, column: 6, scope: !2320)
!2324 = !DILocation(line: 705, column: 10, scope: !2320)
!2325 = !DILocation(line: 705, column: 8, scope: !2320)
!2326 = !DILocation(line: 706, column: 7, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2320, file: !2, line: 706, column: 7)
!2328 = !DILocation(line: 706, column: 7, scope: !2320)
!2329 = !DILocation(line: 707, column: 12, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2327, file: !2, line: 706, column: 23)
!2331 = !DILocation(line: 708, column: 19, scope: !2330)
!2332 = !DILocation(line: 708, column: 7, scope: !2330)
!2333 = !DILocation(line: 708, column: 17, scope: !2330)
!2334 = !DILocation(line: 709, column: 16, scope: !2330)
!2335 = !DILocation(line: 709, column: 13, scope: !2330)
!2336 = !DILocation(line: 710, column: 3, scope: !2330)
!2337 = !DILocation(line: 711, column: 19, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2327, file: !2, line: 710, column: 10)
!2339 = !DILocation(line: 711, column: 7, scope: !2338)
!2340 = !DILocation(line: 711, column: 17, scope: !2338)
!2341 = !DILocation(line: 712, column: 16, scope: !2338)
!2342 = !DILocation(line: 712, column: 13, scope: !2338)
!2343 = !DILocation(line: 713, column: 12, scope: !2338)
!2344 = !DILocation(line: 715, column: 9, scope: !2320)
!2345 = !DILocation(line: 715, column: 4, scope: !2320)
!2346 = !DILocation(line: 715, column: 7, scope: !2320)
!2347 = !DILocation(line: 716, column: 9, scope: !2320)
!2348 = !DILocation(line: 716, column: 7, scope: !2320)
!2349 = !DILocation(line: 718, column: 8, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2320, file: !2, line: 718, column: 7)
!2351 = !DILocation(line: 718, column: 7, scope: !2320)
!2352 = !DILocation(line: 719, column: 7, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2350, file: !2, line: 718, column: 22)
!2354 = !DILocation(line: 721, column: 10, scope: !2320)
!2355 = !DILocation(line: 721, column: 8, scope: !2320)
!2356 = !DILocation(line: 723, column: 21, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2320, file: !2, line: 723, column: 21)
!2358 = !DILocation(line: 723, column: 28, scope: !2357)
!2359 = !DILocation(line: 723, column: 47, scope: !2357)
!2360 = !DILocation(line: 723, column: 51, scope: !2357)
!2361 = !DILocation(line: 723, column: 31, scope: !2357)
!2362 = !DILocation(line: 723, column: 57, scope: !2357)
!2363 = !DILocation(line: 723, column: 61, scope: !2357)
!2364 = !DILocation(line: 723, column: 21, scope: !2320)
!2365 = !DILocation(line: 724, column: 30, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2357, file: !2, line: 723, column: 90)
!2367 = !DILocation(line: 724, column: 22, scope: !2366)
!2368 = !DILocation(line: 724, column: 28, scope: !2366)
!2369 = !DILocation(line: 725, column: 21, scope: !2366)
!2370 = !DILocation(line: 703, column: 6, scope: !2321)
!2371 = distinct !{!2371, !2372, !2373}
!2372 = !DILocation(line: 703, column: 6, scope: !2322)
!2373 = !DILocation(line: 727, column: 6, scope: !2322)
!2374 = !DILocation(line: 728, column: 14, scope: !2160)
!2375 = !DILocation(line: 728, column: 6, scope: !2160)
!2376 = !DILocation(line: 729, column: 40, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 728, column: 32)
!2378 = !DILocation(line: 729, column: 32, scope: !2377)
!2379 = !DILocation(line: 729, column: 38, scope: !2377)
!2380 = !DILocation(line: 729, column: 45, scope: !2377)
!2381 = !DILocation(line: 730, column: 37, scope: !2377)
!2382 = !DILocation(line: 730, column: 35, scope: !2377)
!2383 = !DILocation(line: 730, column: 44, scope: !2377)
!2384 = !DILocation(line: 734, column: 24, scope: !2377)
!2385 = !DILocation(line: 732, column: 3, scope: !2377)
!2386 = !DILocation(line: 738, column: 10, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 738, column: 10)
!2388 = !DILocation(line: 738, column: 10, scope: !2160)
!2389 = !DILocation(line: 739, column: 5, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2387, file: !2, line: 738, column: 51)
!2391 = !DILocation(line: 740, column: 3, scope: !2390)
!2392 = !DILocation(line: 742, column: 15, scope: !2160)
!2393 = !DILocation(line: 742, column: 11, scope: !2160)
!2394 = !DILocation(line: 742, column: 6, scope: !2160)
!2395 = !DILocation(line: 744, column: 2, scope: !2160)
!2396 = !DILocation(line: 745, column: 13, scope: !2160)
!2397 = !DILocation(line: 745, column: 11, scope: !2160)
!2398 = !DILocation(line: 746, column: 17, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 746, column: 17)
!2400 = !DILocation(line: 746, column: 24, scope: !2399)
!2401 = !DILocation(line: 746, column: 43, scope: !2399)
!2402 = !DILocation(line: 746, column: 47, scope: !2399)
!2403 = !DILocation(line: 746, column: 27, scope: !2399)
!2404 = !DILocation(line: 746, column: 53, scope: !2399)
!2405 = !DILocation(line: 746, column: 57, scope: !2399)
!2406 = !DILocation(line: 746, column: 17, scope: !2160)
!2407 = !DILocation(line: 747, column: 25, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2399, file: !2, line: 746, column: 86)
!2409 = !DILocation(line: 747, column: 18, scope: !2408)
!2410 = !DILocation(line: 747, column: 23, scope: !2408)
!2411 = !DILocation(line: 748, column: 17, scope: !2408)
!2412 = !DILocation(line: 750, column: 13, scope: !2160)
!2413 = !DILocation(line: 750, column: 12, scope: !2160)
!2414 = !DILocation(line: 750, column: 10, scope: !2160)
!2415 = !DILocation(line: 751, column: 14, scope: !2160)
!2416 = !DILocation(line: 751, column: 18, scope: !2160)
!2417 = !DILocation(line: 751, column: 6, scope: !2160)
!2418 = !DILocation(line: 754, column: 7, scope: !2164)
!2419 = !DILocation(line: 754, column: 11, scope: !2164)
!2420 = !DILocation(line: 755, column: 11, scope: !2164)
!2421 = !DILocation(line: 755, column: 9, scope: !2164)
!2422 = !DILocation(line: 756, column: 25, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2164, file: !2, line: 756, column: 25)
!2424 = !DILocation(line: 756, column: 27, scope: !2423)
!2425 = !DILocation(line: 756, column: 25, scope: !2164)
!2426 = !DILocation(line: 760, column: 33, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2423, file: !2, line: 756, column: 33)
!2428 = !DILocation(line: 760, column: 26, scope: !2427)
!2429 = !DILocation(line: 760, column: 31, scope: !2427)
!2430 = !DILocation(line: 761, column: 25, scope: !2427)
!2431 = !DILocation(line: 763, column: 15, scope: !2164)
!2432 = !DILocation(line: 763, column: 8, scope: !2164)
!2433 = !DILocation(line: 763, column: 13, scope: !2164)
!2434 = !DILocation(line: 764, column: 12, scope: !2164)
!2435 = !DILocation(line: 764, column: 10, scope: !2164)
!2436 = !DILocation(line: 765, column: 22, scope: !2164)
!2437 = !DILocation(line: 765, column: 17, scope: !2164)
!2438 = !DILocation(line: 765, column: 12, scope: !2164)
!2439 = !DILocation(line: 765, column: 15, scope: !2164)
!2440 = !DILocation(line: 766, column: 7, scope: !2164)
!2441 = !DILocation(line: 766, column: 15, scope: !2164)
!2442 = !DILocation(line: 767, column: 16, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2164, file: !2, line: 766, column: 19)
!2444 = !DILocation(line: 767, column: 11, scope: !2443)
!2445 = !DILocation(line: 767, column: 9, scope: !2443)
!2446 = !DILocation(line: 768, column: 9, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !2, line: 768, column: 8)
!2448 = !DILocation(line: 768, column: 8, scope: !2443)
!2449 = !DILocation(line: 769, column: 19, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2447, file: !2, line: 768, column: 25)
!2451 = !DILocation(line: 770, column: 4, scope: !2450)
!2452 = !DILocation(line: 771, column: 14, scope: !2443)
!2453 = !DILocation(line: 771, column: 9, scope: !2443)
!2454 = !DILocation(line: 771, column: 12, scope: !2443)
!2455 = distinct !{!2455, !2440, !2456, !1882}
!2456 = !DILocation(line: 772, column: 7, scope: !2164)
!2457 = !DILocation(line: 773, column: 11, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2164, file: !2, line: 773, column: 11)
!2459 = !DILocation(line: 773, column: 11, scope: !2164)
!2460 = !DILocation(line: 774, column: 18, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2458, file: !2, line: 773, column: 23)
!2462 = !DILocation(line: 774, column: 16, scope: !2461)
!2463 = !DILocation(line: 775, column: 7, scope: !2461)
!2464 = !DILocation(line: 776, column: 3, scope: !2165)
!2465 = !DILocation(line: 777, column: 3, scope: !2165)
!2466 = !DILocation(line: 780, column: 7, scope: !2167)
!2467 = !DILocation(line: 780, column: 16, scope: !2167)
!2468 = !DILocation(line: 782, column: 24, scope: !2167)
!2469 = !DILocation(line: 782, column: 10, scope: !2167)
!2470 = !DILocation(line: 783, column: 11, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2167, file: !2, line: 783, column: 11)
!2472 = !DILocation(line: 783, column: 15, scope: !2471)
!2473 = !DILocation(line: 783, column: 11, scope: !2167)
!2474 = !DILocation(line: 784, column: 36, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2471, file: !2, line: 783, column: 22)
!2476 = !DILocation(line: 784, column: 4, scope: !2475)
!2477 = !DILocation(line: 785, column: 7, scope: !2475)
!2478 = !DILocation(line: 786, column: 11, scope: !2167)
!2479 = !DILocation(line: 786, column: 33, scope: !2167)
!2480 = !DILocation(line: 786, column: 9, scope: !2167)
!2481 = !DILocation(line: 787, column: 15, scope: !2167)
!2482 = !DILocation(line: 787, column: 12, scope: !2167)
!2483 = !DILocation(line: 788, column: 12, scope: !2167)
!2484 = !DILocation(line: 788, column: 10, scope: !2167)
!2485 = !DILocation(line: 789, column: 7, scope: !2167)
!2486 = !DILocation(line: 789, column: 15, scope: !2167)
!2487 = !DILocation(line: 790, column: 17, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2167, file: !2, line: 789, column: 20)
!2489 = !DILocation(line: 790, column: 12, scope: !2488)
!2490 = !DILocation(line: 790, column: 7, scope: !2488)
!2491 = !DILocation(line: 790, column: 10, scope: !2488)
!2492 = distinct !{!2492, !2485, !2493, !1882}
!2493 = !DILocation(line: 791, column: 7, scope: !2167)
!2494 = !DILocation(line: 792, column: 15, scope: !2167)
!2495 = !DILocation(line: 792, column: 8, scope: !2167)
!2496 = !DILocation(line: 792, column: 13, scope: !2167)
!2497 = !DILocation(line: 793, column: 23, scope: !2167)
!2498 = !DILocation(line: 793, column: 10, scope: !2167)
!2499 = !DILocation(line: 794, column: 22, scope: !2167)
!2500 = !DILocation(line: 794, column: 26, scope: !2167)
!2501 = !DILocation(line: 794, column: 31, scope: !2167)
!2502 = !DILocation(line: 794, column: 38, scope: !2167)
!2503 = !DILocation(line: 794, column: 7, scope: !2167)
!2504 = !DILocation(line: 795, column: 18, scope: !2167)
!2505 = !DILocation(line: 795, column: 28, scope: !2167)
!2506 = !DILocation(line: 795, column: 7, scope: !2167)
!2507 = !DILocation(line: 795, column: 11, scope: !2167)
!2508 = !DILocation(line: 795, column: 16, scope: !2167)
!2509 = !DILocation(line: 796, column: 7, scope: !2167)
!2510 = !DILocation(line: 796, column: 11, scope: !2167)
!2511 = !DILocation(line: 796, column: 17, scope: !2167)
!2512 = !DILocation(line: 797, column: 55, scope: !2167)
!2513 = !DILocation(line: 797, column: 7, scope: !2167)
!2514 = !DILocation(line: 797, column: 17, scope: !2167)
!2515 = !DILocation(line: 797, column: 23, scope: !2167)
!2516 = !DILocation(line: 798, column: 7, scope: !2167)
!2517 = !DILocation(line: 798, column: 7, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2167, file: !2, line: 798, column: 7)
!2519 = !DILocation(line: 799, column: 3, scope: !2165)
!2520 = !DILocation(line: 800, column: 3, scope: !2165)
!2521 = !DILocation(line: 803, column: 7, scope: !2169)
!2522 = !DILocation(line: 803, column: 18, scope: !2169)
!2523 = !DILocation(line: 803, column: 37, scope: !2169)
!2524 = !DILocation(line: 804, column: 7, scope: !2169)
!2525 = !DILocation(line: 804, column: 13, scope: !2169)
!2526 = !DILocation(line: 804, column: 24, scope: !2169)
!2527 = !DILocation(line: 804, column: 28, scope: !2169)
!2528 = !DILocation(line: 805, column: 7, scope: !2169)
!2529 = !DILocation(line: 805, column: 12, scope: !2169)
!2530 = !DILocation(line: 805, column: 25, scope: !2169)
!2531 = !DILocation(line: 805, column: 29, scope: !2169)
!2532 = !DILocation(line: 806, column: 7, scope: !2169)
!2533 = !DILocation(line: 806, column: 12, scope: !2169)
!2534 = !DILocation(line: 806, column: 23, scope: !2169)
!2535 = !DILocation(line: 806, column: 29, scope: !2169)
!2536 = !DILocation(line: 807, column: 7, scope: !2169)
!2537 = !DILocation(line: 807, column: 12, scope: !2169)
!2538 = !DILocation(line: 807, column: 21, scope: !2169)
!2539 = !DILocation(line: 807, column: 25, scope: !2169)
!2540 = !DILocation(line: 808, column: 7, scope: !2169)
!2541 = !DILocation(line: 808, column: 14, scope: !2169)
!2542 = !DILocation(line: 808, column: 21, scope: !2169)
!2543 = !DILocation(line: 808, column: 25, scope: !2169)
!2544 = !DILocation(line: 809, column: 7, scope: !2169)
!2545 = !DILocation(line: 809, column: 12, scope: !2169)
!2546 = !DILocation(line: 810, column: 7, scope: !2169)
!2547 = !DILocation(line: 810, column: 12, scope: !2169)
!2548 = !DILocation(line: 811, column: 12, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2169, file: !2, line: 811, column: 11)
!2550 = !DILocation(line: 811, column: 23, scope: !2549)
!2551 = !DILocation(line: 811, column: 21, scope: !2549)
!2552 = !DILocation(line: 811, column: 35, scope: !2549)
!2553 = !DILocation(line: 811, column: 11, scope: !2169)
!2554 = !DILocation(line: 812, column: 16, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2549, file: !2, line: 811, column: 40)
!2556 = !DILocation(line: 813, column: 7, scope: !2555)
!2557 = !DILocation(line: 813, column: 19, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2549, file: !2, line: 813, column: 18)
!2559 = !DILocation(line: 813, column: 30, scope: !2558)
!2560 = !DILocation(line: 813, column: 28, scope: !2558)
!2561 = !DILocation(line: 813, column: 42, scope: !2558)
!2562 = !DILocation(line: 813, column: 18, scope: !2549)
!2563 = !DILocation(line: 814, column: 16, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2558, file: !2, line: 813, column: 47)
!2565 = !DILocation(line: 815, column: 7, scope: !2564)
!2566 = !DILocation(line: 816, column: 16, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2558, file: !2, line: 815, column: 14)
!2568 = !DILocation(line: 818, column: 19, scope: !2169)
!2569 = !DILocation(line: 818, column: 24, scope: !2169)
!2570 = !DILocation(line: 818, column: 23, scope: !2169)
!2571 = !DILocation(line: 818, column: 17, scope: !2169)
!2572 = !DILocation(line: 819, column: 14, scope: !2169)
!2573 = !DILocation(line: 819, column: 12, scope: !2169)
!2574 = !DILocation(line: 820, column: 11, scope: !2179)
!2575 = !DILocation(line: 820, column: 31, scope: !2179)
!2576 = !DILocation(line: 820, column: 11, scope: !2169)
!2577 = !DILocation(line: 821, column: 4, scope: !2178)
!2578 = !DILocation(line: 821, column: 16, scope: !2178)
!2579 = !DILocation(line: 821, column: 38, scope: !2178)
!2580 = !DILocation(line: 822, column: 4, scope: !2178)
!2581 = !DILocation(line: 822, column: 16, scope: !2178)
!2582 = !DILocation(line: 823, column: 8, scope: !2178)
!2583 = !DILocation(line: 823, column: 6, scope: !2178)
!2584 = !DILocation(line: 824, column: 12, scope: !2178)
!2585 = !DILocation(line: 824, column: 9, scope: !2178)
!2586 = !DILocation(line: 825, column: 24, scope: !2178)
!2587 = !DILocation(line: 825, column: 7, scope: !2178)
!2588 = !DILocation(line: 826, column: 21, scope: !2178)
!2589 = !DILocation(line: 826, column: 4, scope: !2178)
!2590 = !DILocation(line: 826, column: 8, scope: !2178)
!2591 = !DILocation(line: 826, column: 19, scope: !2178)
!2592 = !DILocation(line: 827, column: 15, scope: !2178)
!2593 = !DILocation(line: 827, column: 4, scope: !2178)
!2594 = !DILocation(line: 827, column: 8, scope: !2178)
!2595 = !DILocation(line: 827, column: 13, scope: !2178)
!2596 = !DILocation(line: 828, column: 15, scope: !2178)
!2597 = !DILocation(line: 828, column: 19, scope: !2178)
!2598 = !DILocation(line: 828, column: 34, scope: !2178)
!2599 = !DILocation(line: 828, column: 40, scope: !2178)
!2600 = !DILocation(line: 828, column: 46, scope: !2178)
!2601 = !DILocation(line: 828, column: 45, scope: !2178)
!2602 = !DILocation(line: 828, column: 54, scope: !2178)
!2603 = !DILocation(line: 828, column: 4, scope: !2178)
!2604 = !DILocation(line: 829, column: 7, scope: !2179)
!2605 = !DILocation(line: 829, column: 7, scope: !2178)
!2606 = !DILocation(line: 830, column: 4, scope: !2182)
!2607 = !DILocation(line: 830, column: 13, scope: !2182)
!2608 = !DILocation(line: 830, column: 32, scope: !2182)
!2609 = !DILocation(line: 831, column: 4, scope: !2182)
!2610 = !DILocation(line: 831, column: 13, scope: !2182)
!2611 = !DILocation(line: 834, column: 8, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2182, file: !2, line: 834, column: 8)
!2613 = !DILocation(line: 834, column: 14, scope: !2612)
!2614 = !DILocation(line: 834, column: 8, scope: !2182)
!2615 = !DILocation(line: 835, column: 40, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2612, file: !2, line: 834, column: 21)
!2617 = !DILocation(line: 835, column: 8, scope: !2616)
!2618 = !DILocation(line: 836, column: 4, scope: !2616)
!2619 = !DILocation(line: 837, column: 9, scope: !2182)
!2620 = !DILocation(line: 838, column: 21, scope: !2182)
!2621 = !DILocation(line: 838, column: 7, scope: !2182)
!2622 = !DILocation(line: 839, column: 4, scope: !2182)
!2623 = !DILocation(line: 839, column: 8, scope: !2182)
!2624 = !DILocation(line: 839, column: 19, scope: !2182)
!2625 = !DILocation(line: 840, column: 15, scope: !2182)
!2626 = !DILocation(line: 840, column: 4, scope: !2182)
!2627 = !DILocation(line: 840, column: 8, scope: !2182)
!2628 = !DILocation(line: 840, column: 13, scope: !2182)
!2629 = !DILocation(line: 841, column: 14, scope: !2182)
!2630 = !DILocation(line: 841, column: 20, scope: !2182)
!2631 = !DILocation(line: 841, column: 4, scope: !2182)
!2632 = !DILocation(line: 841, column: 8, scope: !2182)
!2633 = !DILocation(line: 841, column: 12, scope: !2182)
!2634 = !DILocation(line: 842, column: 19, scope: !2182)
!2635 = !DILocation(line: 842, column: 23, scope: !2182)
!2636 = !DILocation(line: 842, column: 28, scope: !2182)
!2637 = !DILocation(line: 842, column: 35, scope: !2182)
!2638 = !DILocation(line: 842, column: 4, scope: !2182)
!2639 = !DILocation(line: 843, column: 16, scope: !2182)
!2640 = !DILocation(line: 843, column: 22, scope: !2182)
!2641 = !DILocation(line: 843, column: 30, scope: !2182)
!2642 = !DILocation(line: 843, column: 28, scope: !2182)
!2643 = !DILocation(line: 843, column: 4, scope: !2182)
!2644 = !DILocation(line: 843, column: 8, scope: !2182)
!2645 = !DILocation(line: 843, column: 14, scope: !2182)
!2646 = !DILocation(line: 844, column: 15, scope: !2182)
!2647 = !DILocation(line: 844, column: 25, scope: !2182)
!2648 = !DILocation(line: 844, column: 4, scope: !2182)
!2649 = !DILocation(line: 844, column: 8, scope: !2182)
!2650 = !DILocation(line: 844, column: 13, scope: !2182)
!2651 = !DILocation(line: 845, column: 4, scope: !2182)
!2652 = !DILocation(line: 845, column: 8, scope: !2182)
!2653 = !DILocation(line: 845, column: 14, scope: !2182)
!2654 = !DILocation(line: 846, column: 52, scope: !2182)
!2655 = !DILocation(line: 846, column: 4, scope: !2182)
!2656 = !DILocation(line: 846, column: 14, scope: !2182)
!2657 = !DILocation(line: 846, column: 20, scope: !2182)
!2658 = !DILocation(line: 847, column: 4, scope: !2182)
!2659 = !DILocation(line: 847, column: 4, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2182, file: !2, line: 847, column: 4)
!2661 = !DILocation(line: 848, column: 7, scope: !2179)
!2662 = !DILocation(line: 849, column: 15, scope: !2169)
!2663 = !DILocation(line: 849, column: 8, scope: !2169)
!2664 = !DILocation(line: 849, column: 13, scope: !2169)
!2665 = !DILocation(line: 850, column: 11, scope: !2186)
!2666 = !DILocation(line: 850, column: 23, scope: !2186)
!2667 = !DILocation(line: 850, column: 11, scope: !2169)
!2668 = !DILocation(line: 851, column: 4, scope: !2185)
!2669 = !DILocation(line: 851, column: 15, scope: !2185)
!2670 = !DILocation(line: 852, column: 9, scope: !2185)
!2671 = !DILocation(line: 853, column: 24, scope: !2185)
!2672 = !DILocation(line: 853, column: 8, scope: !2185)
!2673 = !DILocation(line: 854, column: 4, scope: !2185)
!2674 = !DILocation(line: 854, column: 9, scope: !2185)
!2675 = !DILocation(line: 854, column: 20, scope: !2185)
!2676 = !DILocation(line: 855, column: 16, scope: !2185)
!2677 = !DILocation(line: 855, column: 4, scope: !2185)
!2678 = !DILocation(line: 855, column: 9, scope: !2185)
!2679 = !DILocation(line: 855, column: 14, scope: !2185)
!2680 = !DILocation(line: 856, column: 19, scope: !2185)
!2681 = !DILocation(line: 856, column: 4, scope: !2185)
!2682 = !DILocation(line: 856, column: 9, scope: !2185)
!2683 = !DILocation(line: 856, column: 17, scope: !2185)
!2684 = !DILocation(line: 857, column: 19, scope: !2185)
!2685 = !DILocation(line: 857, column: 4, scope: !2185)
!2686 = !DILocation(line: 857, column: 9, scope: !2185)
!2687 = !DILocation(line: 857, column: 17, scope: !2185)
!2688 = !DILocation(line: 858, column: 4, scope: !2185)
!2689 = !DILocation(line: 858, column: 9, scope: !2185)
!2690 = !DILocation(line: 858, column: 14, scope: !2185)
!2691 = !DILocation(line: 859, column: 4, scope: !2185)
!2692 = !DILocation(line: 859, column: 9, scope: !2185)
!2693 = !DILocation(line: 859, column: 21, scope: !2185)
!2694 = !DILocation(line: 860, column: 17, scope: !2185)
!2695 = !DILocation(line: 860, column: 16, scope: !2185)
!2696 = !DILocation(line: 860, column: 4, scope: !2185)
!2697 = !DILocation(line: 860, column: 9, scope: !2185)
!2698 = !DILocation(line: 860, column: 14, scope: !2185)
!2699 = !DILocation(line: 861, column: 12, scope: !2185)
!2700 = !DILocation(line: 861, column: 5, scope: !2185)
!2701 = !DILocation(line: 861, column: 10, scope: !2185)
!2702 = !DILocation(line: 862, column: 7, scope: !2186)
!2703 = !DILocation(line: 862, column: 7, scope: !2185)
!2704 = !DILocation(line: 864, column: 3, scope: !2165)
!2705 = !DILocation(line: 868, column: 7, scope: !2188)
!2706 = !DILocation(line: 868, column: 20, scope: !2188)
!2707 = !DILocation(line: 868, column: 43, scope: !2188)
!2708 = !DILocation(line: 870, column: 12, scope: !2188)
!2709 = !DILocation(line: 870, column: 32, scope: !2188)
!2710 = !DILocation(line: 870, column: 38, scope: !2188)
!2711 = !DILocation(line: 870, column: 44, scope: !2188)
!2712 = !DILocation(line: 870, column: 36, scope: !2188)
!2713 = !DILocation(line: 870, column: 9, scope: !2188)
!2714 = !DILocation(line: 871, column: 12, scope: !2188)
!2715 = !DILocation(line: 871, column: 10, scope: !2188)
!2716 = !DILocation(line: 872, column: 7, scope: !2188)
!2717 = !DILocation(line: 872, column: 15, scope: !2188)
!2718 = !DILocation(line: 873, column: 19, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2188, file: !2, line: 872, column: 20)
!2720 = !DILocation(line: 873, column: 14, scope: !2719)
!2721 = !DILocation(line: 873, column: 9, scope: !2719)
!2722 = !DILocation(line: 873, column: 12, scope: !2719)
!2723 = distinct !{!2723, !2716, !2724, !1882}
!2724 = !DILocation(line: 874, column: 7, scope: !2188)
!2725 = !DILocation(line: 875, column: 30, scope: !2188)
!2726 = !DILocation(line: 875, column: 12, scope: !2188)
!2727 = !DILocation(line: 877, column: 25, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2188, file: !2, line: 877, column: 25)
!2729 = !DILocation(line: 877, column: 25, scope: !2188)
!2730 = !DILocation(line: 878, column: 38, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2728, file: !2, line: 877, column: 45)
!2732 = !DILocation(line: 878, column: 48, scope: !2731)
!2733 = !DILocation(line: 878, column: 25, scope: !2731)
!2734 = !DILocation(line: 878, column: 31, scope: !2731)
!2735 = !DILocation(line: 878, column: 36, scope: !2731)
!2736 = !DILocation(line: 879, column: 73, scope: !2731)
!2737 = !DILocation(line: 879, column: 25, scope: !2731)
!2738 = !DILocation(line: 879, column: 35, scope: !2731)
!2739 = !DILocation(line: 879, column: 41, scope: !2731)
!2740 = !DILocation(line: 880, column: 40, scope: !2731)
!2741 = !DILocation(line: 880, column: 46, scope: !2731)
!2742 = !DILocation(line: 880, column: 52, scope: !2731)
!2743 = !DILocation(line: 880, column: 57, scope: !2731)
!2744 = !DILocation(line: 880, column: 25, scope: !2731)
!2745 = !DILocation(line: 881, column: 21, scope: !2731)
!2746 = !DILocation(line: 885, column: 15, scope: !2188)
!2747 = !DILocation(line: 885, column: 8, scope: !2188)
!2748 = !DILocation(line: 885, column: 13, scope: !2188)
!2749 = !DILocation(line: 886, column: 3, scope: !2165)
!2750 = !DILocation(line: 887, column: 3, scope: !2165)
!2751 = !DILocation(line: 892, column: 5, scope: !2190)
!2752 = !DILocation(line: 892, column: 20, scope: !2190)
!2753 = !DILocation(line: 892, column: 44, scope: !2190)
!2754 = !DILocation(line: 896, column: 25, scope: !2190)
!2755 = !DILocation(line: 896, column: 30, scope: !2190)
!2756 = !DILocation(line: 896, column: 39, scope: !2190)
!2757 = !DILocation(line: 896, column: 5, scope: !2190)
!2758 = !DILocation(line: 898, column: 3, scope: !2165)
!2759 = !DILocation(line: 898, column: 3, scope: !2190)
!2760 = !DILocation(line: 899, column: 6, scope: !2165)
!2761 = !DILocation(line: 901, column: 5, scope: !2193)
!2762 = !DILocation(line: 901, column: 33, scope: !2193)
!2763 = !DILocation(line: 902, column: 43, scope: !2193)
!2764 = !DILocation(line: 902, column: 10, scope: !2193)
!2765 = !DILocation(line: 903, column: 10, scope: !2193)
!2766 = !DILocation(line: 903, column: 30, scope: !2193)
!2767 = !DILocation(line: 903, column: 8, scope: !2193)
!2768 = !DILocation(line: 904, column: 13, scope: !2193)
!2769 = !DILocation(line: 904, column: 6, scope: !2193)
!2770 = !DILocation(line: 904, column: 11, scope: !2193)
!2771 = !DILocation(line: 905, column: 10, scope: !2193)
!2772 = !DILocation(line: 905, column: 8, scope: !2193)
!2773 = !DILocation(line: 907, column: 5, scope: !2193)
!2774 = !DILocation(line: 907, column: 13, scope: !2193)
!2775 = !DILocation(line: 908, column: 22, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2193, file: !2, line: 907, column: 18)
!2777 = !DILocation(line: 908, column: 17, scope: !2776)
!2778 = !DILocation(line: 908, column: 12, scope: !2776)
!2779 = !DILocation(line: 908, column: 15, scope: !2776)
!2780 = distinct !{!2780, !2773, !2781, !1882}
!2781 = !DILocation(line: 909, column: 5, scope: !2193)
!2782 = !DILocation(line: 911, column: 18, scope: !2193)
!2783 = !DILocation(line: 911, column: 28, scope: !2193)
!2784 = !DILocation(line: 911, column: 5, scope: !2193)
!2785 = !DILocation(line: 911, column: 11, scope: !2193)
!2786 = !DILocation(line: 911, column: 16, scope: !2193)
!2787 = !DILocation(line: 912, column: 23, scope: !2193)
!2788 = !DILocation(line: 912, column: 5, scope: !2193)
!2789 = !DILocation(line: 912, column: 15, scope: !2193)
!2790 = !DILocation(line: 912, column: 21, scope: !2193)
!2791 = !DILocation(line: 914, column: 3, scope: !2165)
!2792 = !DILocation(line: 915, column: 3, scope: !2165)
!2793 = !DILocation(line: 917, column: 8, scope: !2165)
!2794 = !DILocation(line: 917, column: 6, scope: !2165)
!2795 = !DILocation(line: 918, column: 11, scope: !2165)
!2796 = !DILocation(line: 918, column: 3, scope: !2165)
!2797 = !DILocation(line: 920, column: 29, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 918, column: 33)
!2799 = !DILocation(line: 920, column: 52, scope: !2798)
!2800 = !DILocation(line: 920, column: 27, scope: !2798)
!2801 = !DILocation(line: 922, column: 33, scope: !2798)
!2802 = !DILocation(line: 922, column: 26, scope: !2798)
!2803 = !DILocation(line: 922, column: 31, scope: !2798)
!2804 = !DILocation(line: 923, column: 25, scope: !2798)
!2805 = !DILocation(line: 923, column: 33, scope: !2798)
!2806 = !DILocation(line: 924, column: 44, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2798, file: !2, line: 923, column: 37)
!2808 = !DILocation(line: 924, column: 39, scope: !2807)
!2809 = !DILocation(line: 924, column: 34, scope: !2807)
!2810 = !DILocation(line: 924, column: 37, scope: !2807)
!2811 = distinct !{!2811, !2804, !2812, !1882}
!2812 = !DILocation(line: 925, column: 25, scope: !2798)
!2813 = !DILocation(line: 926, column: 4, scope: !2798)
!2814 = !DILocation(line: 929, column: 19, scope: !2798)
!2815 = !DILocation(line: 929, column: 14, scope: !2798)
!2816 = !DILocation(line: 929, column: 9, scope: !2798)
!2817 = !DILocation(line: 929, column: 12, scope: !2798)
!2818 = !DILocation(line: 929, column: 4, scope: !2798)
!2819 = !DILocation(line: 931, column: 12, scope: !2798)
!2820 = !DILocation(line: 931, column: 10, scope: !2798)
!2821 = !DILocation(line: 931, column: 6, scope: !2798)
!2822 = !DILocation(line: 932, column: 4, scope: !2798)
!2823 = !DILocation(line: 932, column: 12, scope: !2798)
!2824 = !DILocation(line: 932, column: 34, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2798, file: !2, line: 932, column: 17)
!2826 = !DILocation(line: 932, column: 29, scope: !2825)
!2827 = !DILocation(line: 932, column: 24, scope: !2825)
!2828 = !DILocation(line: 932, column: 27, scope: !2825)
!2829 = distinct !{!2829, !2822, !2830, !1882}
!2830 = !DILocation(line: 932, column: 38, scope: !2798)
!2831 = !DILocation(line: 933, column: 12, scope: !2798)
!2832 = !DILocation(line: 933, column: 5, scope: !2798)
!2833 = !DILocation(line: 933, column: 10, scope: !2798)
!2834 = !DILocation(line: 934, column: 4, scope: !2798)
!2835 = !DILocation(line: 936, column: 69, scope: !2798)
!2836 = !DILocation(line: 936, column: 4, scope: !2798)
!2837 = !DILocation(line: 938, column: 3, scope: !2165)
!2838 = !DILocation(line: 940, column: 3, scope: !2165)
!2839 = !DILocation(line: 943, column: 7, scope: !2196)
!2840 = !DILocation(line: 943, column: 7, scope: !2165)
!2841 = !DILocation(line: 944, column: 7, scope: !2195)
!2842 = !DILocation(line: 944, column: 22, scope: !2195)
!2843 = !DILocation(line: 944, column: 48, scope: !2195)
!2844 = !DILocation(line: 945, column: 22, scope: !2195)
!2845 = !DILocation(line: 945, column: 29, scope: !2195)
!2846 = !DILocation(line: 945, column: 33, scope: !2195)
!2847 = !DILocation(line: 945, column: 40, scope: !2195)
!2848 = !DILocation(line: 945, column: 7, scope: !2195)
!2849 = !DILocation(line: 947, column: 3, scope: !2196)
!2850 = !DILocation(line: 950, column: 7, scope: !2165)
!2851 = !DILocation(line: 950, column: 26, scope: !2165)
!2852 = !DILocation(line: 950, column: 5, scope: !2165)
!2853 = !DILocation(line: 951, column: 11, scope: !2165)
!2854 = !DILocation(line: 951, column: 8, scope: !2165)
!2855 = !DILocation(line: 952, column: 8, scope: !2165)
!2856 = !DILocation(line: 952, column: 6, scope: !2165)
!2857 = !DILocation(line: 953, column: 11, scope: !2165)
!2858 = !DILocation(line: 953, column: 4, scope: !2165)
!2859 = !DILocation(line: 953, column: 9, scope: !2165)
!2860 = !DILocation(line: 954, column: 3, scope: !2165)
!2861 = !DILocation(line: 954, column: 11, scope: !2165)
!2862 = !DILocation(line: 955, column: 20, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2165, file: !2, line: 954, column: 15)
!2864 = !DILocation(line: 955, column: 15, scope: !2863)
!2865 = !DILocation(line: 955, column: 10, scope: !2863)
!2866 = !DILocation(line: 955, column: 13, scope: !2863)
!2867 = distinct !{!2867, !2860, !2868, !1882}
!2868 = !DILocation(line: 956, column: 3, scope: !2165)
!2869 = !DILocation(line: 957, column: 6, scope: !2165)
!2870 = !DILocation(line: 958, column: 6, scope: !2160)
!2871 = !DILocation(line: 960, column: 10, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2160, file: !2, line: 960, column: 10)
!2873 = !DILocation(line: 960, column: 31, scope: !2872)
!2874 = !DILocation(line: 960, column: 34, scope: !2872)
!2875 = !DILocation(line: 960, column: 40, scope: !2872)
!2876 = !DILocation(line: 960, column: 37, scope: !2872)
!2877 = !DILocation(line: 960, column: 10, scope: !2160)
!2878 = !DILocation(line: 961, column: 9, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2872, file: !2, line: 960, column: 53)
!2880 = !DILocation(line: 961, column: 27, scope: !2879)
!2881 = !DILocation(line: 961, column: 6, scope: !2879)
!2882 = !DILocation(line: 962, column: 6, scope: !2879)
!2883 = !DILocation(line: 963, column: 5, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2872, file: !2, line: 962, column: 13)
!2885 = !DILocation(line: 965, column: 6, scope: !2160)
!2886 = distinct !{!2886, !2279, !2887, !1882}
!2887 = !DILocation(line: 967, column: 5, scope: !2127)
!2888 = !DILocation(line: 969, column: 9, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2127, file: !2, line: 969, column: 9)
!2890 = !DILocation(line: 969, column: 9, scope: !2127)
!2891 = !DILocation(line: 970, column: 16, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2889, file: !2, line: 969, column: 14)
!2893 = !DILocation(line: 970, column: 10, scope: !2892)
!2894 = !DILocation(line: 970, column: 14, scope: !2892)
!2895 = !DILocation(line: 971, column: 16, scope: !2892)
!2896 = !DILocation(line: 971, column: 23, scope: !2892)
!2897 = !DILocation(line: 971, column: 21, scope: !2892)
!2898 = !DILocation(line: 971, column: 10, scope: !2892)
!2899 = !DILocation(line: 971, column: 14, scope: !2892)
!2900 = !DILocation(line: 972, column: 5, scope: !2892)
!2901 = !DILocation(line: 986, column: 13, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !2, line: 986, column: 13)
!2903 = distinct !DILexicalBlock(scope: !2889, file: !2, line: 972, column: 12)
!2904 = !DILocation(line: 986, column: 20, scope: !2902)
!2905 = !DILocation(line: 986, column: 18, scope: !2902)
!2906 = !DILocation(line: 986, column: 13, scope: !2903)
!2907 = !DILocation(line: 987, column: 13, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2902, file: !2, line: 986, column: 26)
!2909 = !DILocation(line: 991, column: 27, scope: !2903)
!2910 = !DILocation(line: 991, column: 34, scope: !2903)
!2911 = !DILocation(line: 991, column: 33, scope: !2903)
!2912 = !DILocation(line: 991, column: 10, scope: !2903)
!2913 = !DILocation(line: 991, column: 14, scope: !2903)
!2914 = !DILocation(line: 994, column: 12, scope: !2127)
!2915 = !DILocation(line: 994, column: 5, scope: !2127)
!2916 = !DILocation(line: 995, column: 1, scope: !2127)
!2917 = distinct !DISubprogram(name: "erts_is_literal", scope: !266, file: !266, line: 1634, type: !2918, scopeLine: 1635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !2920)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!130, !93, !92}
!2920 = !{!2921, !2922}
!2921 = !DILocalVariable(name: "tptr", arg: 1, scope: !2917, file: !266, line: 1634, type: !93)
!2922 = !DILocalVariable(name: "ptr", arg: 2, scope: !2917, file: !266, line: 1634, type: !92)
!2923 = !DILocation(line: 1634, column: 49, scope: !2917)
!2924 = !DILocation(line: 1634, column: 62, scope: !2917)
!2925 = !DILocation(line: 1640, column: 37, scope: !2917)
!2926 = !DILocation(line: 1640, column: 12, scope: !2917)
!2927 = !DILocation(line: 1640, column: 5, scope: !2917)
!2928 = !DISubprogram(name: "erl_grow_estack", scope: !266, file: !266, line: 343, type: !2929, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{null, !2931, !128}
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!2932 = !DISubprogram(name: "erts_exit", scope: !266, file: !266, line: 1053, type: !2933, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{null, !130, !2935, null}
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!2937 = distinct !DISubprogram(name: "erts_free", scope: !1378, file: !1378, line: 272, type: !2938, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !2940)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{null, !551, !395}
!2940 = !{!2941, !2942}
!2941 = !DILocalVariable(name: "type", arg: 1, scope: !2937, file: !1378, line: 272, type: !551)
!2942 = !DILocalVariable(name: "ptr", arg: 2, scope: !2937, file: !1378, line: 272, type: !395)
!2943 = !DILocation(line: 272, column: 30, scope: !2937)
!2944 = !DILocation(line: 272, column: 42, scope: !2937)
!2945 = !DILocation(line: 274, column: 5, scope: !2937)
!2946 = !DILocation(line: 274, column: 5, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2937, file: !1378, line: 274, column: 5)
!2948 = !DILocation(line: 275, column: 20, scope: !2937)
!2949 = !DILocation(line: 275, column: 7, scope: !2937)
!2950 = !DILocation(line: 275, column: 40, scope: !2937)
!2951 = !DILocation(line: 276, column: 2, scope: !2937)
!2952 = !DILocation(line: 277, column: 15, scope: !2937)
!2953 = !DILocation(line: 277, column: 2, scope: !2937)
!2954 = !DILocation(line: 277, column: 35, scope: !2937)
!2955 = !DILocation(line: 278, column: 2, scope: !2937)
!2956 = !DILocation(line: 275, column: 5, scope: !2937)
!2957 = !DILocation(line: 279, column: 5, scope: !2937)
!2958 = !DILocation(line: 279, column: 5, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2937, file: !1378, line: 279, column: 5)
!2960 = !DILocation(line: 280, column: 1, scope: !2937)
!2961 = distinct !DISubprogram(name: "size_shared", scope: !2, file: !2, line: 309, type: !2962, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !2964)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!128, !93}
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2971, !2981, !2982, !2992, !2993, !2994, !2995, !3001, !3002, !3004, !3007, !3009, !3010, !3011, !3013, !3014, !3015, !3018, !3019, !3021, !3022, !3023, !3029, !3030, !3035, !3037, !3039, !3042, !3044, !3045, !3046, !3049, !3050, !3052, !3053}
!2965 = !DILocalVariable(name: "obj", arg: 1, scope: !2961, file: !2, line: 309, type: !93)
!2966 = !DILocalVariable(name: "saved_obj", scope: !2961, file: !2, line: 311, type: !93)
!2967 = !DILocalVariable(name: "sum", scope: !2961, file: !2, line: 312, type: !128)
!2968 = !DILocalVariable(name: "ptr", scope: !2961, file: !2, line: 313, type: !92)
!2969 = !DILocalVariable(name: "s_default_equeue", scope: !2961, file: !2, line: 315, type: !2970)
!2970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 1024, align: 64, elements: !135)
!2971 = !DILocalVariable(name: "s", scope: !2961, file: !2, line: 315, type: !2972)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsEQueue", file: !266, line: 854, baseType: !2973)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !266, line: 847, size: 384, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2973, file: !266, line: 848, baseType: !92, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "front", scope: !2973, file: !266, line: 849, baseType: !92, size: 64, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2973, file: !266, line: 850, baseType: !92, size: 64, offset: 128)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_empty", scope: !2973, file: !266, line: 851, baseType: !130, size: 32, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2973, file: !266, line: 852, baseType: !92, size: 64, offset: 256)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_type", scope: !2973, file: !266, line: 853, baseType: !551, size: 32, offset: 320)
!2981 = !DILocalVariable(name: "b_default_wstack", scope: !2961, file: !2, line: 316, type: !2970)
!2982 = !DILocalVariable(name: "b", scope: !2961, file: !2, line: 316, type: !2983)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErtsWStack", file: !266, line: 510, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ErtsWStack_", file: !266, line: 504, size: 320, elements: !2985)
!2985 = !{!2986, !2988, !2989, !2990, !2991}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "wstart", scope: !2984, file: !266, line: 505, baseType: !2987, size: 64)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "wsp", scope: !2984, file: !266, line: 506, baseType: !2987, size: 64, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "wend", scope: !2984, file: !266, line: 507, baseType: !2987, size: 64, offset: 128)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "wdefault", scope: !2984, file: !266, line: 508, baseType: !2987, size: 64, offset: 192)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_type", scope: !2984, file: !266, line: 509, baseType: !551, size: 32, offset: 256)
!2992 = !DILocalVariable(name: "b_bitoffs", scope: !2961, file: !2, line: 316, type: !130)
!2993 = !DILocalVariable(name: "b_offset", scope: !2961, file: !2, line: 316, type: !130)
!2994 = !DILocalVariable(name: "b_buffer", scope: !2961, file: !2, line: 316, type: !195)
!2995 = !DILocalVariable(name: "head", scope: !2996, file: !2, line: 321, type: !93)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !2, line: 320, column: 25)
!2997 = distinct !DILexicalBlock(scope: !2998, file: !2, line: 319, column: 28)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !2, line: 318, column: 14)
!2999 = distinct !DILexicalBlock(scope: !3000, file: !2, line: 318, column: 5)
!3000 = distinct !DILexicalBlock(scope: !2961, file: !2, line: 318, column: 5)
!3001 = !DILocalVariable(name: "tail", scope: !2996, file: !2, line: 321, type: !93)
!3002 = !DILocalVariable(name: "hdr", scope: !3003, file: !2, line: 358, type: !93)
!3003 = distinct !DILexicalBlock(scope: !2997, file: !2, line: 357, column: 26)
!3004 = !DILocalVariable(name: "arity", scope: !3005, file: !2, line: 375, type: !130)
!3005 = distinct !DILexicalBlock(scope: !3006, file: !2, line: 374, column: 28)
!3006 = distinct !DILexicalBlock(scope: !3003, file: !2, line: 373, column: 38)
!3007 = !DILocalVariable(name: "funp", scope: !3008, file: !2, line: 392, type: !98)
!3008 = distinct !DILexicalBlock(scope: !3006, file: !2, line: 391, column: 23)
!3009 = !DILocalVariable(name: "eterms", scope: !3008, file: !2, line: 393, type: !61)
!3010 = !DILocalVariable(name: "sz", scope: !3008, file: !2, line: 394, type: !61)
!3011 = !DILocalVariable(name: "sb", scope: !3012, file: !2, line: 406, type: !251)
!3012 = distinct !DILexicalBlock(scope: !3006, file: !2, line: 405, column: 30)
!3013 = !DILocalVariable(name: "extra_bytes", scope: !3012, file: !2, line: 407, type: !128)
!3014 = !DILocalVariable(name: "hdr", scope: !3012, file: !2, line: 408, type: !93)
!3015 = !DILocalVariable(name: "mp", scope: !3016, file: !2, line: 432, type: !242)
!3016 = distinct !DILexicalBlock(scope: !3017, file: !2, line: 431, column: 56)
!3017 = distinct !DILexicalBlock(scope: !3006, file: !2, line: 430, column: 47)
!3018 = !DILocalVariable(name: "n", scope: !3016, file: !2, line: 433, type: !128)
!3019 = !DILocalVariable(name: "n", scope: !3020, file: !2, line: 449, type: !128)
!3020 = distinct !DILexicalBlock(scope: !3017, file: !2, line: 448, column: 60)
!3021 = !DILabel(scope: !2997, name: "pop_next", file: !2, line: 473)
!3022 = !DILabel(scope: !2961, name: "cleanup", file: !2, line: 484)
!3023 = !DILocalVariable(name: "head", scope: !3024, file: !2, line: 490, type: !93)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !2, line: 489, column: 25)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !2, line: 488, column: 28)
!3026 = distinct !DILexicalBlock(scope: !3027, file: !2, line: 487, column: 14)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !2, line: 487, column: 5)
!3028 = distinct !DILexicalBlock(scope: !2961, file: !2, line: 487, column: 5)
!3029 = !DILocalVariable(name: "tail", scope: !3024, file: !2, line: 490, type: !93)
!3030 = !DILocalVariable(name: "saved", scope: !3031, file: !2, line: 500, type: !93)
!3031 = distinct !DILexicalBlock(scope: !3032, file: !2, line: 499, column: 48)
!3032 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 499, column: 7)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !2, line: 498, column: 51)
!3034 = distinct !DILexicalBlock(scope: !3024, file: !2, line: 498, column: 10)
!3035 = !DILocalVariable(name: "result", scope: !3036, file: !2, line: 501, type: !195)
!3036 = distinct !DILexicalBlock(scope: !3031, file: !2, line: 501, column: 21)
!3037 = !DILocalVariable(name: "hdr", scope: !3038, file: !2, line: 521, type: !93)
!3038 = distinct !DILexicalBlock(scope: !3025, file: !2, line: 520, column: 26)
!3039 = !DILocalVariable(name: "arity", scope: !3040, file: !2, line: 538, type: !130)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !2, line: 537, column: 28)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !2, line: 536, column: 38)
!3042 = !DILocalVariable(name: "funp", scope: !3043, file: !2, line: 554, type: !98)
!3043 = distinct !DILexicalBlock(scope: !3041, file: !2, line: 553, column: 23)
!3044 = !DILocalVariable(name: "eterms", scope: !3043, file: !2, line: 555, type: !61)
!3045 = !DILocalVariable(name: "sz", scope: !3043, file: !2, line: 556, type: !61)
!3046 = !DILocalVariable(name: "mp", scope: !3047, file: !2, line: 569, type: !242)
!3047 = distinct !DILexicalBlock(scope: !3048, file: !2, line: 568, column: 56)
!3048 = distinct !DILexicalBlock(scope: !3041, file: !2, line: 567, column: 47)
!3049 = !DILocalVariable(name: "n", scope: !3047, file: !2, line: 570, type: !128)
!3050 = !DILocalVariable(name: "n", scope: !3051, file: !2, line: 584, type: !128)
!3051 = distinct !DILexicalBlock(scope: !3048, file: !2, line: 583, column: 60)
!3052 = !DILabel(scope: !3025, name: "cleanup_next", file: !2, line: 604)
!3053 = !DILabel(scope: !2961, name: "all_clean", file: !2, line: 615)
!3054 = !DILocation(line: 309, column: 24, scope: !2961)
!3055 = !DILocation(line: 311, column: 5, scope: !2961)
!3056 = !DILocation(line: 311, column: 11, scope: !2961)
!3057 = !DILocation(line: 311, column: 23, scope: !2961)
!3058 = !DILocation(line: 312, column: 5, scope: !2961)
!3059 = !DILocation(line: 312, column: 10, scope: !2961)
!3060 = !DILocation(line: 313, column: 5, scope: !2961)
!3061 = !DILocation(line: 313, column: 12, scope: !2961)
!3062 = !DILocation(line: 315, column: 5, scope: !2961)
!3063 = !DILocation(line: 316, column: 5, scope: !2961)
!3064 = !DILocation(line: 318, column: 5, scope: !2961)
!3065 = !DILocation(line: 319, column: 10, scope: !2998)
!3066 = !DILocation(line: 319, column: 2, scope: !2998)
!3067 = !DILocation(line: 321, column: 6, scope: !2996)
!3068 = !DILocation(line: 321, column: 12, scope: !2996)
!3069 = !DILocation(line: 321, column: 18, scope: !2996)
!3070 = !DILocation(line: 322, column: 12, scope: !2996)
!3071 = !DILocation(line: 322, column: 10, scope: !2996)
!3072 = !DILocation(line: 324, column: 45, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 324, column: 10)
!3074 = !DILocation(line: 324, column: 49, scope: !3073)
!3075 = !DILocation(line: 324, column: 29, scope: !3073)
!3076 = !DILocation(line: 324, column: 10, scope: !2996)
!3077 = !DILocation(line: 325, column: 3, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3073, file: !2, line: 324, column: 55)
!3079 = !DILocation(line: 327, column: 13, scope: !2996)
!3080 = !DILocation(line: 327, column: 11, scope: !2996)
!3081 = !DILocation(line: 328, column: 13, scope: !2996)
!3082 = !DILocation(line: 328, column: 11, scope: !2996)
!3083 = !DILocation(line: 330, column: 10, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 330, column: 10)
!3085 = !DILocation(line: 330, column: 28, scope: !3084)
!3086 = !DILocation(line: 330, column: 50, scope: !3084)
!3087 = !DILocation(line: 331, column: 3, scope: !3084)
!3088 = !DILocation(line: 331, column: 21, scope: !3084)
!3089 = !DILocation(line: 330, column: 10, scope: !2996)
!3090 = !DILocation(line: 332, column: 3, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3084, file: !2, line: 331, column: 44)
!3092 = !DILocation(line: 335, column: 14, scope: !2996)
!3093 = !DILocation(line: 335, column: 6, scope: !2996)
!3094 = !DILocation(line: 337, column: 13, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 335, column: 33)
!3096 = !DILocation(line: 337, column: 18, scope: !3095)
!3097 = !DILocation(line: 337, column: 38, scope: !3095)
!3098 = !DILocation(line: 337, column: 3, scope: !3095)
!3099 = !DILocation(line: 337, column: 10, scope: !3095)
!3100 = !DILocation(line: 338, column: 3, scope: !3095)
!3101 = !DILocation(line: 340, column: 15, scope: !3095)
!3102 = !DILocation(line: 340, column: 22, scope: !3095)
!3103 = !DILocation(line: 340, column: 20, scope: !3095)
!3104 = !DILocation(line: 340, column: 41, scope: !3095)
!3105 = !DILocation(line: 340, column: 3, scope: !3095)
!3106 = !DILocation(line: 340, column: 12, scope: !3095)
!3107 = !DILocation(line: 341, column: 15, scope: !3095)
!3108 = !DILocation(line: 341, column: 20, scope: !3095)
!3109 = !DILocation(line: 341, column: 44, scope: !3095)
!3110 = !DILocation(line: 341, column: 42, scope: !3095)
!3111 = !DILocation(line: 341, column: 3, scope: !3095)
!3112 = !DILocation(line: 341, column: 12, scope: !3095)
!3113 = !DILocation(line: 342, column: 3, scope: !3095)
!3114 = !DILocation(line: 344, column: 3, scope: !3095)
!3115 = !DILocation(line: 344, column: 3, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3095, file: !2, line: 344, column: 3)
!3117 = !DILocation(line: 344, column: 3, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3116, file: !2, line: 344, column: 3)
!3119 = !DILocation(line: 344, column: 3, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3118, file: !2, line: 344, column: 3)
!3121 = !DILocation(line: 344, column: 3, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3120, file: !2, line: 344, column: 3)
!3123 = !DILocation(line: 344, column: 3, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !2, line: 344, column: 3)
!3125 = distinct !DILexicalBlock(scope: !3122, file: !2, line: 344, column: 3)
!3126 = !DILocation(line: 344, column: 3, scope: !3125)
!3127 = !DILocation(line: 344, column: 3, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !2, line: 344, column: 3)
!3129 = !DILocation(line: 345, column: 15, scope: !3095)
!3130 = !DILocation(line: 345, column: 22, scope: !3095)
!3131 = !DILocation(line: 345, column: 20, scope: !3095)
!3132 = !DILocation(line: 345, column: 41, scope: !3095)
!3133 = !DILocation(line: 345, column: 3, scope: !3095)
!3134 = !DILocation(line: 345, column: 12, scope: !3095)
!3135 = !DILocation(line: 346, column: 15, scope: !3095)
!3136 = !DILocation(line: 346, column: 20, scope: !3095)
!3137 = !DILocation(line: 346, column: 41, scope: !3095)
!3138 = !DILocation(line: 346, column: 3, scope: !3095)
!3139 = !DILocation(line: 346, column: 12, scope: !3095)
!3140 = !DILocation(line: 347, column: 3, scope: !3095)
!3141 = !DILocation(line: 350, column: 10, scope: !2996)
!3142 = !DILocation(line: 351, column: 11, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 351, column: 10)
!3144 = !DILocation(line: 351, column: 10, scope: !2996)
!3145 = !DILocation(line: 352, column: 3, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3143, file: !2, line: 351, column: 27)
!3147 = !DILocation(line: 352, column: 3, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3149, file: !2, line: 352, column: 3)
!3149 = distinct !DILexicalBlock(scope: !3146, file: !2, line: 352, column: 3)
!3150 = !DILocation(line: 352, column: 3, scope: !3149)
!3151 = !DILocation(line: 352, column: 3, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3148, file: !2, line: 352, column: 3)
!3153 = !DILocation(line: 352, column: 3, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3149, file: !2, line: 352, column: 3)
!3155 = !DILocation(line: 352, column: 3, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3154, file: !2, line: 352, column: 3)
!3157 = !DILocation(line: 352, column: 3, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3156, file: !2, line: 352, column: 3)
!3159 = !DILocation(line: 353, column: 6, scope: !3146)
!3160 = !DILocation(line: 354, column: 12, scope: !2996)
!3161 = !DILocation(line: 354, column: 10, scope: !2996)
!3162 = !DILocation(line: 355, column: 6, scope: !2996)
!3163 = !DILocation(line: 356, column: 2, scope: !2997)
!3164 = !DILocation(line: 358, column: 6, scope: !3003)
!3165 = !DILocation(line: 358, column: 12, scope: !3003)
!3166 = !DILocation(line: 359, column: 12, scope: !3003)
!3167 = !DILocation(line: 359, column: 10, scope: !3003)
!3168 = !DILocation(line: 361, column: 45, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3003, file: !2, line: 361, column: 10)
!3170 = !DILocation(line: 361, column: 49, scope: !3169)
!3171 = !DILocation(line: 361, column: 29, scope: !3169)
!3172 = !DILocation(line: 361, column: 10, scope: !3003)
!3173 = !DILocation(line: 362, column: 3, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3169, file: !2, line: 361, column: 55)
!3175 = !DILocation(line: 364, column: 13, scope: !3003)
!3176 = !DILocation(line: 364, column: 12, scope: !3003)
!3177 = !DILocation(line: 364, column: 10, scope: !3003)
!3178 = !DILocation(line: 366, column: 10, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3003, file: !2, line: 366, column: 10)
!3180 = !DILocation(line: 366, column: 27, scope: !3179)
!3181 = !DILocation(line: 366, column: 10, scope: !3003)
!3182 = !DILocation(line: 367, column: 3, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3179, file: !2, line: 366, column: 50)
!3184 = !DILocation(line: 370, column: 14, scope: !3003)
!3185 = !DILocation(line: 370, column: 20, scope: !3003)
!3186 = !DILocation(line: 370, column: 18, scope: !3003)
!3187 = !DILocation(line: 370, column: 38, scope: !3003)
!3188 = !DILocation(line: 370, column: 7, scope: !3003)
!3189 = !DILocation(line: 370, column: 11, scope: !3003)
!3190 = !DILocation(line: 373, column: 14, scope: !3003)
!3191 = !DILocation(line: 373, column: 18, scope: !3003)
!3192 = !DILocation(line: 373, column: 6, scope: !3003)
!3193 = !DILocation(line: 375, column: 3, scope: !3005)
!3194 = !DILocation(line: 375, column: 7, scope: !3005)
!3195 = !DILocation(line: 375, column: 15, scope: !3005)
!3196 = !DILocation(line: 376, column: 10, scope: !3005)
!3197 = !DILocation(line: 376, column: 16, scope: !3005)
!3198 = !DILocation(line: 376, column: 7, scope: !3005)
!3199 = !DILocation(line: 377, column: 7, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3005, file: !2, line: 377, column: 7)
!3201 = !DILocation(line: 377, column: 13, scope: !3200)
!3202 = !DILocation(line: 377, column: 7, scope: !3005)
!3203 = !DILocation(line: 381, column: 21, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3200, file: !2, line: 377, column: 19)
!3205 = !DILocation(line: 383, column: 3, scope: !3005)
!3206 = !DILocation(line: 383, column: 15, scope: !3005)
!3207 = !DILocation(line: 383, column: 18, scope: !3005)
!3208 = !DILocation(line: 384, column: 14, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3005, file: !2, line: 383, column: 23)
!3210 = !DILocation(line: 384, column: 13, scope: !3209)
!3211 = !DILocation(line: 384, column: 11, scope: !3209)
!3212 = !DILocation(line: 385, column: 12, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3209, file: !2, line: 385, column: 11)
!3214 = !DILocation(line: 385, column: 11, scope: !3209)
!3215 = !DILocation(line: 386, column: 4, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3213, file: !2, line: 385, column: 27)
!3217 = !DILocation(line: 386, column: 4, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !2, line: 386, column: 4)
!3219 = distinct !DILexicalBlock(scope: !3216, file: !2, line: 386, column: 4)
!3220 = !DILocation(line: 386, column: 4, scope: !3219)
!3221 = !DILocation(line: 386, column: 4, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3218, file: !2, line: 386, column: 4)
!3223 = !DILocation(line: 386, column: 4, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3219, file: !2, line: 386, column: 4)
!3225 = !DILocation(line: 386, column: 4, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3224, file: !2, line: 386, column: 4)
!3227 = !DILocation(line: 386, column: 4, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3226, file: !2, line: 386, column: 4)
!3229 = !DILocation(line: 387, column: 7, scope: !3216)
!3230 = distinct !{!3230, !3205, !3231, !1882}
!3231 = !DILocation(line: 388, column: 3, scope: !3005)
!3232 = !DILocation(line: 389, column: 3, scope: !3005)
!3233 = !DILocation(line: 390, column: 6, scope: !3006)
!3234 = !DILocation(line: 392, column: 3, scope: !3008)
!3235 = !DILocation(line: 392, column: 16, scope: !3008)
!3236 = !DILocation(line: 392, column: 39, scope: !3008)
!3237 = !DILocation(line: 393, column: 3, scope: !3008)
!3238 = !DILocation(line: 393, column: 12, scope: !3008)
!3239 = !DILocation(line: 393, column: 39, scope: !3008)
!3240 = !DILocation(line: 393, column: 45, scope: !3008)
!3241 = !DILocation(line: 393, column: 37, scope: !3008)
!3242 = !DILocation(line: 394, column: 3, scope: !3008)
!3243 = !DILocation(line: 394, column: 12, scope: !3008)
!3244 = !DILocation(line: 394, column: 17, scope: !3008)
!3245 = !DILocation(line: 395, column: 27, scope: !3008)
!3246 = !DILocation(line: 395, column: 25, scope: !3008)
!3247 = !DILocation(line: 395, column: 32, scope: !3008)
!3248 = !DILocation(line: 395, column: 30, scope: !3008)
!3249 = !DILocation(line: 395, column: 10, scope: !3008)
!3250 = !DILocation(line: 395, column: 7, scope: !3008)
!3251 = !DILocation(line: 396, column: 27, scope: !3008)
!3252 = !DILocation(line: 396, column: 25, scope: !3008)
!3253 = !DILocation(line: 396, column: 7, scope: !3008)
!3254 = !DILocation(line: 397, column: 3, scope: !3008)
!3255 = !DILocation(line: 397, column: 16, scope: !3008)
!3256 = !DILocation(line: 397, column: 19, scope: !3008)
!3257 = !DILocation(line: 398, column: 17, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3008, file: !2, line: 397, column: 24)
!3259 = !DILocation(line: 398, column: 13, scope: !3258)
!3260 = !DILocation(line: 398, column: 11, scope: !3258)
!3261 = !DILocation(line: 399, column: 12, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3258, file: !2, line: 399, column: 11)
!3263 = !DILocation(line: 399, column: 11, scope: !3258)
!3264 = !DILocation(line: 400, column: 4, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3262, file: !2, line: 399, column: 27)
!3266 = !DILocation(line: 400, column: 4, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !2, line: 400, column: 4)
!3268 = distinct !DILexicalBlock(scope: !3265, file: !2, line: 400, column: 4)
!3269 = !DILocation(line: 400, column: 4, scope: !3268)
!3270 = !DILocation(line: 400, column: 4, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3267, file: !2, line: 400, column: 4)
!3272 = !DILocation(line: 400, column: 4, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3268, file: !2, line: 400, column: 4)
!3274 = !DILocation(line: 400, column: 4, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3273, file: !2, line: 400, column: 4)
!3276 = !DILocation(line: 400, column: 4, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3275, file: !2, line: 400, column: 4)
!3278 = !DILocation(line: 401, column: 7, scope: !3265)
!3279 = distinct !{!3279, !3254, !3280, !1882}
!3280 = !DILocation(line: 402, column: 3, scope: !3008)
!3281 = !DILocation(line: 404, column: 6, scope: !3006)
!3282 = !DILocation(line: 406, column: 3, scope: !3012)
!3283 = !DILocation(line: 406, column: 14, scope: !3012)
!3284 = !DILocation(line: 406, column: 33, scope: !3012)
!3285 = !DILocation(line: 407, column: 3, scope: !3012)
!3286 = !DILocation(line: 407, column: 8, scope: !3012)
!3287 = !DILocation(line: 408, column: 3, scope: !3012)
!3288 = !DILocation(line: 408, column: 9, scope: !3012)
!3289 = !DILocation(line: 410, column: 7, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3012, file: !2, line: 410, column: 7)
!3291 = !DILocation(line: 410, column: 11, scope: !3290)
!3292 = !DILocation(line: 410, column: 21, scope: !3290)
!3293 = !DILocation(line: 410, column: 25, scope: !3290)
!3294 = !DILocation(line: 410, column: 19, scope: !3290)
!3295 = !DILocation(line: 410, column: 33, scope: !3290)
!3296 = !DILocation(line: 410, column: 7, scope: !3012)
!3297 = !DILocation(line: 411, column: 11, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3290, file: !2, line: 410, column: 38)
!3299 = !DILocation(line: 412, column: 19, scope: !3298)
!3300 = !DILocation(line: 413, column: 3, scope: !3298)
!3301 = !DILocation(line: 413, column: 14, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3290, file: !2, line: 413, column: 14)
!3303 = !DILocation(line: 413, column: 18, scope: !3302)
!3304 = !DILocation(line: 413, column: 28, scope: !3302)
!3305 = !DILocation(line: 413, column: 32, scope: !3302)
!3306 = !DILocation(line: 413, column: 26, scope: !3302)
!3307 = !DILocation(line: 413, column: 40, scope: !3302)
!3308 = !DILocation(line: 413, column: 14, scope: !3290)
!3309 = !DILocation(line: 414, column: 11, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3302, file: !2, line: 413, column: 45)
!3311 = !DILocation(line: 415, column: 19, scope: !3310)
!3312 = !DILocation(line: 416, column: 3, scope: !3310)
!3313 = !DILocation(line: 417, column: 19, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3302, file: !2, line: 416, column: 10)
!3315 = !DILocation(line: 419, column: 9, scope: !3012)
!3316 = !DILocation(line: 419, column: 7, scope: !3012)
!3317 = !DILocation(line: 420, column: 11, scope: !3012)
!3318 = !DILocation(line: 420, column: 10, scope: !3012)
!3319 = !DILocation(line: 420, column: 16, scope: !3012)
!3320 = !DILocation(line: 420, column: 7, scope: !3012)
!3321 = !DILocation(line: 421, column: 7, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3012, file: !2, line: 421, column: 7)
!3323 = !DILocation(line: 421, column: 25, scope: !3322)
!3324 = !DILocation(line: 421, column: 7, scope: !3012)
!3325 = !DILocation(line: 422, column: 11, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3322, file: !2, line: 421, column: 48)
!3327 = !DILocation(line: 423, column: 3, scope: !3326)
!3328 = !DILocation(line: 425, column: 14, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3322, file: !2, line: 423, column: 10)
!3330 = !DILocation(line: 425, column: 11, scope: !3329)
!3331 = !DILocation(line: 428, column: 6, scope: !3006)
!3332 = !DILocation(line: 430, column: 25, scope: !3006)
!3333 = !DILocation(line: 430, column: 17, scope: !3006)
!3334 = !DILocation(line: 432, column: 25, scope: !3016)
!3335 = !DILocation(line: 432, column: 36, scope: !3016)
!3336 = !DILocation(line: 432, column: 54, scope: !3016)
!3337 = !DILocation(line: 433, column: 25, scope: !3016)
!3338 = !DILocation(line: 433, column: 30, scope: !3016)
!3339 = !DILocation(line: 433, column: 34, scope: !3016)
!3340 = !DILocation(line: 433, column: 55, scope: !3016)
!3341 = !DILocation(line: 435, column: 41, scope: !3016)
!3342 = !DILocation(line: 435, column: 30, scope: !3016)
!3343 = !DILocation(line: 436, column: 32, scope: !3016)
!3344 = !DILocation(line: 436, column: 34, scope: !3016)
!3345 = !DILocation(line: 436, column: 29, scope: !3016)
!3346 = !DILocation(line: 437, column: 29, scope: !3016)
!3347 = !DILocation(line: 438, column: 25, scope: !3016)
!3348 = !DILocation(line: 438, column: 33, scope: !3016)
!3349 = !DILocation(line: 439, column: 39, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3016, file: !2, line: 438, column: 37)
!3351 = !DILocation(line: 439, column: 35, scope: !3350)
!3352 = !DILocation(line: 439, column: 33, scope: !3350)
!3353 = !DILocation(line: 440, column: 34, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3350, file: !2, line: 440, column: 33)
!3355 = !DILocation(line: 440, column: 33, scope: !3350)
!3356 = !DILocation(line: 441, column: 33, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3354, file: !2, line: 440, column: 49)
!3358 = !DILocation(line: 441, column: 33, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !2, line: 441, column: 33)
!3360 = distinct !DILexicalBlock(scope: !3357, file: !2, line: 441, column: 33)
!3361 = !DILocation(line: 441, column: 33, scope: !3360)
!3362 = !DILocation(line: 441, column: 33, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !2, line: 441, column: 33)
!3364 = !DILocation(line: 441, column: 33, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3360, file: !2, line: 441, column: 33)
!3366 = !DILocation(line: 441, column: 33, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3365, file: !2, line: 441, column: 33)
!3368 = !DILocation(line: 441, column: 33, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3367, file: !2, line: 441, column: 33)
!3370 = !DILocation(line: 442, column: 29, scope: !3357)
!3371 = distinct !{!3371, !3347, !3372, !1882}
!3372 = !DILocation(line: 443, column: 25, scope: !3016)
!3373 = !DILocation(line: 445, column: 21, scope: !3017)
!3374 = !DILocation(line: 449, column: 25, scope: !3020)
!3375 = !DILocation(line: 449, column: 30, scope: !3020)
!3376 = !DILocation(line: 449, column: 34, scope: !3020)
!3377 = !DILocation(line: 450, column: 36, scope: !3020)
!3378 = !DILocation(line: 450, column: 34, scope: !3020)
!3379 = !DILocation(line: 450, column: 40, scope: !3020)
!3380 = !DILocation(line: 450, column: 38, scope: !3020)
!3381 = !DILocation(line: 450, column: 29, scope: !3020)
!3382 = !DILocation(line: 451, column: 36, scope: !3020)
!3383 = !DILocation(line: 451, column: 34, scope: !3020)
!3384 = !DILocation(line: 451, column: 29, scope: !3020)
!3385 = !DILocation(line: 452, column: 25, scope: !3020)
!3386 = !DILocation(line: 452, column: 33, scope: !3020)
!3387 = !DILocation(line: 453, column: 39, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3020, file: !2, line: 452, column: 37)
!3389 = !DILocation(line: 453, column: 35, scope: !3388)
!3390 = !DILocation(line: 453, column: 33, scope: !3388)
!3391 = !DILocation(line: 454, column: 34, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3388, file: !2, line: 454, column: 33)
!3393 = !DILocation(line: 454, column: 33, scope: !3388)
!3394 = !DILocation(line: 455, column: 33, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3392, file: !2, line: 454, column: 49)
!3396 = !DILocation(line: 455, column: 33, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !2, line: 455, column: 33)
!3398 = distinct !DILexicalBlock(scope: !3395, file: !2, line: 455, column: 33)
!3399 = !DILocation(line: 455, column: 33, scope: !3398)
!3400 = !DILocation(line: 455, column: 33, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3397, file: !2, line: 455, column: 33)
!3402 = !DILocation(line: 455, column: 33, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3398, file: !2, line: 455, column: 33)
!3404 = !DILocation(line: 455, column: 33, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3403, file: !2, line: 455, column: 33)
!3406 = !DILocation(line: 455, column: 33, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3405, file: !2, line: 455, column: 33)
!3408 = !DILocation(line: 456, column: 29, scope: !3395)
!3409 = distinct !{!3409, !3385, !3410, !1882}
!3410 = !DILocation(line: 457, column: 25, scope: !3020)
!3411 = !DILocation(line: 459, column: 21, scope: !3017)
!3412 = !DILocation(line: 461, column: 90, scope: !3017)
!3413 = !DILocation(line: 461, column: 25, scope: !3017)
!3414 = !DILocation(line: 464, column: 3, scope: !3006)
!3415 = !DILocation(line: 467, column: 10, scope: !3006)
!3416 = !DILocation(line: 467, column: 30, scope: !3006)
!3417 = !DILocation(line: 467, column: 7, scope: !3006)
!3418 = !DILocation(line: 468, column: 3, scope: !3006)
!3419 = !DILocation(line: 471, column: 2, scope: !2997)
!3420 = !DILocation(line: 471, column: 2, scope: !3003)
!3421 = !DILocation(line: 473, column: 2, scope: !2997)
!3422 = !DILocation(line: 474, column: 10, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !2997, file: !2, line: 474, column: 10)
!3424 = !DILocation(line: 474, column: 10, scope: !2997)
!3425 = !DILocation(line: 475, column: 3, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3423, file: !2, line: 474, column: 29)
!3427 = !DILocation(line: 477, column: 12, scope: !2997)
!3428 = !DILocation(line: 477, column: 10, scope: !2997)
!3429 = !DILocation(line: 478, column: 6, scope: !2997)
!3430 = !DILocation(line: 480, column: 67, scope: !2997)
!3431 = !DILocation(line: 480, column: 6, scope: !2997)
!3432 = !DILocation(line: 318, column: 5, scope: !2999)
!3433 = distinct !{!3433, !3434, !3435}
!3434 = !DILocation(line: 318, column: 5, scope: !3000)
!3435 = !DILocation(line: 482, column: 5, scope: !3000)
!3436 = !DILocation(line: 484, column: 1, scope: !2961)
!3437 = !DILocation(line: 485, column: 11, scope: !2961)
!3438 = !DILocation(line: 485, column: 9, scope: !2961)
!3439 = !DILocation(line: 486, column: 5, scope: !2961)
!3440 = !DILocation(line: 486, column: 5, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !2, line: 486, column: 5)
!3442 = distinct !DILexicalBlock(scope: !2961, file: !2, line: 486, column: 5)
!3443 = !DILocation(line: 486, column: 5, scope: !3442)
!3444 = !DILocation(line: 486, column: 5, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3441, file: !2, line: 486, column: 5)
!3446 = !DILocation(line: 486, column: 5, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3445, file: !2, line: 486, column: 5)
!3448 = !DILocation(line: 486, column: 5, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !2, line: 486, column: 5)
!3450 = distinct !DILexicalBlock(scope: !3447, file: !2, line: 486, column: 5)
!3451 = !DILocation(line: 486, column: 5, scope: !3450)
!3452 = !DILocation(line: 486, column: 5, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3449, file: !2, line: 486, column: 5)
!3454 = !DILocation(line: 487, column: 5, scope: !2961)
!3455 = !DILocation(line: 488, column: 10, scope: !3026)
!3456 = !DILocation(line: 488, column: 2, scope: !3026)
!3457 = !DILocation(line: 490, column: 6, scope: !3024)
!3458 = !DILocation(line: 490, column: 12, scope: !3024)
!3459 = !DILocation(line: 490, column: 18, scope: !3024)
!3460 = !DILocation(line: 491, column: 12, scope: !3024)
!3461 = !DILocation(line: 491, column: 10, scope: !3024)
!3462 = !DILocation(line: 492, column: 45, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3024, file: !2, line: 492, column: 10)
!3464 = !DILocation(line: 492, column: 49, scope: !3463)
!3465 = !DILocation(line: 492, column: 29, scope: !3463)
!3466 = !DILocation(line: 492, column: 10, scope: !3024)
!3467 = !DILocation(line: 493, column: 3, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3463, file: !2, line: 492, column: 55)
!3469 = !DILocation(line: 495, column: 13, scope: !3024)
!3470 = !DILocation(line: 495, column: 11, scope: !3024)
!3471 = !DILocation(line: 496, column: 13, scope: !3024)
!3472 = !DILocation(line: 496, column: 11, scope: !3024)
!3473 = !DILocation(line: 498, column: 10, scope: !3034)
!3474 = !DILocation(line: 498, column: 28, scope: !3034)
!3475 = !DILocation(line: 498, column: 10, scope: !3024)
!3476 = !DILocation(line: 499, column: 7, scope: !3032)
!3477 = !DILocation(line: 499, column: 25, scope: !3032)
!3478 = !DILocation(line: 499, column: 7, scope: !3033)
!3479 = !DILocation(line: 500, column: 7, scope: !3031)
!3480 = !DILocation(line: 500, column: 13, scope: !3031)
!3481 = !DILocation(line: 501, column: 21, scope: !3031)
!3482 = !DILocation(line: 501, column: 21, scope: !3036)
!3483 = !DILocation(line: 501, column: 21, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3036, file: !2, line: 501, column: 21)
!3485 = !DILocation(line: 501, column: 21, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3484, file: !2, line: 501, column: 21)
!3487 = !DILocation(line: 502, column: 26, scope: !3031)
!3488 = !DILocation(line: 502, column: 31, scope: !3031)
!3489 = !DILocation(line: 502, column: 55, scope: !3031)
!3490 = !DILocation(line: 502, column: 53, scope: !3031)
!3491 = !DILocation(line: 502, column: 23, scope: !3031)
!3492 = !DILocation(line: 502, column: 7, scope: !3031)
!3493 = !DILocation(line: 502, column: 16, scope: !3031)
!3494 = !DILocation(line: 503, column: 26, scope: !3031)
!3495 = !DILocation(line: 503, column: 31, scope: !3031)
!3496 = !DILocation(line: 503, column: 53, scope: !3031)
!3497 = !DILocation(line: 503, column: 23, scope: !3031)
!3498 = !DILocation(line: 503, column: 7, scope: !3031)
!3499 = !DILocation(line: 503, column: 16, scope: !3031)
!3500 = !DILocation(line: 504, column: 3, scope: !3032)
!3501 = !DILocation(line: 504, column: 3, scope: !3031)
!3502 = !DILocation(line: 505, column: 26, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3032, file: !2, line: 504, column: 10)
!3504 = !DILocation(line: 505, column: 31, scope: !3503)
!3505 = !DILocation(line: 505, column: 53, scope: !3503)
!3506 = !DILocation(line: 505, column: 23, scope: !3503)
!3507 = !DILocation(line: 505, column: 7, scope: !3503)
!3508 = !DILocation(line: 505, column: 16, scope: !3503)
!3509 = !DILocation(line: 507, column: 6, scope: !3033)
!3510 = !DILocation(line: 507, column: 17, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3034, file: !2, line: 507, column: 17)
!3512 = !DILocation(line: 507, column: 35, scope: !3511)
!3513 = !DILocation(line: 507, column: 17, scope: !3034)
!3514 = !DILocation(line: 508, column: 22, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3511, file: !2, line: 507, column: 58)
!3516 = !DILocation(line: 508, column: 27, scope: !3515)
!3517 = !DILocation(line: 508, column: 51, scope: !3515)
!3518 = !DILocation(line: 508, column: 49, scope: !3515)
!3519 = !DILocation(line: 508, column: 19, scope: !3515)
!3520 = !DILocation(line: 508, column: 3, scope: !3515)
!3521 = !DILocation(line: 508, column: 12, scope: !3515)
!3522 = !DILocation(line: 509, column: 22, scope: !3515)
!3523 = !DILocation(line: 509, column: 29, scope: !3515)
!3524 = !DILocation(line: 509, column: 27, scope: !3515)
!3525 = !DILocation(line: 509, column: 48, scope: !3515)
!3526 = !DILocation(line: 509, column: 19, scope: !3515)
!3527 = !DILocation(line: 509, column: 3, scope: !3515)
!3528 = !DILocation(line: 509, column: 12, scope: !3515)
!3529 = !DILocation(line: 510, column: 6, scope: !3515)
!3530 = !DILocation(line: 511, column: 3, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3511, file: !2, line: 510, column: 13)
!3532 = !DILocation(line: 514, column: 11, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3024, file: !2, line: 514, column: 10)
!3534 = !DILocation(line: 514, column: 10, scope: !3024)
!3535 = !DILocation(line: 515, column: 3, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3533, file: !2, line: 514, column: 27)
!3537 = !DILocation(line: 515, column: 3, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3536, file: !2, line: 515, column: 3)
!3539 = !DILocation(line: 515, column: 3, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3538, file: !2, line: 515, column: 3)
!3541 = !DILocation(line: 515, column: 3, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3540, file: !2, line: 515, column: 3)
!3543 = !DILocation(line: 516, column: 6, scope: !3536)
!3544 = !DILocation(line: 517, column: 12, scope: !3024)
!3545 = !DILocation(line: 517, column: 10, scope: !3024)
!3546 = !DILocation(line: 518, column: 6, scope: !3024)
!3547 = !DILocation(line: 519, column: 2, scope: !3025)
!3548 = !DILocation(line: 521, column: 6, scope: !3038)
!3549 = !DILocation(line: 521, column: 12, scope: !3038)
!3550 = !DILocation(line: 522, column: 12, scope: !3038)
!3551 = !DILocation(line: 522, column: 10, scope: !3038)
!3552 = !DILocation(line: 523, column: 45, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3038, file: !2, line: 523, column: 10)
!3554 = !DILocation(line: 523, column: 49, scope: !3553)
!3555 = !DILocation(line: 523, column: 29, scope: !3553)
!3556 = !DILocation(line: 523, column: 10, scope: !3038)
!3557 = !DILocation(line: 524, column: 3, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3553, file: !2, line: 523, column: 55)
!3559 = !DILocation(line: 526, column: 13, scope: !3038)
!3560 = !DILocation(line: 526, column: 12, scope: !3038)
!3561 = !DILocation(line: 526, column: 10, scope: !3038)
!3562 = !DILocation(line: 528, column: 10, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3038, file: !2, line: 528, column: 10)
!3564 = !DILocation(line: 528, column: 27, scope: !3563)
!3565 = !DILocation(line: 528, column: 10, scope: !3038)
!3566 = !DILocation(line: 529, column: 3, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3563, file: !2, line: 528, column: 50)
!3568 = !DILocation(line: 533, column: 17, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3563, file: !2, line: 531, column: 11)
!3570 = !DILocation(line: 533, column: 21, scope: !3569)
!3571 = !DILocation(line: 533, column: 38, scope: !3569)
!3572 = !DILocation(line: 533, column: 14, scope: !3569)
!3573 = !DILocation(line: 533, column: 4, scope: !3569)
!3574 = !DILocation(line: 533, column: 8, scope: !3569)
!3575 = !DILocation(line: 536, column: 14, scope: !3038)
!3576 = !DILocation(line: 536, column: 18, scope: !3038)
!3577 = !DILocation(line: 536, column: 6, scope: !3038)
!3578 = !DILocation(line: 538, column: 3, scope: !3040)
!3579 = !DILocation(line: 538, column: 7, scope: !3040)
!3580 = !DILocation(line: 538, column: 15, scope: !3040)
!3581 = !DILocation(line: 539, column: 7, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3040, file: !2, line: 539, column: 7)
!3583 = !DILocation(line: 539, column: 13, scope: !3582)
!3584 = !DILocation(line: 539, column: 7, scope: !3040)
!3585 = !DILocation(line: 543, column: 7, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3582, file: !2, line: 539, column: 19)
!3587 = !DILocation(line: 545, column: 3, scope: !3040)
!3588 = !DILocation(line: 545, column: 15, scope: !3040)
!3589 = !DILocation(line: 545, column: 18, scope: !3040)
!3590 = !DILocation(line: 546, column: 14, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3040, file: !2, line: 545, column: 23)
!3592 = !DILocation(line: 546, column: 13, scope: !3591)
!3593 = !DILocation(line: 546, column: 11, scope: !3591)
!3594 = !DILocation(line: 547, column: 12, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !2, line: 547, column: 11)
!3596 = !DILocation(line: 547, column: 11, scope: !3591)
!3597 = !DILocation(line: 548, column: 4, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !2, line: 547, column: 27)
!3599 = !DILocation(line: 548, column: 4, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3598, file: !2, line: 548, column: 4)
!3601 = !DILocation(line: 548, column: 4, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3600, file: !2, line: 548, column: 4)
!3603 = !DILocation(line: 548, column: 4, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3602, file: !2, line: 548, column: 4)
!3605 = !DILocation(line: 549, column: 7, scope: !3598)
!3606 = distinct !{!3606, !3587, !3607, !1882}
!3607 = !DILocation(line: 550, column: 3, scope: !3040)
!3608 = !DILocation(line: 551, column: 3, scope: !3040)
!3609 = !DILocation(line: 552, column: 6, scope: !3041)
!3610 = !DILocation(line: 554, column: 3, scope: !3043)
!3611 = !DILocation(line: 554, column: 16, scope: !3043)
!3612 = !DILocation(line: 554, column: 39, scope: !3043)
!3613 = !DILocation(line: 555, column: 3, scope: !3043)
!3614 = !DILocation(line: 555, column: 12, scope: !3043)
!3615 = !DILocation(line: 555, column: 39, scope: !3043)
!3616 = !DILocation(line: 555, column: 45, scope: !3043)
!3617 = !DILocation(line: 555, column: 37, scope: !3043)
!3618 = !DILocation(line: 556, column: 3, scope: !3043)
!3619 = !DILocation(line: 556, column: 12, scope: !3043)
!3620 = !DILocation(line: 556, column: 17, scope: !3043)
!3621 = !DILocation(line: 557, column: 27, scope: !3043)
!3622 = !DILocation(line: 557, column: 25, scope: !3043)
!3623 = !DILocation(line: 557, column: 7, scope: !3043)
!3624 = !DILocation(line: 558, column: 3, scope: !3043)
!3625 = !DILocation(line: 558, column: 16, scope: !3043)
!3626 = !DILocation(line: 558, column: 19, scope: !3043)
!3627 = !DILocation(line: 559, column: 17, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3043, file: !2, line: 558, column: 24)
!3629 = !DILocation(line: 559, column: 13, scope: !3628)
!3630 = !DILocation(line: 559, column: 11, scope: !3628)
!3631 = !DILocation(line: 560, column: 12, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !2, line: 560, column: 11)
!3633 = !DILocation(line: 560, column: 11, scope: !3628)
!3634 = !DILocation(line: 561, column: 4, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3632, file: !2, line: 560, column: 27)
!3636 = !DILocation(line: 561, column: 4, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3635, file: !2, line: 561, column: 4)
!3638 = !DILocation(line: 561, column: 4, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3637, file: !2, line: 561, column: 4)
!3640 = !DILocation(line: 561, column: 4, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3639, file: !2, line: 561, column: 4)
!3642 = !DILocation(line: 562, column: 7, scope: !3635)
!3643 = distinct !{!3643, !3624, !3644, !1882}
!3644 = !DILocation(line: 563, column: 3, scope: !3043)
!3645 = !DILocation(line: 565, column: 6, scope: !3041)
!3646 = !DILocation(line: 567, column: 25, scope: !3041)
!3647 = !DILocation(line: 567, column: 17, scope: !3041)
!3648 = !DILocation(line: 569, column: 25, scope: !3047)
!3649 = !DILocation(line: 569, column: 36, scope: !3047)
!3650 = !DILocation(line: 569, column: 55, scope: !3047)
!3651 = !DILocation(line: 570, column: 25, scope: !3047)
!3652 = !DILocation(line: 570, column: 30, scope: !3047)
!3653 = !DILocation(line: 570, column: 34, scope: !3047)
!3654 = !DILocation(line: 570, column: 55, scope: !3047)
!3655 = !DILocation(line: 572, column: 29, scope: !3047)
!3656 = !DILocation(line: 573, column: 25, scope: !3047)
!3657 = !DILocation(line: 573, column: 33, scope: !3047)
!3658 = !DILocation(line: 574, column: 39, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3047, file: !2, line: 573, column: 37)
!3660 = !DILocation(line: 574, column: 35, scope: !3659)
!3661 = !DILocation(line: 574, column: 33, scope: !3659)
!3662 = !DILocation(line: 575, column: 34, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3659, file: !2, line: 575, column: 33)
!3664 = !DILocation(line: 575, column: 33, scope: !3659)
!3665 = !DILocation(line: 576, column: 33, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3663, file: !2, line: 575, column: 49)
!3667 = !DILocation(line: 576, column: 33, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3666, file: !2, line: 576, column: 33)
!3669 = !DILocation(line: 576, column: 33, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3668, file: !2, line: 576, column: 33)
!3671 = !DILocation(line: 576, column: 33, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3670, file: !2, line: 576, column: 33)
!3673 = !DILocation(line: 577, column: 29, scope: !3666)
!3674 = distinct !{!3674, !3656, !3675, !1882}
!3675 = !DILocation(line: 578, column: 25, scope: !3047)
!3676 = !DILocation(line: 580, column: 21, scope: !3048)
!3677 = !DILocation(line: 584, column: 25, scope: !3051)
!3678 = !DILocation(line: 584, column: 30, scope: !3051)
!3679 = !DILocation(line: 584, column: 34, scope: !3051)
!3680 = !DILocation(line: 585, column: 36, scope: !3051)
!3681 = !DILocation(line: 585, column: 34, scope: !3051)
!3682 = !DILocation(line: 585, column: 40, scope: !3051)
!3683 = !DILocation(line: 585, column: 38, scope: !3051)
!3684 = !DILocation(line: 585, column: 29, scope: !3051)
!3685 = !DILocation(line: 586, column: 36, scope: !3051)
!3686 = !DILocation(line: 586, column: 34, scope: !3051)
!3687 = !DILocation(line: 586, column: 29, scope: !3051)
!3688 = !DILocation(line: 587, column: 25, scope: !3051)
!3689 = !DILocation(line: 587, column: 33, scope: !3051)
!3690 = !DILocation(line: 588, column: 39, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3051, file: !2, line: 587, column: 37)
!3692 = !DILocation(line: 588, column: 35, scope: !3691)
!3693 = !DILocation(line: 588, column: 33, scope: !3691)
!3694 = !DILocation(line: 589, column: 34, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !2, line: 589, column: 33)
!3696 = !DILocation(line: 589, column: 33, scope: !3691)
!3697 = !DILocation(line: 590, column: 33, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3695, file: !2, line: 589, column: 49)
!3699 = !DILocation(line: 590, column: 33, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3698, file: !2, line: 590, column: 33)
!3701 = !DILocation(line: 590, column: 33, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3700, file: !2, line: 590, column: 33)
!3703 = !DILocation(line: 590, column: 33, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3702, file: !2, line: 590, column: 33)
!3705 = !DILocation(line: 591, column: 29, scope: !3698)
!3706 = distinct !{!3706, !3688, !3707, !1882}
!3707 = !DILocation(line: 592, column: 25, scope: !3051)
!3708 = !DILocation(line: 594, column: 21, scope: !3048)
!3709 = !DILocation(line: 596, column: 90, scope: !3048)
!3710 = !DILocation(line: 596, column: 25, scope: !3048)
!3711 = !DILocation(line: 599, column: 3, scope: !3041)
!3712 = !DILocation(line: 602, column: 2, scope: !3025)
!3713 = !DILocation(line: 602, column: 2, scope: !3038)
!3714 = !DILocation(line: 604, column: 2, scope: !3025)
!3715 = !DILocation(line: 605, column: 10, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3025, file: !2, line: 605, column: 10)
!3717 = !DILocation(line: 605, column: 10, scope: !3025)
!3718 = !DILocation(line: 606, column: 3, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3716, file: !2, line: 605, column: 29)
!3720 = !DILocation(line: 608, column: 12, scope: !3025)
!3721 = !DILocation(line: 608, column: 10, scope: !3025)
!3722 = !DILocation(line: 609, column: 6, scope: !3025)
!3723 = !DILocation(line: 611, column: 67, scope: !3025)
!3724 = !DILocation(line: 611, column: 6, scope: !3025)
!3725 = !DILocation(line: 487, column: 5, scope: !3027)
!3726 = distinct !{!3726, !3727, !3728}
!3727 = !DILocation(line: 487, column: 5, scope: !3028)
!3728 = !DILocation(line: 613, column: 5, scope: !3028)
!3729 = !DILocation(line: 615, column: 2, scope: !2961)
!3730 = !DILocation(line: 617, column: 5, scope: !2961)
!3731 = !DILocation(line: 617, column: 5, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !2, line: 617, column: 5)
!3733 = distinct !DILexicalBlock(scope: !2961, file: !2, line: 617, column: 5)
!3734 = !DILocation(line: 617, column: 5, scope: !3733)
!3735 = !DILocation(line: 617, column: 5, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3732, file: !2, line: 617, column: 5)
!3737 = !DILocation(line: 618, column: 5, scope: !2961)
!3738 = !DILocation(line: 618, column: 5, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !2, line: 618, column: 5)
!3740 = distinct !DILexicalBlock(scope: !2961, file: !2, line: 618, column: 5)
!3741 = !DILocation(line: 618, column: 5, scope: !3740)
!3742 = !DILocation(line: 618, column: 5, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3739, file: !2, line: 618, column: 5)
!3744 = !DILocation(line: 619, column: 12, scope: !2961)
!3745 = !DILocation(line: 619, column: 5, scope: !2961)
!3746 = !DILocation(line: 620, column: 1, scope: !2961)
!3747 = !DISubprogram(name: "erl_grow_wstack", scope: !266, file: !266, line: 514, type: !3748, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{null, !3750, !128}
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!3751 = !DISubprogram(name: "erl_grow_equeue", scope: !266, file: !266, line: 858, type: !3752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{null, !3754, !92}
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!3755 = distinct !DISubprogram(name: "erts_equeue_get", scope: !266, file: !266, line: 902, type: !3756, scopeLine: 902, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !3758)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!93, !3754}
!3758 = !{!3759, !3760}
!3759 = !DILocalVariable(name: "q", arg: 1, scope: !3755, file: !266, line: 902, type: !3754)
!3760 = !DILocalVariable(name: "x", scope: !3755, file: !266, line: 903, type: !93)
!3761 = !DILocation(line: 902, column: 51, scope: !3755)
!3762 = !DILocation(line: 903, column: 5, scope: !3755)
!3763 = !DILocation(line: 903, column: 11, scope: !3755)
!3764 = !DILocation(line: 904, column: 5, scope: !3755)
!3765 = !DILocation(line: 904, column: 8, scope: !3755)
!3766 = !DILocation(line: 904, column: 23, scope: !3755)
!3767 = !DILocation(line: 905, column: 11, scope: !3755)
!3768 = !DILocation(line: 905, column: 14, scope: !3755)
!3769 = !DILocation(line: 905, column: 9, scope: !3755)
!3770 = !DILocation(line: 905, column: 7, scope: !3755)
!3771 = !DILocation(line: 906, column: 12, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3755, file: !266, line: 906, column: 9)
!3773 = !DILocation(line: 906, column: 15, scope: !3772)
!3774 = !DILocation(line: 906, column: 9, scope: !3772)
!3775 = !DILocation(line: 906, column: 25, scope: !3772)
!3776 = !DILocation(line: 906, column: 28, scope: !3772)
!3777 = !DILocation(line: 906, column: 22, scope: !3772)
!3778 = !DILocation(line: 906, column: 9, scope: !3755)
!3779 = !DILocation(line: 907, column: 20, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3772, file: !266, line: 906, column: 33)
!3781 = !DILocation(line: 907, column: 23, scope: !3780)
!3782 = !DILocation(line: 907, column: 9, scope: !3780)
!3783 = !DILocation(line: 907, column: 12, scope: !3780)
!3784 = !DILocation(line: 907, column: 18, scope: !3780)
!3785 = !DILocation(line: 908, column: 5, scope: !3780)
!3786 = !DILocation(line: 909, column: 12, scope: !3755)
!3787 = !DILocation(line: 910, column: 1, scope: !3755)
!3788 = !DILocation(line: 909, column: 5, scope: !3755)
!3789 = !DISubprogram(name: "erts_emasculate_writable_binary", scope: !266, file: !266, line: 916, type: !3790, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{null, !264}
!3792 = distinct !DISubprogram(name: "erts_refc_inc", scope: !94, file: !94, line: 942, type: !3793, scopeLine: 943, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !3796)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{null, !3795, !1668}
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!3796 = !{!3797, !3798}
!3797 = !DILocalVariable(name: "refcp", arg: 1, scope: !3792, file: !94, line: 942, type: !3795)
!3798 = !DILocalVariable(name: "min_val", arg: 2, scope: !3792, file: !94, line: 942, type: !1668)
!3799 = !DILocation(line: 942, column: 28, scope: !3792)
!3800 = !DILocation(line: 942, column: 47, scope: !3792)
!3801 = !DILocation(line: 951, column: 43, scope: !3792)
!3802 = !DILocation(line: 951, column: 5, scope: !3792)
!3803 = !DILocation(line: 953, column: 1, scope: !3792)
!3804 = distinct !DISubprogram(name: "sys_memcpy", scope: !94, file: !94, line: 1093, type: !3805, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !3807)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!395, !395, !116, !516}
!3807 = !{!3808, !3809, !3810}
!3808 = !DILocalVariable(name: "dest", arg: 1, scope: !3804, file: !94, line: 1093, type: !395)
!3809 = !DILocalVariable(name: "src", arg: 2, scope: !3804, file: !94, line: 1093, type: !116)
!3810 = !DILocalVariable(name: "n", arg: 3, scope: !3804, file: !94, line: 1093, type: !516)
!3811 = !DILocation(line: 1093, column: 40, scope: !3804)
!3812 = !DILocation(line: 1093, column: 58, scope: !3804)
!3813 = !DILocation(line: 1093, column: 70, scope: !3804)
!3814 = !DILocation(line: 1096, column: 19, scope: !3804)
!3815 = !DILocation(line: 1096, column: 24, scope: !3804)
!3816 = !DILocation(line: 1096, column: 28, scope: !3804)
!3817 = !DILocation(line: 1096, column: 12, scope: !3804)
!3818 = !DILocation(line: 1096, column: 5, scope: !3804)
!3819 = distinct !DISubprogram(name: "erts_ref_node_entry", scope: !80, file: !80, line: 325, type: !3820, scopeLine: 326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !3824)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!1668, !3822, !130, !93}
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErlNode", file: !80, line: 225, baseType: !306)
!3824 = !{!3825, !3826, !3827}
!3825 = !DILocalVariable(name: "np", arg: 1, scope: !3819, file: !80, line: 325, type: !3822)
!3826 = !DILocalVariable(name: "min_val", arg: 2, scope: !3819, file: !80, line: 325, type: !130)
!3827 = !DILocalVariable(name: "term", arg: 3, scope: !3819, file: !80, line: 325, type: !93)
!3828 = !DILocation(line: 325, column: 30, scope: !3819)
!3829 = !DILocation(line: 325, column: 38, scope: !3819)
!3830 = !DILocation(line: 325, column: 53, scope: !3819)
!3831 = !DILocation(line: 327, column: 31, scope: !3819)
!3832 = !DILocation(line: 327, column: 35, scope: !3819)
!3833 = !DILocation(line: 327, column: 41, scope: !3819)
!3834 = !DILocation(line: 327, column: 12, scope: !3819)
!3835 = !DILocation(line: 327, column: 5, scope: !3819)
!3836 = distinct !DISubprogram(name: "copy_shared_calculate", scope: !2, file: !2, line: 1116, type: !3837, scopeLine: 1117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !3857)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!128, !93, !3839}
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "erts_shcopy_t", file: !266, line: 1084, baseType: !3841)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !266, line: 1066, size: 3776, elements: !3842)
!3842 = !{!3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "queue_default", scope: !3841, file: !266, line: 1067, baseType: !1729, size: 1024, align: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "queue_start", scope: !3841, file: !266, line: 1068, baseType: !92, size: 64, offset: 1024)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "queue_end", scope: !3841, file: !266, line: 1069, baseType: !92, size: 64, offset: 1088)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "queue_alloc_type", scope: !3841, file: !266, line: 1070, baseType: !551, size: 32, offset: 1152)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "bitstore_default", scope: !3841, file: !266, line: 1071, baseType: !2970, size: 1024, align: 64, offset: 1216)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "bitstore_start", scope: !3841, file: !266, line: 1072, baseType: !2987, size: 64, offset: 2240)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "bitstore_alloc_type", scope: !3841, file: !266, line: 1076, baseType: !551, size: 32, offset: 2304)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "shtable_default", scope: !3841, file: !266, line: 1077, baseType: !1729, size: 1024, align: 64, offset: 2368)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "shtable_start", scope: !3841, file: !266, line: 1078, baseType: !92, size: 64, offset: 3392)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "shtable_alloc_type", scope: !3841, file: !266, line: 1079, baseType: !551, size: 32, offset: 3456)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "literal_size", scope: !3841, file: !266, line: 1080, baseType: !128, size: 64, align: 64, offset: 3520)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "lit_purge_ptr", scope: !3841, file: !266, line: 1081, baseType: !92, size: 64, offset: 3584)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "lit_purge_sz", scope: !3841, file: !266, line: 1082, baseType: !128, size: 64, align: 64, offset: 3648)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "copy_literals", scope: !3841, file: !266, line: 1083, baseType: !130, size: 32, offset: 3712)
!3857 = !{!3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3884, !3885, !3887, !3890, !3892, !3893, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3904, !3905, !3907}
!3858 = !DILocalVariable(name: "obj", arg: 1, scope: !3836, file: !2, line: 1116, type: !93)
!3859 = !DILocalVariable(name: "info", arg: 2, scope: !3836, file: !2, line: 1116, type: !3839)
!3860 = !DILocalVariable(name: "sum", scope: !3836, file: !2, line: 1118, type: !128)
!3861 = !DILocalVariable(name: "e", scope: !3836, file: !2, line: 1119, type: !128)
!3862 = !DILocalVariable(name: "sz", scope: !3836, file: !2, line: 1120, type: !61)
!3863 = !DILocalVariable(name: "ptr", scope: !3836, file: !2, line: 1121, type: !92)
!3864 = !DILocalVariable(name: "lit_purge_ptr", scope: !3836, file: !2, line: 1122, type: !92)
!3865 = !DILocalVariable(name: "lit_purge_sz", scope: !3836, file: !2, line: 1123, type: !128)
!3866 = !DILocalVariable(name: "copy_literals", scope: !3836, file: !2, line: 1124, type: !130)
!3867 = !DILocalVariable(name: "empty_tuple_literal", scope: !3836, file: !2, line: 1128, type: !3868)
!3868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!3869 = !DILocalVariable(name: "s_default_equeue", scope: !3836, file: !2, line: 1131, type: !2987)
!3870 = !DILocalVariable(name: "s", scope: !3836, file: !2, line: 1131, type: !2972)
!3871 = !DILocalVariable(name: "b_default_wstack", scope: !3836, file: !2, line: 1132, type: !2987)
!3872 = !DILocalVariable(name: "b", scope: !3836, file: !2, line: 1132, type: !2983)
!3873 = !DILocalVariable(name: "b_bitoffs", scope: !3836, file: !2, line: 1132, type: !130)
!3874 = !DILocalVariable(name: "b_buffer", scope: !3836, file: !2, line: 1132, type: !195)
!3875 = !DILocalVariable(name: "t_default_estack", scope: !3836, file: !2, line: 1133, type: !92)
!3876 = !DILocalVariable(name: "t", scope: !3836, file: !2, line: 1133, type: !1731)
!3877 = !DILocalVariable(name: "t_offset", scope: !3836, file: !2, line: 1133, type: !128)
!3878 = !DILocalVariable(name: "head", scope: !3879, file: !2, line: 1167, type: !93)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !2, line: 1166, column: 25)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !2, line: 1165, column: 28)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !2, line: 1164, column: 14)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !2, line: 1164, column: 5)
!3883 = distinct !DILexicalBlock(scope: !3836, file: !2, line: 1164, column: 5)
!3884 = !DILocalVariable(name: "tail", scope: !3879, file: !2, line: 1167, type: !93)
!3885 = !DILocalVariable(name: "hdr", scope: !3886, file: !2, line: 1218, type: !93)
!3886 = distinct !DILexicalBlock(scope: !3880, file: !2, line: 1217, column: 26)
!3887 = !DILocalVariable(name: "arity", scope: !3888, file: !2, line: 1248, type: !130)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !2, line: 1247, column: 28)
!3889 = distinct !DILexicalBlock(scope: !3886, file: !2, line: 1246, column: 38)
!3890 = !DILocalVariable(name: "funp", scope: !3891, file: !2, line: 1262, type: !98)
!3891 = distinct !DILexicalBlock(scope: !3889, file: !2, line: 1261, column: 23)
!3892 = !DILocalVariable(name: "eterms", scope: !3891, file: !2, line: 1263, type: !61)
!3893 = !DILocalVariable(name: "sb", scope: !3894, file: !2, line: 1276, type: !251)
!3894 = distinct !DILexicalBlock(scope: !3889, file: !2, line: 1275, column: 30)
!3895 = !DILocalVariable(name: "real_bin", scope: !3894, file: !2, line: 1277, type: !93)
!3896 = !DILocalVariable(name: "bit_offset", scope: !3894, file: !2, line: 1278, type: !128)
!3897 = !DILocalVariable(name: "bit_size", scope: !3894, file: !2, line: 1279, type: !128)
!3898 = !DILocalVariable(name: "size", scope: !3894, file: !2, line: 1280, type: !516)
!3899 = !DILocalVariable(name: "extra_bytes", scope: !3894, file: !2, line: 1281, type: !128)
!3900 = !DILocalVariable(name: "hdr", scope: !3894, file: !2, line: 1282, type: !93)
!3901 = !DILocalVariable(name: "mp", scope: !3902, file: !2, line: 1322, type: !242)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !2, line: 1321, column: 56)
!3903 = distinct !DILexicalBlock(scope: !3889, file: !2, line: 1320, column: 47)
!3904 = !DILocalVariable(name: "n", scope: !3902, file: !2, line: 1323, type: !128)
!3905 = !DILocalVariable(name: "n", scope: !3906, file: !2, line: 1338, type: !128)
!3906 = distinct !DILexicalBlock(scope: !3903, file: !2, line: 1337, column: 60)
!3907 = !DILabel(scope: !3880, name: "pop_next", file: !2, line: 1366)
!3908 = !DILocation(line: 1116, column: 34, scope: !3836)
!3909 = !DILocation(line: 1116, column: 54, scope: !3836)
!3910 = !DILocation(line: 1118, column: 5, scope: !3836)
!3911 = !DILocation(line: 1118, column: 10, scope: !3836)
!3912 = !DILocation(line: 1119, column: 5, scope: !3836)
!3913 = !DILocation(line: 1119, column: 10, scope: !3836)
!3914 = !DILocation(line: 1120, column: 5, scope: !3836)
!3915 = !DILocation(line: 1120, column: 14, scope: !3836)
!3916 = !DILocation(line: 1121, column: 5, scope: !3836)
!3917 = !DILocation(line: 1121, column: 12, scope: !3836)
!3918 = !DILocation(line: 1122, column: 5, scope: !3836)
!3919 = !DILocation(line: 1122, column: 12, scope: !3836)
!3920 = !DILocation(line: 1122, column: 28, scope: !3836)
!3921 = !DILocation(line: 1122, column: 34, scope: !3836)
!3922 = !DILocation(line: 1123, column: 5, scope: !3836)
!3923 = !DILocation(line: 1123, column: 10, scope: !3836)
!3924 = !DILocation(line: 1123, column: 25, scope: !3836)
!3925 = !DILocation(line: 1123, column: 31, scope: !3836)
!3926 = !DILocation(line: 1124, column: 5, scope: !3836)
!3927 = !DILocation(line: 1124, column: 9, scope: !3836)
!3928 = !DILocation(line: 1124, column: 25, scope: !3836)
!3929 = !DILocation(line: 1124, column: 31, scope: !3836)
!3930 = !DILocation(line: 1128, column: 5, scope: !3836)
!3931 = !DILocation(line: 1128, column: 17, scope: !3836)
!3932 = !DILocation(line: 1129, column: 9, scope: !3836)
!3933 = !DILocation(line: 1131, column: 5, scope: !3836)
!3934 = !DILocation(line: 1132, column: 5, scope: !3836)
!3935 = !DILocation(line: 1133, column: 5, scope: !3836)
!3936 = !DILocation(line: 1142, column: 9, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3836, file: !2, line: 1142, column: 9)
!3938 = !DILocation(line: 1142, column: 9, scope: !3836)
!3939 = !DILocation(line: 1143, column: 2, scope: !3937)
!3940 = !DILocation(line: 1162, column: 9, scope: !3836)
!3941 = !DILocation(line: 1164, column: 5, scope: !3836)
!3942 = !DILocation(line: 1165, column: 10, scope: !3881)
!3943 = !DILocation(line: 1165, column: 2, scope: !3881)
!3944 = !DILocation(line: 1167, column: 6, scope: !3879)
!3945 = !DILocation(line: 1167, column: 12, scope: !3879)
!3946 = !DILocation(line: 1167, column: 18, scope: !3879)
!3947 = !DILocation(line: 1168, column: 12, scope: !3879)
!3948 = !DILocation(line: 1168, column: 10, scope: !3879)
!3949 = !DILocation(line: 1170, column: 26, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3879, file: !2, line: 1170, column: 10)
!3951 = !DILocation(line: 1170, column: 30, scope: !3950)
!3952 = !DILocation(line: 1170, column: 10, scope: !3950)
!3953 = !DILocation(line: 1170, column: 10, scope: !3879)
!3954 = !DILocation(line: 1172, column: 21, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !2, line: 1172, column: 21)
!3956 = distinct !DILexicalBlock(scope: !3950, file: !2, line: 1170, column: 36)
!3957 = !DILocation(line: 1172, column: 35, scope: !3955)
!3958 = !DILocation(line: 1172, column: 38, scope: !3955)
!3959 = !DILocation(line: 1172, column: 21, scope: !3956)
!3960 = !DILocation(line: 1173, column: 43, scope: !3955)
!3961 = !DILocation(line: 1173, column: 21, scope: !3955)
!3962 = !DILocation(line: 1173, column: 27, scope: !3955)
!3963 = !DILocation(line: 1173, column: 40, scope: !3955)
!3964 = !DILocation(line: 1174, column: 3, scope: !3956)
!3965 = !DILocation(line: 1176, column: 13, scope: !3879)
!3966 = !DILocation(line: 1176, column: 11, scope: !3879)
!3967 = !DILocation(line: 1177, column: 13, scope: !3879)
!3968 = !DILocation(line: 1177, column: 11, scope: !3879)
!3969 = !DILocation(line: 1180, column: 10, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3879, file: !2, line: 1180, column: 10)
!3971 = !DILocation(line: 1180, column: 28, scope: !3970)
!3972 = !DILocation(line: 1180, column: 50, scope: !3970)
!3973 = !DILocation(line: 1181, column: 3, scope: !3970)
!3974 = !DILocation(line: 1181, column: 21, scope: !3970)
!3975 = !DILocation(line: 1180, column: 10, scope: !3879)
!3976 = !DILocation(line: 1182, column: 7, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !2, line: 1182, column: 7)
!3978 = distinct !DILexicalBlock(scope: !3970, file: !2, line: 1181, column: 44)
!3979 = !DILocation(line: 1182, column: 12, scope: !3977)
!3980 = !DILocation(line: 1182, column: 7, scope: !3978)
!3981 = !DILocation(line: 1183, column: 11, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !2, line: 1182, column: 30)
!3983 = !DILocation(line: 1183, column: 9, scope: !3982)
!3984 = !DILocation(line: 1185, column: 7, scope: !3982)
!3985 = !DILocation(line: 1185, column: 7, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !2, line: 1185, column: 7)
!3987 = distinct !DILexicalBlock(scope: !3982, file: !2, line: 1185, column: 7)
!3988 = !DILocation(line: 1185, column: 7, scope: !3987)
!3989 = !DILocation(line: 1185, column: 7, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3986, file: !2, line: 1185, column: 7)
!3991 = !DILocation(line: 1186, column: 19, scope: !3982)
!3992 = !DILocation(line: 1186, column: 21, scope: !3982)
!3993 = !DILocation(line: 1186, column: 43, scope: !3982)
!3994 = !DILocation(line: 1186, column: 7, scope: !3982)
!3995 = !DILocation(line: 1186, column: 16, scope: !3982)
!3996 = !DILocation(line: 1187, column: 7, scope: !3982)
!3997 = !DILocation(line: 1187, column: 16, scope: !3982)
!3998 = !DILocation(line: 1188, column: 3, scope: !3982)
!3999 = !DILocation(line: 1189, column: 3, scope: !3978)
!4000 = !DILocation(line: 1192, column: 14, scope: !3879)
!4001 = !DILocation(line: 1192, column: 6, scope: !3879)
!4002 = !DILocation(line: 1195, column: 15, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3879, file: !2, line: 1192, column: 33)
!4004 = !DILocation(line: 1195, column: 20, scope: !4003)
!4005 = !DILocation(line: 1195, column: 40, scope: !4003)
!4006 = !DILocation(line: 1195, column: 3, scope: !4003)
!4007 = !DILocation(line: 1195, column: 12, scope: !4003)
!4008 = !DILocation(line: 1196, column: 3, scope: !4003)
!4009 = !DILocation(line: 1199, column: 15, scope: !4003)
!4010 = !DILocation(line: 1199, column: 22, scope: !4003)
!4011 = !DILocation(line: 1199, column: 20, scope: !4003)
!4012 = !DILocation(line: 1199, column: 41, scope: !4003)
!4013 = !DILocation(line: 1199, column: 3, scope: !4003)
!4014 = !DILocation(line: 1199, column: 12, scope: !4003)
!4015 = !DILocation(line: 1200, column: 15, scope: !4003)
!4016 = !DILocation(line: 1200, column: 20, scope: !4003)
!4017 = !DILocation(line: 1200, column: 44, scope: !4003)
!4018 = !DILocation(line: 1200, column: 42, scope: !4003)
!4019 = !DILocation(line: 1200, column: 3, scope: !4003)
!4020 = !DILocation(line: 1200, column: 12, scope: !4003)
!4021 = !DILocation(line: 1201, column: 3, scope: !4003)
!4022 = !DILocation(line: 1203, column: 3, scope: !4003)
!4023 = !DILocation(line: 1203, column: 3, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4003, file: !2, line: 1203, column: 3)
!4025 = !DILocation(line: 1203, column: 3, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4024, file: !2, line: 1203, column: 3)
!4027 = !DILocation(line: 1203, column: 3, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4026, file: !2, line: 1203, column: 3)
!4029 = !DILocation(line: 1203, column: 3, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4028, file: !2, line: 1203, column: 3)
!4031 = !DILocation(line: 1203, column: 3, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !2, line: 1203, column: 3)
!4033 = distinct !DILexicalBlock(scope: !4030, file: !2, line: 1203, column: 3)
!4034 = !DILocation(line: 1203, column: 3, scope: !4033)
!4035 = !DILocation(line: 1203, column: 3, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4032, file: !2, line: 1203, column: 3)
!4037 = !DILocation(line: 1205, column: 15, scope: !4003)
!4038 = !DILocation(line: 1205, column: 22, scope: !4003)
!4039 = !DILocation(line: 1205, column: 20, scope: !4003)
!4040 = !DILocation(line: 1205, column: 41, scope: !4003)
!4041 = !DILocation(line: 1205, column: 3, scope: !4003)
!4042 = !DILocation(line: 1205, column: 12, scope: !4003)
!4043 = !DILocation(line: 1206, column: 15, scope: !4003)
!4044 = !DILocation(line: 1206, column: 20, scope: !4003)
!4045 = !DILocation(line: 1206, column: 41, scope: !4003)
!4046 = !DILocation(line: 1206, column: 3, scope: !4003)
!4047 = !DILocation(line: 1206, column: 12, scope: !4003)
!4048 = !DILocation(line: 1207, column: 3, scope: !4003)
!4049 = !DILocation(line: 1210, column: 10, scope: !3879)
!4050 = !DILocation(line: 1211, column: 11, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !3879, file: !2, line: 1211, column: 10)
!4052 = !DILocation(line: 1211, column: 10, scope: !3879)
!4053 = !DILocation(line: 1212, column: 3, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4051, file: !2, line: 1211, column: 27)
!4055 = !DILocation(line: 1212, column: 3, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !2, line: 1212, column: 3)
!4057 = distinct !DILexicalBlock(scope: !4054, file: !2, line: 1212, column: 3)
!4058 = !DILocation(line: 1212, column: 3, scope: !4057)
!4059 = !DILocation(line: 1212, column: 3, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4056, file: !2, line: 1212, column: 3)
!4061 = !DILocation(line: 1212, column: 3, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !2, line: 1212, column: 3)
!4063 = !DILocation(line: 1212, column: 3, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4062, file: !2, line: 1212, column: 3)
!4065 = !DILocation(line: 1212, column: 3, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4064, file: !2, line: 1212, column: 3)
!4067 = !DILocation(line: 1213, column: 6, scope: !4054)
!4068 = !DILocation(line: 1214, column: 12, scope: !3879)
!4069 = !DILocation(line: 1214, column: 10, scope: !3879)
!4070 = !DILocation(line: 1215, column: 6, scope: !3879)
!4071 = !DILocation(line: 1216, column: 2, scope: !3880)
!4072 = !DILocation(line: 1218, column: 6, scope: !3886)
!4073 = !DILocation(line: 1218, column: 12, scope: !3886)
!4074 = !DILocation(line: 1219, column: 12, scope: !3886)
!4075 = !DILocation(line: 1219, column: 10, scope: !3886)
!4076 = !DILocation(line: 1222, column: 26, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !3886, file: !2, line: 1222, column: 10)
!4078 = !DILocation(line: 1222, column: 30, scope: !4077)
!4079 = !DILocation(line: 1222, column: 10, scope: !4077)
!4080 = !DILocation(line: 1222, column: 10, scope: !3886)
!4081 = !DILocation(line: 1224, column: 21, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !2, line: 1224, column: 21)
!4083 = distinct !DILexicalBlock(scope: !4077, file: !2, line: 1222, column: 36)
!4084 = !DILocation(line: 1224, column: 28, scope: !4082)
!4085 = !DILocation(line: 1224, column: 25, scope: !4082)
!4086 = !DILocation(line: 1224, column: 48, scope: !4082)
!4087 = !DILocation(line: 1225, column: 22, scope: !4082)
!4088 = !DILocation(line: 1225, column: 36, scope: !4082)
!4089 = !DILocation(line: 1225, column: 39, scope: !4082)
!4090 = !DILocation(line: 1224, column: 21, scope: !4083)
!4091 = !DILocation(line: 1226, column: 43, scope: !4082)
!4092 = !DILocation(line: 1226, column: 21, scope: !4082)
!4093 = !DILocation(line: 1226, column: 27, scope: !4082)
!4094 = !DILocation(line: 1226, column: 40, scope: !4082)
!4095 = !DILocation(line: 1227, column: 3, scope: !4083)
!4096 = !DILocation(line: 1229, column: 13, scope: !3886)
!4097 = !DILocation(line: 1229, column: 12, scope: !3886)
!4098 = !DILocation(line: 1229, column: 10, scope: !3886)
!4099 = !DILocation(line: 1232, column: 10, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !3886, file: !2, line: 1232, column: 10)
!4101 = !DILocation(line: 1232, column: 27, scope: !4100)
!4102 = !DILocation(line: 1232, column: 10, scope: !3886)
!4103 = !DILocation(line: 1233, column: 7, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !2, line: 1233, column: 7)
!4105 = distinct !DILexicalBlock(scope: !4100, file: !2, line: 1232, column: 50)
!4106 = !DILocation(line: 1233, column: 24, scope: !4104)
!4107 = !DILocation(line: 1233, column: 7, scope: !4105)
!4108 = !DILocation(line: 1234, column: 11, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4104, file: !2, line: 1233, column: 42)
!4110 = !DILocation(line: 1234, column: 9, scope: !4109)
!4111 = !DILocation(line: 1236, column: 7, scope: !4109)
!4112 = !DILocation(line: 1236, column: 7, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !2, line: 1236, column: 7)
!4114 = distinct !DILexicalBlock(scope: !4109, file: !2, line: 1236, column: 7)
!4115 = !DILocation(line: 1236, column: 7, scope: !4114)
!4116 = !DILocation(line: 1236, column: 7, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4113, file: !2, line: 1236, column: 7)
!4118 = !DILocation(line: 1237, column: 15, scope: !4109)
!4119 = !DILocation(line: 1237, column: 17, scope: !4109)
!4120 = !DILocation(line: 1237, column: 39, scope: !4109)
!4121 = !DILocation(line: 1237, column: 8, scope: !4109)
!4122 = !DILocation(line: 1237, column: 12, scope: !4109)
!4123 = !DILocation(line: 1238, column: 3, scope: !4109)
!4124 = !DILocation(line: 1239, column: 3, scope: !4105)
!4125 = !DILocation(line: 1243, column: 14, scope: !3886)
!4126 = !DILocation(line: 1243, column: 20, scope: !3886)
!4127 = !DILocation(line: 1243, column: 18, scope: !3886)
!4128 = !DILocation(line: 1243, column: 38, scope: !3886)
!4129 = !DILocation(line: 1243, column: 7, scope: !3886)
!4130 = !DILocation(line: 1243, column: 11, scope: !3886)
!4131 = !DILocation(line: 1246, column: 14, scope: !3886)
!4132 = !DILocation(line: 1246, column: 18, scope: !3886)
!4133 = !DILocation(line: 1246, column: 6, scope: !3886)
!4134 = !DILocation(line: 1248, column: 3, scope: !3888)
!4135 = !DILocation(line: 1248, column: 7, scope: !3888)
!4136 = !DILocation(line: 1248, column: 15, scope: !3888)
!4137 = !DILocation(line: 1252, column: 10, scope: !3888)
!4138 = !DILocation(line: 1252, column: 16, scope: !3888)
!4139 = !DILocation(line: 1252, column: 7, scope: !3888)
!4140 = !DILocation(line: 1253, column: 3, scope: !3888)
!4141 = !DILocation(line: 1253, column: 15, scope: !3888)
!4142 = !DILocation(line: 1253, column: 18, scope: !3888)
!4143 = !DILocation(line: 1254, column: 14, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !3888, file: !2, line: 1253, column: 23)
!4145 = !DILocation(line: 1254, column: 13, scope: !4144)
!4146 = !DILocation(line: 1254, column: 11, scope: !4144)
!4147 = !DILocation(line: 1255, column: 12, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4144, file: !2, line: 1255, column: 11)
!4149 = !DILocation(line: 1255, column: 11, scope: !4144)
!4150 = !DILocation(line: 1256, column: 4, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4148, file: !2, line: 1255, column: 27)
!4152 = !DILocation(line: 1256, column: 4, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !2, line: 1256, column: 4)
!4154 = distinct !DILexicalBlock(scope: !4151, file: !2, line: 1256, column: 4)
!4155 = !DILocation(line: 1256, column: 4, scope: !4154)
!4156 = !DILocation(line: 1256, column: 4, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4153, file: !2, line: 1256, column: 4)
!4158 = !DILocation(line: 1256, column: 4, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4154, file: !2, line: 1256, column: 4)
!4160 = !DILocation(line: 1256, column: 4, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4159, file: !2, line: 1256, column: 4)
!4162 = !DILocation(line: 1256, column: 4, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4161, file: !2, line: 1256, column: 4)
!4164 = !DILocation(line: 1257, column: 7, scope: !4151)
!4165 = distinct !{!4165, !4140, !4166, !1882}
!4166 = !DILocation(line: 1258, column: 3, scope: !3888)
!4167 = !DILocation(line: 1260, column: 6, scope: !3889)
!4168 = !DILocation(line: 1262, column: 3, scope: !3891)
!4169 = !DILocation(line: 1262, column: 16, scope: !3891)
!4170 = !DILocation(line: 1262, column: 39, scope: !3891)
!4171 = !DILocation(line: 1263, column: 3, scope: !3891)
!4172 = !DILocation(line: 1263, column: 12, scope: !3891)
!4173 = !DILocation(line: 1263, column: 39, scope: !3891)
!4174 = !DILocation(line: 1263, column: 45, scope: !3891)
!4175 = !DILocation(line: 1263, column: 37, scope: !3891)
!4176 = !DILocation(line: 1264, column: 8, scope: !3891)
!4177 = !DILocation(line: 1264, column: 6, scope: !3891)
!4178 = !DILocation(line: 1265, column: 27, scope: !3891)
!4179 = !DILocation(line: 1265, column: 25, scope: !3891)
!4180 = !DILocation(line: 1265, column: 32, scope: !3891)
!4181 = !DILocation(line: 1265, column: 30, scope: !3891)
!4182 = !DILocation(line: 1265, column: 10, scope: !3891)
!4183 = !DILocation(line: 1265, column: 7, scope: !3891)
!4184 = !DILocation(line: 1266, column: 27, scope: !3891)
!4185 = !DILocation(line: 1266, column: 25, scope: !3891)
!4186 = !DILocation(line: 1266, column: 7, scope: !3891)
!4187 = !DILocation(line: 1267, column: 3, scope: !3891)
!4188 = !DILocation(line: 1267, column: 16, scope: !3891)
!4189 = !DILocation(line: 1267, column: 19, scope: !3891)
!4190 = !DILocation(line: 1268, column: 17, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !3891, file: !2, line: 1267, column: 24)
!4192 = !DILocation(line: 1268, column: 13, scope: !4191)
!4193 = !DILocation(line: 1268, column: 11, scope: !4191)
!4194 = !DILocation(line: 1269, column: 12, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4191, file: !2, line: 1269, column: 11)
!4196 = !DILocation(line: 1269, column: 11, scope: !4191)
!4197 = !DILocation(line: 1270, column: 4, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4195, file: !2, line: 1269, column: 27)
!4199 = !DILocation(line: 1270, column: 4, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !2, line: 1270, column: 4)
!4201 = distinct !DILexicalBlock(scope: !4198, file: !2, line: 1270, column: 4)
!4202 = !DILocation(line: 1270, column: 4, scope: !4201)
!4203 = !DILocation(line: 1270, column: 4, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4200, file: !2, line: 1270, column: 4)
!4205 = !DILocation(line: 1270, column: 4, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4201, file: !2, line: 1270, column: 4)
!4207 = !DILocation(line: 1270, column: 4, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4206, file: !2, line: 1270, column: 4)
!4209 = !DILocation(line: 1270, column: 4, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4208, file: !2, line: 1270, column: 4)
!4211 = !DILocation(line: 1271, column: 7, scope: !4198)
!4212 = distinct !{!4212, !4187, !4213, !1882}
!4213 = !DILocation(line: 1272, column: 3, scope: !3891)
!4214 = !DILocation(line: 1274, column: 6, scope: !3889)
!4215 = !DILocation(line: 1276, column: 3, scope: !3894)
!4216 = !DILocation(line: 1276, column: 14, scope: !3894)
!4217 = !DILocation(line: 1276, column: 33, scope: !3894)
!4218 = !DILocation(line: 1277, column: 3, scope: !3894)
!4219 = !DILocation(line: 1277, column: 9, scope: !3894)
!4220 = !DILocation(line: 1277, column: 20, scope: !3894)
!4221 = !DILocation(line: 1277, column: 24, scope: !3894)
!4222 = !DILocation(line: 1278, column: 3, scope: !3894)
!4223 = !DILocation(line: 1278, column: 8, scope: !3894)
!4224 = !DILocation(line: 1278, column: 21, scope: !3894)
!4225 = !DILocation(line: 1278, column: 25, scope: !3894)
!4226 = !DILocation(line: 1279, column: 3, scope: !3894)
!4227 = !DILocation(line: 1279, column: 8, scope: !3894)
!4228 = !DILocation(line: 1279, column: 19, scope: !3894)
!4229 = !DILocation(line: 1279, column: 23, scope: !3894)
!4230 = !DILocation(line: 1280, column: 3, scope: !3894)
!4231 = !DILocation(line: 1280, column: 10, scope: !3894)
!4232 = !DILocation(line: 1280, column: 17, scope: !3894)
!4233 = !DILocation(line: 1280, column: 21, scope: !3894)
!4234 = !DILocation(line: 1281, column: 3, scope: !3894)
!4235 = !DILocation(line: 1281, column: 8, scope: !3894)
!4236 = !DILocation(line: 1282, column: 3, scope: !3894)
!4237 = !DILocation(line: 1282, column: 9, scope: !3894)
!4238 = !DILocation(line: 1283, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !3894, file: !2, line: 1283, column: 7)
!4240 = !DILocation(line: 1283, column: 18, scope: !4239)
!4241 = !DILocation(line: 1283, column: 16, scope: !4239)
!4242 = !DILocation(line: 1283, column: 29, scope: !4239)
!4243 = !DILocation(line: 1283, column: 7, scope: !3894)
!4244 = !DILocation(line: 1284, column: 11, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4239, file: !2, line: 1283, column: 34)
!4246 = !DILocation(line: 1285, column: 19, scope: !4245)
!4247 = !DILocation(line: 1286, column: 3, scope: !4245)
!4248 = !DILocation(line: 1286, column: 14, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4239, file: !2, line: 1286, column: 14)
!4250 = !DILocation(line: 1286, column: 25, scope: !4249)
!4251 = !DILocation(line: 1286, column: 23, scope: !4249)
!4252 = !DILocation(line: 1286, column: 36, scope: !4249)
!4253 = !DILocation(line: 1286, column: 14, scope: !4239)
!4254 = !DILocation(line: 1287, column: 11, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4249, file: !2, line: 1286, column: 41)
!4256 = !DILocation(line: 1288, column: 19, scope: !4255)
!4257 = !DILocation(line: 1289, column: 3, scope: !4255)
!4258 = !DILocation(line: 1290, column: 19, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4249, file: !2, line: 1289, column: 10)
!4260 = !DILocation(line: 1293, column: 24, scope: !3894)
!4261 = !DILocation(line: 1293, column: 23, scope: !3894)
!4262 = !DILocation(line: 1293, column: 21, scope: !3894)
!4263 = !DILocation(line: 1294, column: 25, scope: !3894)
!4264 = !DILocation(line: 1294, column: 17, scope: !3894)
!4265 = !DILocation(line: 1300, column: 28, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !3894, file: !2, line: 1294, column: 43)
!4267 = !DILocation(line: 1300, column: 32, scope: !4266)
!4268 = !DILocation(line: 1300, column: 49, scope: !4266)
!4269 = !DILocation(line: 1300, column: 25, scope: !4266)
!4270 = !DILocation(line: 1301, column: 21, scope: !4266)
!4271 = !DILocation(line: 1305, column: 25, scope: !4266)
!4272 = !DILocation(line: 1305, column: 29, scope: !4266)
!4273 = !DILocation(line: 1305, column: 23, scope: !4266)
!4274 = !DILocation(line: 1306, column: 27, scope: !4266)
!4275 = !DILocation(line: 1306, column: 25, scope: !4266)
!4276 = !DILocation(line: 1307, column: 28, scope: !4266)
!4277 = !DILocation(line: 1307, column: 32, scope: !4266)
!4278 = !DILocation(line: 1307, column: 55, scope: !4266)
!4279 = !DILocation(line: 1307, column: 25, scope: !4266)
!4280 = !DILocation(line: 1308, column: 21, scope: !4266)
!4281 = !DILocation(line: 1311, column: 7, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !3894, file: !2, line: 1311, column: 7)
!4283 = !DILocation(line: 1311, column: 25, scope: !4282)
!4284 = !DILocation(line: 1311, column: 7, scope: !3894)
!4285 = !DILocation(line: 1312, column: 14, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !2, line: 1311, column: 48)
!4287 = !DILocation(line: 1312, column: 11, scope: !4286)
!4288 = !DILocation(line: 1313, column: 3, scope: !4286)
!4289 = !DILocation(line: 1315, column: 11, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4282, file: !2, line: 1313, column: 10)
!4291 = !DILocation(line: 1318, column: 6, scope: !3889)
!4292 = !DILocation(line: 1320, column: 25, scope: !3889)
!4293 = !DILocation(line: 1320, column: 17, scope: !3889)
!4294 = !DILocation(line: 1322, column: 25, scope: !3902)
!4295 = !DILocation(line: 1322, column: 36, scope: !3902)
!4296 = !DILocation(line: 1322, column: 55, scope: !3902)
!4297 = !DILocation(line: 1323, column: 25, scope: !3902)
!4298 = !DILocation(line: 1323, column: 30, scope: !3902)
!4299 = !DILocation(line: 1323, column: 34, scope: !3902)
!4300 = !DILocation(line: 1323, column: 55, scope: !3902)
!4301 = !DILocation(line: 1325, column: 32, scope: !3902)
!4302 = !DILocation(line: 1325, column: 34, scope: !3902)
!4303 = !DILocation(line: 1325, column: 29, scope: !3902)
!4304 = !DILocation(line: 1326, column: 29, scope: !3902)
!4305 = !DILocation(line: 1327, column: 25, scope: !3902)
!4306 = !DILocation(line: 1327, column: 33, scope: !3902)
!4307 = !DILocation(line: 1328, column: 39, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !3902, file: !2, line: 1327, column: 37)
!4309 = !DILocation(line: 1328, column: 35, scope: !4308)
!4310 = !DILocation(line: 1328, column: 33, scope: !4308)
!4311 = !DILocation(line: 1329, column: 34, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4308, file: !2, line: 1329, column: 33)
!4313 = !DILocation(line: 1329, column: 33, scope: !4308)
!4314 = !DILocation(line: 1330, column: 33, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4312, file: !2, line: 1329, column: 49)
!4316 = !DILocation(line: 1330, column: 33, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !2, line: 1330, column: 33)
!4318 = distinct !DILexicalBlock(scope: !4315, file: !2, line: 1330, column: 33)
!4319 = !DILocation(line: 1330, column: 33, scope: !4318)
!4320 = !DILocation(line: 1330, column: 33, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4317, file: !2, line: 1330, column: 33)
!4322 = !DILocation(line: 1330, column: 33, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !2, line: 1330, column: 33)
!4324 = !DILocation(line: 1330, column: 33, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4323, file: !2, line: 1330, column: 33)
!4326 = !DILocation(line: 1330, column: 33, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4325, file: !2, line: 1330, column: 33)
!4328 = !DILocation(line: 1331, column: 29, scope: !4315)
!4329 = distinct !{!4329, !4305, !4330, !1882}
!4330 = !DILocation(line: 1332, column: 25, scope: !3902)
!4331 = !DILocation(line: 1334, column: 21, scope: !3903)
!4332 = !DILocation(line: 1338, column: 25, scope: !3906)
!4333 = !DILocation(line: 1338, column: 30, scope: !3906)
!4334 = !DILocation(line: 1338, column: 34, scope: !3906)
!4335 = !DILocation(line: 1339, column: 36, scope: !3906)
!4336 = !DILocation(line: 1339, column: 34, scope: !3906)
!4337 = !DILocation(line: 1339, column: 40, scope: !3906)
!4338 = !DILocation(line: 1339, column: 38, scope: !3906)
!4339 = !DILocation(line: 1339, column: 29, scope: !3906)
!4340 = !DILocation(line: 1340, column: 36, scope: !3906)
!4341 = !DILocation(line: 1340, column: 34, scope: !3906)
!4342 = !DILocation(line: 1340, column: 29, scope: !3906)
!4343 = !DILocation(line: 1342, column: 29, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !3906, file: !2, line: 1342, column: 29)
!4345 = !DILocation(line: 1342, column: 31, scope: !4344)
!4346 = !DILocation(line: 1342, column: 29, scope: !3906)
!4347 = !DILocation(line: 1343, column: 29, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4344, file: !2, line: 1342, column: 37)
!4349 = !DILocation(line: 1345, column: 25, scope: !3906)
!4350 = !DILocation(line: 1345, column: 32, scope: !3906)
!4351 = !DILocation(line: 1346, column: 39, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !3906, file: !2, line: 1345, column: 36)
!4353 = !DILocation(line: 1346, column: 35, scope: !4352)
!4354 = !DILocation(line: 1346, column: 33, scope: !4352)
!4355 = !DILocation(line: 1347, column: 34, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4352, file: !2, line: 1347, column: 33)
!4357 = !DILocation(line: 1347, column: 33, scope: !4352)
!4358 = !DILocation(line: 1348, column: 33, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4356, file: !2, line: 1347, column: 49)
!4360 = !DILocation(line: 1348, column: 33, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !2, line: 1348, column: 33)
!4362 = distinct !DILexicalBlock(scope: !4359, file: !2, line: 1348, column: 33)
!4363 = !DILocation(line: 1348, column: 33, scope: !4362)
!4364 = !DILocation(line: 1348, column: 33, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4361, file: !2, line: 1348, column: 33)
!4366 = !DILocation(line: 1348, column: 33, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4362, file: !2, line: 1348, column: 33)
!4368 = !DILocation(line: 1348, column: 33, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4367, file: !2, line: 1348, column: 33)
!4370 = !DILocation(line: 1348, column: 33, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4369, file: !2, line: 1348, column: 33)
!4372 = !DILocation(line: 1349, column: 29, scope: !4359)
!4373 = distinct !{!4373, !4349, !4374, !1882}
!4374 = !DILocation(line: 1350, column: 25, scope: !3906)
!4375 = !DILocation(line: 1351, column: 25, scope: !3906)
!4376 = !DILocation(line: 1352, column: 21, scope: !3903)
!4377 = !DILocation(line: 1354, column: 100, scope: !3903)
!4378 = !DILocation(line: 1354, column: 25, scope: !3903)
!4379 = !DILocation(line: 1357, column: 3, scope: !3889)
!4380 = !DILocation(line: 1360, column: 10, scope: !3889)
!4381 = !DILocation(line: 1360, column: 30, scope: !3889)
!4382 = !DILocation(line: 1360, column: 7, scope: !3889)
!4383 = !DILocation(line: 1361, column: 3, scope: !3889)
!4384 = !DILocation(line: 1364, column: 2, scope: !3880)
!4385 = !DILocation(line: 1364, column: 2, scope: !3886)
!4386 = !DILocation(line: 1366, column: 2, scope: !3880)
!4387 = !DILocation(line: 1367, column: 10, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !3880, file: !2, line: 1367, column: 10)
!4389 = !DILocation(line: 1367, column: 10, scope: !3880)
!4390 = !DILocation(line: 1369, column: 17, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4388, file: !2, line: 1367, column: 29)
!4392 = !DILocation(line: 1369, column: 17, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !2, line: 1369, column: 17)
!4394 = distinct !DILexicalBlock(scope: !4391, file: !2, line: 1369, column: 17)
!4395 = !DILocation(line: 1369, column: 17, scope: !4394)
!4396 = !DILocation(line: 1369, column: 17, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4393, file: !2, line: 1369, column: 17)
!4398 = !DILocation(line: 1371, column: 17, scope: !4391)
!4399 = !DILocation(line: 1371, column: 17, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !2, line: 1371, column: 17)
!4401 = distinct !DILexicalBlock(scope: !4391, file: !2, line: 1371, column: 17)
!4402 = !DILocation(line: 1371, column: 17, scope: !4401)
!4403 = !DILocation(line: 1371, column: 17, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4400, file: !2, line: 1371, column: 17)
!4405 = !DILocation(line: 1371, column: 17, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4404, file: !2, line: 1371, column: 17)
!4407 = !DILocation(line: 1371, column: 17, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !2, line: 1371, column: 17)
!4409 = distinct !DILexicalBlock(scope: !4406, file: !2, line: 1371, column: 17)
!4410 = !DILocation(line: 1371, column: 17, scope: !4409)
!4411 = !DILocation(line: 1371, column: 17, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4408, file: !2, line: 1371, column: 17)
!4413 = !DILocation(line: 1372, column: 39, scope: !4391)
!4414 = !DILocation(line: 1372, column: 17, scope: !4391)
!4415 = !DILocation(line: 1372, column: 23, scope: !4391)
!4416 = !DILocation(line: 1372, column: 35, scope: !4391)
!4417 = !DILocation(line: 1373, column: 37, scope: !4391)
!4418 = !DILocation(line: 1373, column: 17, scope: !4391)
!4419 = !DILocation(line: 1373, column: 23, scope: !4391)
!4420 = !DILocation(line: 1373, column: 33, scope: !4391)
!4421 = !DILocation(line: 1374, column: 44, scope: !4391)
!4422 = !DILocation(line: 1374, column: 17, scope: !4391)
!4423 = !DILocation(line: 1374, column: 23, scope: !4391)
!4424 = !DILocation(line: 1374, column: 40, scope: !4391)
!4425 = !DILocation(line: 1375, column: 42, scope: !4391)
!4426 = !DILocation(line: 1375, column: 17, scope: !4391)
!4427 = !DILocation(line: 1375, column: 23, scope: !4391)
!4428 = !DILocation(line: 1375, column: 38, scope: !4391)
!4429 = !DILocation(line: 1379, column: 47, scope: !4391)
!4430 = !DILocation(line: 1379, column: 17, scope: !4391)
!4431 = !DILocation(line: 1379, column: 23, scope: !4391)
!4432 = !DILocation(line: 1379, column: 43, scope: !4391)
!4433 = !DILocation(line: 1380, column: 41, scope: !4391)
!4434 = !DILocation(line: 1380, column: 17, scope: !4391)
!4435 = !DILocation(line: 1380, column: 23, scope: !4391)
!4436 = !DILocation(line: 1380, column: 37, scope: !4391)
!4437 = !DILocation(line: 1381, column: 46, scope: !4391)
!4438 = !DILocation(line: 1381, column: 17, scope: !4391)
!4439 = !DILocation(line: 1381, column: 23, scope: !4391)
!4440 = !DILocation(line: 1381, column: 42, scope: !4391)
!4441 = !DILocation(line: 1384, column: 24, scope: !4391)
!4442 = !DILocation(line: 1384, column: 30, scope: !4391)
!4443 = !DILocation(line: 1384, column: 36, scope: !4391)
!4444 = !DILocation(line: 1384, column: 28, scope: !4391)
!4445 = !DILocation(line: 1384, column: 17, scope: !4391)
!4446 = !DILocation(line: 1386, column: 12, scope: !3880)
!4447 = !DILocation(line: 1386, column: 10, scope: !3880)
!4448 = !DILocation(line: 1387, column: 6, scope: !3880)
!4449 = !DILocation(line: 1389, column: 76, scope: !3880)
!4450 = !DILocation(line: 1389, column: 6, scope: !3880)
!4451 = !DILocation(line: 1164, column: 5, scope: !3882)
!4452 = distinct !{!4452, !4453, !4454}
!4453 = !DILocation(line: 1164, column: 5, scope: !3883)
!4454 = !DILocation(line: 1391, column: 5, scope: !3883)
!4455 = !DILocation(line: 1392, column: 1, scope: !3836)
!4456 = distinct !DISubprogram(name: "copy_shared_perform_x", scope: !2, file: !2, line: 1398, type: !4457, scopeLine: 1404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!93, !93, !128, !3839, !2130, !2131}
!4459 = !{!4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4491, !4492, !4497, !4502, !4504, !4506, !4511, !4514, !4516, !4517, !4520, !4521, !4523, !4525, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4537, !4540, !4541, !4543, !4544, !4546, !4547, !4549, !4552, !4553, !4564, !4567}
!4460 = !DILocalVariable(name: "obj", arg: 1, scope: !4456, file: !2, line: 1398, type: !93)
!4461 = !DILocalVariable(name: "size", arg: 2, scope: !4456, file: !2, line: 1398, type: !128)
!4462 = !DILocalVariable(name: "info", arg: 3, scope: !4456, file: !2, line: 1398, type: !3839)
!4463 = !DILocalVariable(name: "hpp", arg: 4, scope: !4456, file: !2, line: 1399, type: !2130)
!4464 = !DILocalVariable(name: "off_heap", arg: 5, scope: !4456, file: !2, line: 1399, type: !2131)
!4465 = !DILocalVariable(name: "e", scope: !4456, file: !2, line: 1405, type: !128)
!4466 = !DILocalVariable(name: "sz", scope: !4456, file: !2, line: 1406, type: !61)
!4467 = !DILocalVariable(name: "ptr", scope: !4456, file: !2, line: 1407, type: !92)
!4468 = !DILocalVariable(name: "hp", scope: !4456, file: !2, line: 1408, type: !92)
!4469 = !DILocalVariable(name: "hscan", scope: !4456, file: !2, line: 1409, type: !92)
!4470 = !DILocalVariable(name: "result", scope: !4456, file: !2, line: 1410, type: !93)
!4471 = !DILocalVariable(name: "resp", scope: !4456, file: !2, line: 1411, type: !92)
!4472 = !DILocalVariable(name: "hbot", scope: !4456, file: !2, line: 1412, type: !92)
!4473 = !DILocalVariable(name: "hend", scope: !4456, file: !2, line: 1412, type: !92)
!4474 = !DILocalVariable(name: "remaining", scope: !4456, file: !2, line: 1413, type: !61)
!4475 = !DILocalVariable(name: "lit_purge_ptr", scope: !4456, file: !2, line: 1414, type: !92)
!4476 = !DILocalVariable(name: "lit_purge_sz", scope: !4456, file: !2, line: 1415, type: !128)
!4477 = !DILocalVariable(name: "copy_literals", scope: !4456, file: !2, line: 1416, type: !130)
!4478 = !DILocalVariable(name: "empty_tuple_literal", scope: !4456, file: !2, line: 1421, type: !3868)
!4479 = !DILocalVariable(name: "s", scope: !4456, file: !2, line: 1423, type: !2972)
!4480 = !DILocalVariable(name: "b", scope: !4456, file: !2, line: 1424, type: !2983)
!4481 = !DILocalVariable(name: "b_bitoffs", scope: !4456, file: !2, line: 1424, type: !130)
!4482 = !DILocalVariable(name: "b_offset", scope: !4456, file: !2, line: 1424, type: !130)
!4483 = !DILocalVariable(name: "b_buffer", scope: !4456, file: !2, line: 1424, type: !195)
!4484 = !DILocalVariable(name: "t", scope: !4456, file: !2, line: 1425, type: !1731)
!4485 = !DILocalVariable(name: "head", scope: !4486, file: !2, line: 1463, type: !93)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !2, line: 1462, column: 25)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !2, line: 1461, column: 28)
!4488 = distinct !DILexicalBlock(scope: !4489, file: !2, line: 1460, column: 14)
!4489 = distinct !DILexicalBlock(scope: !4490, file: !2, line: 1460, column: 5)
!4490 = distinct !DILexicalBlock(scope: !4456, file: !2, line: 1460, column: 5)
!4491 = !DILocalVariable(name: "tail", scope: !4486, file: !2, line: 1463, type: !93)
!4492 = !DILocalVariable(name: "bsz", scope: !4493, file: !2, line: 1470, type: !128)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !2, line: 1469, column: 24)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !2, line: 1467, column: 21)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !2, line: 1466, column: 36)
!4496 = distinct !DILexicalBlock(scope: !4486, file: !2, line: 1466, column: 10)
!4497 = !DILocalVariable(name: "saved", scope: !4498, file: !2, line: 1504, type: !93)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !2, line: 1503, column: 48)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !2, line: 1503, column: 7)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !2, line: 1502, column: 51)
!4501 = distinct !DILexicalBlock(scope: !4486, file: !2, line: 1502, column: 10)
!4502 = !DILocalVariable(name: "result", scope: !4503, file: !2, line: 1505, type: !195)
!4503 = distinct !DILexicalBlock(scope: !4498, file: !2, line: 1505, column: 21)
!4504 = !DILocalVariable(name: "hdr", scope: !4505, file: !2, line: 1535, type: !93)
!4505 = distinct !DILexicalBlock(scope: !4487, file: !2, line: 1534, column: 26)
!4506 = !DILocalVariable(name: "bsz", scope: !4507, file: !2, line: 1543, type: !128)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !2, line: 1542, column: 24)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !2, line: 1539, column: 21)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !2, line: 1538, column: 36)
!4510 = distinct !DILexicalBlock(scope: !4505, file: !2, line: 1538, column: 10)
!4511 = !DILocalVariable(name: "arity", scope: !4512, file: !2, line: 1584, type: !130)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1583, column: 28)
!4513 = distinct !DILexicalBlock(scope: !4505, file: !2, line: 1582, column: 38)
!4514 = !DILocalVariable(name: "funp", scope: !4515, file: !2, line: 1599, type: !98)
!4515 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1598, column: 23)
!4516 = !DILocalVariable(name: "eterms", scope: !4515, file: !2, line: 1600, type: !61)
!4517 = !DILocalVariable(name: "mp", scope: !4518, file: !2, line: 1634, type: !242)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2, line: 1633, column: 56)
!4519 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1632, column: 47)
!4520 = !DILocalVariable(name: "n", scope: !4518, file: !2, line: 1635, type: !128)
!4521 = !DILocalVariable(name: "n", scope: !4522, file: !2, line: 1653, type: !128)
!4522 = distinct !DILexicalBlock(scope: !4519, file: !2, line: 1652, column: 60)
!4523 = !DILocalVariable(name: "pb", scope: !4524, file: !2, line: 1669, type: !264)
!4524 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1668, column: 31)
!4525 = !DILocalVariable(name: "sb", scope: !4526, file: !2, line: 1689, type: !251)
!4526 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1688, column: 30)
!4527 = !DILocalVariable(name: "real_bin", scope: !4526, file: !2, line: 1690, type: !93)
!4528 = !DILocalVariable(name: "bit_offset", scope: !4526, file: !2, line: 1691, type: !128)
!4529 = !DILocalVariable(name: "bit_size", scope: !4526, file: !2, line: 1692, type: !128)
!4530 = !DILocalVariable(name: "offset", scope: !4526, file: !2, line: 1693, type: !128)
!4531 = !DILocalVariable(name: "size", scope: !4526, file: !2, line: 1694, type: !516)
!4532 = !DILocalVariable(name: "extra_bytes", scope: !4526, file: !2, line: 1695, type: !128)
!4533 = !DILocalVariable(name: "real_size", scope: !4526, file: !2, line: 1696, type: !128)
!4534 = !DILocalVariable(name: "res", scope: !4535, file: !2, line: 1707, type: !251)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2, line: 1706, column: 25)
!4536 = distinct !DILexicalBlock(scope: !4526, file: !2, line: 1706, column: 7)
!4537 = !DILocalVariable(name: "from", scope: !4538, file: !2, line: 1737, type: !290)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2, line: 1736, column: 48)
!4539 = distinct !DILexicalBlock(scope: !4526, file: !2, line: 1736, column: 7)
!4540 = !DILocalVariable(name: "to", scope: !4538, file: !2, line: 1738, type: !290)
!4541 = !DILocalVariable(name: "from", scope: !4542, file: !2, line: 1744, type: !264)
!4542 = distinct !DILexicalBlock(scope: !4539, file: !2, line: 1743, column: 10)
!4543 = !DILocalVariable(name: "to", scope: !4542, file: !2, line: 1745, type: !264)
!4544 = !DILocalVariable(name: "etp", scope: !4545, file: !2, line: 1767, type: !298)
!4545 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1766, column: 6)
!4546 = !DILabel(scope: !4513, name: "off_heap_node_container_common", file: !2, line: 1775)
!4547 = !DILocalVariable(name: "ohhp", scope: !4548, file: !2, line: 1777, type: !228)
!4548 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1776, column: 6)
!4549 = !DILocalVariable(name: "mreft", scope: !4550, file: !2, line: 1792, type: !1666)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !2, line: 1791, column: 45)
!4551 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1791, column: 7)
!4552 = !DILabel(scope: !4487, name: "cleanup_next", file: !2, line: 1811)
!4553 = !DILocalVariable(name: "funp", scope: !4554, file: !2, line: 1830, type: !98)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2, line: 1829, column: 21)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2, line: 1824, column: 39)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !2, line: 1823, column: 61)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2, line: 1823, column: 18)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2, line: 1819, column: 11)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2, line: 1818, column: 23)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2, line: 1818, column: 7)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2, line: 1816, column: 15)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !2, line: 1816, column: 6)
!4563 = distinct !DILexicalBlock(scope: !4487, file: !2, line: 1816, column: 6)
!4564 = !DILocalVariable(name: "mp", scope: !4565, file: !2, line: 1838, type: !242)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !2, line: 1837, column: 68)
!4566 = distinct !DILexicalBlock(scope: !4555, file: !2, line: 1836, column: 62)
!4567 = !DILabel(scope: !4456, name: "all_clean", file: !2, line: 1889)
!4568 = !DILocation(line: 1398, column: 34, scope: !4456)
!4569 = !DILocation(line: 1398, column: 44, scope: !4456)
!4570 = !DILocation(line: 1398, column: 65, scope: !4456)
!4571 = !DILocation(line: 1399, column: 36, scope: !4456)
!4572 = !DILocation(line: 1399, column: 53, scope: !4456)
!4573 = !DILocation(line: 1405, column: 5, scope: !4456)
!4574 = !DILocation(line: 1405, column: 10, scope: !4456)
!4575 = !DILocation(line: 1406, column: 5, scope: !4456)
!4576 = !DILocation(line: 1406, column: 14, scope: !4456)
!4577 = !DILocation(line: 1407, column: 5, scope: !4456)
!4578 = !DILocation(line: 1407, column: 12, scope: !4456)
!4579 = !DILocation(line: 1408, column: 5, scope: !4456)
!4580 = !DILocation(line: 1408, column: 12, scope: !4456)
!4581 = !DILocation(line: 1409, column: 5, scope: !4456)
!4582 = !DILocation(line: 1409, column: 12, scope: !4456)
!4583 = !DILocation(line: 1410, column: 5, scope: !4456)
!4584 = !DILocation(line: 1410, column: 11, scope: !4456)
!4585 = !DILocation(line: 1411, column: 5, scope: !4456)
!4586 = !DILocation(line: 1411, column: 12, scope: !4456)
!4587 = !DILocation(line: 1412, column: 5, scope: !4456)
!4588 = !DILocation(line: 1412, column: 12, scope: !4456)
!4589 = !DILocation(line: 1412, column: 19, scope: !4456)
!4590 = !DILocation(line: 1413, column: 5, scope: !4456)
!4591 = !DILocation(line: 1413, column: 14, scope: !4456)
!4592 = !DILocation(line: 1414, column: 5, scope: !4456)
!4593 = !DILocation(line: 1414, column: 12, scope: !4456)
!4594 = !DILocation(line: 1414, column: 28, scope: !4456)
!4595 = !DILocation(line: 1414, column: 34, scope: !4456)
!4596 = !DILocation(line: 1415, column: 5, scope: !4456)
!4597 = !DILocation(line: 1415, column: 10, scope: !4456)
!4598 = !DILocation(line: 1415, column: 25, scope: !4456)
!4599 = !DILocation(line: 1415, column: 31, scope: !4456)
!4600 = !DILocation(line: 1416, column: 5, scope: !4456)
!4601 = !DILocation(line: 1416, column: 9, scope: !4456)
!4602 = !DILocation(line: 1416, column: 25, scope: !4456)
!4603 = !DILocation(line: 1416, column: 31, scope: !4456)
!4604 = !DILocation(line: 1421, column: 5, scope: !4456)
!4605 = !DILocation(line: 1421, column: 17, scope: !4456)
!4606 = !DILocation(line: 1422, column: 9, scope: !4456)
!4607 = !DILocation(line: 1423, column: 5, scope: !4456)
!4608 = !DILocation(line: 1424, column: 5, scope: !4456)
!4609 = !DILocation(line: 1425, column: 5, scope: !4456)
!4610 = !DILocation(line: 1434, column: 9, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4456, file: !2, line: 1434, column: 9)
!4612 = !DILocation(line: 1434, column: 9, scope: !4456)
!4613 = !DILocation(line: 1435, column: 9, scope: !4611)
!4614 = !DILocation(line: 1435, column: 2, scope: !4611)
!4615 = !DILocation(line: 1444, column: 19, scope: !4456)
!4616 = !DILocation(line: 1444, column: 18, scope: !4456)
!4617 = !DILocation(line: 1444, column: 16, scope: !4456)
!4618 = !DILocation(line: 1444, column: 11, scope: !4456)
!4619 = !DILocation(line: 1445, column: 20, scope: !4456)
!4620 = !DILocation(line: 1445, column: 25, scope: !4456)
!4621 = !DILocation(line: 1445, column: 23, scope: !4456)
!4622 = !DILocation(line: 1445, column: 18, scope: !4456)
!4623 = !DILocation(line: 1445, column: 11, scope: !4456)
!4624 = !DILocation(line: 1458, column: 10, scope: !4456)
!4625 = !DILocation(line: 1459, column: 15, scope: !4456)
!4626 = !DILocation(line: 1460, column: 5, scope: !4456)
!4627 = !DILocation(line: 1461, column: 10, scope: !4488)
!4628 = !DILocation(line: 1461, column: 2, scope: !4488)
!4629 = !DILocation(line: 1463, column: 6, scope: !4486)
!4630 = !DILocation(line: 1463, column: 12, scope: !4486)
!4631 = !DILocation(line: 1463, column: 18, scope: !4486)
!4632 = !DILocation(line: 1464, column: 12, scope: !4486)
!4633 = !DILocation(line: 1464, column: 10, scope: !4486)
!4634 = !DILocation(line: 1466, column: 26, scope: !4496)
!4635 = !DILocation(line: 1466, column: 30, scope: !4496)
!4636 = !DILocation(line: 1466, column: 10, scope: !4496)
!4637 = !DILocation(line: 1466, column: 10, scope: !4486)
!4638 = !DILocation(line: 1467, column: 23, scope: !4494)
!4639 = !DILocation(line: 1467, column: 37, scope: !4494)
!4640 = !DILocation(line: 1467, column: 40, scope: !4494)
!4641 = !DILocation(line: 1467, column: 21, scope: !4495)
!4642 = !DILocation(line: 1468, column: 29, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4494, file: !2, line: 1467, column: 69)
!4644 = !DILocation(line: 1468, column: 22, scope: !4643)
!4645 = !DILocation(line: 1468, column: 27, scope: !4643)
!4646 = !DILocation(line: 1469, column: 17, scope: !4643)
!4647 = !DILocation(line: 1470, column: 21, scope: !4493)
!4648 = !DILocation(line: 1470, column: 26, scope: !4493)
!4649 = !DILocation(line: 1471, column: 43, scope: !4493)
!4650 = !DILocation(line: 1471, column: 48, scope: !4493)
!4651 = !DILocation(line: 1471, column: 55, scope: !4493)
!4652 = !DILocation(line: 1471, column: 53, scope: !4493)
!4653 = !DILocation(line: 1471, column: 64, scope: !4493)
!4654 = !DILocation(line: 1471, column: 29, scope: !4493)
!4655 = !DILocation(line: 1471, column: 22, scope: !4493)
!4656 = !DILocation(line: 1471, column: 27, scope: !4493)
!4657 = !DILocation(line: 1476, column: 29, scope: !4493)
!4658 = !DILocation(line: 1476, column: 26, scope: !4493)
!4659 = !DILocation(line: 1477, column: 17, scope: !4494)
!4660 = !DILocation(line: 1478, column: 3, scope: !4495)
!4661 = !DILocation(line: 1480, column: 13, scope: !4486)
!4662 = !DILocation(line: 1480, column: 11, scope: !4486)
!4663 = !DILocation(line: 1481, column: 13, scope: !4486)
!4664 = !DILocation(line: 1481, column: 11, scope: !4486)
!4665 = !DILocation(line: 1483, column: 10, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4486, file: !2, line: 1483, column: 10)
!4667 = !DILocation(line: 1483, column: 15, scope: !4666)
!4668 = !DILocation(line: 1483, column: 10, scope: !4486)
!4669 = !DILocation(line: 1484, column: 7, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4666, file: !2, line: 1483, column: 33)
!4671 = !DILocation(line: 1484, column: 12, scope: !4670)
!4672 = !DILocation(line: 1484, column: 5, scope: !4670)
!4673 = !DILocation(line: 1486, column: 7, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4670, file: !2, line: 1486, column: 7)
!4675 = !DILocation(line: 1486, column: 25, scope: !4674)
!4676 = !DILocation(line: 1486, column: 7, scope: !4670)
!4677 = !DILocation(line: 1487, column: 15, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !2, line: 1486, column: 51)
!4679 = !DILocation(line: 1487, column: 8, scope: !4678)
!4680 = !DILocation(line: 1487, column: 13, scope: !4678)
!4681 = !DILocation(line: 1488, column: 7, scope: !4678)
!4682 = !DILocation(line: 1493, column: 19, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4674, file: !2, line: 1492, column: 8)
!4684 = !DILocation(line: 1493, column: 26, scope: !4683)
!4685 = !DILocation(line: 1493, column: 24, scope: !4683)
!4686 = !DILocation(line: 1493, column: 45, scope: !4683)
!4687 = !DILocation(line: 1493, column: 7, scope: !4683)
!4688 = !DILocation(line: 1493, column: 16, scope: !4683)
!4689 = !DILocation(line: 1494, column: 14, scope: !4683)
!4690 = !DILocation(line: 1494, column: 12, scope: !4683)
!4691 = !DILocation(line: 1495, column: 14, scope: !4683)
!4692 = !DILocation(line: 1495, column: 12, scope: !4683)
!4693 = !DILocation(line: 1496, column: 15, scope: !4683)
!4694 = !DILocation(line: 1496, column: 11, scope: !4683)
!4695 = !DILocation(line: 1498, column: 7, scope: !4683)
!4696 = !DILocation(line: 1500, column: 6, scope: !4670)
!4697 = !DILocation(line: 1502, column: 10, scope: !4501)
!4698 = !DILocation(line: 1502, column: 28, scope: !4501)
!4699 = !DILocation(line: 1502, column: 10, scope: !4486)
!4700 = !DILocation(line: 1503, column: 7, scope: !4499)
!4701 = !DILocation(line: 1503, column: 25, scope: !4499)
!4702 = !DILocation(line: 1503, column: 7, scope: !4500)
!4703 = !DILocation(line: 1504, column: 7, scope: !4498)
!4704 = !DILocation(line: 1504, column: 13, scope: !4498)
!4705 = !DILocation(line: 1505, column: 21, scope: !4498)
!4706 = !DILocation(line: 1505, column: 21, scope: !4503)
!4707 = !DILocation(line: 1505, column: 21, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4503, file: !2, line: 1505, column: 21)
!4709 = !DILocation(line: 1505, column: 21, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4708, file: !2, line: 1505, column: 21)
!4711 = !DILocation(line: 1507, column: 26, scope: !4498)
!4712 = !DILocation(line: 1507, column: 31, scope: !4498)
!4713 = !DILocation(line: 1507, column: 55, scope: !4498)
!4714 = !DILocation(line: 1507, column: 53, scope: !4498)
!4715 = !DILocation(line: 1507, column: 23, scope: !4498)
!4716 = !DILocation(line: 1507, column: 7, scope: !4498)
!4717 = !DILocation(line: 1507, column: 16, scope: !4498)
!4718 = !DILocation(line: 1508, column: 26, scope: !4498)
!4719 = !DILocation(line: 1508, column: 31, scope: !4498)
!4720 = !DILocation(line: 1508, column: 53, scope: !4498)
!4721 = !DILocation(line: 1508, column: 23, scope: !4498)
!4722 = !DILocation(line: 1508, column: 7, scope: !4498)
!4723 = !DILocation(line: 1508, column: 16, scope: !4498)
!4724 = !DILocation(line: 1509, column: 3, scope: !4499)
!4725 = !DILocation(line: 1509, column: 3, scope: !4498)
!4726 = !DILocation(line: 1511, column: 26, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4499, file: !2, line: 1509, column: 10)
!4728 = !DILocation(line: 1511, column: 31, scope: !4727)
!4729 = !DILocation(line: 1511, column: 53, scope: !4727)
!4730 = !DILocation(line: 1511, column: 23, scope: !4727)
!4731 = !DILocation(line: 1511, column: 7, scope: !4727)
!4732 = !DILocation(line: 1511, column: 16, scope: !4727)
!4733 = !DILocation(line: 1513, column: 6, scope: !4500)
!4734 = !DILocation(line: 1513, column: 17, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4501, file: !2, line: 1513, column: 17)
!4736 = !DILocation(line: 1513, column: 35, scope: !4735)
!4737 = !DILocation(line: 1513, column: 17, scope: !4501)
!4738 = !DILocation(line: 1515, column: 22, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !2, line: 1513, column: 58)
!4740 = !DILocation(line: 1515, column: 27, scope: !4739)
!4741 = !DILocation(line: 1515, column: 51, scope: !4739)
!4742 = !DILocation(line: 1515, column: 49, scope: !4739)
!4743 = !DILocation(line: 1515, column: 19, scope: !4739)
!4744 = !DILocation(line: 1515, column: 3, scope: !4739)
!4745 = !DILocation(line: 1515, column: 12, scope: !4739)
!4746 = !DILocation(line: 1516, column: 22, scope: !4739)
!4747 = !DILocation(line: 1516, column: 29, scope: !4739)
!4748 = !DILocation(line: 1516, column: 27, scope: !4739)
!4749 = !DILocation(line: 1516, column: 48, scope: !4739)
!4750 = !DILocation(line: 1516, column: 19, scope: !4739)
!4751 = !DILocation(line: 1516, column: 3, scope: !4739)
!4752 = !DILocation(line: 1516, column: 12, scope: !4739)
!4753 = !DILocation(line: 1517, column: 6, scope: !4739)
!4754 = !DILocation(line: 1519, column: 3, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4735, file: !2, line: 1517, column: 13)
!4756 = !DILocation(line: 1522, column: 10, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4486, file: !2, line: 1522, column: 10)
!4758 = !DILocation(line: 1522, column: 10, scope: !4486)
!4759 = !DILocation(line: 1523, column: 13, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4757, file: !2, line: 1522, column: 26)
!4761 = !DILocation(line: 1523, column: 3, scope: !4760)
!4762 = !DILocation(line: 1523, column: 11, scope: !4760)
!4763 = !DILocation(line: 1524, column: 6, scope: !4760)
!4764 = !DILocation(line: 1525, column: 3, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4757, file: !2, line: 1524, column: 13)
!4766 = !DILocation(line: 1525, column: 3, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4765, file: !2, line: 1525, column: 3)
!4768 = !DILocation(line: 1525, column: 3, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4767, file: !2, line: 1525, column: 3)
!4770 = !DILocation(line: 1525, column: 3, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4769, file: !2, line: 1525, column: 3)
!4772 = !DILocation(line: 1526, column: 3, scope: !4765)
!4773 = !DILocation(line: 1526, column: 11, scope: !4765)
!4774 = !DILocation(line: 1528, column: 14, scope: !4486)
!4775 = !DILocation(line: 1528, column: 7, scope: !4486)
!4776 = !DILocation(line: 1528, column: 12, scope: !4486)
!4777 = !DILocation(line: 1529, column: 15, scope: !4486)
!4778 = !DILocation(line: 1529, column: 11, scope: !4486)
!4779 = !DILocation(line: 1530, column: 9, scope: !4486)
!4780 = !DILocation(line: 1531, column: 12, scope: !4486)
!4781 = !DILocation(line: 1531, column: 10, scope: !4486)
!4782 = !DILocation(line: 1532, column: 6, scope: !4486)
!4783 = !DILocation(line: 1533, column: 2, scope: !4487)
!4784 = !DILocation(line: 1535, column: 6, scope: !4505)
!4785 = !DILocation(line: 1535, column: 12, scope: !4505)
!4786 = !DILocation(line: 1536, column: 12, scope: !4505)
!4787 = !DILocation(line: 1536, column: 10, scope: !4505)
!4788 = !DILocation(line: 1538, column: 26, scope: !4510)
!4789 = !DILocation(line: 1538, column: 30, scope: !4510)
!4790 = !DILocation(line: 1538, column: 10, scope: !4510)
!4791 = !DILocation(line: 1538, column: 10, scope: !4505)
!4792 = !DILocation(line: 1539, column: 21, scope: !4508)
!4793 = !DILocation(line: 1539, column: 28, scope: !4508)
!4794 = !DILocation(line: 1539, column: 25, scope: !4508)
!4795 = !DILocation(line: 1539, column: 48, scope: !4508)
!4796 = !DILocation(line: 1540, column: 23, scope: !4508)
!4797 = !DILocation(line: 1540, column: 37, scope: !4508)
!4798 = !DILocation(line: 1540, column: 40, scope: !4508)
!4799 = !DILocation(line: 1539, column: 21, scope: !4509)
!4800 = !DILocation(line: 1541, column: 29, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4508, file: !2, line: 1540, column: 69)
!4802 = !DILocation(line: 1541, column: 22, scope: !4801)
!4803 = !DILocation(line: 1541, column: 27, scope: !4801)
!4804 = !DILocation(line: 1542, column: 17, scope: !4801)
!4805 = !DILocation(line: 1543, column: 21, scope: !4507)
!4806 = !DILocation(line: 1543, column: 26, scope: !4507)
!4807 = !DILocation(line: 1544, column: 43, scope: !4507)
!4808 = !DILocation(line: 1544, column: 48, scope: !4507)
!4809 = !DILocation(line: 1544, column: 55, scope: !4507)
!4810 = !DILocation(line: 1544, column: 53, scope: !4507)
!4811 = !DILocation(line: 1544, column: 64, scope: !4507)
!4812 = !DILocation(line: 1544, column: 29, scope: !4507)
!4813 = !DILocation(line: 1544, column: 22, scope: !4507)
!4814 = !DILocation(line: 1544, column: 27, scope: !4507)
!4815 = !DILocation(line: 1549, column: 29, scope: !4507)
!4816 = !DILocation(line: 1549, column: 26, scope: !4507)
!4817 = !DILocation(line: 1550, column: 17, scope: !4508)
!4818 = !DILocation(line: 1551, column: 3, scope: !4509)
!4819 = !DILocation(line: 1553, column: 13, scope: !4505)
!4820 = !DILocation(line: 1553, column: 12, scope: !4505)
!4821 = !DILocation(line: 1553, column: 10, scope: !4505)
!4822 = !DILocation(line: 1555, column: 14, scope: !4505)
!4823 = !DILocation(line: 1555, column: 6, scope: !4505)
!4824 = !DILocation(line: 1557, column: 3, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4505, file: !2, line: 1555, column: 32)
!4826 = !DILocation(line: 1561, column: 7, scope: !4825)
!4827 = !DILocation(line: 1561, column: 11, scope: !4825)
!4828 = !DILocation(line: 1561, column: 5, scope: !4825)
!4829 = !DILocation(line: 1562, column: 11, scope: !4825)
!4830 = !DILocation(line: 1562, column: 4, scope: !4825)
!4831 = !DILocation(line: 1562, column: 9, scope: !4825)
!4832 = !DILocation(line: 1563, column: 3, scope: !4825)
!4833 = !DILocation(line: 1567, column: 7, scope: !4825)
!4834 = !DILocation(line: 1567, column: 11, scope: !4825)
!4835 = !DILocation(line: 1567, column: 5, scope: !4825)
!4836 = !DILocation(line: 1568, column: 11, scope: !4825)
!4837 = !DILocation(line: 1568, column: 17, scope: !4825)
!4838 = !DILocation(line: 1568, column: 15, scope: !4825)
!4839 = !DILocation(line: 1568, column: 35, scope: !4825)
!4840 = !DILocation(line: 1568, column: 4, scope: !4825)
!4841 = !DILocation(line: 1568, column: 8, scope: !4825)
!4842 = !DILocation(line: 1569, column: 9, scope: !4825)
!4843 = !DILocation(line: 1569, column: 7, scope: !4825)
!4844 = !DILocation(line: 1573, column: 28, scope: !4825)
!4845 = !DILocation(line: 1573, column: 32, scope: !4825)
!4846 = !DILocation(line: 1573, column: 49, scope: !4825)
!4847 = !DILocation(line: 1573, column: 25, scope: !4825)
!4848 = !DILocation(line: 1573, column: 3, scope: !4825)
!4849 = !DILocation(line: 1573, column: 19, scope: !4825)
!4850 = !DILocation(line: 1574, column: 3, scope: !4825)
!4851 = !DILocation(line: 1575, column: 3, scope: !4825)
!4852 = !DILocation(line: 1578, column: 17, scope: !4825)
!4853 = !DILocation(line: 1578, column: 21, scope: !4825)
!4854 = !DILocation(line: 1578, column: 38, scope: !4825)
!4855 = !DILocation(line: 1578, column: 14, scope: !4825)
!4856 = !DILocation(line: 1578, column: 4, scope: !4825)
!4857 = !DILocation(line: 1578, column: 8, scope: !4825)
!4858 = !DILocation(line: 1579, column: 3, scope: !4825)
!4859 = !DILocation(line: 1582, column: 14, scope: !4505)
!4860 = !DILocation(line: 1582, column: 18, scope: !4505)
!4861 = !DILocation(line: 1582, column: 6, scope: !4505)
!4862 = !DILocation(line: 1584, column: 3, scope: !4512)
!4863 = !DILocation(line: 1584, column: 7, scope: !4512)
!4864 = !DILocation(line: 1584, column: 15, scope: !4512)
!4865 = !DILocation(line: 1585, column: 11, scope: !4512)
!4866 = !DILocation(line: 1585, column: 4, scope: !4512)
!4867 = !DILocation(line: 1585, column: 9, scope: !4512)
!4868 = !DILocation(line: 1586, column: 11, scope: !4512)
!4869 = !DILocation(line: 1586, column: 6, scope: !4512)
!4870 = !DILocation(line: 1586, column: 9, scope: !4512)
!4871 = !DILocation(line: 1587, column: 3, scope: !4512)
!4872 = !DILocation(line: 1587, column: 15, scope: !4512)
!4873 = !DILocation(line: 1587, column: 18, scope: !4512)
!4874 = !DILocation(line: 1588, column: 14, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 1587, column: 23)
!4876 = !DILocation(line: 1588, column: 13, scope: !4875)
!4877 = !DILocation(line: 1588, column: 11, scope: !4875)
!4878 = !DILocation(line: 1589, column: 11, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4875, file: !2, line: 1589, column: 11)
!4880 = !DILocation(line: 1589, column: 11, scope: !4875)
!4881 = !DILocation(line: 1590, column: 12, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !2, line: 1589, column: 26)
!4883 = !DILocation(line: 1590, column: 7, scope: !4882)
!4884 = !DILocation(line: 1590, column: 10, scope: !4882)
!4885 = !DILocation(line: 1591, column: 7, scope: !4882)
!4886 = !DILocation(line: 1592, column: 4, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4879, file: !2, line: 1591, column: 14)
!4888 = !DILocation(line: 1592, column: 4, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4887, file: !2, line: 1592, column: 4)
!4890 = !DILocation(line: 1592, column: 4, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4889, file: !2, line: 1592, column: 4)
!4892 = !DILocation(line: 1592, column: 4, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4891, file: !2, line: 1592, column: 4)
!4894 = !DILocation(line: 1593, column: 7, scope: !4887)
!4895 = !DILocation(line: 1593, column: 10, scope: !4887)
!4896 = distinct !{!4896, !4871, !4897, !1882}
!4897 = !DILocation(line: 1595, column: 3, scope: !4512)
!4898 = !DILocation(line: 1597, column: 6, scope: !4513)
!4899 = !DILocation(line: 1599, column: 3, scope: !4515)
!4900 = !DILocation(line: 1599, column: 16, scope: !4515)
!4901 = !DILocation(line: 1599, column: 39, scope: !4515)
!4902 = !DILocation(line: 1600, column: 3, scope: !4515)
!4903 = !DILocation(line: 1600, column: 12, scope: !4515)
!4904 = !DILocation(line: 1600, column: 39, scope: !4515)
!4905 = !DILocation(line: 1600, column: 45, scope: !4515)
!4906 = !DILocation(line: 1600, column: 37, scope: !4515)
!4907 = !DILocation(line: 1601, column: 8, scope: !4515)
!4908 = !DILocation(line: 1601, column: 6, scope: !4515)
!4909 = !DILocation(line: 1602, column: 26, scope: !4515)
!4910 = !DILocation(line: 1602, column: 8, scope: !4515)
!4911 = !DILocation(line: 1603, column: 11, scope: !4515)
!4912 = !DILocation(line: 1603, column: 4, scope: !4515)
!4913 = !DILocation(line: 1603, column: 9, scope: !4515)
!4914 = !DILocation(line: 1604, column: 11, scope: !4515)
!4915 = !DILocation(line: 1604, column: 6, scope: !4515)
!4916 = !DILocation(line: 1604, column: 9, scope: !4515)
!4917 = !DILocation(line: 1605, column: 6, scope: !4515)
!4918 = !DILocation(line: 1606, column: 3, scope: !4515)
!4919 = !DILocation(line: 1606, column: 12, scope: !4515)
!4920 = !DILocation(line: 1606, column: 15, scope: !4515)
!4921 = !DILocation(line: 1607, column: 19, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4515, file: !2, line: 1606, column: 20)
!4923 = !DILocation(line: 1607, column: 15, scope: !4922)
!4924 = !DILocation(line: 1607, column: 10, scope: !4922)
!4925 = !DILocation(line: 1607, column: 13, scope: !4922)
!4926 = distinct !{!4926, !4918, !4927, !1882}
!4927 = !DILocation(line: 1608, column: 3, scope: !4515)
!4928 = !DILocation(line: 1609, column: 3, scope: !4515)
!4929 = !DILocation(line: 1609, column: 16, scope: !4515)
!4930 = !DILocation(line: 1609, column: 19, scope: !4515)
!4931 = !DILocation(line: 1610, column: 17, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4515, file: !2, line: 1609, column: 24)
!4933 = !DILocation(line: 1610, column: 13, scope: !4932)
!4934 = !DILocation(line: 1610, column: 11, scope: !4932)
!4935 = !DILocation(line: 1611, column: 11, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !2, line: 1611, column: 11)
!4937 = !DILocation(line: 1611, column: 11, scope: !4932)
!4938 = !DILocation(line: 1612, column: 12, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4936, file: !2, line: 1611, column: 26)
!4940 = !DILocation(line: 1612, column: 7, scope: !4939)
!4941 = !DILocation(line: 1612, column: 10, scope: !4939)
!4942 = !DILocation(line: 1613, column: 7, scope: !4939)
!4943 = !DILocation(line: 1614, column: 4, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4936, file: !2, line: 1613, column: 14)
!4945 = !DILocation(line: 1614, column: 4, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4944, file: !2, line: 1614, column: 4)
!4947 = !DILocation(line: 1614, column: 4, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4946, file: !2, line: 1614, column: 4)
!4949 = !DILocation(line: 1614, column: 4, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4948, file: !2, line: 1614, column: 4)
!4951 = !DILocation(line: 1615, column: 7, scope: !4944)
!4952 = !DILocation(line: 1615, column: 10, scope: !4944)
!4953 = distinct !{!4953, !4928, !4954, !1882}
!4954 = !DILocation(line: 1617, column: 3, scope: !4515)
!4955 = !DILocation(line: 1619, column: 21, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4515, file: !2, line: 1619, column: 21)
!4957 = !DILocation(line: 1619, column: 21, scope: !4515)
!4958 = !DILocation(line: 1620, column: 34, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !2, line: 1619, column: 41)
!4960 = !DILocation(line: 1620, column: 44, scope: !4959)
!4961 = !DILocation(line: 1620, column: 21, scope: !4959)
!4962 = !DILocation(line: 1620, column: 27, scope: !4959)
!4963 = !DILocation(line: 1620, column: 32, scope: !4959)
!4964 = !DILocation(line: 1621, column: 69, scope: !4959)
!4965 = !DILocation(line: 1621, column: 21, scope: !4959)
!4966 = !DILocation(line: 1621, column: 31, scope: !4959)
!4967 = !DILocation(line: 1621, column: 37, scope: !4959)
!4968 = !DILocation(line: 1622, column: 36, scope: !4959)
!4969 = !DILocation(line: 1622, column: 42, scope: !4959)
!4970 = !DILocation(line: 1622, column: 48, scope: !4959)
!4971 = !DILocation(line: 1622, column: 53, scope: !4959)
!4972 = !DILocation(line: 1622, column: 21, scope: !4959)
!4973 = !DILocation(line: 1623, column: 17, scope: !4959)
!4974 = !DILocation(line: 1628, column: 6, scope: !4513)
!4975 = !DILocation(line: 1630, column: 26, scope: !4513)
!4976 = !DILocation(line: 1630, column: 18, scope: !4513)
!4977 = !DILocation(line: 1630, column: 24, scope: !4513)
!4978 = !DILocation(line: 1631, column: 26, scope: !4513)
!4979 = !DILocation(line: 1631, column: 20, scope: !4513)
!4980 = !DILocation(line: 1631, column: 24, scope: !4513)
!4981 = !DILocation(line: 1632, column: 25, scope: !4513)
!4982 = !DILocation(line: 1632, column: 17, scope: !4513)
!4983 = !DILocation(line: 1634, column: 25, scope: !4518)
!4984 = !DILocation(line: 1634, column: 36, scope: !4518)
!4985 = !DILocation(line: 1634, column: 55, scope: !4518)
!4986 = !DILocation(line: 1635, column: 25, scope: !4518)
!4987 = !DILocation(line: 1635, column: 30, scope: !4518)
!4988 = !DILocation(line: 1635, column: 34, scope: !4518)
!4989 = !DILocation(line: 1635, column: 55, scope: !4518)
!4990 = !DILocation(line: 1637, column: 35, scope: !4518)
!4991 = !DILocation(line: 1637, column: 34, scope: !4518)
!4992 = !DILocation(line: 1637, column: 28, scope: !4518)
!4993 = !DILocation(line: 1637, column: 32, scope: !4518)
!4994 = !DILocation(line: 1638, column: 25, scope: !4518)
!4995 = !DILocation(line: 1638, column: 33, scope: !4518)
!4996 = !DILocation(line: 1639, column: 36, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4518, file: !2, line: 1638, column: 37)
!4998 = !DILocation(line: 1639, column: 35, scope: !4997)
!4999 = !DILocation(line: 1639, column: 33, scope: !4997)
!5000 = !DILocation(line: 1640, column: 33, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4997, file: !2, line: 1640, column: 33)
!5002 = !DILocation(line: 1640, column: 33, scope: !4997)
!5003 = !DILocation(line: 1641, column: 41, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5001, file: !2, line: 1640, column: 48)
!5005 = !DILocation(line: 1641, column: 36, scope: !5004)
!5006 = !DILocation(line: 1641, column: 39, scope: !5004)
!5007 = !DILocation(line: 1642, column: 29, scope: !5004)
!5008 = !DILocation(line: 1643, column: 33, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5001, file: !2, line: 1642, column: 36)
!5010 = !DILocation(line: 1643, column: 33, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5009, file: !2, line: 1643, column: 33)
!5012 = !DILocation(line: 1643, column: 33, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5011, file: !2, line: 1643, column: 33)
!5014 = !DILocation(line: 1643, column: 33, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5013, file: !2, line: 1643, column: 33)
!5016 = !DILocation(line: 1644, column: 36, scope: !5009)
!5017 = !DILocation(line: 1644, column: 39, scope: !5009)
!5018 = distinct !{!5018, !4994, !5019, !1882}
!5019 = !DILocation(line: 1646, column: 25, scope: !4518)
!5020 = !DILocation(line: 1648, column: 21, scope: !4519)
!5021 = !DILocation(line: 1651, column: 13, scope: !4519)
!5022 = !DILocation(line: 1651, column: 12, scope: !4519)
!5023 = !DILocation(line: 1651, column: 7, scope: !4519)
!5024 = !DILocation(line: 1651, column: 10, scope: !4519)
!5025 = !DILocation(line: 1651, column: 4, scope: !4519)
!5026 = !DILocation(line: 1653, column: 26, scope: !4522)
!5027 = !DILocation(line: 1653, column: 31, scope: !4522)
!5028 = !DILocation(line: 1653, column: 35, scope: !4522)
!5029 = !DILocation(line: 1654, column: 26, scope: !4522)
!5030 = !DILocation(line: 1654, column: 34, scope: !4522)
!5031 = !DILocation(line: 1655, column: 37, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4522, file: !2, line: 1654, column: 39)
!5033 = !DILocation(line: 1655, column: 36, scope: !5032)
!5034 = !DILocation(line: 1655, column: 34, scope: !5032)
!5035 = !DILocation(line: 1656, column: 34, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !2, line: 1656, column: 34)
!5037 = !DILocation(line: 1656, column: 34, scope: !5032)
!5038 = !DILocation(line: 1657, column: 42, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5036, file: !2, line: 1656, column: 49)
!5040 = !DILocation(line: 1657, column: 37, scope: !5039)
!5041 = !DILocation(line: 1657, column: 40, scope: !5039)
!5042 = !DILocation(line: 1658, column: 30, scope: !5039)
!5043 = !DILocation(line: 1659, column: 34, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5036, file: !2, line: 1658, column: 37)
!5045 = !DILocation(line: 1659, column: 34, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5044, file: !2, line: 1659, column: 34)
!5047 = !DILocation(line: 1659, column: 34, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5046, file: !2, line: 1659, column: 34)
!5049 = !DILocation(line: 1659, column: 34, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5048, file: !2, line: 1659, column: 34)
!5051 = !DILocation(line: 1660, column: 37, scope: !5044)
!5052 = !DILocation(line: 1660, column: 40, scope: !5044)
!5053 = distinct !{!5053, !5029, !5054, !1882}
!5054 = !DILocation(line: 1662, column: 26, scope: !4522)
!5055 = !DILocation(line: 1664, column: 21, scope: !4519)
!5056 = !DILocation(line: 1666, column: 98, scope: !4519)
!5057 = !DILocation(line: 1666, column: 25, scope: !4519)
!5058 = !DILocation(line: 1669, column: 3, scope: !4524)
!5059 = !DILocation(line: 1669, column: 12, scope: !4524)
!5060 = !DILocation(line: 1669, column: 29, scope: !4524)
!5061 = !DILocation(line: 1670, column: 8, scope: !4524)
!5062 = !DILocation(line: 1670, column: 6, scope: !4524)
!5063 = !DILocation(line: 1671, column: 7, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4524, file: !2, line: 1671, column: 7)
!5065 = !DILocation(line: 1671, column: 11, scope: !5064)
!5066 = !DILocation(line: 1671, column: 7, scope: !4524)
!5067 = !DILocation(line: 1672, column: 39, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !2, line: 1671, column: 18)
!5069 = !DILocation(line: 1672, column: 7, scope: !5068)
!5070 = !DILocation(line: 1673, column: 3, scope: !5068)
!5071 = !DILocation(line: 1674, column: 20, scope: !4524)
!5072 = !DILocation(line: 1674, column: 6, scope: !4524)
!5073 = !DILocation(line: 1675, column: 11, scope: !4524)
!5074 = !DILocation(line: 1675, column: 4, scope: !4524)
!5075 = !DILocation(line: 1675, column: 9, scope: !4524)
!5076 = !DILocation(line: 1676, column: 11, scope: !4524)
!5077 = !DILocation(line: 1676, column: 6, scope: !4524)
!5078 = !DILocation(line: 1676, column: 9, scope: !4524)
!5079 = !DILocation(line: 1677, column: 6, scope: !4524)
!5080 = !DILocation(line: 1678, column: 3, scope: !4524)
!5081 = !DILocation(line: 1678, column: 12, scope: !4524)
!5082 = !DILocation(line: 1678, column: 15, scope: !4524)
!5083 = !DILocation(line: 1679, column: 19, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !4524, file: !2, line: 1678, column: 20)
!5085 = !DILocation(line: 1679, column: 15, scope: !5084)
!5086 = !DILocation(line: 1679, column: 10, scope: !5084)
!5087 = !DILocation(line: 1679, column: 13, scope: !5084)
!5088 = distinct !{!5088, !5080, !5089, !1882}
!5089 = !DILocation(line: 1680, column: 3, scope: !4524)
!5090 = !DILocation(line: 1681, column: 18, scope: !4524)
!5091 = !DILocation(line: 1681, column: 22, scope: !4524)
!5092 = !DILocation(line: 1681, column: 27, scope: !4524)
!5093 = !DILocation(line: 1681, column: 34, scope: !4524)
!5094 = !DILocation(line: 1681, column: 3, scope: !4524)
!5095 = !DILocation(line: 1682, column: 14, scope: !4524)
!5096 = !DILocation(line: 1682, column: 24, scope: !4524)
!5097 = !DILocation(line: 1682, column: 3, scope: !4524)
!5098 = !DILocation(line: 1682, column: 7, scope: !4524)
!5099 = !DILocation(line: 1682, column: 12, scope: !4524)
!5100 = !DILocation(line: 1683, column: 3, scope: !4524)
!5101 = !DILocation(line: 1683, column: 7, scope: !4524)
!5102 = !DILocation(line: 1683, column: 13, scope: !4524)
!5103 = !DILocation(line: 1684, column: 51, scope: !4524)
!5104 = !DILocation(line: 1684, column: 3, scope: !4524)
!5105 = !DILocation(line: 1684, column: 13, scope: !4524)
!5106 = !DILocation(line: 1684, column: 19, scope: !4524)
!5107 = !DILocation(line: 1685, column: 3, scope: !4524)
!5108 = !DILocation(line: 1685, column: 3, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !4524, file: !2, line: 1685, column: 3)
!5110 = !DILocation(line: 1687, column: 6, scope: !4513)
!5111 = !DILocation(line: 1689, column: 3, scope: !4526)
!5112 = !DILocation(line: 1689, column: 14, scope: !4526)
!5113 = !DILocation(line: 1689, column: 33, scope: !4526)
!5114 = !DILocation(line: 1690, column: 3, scope: !4526)
!5115 = !DILocation(line: 1690, column: 9, scope: !4526)
!5116 = !DILocation(line: 1690, column: 20, scope: !4526)
!5117 = !DILocation(line: 1690, column: 24, scope: !4526)
!5118 = !DILocation(line: 1691, column: 3, scope: !4526)
!5119 = !DILocation(line: 1691, column: 8, scope: !4526)
!5120 = !DILocation(line: 1691, column: 21, scope: !4526)
!5121 = !DILocation(line: 1691, column: 25, scope: !4526)
!5122 = !DILocation(line: 1692, column: 3, scope: !4526)
!5123 = !DILocation(line: 1692, column: 8, scope: !4526)
!5124 = !DILocation(line: 1692, column: 19, scope: !4526)
!5125 = !DILocation(line: 1692, column: 23, scope: !4526)
!5126 = !DILocation(line: 1693, column: 3, scope: !4526)
!5127 = !DILocation(line: 1693, column: 8, scope: !4526)
!5128 = !DILocation(line: 1693, column: 17, scope: !4526)
!5129 = !DILocation(line: 1693, column: 21, scope: !4526)
!5130 = !DILocation(line: 1694, column: 3, scope: !4526)
!5131 = !DILocation(line: 1694, column: 10, scope: !4526)
!5132 = !DILocation(line: 1694, column: 17, scope: !4526)
!5133 = !DILocation(line: 1694, column: 21, scope: !4526)
!5134 = !DILocation(line: 1695, column: 3, scope: !4526)
!5135 = !DILocation(line: 1695, column: 8, scope: !4526)
!5136 = !DILocation(line: 1696, column: 3, scope: !4526)
!5137 = !DILocation(line: 1696, column: 8, scope: !4526)
!5138 = !DILocation(line: 1697, column: 8, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !4526, file: !2, line: 1697, column: 7)
!5140 = !DILocation(line: 1697, column: 19, scope: !5139)
!5141 = !DILocation(line: 1697, column: 17, scope: !5139)
!5142 = !DILocation(line: 1697, column: 31, scope: !5139)
!5143 = !DILocation(line: 1697, column: 7, scope: !4526)
!5144 = !DILocation(line: 1698, column: 19, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5139, file: !2, line: 1697, column: 36)
!5146 = !DILocation(line: 1699, column: 3, scope: !5145)
!5147 = !DILocation(line: 1699, column: 15, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5139, file: !2, line: 1699, column: 14)
!5149 = !DILocation(line: 1699, column: 26, scope: !5148)
!5150 = !DILocation(line: 1699, column: 24, scope: !5148)
!5151 = !DILocation(line: 1699, column: 38, scope: !5148)
!5152 = !DILocation(line: 1699, column: 14, scope: !5139)
!5153 = !DILocation(line: 1700, column: 19, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5148, file: !2, line: 1699, column: 43)
!5155 = !DILocation(line: 1701, column: 3, scope: !5154)
!5156 = !DILocation(line: 1702, column: 19, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5148, file: !2, line: 1701, column: 10)
!5158 = !DILocation(line: 1704, column: 15, scope: !4526)
!5159 = !DILocation(line: 1704, column: 20, scope: !4526)
!5160 = !DILocation(line: 1704, column: 19, scope: !4526)
!5161 = !DILocation(line: 1704, column: 13, scope: !4526)
!5162 = !DILocation(line: 1705, column: 11, scope: !4526)
!5163 = !DILocation(line: 1705, column: 4, scope: !4526)
!5164 = !DILocation(line: 1705, column: 9, scope: !4526)
!5165 = !DILocation(line: 1706, column: 7, scope: !4536)
!5166 = !DILocation(line: 1706, column: 19, scope: !4536)
!5167 = !DILocation(line: 1706, column: 7, scope: !4526)
!5168 = !DILocation(line: 1707, column: 7, scope: !4535)
!5169 = !DILocation(line: 1707, column: 18, scope: !4535)
!5170 = !DILocation(line: 1707, column: 38, scope: !4535)
!5171 = !DILocation(line: 1708, column: 10, scope: !4535)
!5172 = !DILocation(line: 1709, column: 7, scope: !4535)
!5173 = !DILocation(line: 1709, column: 12, scope: !4535)
!5174 = !DILocation(line: 1709, column: 23, scope: !4535)
!5175 = !DILocation(line: 1710, column: 19, scope: !4535)
!5176 = !DILocation(line: 1710, column: 7, scope: !4535)
!5177 = !DILocation(line: 1710, column: 12, scope: !4535)
!5178 = !DILocation(line: 1710, column: 17, scope: !4535)
!5179 = !DILocation(line: 1711, column: 22, scope: !4535)
!5180 = !DILocation(line: 1711, column: 7, scope: !4535)
!5181 = !DILocation(line: 1711, column: 12, scope: !4535)
!5182 = !DILocation(line: 1711, column: 20, scope: !4535)
!5183 = !DILocation(line: 1712, column: 22, scope: !4535)
!5184 = !DILocation(line: 1712, column: 7, scope: !4535)
!5185 = !DILocation(line: 1712, column: 12, scope: !4535)
!5186 = !DILocation(line: 1712, column: 20, scope: !4535)
!5187 = !DILocation(line: 1713, column: 7, scope: !4535)
!5188 = !DILocation(line: 1713, column: 12, scope: !4535)
!5189 = !DILocation(line: 1713, column: 17, scope: !4535)
!5190 = !DILocation(line: 1714, column: 7, scope: !4535)
!5191 = !DILocation(line: 1714, column: 12, scope: !4535)
!5192 = !DILocation(line: 1714, column: 24, scope: !4535)
!5193 = !DILocation(line: 1715, column: 19, scope: !4535)
!5194 = !DILocation(line: 1715, column: 7, scope: !4535)
!5195 = !DILocation(line: 1715, column: 12, scope: !4535)
!5196 = !DILocation(line: 1715, column: 17, scope: !4535)
!5197 = !DILocation(line: 1716, column: 3, scope: !4536)
!5198 = !DILocation(line: 1716, column: 3, scope: !4535)
!5199 = !DILocation(line: 1718, column: 23, scope: !4526)
!5200 = !DILocation(line: 1718, column: 21, scope: !4526)
!5201 = !DILocation(line: 1719, column: 24, scope: !4526)
!5202 = !DILocation(line: 1719, column: 23, scope: !4526)
!5203 = !DILocation(line: 1719, column: 21, scope: !4526)
!5204 = !DILocation(line: 1720, column: 25, scope: !4526)
!5205 = !DILocation(line: 1720, column: 17, scope: !4526)
!5206 = !DILocation(line: 1726, column: 28, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !4526, file: !2, line: 1720, column: 43)
!5208 = !DILocation(line: 1726, column: 32, scope: !5207)
!5209 = !DILocation(line: 1726, column: 49, scope: !5207)
!5210 = !DILocation(line: 1726, column: 25, scope: !5207)
!5211 = !DILocation(line: 1727, column: 21, scope: !5207)
!5212 = !DILocation(line: 1731, column: 25, scope: !5207)
!5213 = !DILocation(line: 1731, column: 29, scope: !5207)
!5214 = !DILocation(line: 1731, column: 23, scope: !5207)
!5215 = !DILocation(line: 1732, column: 27, scope: !5207)
!5216 = !DILocation(line: 1732, column: 25, scope: !5207)
!5217 = !DILocation(line: 1733, column: 28, scope: !5207)
!5218 = !DILocation(line: 1733, column: 32, scope: !5207)
!5219 = !DILocation(line: 1733, column: 55, scope: !5207)
!5220 = !DILocation(line: 1733, column: 25, scope: !5207)
!5221 = !DILocation(line: 1734, column: 21, scope: !5207)
!5222 = !DILocation(line: 1736, column: 7, scope: !4539)
!5223 = !DILocation(line: 1736, column: 25, scope: !4539)
!5224 = !DILocation(line: 1736, column: 7, scope: !4526)
!5225 = !DILocation(line: 1737, column: 7, scope: !4538)
!5226 = !DILocation(line: 1737, column: 19, scope: !4538)
!5227 = !DILocation(line: 1737, column: 41, scope: !4538)
!5228 = !DILocation(line: 1738, column: 7, scope: !4538)
!5229 = !DILocation(line: 1738, column: 19, scope: !4538)
!5230 = !DILocation(line: 1738, column: 39, scope: !4538)
!5231 = !DILocation(line: 1739, column: 13, scope: !4538)
!5232 = !DILocation(line: 1739, column: 10, scope: !4538)
!5233 = !DILocation(line: 1740, column: 24, scope: !4538)
!5234 = !DILocation(line: 1740, column: 7, scope: !4538)
!5235 = !DILocation(line: 1740, column: 11, scope: !4538)
!5236 = !DILocation(line: 1740, column: 22, scope: !4538)
!5237 = !DILocation(line: 1741, column: 18, scope: !4538)
!5238 = !DILocation(line: 1741, column: 7, scope: !4538)
!5239 = !DILocation(line: 1741, column: 11, scope: !4538)
!5240 = !DILocation(line: 1741, column: 16, scope: !4538)
!5241 = !DILocation(line: 1742, column: 18, scope: !4538)
!5242 = !DILocation(line: 1742, column: 22, scope: !4538)
!5243 = !DILocation(line: 1742, column: 37, scope: !4538)
!5244 = !DILocation(line: 1742, column: 43, scope: !4538)
!5245 = !DILocation(line: 1742, column: 49, scope: !4538)
!5246 = !DILocation(line: 1742, column: 48, scope: !4538)
!5247 = !DILocation(line: 1742, column: 57, scope: !4538)
!5248 = !DILocation(line: 1742, column: 7, scope: !4538)
!5249 = !DILocation(line: 1743, column: 3, scope: !4539)
!5250 = !DILocation(line: 1743, column: 3, scope: !4538)
!5251 = !DILocation(line: 1744, column: 7, scope: !4542)
!5252 = !DILocation(line: 1744, column: 16, scope: !4542)
!5253 = !DILocation(line: 1744, column: 35, scope: !4542)
!5254 = !DILocation(line: 1745, column: 7, scope: !4542)
!5255 = !DILocation(line: 1745, column: 16, scope: !4542)
!5256 = !DILocation(line: 1745, column: 33, scope: !4542)
!5257 = !DILocation(line: 1747, column: 11, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !4542, file: !2, line: 1747, column: 11)
!5259 = !DILocation(line: 1747, column: 17, scope: !5258)
!5260 = !DILocation(line: 1747, column: 11, scope: !4542)
!5261 = !DILocation(line: 1748, column: 36, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !2, line: 1747, column: 24)
!5263 = !DILocation(line: 1748, column: 4, scope: !5262)
!5264 = !DILocation(line: 1749, column: 7, scope: !5262)
!5265 = !DILocation(line: 1750, column: 10, scope: !4542)
!5266 = !DILocation(line: 1751, column: 7, scope: !4542)
!5267 = !DILocation(line: 1751, column: 11, scope: !4542)
!5268 = !DILocation(line: 1751, column: 22, scope: !4542)
!5269 = !DILocation(line: 1752, column: 18, scope: !4542)
!5270 = !DILocation(line: 1752, column: 7, scope: !4542)
!5271 = !DILocation(line: 1752, column: 11, scope: !4542)
!5272 = !DILocation(line: 1752, column: 16, scope: !4542)
!5273 = !DILocation(line: 1753, column: 17, scope: !4542)
!5274 = !DILocation(line: 1753, column: 23, scope: !4542)
!5275 = !DILocation(line: 1753, column: 7, scope: !4542)
!5276 = !DILocation(line: 1753, column: 11, scope: !4542)
!5277 = !DILocation(line: 1753, column: 15, scope: !4542)
!5278 = !DILocation(line: 1754, column: 22, scope: !4542)
!5279 = !DILocation(line: 1754, column: 26, scope: !4542)
!5280 = !DILocation(line: 1754, column: 31, scope: !4542)
!5281 = !DILocation(line: 1754, column: 38, scope: !4542)
!5282 = !DILocation(line: 1754, column: 7, scope: !4542)
!5283 = !DILocation(line: 1755, column: 19, scope: !4542)
!5284 = !DILocation(line: 1755, column: 25, scope: !4542)
!5285 = !DILocation(line: 1755, column: 33, scope: !4542)
!5286 = !DILocation(line: 1755, column: 31, scope: !4542)
!5287 = !DILocation(line: 1755, column: 7, scope: !4542)
!5288 = !DILocation(line: 1755, column: 11, scope: !4542)
!5289 = !DILocation(line: 1755, column: 17, scope: !4542)
!5290 = !DILocation(line: 1756, column: 18, scope: !4542)
!5291 = !DILocation(line: 1756, column: 28, scope: !4542)
!5292 = !DILocation(line: 1756, column: 7, scope: !4542)
!5293 = !DILocation(line: 1756, column: 11, scope: !4542)
!5294 = !DILocation(line: 1756, column: 16, scope: !4542)
!5295 = !DILocation(line: 1757, column: 7, scope: !4542)
!5296 = !DILocation(line: 1757, column: 11, scope: !4542)
!5297 = !DILocation(line: 1757, column: 17, scope: !4542)
!5298 = !DILocation(line: 1758, column: 55, scope: !4542)
!5299 = !DILocation(line: 1758, column: 7, scope: !4542)
!5300 = !DILocation(line: 1758, column: 17, scope: !4542)
!5301 = !DILocation(line: 1758, column: 23, scope: !4542)
!5302 = !DILocation(line: 1759, column: 7, scope: !4542)
!5303 = !DILocation(line: 1759, column: 7, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !4542, file: !2, line: 1759, column: 7)
!5305 = !DILocation(line: 1760, column: 3, scope: !4539)
!5306 = !DILocation(line: 1762, column: 6, scope: !4513)
!5307 = !DILocation(line: 1767, column: 3, scope: !4545)
!5308 = !DILocation(line: 1767, column: 18, scope: !4545)
!5309 = !DILocation(line: 1767, column: 42, scope: !4545)
!5310 = !DILocation(line: 1772, column: 37, scope: !4545)
!5311 = !DILocation(line: 1772, column: 42, scope: !4545)
!5312 = !DILocation(line: 1772, column: 51, scope: !4545)
!5313 = !DILocation(line: 1772, column: 17, scope: !4545)
!5314 = !DILocation(line: 1774, column: 6, scope: !4513)
!5315 = !DILocation(line: 1774, column: 6, scope: !4545)
!5316 = !DILocation(line: 1775, column: 4, scope: !4513)
!5317 = !DILocation(line: 1777, column: 3, scope: !4548)
!5318 = !DILocation(line: 1777, column: 31, scope: !4548)
!5319 = !DILocation(line: 1778, column: 41, scope: !4548)
!5320 = !DILocation(line: 1778, column: 8, scope: !4548)
!5321 = !DILocation(line: 1779, column: 8, scope: !4548)
!5322 = !DILocation(line: 1779, column: 6, scope: !4548)
!5323 = !DILocation(line: 1780, column: 11, scope: !4548)
!5324 = !DILocation(line: 1780, column: 4, scope: !4548)
!5325 = !DILocation(line: 1780, column: 9, scope: !4548)
!5326 = !DILocation(line: 1781, column: 11, scope: !4548)
!5327 = !DILocation(line: 1781, column: 6, scope: !4548)
!5328 = !DILocation(line: 1781, column: 9, scope: !4548)
!5329 = !DILocation(line: 1782, column: 6, scope: !4548)
!5330 = !DILocation(line: 1783, column: 3, scope: !4548)
!5331 = !DILocation(line: 1783, column: 12, scope: !4548)
!5332 = !DILocation(line: 1783, column: 15, scope: !4548)
!5333 = !DILocation(line: 1784, column: 19, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !4548, file: !2, line: 1783, column: 20)
!5335 = !DILocation(line: 1784, column: 15, scope: !5334)
!5336 = !DILocation(line: 1784, column: 10, scope: !5334)
!5337 = !DILocation(line: 1784, column: 13, scope: !5334)
!5338 = distinct !{!5338, !5330, !5339, !1882}
!5339 = !DILocation(line: 1785, column: 3, scope: !4548)
!5340 = !DILocation(line: 1786, column: 16, scope: !4548)
!5341 = !DILocation(line: 1786, column: 26, scope: !4548)
!5342 = !DILocation(line: 1786, column: 3, scope: !4548)
!5343 = !DILocation(line: 1786, column: 9, scope: !4548)
!5344 = !DILocation(line: 1786, column: 14, scope: !4548)
!5345 = !DILocation(line: 1787, column: 21, scope: !4548)
!5346 = !DILocation(line: 1787, column: 3, scope: !4548)
!5347 = !DILocation(line: 1787, column: 13, scope: !4548)
!5348 = !DILocation(line: 1787, column: 19, scope: !4548)
!5349 = !DILocation(line: 1789, column: 6, scope: !4513)
!5350 = !DILocation(line: 1791, column: 7, scope: !4551)
!5351 = !DILocation(line: 1791, column: 7, scope: !4513)
!5352 = !DILocation(line: 1792, column: 7, scope: !4550)
!5353 = !DILocation(line: 1792, column: 22, scope: !4550)
!5354 = !DILocation(line: 1792, column: 48, scope: !4550)
!5355 = !DILocation(line: 1793, column: 22, scope: !4550)
!5356 = !DILocation(line: 1793, column: 29, scope: !4550)
!5357 = !DILocation(line: 1793, column: 33, scope: !4550)
!5358 = !DILocation(line: 1793, column: 40, scope: !4550)
!5359 = !DILocation(line: 1793, column: 7, scope: !4550)
!5360 = !DILocation(line: 1795, column: 3, scope: !4551)
!5361 = !DILocation(line: 1798, column: 8, scope: !4513)
!5362 = !DILocation(line: 1798, column: 6, scope: !4513)
!5363 = !DILocation(line: 1799, column: 11, scope: !4513)
!5364 = !DILocation(line: 1799, column: 4, scope: !4513)
!5365 = !DILocation(line: 1799, column: 9, scope: !4513)
!5366 = !DILocation(line: 1800, column: 11, scope: !4513)
!5367 = !DILocation(line: 1800, column: 6, scope: !4513)
!5368 = !DILocation(line: 1800, column: 9, scope: !4513)
!5369 = !DILocation(line: 1801, column: 6, scope: !4513)
!5370 = !DILocation(line: 1802, column: 3, scope: !4513)
!5371 = !DILocation(line: 1802, column: 12, scope: !4513)
!5372 = !DILocation(line: 1802, column: 15, scope: !4513)
!5373 = !DILocation(line: 1803, column: 19, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !4513, file: !2, line: 1802, column: 20)
!5375 = !DILocation(line: 1803, column: 15, scope: !5374)
!5376 = !DILocation(line: 1803, column: 10, scope: !5374)
!5377 = !DILocation(line: 1803, column: 13, scope: !5374)
!5378 = distinct !{!5378, !5370, !5379, !1882}
!5379 = !DILocation(line: 1804, column: 3, scope: !4513)
!5380 = !DILocation(line: 1805, column: 3, scope: !4513)
!5381 = !DILocation(line: 1808, column: 2, scope: !4487)
!5382 = !DILocation(line: 1810, column: 14, scope: !4487)
!5383 = !DILocation(line: 1810, column: 7, scope: !4487)
!5384 = !DILocation(line: 1810, column: 12, scope: !4487)
!5385 = !DILocation(line: 1810, column: 6, scope: !4487)
!5386 = !DILocation(line: 1811, column: 2, scope: !4487)
!5387 = !DILocation(line: 1812, column: 10, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !4487, file: !2, line: 1812, column: 10)
!5389 = !DILocation(line: 1812, column: 10, scope: !4487)
!5390 = !DILocation(line: 1813, column: 3, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5388, file: !2, line: 1812, column: 29)
!5392 = !DILocation(line: 1815, column: 12, scope: !4487)
!5393 = !DILocation(line: 1815, column: 10, scope: !4487)
!5394 = !DILocation(line: 1816, column: 6, scope: !4487)
!5395 = !DILocation(line: 1818, column: 7, scope: !4560)
!5396 = !DILocation(line: 1818, column: 17, scope: !4560)
!5397 = !DILocation(line: 1818, column: 7, scope: !4561)
!5398 = !DILocation(line: 1819, column: 12, scope: !4558)
!5399 = !DILocation(line: 1819, column: 11, scope: !4558)
!5400 = !DILocation(line: 1819, column: 18, scope: !4558)
!5401 = !DILocation(line: 1819, column: 11, scope: !4559)
!5402 = !DILocation(line: 1820, column: 11, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !4558, file: !2, line: 1819, column: 45)
!5404 = !DILocation(line: 1820, column: 9, scope: !5403)
!5405 = !DILocation(line: 1821, column: 10, scope: !5403)
!5406 = !DILocation(line: 1822, column: 4, scope: !5403)
!5407 = !DILocation(line: 1823, column: 18, scope: !4557)
!5408 = !DILocation(line: 1823, column: 38, scope: !4557)
!5409 = !DILocation(line: 1823, column: 18, scope: !4558)
!5410 = !DILocation(line: 1824, column: 13, scope: !4556)
!5411 = !DILocation(line: 1824, column: 12, scope: !4556)
!5412 = !DILocation(line: 1824, column: 19, scope: !4556)
!5413 = !DILocation(line: 1824, column: 4, scope: !4556)
!5414 = !DILocation(line: 1826, column: 20, scope: !4555)
!5415 = !DILocation(line: 1826, column: 18, scope: !4555)
!5416 = !DILocation(line: 1827, column: 13, scope: !4555)
!5417 = !DILocation(line: 1828, column: 8, scope: !4555)
!5418 = !DILocation(line: 1830, column: 8, scope: !4554)
!5419 = !DILocation(line: 1830, column: 21, scope: !4554)
!5420 = !DILocation(line: 1830, column: 44, scope: !4554)
!5421 = !DILocation(line: 1831, column: 21, scope: !4554)
!5422 = !DILocation(line: 1831, column: 19, scope: !4554)
!5423 = !DILocation(line: 1831, column: 14, scope: !4554)
!5424 = !DILocation(line: 1832, column: 24, scope: !4554)
!5425 = !DILocation(line: 1832, column: 30, scope: !4554)
!5426 = !DILocation(line: 1832, column: 22, scope: !4554)
!5427 = !DILocation(line: 1832, column: 18, scope: !4554)
!5428 = !DILocation(line: 1834, column: 4, scope: !4555)
!5429 = !DILocation(line: 1836, column: 37, scope: !4555)
!5430 = !DILocation(line: 1836, column: 29, scope: !4555)
!5431 = !DILocation(line: 1838, column: 37, scope: !4565)
!5432 = !DILocation(line: 1838, column: 48, scope: !4565)
!5433 = !DILocation(line: 1838, column: 67, scope: !4565)
!5434 = !DILocation(line: 1839, column: 49, scope: !4565)
!5435 = !DILocation(line: 1839, column: 70, scope: !4565)
!5436 = !DILocation(line: 1839, column: 47, scope: !4565)
!5437 = !DILocation(line: 1841, column: 43, scope: !4565)
!5438 = !DILocation(line: 1843, column: 33, scope: !4566)
!5439 = !DILocation(line: 1847, column: 49, scope: !4566)
!5440 = !DILocation(line: 1847, column: 47, scope: !4566)
!5441 = !DILocation(line: 1848, column: 46, scope: !4566)
!5442 = !DILocation(line: 1848, column: 71, scope: !4566)
!5443 = !DILocation(line: 1848, column: 43, scope: !4566)
!5444 = !DILocation(line: 1849, column: 37, scope: !4566)
!5445 = !DILocation(line: 1853, column: 45, scope: !4566)
!5446 = !DILocation(line: 1851, column: 37, scope: !4566)
!5447 = !DILocation(line: 1855, column: 29, scope: !4555)
!5448 = !DILocation(line: 1859, column: 14, scope: !4555)
!5449 = !DILocation(line: 1860, column: 8, scope: !4555)
!5450 = !DILocation(line: 1862, column: 21, scope: !4555)
!5451 = !DILocation(line: 1862, column: 19, scope: !4555)
!5452 = !DILocation(line: 1862, column: 14, scope: !4555)
!5453 = !DILocation(line: 1863, column: 8, scope: !4555)
!5454 = !DILocation(line: 1865, column: 7, scope: !4556)
!5455 = !DILocation(line: 1866, column: 9, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !4557, file: !2, line: 1865, column: 14)
!5457 = !DILocation(line: 1868, column: 3, scope: !4559)
!5458 = !DILocation(line: 1868, column: 15, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !4560, file: !2, line: 1868, column: 14)
!5460 = !DILocation(line: 1868, column: 14, scope: !5459)
!5461 = !DILocation(line: 1868, column: 21, scope: !5459)
!5462 = !DILocation(line: 1868, column: 14, scope: !4560)
!5463 = !DILocation(line: 1869, column: 19, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5459, file: !2, line: 1868, column: 48)
!5465 = !DILocation(line: 1869, column: 12, scope: !5464)
!5466 = !DILocation(line: 1870, column: 16, scope: !5464)
!5467 = !DILocation(line: 1871, column: 7, scope: !5464)
!5468 = !DILocation(line: 1873, column: 12, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5459, file: !2, line: 1872, column: 10)
!5470 = !DILocation(line: 1874, column: 16, scope: !5469)
!5471 = !DILocation(line: 1816, column: 6, scope: !4562)
!5472 = distinct !{!5472, !5473, !5474}
!5473 = !DILocation(line: 1816, column: 6, scope: !4563)
!5474 = !DILocation(line: 1876, column: 6, scope: !4563)
!5475 = !DILocation(line: 1878, column: 6, scope: !4487)
!5476 = !DILocation(line: 1880, column: 67, scope: !4487)
!5477 = !DILocation(line: 1880, column: 6, scope: !4487)
!5478 = !DILocation(line: 1460, column: 5, scope: !4489)
!5479 = distinct !{!5479, !5480, !5481}
!5480 = !DILocation(line: 1460, column: 5, scope: !4490)
!5481 = !DILocation(line: 1882, column: 5, scope: !4490)
!5482 = !DILocation(line: 1889, column: 1, scope: !4456)
!5483 = !DILocation(line: 1890, column: 12, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !4456, file: !2, line: 1890, column: 5)
!5485 = !DILocation(line: 1890, column: 10, scope: !5484)
!5486 = !DILocation(line: 1891, column: 8, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !2, line: 1890, column: 38)
!5488 = distinct !DILexicalBlock(scope: !5484, file: !2, line: 1890, column: 5)
!5489 = !DILocation(line: 1891, column: 6, scope: !5487)
!5490 = !DILocation(line: 1892, column: 6, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5487, file: !2, line: 1892, column: 6)
!5492 = !DILocation(line: 1892, column: 10, scope: !5491)
!5493 = !DILocation(line: 1892, column: 6, scope: !5487)
!5494 = !DILocation(line: 1893, column: 6, scope: !5491)
!5495 = !DILocation(line: 1896, column: 6, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5487, file: !2, line: 1896, column: 6)
!5497 = !DILocation(line: 1896, column: 22, scope: !5496)
!5498 = !DILocation(line: 1896, column: 6, scope: !5487)
!5499 = !DILocation(line: 1898, column: 17, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5496, file: !2, line: 1896, column: 40)
!5501 = !DILocation(line: 1898, column: 6, scope: !5500)
!5502 = !DILocation(line: 1898, column: 15, scope: !5500)
!5503 = !DILocation(line: 1899, column: 17, scope: !5500)
!5504 = !DILocation(line: 1899, column: 6, scope: !5500)
!5505 = !DILocation(line: 1899, column: 15, scope: !5500)
!5506 = !DILocation(line: 1900, column: 2, scope: !5500)
!5507 = !DILocation(line: 1904, column: 13, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5496, file: !2, line: 1902, column: 7)
!5509 = !DILocation(line: 1904, column: 7, scope: !5508)
!5510 = !DILocation(line: 1904, column: 11, scope: !5508)
!5511 = !DILocation(line: 1907, column: 5, scope: !5487)
!5512 = !DILocation(line: 1890, column: 21, scope: !5488)
!5513 = !DILocation(line: 1890, column: 5, scope: !5488)
!5514 = distinct !{!5514, !5515, !5516}
!5515 = !DILocation(line: 1890, column: 5, scope: !5484)
!5516 = !DILocation(line: 1907, column: 5, scope: !5484)
!5517 = !DILocation(line: 1923, column: 12, scope: !4456)
!5518 = !DILocation(line: 1923, column: 6, scope: !4456)
!5519 = !DILocation(line: 1923, column: 10, scope: !4456)
!5520 = !DILocation(line: 1924, column: 12, scope: !4456)
!5521 = !DILocation(line: 1924, column: 5, scope: !4456)
!5522 = !DILocation(line: 1925, column: 1, scope: !4456)
!5523 = distinct !DISubprogram(name: "copy_shallow_obj_x", scope: !2, file: !2, line: 1935, type: !5524, scopeLine: 1940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !5526)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!93, !93, !128, !2130, !2131}
!5526 = !{!5527, !5528, !5529, !5530, !5531, !5532}
!5527 = !DILocalVariable(name: "obj", arg: 1, scope: !5523, file: !2, line: 1935, type: !93)
!5528 = !DILocalVariable(name: "sz", arg: 2, scope: !5523, file: !2, line: 1935, type: !128)
!5529 = !DILocalVariable(name: "hpp", arg: 3, scope: !5523, file: !2, line: 1935, type: !2130)
!5530 = !DILocalVariable(name: "off_heap", arg: 4, scope: !5523, file: !2, line: 1935, type: !2131)
!5531 = !DILocalVariable(name: "source_ptr", scope: !5523, file: !2, line: 1941, type: !92)
!5532 = !DILocalVariable(name: "target_ptr", scope: !5523, file: !2, line: 1942, type: !92)
!5533 = !DILocation(line: 1935, column: 32, scope: !5523)
!5534 = !DILocation(line: 1935, column: 42, scope: !5523)
!5535 = !DILocation(line: 1935, column: 54, scope: !5523)
!5536 = !DILocation(line: 1935, column: 71, scope: !5523)
!5537 = !DILocation(line: 1941, column: 5, scope: !5523)
!5538 = !DILocation(line: 1941, column: 12, scope: !5523)
!5539 = !DILocation(line: 1942, column: 5, scope: !5523)
!5540 = !DILocation(line: 1942, column: 12, scope: !5523)
!5541 = !DILocation(line: 1944, column: 9, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5523, file: !2, line: 1944, column: 9)
!5543 = !DILocation(line: 1944, column: 12, scope: !5542)
!5544 = !DILocation(line: 1944, column: 9, scope: !5523)
!5545 = !DILocation(line: 1946, column: 16, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5542, file: !2, line: 1944, column: 18)
!5547 = !DILocation(line: 1946, column: 9, scope: !5546)
!5548 = !DILocation(line: 1952, column: 18, scope: !5523)
!5549 = !DILocation(line: 1952, column: 16, scope: !5523)
!5550 = !DILocation(line: 1956, column: 33, scope: !5523)
!5551 = !DILocation(line: 1956, column: 45, scope: !5523)
!5552 = !DILocation(line: 1956, column: 49, scope: !5523)
!5553 = !DILocation(line: 1956, column: 54, scope: !5523)
!5554 = !DILocation(line: 1956, column: 18, scope: !5523)
!5555 = !DILocation(line: 1956, column: 16, scope: !5523)
!5556 = !DILocation(line: 1959, column: 12, scope: !5523)
!5557 = !DILocation(line: 1959, column: 28, scope: !5523)
!5558 = !DILocation(line: 1959, column: 53, scope: !5523)
!5559 = !DILocation(line: 1959, column: 5, scope: !5523)
!5560 = !DILocation(line: 1960, column: 1, scope: !5523)
!5561 = distinct !DISubprogram(name: "copy_shallow_x", scope: !2, file: !2, line: 1970, type: !5562, scopeLine: 1976, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !5564)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!92, !2146, !128, !2130, !2131}
!5564 = !{!5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5574, !5575, !5577, !5581, !5583, !5585, !5586, !5588, !5589, !5591, !5594, !5595}
!5565 = !DILocalVariable(name: "ptr", arg: 1, scope: !5561, file: !2, line: 1970, type: !2146)
!5566 = !DILocalVariable(name: "sz", arg: 2, scope: !5561, file: !2, line: 1970, type: !128)
!5567 = !DILocalVariable(name: "hpp", arg: 3, scope: !5561, file: !2, line: 1970, type: !2130)
!5568 = !DILocalVariable(name: "off_heap", arg: 4, scope: !5561, file: !2, line: 1971, type: !2131)
!5569 = !DILocalVariable(name: "tp", scope: !5561, file: !2, line: 1977, type: !92)
!5570 = !DILocalVariable(name: "hp", scope: !5561, file: !2, line: 1978, type: !92)
!5571 = !DILocalVariable(name: "res", scope: !5561, file: !2, line: 1979, type: !92)
!5572 = !DILocalVariable(name: "offs", scope: !5561, file: !2, line: 1980, type: !5573)
!5573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !96)
!5574 = !DILocalVariable(name: "empty_tuple_literal", scope: !5561, file: !2, line: 1981, type: !3868)
!5575 = !DILocalVariable(name: "val", scope: !5576, file: !2, line: 1984, type: !93)
!5576 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 1983, column: 18)
!5577 = !DILocalVariable(name: "pb", scope: !5578, file: !2, line: 2005, type: !264)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !2, line: 2004, column: 3)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !2, line: 2000, column: 41)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !2, line: 1986, column: 28)
!5581 = !DILocalVariable(name: "funp", scope: !5582, file: !2, line: 2013, type: !98)
!5582 = distinct !DILexicalBlock(scope: !5579, file: !2, line: 2012, column: 17)
!5583 = !DILocalVariable(name: "etp", scope: !5584, file: !2, line: 2027, type: !298)
!5584 = distinct !DILexicalBlock(scope: !5579, file: !2, line: 2026, column: 3)
!5585 = !DILabel(scope: !5579, name: "off_heap_common", file: !2, line: 2034)
!5586 = !DILocalVariable(name: "ohh", scope: !5587, file: !2, line: 2036, type: !228)
!5587 = distinct !DILexicalBlock(scope: !5579, file: !2, line: 2035, column: 3)
!5588 = !DILocalVariable(name: "tari", scope: !5587, file: !2, line: 2037, type: !130)
!5589 = !DILocalVariable(name: "rtp", scope: !5590, file: !2, line: 2048, type: !1618)
!5590 = distinct !DILexicalBlock(scope: !5579, file: !2, line: 2047, column: 23)
!5591 = !DILocalVariable(name: "mreft", scope: !5592, file: !2, line: 2050, type: !1666)
!5592 = distinct !DILexicalBlock(scope: !5593, file: !2, line: 2049, column: 32)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !2, line: 2049, column: 7)
!5594 = !DILabel(scope: !5579, name: "default_copy", file: !2, line: 2056)
!5595 = !DILocalVariable(name: "tari", scope: !5596, file: !2, line: 2059, type: !130)
!5596 = distinct !DILexicalBlock(scope: !5579, file: !2, line: 2058, column: 3)
!5597 = !DILocation(line: 1970, column: 44, scope: !5561)
!5598 = !DILocation(line: 1970, column: 54, scope: !5561)
!5599 = !DILocation(line: 1970, column: 66, scope: !5561)
!5600 = !DILocation(line: 1971, column: 34, scope: !5561)
!5601 = !DILocation(line: 1977, column: 5, scope: !5561)
!5602 = !DILocation(line: 1977, column: 12, scope: !5561)
!5603 = !DILocation(line: 1977, column: 17, scope: !5561)
!5604 = !DILocation(line: 1978, column: 5, scope: !5561)
!5605 = !DILocation(line: 1978, column: 12, scope: !5561)
!5606 = !DILocation(line: 1978, column: 18, scope: !5561)
!5607 = !DILocation(line: 1978, column: 17, scope: !5561)
!5608 = !DILocation(line: 1979, column: 5, scope: !5561)
!5609 = !DILocation(line: 1979, column: 12, scope: !5561)
!5610 = !DILocation(line: 1979, column: 18, scope: !5561)
!5611 = !DILocation(line: 1980, column: 5, scope: !5561)
!5612 = !DILocation(line: 1980, column: 16, scope: !5561)
!5613 = !DILocation(line: 1980, column: 24, scope: !5561)
!5614 = !DILocation(line: 1980, column: 29, scope: !5561)
!5615 = !DILocation(line: 1980, column: 27, scope: !5561)
!5616 = !DILocation(line: 1980, column: 33, scope: !5561)
!5617 = !DILocation(line: 1981, column: 5, scope: !5561)
!5618 = !DILocation(line: 1981, column: 17, scope: !5561)
!5619 = !DILocation(line: 1982, column: 9, scope: !5561)
!5620 = !DILocation(line: 1983, column: 5, scope: !5561)
!5621 = !DILocation(line: 1983, column: 14, scope: !5561)
!5622 = !DILocation(line: 1984, column: 2, scope: !5576)
!5623 = !DILocation(line: 1984, column: 8, scope: !5576)
!5624 = !DILocation(line: 1984, column: 17, scope: !5576)
!5625 = !DILocation(line: 1984, column: 14, scope: !5576)
!5626 = !DILocation(line: 1986, column: 10, scope: !5576)
!5627 = !DILocation(line: 1986, column: 2, scope: !5576)
!5628 = !DILocation(line: 1988, column: 14, scope: !5580)
!5629 = !DILocation(line: 1988, column: 9, scope: !5580)
!5630 = !DILocation(line: 1988, column: 12, scope: !5580)
!5631 = !DILocation(line: 1989, column: 6, scope: !5580)
!5632 = !DILocation(line: 1992, column: 17, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5580, file: !2, line: 1992, column: 17)
!5634 = !DILocation(line: 1992, column: 24, scope: !5633)
!5635 = !DILocation(line: 1992, column: 21, scope: !5633)
!5636 = !DILocation(line: 1992, column: 17, scope: !5580)
!5637 = !DILocation(line: 1993, column: 25, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5633, file: !2, line: 1992, column: 45)
!5639 = !DILocation(line: 1993, column: 20, scope: !5638)
!5640 = !DILocation(line: 1993, column: 23, scope: !5638)
!5641 = !DILocation(line: 1994, column: 13, scope: !5638)
!5642 = !DILocation(line: 1995, column: 25, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5633, file: !2, line: 1994, column: 20)
!5644 = !DILocation(line: 1995, column: 20, scope: !5643)
!5645 = !DILocation(line: 1995, column: 23, scope: !5643)
!5646 = !DILocation(line: 1997, column: 6, scope: !5580)
!5647 = !DILocation(line: 1999, column: 14, scope: !5580)
!5648 = !DILocation(line: 1999, column: 9, scope: !5580)
!5649 = !DILocation(line: 1999, column: 12, scope: !5580)
!5650 = !DILocation(line: 2000, column: 14, scope: !5580)
!5651 = !DILocation(line: 2000, column: 18, scope: !5580)
!5652 = !DILocation(line: 2000, column: 6, scope: !5580)
!5653 = !DILocation(line: 2005, column: 7, scope: !5578)
!5654 = !DILocation(line: 2005, column: 16, scope: !5578)
!5655 = !DILocation(line: 2005, column: 34, scope: !5578)
!5656 = !DILocation(line: 2005, column: 36, scope: !5578)
!5657 = !DILocation(line: 2006, column: 22, scope: !5578)
!5658 = !DILocation(line: 2006, column: 26, scope: !5578)
!5659 = !DILocation(line: 2006, column: 31, scope: !5578)
!5660 = !DILocation(line: 2006, column: 38, scope: !5578)
!5661 = !DILocation(line: 2006, column: 7, scope: !5578)
!5662 = !DILocation(line: 2007, column: 7, scope: !5578)
!5663 = !DILocation(line: 2007, column: 7, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5578, file: !2, line: 2007, column: 7)
!5665 = !DILocation(line: 2008, column: 3, scope: !5579)
!5666 = !DILocation(line: 2009, column: 3, scope: !5579)
!5667 = !DILocation(line: 2013, column: 21, scope: !5582)
!5668 = !DILocation(line: 2013, column: 34, scope: !5582)
!5669 = !DILocation(line: 2013, column: 58, scope: !5582)
!5670 = !DILocation(line: 2013, column: 60, scope: !5582)
!5671 = !DILocation(line: 2015, column: 25, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5582, file: !2, line: 2015, column: 25)
!5673 = !DILocation(line: 2015, column: 25, scope: !5582)
!5674 = !DILocation(line: 2016, column: 40, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5672, file: !2, line: 2015, column: 45)
!5676 = !DILocation(line: 2016, column: 46, scope: !5675)
!5677 = !DILocation(line: 2016, column: 52, scope: !5675)
!5678 = !DILocation(line: 2016, column: 57, scope: !5675)
!5679 = !DILocation(line: 2016, column: 25, scope: !5675)
!5680 = !DILocation(line: 2017, column: 25, scope: !5675)
!5681 = !DILocation(line: 2020, column: 25, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5672, file: !2, line: 2018, column: 28)
!5683 = !DILocation(line: 2022, column: 17, scope: !5579)
!5684 = !DILocation(line: 2027, column: 7, scope: !5584)
!5685 = !DILocation(line: 2027, column: 22, scope: !5584)
!5686 = !DILocation(line: 2027, column: 47, scope: !5584)
!5687 = !DILocation(line: 2027, column: 49, scope: !5584)
!5688 = !DILocation(line: 2031, column: 41, scope: !5584)
!5689 = !DILocation(line: 2031, column: 46, scope: !5584)
!5690 = !DILocation(line: 2031, column: 55, scope: !5584)
!5691 = !DILocation(line: 2031, column: 21, scope: !5584)
!5692 = !DILocation(line: 2033, column: 3, scope: !5579)
!5693 = !DILocation(line: 2033, column: 3, scope: !5584)
!5694 = !DILocation(line: 2034, column: 6, scope: !5579)
!5695 = !DILocation(line: 2036, column: 7, scope: !5587)
!5696 = !DILocation(line: 2036, column: 35, scope: !5587)
!5697 = !DILocation(line: 2036, column: 71, scope: !5587)
!5698 = !DILocation(line: 2036, column: 73, scope: !5587)
!5699 = !DILocation(line: 2037, column: 7, scope: !5587)
!5700 = !DILocation(line: 2037, column: 11, scope: !5587)
!5701 = !DILocation(line: 2037, column: 18, scope: !5587)
!5702 = !DILocation(line: 2039, column: 13, scope: !5587)
!5703 = !DILocation(line: 2039, column: 10, scope: !5587)
!5704 = !DILocation(line: 2040, column: 7, scope: !5587)
!5705 = !DILocation(line: 2040, column: 18, scope: !5587)
!5706 = !DILocation(line: 2041, column: 15, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5587, file: !2, line: 2040, column: 22)
!5708 = !DILocation(line: 2041, column: 12, scope: !5707)
!5709 = !DILocation(line: 2041, column: 7, scope: !5707)
!5710 = !DILocation(line: 2041, column: 10, scope: !5707)
!5711 = distinct !{!5711, !5704, !5712, !1882}
!5712 = !DILocation(line: 2042, column: 7, scope: !5587)
!5713 = !DILocation(line: 2043, column: 19, scope: !5587)
!5714 = !DILocation(line: 2043, column: 29, scope: !5587)
!5715 = !DILocation(line: 2043, column: 7, scope: !5587)
!5716 = !DILocation(line: 2043, column: 12, scope: !5587)
!5717 = !DILocation(line: 2043, column: 17, scope: !5587)
!5718 = !DILocation(line: 2044, column: 25, scope: !5587)
!5719 = !DILocation(line: 2044, column: 7, scope: !5587)
!5720 = !DILocation(line: 2044, column: 17, scope: !5587)
!5721 = !DILocation(line: 2044, column: 23, scope: !5587)
!5722 = !DILocation(line: 2045, column: 3, scope: !5579)
!5723 = !DILocation(line: 2046, column: 3, scope: !5579)
!5724 = !DILocation(line: 2048, column: 3, scope: !5590)
!5725 = !DILocation(line: 2048, column: 17, scope: !5590)
!5726 = !DILocation(line: 2048, column: 41, scope: !5590)
!5727 = !DILocation(line: 2048, column: 44, scope: !5590)
!5728 = !DILocation(line: 2049, column: 7, scope: !5593)
!5729 = !DILocation(line: 2049, column: 7, scope: !5590)
!5730 = !DILocation(line: 2050, column: 7, scope: !5592)
!5731 = !DILocation(line: 2050, column: 22, scope: !5592)
!5732 = !DILocation(line: 2050, column: 48, scope: !5592)
!5733 = !DILocation(line: 2051, column: 22, scope: !5592)
!5734 = !DILocation(line: 2051, column: 29, scope: !5592)
!5735 = !DILocation(line: 2051, column: 33, scope: !5592)
!5736 = !DILocation(line: 2051, column: 40, scope: !5592)
!5737 = !DILocation(line: 2051, column: 7, scope: !5592)
!5738 = !DILocation(line: 2053, column: 3, scope: !5593)
!5739 = !DILocation(line: 2055, column: 6, scope: !5579)
!5740 = !DILocation(line: 2055, column: 6, scope: !5590)
!5741 = !DILocation(line: 2056, column: 13, scope: !5579)
!5742 = !DILocation(line: 2059, column: 7, scope: !5596)
!5743 = !DILocation(line: 2059, column: 11, scope: !5596)
!5744 = !DILocation(line: 2059, column: 18, scope: !5596)
!5745 = !DILocation(line: 2061, column: 13, scope: !5596)
!5746 = !DILocation(line: 2061, column: 10, scope: !5596)
!5747 = !DILocation(line: 2062, column: 7, scope: !5596)
!5748 = !DILocation(line: 2062, column: 18, scope: !5596)
!5749 = !DILocation(line: 2063, column: 15, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5596, file: !2, line: 2062, column: 22)
!5751 = !DILocation(line: 2063, column: 12, scope: !5750)
!5752 = !DILocation(line: 2063, column: 7, scope: !5750)
!5753 = !DILocation(line: 2063, column: 10, scope: !5750)
!5754 = distinct !{!5754, !5747, !5755, !1882}
!5755 = !DILocation(line: 2064, column: 7, scope: !5596)
!5756 = !DILocation(line: 2065, column: 3, scope: !5579)
!5757 = !DILocation(line: 2066, column: 3, scope: !5579)
!5758 = !DILocation(line: 2068, column: 6, scope: !5580)
!5759 = !DILocation(line: 2070, column: 5, scope: !5561)
!5760 = distinct !{!5760, !5620, !5759, !1882}
!5761 = !DILocation(line: 2071, column: 12, scope: !5561)
!5762 = !DILocation(line: 2071, column: 6, scope: !5561)
!5763 = !DILocation(line: 2071, column: 10, scope: !5561)
!5764 = !DILocation(line: 2072, column: 12, scope: !5561)
!5765 = !DILocation(line: 2073, column: 1, scope: !5561)
!5766 = !DILocation(line: 2072, column: 5, scope: !5561)
!5767 = distinct !DISubprogram(name: "erts_move_multi_frags", scope: !2, file: !2, line: 2080, type: !5768, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !5770)
!5768 = !DISubroutineType(types: !5769)
!5769 = !{null, !2130, !2131, !849, !92, !61, !130}
!5770 = !{!5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5787, !5788}
!5771 = !DILocalVariable(name: "hpp", arg: 1, scope: !5767, file: !2, line: 2080, type: !2130)
!5772 = !DILocalVariable(name: "off_heap", arg: 2, scope: !5767, file: !2, line: 2080, type: !2131)
!5773 = !DILocalVariable(name: "first", arg: 3, scope: !5767, file: !2, line: 2080, type: !849)
!5774 = !DILocalVariable(name: "refs", arg: 4, scope: !5767, file: !2, line: 2081, type: !92)
!5775 = !DILocalVariable(name: "nrefs", arg: 5, scope: !5767, file: !2, line: 2081, type: !61)
!5776 = !DILocalVariable(name: "literals", arg: 6, scope: !5767, file: !2, line: 2081, type: !130)
!5777 = !DILocalVariable(name: "bp", scope: !5767, file: !2, line: 2083, type: !849)
!5778 = !DILocalVariable(name: "hp_start", scope: !5767, file: !2, line: 2084, type: !92)
!5779 = !DILocalVariable(name: "hp_end", scope: !5767, file: !2, line: 2085, type: !92)
!5780 = !DILocalVariable(name: "hp", scope: !5767, file: !2, line: 2086, type: !92)
!5781 = !DILocalVariable(name: "i", scope: !5767, file: !2, line: 2087, type: !61)
!5782 = !DILocalVariable(name: "literal_tag", scope: !5767, file: !2, line: 2088, type: !93)
!5783 = !DILocalVariable(name: "ptr", scope: !5784, file: !2, line: 2101, type: !92)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !2, line: 2100, column: 40)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !2, line: 2100, column: 5)
!5786 = distinct !DILexicalBlock(scope: !5767, file: !2, line: 2100, column: 5)
!5787 = !DILocalVariable(name: "val", scope: !5784, file: !2, line: 2102, type: !93)
!5788 = !DILocalVariable(name: "gval", scope: !5784, file: !2, line: 2103, type: !93)
!5789 = !DILocation(line: 2080, column: 36, scope: !5767)
!5790 = !DILocation(line: 2080, column: 53, scope: !5767)
!5791 = !DILocation(line: 2080, column: 80, scope: !5767)
!5792 = !DILocation(line: 2081, column: 14, scope: !5767)
!5793 = !DILocation(line: 2081, column: 29, scope: !5767)
!5794 = !DILocation(line: 2081, column: 40, scope: !5767)
!5795 = !DILocation(line: 2083, column: 5, scope: !5767)
!5796 = !DILocation(line: 2083, column: 22, scope: !5767)
!5797 = !DILocation(line: 2084, column: 5, scope: !5767)
!5798 = !DILocation(line: 2084, column: 12, scope: !5767)
!5799 = !DILocation(line: 2084, column: 24, scope: !5767)
!5800 = !DILocation(line: 2084, column: 23, scope: !5767)
!5801 = !DILocation(line: 2085, column: 5, scope: !5767)
!5802 = !DILocation(line: 2085, column: 12, scope: !5767)
!5803 = !DILocation(line: 2086, column: 5, scope: !5767)
!5804 = !DILocation(line: 2086, column: 12, scope: !5767)
!5805 = !DILocation(line: 2087, column: 5, scope: !5767)
!5806 = !DILocation(line: 2087, column: 14, scope: !5767)
!5807 = !DILocation(line: 2088, column: 5, scope: !5767)
!5808 = !DILocation(line: 2088, column: 11, scope: !5767)
!5809 = !DILocation(line: 2093, column: 17, scope: !5767)
!5810 = !DILocation(line: 2096, column: 13, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5767, file: !2, line: 2096, column: 5)
!5812 = !DILocation(line: 2096, column: 12, scope: !5811)
!5813 = !DILocation(line: 2096, column: 10, scope: !5811)
!5814 = !DILocation(line: 2096, column: 20, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5811, file: !2, line: 2096, column: 5)
!5816 = !DILocation(line: 2096, column: 22, scope: !5815)
!5817 = !DILocation(line: 2096, column: 5, scope: !5811)
!5818 = !DILocation(line: 2097, column: 16, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5815, file: !2, line: 2096, column: 43)
!5820 = !DILocation(line: 2097, column: 21, scope: !5819)
!5821 = !DILocation(line: 2097, column: 25, scope: !5819)
!5822 = !DILocation(line: 2097, column: 35, scope: !5819)
!5823 = !DILocation(line: 2097, column: 2, scope: !5819)
!5824 = !DILocation(line: 2098, column: 5, scope: !5819)
!5825 = !DILocation(line: 2096, column: 33, scope: !5815)
!5826 = !DILocation(line: 2096, column: 37, scope: !5815)
!5827 = !DILocation(line: 2096, column: 32, scope: !5815)
!5828 = !DILocation(line: 2096, column: 5, scope: !5815)
!5829 = distinct !{!5829, !5817, !5830, !1882}
!5830 = !DILocation(line: 2098, column: 5, scope: !5811)
!5831 = !DILocation(line: 2099, column: 15, scope: !5767)
!5832 = !DILocation(line: 2099, column: 14, scope: !5767)
!5833 = !DILocation(line: 2099, column: 12, scope: !5767)
!5834 = !DILocation(line: 2100, column: 13, scope: !5786)
!5835 = !DILocation(line: 2100, column: 12, scope: !5786)
!5836 = !DILocation(line: 2100, column: 10, scope: !5786)
!5837 = !DILocation(line: 2100, column: 23, scope: !5785)
!5838 = !DILocation(line: 2100, column: 26, scope: !5785)
!5839 = !DILocation(line: 2100, column: 25, scope: !5785)
!5840 = !DILocation(line: 2100, column: 5, scope: !5786)
!5841 = !DILocation(line: 2101, column: 2, scope: !5784)
!5842 = !DILocation(line: 2101, column: 9, scope: !5784)
!5843 = !DILocation(line: 2102, column: 2, scope: !5784)
!5844 = !DILocation(line: 2102, column: 8, scope: !5784)
!5845 = !DILocation(line: 2103, column: 2, scope: !5784)
!5846 = !DILocation(line: 2103, column: 8, scope: !5784)
!5847 = !DILocation(line: 2103, column: 16, scope: !5784)
!5848 = !DILocation(line: 2103, column: 15, scope: !5784)
!5849 = !DILocation(line: 2104, column: 10, scope: !5784)
!5850 = !DILocation(line: 2104, column: 2, scope: !5784)
!5851 = !DILocation(line: 2106, column: 12, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5784, file: !2, line: 2104, column: 29)
!5853 = !DILocation(line: 2106, column: 10, scope: !5852)
!5854 = !DILocation(line: 2107, column: 13, scope: !5852)
!5855 = !DILocation(line: 2107, column: 12, scope: !5852)
!5856 = !DILocation(line: 2107, column: 10, scope: !5852)
!5857 = !DILocation(line: 2108, column: 10, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5852, file: !2, line: 2108, column: 10)
!5859 = !DILocation(line: 2108, column: 10, scope: !5852)
!5860 = !DILocation(line: 2113, column: 9, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !2, line: 2108, column: 31)
!5862 = !DILocation(line: 2113, column: 4, scope: !5861)
!5863 = !DILocation(line: 2113, column: 7, scope: !5861)
!5864 = !DILocation(line: 2114, column: 6, scope: !5861)
!5865 = !DILocation(line: 2115, column: 6, scope: !5852)
!5866 = !DILocation(line: 2117, column: 12, scope: !5852)
!5867 = !DILocation(line: 2117, column: 10, scope: !5852)
!5868 = !DILocation(line: 2118, column: 13, scope: !5852)
!5869 = !DILocation(line: 2118, column: 12, scope: !5852)
!5870 = !DILocation(line: 2118, column: 10, scope: !5852)
!5871 = !DILocation(line: 2119, column: 10, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5852, file: !2, line: 2119, column: 10)
!5873 = !DILocation(line: 2119, column: 10, scope: !5852)
!5874 = !DILocation(line: 2120, column: 9, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5872, file: !2, line: 2119, column: 30)
!5876 = !DILocation(line: 2120, column: 7, scope: !5875)
!5877 = !DILocation(line: 2124, column: 9, scope: !5875)
!5878 = !DILocation(line: 2124, column: 4, scope: !5875)
!5879 = !DILocation(line: 2124, column: 7, scope: !5875)
!5880 = !DILocation(line: 2125, column: 6, scope: !5875)
!5881 = !DILocation(line: 2126, column: 6, scope: !5852)
!5882 = !DILocation(line: 2128, column: 10, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5852, file: !2, line: 2128, column: 10)
!5884 = !DILocation(line: 2128, column: 10, scope: !5852)
!5885 = !DILocation(line: 2129, column: 9, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5883, file: !2, line: 2128, column: 33)
!5887 = !DILocation(line: 2129, column: 6, scope: !5886)
!5888 = !DILocation(line: 2130, column: 6, scope: !5886)
!5889 = !DILocation(line: 2131, column: 6, scope: !5852)
!5890 = !DILocation(line: 2133, column: 5, scope: !5785)
!5891 = !DILocation(line: 2133, column: 5, scope: !5784)
!5892 = !DILocation(line: 2100, column: 34, scope: !5785)
!5893 = !DILocation(line: 2100, column: 5, scope: !5785)
!5894 = distinct !{!5894, !5840, !5895, !1882}
!5895 = !DILocation(line: 2133, column: 5, scope: !5786)
!5896 = !DILocation(line: 2134, column: 11, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5767, file: !2, line: 2134, column: 5)
!5898 = !DILocation(line: 2134, column: 10, scope: !5897)
!5899 = !DILocation(line: 2134, column: 15, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5897, file: !2, line: 2134, column: 5)
!5901 = !DILocation(line: 2134, column: 17, scope: !5900)
!5902 = !DILocation(line: 2134, column: 16, scope: !5900)
!5903 = !DILocation(line: 2134, column: 5, scope: !5897)
!5904 = !DILocation(line: 2135, column: 25, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5900, file: !2, line: 2134, column: 29)
!5906 = !DILocation(line: 2135, column: 30, scope: !5905)
!5907 = !DILocation(line: 2135, column: 34, scope: !5905)
!5908 = !DILocation(line: 2135, column: 12, scope: !5905)
!5909 = !DILocation(line: 2135, column: 2, scope: !5905)
!5910 = !DILocation(line: 2135, column: 7, scope: !5905)
!5911 = !DILocation(line: 2135, column: 10, scope: !5905)
!5912 = !DILocation(line: 2136, column: 5, scope: !5905)
!5913 = !DILocation(line: 2134, column: 24, scope: !5900)
!5914 = !DILocation(line: 2134, column: 5, scope: !5900)
!5915 = distinct !{!5915, !5903, !5916, !1882}
!5916 = !DILocation(line: 2136, column: 5, scope: !5897)
!5917 = !DILocation(line: 2137, column: 1, scope: !5767)
!5918 = distinct !DISubprogram(name: "move_one_frag", scope: !2, file: !2, line: 2140, type: !5919, scopeLine: 2141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !5921)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{null, !2130, !849, !2131, !130}
!5921 = !{!5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5932, !5935}
!5922 = !DILocalVariable(name: "hpp", arg: 1, scope: !5918, file: !2, line: 2140, type: !2130)
!5923 = !DILocalVariable(name: "frag", arg: 2, scope: !5918, file: !2, line: 2140, type: !849)
!5924 = !DILocalVariable(name: "off_heap", arg: 3, scope: !5918, file: !2, line: 2140, type: !2131)
!5925 = !DILocalVariable(name: "literals", arg: 4, scope: !5918, file: !2, line: 2140, type: !130)
!5926 = !DILocalVariable(name: "ptr", scope: !5918, file: !2, line: 2142, type: !92)
!5927 = !DILocalVariable(name: "end", scope: !5918, file: !2, line: 2143, type: !92)
!5928 = !DILocalVariable(name: "dummy_ref", scope: !5918, file: !2, line: 2144, type: !93)
!5929 = !DILocalVariable(name: "hp", scope: !5918, file: !2, line: 2145, type: !92)
!5930 = !DILocalVariable(name: "val", scope: !5931, file: !2, line: 2148, type: !93)
!5931 = distinct !DILexicalBlock(scope: !5918, file: !2, line: 2147, column: 24)
!5932 = !DILocalVariable(name: "hdr", scope: !5933, file: !2, line: 2154, type: !228)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !2, line: 2153, column: 29)
!5934 = distinct !DILexicalBlock(scope: !5931, file: !2, line: 2153, column: 13)
!5935 = !DILocalVariable(name: "funp", scope: !5936, file: !2, line: 2173, type: !98)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !2, line: 2172, column: 17)
!5937 = distinct !DILexicalBlock(scope: !5933, file: !2, line: 2159, column: 48)
!5938 = !DILocation(line: 2140, column: 23, scope: !5918)
!5939 = !DILocation(line: 2140, column: 45, scope: !5918)
!5940 = !DILocation(line: 2140, column: 63, scope: !5918)
!5941 = !DILocation(line: 2140, column: 77, scope: !5918)
!5942 = !DILocation(line: 2142, column: 5, scope: !5918)
!5943 = !DILocation(line: 2142, column: 12, scope: !5918)
!5944 = !DILocation(line: 2142, column: 18, scope: !5918)
!5945 = !DILocation(line: 2142, column: 24, scope: !5918)
!5946 = !DILocation(line: 2143, column: 5, scope: !5918)
!5947 = !DILocation(line: 2143, column: 12, scope: !5918)
!5948 = !DILocation(line: 2143, column: 18, scope: !5918)
!5949 = !DILocation(line: 2143, column: 24, scope: !5918)
!5950 = !DILocation(line: 2143, column: 30, scope: !5918)
!5951 = !DILocation(line: 2143, column: 22, scope: !5918)
!5952 = !DILocation(line: 2144, column: 5, scope: !5918)
!5953 = !DILocation(line: 2144, column: 11, scope: !5918)
!5954 = !DILocation(line: 2145, column: 5, scope: !5918)
!5955 = !DILocation(line: 2145, column: 12, scope: !5918)
!5956 = !DILocation(line: 2145, column: 18, scope: !5918)
!5957 = !DILocation(line: 2145, column: 17, scope: !5918)
!5958 = !DILocation(line: 2147, column: 5, scope: !5918)
!5959 = !DILocation(line: 2147, column: 12, scope: !5918)
!5960 = !DILocation(line: 2147, column: 19, scope: !5918)
!5961 = !DILocation(line: 2147, column: 16, scope: !5918)
!5962 = !DILocation(line: 2148, column: 9, scope: !5931)
!5963 = !DILocation(line: 2148, column: 15, scope: !5931)
!5964 = !DILocation(line: 2150, column: 16, scope: !5931)
!5965 = !DILocation(line: 2150, column: 15, scope: !5931)
!5966 = !DILocation(line: 2150, column: 13, scope: !5931)
!5967 = !DILocation(line: 2153, column: 13, scope: !5934)
!5968 = !DILocation(line: 2153, column: 13, scope: !5931)
!5969 = !DILocation(line: 2154, column: 13, scope: !5933)
!5970 = !DILocation(line: 2154, column: 41, scope: !5933)
!5971 = !DILocation(line: 2154, column: 76, scope: !5933)
!5972 = !DILocation(line: 2157, column: 30, scope: !5933)
!5973 = !DILocation(line: 2157, column: 35, scope: !5933)
!5974 = !DILocation(line: 2157, column: 19, scope: !5933)
!5975 = !DILocation(line: 2157, column: 17, scope: !5933)
!5976 = !DILocation(line: 2159, column: 21, scope: !5933)
!5977 = !DILocation(line: 2159, column: 25, scope: !5933)
!5978 = !DILocation(line: 2159, column: 13, scope: !5933)
!5979 = !DILocation(line: 2161, column: 22, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5937, file: !2, line: 2161, column: 21)
!5981 = !DILocation(line: 2161, column: 21, scope: !5937)
!5982 = !DILocation(line: 2162, column: 21, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5980, file: !2, line: 2161, column: 47)
!5984 = !DILocation(line: 2168, column: 29, scope: !5937)
!5985 = !DILocation(line: 2168, column: 39, scope: !5937)
!5986 = !DILocation(line: 2168, column: 17, scope: !5937)
!5987 = !DILocation(line: 2168, column: 22, scope: !5937)
!5988 = !DILocation(line: 2168, column: 27, scope: !5937)
!5989 = !DILocation(line: 2169, column: 35, scope: !5937)
!5990 = !DILocation(line: 2169, column: 17, scope: !5937)
!5991 = !DILocation(line: 2169, column: 27, scope: !5937)
!5992 = !DILocation(line: 2169, column: 33, scope: !5937)
!5993 = !DILocation(line: 2170, column: 17, scope: !5937)
!5994 = !DILocation(line: 2173, column: 21, scope: !5936)
!5995 = !DILocation(line: 2173, column: 34, scope: !5936)
!5996 = !DILocation(line: 2173, column: 55, scope: !5936)
!5997 = !DILocation(line: 2175, column: 25, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5936, file: !2, line: 2175, column: 25)
!5999 = !DILocation(line: 2175, column: 25, scope: !5936)
!6000 = !DILocation(line: 2176, column: 37, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5998, file: !2, line: 2175, column: 45)
!6002 = !DILocation(line: 2176, column: 47, scope: !6001)
!6003 = !DILocation(line: 2176, column: 25, scope: !6001)
!6004 = !DILocation(line: 2176, column: 30, scope: !6001)
!6005 = !DILocation(line: 2176, column: 35, scope: !6001)
!6006 = !DILocation(line: 2177, column: 43, scope: !6001)
!6007 = !DILocation(line: 2177, column: 25, scope: !6001)
!6008 = !DILocation(line: 2177, column: 35, scope: !6001)
!6009 = !DILocation(line: 2177, column: 41, scope: !6001)
!6010 = !DILocation(line: 2178, column: 21, scope: !6001)
!6011 = !DILocation(line: 2181, column: 17, scope: !5937)
!6012 = !DILocation(line: 2182, column: 17, scope: !5937)
!6013 = !DILocation(line: 2184, column: 9, scope: !5934)
!6014 = !DILocation(line: 2184, column: 9, scope: !5933)
!6015 = !DILocation(line: 2186, column: 23, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5934, file: !2, line: 2184, column: 16)
!6017 = !DILocation(line: 2186, column: 28, scope: !6016)
!6018 = !DILocation(line: 2186, column: 13, scope: !6016)
!6019 = !DILocation(line: 2187, column: 17, scope: !6016)
!6020 = !DILocation(line: 2189, column: 5, scope: !5918)
!6021 = distinct !{!6021, !5958, !6020, !1882}
!6022 = !DILocation(line: 2191, column: 12, scope: !5918)
!6023 = !DILocation(line: 2191, column: 6, scope: !5918)
!6024 = !DILocation(line: 2191, column: 10, scope: !5918)
!6025 = !DILocation(line: 2192, column: 5, scope: !5918)
!6026 = !DILocation(line: 2192, column: 5, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5918, file: !2, line: 2192, column: 5)
!6028 = !DILocation(line: 2193, column: 5, scope: !5918)
!6029 = !DILocation(line: 2193, column: 11, scope: !5918)
!6030 = !DILocation(line: 2193, column: 20, scope: !5918)
!6031 = !DILocation(line: 2193, column: 26, scope: !5918)
!6032 = !DILocation(line: 2194, column: 1, scope: !5918)
!6033 = distinct !DISubprogram(name: "follow_moved", scope: !1525, file: !1525, line: 105, type: !6034, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6036)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!93, !93, !93}
!6036 = !{!6037, !6038, !6039}
!6037 = !DILocalVariable(name: "term", arg: 1, scope: !6033, file: !1525, line: 105, type: !93)
!6038 = !DILocalVariable(name: "xptr_tag", arg: 2, scope: !6033, file: !1525, line: 105, type: !93)
!6039 = !DILocalVariable(name: "ptr", scope: !6033, file: !1525, line: 107, type: !92)
!6040 = !DILocation(line: 105, column: 42, scope: !6033)
!6041 = !DILocation(line: 105, column: 54, scope: !6033)
!6042 = !DILocation(line: 107, column: 5, scope: !6033)
!6043 = !DILocation(line: 107, column: 12, scope: !6033)
!6044 = !DILocation(line: 108, column: 13, scope: !6033)
!6045 = !DILocation(line: 108, column: 5, scope: !6033)
!6046 = !DILocation(line: 112, column: 8, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6033, file: !1525, line: 108, column: 32)
!6048 = !DILocation(line: 112, column: 6, scope: !6047)
!6049 = !DILocation(line: 113, column: 6, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6047, file: !1525, line: 113, column: 6)
!6051 = !DILocation(line: 113, column: 6, scope: !6047)
!6052 = !DILocation(line: 113, column: 37, scope: !6050)
!6053 = !DILocation(line: 113, column: 36, scope: !6050)
!6054 = !DILocation(line: 113, column: 44, scope: !6050)
!6055 = !DILocation(line: 113, column: 42, scope: !6050)
!6056 = !DILocation(line: 113, column: 33, scope: !6050)
!6057 = !DILocation(line: 113, column: 28, scope: !6050)
!6058 = !DILocation(line: 114, column: 2, scope: !6047)
!6059 = !DILocation(line: 116, column: 8, scope: !6047)
!6060 = !DILocation(line: 116, column: 6, scope: !6047)
!6061 = !DILocation(line: 117, column: 6, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6047, file: !1525, line: 117, column: 6)
!6063 = !DILocation(line: 117, column: 6, scope: !6047)
!6064 = !DILocation(line: 117, column: 37, scope: !6062)
!6065 = !DILocation(line: 117, column: 47, scope: !6062)
!6066 = !DILocation(line: 117, column: 45, scope: !6062)
!6067 = !DILocation(line: 117, column: 34, scope: !6062)
!6068 = !DILocation(line: 117, column: 29, scope: !6062)
!6069 = !DILocation(line: 118, column: 2, scope: !6047)
!6070 = !DILocation(line: 121, column: 5, scope: !6047)
!6071 = !DILocation(line: 122, column: 12, scope: !6033)
!6072 = !DILocation(line: 123, column: 1, scope: !6033)
!6073 = !DILocation(line: 122, column: 5, scope: !6033)
!6074 = distinct !DISubprogram(name: "erts_is_in_literal_range", scope: !1378, file: !1378, line: 329, type: !6075, scopeLine: 330, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6077)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{!130, !395}
!6077 = !{!6078}
!6078 = !DILocalVariable(name: "ptr", arg: 1, scope: !6074, file: !1378, line: 329, type: !395)
!6079 = !DILocation(line: 329, column: 36, scope: !6074)
!6080 = !DILocation(line: 340, column: 12, scope: !6074)
!6081 = !DILocation(line: 340, column: 5, scope: !6074)
!6082 = distinct !DISubprogram(name: "ethr_atomic_inc", scope: !142, file: !142, line: 5104, type: !6083, scopeLine: 5105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6085)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{null, !1667}
!6085 = !{!6086}
!6086 = !DILocalVariable(name: "var", arg: 1, scope: !6082, file: !142, line: 5104, type: !1667)
!6087 = !DILocation(line: 5104, column: 62, scope: !6082)
!6088 = !DILocation(line: 5117, column: 31, scope: !6082)
!6089 = !DILocation(line: 5117, column: 5, scope: !6082)
!6090 = !DILocation(line: 5121, column: 1, scope: !6082)
!6091 = distinct !DISubprogram(name: "ethr_native_atomic64_inc_mb", scope: !144, file: !144, line: 203, type: !6092, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6095)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{null, !6094}
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!6095 = !{!6096}
!6096 = !DILocalVariable(name: "var", arg: 1, scope: !6091, file: !144, line: 203, type: !6094)
!6097 = !DILocation(line: 203, column: 42, scope: !6091)
!6098 = !DILocation(line: 207, column: 9, scope: !6091)
!6099 = !DILocation(line: 207, column: 14, scope: !6091)
!6100 = !DILocation(line: 208, column: 8, scope: !6091)
!6101 = !DILocation(line: 208, column: 13, scope: !6091)
!6102 = !DILocation(line: 205, column: 5, scope: !6091)
!6103 = !{i64 2315058}
!6104 = !DILocation(line: 210, column: 1, scope: !6091)
!6105 = distinct !DISubprogram(name: "erts_refc_inctest", scope: !94, file: !94, line: 1001, type: !6106, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6108)
!6106 = !DISubroutineType(types: !6107)
!6107 = !{!1668, !3795, !1668}
!6108 = !{!6109, !6110, !6111}
!6109 = !DILocalVariable(name: "refcp", arg: 1, scope: !6105, file: !94, line: 1001, type: !3795)
!6110 = !DILocalVariable(name: "min_val", arg: 2, scope: !6105, file: !94, line: 1001, type: !1668)
!6111 = !DILocalVariable(name: "val", scope: !6105, file: !94, line: 1003, type: !1668)
!6112 = !DILocation(line: 1001, column: 32, scope: !6105)
!6113 = !DILocation(line: 1001, column: 51, scope: !6105)
!6114 = !DILocation(line: 1003, column: 5, scope: !6105)
!6115 = !DILocation(line: 1003, column: 17, scope: !6105)
!6116 = !DILocation(line: 1003, column: 66, scope: !6105)
!6117 = !DILocation(line: 1003, column: 23, scope: !6105)
!6118 = !DILocation(line: 1010, column: 12, scope: !6105)
!6119 = !DILocation(line: 1011, column: 1, scope: !6105)
!6120 = !DILocation(line: 1010, column: 5, scope: !6105)
!6121 = distinct !DISubprogram(name: "ethr_atomic_inc_read", scope: !142, file: !142, line: 4627, type: !6122, scopeLine: 4628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6124)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{!1668, !1667}
!6124 = !{!6125, !6126}
!6125 = !DILocalVariable(name: "var", arg: 1, scope: !6121, file: !142, line: 4627, type: !1667)
!6126 = !DILocalVariable(name: "res", scope: !6121, file: !142, line: 4629, type: !1668)
!6127 = !DILocation(line: 4627, column: 74, scope: !6121)
!6128 = !DILocation(line: 4629, column: 5, scope: !6121)
!6129 = !DILocation(line: 4629, column: 17, scope: !6121)
!6130 = !DILocation(line: 4643, column: 38, scope: !6121)
!6131 = !DILocation(line: 4643, column: 11, scope: !6121)
!6132 = !DILocation(line: 4643, column: 9, scope: !6121)
!6133 = !DILocation(line: 4645, column: 12, scope: !6121)
!6134 = !DILocation(line: 4646, column: 1, scope: !6121)
!6135 = !DILocation(line: 4645, column: 5, scope: !6121)
!6136 = distinct !DISubprogram(name: "ethr_atomic_add_read", scope: !142, file: !142, line: 4205, type: !6137, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6139)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{!1668, !1667, !1668}
!6139 = !{!6140, !6141, !6142}
!6140 = !DILocalVariable(name: "var", arg: 1, scope: !6136, file: !142, line: 4205, type: !1667)
!6141 = !DILocalVariable(name: "val", arg: 2, scope: !6136, file: !142, line: 4205, type: !1668)
!6142 = !DILocalVariable(name: "res", scope: !6136, file: !142, line: 4207, type: !1668)
!6143 = !DILocation(line: 4205, column: 74, scope: !6136)
!6144 = !DILocation(line: 4205, column: 91, scope: !6136)
!6145 = !DILocation(line: 4207, column: 5, scope: !6136)
!6146 = !DILocation(line: 4207, column: 17, scope: !6136)
!6147 = !DILocation(line: 4219, column: 58, scope: !6136)
!6148 = !DILocation(line: 4219, column: 80, scope: !6136)
!6149 = !DILocation(line: 4219, column: 25, scope: !6136)
!6150 = !DILocation(line: 4219, column: 9, scope: !6136)
!6151 = !DILocation(line: 4235, column: 12, scope: !6136)
!6152 = !DILocation(line: 4236, column: 1, scope: !6136)
!6153 = !DILocation(line: 4235, column: 5, scope: !6136)
!6154 = distinct !DISubprogram(name: "ethr_native_atomic64_add_return_mb", scope: !144, file: !144, line: 235, type: !6155, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6157)
!6155 = !DISubroutineType(types: !6156)
!6156 = !{!149, !6094, !149}
!6157 = !{!6158, !6159, !6160}
!6158 = !DILocalVariable(name: "var", arg: 1, scope: !6154, file: !144, line: 235, type: !6094)
!6159 = !DILocalVariable(name: "incr", arg: 2, scope: !6154, file: !144, line: 235, type: !149)
!6160 = !DILocalVariable(name: "tmp", scope: !6154, file: !144, line: 237, type: !149)
!6161 = !DILocation(line: 235, column: 49, scope: !6154)
!6162 = !DILocation(line: 235, column: 68, scope: !6154)
!6163 = !DILocation(line: 237, column: 5, scope: !6154)
!6164 = !DILocation(line: 237, column: 19, scope: !6154)
!6165 = !DILocation(line: 239, column: 11, scope: !6154)
!6166 = !DILocation(line: 239, column: 9, scope: !6154)
!6167 = !DILocation(line: 243, column: 8, scope: !6154)
!6168 = !DILocation(line: 243, column: 13, scope: !6154)
!6169 = !DILocation(line: 243, column: 27, scope: !6154)
!6170 = !DILocation(line: 240, column: 5, scope: !6154)
!6171 = !{i64 2315840}
!6172 = !DILocation(line: 246, column: 12, scope: !6154)
!6173 = !DILocation(line: 246, column: 18, scope: !6154)
!6174 = !DILocation(line: 246, column: 16, scope: !6154)
!6175 = !DILocation(line: 247, column: 1, scope: !6154)
!6176 = !DILocation(line: 246, column: 5, scope: !6154)
!6177 = distinct !DISubprogram(name: "move_boxed", scope: !1525, file: !1525, line: 60, type: !6178, scopeLine: 62, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6180)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!92, !2146, !93, !2130, !92}
!6180 = !{!6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188}
!6181 = !DILocalVariable(name: "ptr", arg: 1, scope: !6177, file: !1525, line: 60, type: !2146)
!6182 = !DILocalVariable(name: "hdr", arg: 2, scope: !6177, file: !1525, line: 60, type: !93)
!6183 = !DILocalVariable(name: "hpp", arg: 3, scope: !6177, file: !1525, line: 60, type: !2130)
!6184 = !DILocalVariable(name: "orig", arg: 4, scope: !6177, file: !1525, line: 61, type: !92)
!6185 = !DILocalVariable(name: "gval", scope: !6177, file: !1525, line: 63, type: !93)
!6186 = !DILocalVariable(name: "nelts", scope: !6177, file: !1525, line: 64, type: !96)
!6187 = !DILocalVariable(name: "htop", scope: !6177, file: !1525, line: 65, type: !2146)
!6188 = !DILocalVariable(name: "sb", scope: !6189, file: !1525, line: 72, type: !251)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !1525, line: 71, column: 9)
!6190 = distinct !DILexicalBlock(scope: !6177, file: !1525, line: 69, column: 42)
!6191 = !DILocation(line: 60, column: 56, scope: !6177)
!6192 = !DILocation(line: 60, column: 67, scope: !6177)
!6193 = !DILocation(line: 60, column: 80, scope: !6177)
!6194 = !DILocation(line: 61, column: 42, scope: !6177)
!6195 = !DILocation(line: 63, column: 5, scope: !6177)
!6196 = !DILocation(line: 63, column: 11, scope: !6177)
!6197 = !DILocation(line: 64, column: 5, scope: !6177)
!6198 = !DILocation(line: 64, column: 10, scope: !6177)
!6199 = !DILocation(line: 65, column: 5, scope: !6177)
!6200 = !DILocation(line: 65, column: 26, scope: !6177)
!6201 = !DILocation(line: 65, column: 34, scope: !6177)
!6202 = !DILocation(line: 65, column: 33, scope: !6177)
!6203 = !DILocation(line: 68, column: 13, scope: !6177)
!6204 = !DILocation(line: 68, column: 11, scope: !6177)
!6205 = !DILocation(line: 69, column: 14, scope: !6177)
!6206 = !DILocation(line: 69, column: 19, scope: !6177)
!6207 = !DILocation(line: 69, column: 5, scope: !6177)
!6208 = !DILocation(line: 72, column: 13, scope: !6189)
!6209 = !DILocation(line: 72, column: 24, scope: !6189)
!6210 = !DILocation(line: 72, column: 42, scope: !6189)
!6211 = !DILocation(line: 74, column: 17, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6189, file: !1525, line: 74, column: 17)
!6213 = !DILocation(line: 74, column: 21, scope: !6212)
!6214 = !DILocation(line: 74, column: 29, scope: !6212)
!6215 = !DILocation(line: 74, column: 34, scope: !6212)
!6216 = !DILocation(line: 74, column: 37, scope: !6212)
!6217 = !DILocation(line: 74, column: 41, scope: !6212)
!6218 = !DILocation(line: 74, column: 49, scope: !6212)
!6219 = !DILocation(line: 74, column: 54, scope: !6212)
!6220 = !DILocation(line: 75, column: 17, scope: !6212)
!6221 = !DILocation(line: 75, column: 21, scope: !6212)
!6222 = !DILocation(line: 75, column: 33, scope: !6212)
!6223 = !DILocation(line: 75, column: 38, scope: !6212)
!6224 = !DILocation(line: 75, column: 41, scope: !6212)
!6225 = !DILocation(line: 75, column: 45, scope: !6212)
!6226 = !DILocation(line: 75, column: 50, scope: !6212)
!6227 = !DILocation(line: 74, column: 17, scope: !6189)
!6228 = !DILocation(line: 76, column: 55, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6212, file: !1525, line: 75, column: 72)
!6230 = !DILocation(line: 76, column: 60, scope: !6229)
!6231 = !DILocation(line: 76, column: 65, scope: !6229)
!6232 = !DILocation(line: 76, column: 24, scope: !6229)
!6233 = !DILocation(line: 76, column: 17, scope: !6229)
!6234 = !DILocation(line: 78, column: 9, scope: !6190)
!6235 = !DILocation(line: 79, column: 14, scope: !6190)
!6236 = !DILocation(line: 80, column: 9, scope: !6190)
!6237 = !DILocation(line: 82, column: 13, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6190, file: !1525, line: 82, column: 13)
!6239 = !DILocation(line: 82, column: 13, scope: !6190)
!6240 = !DILocation(line: 82, column: 44, scope: !6238)
!6241 = !DILocation(line: 82, column: 66, scope: !6238)
!6242 = !DILocation(line: 82, column: 42, scope: !6238)
!6243 = !DILocation(line: 82, column: 37, scope: !6238)
!6244 = !DILocation(line: 83, column: 23, scope: !6238)
!6245 = !DILocation(line: 83, column: 20, scope: !6238)
!6246 = !DILocation(line: 84, column: 5, scope: !6190)
!6247 = !DILocation(line: 85, column: 45, scope: !6190)
!6248 = !DILocation(line: 85, column: 52, scope: !6190)
!6249 = !DILocation(line: 85, column: 29, scope: !6190)
!6250 = !DILocation(line: 85, column: 60, scope: !6190)
!6251 = !DILocation(line: 85, column: 27, scope: !6190)
!6252 = !DILocation(line: 85, column: 64, scope: !6190)
!6253 = !DILocation(line: 87, column: 15, scope: !6177)
!6254 = !DILocation(line: 87, column: 13, scope: !6177)
!6255 = !DILocation(line: 88, column: 15, scope: !6177)
!6256 = !DILocation(line: 88, column: 6, scope: !6177)
!6257 = !DILocation(line: 88, column: 13, scope: !6177)
!6258 = !DILocation(line: 89, column: 15, scope: !6177)
!6259 = !DILocation(line: 89, column: 10, scope: !6177)
!6260 = !DILocation(line: 89, column: 13, scope: !6177)
!6261 = !DILocation(line: 90, column: 15, scope: !6177)
!6262 = !DILocation(line: 90, column: 9, scope: !6177)
!6263 = !DILocation(line: 90, column: 13, scope: !6177)
!6264 = !DILocation(line: 91, column: 5, scope: !6177)
!6265 = !DILocation(line: 91, column: 17, scope: !6177)
!6266 = !DILocation(line: 91, column: 35, scope: !6177)
!6267 = !DILocation(line: 91, column: 31, scope: !6177)
!6268 = !DILocation(line: 91, column: 26, scope: !6177)
!6269 = !DILocation(line: 91, column: 29, scope: !6177)
!6270 = distinct !{!6270, !6264, !6266, !1882}
!6271 = !DILocation(line: 93, column: 12, scope: !6177)
!6272 = !DILocation(line: 93, column: 6, scope: !6177)
!6273 = !DILocation(line: 93, column: 10, scope: !6177)
!6274 = !DILocation(line: 94, column: 12, scope: !6177)
!6275 = !DILocation(line: 94, column: 5, scope: !6177)
!6276 = !DILocation(line: 95, column: 1, scope: !6177)
!6277 = distinct !DISubprogram(name: "move_cons", scope: !1525, file: !1525, line: 41, type: !6278, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !57, retainedNodes: !6280)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{null, !2146, !93, !2130, !92}
!6280 = !{!6281, !6282, !6283, !6284, !6285, !6286}
!6281 = !DILocalVariable(name: "ptr", arg: 1, scope: !6277, file: !1525, line: 41, type: !2146)
!6282 = !DILocalVariable(name: "car", arg: 2, scope: !6277, file: !1525, line: 41, type: !93)
!6283 = !DILocalVariable(name: "hpp", arg: 3, scope: !6277, file: !1525, line: 41, type: !2130)
!6284 = !DILocalVariable(name: "orig", arg: 4, scope: !6277, file: !1525, line: 42, type: !92)
!6285 = !DILocalVariable(name: "htop", scope: !6277, file: !1525, line: 44, type: !2146)
!6286 = !DILocalVariable(name: "gval", scope: !6277, file: !1525, line: 45, type: !93)
!6287 = !DILocation(line: 41, column: 53, scope: !6277)
!6288 = !DILocation(line: 41, column: 64, scope: !6277)
!6289 = !DILocation(line: 41, column: 77, scope: !6277)
!6290 = !DILocation(line: 42, column: 39, scope: !6277)
!6291 = !DILocation(line: 44, column: 5, scope: !6277)
!6292 = !DILocation(line: 44, column: 26, scope: !6277)
!6293 = !DILocation(line: 44, column: 34, scope: !6277)
!6294 = !DILocation(line: 44, column: 33, scope: !6277)
!6295 = !DILocation(line: 45, column: 5, scope: !6277)
!6296 = !DILocation(line: 45, column: 11, scope: !6277)
!6297 = !DILocation(line: 47, column: 15, scope: !6277)
!6298 = !DILocation(line: 47, column: 5, scope: !6277)
!6299 = !DILocation(line: 47, column: 13, scope: !6277)
!6300 = !DILocation(line: 48, column: 15, scope: !6277)
!6301 = !DILocation(line: 48, column: 5, scope: !6277)
!6302 = !DILocation(line: 48, column: 13, scope: !6277)
!6303 = !DILocation(line: 49, column: 15, scope: !6277)
!6304 = !DILocation(line: 49, column: 13, scope: !6277)
!6305 = !DILocation(line: 50, column: 15, scope: !6277)
!6306 = !DILocation(line: 50, column: 6, scope: !6277)
!6307 = !DILocation(line: 50, column: 13, scope: !6277)
!6308 = !DILocation(line: 51, column: 5, scope: !6277)
!6309 = !DILocation(line: 51, column: 13, scope: !6277)
!6310 = !DILocation(line: 52, column: 15, scope: !6277)
!6311 = !DILocation(line: 52, column: 5, scope: !6277)
!6312 = !DILocation(line: 52, column: 13, scope: !6277)
!6313 = !DILocation(line: 53, column: 6, scope: !6277)
!6314 = !DILocation(line: 53, column: 12, scope: !6277)
!6315 = !DILocation(line: 54, column: 1, scope: !6277)
!6316 = !DISubprogram(name: "erts_sub_binary_to_heap_binary", scope: !1525, file: !1525, line: 36, type: !6317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!92, !92, !2130, !92}
